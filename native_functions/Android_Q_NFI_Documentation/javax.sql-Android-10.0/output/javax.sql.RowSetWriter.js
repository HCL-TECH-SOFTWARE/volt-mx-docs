Ext.data.JsonP.javax_sql_RowSetWriter({"tagname":"class","name":"javax.sql.RowSetWriter","autodetected":{},"files":[{"filename":"RowSetWriter.js","href":"RowSetWriter.html#javax-sql-RowSetWriter"}],"since":"1.4","members":[{"name":"writeData","tagname":"method","owner":"javax.sql.RowSetWriter","id":"method-writeData","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.sql.RowSetWriter","short_doc":"An object that implements the RowSetWriter interface,\n called a writer. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/RowSetWriter.html#javax-sql-RowSetWriter' target='_blank'>RowSetWriter.js</a></div></pre><div class='doc-contents'><p>An object that implements the <code>RowSetWriter</code> interface,\n called a <i>writer</i>. A writer may be registered with a <code>RowSet</code>\n object that supports the reader/writer paradigm.\n <P>\n If a disconnected <code>RowSet</code> object modifies some of its data,\n and it has a writer associated with it, it may be implemented so that it\n calls on the writer's <code>writeData</code> method internally\n to write the updates back to the data source. In order to do this, the writer\n must first establish a connection with the rowset's data source.\n <P>\n If the data to be updated has already been changed in the data source, there\n is a conflict, in which case the writer will not write\n the changes to the data source.  The algorithm the writer uses for preventing\n or limiting conflicts depends entirely on its implementation.</P></P></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-writeData' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.RowSetWriter'>javax.sql.RowSetWriter</span><br/><a href='source/RowSetWriter.html#javax-sql-RowSetWriter-method-writeData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.RowSetWriter-method-writeData' class='name expandable'>writeData</a>( <span class='pre'>caller</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes the changes in this RowSetWriter object's\n rowset back to the data source from which it got its data. ...</div><div class='long'><p>Writes the changes in this <code>RowSetWriter</code> object's\n rowset back to the data source from which it got its data.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>caller</span> : Object {RowSetInternal}<div class='sub-desc'><p>the <code>RowSet</code> object (1) that has implemented the\n         <code>RowSetInternal</code> interface, (2) with which this writer is\n        registered, and (3) that called this method internally</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the modified data was written; <code>false</code>\n          if not, which will be the case if there is a conflict\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});