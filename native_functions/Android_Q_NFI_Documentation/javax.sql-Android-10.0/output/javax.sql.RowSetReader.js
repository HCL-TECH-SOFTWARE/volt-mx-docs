Ext.data.JsonP.javax_sql_RowSetReader({"tagname":"class","name":"javax.sql.RowSetReader","autodetected":{},"files":[{"filename":"RowSetReader.js","href":"RowSetReader.html#javax-sql-RowSetReader"}],"since":"1.4","members":[{"name":"readData","tagname":"method","owner":"javax.sql.RowSetReader","id":"method-readData","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.sql.RowSetReader","short_doc":"The facility that a disconnected RowSet object calls on\n to populate itself with rows of data. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/RowSetReader.html#javax-sql-RowSetReader' target='_blank'>RowSetReader.js</a></div></pre><div class='doc-contents'><p>The facility that a disconnected <code>RowSet</code> object calls on\n to populate itself with rows of data. A reader (an object implementing the\n <code>RowSetReader</code> interface) may be registered with\n a <code>RowSet</code> object that supports the reader/writer paradigm.\n When the <code>RowSet</code> object's <code>execute</code> method is\n called, it in turn calls the reader's <code>readData</code> method.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-readData' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.RowSetReader'>javax.sql.RowSetReader</span><br/><a href='source/RowSetReader.html#javax-sql-RowSetReader-method-readData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.RowSetReader-method-readData' class='name expandable'>readData</a>( <span class='pre'>caller</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads the new contents of the calling RowSet object. ...</div><div class='long'><p>Reads the new contents of the calling <code>RowSet</code> object.\n In order to call this method, a <code>RowSet</code>\n object must have implemented the <code>RowSetInternal</code> interface\n and registered this <code>RowSetReader</code> object as its reader.\n The <code>readData</code>  method is invoked internally\n by the <code>RowSet.execute</code> method for rowsets that support the\n reader/writer paradigm.</p>\n\n<p> <P>The <code>readData</code> method adds rows to the caller.\n It can be implemented in a wide variety of ways and can even\n populate the caller with rows from a nonrelational data source.\n In general, a reader may invoke any of the rowset's methods,\n with one exception. Calling the method <code>execute</code> will\n cause an <code>SQLException</code> to be thrown\n because <code>execute</code> may not be called recursively.  Also,\n when a reader invokes <code>RowSet</code> methods, no listeners\n are notified; that is, no <code>RowSetEvent</code> objects are\n generated and no <code>RowSetListener</code> methods are invoked.\n This is true because listeners are already being notified by the method\n <code>execute</code>.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>caller</span> : Object {RowSetInternal}<div class='sub-desc'><p>the <code>RowSet</code> object (1) that has implemented the\n         <code>RowSetInternal</code> interface, (2) with which this reader is\n        registered, and (3) whose <code>execute</code> method called this reader\n@exception SQLException if a database access error occurs or this method\n            invokes the <code>RowSet.execute</code> method</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});