Ext.data.JsonP.javax_sql_PooledConnection({"tagname":"class","name":"javax.sql.PooledConnection","autodetected":{},"files":[{"filename":"PooledConnection.js","href":"PooledConnection.html#javax-sql-PooledConnection"}],"since":"1.4","members":[{"name":"addConnectionEventListener","tagname":"method","owner":"javax.sql.PooledConnection","id":"method-addConnectionEventListener","meta":{}},{"name":"addStatementEventListener","tagname":"method","owner":"javax.sql.PooledConnection","id":"method-addStatementEventListener","meta":{}},{"name":"close","tagname":"method","owner":"javax.sql.PooledConnection","id":"method-close","meta":{}},{"name":"getConnection","tagname":"method","owner":"javax.sql.PooledConnection","id":"method-getConnection","meta":{}},{"name":"removeConnectionEventListener","tagname":"method","owner":"javax.sql.PooledConnection","id":"method-removeConnectionEventListener","meta":{}},{"name":"removeStatementEventListener","tagname":"method","owner":"javax.sql.PooledConnection","id":"method-removeStatementEventListener","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.sql.PooledConnection","short_doc":"An object that provides hooks for connection pool management. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/PooledConnection.html#javax-sql-PooledConnection' target='_blank'>PooledConnection.js</a></div></pre><div class='doc-contents'><p>An object that provides hooks for connection pool management.\n A <code>PooledConnection</code> object\n represents a physical connection to a data source.  The connection\n can be recycled rather than being closed when an application is\n finished with it, thus reducing the number of connections that\n need to be made.\n <P>\n An application programmer does not use the <code>PooledConnection</code>\n interface directly; rather, it is used by a middle tier infrastructure\n that manages the pooling of connections.\n <P>\n When an application calls the method <code>DataSource.getConnection</code>,\n it gets back a <code>Connection</code> object.  If connection pooling is\n being done, that <code>Connection</code> object is actually a handle to\n a <code>PooledConnection</code> object, which is a physical connection.\n <P>\n The connection pool manager, typically the application server, maintains\n a pool of <code>PooledConnection</code> objects.  If there is a\n <code>PooledConnection</code> object available in the pool, the\n connection pool manager returns a <code>Connection</code> object that\n is a handle to that physical connection.\n If no <code>PooledConnection</code> object is available, the\n connection pool manager calls the <code>ConnectionPoolDataSource</code>\n method <code>getPoolConnection</code> to create a new physical connection.  The\n  JDBC driver implementing <code>ConnectionPoolDataSource</code> creates a\n  new <code>PooledConnection</code> object and returns a handle to it.\n <P>\n When an application closes a connection, it calls the <code>Connection</code>\n method <code>close</code>. When connection pooling is being done,\n the connection pool manager is notified because it has registered itself as\n a <code>ConnectionEventListener</code> object using the\n <code>ConnectionPool</code> method <code>addConnectionEventListener</code>.\n The connection pool manager deactivates the handle to\n the <code>PooledConnection</code> object and  returns the\n <code>PooledConnection</code> object to the pool of connections so that\n it can be used again.  Thus, when an application closes its connection,\n the underlying physical connection is recycled rather than being closed.\n <P>\n The physical connection is not closed until the connection pool manager\n calls the <code>PooledConnection</code> method <code>close</code>.\n This method is generally called to have an orderly shutdown of the server or\n if a fatal error has made the connection unusable.</P></P></P></P></P></p>\n\n<p> <p>\n A connection pool manager is often also a statement pool manager, maintining\n  a pool of <code>PreparedStatement</code> objects.\n  When an application closes a prepared statement, it calls the\n  <code>PreparedStatement</code>\n method <code>close</code>. When <code>Statement</code> pooling is being done,\n the pool manager is notified because it has registered itself as\n a <code>StatementEventListener</code> object using the\n <code>ConnectionPool</code> method <code>addStatementEventListener</code>.\n  Thus, when an application closes its  <code>PreparedStatement</code>,\n the underlying prepared statement is recycled rather than being closed.\n <P></P></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addConnectionEventListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.PooledConnection'>javax.sql.PooledConnection</span><br/><a href='source/PooledConnection.html#javax-sql-PooledConnection-method-addConnectionEventListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.PooledConnection-method-addConnectionEventListener' class='name expandable'>addConnectionEventListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers the given event listener so that it will be notified\n when an event occurs on this PooledConnection object. ...</div><div class='long'><p>Registers the given event listener so that it will be notified\n when an event occurs on this <code>PooledConnection</code> object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {ConnectionEventListener}<div class='sub-desc'><p>a component, usually the connection pool manager,\n        that has implemented the\n        <code>ConnectionEventListener</code> interface and wants to be\n        notified when the connection is closed or has an error\n@see <a href=\"#!/api/javax.sql.PooledConnection-method-removeConnectionEventListener\" rel=\"javax.sql.PooledConnection-method-removeConnectionEventListener\" class=\"docClass\">removeConnectionEventListener</a></p>\n</div></li></ul></div></div></div><div id='method-addStatementEventListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.PooledConnection'>javax.sql.PooledConnection</span><br/><a href='source/PooledConnection.html#javax-sql-PooledConnection-method-addStatementEventListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.PooledConnection-method-addStatementEventListener' class='name expandable'>addStatementEventListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a StatementEventListener with this PooledConnection object. ...</div><div class='long'><p>Registers a <code>StatementEventListener</code> with this <code>PooledConnection</code> object.  Components that\n wish to be notified when  <code>PreparedStatement</code>s created by the\n connection are closed or are detected to be invalid may use this method\n to register a <code>StatementEventListener</code> with this <code>PooledConnection</code> object.\n <p></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {StatementEventListener}<div class='sub-desc'><p>an component which implements the <code>StatementEventListener</code>\n                                      interface that is to be registered with this <code>PooledConnection</code> object\n <p></p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.PooledConnection'>javax.sql.PooledConnection</span><br/><a href='source/PooledConnection.html#javax-sql-PooledConnection-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.PooledConnection-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the physical connection that this PooledConnection\n object represents. ...</div><div class='long'><p>Closes the physical connection that this <code>PooledConnection</code>\n object represents.  An application never calls this method directly;\n it is called by the connection pool module, or manager.\n <P>\n See the <a href=\"#!/api/javax.sql.PooledConnection\" rel=\"javax.sql.PooledConnection\" class=\"docClass\">interface description</a> for more\n information.\n@exception SQLException if a database access error occurs\n@exception SQLFeatureNotSupportedException if the JDBC driver does not support\n this method</P></p>\n        <p>Available since: <b>1.4</b></p>\n</div></div></div><div id='method-getConnection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.PooledConnection'>javax.sql.PooledConnection</span><br/><a href='source/PooledConnection.html#javax-sql-PooledConnection-method-getConnection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.PooledConnection-method-getConnection' class='name expandable'>getConnection</a>( <span class='pre'></span> ) : Object {java.sql.Connection}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates and returns a Connection object that is a handle\n for the physical connection that\n this PooledConnection obj...</div><div class='long'><p>Creates and returns a <code>Connection</code> object that is a handle\n for the physical connection that\n this <code>PooledConnection</code> object represents.\n The connection pool manager calls this method when an application has\n called the method <code>DataSource.getConnection</code> and there are\n no <code>PooledConnection</code> objects available. See the\n <a href=\"#!/api/javax.sql.PooledConnection\" rel=\"javax.sql.PooledConnection\" class=\"docClass\">interface description</a> for more information.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.Connection}</span><div class='sub-desc'><p>a <code>Connection</code> object that is a handle to\n          this <code>PooledConnection</code> object\n@exception SQLException if a database access error occurs\n@exception SQLFeatureNotSupportedException if the JDBC driver does not support\n this method</p>\n</div></li></ul></div></div></div><div id='method-removeConnectionEventListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.PooledConnection'>javax.sql.PooledConnection</span><br/><a href='source/PooledConnection.html#javax-sql-PooledConnection-method-removeConnectionEventListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.PooledConnection-method-removeConnectionEventListener' class='name expandable'>removeConnectionEventListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the given event listener from the list of components that\n will be notified when an event occurs on this\n Poo...</div><div class='long'><p>Removes the given event listener from the list of components that\n will be notified when an event occurs on this\n <code>PooledConnection</code> object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {ConnectionEventListener}<div class='sub-desc'><p>a component, usually the connection pool manager,\n        that has implemented the\n        <code>ConnectionEventListener</code> interface and\n        been registered with this <code>PooledConnection</code> object as\n        a listener\n@see <a href=\"#!/api/javax.sql.PooledConnection-method-addConnectionEventListener\" rel=\"javax.sql.PooledConnection-method-addConnectionEventListener\" class=\"docClass\">addConnectionEventListener</a></p>\n</div></li></ul></div></div></div><div id='method-removeStatementEventListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.sql.PooledConnection'>javax.sql.PooledConnection</span><br/><a href='source/PooledConnection.html#javax-sql-PooledConnection-method-removeStatementEventListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.sql.PooledConnection-method-removeStatementEventListener' class='name expandable'>removeStatementEventListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the specified StatementEventListener from the list of\n components that will be notified when the driver detec...</div><div class='long'><p>Removes the specified <code>StatementEventListener</code> from the list of\n components that will be notified when the driver detects that a\n <code>PreparedStatement</code> has been closed or is invalid.\n <p></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {StatementEventListener}<div class='sub-desc'><p>the component which implements the\n                                      <code>StatementEventListener</code> interface that was previously\n                                      registered with this <code>PooledConnection</code> object\n <p></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});