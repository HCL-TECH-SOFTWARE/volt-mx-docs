Ext.data.JsonP.java_security_ProviderException({"tagname":"class","name":"java.security.ProviderException","autodetected":{},"files":[{"filename":"ProviderException.js","href":"ProviderException.html#java-security-ProviderException"}],"extends":"java.lang.RuntimeException","author":[{"tagname":"author","name":"Benjamin Renaud","email":null}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-java.security.ProviderException","short_doc":"A runtime exception for Provider exceptions (such as\n misconfiguration errors or unrecoverable internal errors),\n whi...","classIcon":"icon-class","superclasses":["java.lang.RuntimeException"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.RuntimeException<div class='subclass '><strong>java.security.ProviderException</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ProviderException.html#java-security-ProviderException' target='_blank'>ProviderException.js</a></div></pre><div class='doc-contents'><p>A runtime exception for Provider exceptions (such as\n misconfiguration errors or unrecoverable internal errors),\n which may be subclassed by Providers to\n throw specialized, provider-specific runtime errors.</p>\n</div><div class='members'></div></div>","meta":{}});