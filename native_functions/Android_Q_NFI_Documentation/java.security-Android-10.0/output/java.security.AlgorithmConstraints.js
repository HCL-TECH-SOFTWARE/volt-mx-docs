Ext.data.JsonP.java_security_AlgorithmConstraints({"tagname":"class","name":"java.security.AlgorithmConstraints","autodetected":{},"files":[{"filename":"AlgorithmConstraints.js","href":"AlgorithmConstraints.html#java-security-AlgorithmConstraints"}],"since":"1.7","members":[{"name":"permits","tagname":"method","owner":"java.security.AlgorithmConstraints","id":"method-permits","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.AlgorithmConstraints","short_doc":"This interface specifies constraints for cryptographic algorithms,\n keys (key sizes), and other algorithm parameters. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/AlgorithmConstraints.html#java-security-AlgorithmConstraints' target='_blank'>AlgorithmConstraints.js</a></div></pre><div class='doc-contents'><p>This interface specifies constraints for cryptographic algorithms,\n keys (key sizes), and other algorithm parameters.\n <p>\n {@code AlgorithmConstraints} objects are immutable.  An implementation\n of this interface should not provide methods that can change the state\n of an instance once it has been created.\n <p>\n Note that {@code AlgorithmConstraints} can be used to represent the\n restrictions described by the security properties\n {@code jdk.certpath.disabledAlgorithms} and\n {@code jdk.tls.disabledAlgorithms}, or could be used by a\n concrete {@code PKIXCertPathChecker} to check whether a specified\n certificate in the certification path contains the required algorithm\n constraints.</p>\n\n<p> @see javax.net.ssl.SSLParameters#getAlgorithmConstraints\n @see javax.net.ssl.SSLParameters#setAlgorithmConstraints(AlgorithmConstraints)</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-permits' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.AlgorithmConstraints'>java.security.AlgorithmConstraints</span><br/><a href='source/AlgorithmConstraints.html#java-security-AlgorithmConstraints-method-permits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.AlgorithmConstraints-method-permits' class='name expandable'>permits</a>( <span class='pre'>primitives, algorithm, key, parameters</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines whether an algorithm and the corresponding key are granted\n permission for the specified cryptographic pri...</div><div class='long'><p>Determines whether an algorithm and the corresponding key are granted\n permission for the specified cryptographic primitives.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>primitives</span> : Object {java.util.Set}<div class='sub-desc'><p>a set of cryptographic primitives</p>\n</div></li><li><span class='pre'>algorithm</span> : String<div class='sub-desc'><p>the algorithm name</p>\n</div></li><li><span class='pre'>key</span> : Object {Key}<div class='sub-desc'><p>the key</p>\n</div></li><li><span class='pre'>parameters</span> : Object {AlgorithmParameters}<div class='sub-desc'><p>the algorithm parameters, or null if no additional\n     parameters</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the key and the algorithm can be used for all of the\n     specified cryptographic primitives</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if primitives or algorithm is null\n     or empty, or the key is null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});