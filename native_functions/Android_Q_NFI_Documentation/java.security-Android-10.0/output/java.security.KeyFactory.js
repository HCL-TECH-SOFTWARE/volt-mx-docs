Ext.data.JsonP.java_security_KeyFactory({"tagname":"class","name":"java.security.KeyFactory","autodetected":{},"files":[{"filename":"KeyFactory.js","href":"KeyFactory.html#java-security-KeyFactory"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Jan Luehe","email":null}],"since":"1.2","members":[{"name":"generatePrivate","tagname":"method","owner":"java.security.KeyFactory","id":"method-generatePrivate","meta":{}},{"name":"generatePublic","tagname":"method","owner":"java.security.KeyFactory","id":"method-generatePublic","meta":{}},{"name":"getAlgorithm","tagname":"method","owner":"java.security.KeyFactory","id":"method-getAlgorithm","meta":{}},{"name":"getInstance","tagname":"method","owner":"java.security.KeyFactory","id":"method-getInstance","meta":{}},{"name":"getKeySpec","tagname":"method","owner":"java.security.KeyFactory","id":"method-getKeySpec","meta":{}},{"name":"getProvider","tagname":"method","owner":"java.security.KeyFactory","id":"method-getProvider","meta":{}},{"name":"translateKey","tagname":"method","owner":"java.security.KeyFactory","id":"method-translateKey","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.KeyFactory","short_doc":"Key factories are used to convert keys (opaque\n cryptographic keys of type {@code Key}) into key specifications\n (tra...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.security.KeyFactory</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/KeyFactory.html#java-security-KeyFactory' target='_blank'>KeyFactory.js</a></div></pre><div class='doc-contents'><p>Key factories are used to convert <I>keys</I> (opaque\n cryptographic keys of type {@code Key}) into <I>key specifications</I>\n (transparent representations of the underlying key material), and vice\n versa.</p>\n\n<p> <P> Key factories are bi-directional. That is, they allow you to build an\n opaque key object from a given key specification (key material), or to\n retrieve the underlying key material of a key object in a suitable format.</P></p>\n\n<p> <P> Multiple compatible key specifications may exist for the same key.\n For example, a DSA public key may be specified using\n {@code DSAPublicKeySpec} or\n {@code X509EncodedKeySpec}. A key factory can be used to translate\n between compatible key specifications.</P></p>\n\n<p> <P> The following is an example of how to use a key factory in order to\n instantiate a DSA public key from its encoding.\n Assume Alice has received a digital signature from Bob.\n Bob also sent her his public key (in encoded format) to verify\n his signature. Alice then performs the following actions:</P></p>\n\n<pre> X509EncodedKeySpec bobPubKeySpec = new X509EncodedKeySpec(bobEncodedPubKey);\n KeyFactory keyFactory = KeyFactory.getInstance(\"DSA\");\n PublicKey bobPubKey = keyFactory.generatePublic(bobPubKeySpec);\n Signature sig = Signature.getInstance(\"DSA\");\n sig.initVerify(bobPubKey);\n sig.update(data);\n sig.verify(signature);\n </pre>\n\n\n<p> <p> Android provides the following <code>KeyFactory</code> algorithms:\n <table>\n   <thead>\n     <tr>\n       <th>Algorithm</th>\n       <th>Supported API Levels</th>\n     </tr>\n   </thead>\n   <tbody>\n     <tr>\n       <td>DH</td>\n       <td>1+</td>\n     </tr>\n     <tr>\n       <td>DSA</td>\n       <td>1+</td>\n     </tr>\n     <tr>\n       <td>EC</td>\n       <td>11+</td>\n     </tr>\n     <tr>\n       <td>RSA</td>\n       <td>1+</td>\n     </tr>\n     <tr class=\"deprecated\">\n       <td>X.509</td>\n       <td>1-8</td>\n     </tr>\n   </tbody>\n </table></p>\n\n<p> These algorithms are described in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyFactory\">\n KeyFactory section</a> of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.</p>\n\n<p> @see Key\n @see PublicKey\n @see PrivateKey\n @see java.security.spec.KeySpec\n @see java.security.spec.DSAPublicKeySpec\n @see java.security.spec.X509EncodedKeySpec</p>\n        <p>Available since: <b>1.2</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-generatePrivate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.KeyFactory'>java.security.KeyFactory</span><br/><a href='source/KeyFactory.html#java-security-KeyFactory-method-generatePrivate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.KeyFactory-method-generatePrivate' class='name expandable'>generatePrivate</a>( <span class='pre'>keySpec</span> ) : Object {java.security.PrivateKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates a private key object from the provided key specification\n (key material). ...</div><div class='long'><p>Generates a private key object from the provided key specification\n (key material).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keySpec</span> : Object {KeySpec}<div class='sub-desc'><p>the specification (key material) of the private key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.PrivateKey}</span><div class='sub-desc'><p>the private key.\n@exception InvalidKeySpecException if the given key specification\n is inappropriate for this key factory to produce a private key.</p>\n</div></li></ul></div></div></div><div id='method-generatePublic' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.KeyFactory'>java.security.KeyFactory</span><br/><a href='source/KeyFactory.html#java-security-KeyFactory-method-generatePublic' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.KeyFactory-method-generatePublic' class='name expandable'>generatePublic</a>( <span class='pre'>keySpec</span> ) : Object {java.security.PublicKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates a public key object from the provided key specification\n (key material). ...</div><div class='long'><p>Generates a public key object from the provided key specification\n (key material).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keySpec</span> : Object {KeySpec}<div class='sub-desc'><p>the specification (key material) of the public key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.PublicKey}</span><div class='sub-desc'><p>the public key.\n@exception InvalidKeySpecException if the given key specification\n is inappropriate for this key factory to produce a public key.</p>\n</div></li></ul></div></div></div><div id='method-getAlgorithm' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.KeyFactory'>java.security.KeyFactory</span><br/><a href='source/KeyFactory.html#java-security-KeyFactory-method-getAlgorithm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.KeyFactory-method-getAlgorithm' class='name expandable'>getAlgorithm</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the name of the algorithm\n associated with this {@code KeyFactory}. ...</div><div class='long'><p>Gets the name of the algorithm\n associated with this {@code KeyFactory}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of the algorithm associated with this\n {@code KeyFactory}</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.KeyFactory'>java.security.KeyFactory</span><br/><a href='source/KeyFactory.html#java-security-KeyFactory-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.KeyFactory-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>algorithm, provider</span> ) : Object {java.security.KeyFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a KeyFactory object that converts\n public/private keys of the specified algorithm. ...</div><div class='long'><p>Returns a KeyFactory object that converts\n public/private keys of the specified algorithm.</p>\n\n<p> <p> A new KeyFactory object encapsulating the\n KeyFactorySpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>algorithm</span> : String<div class='sub-desc'><p>the name of the requested key algorithm.\n See the KeyFactory section in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyFactory\">\n Java Cryptography Architecture Standard Algorithm Name Documentation</a>\n for information about standard algorithm names.</p>\n</div></li><li><span class='pre'>provider</span> : Object {Provider}<div class='sub-desc'><p>the provider.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.KeyFactory}</span><div class='sub-desc'><p>the new KeyFactory object.\n@exception NoSuchAlgorithmException if a KeyFactorySpi\n          implementation for the specified algorithm is not available\n          from the specified Provider object.\n@exception IllegalArgumentException if the specified provider is null.\n@see Provider</p>\n</div></li></ul></div></div></div><div id='method-getKeySpec' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.KeyFactory'>java.security.KeyFactory</span><br/><a href='source/KeyFactory.html#java-security-KeyFactory-method-getKeySpec' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.KeyFactory-method-getKeySpec' class='name expandable'>getKeySpec</a>( <span class='pre'>key, keySpec, keySpec</span> ) : Object {java.security.spec.KeySpec}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a specification (key material) of the given key object. ...</div><div class='long'><p>Returns a specification (key material) of the given key object.\n {@code keySpec} identifies the specification class in which\n the key material should be returned. It could, for example, be\n {@code DSAPublicKeySpec.class}, to indicate that the\n key material should be returned in an instance of the\n {@code DSAPublicKeySpec} class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Object {Key}<div class='sub-desc'><p>the key.</p>\n</div></li><li><span class='pre'>keySpec</span> : Object {java.lang.Class}<div class='sub-desc'><p>the specification class in which\n the key material should be returned.</p>\n</div></li><li><span class='pre'>keySpec</span> : Object<div class='sub-desc'><p>the specification class in which\n the key material should be returned.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.spec.KeySpec}</span><div class='sub-desc'><p>the underlying key specification (key material) in an instance\n of the requested specification class.\n@exception InvalidKeySpecException if the requested key specification is\n inappropriate for the given key, or the given key cannot be processed\n (e.g., the given key has an unrecognized algorithm or format).</p>\n</div></li></ul></div></div></div><div id='method-getProvider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.KeyFactory'>java.security.KeyFactory</span><br/><a href='source/KeyFactory.html#java-security-KeyFactory-method-getProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.KeyFactory-method-getProvider' class='name expandable'>getProvider</a>( <span class='pre'></span> ) : Object {java.security.Provider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the provider of this key factory object. ...</div><div class='long'><p>Returns the provider of this key factory object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Provider}</span><div class='sub-desc'><p>the provider of this key factory object</p>\n</div></li></ul></div></div></div><div id='method-translateKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.KeyFactory'>java.security.KeyFactory</span><br/><a href='source/KeyFactory.html#java-security-KeyFactory-method-translateKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.KeyFactory-method-translateKey' class='name expandable'>translateKey</a>( <span class='pre'>key</span> ) : Object {java.security.Key}<span class=\"signature\"></span></div><div class='description'><div class='short'>Translates a key object, whose provider may be unknown or potentially\n untrusted, into a corresponding key object of ...</div><div class='long'><p>Translates a key object, whose provider may be unknown or potentially\n untrusted, into a corresponding key object of this key factory.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Object {Key}<div class='sub-desc'><p>the key whose provider is unknown or untrusted.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Key}</span><div class='sub-desc'><p>the translated key.\n@exception InvalidKeyException if the given key cannot be processed\n by this key factory.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});