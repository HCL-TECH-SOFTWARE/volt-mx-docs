Ext.data.JsonP.java_security_Certificate({"tagname":"class","name":"java.security.Certificate","autodetected":{},"files":[{"filename":"Certificate.js","href":"Certificate.html#java-security-Certificate"}],"author":[{"tagname":"author","name":"Benjamin Renaud","email":null}],"deprecated":{"text":"<p>A new certificate handling package is created in the Java platform.\n             This Certificate interface is entirely deprecated and\n             is here to allow for a smooth transition to the new\n             package.\n @see java.security.cert.Certificate</p>\n"},"members":[{"name":"decode","tagname":"method","owner":"java.security.Certificate","id":"method-decode","meta":{}},{"name":"encode","tagname":"method","owner":"java.security.Certificate","id":"method-encode","meta":{}},{"name":"getFormat","tagname":"method","owner":"java.security.Certificate","id":"method-getFormat","meta":{}},{"name":"getGuarantor","tagname":"method","owner":"java.security.Certificate","id":"method-getGuarantor","meta":{}},{"name":"getPrincipal","tagname":"method","owner":"java.security.Certificate","id":"method-getPrincipal","meta":{}},{"name":"getPublicKey","tagname":"method","owner":"java.security.Certificate","id":"method-getPublicKey","meta":{}},{"name":"toString","tagname":"method","owner":"java.security.Certificate","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.Certificate","short_doc":"This is an interface of abstract methods for managing a\n variety of identity certificates. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Certificate.html#java-security-Certificate' target='_blank'>Certificate.js</a></div></pre><div class='doc-contents'><p><p>This is an interface of abstract methods for managing a\n variety of identity certificates.\n An identity certificate is a guarantee by a principal that\n a public key is that of another principal.  (A principal represents\n an entity such as an individual user, a group, or a corporation.)</p>\n\n<p> <p>In particular, this interface is intended to be a common\n abstraction for constructs that have different formats but\n important common uses.  For example, different types of\n certificates, such as X.509 certificates and PGP certificates,\n share general certificate functionality (the need to encode and\n decode certificates) and some types of information, such as a\n public key, the principal whose key it is, and the guarantor\n guaranteeing that the public key is that of the specified\n principal. So an implementation of X.509 certificates and an\n implementation of PGP certificates can both utilize the Certificate\n interface, even though their formats and additional types and\n amounts of information stored are different.</p>\n\n<p> <p><b>Important</b>: This interface is useful for cataloging and\n grouping objects sharing certain common uses. It does not have any\n semantics of its own. In particular, a Certificate object does not\n make any statement as to the <i>validity</i> of the binding. It is\n the duty of the application implementing this interface to verify\n the certificate and satisfy itself of its validity.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>A new certificate handling package is created in the Java platform.\n             This Certificate interface is entirely deprecated and\n             is here to allow for a smooth transition to the new\n             package.\n @see java.security.cert.Certificate</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-decode' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Certificate'>java.security.Certificate</span><br/><a href='source/Certificate.html#java-security-Certificate-method-decode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Certificate-method-decode' class='name expandable'>decode</a>( <span class='pre'>stream</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Decodes a certificate from an input stream. ...</div><div class='long'><p>Decodes a certificate from an input stream. The format should be\n that returned by {@code getFormat} and produced by\n {@code encode}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>stream</span> : Object {InputStream}<div class='sub-desc'><p>the input stream from which to fetch the data\n being decoded.\n@exception KeyException if the certificate is not properly initialized,\n or data is missing, etc.\n@exception IOException if an exception occurs while trying to input\n the encoded certificate from the input stream.\n@see <a href=\"#!/api/java.security.Certificate-method-encode\" rel=\"java.security.Certificate-method-encode\" class=\"docClass\">encode</a>\n@see <a href=\"#!/api/java.security.Certificate-method-getFormat\" rel=\"java.security.Certificate-method-getFormat\" class=\"docClass\">getFormat</a></p>\n</div></li></ul></div></div></div><div id='method-encode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Certificate'>java.security.Certificate</span><br/><a href='source/Certificate.html#java-security-Certificate-method-encode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Certificate-method-encode' class='name expandable'>encode</a>( <span class='pre'>stream</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Encodes the certificate to an output stream in a format that can\n be decoded by the {@code decode} method. ...</div><div class='long'><p>Encodes the certificate to an output stream in a format that can\n be decoded by the {@code decode} method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>stream</span> : Object {OutputStream}<div class='sub-desc'><p>the output stream to which to encode the\n certificate.\n@exception KeyException if the certificate is not\n properly initialized, or data is missing, etc.\n@exception IOException if a stream exception occurs while\n trying to output the encoded certificate to the output stream.\n@see <a href=\"#!/api/java.security.Certificate-method-decode\" rel=\"java.security.Certificate-method-decode\" class=\"docClass\">decode</a>\n@see <a href=\"#!/api/java.security.Certificate-method-getFormat\" rel=\"java.security.Certificate-method-getFormat\" class=\"docClass\">getFormat</a></p>\n</div></li></ul></div></div></div><div id='method-getFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Certificate'>java.security.Certificate</span><br/><a href='source/Certificate.html#java-security-Certificate-method-getFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Certificate-method-getFormat' class='name expandable'>getFormat</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the coding format. ...</div><div class='long'><p>Returns the name of the coding format. This is used as a hint to find\n an appropriate parser. It could be \"X.509\", \"PGP\", etc. This is\n the format produced and understood by the {@code encode}\n and {@code decode} methods.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of the coding format.</p>\n</div></li></ul></div></div></div><div id='method-getGuarantor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Certificate'>java.security.Certificate</span><br/><a href='source/Certificate.html#java-security-Certificate-method-getGuarantor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Certificate-method-getGuarantor' class='name expandable'>getGuarantor</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the guarantor of the certificate, that is, the principal\n guaranteeing that the public key associated with th...</div><div class='long'><p>Returns the guarantor of the certificate, that is, the principal\n guaranteeing that the public key associated with this certificate\n is that of the principal associated with this certificate. For X.509\n certificates, the guarantor will typically be a Certificate Authority\n (such as the United States Postal Service or Verisign, Inc.).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>the guarantor which guaranteed the principal-key\n binding.</p>\n</div></li></ul></div></div></div><div id='method-getPrincipal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Certificate'>java.security.Certificate</span><br/><a href='source/Certificate.html#java-security-Certificate-method-getPrincipal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Certificate-method-getPrincipal' class='name expandable'>getPrincipal</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the principal of the principal-key pair being guaranteed by\n the guarantor. ...</div><div class='long'><p>Returns the principal of the principal-key pair being guaranteed by\n the guarantor.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>the principal to which this certificate is bound.</p>\n</div></li></ul></div></div></div><div id='method-getPublicKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Certificate'>java.security.Certificate</span><br/><a href='source/Certificate.html#java-security-Certificate-method-getPublicKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Certificate-method-getPublicKey' class='name expandable'>getPublicKey</a>( <span class='pre'></span> ) : Object {java.security.PublicKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the key of the principal-key pair being guaranteed by\n the guarantor. ...</div><div class='long'><p>Returns the key of the principal-key pair being guaranteed by\n the guarantor.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.PublicKey}</span><div class='sub-desc'><p>the public key that this certificate certifies belongs\n to a particular principal.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Certificate'>java.security.Certificate</span><br/><a href='source/Certificate.html#java-security-Certificate-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Certificate-method-toString' class='name expandable'>toString</a>( <span class='pre'>detailed</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string that represents the contents of the certificate. ...</div><div class='long'><p>Returns a string that represents the contents of the certificate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>detailed</span> : Boolean<div class='sub-desc'><p>whether or not to give detailed information\n about the certificate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representing the contents of the certificate</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>A new certificate handling package is created in the Java platform.\n             This Certificate interface is entirely deprecated and\n             is here to allow for a smooth transition to the new\n             package.\n @see java.security.cert.Certificate</p>\n"}}});