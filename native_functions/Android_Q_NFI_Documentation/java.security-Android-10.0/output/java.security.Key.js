Ext.data.JsonP.java_security_Key({"tagname":"class","name":"java.security.Key","autodetected":{},"files":[{"filename":"Key.js","href":"Key.html#java-security-Key"}],"author":[{"tagname":"author","name":"Benjamin Renaud","email":null}],"members":[{"name":"serialVersionUID","tagname":"property","owner":"java.security.Key","id":"property-serialVersionUID","meta":{}},{"name":"getAlgorithm","tagname":"method","owner":"java.security.Key","id":"method-getAlgorithm","meta":{}},{"name":"getEncoded","tagname":"method","owner":"java.security.Key","id":"method-getEncoded","meta":{}},{"name":"getFormat","tagname":"method","owner":"java.security.Key","id":"method-getFormat","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.Key","short_doc":"implements java.io.Serializable\n\n The Key interface is the top-level interface for all keys. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Key.html#java-security-Key' target='_blank'>Key.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p> The Key interface is the top-level interface for all keys. It\n defines the functionality shared by all key objects. All keys\n have three characteristics:</p>\n\n<p> <UL></UL></p>\n\n<p> <LI>An Algorithm</LI></p>\n\n<p> <P>This is the key algorithm for that key. The key algorithm is usually\n an encryption or asymmetric operation algorithm (such as DSA or\n RSA), which will work with those algorithms and with related\n algorithms (such as MD5 with RSA, SHA-1 with RSA, Raw DSA, etc.)\n The name of the algorithm of a key is obtained using the\n getAlgorithm method.</P></p>\n\n<p> <LI>An Encoded Form</LI></p>\n\n<p> <P>This is an external encoded form for the key used when a standard\n representation of the key is needed outside the Java Virtual Machine,\n as when transmitting the key to some other party. The key\n is encoded according to a standard format (such as\n X.509 {@code SubjectPublicKeyInfo} or PKCS#8), and\n is returned using the getEncoded method.\n Note: The syntax of the ASN.1 type {@code SubjectPublicKeyInfo}\n is defined as follows:</P></p>\n\n<pre> SubjectPublicKeyInfo ::= SEQUENCE {\n   algorithm AlgorithmIdentifier,\n   subjectPublicKey BIT STRING }\n\n AlgorithmIdentifier ::= SEQUENCE {\n   algorithm OBJECT IDENTIFIER,\n   parameters ANY DEFINED BY algorithm OPTIONAL }\n </pre>\n\n\n<p> For more information, see\n <a href=\"http://www.ietf.org/rfc/rfc3280.txt\">RFC 3280:\n Internet X.509 Public Key Infrastructure Certificate and CRL Profile</a>.</p>\n\n<p> <LI>A Format</LI></p>\n\n<p> <P>This is the name of the format of the encoded key. It is returned\n by the getFormat method.</P></p>\n\n<p> </p>\n\n<p> Keys are generally obtained through key generators, certificates,\n or various Identity classes used to manage keys.\n Keys may also be obtained from key specifications (transparent\n representations of the underlying key material) through the use of a key\n factory (see <a href=\"#!/api/java.security.KeyFactory\" rel=\"java.security.KeyFactory\" class=\"docClass\">java.security.KeyFactory</a>).</p>\n\n<p> <p> A Key should use KeyRep as its serialized representation.\n Note that a serialized Key may contain sensitive information\n which should not be exposed in untrusted environments.  See the\n <a href=\"https://docs.oracle.com/javase/8/docs/platform/serialization/spec/security.html\">\n Security Appendix</a>\n of the Serialization Specification for more information.</p>\n\n<p> @see PublicKey\n @see PrivateKey\n @see KeyPair\n @see KeyPairGenerator\n @see KeyFactory\n @see KeyRep\n @see java.security.spec.KeySpec\n @see Identity\n @see Signer</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-serialVersionUID' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Key'>java.security.Key</span><br/><a href='source/Key.html#java-security-Key-property-serialVersionUID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Key-property-serialVersionUID' class='name expandable'>serialVersionUID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The class fingerprint that is set to indicate\nserialization compatibility with a previous\nversion of the class. ...</div><div class='long'><p>The class fingerprint that is set to indicate\nserialization compatibility with a previous\nversion of the class.</p>\n<p>Defaults to: <code>&quot;6603384152749567654&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getAlgorithm' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Key'>java.security.Key</span><br/><a href='source/Key.html#java-security-Key-method-getAlgorithm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Key-method-getAlgorithm' class='name expandable'>getAlgorithm</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the standard algorithm name for this key. ...</div><div class='long'><p>Returns the standard algorithm name for this key. For\n example, \"DSA\" would indicate that this key is a DSA key.\n See Appendix A in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/crypto/CryptoSpec.html#AppA\">\n Java Cryptography Architecture API Specification &amp; Reference </a>\n for information about standard algorithm names.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of the algorithm associated with this key.</p>\n</div></li></ul></div></div></div><div id='method-getEncoded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Key'>java.security.Key</span><br/><a href='source/Key.html#java-security-Key-method-getEncoded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Key-method-getEncoded' class='name expandable'>getEncoded</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the key in its primary encoding format, or null\n if this key does not support encoding. ...</div><div class='long'><p>Returns the key in its primary encoding format, or null\n if this key does not support encoding.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the encoded key, or null if the key does not support\n encoding.</p>\n</div></li></ul></div></div></div><div id='method-getFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.Key'>java.security.Key</span><br/><a href='source/Key.html#java-security-Key-method-getFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.Key-method-getFormat' class='name expandable'>getFormat</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the primary encoding format of this key,\n or null if this key does not support encoding. ...</div><div class='long'><p>Returns the name of the primary encoding format of this key,\n or null if this key does not support encoding.\n The primary encoding format is\n named in terms of the appropriate ASN.1 data format, if an\n ASN.1 specification for this key exists.\n For example, the name of the ASN.1 data format for public\n keys is <I>SubjectPublicKeyInfo</I>, as\n defined by the X.509 standard; in this case, the returned format is\n {@code \"X.509\"}. Similarly,\n the name of the ASN.1 data format for private keys is\n <I>PrivateKeyInfo</I>,\n as defined by the PKCS #8 standard; in this case, the returned format is\n {@code \"PKCS#8\"}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the primary encoding format of the key.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});