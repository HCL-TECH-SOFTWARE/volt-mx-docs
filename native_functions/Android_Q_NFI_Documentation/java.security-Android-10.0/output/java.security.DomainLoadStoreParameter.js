Ext.data.JsonP.java_security_DomainLoadStoreParameter({"tagname":"class","name":"java.security.DomainLoadStoreParameter","autodetected":{},"files":[{"filename":"DomainLoadStoreParameter.js","href":"DomainLoadStoreParameter.html#java-security-DomainLoadStoreParameter"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"getConfiguration","tagname":"method","owner":"java.security.DomainLoadStoreParameter","id":"method-getConfiguration","meta":{}},{"name":"getProtectionParameter","tagname":"method","owner":"java.security.DomainLoadStoreParameter","id":"method-getProtectionParameter","meta":{}},{"name":"getProtectionParams","tagname":"method","owner":"java.security.DomainLoadStoreParameter","id":"method-getProtectionParams","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.DomainLoadStoreParameter","short_doc":"implements java.security.KeyStore.LoadStoreParameter\n\nConfiguration data that specifies the keystores in a keystore d...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.security.DomainLoadStoreParameter</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DomainLoadStoreParameter.html#java-security-DomainLoadStoreParameter' target='_blank'>DomainLoadStoreParameter.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.security.KeyStore.LoadStoreParameter\" rel=\"java.security.KeyStore.LoadStoreParameter\" class=\"docClass\">java.security.KeyStore.LoadStoreParameter</a></p>\n\n<p>Configuration data that specifies the keystores in a keystore domain.\n A keystore domain is a collection of keystores that are presented as a\n single logical keystore. The configuration data is used during\n {@code KeyStore}\n load and\n store operations.\n <p>\n The following syntax is supported for configuration data:\n <pre>{@code\n     domain <domainName> [<property> ...] {\n         keystore <keystoreName> [<property> ...] ;\n         ...\n     };\n     ...\n }</property></keystoreName></property></domainName></pre>\n where {@code domainName} and {@code keystoreName} are identifiers\n and {@code property} is a key/value pairing. The key and value are\n separated by an 'equals' symbol and the value is enclosed in double\n quotes. A property value may be either a printable string or a binary\n string of colon-separated pairs of hexadecimal digits. Multi-valued\n properties are represented as a comma-separated list of values,\n enclosed in square brackets.\n See Arrays.toString(java.lang.Object[]).\n <p>\n To ensure that keystore entries are uniquely identified, each\n entry's alias is prefixed by its {@code keystoreName} followed\n by the entry name separator and each {@code keystoreName} must be\n unique within its domain. Entry name prefixes are omitted when\n storing a keystore.\n <p>\n Properties are context-sensitive: properties that apply to\n all the keystores in a domain are located in the domain clause,\n and properties that apply only to a specific keystore are located\n in that keystore's clause.\n Unless otherwise specified, a property in a keystore clause overrides\n a property of the same name in the domain clause. All property names\n are case-insensitive. The following properties are supported:\n <dl>\n <dt> {@code keystoreType=\"<type>\"} </type></dt>\n     <dd> The keystore type. </dd>\n <dt> {@code keystoreURI=\"<url>\"} </url></dt>\n     <dd> The keystore location. </dd>\n <dt> {@code keystoreProviderName=\"<name>\"} </name></dt>\n     <dd> The name of the keystore's JCE provider. </dd>\n <dt> {@code keystorePasswordEnv=\"<environment-variable>\"} </environment></dt>\n     <dd> The environment variable that stores a keystore password.\n          Alternatively, passwords may be supplied to the constructor\n          method in a {@code Map&lt;String, ProtectionParameter>}. </dd>\n <dt> {@code entryNameSeparator=\"<separator>\"} </separator></dt>\n     <dd> The separator between a keystore name prefix and an entry name.\n          When specified, it applies to all the entries in a domain.\n          Its default value is a space. </dd>\n </dl>\n <p>\n For example, configuration data for a simple keystore domain\n comprising three keystores is shown below:</p>\n\n<pre>\n domain app1 {\n     keystore app1-truststore\n         keystoreURI=\"file:///app1/etc/truststore.jks\";\n\n     keystore system-truststore\n         keystoreURI=\"${java.home}/lib/security/cacerts\";\n\n     keystore app1-keystore\n         keystoreType=\"PKCS12\"\n         keystoreURI=\"file:///app1/etc/keystore.p12\";\n };\n\n </pre>\n\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getConfiguration' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.DomainLoadStoreParameter'>java.security.DomainLoadStoreParameter</span><br/><a href='source/DomainLoadStoreParameter.html#java-security-DomainLoadStoreParameter-method-getConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.DomainLoadStoreParameter-method-getConfiguration' class='name expandable'>getConfiguration</a>( <span class='pre'></span> ) : Object {java.net.URI}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the identifier for the domain configuration data. ...</div><div class='long'><p>Gets the identifier for the domain configuration data.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.URI}</span><div class='sub-desc'><p>the identifier for the configuration data</p>\n</div></li></ul></div></div></div><div id='method-getProtectionParameter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.DomainLoadStoreParameter'>java.security.DomainLoadStoreParameter</span><br/><a href='source/DomainLoadStoreParameter.html#java-security-DomainLoadStoreParameter-method-getProtectionParameter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.DomainLoadStoreParameter-method-getProtectionParameter' class='name expandable'>getProtectionParameter</a>( <span class='pre'></span> ) : Object {java.security.KeyStore.ProtectionParameter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the keystore protection parameters for this domain. ...</div><div class='long'><p>Gets the keystore protection parameters for this domain.\n Keystore domains do not support a protection parameter.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.KeyStore.ProtectionParameter}</span><div class='sub-desc'><p>always returns {@code null}</p>\n</div></li></ul></div></div></div><div id='method-getProtectionParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.DomainLoadStoreParameter'>java.security.DomainLoadStoreParameter</span><br/><a href='source/DomainLoadStoreParameter.html#java-security-DomainLoadStoreParameter-method-getProtectionParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.DomainLoadStoreParameter-method-getProtectionParams' class='name expandable'>getProtectionParams</a>( <span class='pre'></span> ) : Object {java.util.Map}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the keystore protection parameters for keystores in this\n domain. ...</div><div class='long'><p>Gets the keystore protection parameters for keystores in this\n domain.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Map}</span><div class='sub-desc'><p>an unmodifiable map of keystore names to protection\n     parameters</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});