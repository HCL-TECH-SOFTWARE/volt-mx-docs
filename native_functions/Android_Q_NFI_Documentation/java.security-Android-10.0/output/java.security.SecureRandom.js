Ext.data.JsonP.java_security_SecureRandom({"tagname":"class","name":"java.security.SecureRandom","autodetected":{},"files":[{"filename":"SecureRandom.js","href":"SecureRandom.html#java-security-SecureRandom"}],"extends":"java.util.Random","author":[{"tagname":"author","name":"Benjamin Renaud","email":null},{"tagname":"author","name":"Josh Bloch","email":null}],"members":[{"name":"generateSeed","tagname":"method","owner":"java.security.SecureRandom","id":"method-generateSeed","meta":{}},{"name":"getAlgorithm","tagname":"method","owner":"java.security.SecureRandom","id":"method-getAlgorithm","meta":{}},{"name":"getInstance","tagname":"method","owner":"java.security.SecureRandom","id":"method-getInstance","meta":{}},{"name":"getInstanceStrong","tagname":"method","owner":"java.security.SecureRandom","id":"method-getInstanceStrong","meta":{}},{"name":"getProvider","tagname":"method","owner":"java.security.SecureRandom","id":"method-getProvider","meta":{}},{"name":"getSeed","tagname":"method","owner":"java.security.SecureRandom","id":"method-getSeed","meta":{}},{"name":"nextBytes","tagname":"method","owner":"java.security.SecureRandom","id":"method-nextBytes","meta":{}},{"name":"setSeed","tagname":"method","owner":"java.security.SecureRandom","id":"method-setSeed","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.SecureRandom","short_doc":"This class provides a cryptographically strong random number\n generator (RNG). ...","classIcon":"icon-class","superclasses":["java.util.Random"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.util.Random<div class='subclass '><strong>java.security.SecureRandom</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SecureRandom.html#java-security-SecureRandom' target='_blank'>SecureRandom.js</a></div></pre><div class='doc-contents'><p>This class provides a cryptographically strong random number\n generator (RNG).</p>\n\n<p> <p>A cryptographically strong random number\n minimally complies with the statistical random number generator tests\n specified in <a href=\"http://csrc.nist.gov/cryptval/140-2.htm\">\n <i>FIPS 140-2, Security Requirements for Cryptographic Modules</i></a>,\n section 4.9.1.\n Additionally, SecureRandom must produce non-deterministic output.\n Therefore any seed material passed to a SecureRandom object must be\n unpredictable, and all SecureRandom output sequences must be\n cryptographically strong, as described in\n <a href=\"http://www.ietf.org/rfc/rfc1750.txt\">\n <i>RFC 1750: Randomness Recommendations for Security</i></a>.</p>\n\n<p> <p>A caller obtains a SecureRandom instance via the\n no-argument constructor or one of the {@code getInstance} methods:</p>\n\n<pre>      SecureRandom random = new SecureRandom();\n </pre>\n\n\n<p> <p> Many SecureRandom implementations are in the form of a pseudo-random\n number generator (PRNG), which means they use a deterministic algorithm\n to produce a pseudo-random sequence from a true random seed.\n Other implementations may produce true random numbers,\n and yet others may use a combination of both techniques.</p>\n\n<p> <p> Typical callers of SecureRandom invoke the following methods\n to retrieve random bytes:</p>\n\n<pre>      SecureRandom random = new SecureRandom();\n      byte bytes[] = new byte[20];\n      random.nextBytes(bytes);\n </pre>\n\n\n<p> <p> Callers may also invoke the {@code generateSeed} method\n to generate a given number of seed bytes (to seed other random number\n generators, for example):</p>\n\n<pre>      byte seed[] = random.generateSeed(20);\n </pre>\n\n\n<p> Note: Depending on the implementation, the {@code generateSeed} and\n {@code nextBytes} methods may block as entropy is being gathered,\n for example, if they need to read from /dev/random on various Unix-like\n operating systems.</p>\n\n<p> The SHA1PRNG algorithm from the Crypto provider has been deprecated as it was insecure, and also\n incorrectly used by some apps as a key derivation function. See\n <a href=\"http://android-developers.blogspot.com/2016/06/security-crypto-provider-deprecated-in.html\">\n Security &quot;Crypto&quot; provider deprecated in Android N</a> for details.</p>\n\n<p> @see <a href=\"#!/api/java.security.SecureRandomSpi\" rel=\"java.security.SecureRandomSpi\" class=\"docClass\">java.security.SecureRandomSpi</a>\n @see java.util.Random</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-generateSeed' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-generateSeed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-generateSeed' class='name expandable'>generateSeed</a>( <span class='pre'>numBytes</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the given number of seed bytes, computed using the seed\n generation algorithm that this class uses to seed it...</div><div class='long'><p>Returns the given number of seed bytes, computed using the seed\n generation algorithm that this class uses to seed itself.  This\n call may be used to seed other random number generators.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>numBytes</span> : Number<div class='sub-desc'><p>the number of seed bytes to generate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the seed bytes.</p>\n</div></li></ul></div></div></div><div id='method-getAlgorithm' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-getAlgorithm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-getAlgorithm' class='name expandable'>getAlgorithm</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the algorithm implemented by this SecureRandom\n object. ...</div><div class='long'><p>Returns the name of the algorithm implemented by this SecureRandom\n object.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of the algorithm or {@code unknown}\n          if the algorithm name cannot be determined.</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>algorithm, provider</span> ) : Object {java.security.SecureRandom}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a SecureRandom object that implements the specified\n Random Number Generator (RNG) algorithm. ...</div><div class='long'><p>Returns a SecureRandom object that implements the specified\n Random Number Generator (RNG) algorithm.</p>\n\n<p> <p> A new SecureRandom object encapsulating the\n SecureRandomSpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.</p>\n\n<p> <p> The returned SecureRandom object has not been seeded.  To seed the\n returned object, call the {@code setSeed} method.\n If {@code setSeed} is not called, the first call to\n {@code nextBytes} will force the SecureRandom object to seed itself.\n This self-seeding will not occur if {@code setSeed} was\n previously called.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>algorithm</span> : String<div class='sub-desc'><p>the name of the RNG algorithm.\n See the SecureRandom section in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SecureRandom\">\n Java Cryptography Architecture Standard Algorithm Name Documentation</a>\n for information about standard RNG algorithm names.</p>\n</div></li><li><span class='pre'>provider</span> : Object {Provider}<div class='sub-desc'><p>the provider.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.SecureRandom}</span><div class='sub-desc'><p>the new SecureRandom object.\n@exception NoSuchAlgorithmException if a SecureRandomSpi\n          implementation for the specified algorithm is not available\n          from the specified Provider object.\n@exception IllegalArgumentException if the specified provider is null.\n@see Provider</p>\n</div></li></ul></div></div></div><div id='method-getInstanceStrong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-getInstanceStrong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-getInstanceStrong' class='name expandable'>getInstanceStrong</a>( <span class='pre'></span> ) : Object {java.security.SecureRandom}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a {@code SecureRandom} object. ...</div><div class='long'><p>Returns a {@code SecureRandom} object.</p>\n\n<p> In Android this is equivalent to get a SHA1PRNG from AndroidOpenSSL.</p>\n\n<p> Some situations require strong random values, such as when\n creating high-value/long-lived secrets like RSA public/private\n keys.  To help guide applications in selecting a suitable strong\n {@code SecureRandom} implementation, Java distributions\n include a list of known strong {@code SecureRandom}\n implementations in the {@code securerandom.strongAlgorithms}\n Security property.\n <p>\n Every implementation of the Java platform is required to\n support at least one strong {@code SecureRandom} implementation.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.SecureRandom}</span><div class='sub-desc'><p>a strong {@code SecureRandom} implementation</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchAlgorithmException if no algorithm is available\n@see Security#getProperty(String)</p>\n</div></li></ul></div></div></div><div id='method-getProvider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-getProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-getProvider' class='name expandable'>getProvider</a>( <span class='pre'></span> ) : Object {java.security.Provider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the provider of this SecureRandom object. ...</div><div class='long'><p>Returns the provider of this SecureRandom object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Provider}</span><div class='sub-desc'><p>the provider of this SecureRandom object.</p>\n</div></li></ul></div></div></div><div id='method-getSeed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-getSeed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-getSeed' class='name expandable'>getSeed</a>( <span class='pre'>numBytes</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the given number of seed bytes, computed using the seed\n generation algorithm that this class uses to seed it...</div><div class='long'><p>Returns the given number of seed bytes, computed using the seed\n generation algorithm that this class uses to seed itself.  This\n call may be used to seed other random number generators.</p>\n\n<p> <p>This method is only included for backwards compatibility.\n The caller is encouraged to use one of the alternative\n {@code getInstance} methods to obtain a SecureRandom object, and\n then call the {@code generateSeed} method to obtain seed bytes\n from that object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>numBytes</span> : Number<div class='sub-desc'><p>the number of seed bytes to generate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the seed bytes.\n@see <a href=\"#!/api/java.security.SecureRandom-method-setSeed\" rel=\"java.security.SecureRandom-method-setSeed\" class=\"docClass\">setSeed</a></p>\n</div></li></ul></div></div></div><div id='method-nextBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-nextBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-nextBytes' class='name expandable'>nextBytes</a>( <span class='pre'>bytes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates a user-specified number of random bytes. ...</div><div class='long'><p>Generates a user-specified number of random bytes.</p>\n\n<p> <p> If a call to {@code setSeed} had not occurred previously,\n the first call to this method forces this SecureRandom object\n to seed itself.  This self-seeding will not occur if\n {@code setSeed} was previously called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bytes</span> : Object {byte[]}<div class='sub-desc'><p>the array to be filled in with random bytes.</p>\n</div></li></ul></div></div></div><div id='method-setSeed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.SecureRandom'>java.security.SecureRandom</span><br/><a href='source/SecureRandom.html#java-security-SecureRandom-method-setSeed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.SecureRandom-method-setSeed' class='name expandable'>setSeed</a>( <span class='pre'>seed</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reseeds this random object, using the eight bytes contained\n in the given {@code long seed}. ...</div><div class='long'><p>Reseeds this random object, using the eight bytes contained\n in the given {@code long seed}. The given seed supplements,\n rather than replaces, the existing seed. Thus, repeated calls\n are guaranteed never to reduce randomness.</p>\n\n<p> <p>This method is defined for compatibility with\n {@code java.util.Random}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seed</span> : Number<div class='sub-desc'><p>the seed.\n@see <a href=\"#!/api/java.security.SecureRandom-method-getSeed\" rel=\"java.security.SecureRandom-method-getSeed\" class=\"docClass\">getSeed</a></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});