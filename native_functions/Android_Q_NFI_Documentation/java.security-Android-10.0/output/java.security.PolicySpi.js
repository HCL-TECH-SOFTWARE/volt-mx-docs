Ext.data.JsonP.java_security_PolicySpi({"tagname":"class","name":"java.security.PolicySpi","autodetected":{},"files":[{"filename":"PolicySpi.js","href":"PolicySpi.html#java-security-PolicySpi"}],"extends":"java.lang.Object","since":"1.6","members":[],"alternateClassNames":[],"aliases":{},"id":"class-java.security.PolicySpi","short_doc":"This class defines the Service Provider Interface (SPI)\n for the {@code Policy} class. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.security.PolicySpi</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PolicySpi.html#java-security-PolicySpi' target='_blank'>PolicySpi.js</a></div></pre><div class='doc-contents'><p>This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)\n for the {@code Policy} class.\n All the abstract methods in this class must be implemented by each\n service provider who wishes to supply a Policy implementation.</p>\n\n<p> <p> Subclass implementations of this abstract class must provide\n a public constructor that takes a {@code Policy.Parameters}\n object as an input parameter.  This constructor also must throw\n an IllegalArgumentException if it does not understand the\n {@code Policy.Parameters} input.</p>\n        <p>Available since: <b>1.6</b></p>\n</div><div class='members'></div></div>","meta":{}});