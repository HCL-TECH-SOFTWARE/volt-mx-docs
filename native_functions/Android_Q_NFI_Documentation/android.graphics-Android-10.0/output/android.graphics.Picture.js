Ext.data.JsonP.android_graphics_Picture({"tagname":"class","name":"android.graphics.Picture","autodetected":{},"files":[{"filename":"Picture.js","href":"Picture.html#android-graphics-Picture"}],"extends":"java.lang.Object","members":[{"name":"beginRecording","tagname":"method","owner":"android.graphics.Picture","id":"method-beginRecording","meta":{}},{"name":"createFromStream","tagname":"method","owner":"android.graphics.Picture","id":"method-createFromStream","meta":{"deprecated":{"text":"<p>The recommended alternative is to not use writeToStream and\n instead draw the picture into a Bitmap from which you can persist it as\n raw or compressed pixels.</p>\n"},"removed":{"text":"\n"}}},{"name":"draw","tagname":"method","owner":"android.graphics.Picture","id":"method-draw","meta":{}},{"name":"endRecording","tagname":"method","owner":"android.graphics.Picture","id":"method-endRecording","meta":{}},{"name":"getHeight","tagname":"method","owner":"android.graphics.Picture","id":"method-getHeight","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.graphics.Picture","id":"method-getWidth","meta":{}},{"name":"requiresHardwareAcceleration","tagname":"method","owner":"android.graphics.Picture","id":"method-requiresHardwareAcceleration","meta":{}},{"name":"writeToStream","tagname":"method","owner":"android.graphics.Picture","id":"method-writeToStream","meta":{"deprecated":{"text":"<p>The recommended alternative is to draw the picture into a\n Bitmap from which you can persist it as raw or compressed pixels.</p>\n"},"removed":{"text":"\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.Picture","short_doc":"A Picture records drawing calls (via the canvas returned by beginRecording)\n and can then play them back into Canvas ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.graphics.Picture</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Picture.html#android-graphics-Picture' target='_blank'>Picture.js</a></div></pre><div class='doc-contents'><p>A Picture records drawing calls (via the canvas returned by beginRecording)\n and can then play them back into Canvas (via draw(Canvas) or\n android.graphics.Canvas.drawPicture(Picture)).For most content (e.g. text, lines, rectangles),\n drawing a sequence from a picture can be faster than the equivalent API\n calls, since the picture performs its playback without incurring any\n method-call overhead.</p>\n\n<p> <p class=\"note\"><strong>Note:</strong> Prior to API level 23 a picture cannot\n be replayed on a hardware accelerated canvas.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-beginRecording' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-beginRecording' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-beginRecording' class='name expandable'>beginRecording</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>To record a picture, call beginRecording() and then draw into the Canvas\n that is returned. ...</div><div class='long'><p>To record a picture, call beginRecording() and then draw into the Canvas\n that is returned. Nothing we appear on screen, but all of the draw\n commands (e.g. Paint)) will be recorded.\n To stop recording, call endRecording(). After endRecording() the Canvas\n that was returned must no longer be used, and nothing should be drawn\n into it.</p>\n</div></div></div><div id='method-createFromStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-createFromStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-createFromStream' class='name expandable'>createFromStream</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Create a new picture (already recorded) from the data in the stream. ...</div><div class='long'><p>Create a new picture (already recorded) from the data in the stream. This\n data was generated by a previous call to writeToStream(). Pictures that\n have been persisted across device restarts are not guaranteed to decode\n properly and are highly discouraged.\n@see <a href=\"#!/api/android.graphics.Picture-method-writeToStream\" rel=\"android.graphics.Picture-method-writeToStream\" class=\"docClass\">writeToStream</a>(java.io.OutputStream)</p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The recommended alternative is to not use writeToStream and\n instead draw the picture into a Bitmap from which you can persist it as\n raw or compressed pixels.</p>\n\n        </div>\n</div></div></div><div id='method-draw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-draw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-draw' class='name expandable'>draw</a>( <span class='pre'>canvas</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw this picture on the canvas. ...</div><div class='long'><p>Draw this picture on the canvas.\n <p>\n Prior to android.os.Build.VERSION_CODES.LOLLIPOP, this call could\n have the side effect of changing the matrix and clip of the canvas\n if this picture had imbalanced saves/restores.</p>\n\n<p> <p>\n <strong>Note:</strong> This forces the picture to internally call\n endRecording() in order to prepare for playback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>canvas</span> : Object {Canvas}<div class='sub-desc'><p>The picture is drawn to this canvas</p>\n</div></li></ul></div></div></div><div id='method-endRecording' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-endRecording' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-endRecording' class='name expandable'>endRecording</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call endRecording when the picture is built. ...</div><div class='long'><p>Call endRecording when the picture is built. After this call, the picture\n may be drawn, but the canvas that was returned by beginRecording must not\n be used anymore. This is automatically called if <a href=\"#!/api/android.graphics.Picture-method-draw\" rel=\"android.graphics.Picture-method-draw\" class=\"docClass\">draw</a>\n or android.graphics.Canvas.drawPicture(Picture) is called.</p>\n</div></div></div><div id='method-getHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-getHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-getHeight' class='name expandable'>getHeight</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the height of the picture as passed to beginRecording. ...</div><div class='long'><p>Get the height of the picture as passed to beginRecording. This\n does not reflect (per se) the content of the picture.</p>\n</div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the width of the picture as passed to beginRecording. ...</div><div class='long'><p>Get the width of the picture as passed to beginRecording. This\n does not reflect (per se) the content of the picture.</p>\n</div></div></div><div id='method-requiresHardwareAcceleration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-requiresHardwareAcceleration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-requiresHardwareAcceleration' class='name expandable'>requiresHardwareAcceleration</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether or not this Picture contains recorded commands that only work when\n drawn to a hardware-accelerated...</div><div class='long'><p>Indicates whether or not this Picture contains recorded commands that only work when\n drawn to a hardware-accelerated canvas. If this returns true then this Picture can only\n be drawn to another Picture or to a Canvas where canvas.isHardwareAccelerated() is true.</p>\n\n<p> Note this value is only updated after recording has finished by a call to\n <a href=\"#!/api/android.graphics.Picture-method-endRecording\" rel=\"android.graphics.Picture-method-endRecording\" class=\"docClass\">endRecording</a>(). Prior to that it will be the default value of false.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the Picture can only be drawn to a hardware-accelerated canvas,\n         false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-writeToStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Picture'>android.graphics.Picture</span><br/><a href='source/Picture.html#android-graphics-Picture-method-writeToStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Picture-method-writeToStream' class='name expandable'>writeToStream</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Write the picture contents to a stream. ...</div><div class='long'><p>Write the picture contents to a stream. The data can be used to recreate\n the picture in this or another process by calling createFromStream(...)\n The resulting stream is NOT to be persisted across device restarts as\n there is no guarantee that the Picture can be successfully reconstructed.\n@see <a href=\"#!/api/android.graphics.Picture-method-createFromStream\" rel=\"android.graphics.Picture-method-createFromStream\" class=\"docClass\">createFromStream</a>(java.io.InputStream)</p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The recommended alternative is to draw the picture into a\n Bitmap from which you can persist it as raw or compressed pixels.</p>\n\n        </div>\n</div></div></div></div></div></div></div>","meta":{}});