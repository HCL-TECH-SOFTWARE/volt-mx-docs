Ext.data.JsonP.android_graphics_ImageDecoder_OnPartialImageListener({"tagname":"class","name":"android.graphics.ImageDecoder.OnPartialImageListener","autodetected":{},"files":[{"filename":"OnPartialImageListener.js","href":"OnPartialImageListener.html#android-graphics-ImageDecoder-OnPartialImageListener"}],"members":[{"name":"onPartialImage","tagname":"method","owner":"android.graphics.ImageDecoder.OnPartialImageListener","id":"method-onPartialImage","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.ImageDecoder.OnPartialImageListener","short_doc":"Optional listener supplied to the ImageDecoder. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnPartialImageListener.html#android-graphics-ImageDecoder-OnPartialImageListener' target='_blank'>OnPartialImageListener.js</a></div></pre><div class='doc-contents'><p>Optional listener supplied to the ImageDecoder.</p>\n\n<p>  Without this listener, errors will throw java.io.IOException.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onPartialImage' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ImageDecoder.OnPartialImageListener'>android.graphics.ImageDecoder.OnPartialImageListener</span><br/><a href='source/OnPartialImageListener.html#android-graphics-ImageDecoder-OnPartialImageListener-method-onPartialImage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ImageDecoder.OnPartialImageListener-method-onPartialImage' class='name expandable'>onPartialImage</a>( <span class='pre'>error, source</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when there is only a partial image to display. ...</div><div class='long'><p>Called when there is only a partial image to display.</p>\n\n<p>  If decoding is interrupted after having decoded a partial image,\n  this listener lets the client know that and allows them to\n  optionally finish the rest of the decode/creation process to create\n  a partial Drawable/<a href=\"#!/api/android.graphics.Bitmap\" rel=\"android.graphics.Bitmap\" class=\"docClass\">android.graphics.Bitmap</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Number<div class='sub-desc'><p>indicating what interrupted the decode.</p>\n</div></li><li><span class='pre'>source</span> : Object {ImageDecoder.Source}<div class='sub-desc'><p>that had the error.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True to create and return a Drawable/Bitmap\n      with partial data. False (which is the default) to abort the\n      decode and throw java.io.IOException.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});