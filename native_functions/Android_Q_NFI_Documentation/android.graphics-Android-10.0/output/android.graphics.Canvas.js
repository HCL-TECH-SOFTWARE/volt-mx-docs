Ext.data.JsonP.android_graphics_Canvas({"tagname":"class","name":"android.graphics.Canvas","autodetected":{},"files":[{"filename":"Canvas.js","href":"Canvas.html#android-graphics-Canvas"}],"extends":"android.graphics.BaseCanvas","members":[{"name":"ALL_SAVE_FLAG","tagname":"property","owner":"android.graphics.Canvas","id":"property-ALL_SAVE_FLAG","meta":{}},{"name":"CLIP_SAVE_FLAG","tagname":"property","owner":"android.graphics.Canvas","id":"property-CLIP_SAVE_FLAG","meta":{"deprecated":{"text":"<p>Use the flagless version of <a href=\"#!/api/android.graphics.Canvas-method-save\" rel=\"android.graphics.Canvas-method-save\" class=\"docClass\">save</a>(), android.graphics.Paint) or\n            int). For saveLayer() calls the clip\n            was always restored for Hardware accelerated\n            canvases and as of API level {@value Build.VERSION_CODES#O} that is the default\n            behavior for all canvas types.</p>\n"},"removed":{"text":"\n"}}},{"name":"CLIP_TO_LAYER_SAVE_FLAG","tagname":"property","owner":"android.graphics.Canvas","id":"property-CLIP_TO_LAYER_SAVE_FLAG","meta":{"deprecated":{"text":"<p>This flag results in poor performance and the same effect can be achieved with\n            a single layer or multiple draw commands with different clips.</p>\n"},"removed":{"text":"\n"}}},{"name":"FULL_COLOR_LAYER_SAVE_FLAG","tagname":"property","owner":"android.graphics.Canvas","id":"property-FULL_COLOR_LAYER_SAVE_FLAG","meta":{"deprecated":{"text":"<p>This flag is ignored. Use the flagless version of android.graphics.Paint)\n            int).</p>\n"},"removed":{"text":"\n"}}},{"name":"HAS_ALPHA_LAYER_SAVE_FLAG","tagname":"property","owner":"android.graphics.Canvas","id":"property-HAS_ALPHA_LAYER_SAVE_FLAG","meta":{"deprecated":{"text":"<p>This flag is ignored. Use the flagless version of android.graphics.Paint)\n            int).</p>\n"},"removed":{"text":"\n"}}},{"name":"MATRIX_SAVE_FLAG","tagname":"property","owner":"android.graphics.Canvas","id":"property-MATRIX_SAVE_FLAG","meta":{"deprecated":{"text":"<p>Use the flagless version of <a href=\"#!/api/android.graphics.Canvas-method-save\" rel=\"android.graphics.Canvas-method-save\" class=\"docClass\">save</a>(), android.graphics.Paint) or\n            int). For saveLayer() calls the matrix\n            was always restored for Hardware accelerated\n            canvases and as of API level {@value Build.VERSION_CODES#O} that is the default\n            behavior for all canvas types.</p>\n"},"removed":{"text":"\n"}}},{"name":"clipOutPath","tagname":"method","owner":"android.graphics.Canvas","id":"method-clipOutPath","meta":{}},{"name":"clipOutRect","tagname":"method","owner":"android.graphics.Canvas","id":"method-clipOutRect","meta":{}},{"name":"clipPath","tagname":"method","owner":"android.graphics.Canvas","id":"method-clipPath","meta":{}},{"name":"clipRect","tagname":"method","owner":"android.graphics.Canvas","id":"method-clipRect","meta":{}},{"name":"clipRegion","tagname":"method","owner":"android.graphics.Canvas","id":"method-clipRegion","meta":{"deprecated":{"text":"<p>Unlike all other clip calls this API does not respect the\n             current matrix. Use clipRect(Rect) as an alternative.</p>\n"},"removed":{"text":"\n"}}},{"name":"concat","tagname":"method","owner":"android.graphics.Canvas","id":"method-concat","meta":{}},{"name":"disableZ","tagname":"method","owner":"android.graphics.Canvas","id":"method-disableZ","meta":{}},{"name":"drawARGB","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawARGB","meta":{}},{"name":"drawArc","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawArc","meta":{}},{"name":"drawBitmap","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawBitmap","meta":{}},{"name":"drawBitmapMesh","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawBitmapMesh","meta":{}},{"name":"drawCircle","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawCircle","meta":{}},{"name":"drawColor","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawColor","meta":{}},{"name":"drawDoubleRoundRect","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawDoubleRoundRect","meta":{}},{"name":"drawLine","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawLine","meta":{}},{"name":"drawLines","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawLines","meta":{}},{"name":"drawOval","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawOval","meta":{}},{"name":"drawPaint","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawPaint","meta":{}},{"name":"drawPath","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawPath","meta":{}},{"name":"drawPicture","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawPicture","meta":{}},{"name":"drawPoint","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawPoint","meta":{}},{"name":"drawPoints","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawPoints","meta":{}},{"name":"drawPosText","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawPosText","meta":{"deprecated":{"text":"<p>This method does not support glyph composition and decomposition and should\n             therefore not be used to render complex scripts. It also doesn't handle\n             supplementary characters (eg emoji).</p>\n"}}},{"name":"drawRGB","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawRGB","meta":{}},{"name":"drawRect","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawRect","meta":{}},{"name":"drawRenderNode","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawRenderNode","meta":{}},{"name":"drawRoundRect","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawRoundRect","meta":{}},{"name":"drawText","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawText","meta":{}},{"name":"drawTextOnPath","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawTextOnPath","meta":{}},{"name":"drawTextRun","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawTextRun","meta":{}},{"name":"drawVertices","tagname":"method","owner":"android.graphics.Canvas","id":"method-drawVertices","meta":{}},{"name":"enableZ","tagname":"method","owner":"android.graphics.Canvas","id":"method-enableZ","meta":{}},{"name":"getClipBounds","tagname":"method","owner":"android.graphics.Canvas","id":"method-getClipBounds","meta":{}},{"name":"getDensity","tagname":"method","owner":"android.graphics.Canvas","id":"method-getDensity","meta":{}},{"name":"getDrawFilter","tagname":"method","owner":"android.graphics.Canvas","id":"method-getDrawFilter","meta":{}},{"name":"getHeight","tagname":"method","owner":"android.graphics.Canvas","id":"method-getHeight","meta":{}},{"name":"getMatrix","tagname":"method","owner":"android.graphics.Canvas","id":"method-getMatrix","meta":{"deprecated":{"text":"<p>Hardware accelerated canvases may have any\n matrix when passed to a View or Drawable, as it is implementation defined where in the\n hierarchy such canvases are created. It is recommended in such cases to either draw contents\n irrespective of the current matrix, or to track relevant transform state outside of the\n canvas.</p>\n"}}},{"name":"getMaximumBitmapHeight","tagname":"method","owner":"android.graphics.Canvas","id":"method-getMaximumBitmapHeight","meta":{}},{"name":"getMaximumBitmapWidth","tagname":"method","owner":"android.graphics.Canvas","id":"method-getMaximumBitmapWidth","meta":{}},{"name":"getSaveCount","tagname":"method","owner":"android.graphics.Canvas","id":"method-getSaveCount","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.graphics.Canvas","id":"method-getWidth","meta":{}},{"name":"isHardwareAccelerated","tagname":"method","owner":"android.graphics.Canvas","id":"method-isHardwareAccelerated","meta":{}},{"name":"isOpaque","tagname":"method","owner":"android.graphics.Canvas","id":"method-isOpaque","meta":{}},{"name":"quickReject","tagname":"method","owner":"android.graphics.Canvas","id":"method-quickReject","meta":{}},{"name":"restore","tagname":"method","owner":"android.graphics.Canvas","id":"method-restore","meta":{}},{"name":"restoreToCount","tagname":"method","owner":"android.graphics.Canvas","id":"method-restoreToCount","meta":{}},{"name":"restoreUnclippedLayer","tagname":"method","owner":"android.graphics.Canvas","id":"method-restoreUnclippedLayer","meta":{}},{"name":"rotate","tagname":"method","owner":"android.graphics.Canvas","id":"method-rotate","meta":{}},{"name":"save","tagname":"method","owner":"android.graphics.Canvas","id":"method-save","meta":{"deprecated":{"text":"<p>Use save() instead.</p>\n"}}},{"name":"saveLayer","tagname":"method","owner":"android.graphics.Canvas","id":"method-saveLayer","meta":{}},{"name":"saveLayerAlpha","tagname":"method","owner":"android.graphics.Canvas","id":"method-saveLayerAlpha","meta":{}},{"name":"scale","tagname":"method","owner":"android.graphics.Canvas","id":"method-scale","meta":{}},{"name":"setBitmap","tagname":"method","owner":"android.graphics.Canvas","id":"method-setBitmap","meta":{}},{"name":"setDensity","tagname":"method","owner":"android.graphics.Canvas","id":"method-setDensity","meta":{}},{"name":"setDrawFilter","tagname":"method","owner":"android.graphics.Canvas","id":"method-setDrawFilter","meta":{}},{"name":"setMatrix","tagname":"method","owner":"android.graphics.Canvas","id":"method-setMatrix","meta":{}},{"name":"skew","tagname":"method","owner":"android.graphics.Canvas","id":"method-skew","meta":{}},{"name":"translate","tagname":"method","owner":"android.graphics.Canvas","id":"method-translate","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.Canvas","short_doc":"The Canvas class holds the \"draw\" calls. ...","classIcon":"icon-class","superclasses":["java.lang.Object","android.graphics.BaseCanvas"],"subclasses":["android.graphics.BaseRecordingCanvas"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.graphics.BaseCanvas' rel='android.graphics.BaseCanvas' class='docClass'>android.graphics.BaseCanvas</a><div class='subclass '><strong>android.graphics.Canvas</strong></div></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.graphics.BaseRecordingCanvas' rel='android.graphics.BaseRecordingCanvas' class='docClass'>android.graphics.BaseRecordingCanvas</a></div><h4>Files</h4><div class='dependency'><a href='source/Canvas.html#android-graphics-Canvas' target='_blank'>Canvas.js</a></div></pre><div class='doc-contents'><p>The Canvas class holds the \"draw\" calls. To draw something, you need\n 4 basic components: A Bitmap to hold the pixels, a Canvas to host\n the draw calls (writing into the bitmap), a drawing primitive (e.g. Rect,\n Path, text, Bitmap), and a paint (to describe the colors and styles for the\n drawing).</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about how to use Canvas, read the\n <a href=\"{@docRoot}guide/topics/graphics/2d-graphics.html\">\n Canvas and Drawables</a> developer guide.</p></div></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ALL_SAVE_FLAG' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-property-ALL_SAVE_FLAG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-property-ALL_SAVE_FLAG' class='name expandable'>ALL_SAVE_FLAG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Restore everything when restore() is called (standard save flags). ...</div><div class='long'><p>Restore everything when restore() is called (standard save flags).</p>\n\n<p><p class=\"note\"><strong>Note:</strong> for performance reasons, it is\nstrongly recommended to pass this - the complete set of flags - to any\ncall to <code>saveLayer()</code> and <code>saveLayerAlpha()</code>\nvariants.</p>\n\n<p><p class=\"note\"><strong>Note:</strong> all methods that accept this flag\nhave flagless versions that are equivalent to passing this flag.</p>\n<p>Defaults to: <code>&quot;31&quot;</code></p></div></div></div><div id='property-CLIP_SAVE_FLAG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-property-CLIP_SAVE_FLAG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-property-CLIP_SAVE_FLAG' class='name expandable'>CLIP_SAVE_FLAG</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Restore the current clip when restore() is called. ...</div><div class='long'><p>Restore the current clip when restore() is called.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This property has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use the flagless version of <a href=\"#!/api/android.graphics.Canvas-method-save\" rel=\"android.graphics.Canvas-method-save\" class=\"docClass\">save</a>(), android.graphics.Paint) or\n            int). For saveLayer() calls the clip\n            was always restored for Hardware accelerated\n            canvases and as of API level {@value Build.VERSION_CODES#O} that is the default\n            behavior for all canvas types.</p>\n\n        </div>\n</div></div></div><div id='property-CLIP_TO_LAYER_SAVE_FLAG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-property-CLIP_TO_LAYER_SAVE_FLAG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-property-CLIP_TO_LAYER_SAVE_FLAG' class='name expandable'>CLIP_TO_LAYER_SAVE_FLAG</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Clip drawing to the bounds of the offscreen layer, omit at your own peril. ...</div><div class='long'><p>Clip drawing to the bounds of the offscreen layer, omit at your own peril.</p>\n\n<p><p class=\"note\"><strong>Note:</strong> it is strongly recommended to not\nomit this flag for any call to <code>saveLayer()</code> and\n<code>saveLayerAlpha()</code> variants. Not passing this flag generally\ntriggers extremely poor performance with hardware accelerated rendering.</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p>        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This property has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This flag results in poor performance and the same effect can be achieved with\n            a single layer or multiple draw commands with different clips.</p>\n\n        </div>\n</div></div></div><div id='property-FULL_COLOR_LAYER_SAVE_FLAG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-property-FULL_COLOR_LAYER_SAVE_FLAG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-property-FULL_COLOR_LAYER_SAVE_FLAG' class='name expandable'>FULL_COLOR_LAYER_SAVE_FLAG</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>The layer requires full 8-bit precision for each color channel. ...</div><div class='long'><p>The layer requires full 8-bit precision for each color channel.</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p>        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This property has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This flag is ignored. Use the flagless version of android.graphics.Paint)\n            int).</p>\n\n        </div>\n</div></div></div><div id='property-HAS_ALPHA_LAYER_SAVE_FLAG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-property-HAS_ALPHA_LAYER_SAVE_FLAG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-property-HAS_ALPHA_LAYER_SAVE_FLAG' class='name expandable'>HAS_ALPHA_LAYER_SAVE_FLAG</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>The layer requires a per-pixel alpha channel. ...</div><div class='long'><p>The layer requires a per-pixel alpha channel.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p>        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This property has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This flag is ignored. Use the flagless version of android.graphics.Paint)\n            int).</p>\n\n        </div>\n</div></div></div><div id='property-MATRIX_SAVE_FLAG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-property-MATRIX_SAVE_FLAG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-property-MATRIX_SAVE_FLAG' class='name expandable'>MATRIX_SAVE_FLAG</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Restore the current matrix when restore() is called. ...</div><div class='long'><p>Restore the current matrix when restore() is called.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This property has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use the flagless version of <a href=\"#!/api/android.graphics.Canvas-method-save\" rel=\"android.graphics.Canvas-method-save\" class=\"docClass\">save</a>(), android.graphics.Paint) or\n            int). For saveLayer() calls the matrix\n            was always restored for Hardware accelerated\n            canvases and as of API level {@value Build.VERSION_CODES#O} that is the default\n            behavior for all canvas types.</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clipOutPath' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-clipOutPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-clipOutPath' class='name expandable'>clipOutPath</a>( <span class='pre'>path</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the clip to the difference of the current clip and the specified path. ...</div><div class='long'><p>Set the clip to the difference of the current clip and the specified path.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : Object {Path}<div class='sub-desc'><p>The path used in the difference operation</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the resulting clip is non-empty</p>\n</div></li></ul></div></div></div><div id='method-clipOutRect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-clipOutRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-clipOutRect' class='name expandable'>clipOutRect</a>( <span class='pre'>left, top, right, bottom</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the clip to the difference of the current clip and the specified rectangle, which is\n expressed in local coordina...</div><div class='long'><p>Set the clip to the difference of the current clip and the specified rectangle, which is\n expressed in local coordinates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>The left side of the rectangle used in the difference operation</p>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>The top of the rectangle used in the difference operation</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>The right side of the rectangle used in the difference operation</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>The bottom of the rectangle used in the difference operation</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the resulting clip is non-empty</p>\n</div></li></ul></div></div></div><div id='method-clipPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-clipPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-clipPath' class='name expandable'>clipPath</a>( <span class='pre'>path</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Intersect the current clip with the specified path. ...</div><div class='long'><p>Intersect the current clip with the specified path.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : Object {Path}<div class='sub-desc'><p>The path to intersect with the current clip</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the resulting clip is non-empty</p>\n</div></li></ul></div></div></div><div id='method-clipRect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-clipRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-clipRect' class='name expandable'>clipRect</a>( <span class='pre'>left, top, right, bottom</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Intersect the current clip with the specified rectangle, which is\n expressed in local coordinates. ...</div><div class='long'><p>Intersect the current clip with the specified rectangle, which is\n expressed in local coordinates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>The left side of the rectangle to intersect with the\n               current clip</p>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>The top of the rectangle to intersect with the current clip</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>The right side of the rectangle to intersect with the\n               current clip</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>The bottom of the rectangle to intersect with the current\n               clip</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the resulting clip is non-empty</p>\n</div></li></ul></div></div></div><div id='method-clipRegion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-clipRegion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-clipRegion' class='name expandable'>clipRegion</a>( <span class='pre'>region</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Intersect the current clip with the specified region. ...</div><div class='long'><p>Intersect the current clip with the specified region. Note that unlike\n clipRect() and clipPath() which transform their arguments by the\n current matrix, clipRegion() assumes its argument is already in the\n coordinate system of the current layer's bitmap, and so not\n transformation is performed.</p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Unlike all other clip calls this API does not respect the\n             current matrix. Use clipRect(Rect) as an alternative.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>region</span> : Object {Region}<div class='sub-desc'><p>The region to operate on the current clip, based on op</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the resulting is non-empty</p>\n</div></li></ul></div></div></div><div id='method-concat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-concat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-concat' class='name expandable'>concat</a>( <span class='pre'>matrix</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Preconcat the current matrix with the specified matrix. ...</div><div class='long'><p>Preconcat the current matrix with the specified matrix. If the specified\n matrix is null, this method does nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>matrix</span> : Object {Matrix}<div class='sub-desc'><p>The matrix to preconcatenate with the current matrix</p>\n</div></li></ul></div></div></div><div id='method-disableZ' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-disableZ' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-disableZ' class='name expandable'>disableZ</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Disables Z support, preventing any RenderNodes drawn after this point from being\n visually reordered or having shadow...</div><div class='long'><p>Disables Z support, preventing any RenderNodes drawn after this point from being\n visually reordered or having shadows rendered.</p>\n\n<p> Note: This is not impacted by any <a href=\"#!/api/android.graphics.Canvas-method-save\" rel=\"android.graphics.Canvas-method-save\" class=\"docClass\">save</a>() or <a href=\"#!/api/android.graphics.Canvas-method-restore\" rel=\"android.graphics.Canvas-method-restore\" class=\"docClass\">restore</a>() calls as it is not\n considered to be part of the current matrix or clip.</p>\n\n<p> See <a href=\"#!/api/android.graphics.Canvas-method-enableZ\" rel=\"android.graphics.Canvas-method-enableZ\" class=\"docClass\">enableZ</a>()</p>\n</div></div></div><div id='method-drawARGB' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawARGB' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawARGB' class='name expandable'>drawARGB</a>( <span class='pre'>a, r, g, b</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fill the entire canvas' bitmap (restricted to the current clip) with the specified ARGB\n color, using srcover porterd...</div><div class='long'><p>Fill the entire canvas' bitmap (restricted to the current clip) with the specified ARGB\n color, using srcover porterduff mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Number<div class='sub-desc'><p>alpha component (0..255) of the color to draw onto the canvas</p>\n</div></li><li><span class='pre'>r</span> : Number<div class='sub-desc'><p>red component (0..255) of the color to draw onto the canvas</p>\n</div></li><li><span class='pre'>g</span> : Number<div class='sub-desc'><p>green component (0..255) of the color to draw onto the canvas</p>\n</div></li><li><span class='pre'>b</span> : Number<div class='sub-desc'><p>blue component (0..255) of the color to draw onto the canvas</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawARGB\" rel=\"android.graphics.BaseCanvas-method-drawARGB\" class=\"docClass\">android.graphics.BaseCanvas.drawARGB</a></p></div></div></div><div id='method-drawArc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawArc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawArc' class='name expandable'>drawArc</a>( <span class='pre'>startAngle, sweepAngle, useCenter, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the specified arc, which will be scaled to fit inside the specified oval. ...</div><div class='long'><p>\n Draw the specified arc, which will be scaled to fit inside the specified oval.\n </p>\n\n\n<p> <p>\n If the start angle is negative or >= 360, the start angle is treated as start angle modulo\n 360.\n </p>\n <p>\n If the sweep angle is >= 360, then the oval is drawn completely. Note that this differs\n slightly from SkPath::arcTo, which treats the sweep angle modulo 360. If the sweep angle is\n negative, the sweep angle is treated as sweep angle modulo 360\n </p>\n <p>\n The arc is drawn clockwise. An angle of 0 degrees correspond to the geometric angle of 0\n degrees (3 o'clock on a watch.)\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startAngle</span> : Number<div class='sub-desc'><p>Starting angle (in degrees) where the arc begins</p>\n</div></li><li><span class='pre'>sweepAngle</span> : Number<div class='sub-desc'><p>Sweep angle (in degrees) measured clockwise</p>\n</div></li><li><span class='pre'>useCenter</span> : Number<div class='sub-desc'><p>If true, include the center of the oval in the arc, and close it if it is\n            being stroked. This will draw a wedge</p>\n</div></li><li><span class='pre'>paint</span> : Number<div class='sub-desc'><p>The paint used to draw the arc</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawArc\" rel=\"android.graphics.BaseCanvas-method-drawArc\" class=\"docClass\">android.graphics.BaseCanvas.drawArc</a></p></div></div></div><div id='method-drawBitmap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawBitmap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawBitmap' class='name expandable'>drawBitmap</a>( <span class='pre'>bitmap, matrix, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the bitmap using the specified matrix. ...</div><div class='long'><p>Draw the bitmap using the specified matrix.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bitmap</span> : Object {Bitmap}<div class='sub-desc'><p>The bitmap to draw</p>\n</div></li><li><span class='pre'>matrix</span> : Object {Matrix}<div class='sub-desc'><p>The matrix used to transform the bitmap when it is drawn</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>May be null. The paint used to draw the bitmap</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawBitmap\" rel=\"android.graphics.BaseCanvas-method-drawBitmap\" class=\"docClass\">android.graphics.BaseCanvas.drawBitmap</a></p></div></div></div><div id='method-drawBitmapMesh' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawBitmapMesh' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawBitmapMesh' class='name expandable'>drawBitmapMesh</a>( <span class='pre'>bitmap, meshWidth, meshHeight, verts, vertOffset, colors, colorOffset, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the bitmap through the mesh, where mesh vertices are evenly distributed across the\n bitmap. ...</div><div class='long'><p>Draw the bitmap through the mesh, where mesh vertices are evenly distributed across the\n bitmap. There are meshWidth+1 vertices across, and meshHeight+1 vertices down. The verts\n array is accessed in row-major order, so that the first meshWidth+1 vertices are distributed\n across the top of the bitmap from left to right. A more general version of this method is\n drawVertices().</p>\n\n<p> Prior to API level {@value Build.VERSION_CODES#P} vertOffset and colorOffset were ignored,\n effectively treating them as zeros. In API level {@value Build.VERSION_CODES#P} and above\n these parameters will be respected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bitmap</span> : Object {Bitmap}<div class='sub-desc'><p>The bitmap to draw using the mesh</p>\n</div></li><li><span class='pre'>meshWidth</span> : Number<div class='sub-desc'><p>The number of columns in the mesh. Nothing is drawn if this is 0</p>\n</div></li><li><span class='pre'>meshHeight</span> : Number<div class='sub-desc'><p>The number of rows in the mesh. Nothing is drawn if this is 0</p>\n</div></li><li><span class='pre'>verts</span> : Object {float[]}<div class='sub-desc'><p>Array of x,y pairs, specifying where the mesh should be drawn. There must be at\n            least (meshWidth+1) * (meshHeight+1) * 2 + vertOffset values in the array</p>\n</div></li><li><span class='pre'>vertOffset</span> : Number<div class='sub-desc'><p>Number of verts elements to skip before drawing</p>\n</div></li><li><span class='pre'>colors</span> : Object {int[]}<div class='sub-desc'><p>May be null. Specifies a color at each vertex, which is interpolated across the\n            cell, and whose values are multiplied by the corresponding bitmap colors. If not\n            null, there must be at least (meshWidth+1) * (meshHeight+1) + colorOffset values\n            in the array.</p>\n</div></li><li><span class='pre'>colorOffset</span> : Number<div class='sub-desc'><p>Number of color elements to skip before drawing</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>May be null. The paint used to draw the bitmap</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawBitmapMesh\" rel=\"android.graphics.BaseCanvas-method-drawBitmapMesh\" class=\"docClass\">android.graphics.BaseCanvas.drawBitmapMesh</a></p></div></div></div><div id='method-drawCircle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawCircle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawCircle' class='name expandable'>drawCircle</a>( <span class='pre'>cx, cy, radius, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the specified circle using the specified paint. ...</div><div class='long'><p>Draw the specified circle using the specified paint. If radius is &lt;= 0, then nothing will be\n drawn. The circle will be filled or framed based on the Style in the paint.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cx</span> : Number<div class='sub-desc'><p>The x-coordinate of the center of the circle to be drawn</p>\n</div></li><li><span class='pre'>cy</span> : Number<div class='sub-desc'><p>The y-coordinate of the center of the circle to be drawn</p>\n</div></li><li><span class='pre'>radius</span> : Number<div class='sub-desc'><p>The radius of the circle to be drawn</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used to draw the circle</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawCircle\" rel=\"android.graphics.BaseCanvas-method-drawCircle\" class=\"docClass\">android.graphics.BaseCanvas.drawCircle</a></p></div></div></div><div id='method-drawColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawColor' class='name expandable'>drawColor</a>( <span class='pre'>color, mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fill the entire canvas' bitmap (restricted to the current clip) with the specified color and\n blendmode. ...</div><div class='long'><p>Fill the entire canvas' bitmap (restricted to the current clip) with the specified color and\n blendmode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>the {@code ColorLong} to draw onto the canvas. See the Color\n              class for details about {@code ColorLong}s.</p>\n</div></li><li><span class='pre'>mode</span> : Object {BlendMode}<div class='sub-desc'><p>the blendmode to apply to the color</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the color space encoded in the {@code ColorLong}\n                                  is invalid or unknown.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawColor\" rel=\"android.graphics.BaseCanvas-method-drawColor\" class=\"docClass\">android.graphics.BaseCanvas.drawColor</a></p></div></div></div><div id='method-drawDoubleRoundRect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawDoubleRoundRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawDoubleRoundRect' class='name expandable'>drawDoubleRoundRect</a>( <span class='pre'>outer, outerRadii, inner, innerRadii, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draws a double rounded rectangle using the specified paint. ...</div><div class='long'><p>Draws a double rounded rectangle using the specified paint. The resultant round rect\n will be filled in the area defined between the outer and inner rectangular bounds if\n the <a href=\"#!/api/android.graphics.Paint\" rel=\"android.graphics.Paint\" class=\"docClass\">android.graphics.Paint</a> configured with <a href=\"#!/api/android.graphics.Paint.Style-property-FILL\" rel=\"android.graphics.Paint.Style-property-FILL\" class=\"docClass\">android.graphics.Paint.Style.FILL</a>.\n Otherwise if <a href=\"#!/api/android.graphics.Paint.Style-property-STROKE\" rel=\"android.graphics.Paint.Style-property-STROKE\" class=\"docClass\">android.graphics.Paint.Style.STROKE</a> is used, then 2 rounded rect strokes will\n be drawn at the outer and inner rounded rectangles</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outer</span> : Object {RectF}<div class='sub-desc'><p>The outer rectangular bounds of the roundRect to be drawn</p>\n</div></li><li><span class='pre'>outerRadii</span> : Object {float[]}<div class='sub-desc'><p>Array of 8 float representing the x, y corner radii for top left,\n                   top right, bottom right, bottom left corners respectively on the outer\n                   rounded rectangle</p>\n</div></li><li><span class='pre'>inner</span> : Object {RectF}<div class='sub-desc'><p>The inner rectangular bounds of the roundRect to be drawn</p>\n</div></li><li><span class='pre'>innerRadii</span> : Object {float[]}<div class='sub-desc'><p>Array of 8 float representing the x, y corner radii for top left,\n                   top right, bottom right, bottom left corners respectively on the\n                   outer rounded rectangle</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used to draw the double roundRect</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawDoubleRoundRect\" rel=\"android.graphics.BaseCanvas-method-drawDoubleRoundRect\" class=\"docClass\">android.graphics.BaseCanvas.drawDoubleRoundRect</a></p></div></div></div><div id='method-drawLine' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawLine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawLine' class='name expandable'>drawLine</a>( <span class='pre'>startX, startY, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw a line segment with the specified start and stop x,y coordinates, using the specified\n paint. ...</div><div class='long'><p>Draw a line segment with the specified start and stop x,y coordinates, using the specified\n paint.\n <p>\n Note that since a line is always \"framed\", the Style is ignored in the paint.\n </p>\n <p>\n Degenerate lines (length is 0) will not be drawn.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startX</span> : Number<div class='sub-desc'><p>The x-coordinate of the start point of the line</p>\n</div></li><li><span class='pre'>startY</span> : Number<div class='sub-desc'><p>The y-coordinate of the start point of the line</p>\n</div></li><li><span class='pre'>paint</span> : Number<div class='sub-desc'><p>The paint used to draw the line</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawLine\" rel=\"android.graphics.BaseCanvas-method-drawLine\" class=\"docClass\">android.graphics.BaseCanvas.drawLine</a></p></div></div></div><div id='method-drawLines' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawLines' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawLines' class='name expandable'>drawLines</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawLines\" rel=\"android.graphics.BaseCanvas-method-drawLines\" class=\"docClass\">android.graphics.BaseCanvas.drawLines</a></p></div></div></div><div id='method-drawOval' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawOval' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawOval' class='name expandable'>drawOval</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the specified oval using the specified paint. ...</div><div class='long'><p>Draw the specified oval using the specified paint. The oval will be filled or framed based on\n the Style in the paint.</p>\n<p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawOval\" rel=\"android.graphics.BaseCanvas-method-drawOval\" class=\"docClass\">android.graphics.BaseCanvas.drawOval</a></p></div></div></div><div id='method-drawPaint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawPaint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawPaint' class='name expandable'>drawPaint</a>( <span class='pre'>paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fill the entire canvas' bitmap (restricted to the current clip) with the specified paint. ...</div><div class='long'><p>Fill the entire canvas' bitmap (restricted to the current clip) with the specified paint.\n This is equivalent (but faster) to drawing an infinitely large rectangle with the specified\n paint.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used to draw onto the canvas</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawPaint\" rel=\"android.graphics.BaseCanvas-method-drawPaint\" class=\"docClass\">android.graphics.BaseCanvas.drawPaint</a></p></div></div></div><div id='method-drawPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawPath' class='name expandable'>drawPath</a>( <span class='pre'>path, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the specified path using the specified paint. ...</div><div class='long'><p>Draw the specified path using the specified paint. The path will be filled or framed based on\n the Style in the paint.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : Object {Path}<div class='sub-desc'><p>The path to be drawn</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used to draw the path</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawPath\" rel=\"android.graphics.BaseCanvas-method-drawPath\" class=\"docClass\">android.graphics.BaseCanvas.drawPath</a></p></div></div></div><div id='method-drawPicture' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawPicture' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawPicture' class='name expandable'>drawPicture</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the picture, stretched to fit into the dst rectangle. ...</div><div class='long'><p>Draw the picture, stretched to fit into the dst rectangle.</p>\n</div></div></div><div id='method-drawPoint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawPoint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawPoint' class='name expandable'>drawPoint</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Helper for drawPoints() for drawing a single point. ...</div><div class='long'><p>Helper for drawPoints() for drawing a single point.</p>\n<p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawPoint\" rel=\"android.graphics.BaseCanvas-method-drawPoint\" class=\"docClass\">android.graphics.BaseCanvas.drawPoint</a></p></div></div></div><div id='method-drawPoints' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawPoints' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawPoints' class='name expandable'>drawPoints</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Helper for drawPoints() that assumes you want to draw the entire array ...</div><div class='long'><p>Helper for drawPoints() that assumes you want to draw the entire array</p>\n<p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawPoints\" rel=\"android.graphics.BaseCanvas-method-drawPoints\" class=\"docClass\">android.graphics.BaseCanvas.drawPoints</a></p></div></div></div><div id='method-drawPosText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawPosText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawPosText' class='name expandable'>drawPosText</a>( <span class='pre'>text, pos, paint</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Draw the text in the array, with each character's origin specified by the pos array. ...</div><div class='long'><p>Draw the text in the array, with each character's origin specified by the pos array.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method does not support glyph composition and decomposition and should\n             therefore not be used to render complex scripts. It also doesn't handle\n             supplementary characters (eg emoji).</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to be drawn</p>\n</div></li><li><span class='pre'>pos</span> : Object {float[]}<div class='sub-desc'><p>Array of [x,y] positions, used to position each character</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used for the text (e.g. color, size, style)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawPosText\" rel=\"android.graphics.BaseCanvas-method-drawPosText\" class=\"docClass\">android.graphics.BaseCanvas.drawPosText</a></p></div></div></div><div id='method-drawRGB' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawRGB' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawRGB' class='name expandable'>drawRGB</a>( <span class='pre'>r, g, b</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fill the entire canvas' bitmap (restricted to the current clip) with the specified RGB color,\n using srcover porterdu...</div><div class='long'><p>Fill the entire canvas' bitmap (restricted to the current clip) with the specified RGB color,\n using srcover porterduff mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>r</span> : Number<div class='sub-desc'><p>red component (0..255) of the color to draw onto the canvas</p>\n</div></li><li><span class='pre'>g</span> : Number<div class='sub-desc'><p>green component (0..255) of the color to draw onto the canvas</p>\n</div></li><li><span class='pre'>b</span> : Number<div class='sub-desc'><p>blue component (0..255) of the color to draw onto the canvas</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawRGB\" rel=\"android.graphics.BaseCanvas-method-drawRGB\" class=\"docClass\">android.graphics.BaseCanvas.drawRGB</a></p></div></div></div><div id='method-drawRect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawRect' class='name expandable'>drawRect</a>( <span class='pre'>left, top, right, bottom, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the specified Rect using the specified paint. ...</div><div class='long'><p>Draw the specified Rect using the specified paint. The rectangle will be filled or framed\n based on the Style in the paint.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>The left side of the rectangle to be drawn</p>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>The top side of the rectangle to be drawn</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>The right side of the rectangle to be drawn</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>The bottom side of the rectangle to be drawn</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used to draw the rect</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawRect\" rel=\"android.graphics.BaseCanvas-method-drawRect\" class=\"docClass\">android.graphics.BaseCanvas.drawRect</a></p></div></div></div><div id='method-drawRenderNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawRenderNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawRenderNode' class='name expandable'>drawRenderNode</a>( <span class='pre'>renderNode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draws the given RenderNode. ...</div><div class='long'><p>Draws the given RenderNode. This is only supported in hardware rendering, which can be\n verified by asserting that <a href=\"#!/api/android.graphics.Canvas-method-isHardwareAccelerated\" rel=\"android.graphics.Canvas-method-isHardwareAccelerated\" class=\"docClass\">isHardwareAccelerated</a>() is true. If\n <a href=\"#!/api/android.graphics.Canvas-method-isHardwareAccelerated\" rel=\"android.graphics.Canvas-method-isHardwareAccelerated\" class=\"docClass\">isHardwareAccelerated</a>() is false then this throws an exception.</p>\n\n<p> See <a href=\"#!/api/android.graphics.RenderNode\" rel=\"android.graphics.RenderNode\" class=\"docClass\">android.graphics.RenderNode</a> for more information on what a RenderNode is and how to use it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>renderNode</span> : Object {RenderNode}<div class='sub-desc'><p>The RenderNode to draw, must be non-null.</p>\n</div></li></ul></div></div></div><div id='method-drawRoundRect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawRoundRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawRoundRect' class='name expandable'>drawRoundRect</a>( <span class='pre'>rx, ry, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the specified round-rect using the specified paint. ...</div><div class='long'><p>Draw the specified round-rect using the specified paint. The roundrect will be filled or\n framed based on the Style in the paint.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rx</span> : Number<div class='sub-desc'><p>The x-radius of the oval used to round the corners</p>\n</div></li><li><span class='pre'>ry</span> : Number<div class='sub-desc'><p>The y-radius of the oval used to round the corners</p>\n</div></li><li><span class='pre'>paint</span> : Number<div class='sub-desc'><p>The paint used to draw the roundRect</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawRoundRect\" rel=\"android.graphics.BaseCanvas-method-drawRoundRect\" class=\"docClass\">android.graphics.BaseCanvas.drawRoundRect</a></p></div></div></div><div id='method-drawText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawText' class='name expandable'>drawText</a>( <span class='pre'>text, start, end, x, y, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the specified range of text, specified by start/end, with its origin at (x,y), in the\n specified Paint. ...</div><div class='long'><p>Draw the specified range of text, specified by start/end, with its origin at (x,y), in the\n specified Paint. The origin is interpreted based on the Align setting in the Paint.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>The text to be drawn</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>The index of the first character in text to draw</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>(end - 1) is the index of the last character in text to draw</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>The x-coordinate of origin for where to draw the text</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The y-coordinate of origin for where to draw the text</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used for the text (e.g. color, size, style)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawText\" rel=\"android.graphics.BaseCanvas-method-drawText\" class=\"docClass\">android.graphics.BaseCanvas.drawText</a></p></div></div></div><div id='method-drawTextOnPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawTextOnPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawTextOnPath' class='name expandable'>drawTextOnPath</a>( <span class='pre'>text, path, hOffset, vOffset, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the text, with origin at (x,y), using the specified paint, along the specified path. ...</div><div class='long'><p>Draw the text, with origin at (x,y), using the specified paint, along the specified path. The\n paint's Align setting determins where along the path to start the text.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to be drawn</p>\n</div></li><li><span class='pre'>path</span> : Object {Path}<div class='sub-desc'><p>The path the text should follow for its baseline</p>\n</div></li><li><span class='pre'>hOffset</span> : Number<div class='sub-desc'><p>The distance along the path to add to the text's starting position</p>\n</div></li><li><span class='pre'>vOffset</span> : Number<div class='sub-desc'><p>The distance above(-) or below(+) the path to position the text</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>The paint used for the text (e.g. color, size, style)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawTextOnPath\" rel=\"android.graphics.BaseCanvas-method-drawTextOnPath\" class=\"docClass\">android.graphics.BaseCanvas.drawTextOnPath</a></p></div></div></div><div id='method-drawTextRun' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawTextRun' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawTextRun' class='name expandable'>drawTextRun</a>( <span class='pre'>text, start, end, contextStart, contextEnd, x, y, isRtl, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw a run of text, all in a single direction, with optional context for complex text\n shaping. ...</div><div class='long'><p>Draw a run of text, all in a single direction, with optional context for complex text\n shaping.\n <p>\n See int, int, int, int, float, float, boolean, android.graphics.Paint) for\n more details. This method uses a MeasuredText rather than CharSequence to represent\n the string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {MeasuredText}<div class='sub-desc'><p>the text to render</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the start of the text to render. Data before this position can be used for\n            shaping context.</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the end of the text to render. Data at or after this position can be used for\n            shaping context.</p>\n</div></li><li><span class='pre'>contextStart</span> : Number<div class='sub-desc'><p>the index of the start of the shaping context</p>\n</div></li><li><span class='pre'>contextEnd</span> : Number<div class='sub-desc'><p>the index of the end of the shaping context</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the x position at which to draw the text</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>the y position at which to draw the text</p>\n</div></li><li><span class='pre'>isRtl</span> : Boolean<div class='sub-desc'><p>whether the run is in RTL direction</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>the paint</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawTextRun\" rel=\"android.graphics.BaseCanvas-method-drawTextRun\" class=\"docClass\">android.graphics.BaseCanvas.drawTextRun</a></p></div></div></div><div id='method-drawVertices' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-drawVertices' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-drawVertices' class='name expandable'>drawVertices</a>( <span class='pre'>mode, vertexCount, verts, vertOffset, texs, texOffset, colors, colorOffset, indices, indexCount, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw the array of vertices, interpreted as triangles (based on mode). ...</div><div class='long'><p>Draw the array of vertices, interpreted as triangles (based on mode). The verts array is\n required, and specifies the x,y pairs for each vertex. If texs is non-null, then it is used\n to specify the coordinate in shader coordinates to use at each vertex (the paint must have a\n shader in this case). If there is no texs array, but there is a color array, then each color\n is interpolated across its corresponding triangle in a gradient. If both texs and colors\n arrays are present, then they behave as before, but the resulting color at each pixels is the\n result of multiplying the colors from the shader and the color-gradient together. The indices\n array is optional, but if it is present, then it is used to specify the index of each\n triangle, rather than just walking through the arrays in order.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Object {Canvas.VertexMode}<div class='sub-desc'><p>How to interpret the array of vertices</p>\n</div></li><li><span class='pre'>vertexCount</span> : Number<div class='sub-desc'><p>The number of values in the vertices array (and corresponding texs and\n            colors arrays if non-null). Each logical vertex is two values (x, y), vertexCount\n            must be a multiple of 2.</p>\n</div></li><li><span class='pre'>verts</span> : Object {float[]}<div class='sub-desc'><p>Array of vertices for the mesh</p>\n</div></li><li><span class='pre'>vertOffset</span> : Number<div class='sub-desc'><p>Number of values in the verts to skip before drawing.</p>\n</div></li><li><span class='pre'>texs</span> : Object {float[]}<div class='sub-desc'><p>May be null. If not null, specifies the coordinates to sample into the current\n            shader (e.g. bitmap tile or gradient)</p>\n</div></li><li><span class='pre'>texOffset</span> : Number<div class='sub-desc'><p>Number of values in texs to skip before drawing.</p>\n</div></li><li><span class='pre'>colors</span> : Object {int[]}<div class='sub-desc'><p>May be null. If not null, specifies a color for each vertex, to be interpolated\n            across the triangle.</p>\n</div></li><li><span class='pre'>colorOffset</span> : Number<div class='sub-desc'><p>Number of values in colors to skip before drawing.</p>\n</div></li><li><span class='pre'>indices</span> : Object {short[]}<div class='sub-desc'><p>If not null, array of indices to reference into the vertex (texs, colors)\n            array.</p>\n</div></li><li><span class='pre'>indexCount</span> : Number<div class='sub-desc'><p>number of entries in the indices array (if not null).</p>\n</div></li><li><span class='pre'>paint</span> : Number<div class='sub-desc'><p>Specifies the shader to use if the texs array is non-null.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-drawVertices\" rel=\"android.graphics.BaseCanvas-method-drawVertices\" class=\"docClass\">android.graphics.BaseCanvas.drawVertices</a></p></div></div></div><div id='method-enableZ' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-enableZ' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-enableZ' class='name expandable'>enableZ</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enables Z support which defaults to disabled. ...</div><div class='long'><p>Enables Z support which defaults to disabled. This allows for RenderNodes drawn with\n <a href=\"#!/api/android.graphics.Canvas-method-drawRenderNode\" rel=\"android.graphics.Canvas-method-drawRenderNode\" class=\"docClass\">drawRenderNode</a>(RenderNode) to be re-arranged based off of their\n android.graphics.RenderNode.getElevation() and android.graphics.RenderNode.getTranslationZ()\n values. It also enables rendering of shadows for RenderNodes with an elevation or\n translationZ.</p>\n\n\n<p> <p>Any draw reordering will not be moved before this call. A typical usage of this might\n look something like:</p>\n\n<p> <pre class=\"prettyprint\">\n     void draw(Canvas canvas) {\n         // Draw any background content\n         canvas.drawColor(backgroundColor);</pre></p>\n\n<pre><code>     // Begin drawing that may be reordered based off of Z\n     canvas.enableZ();\n     for (RenderNode child : children) {\n         canvas.drawRenderNode(child);\n     }\n     // End drawing that may be reordered based off of Z\n     canvas.disableZ();\n\n     // Draw any overlays\n     canvas.drawText(\"I'm on top of everything!\", 0, 0, paint);\n }\n</code></pre>\n\n<p> \n </p></p>\n\n<p> Note: This is not impacted by any <a href=\"#!/api/android.graphics.Canvas-method-save\" rel=\"android.graphics.Canvas-method-save\" class=\"docClass\">save</a>() or <a href=\"#!/api/android.graphics.Canvas-method-restore\" rel=\"android.graphics.Canvas-method-restore\" class=\"docClass\">restore</a>() calls as it is not\n considered to be part of the current matrix or clip.</p>\n\n<p> See <a href=\"#!/api/android.graphics.Canvas-method-disableZ\" rel=\"android.graphics.Canvas-method-disableZ\" class=\"docClass\">disableZ</a>()</p>\n</div></div></div><div id='method-getClipBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getClipBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getClipBounds' class='name expandable'>getClipBounds</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the bounds of the current clip (in local coordinates). ...</div><div class='long'><p>Retrieve the bounds of the current clip (in local coordinates).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>the clip bounds, or [0, 0, 0, 0] if the clip is empty.</p>\n</div></li></ul></div></div></div><div id='method-getDensity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getDensity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getDensity' class='name expandable'>getDensity</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the target density of the canvas. ...</div><div class='long'><p>Returns the target density of the canvas.  The default density is\n derived from the density of its backing bitmap, or\n <a href=\"#!/api/android.graphics.Bitmap-property-DENSITY_NONE\" rel=\"android.graphics.Bitmap-property-DENSITY_NONE\" class=\"docClass\">android.graphics.Bitmap.DENSITY_NONE</a> if there is not one.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns the current target density of the canvas, which is used\n to determine the scaling factor when drawing a bitmap into it.\n@see <a href=\"#!/api/android.graphics.Canvas-method-setDensity\" rel=\"android.graphics.Canvas-method-setDensity\" class=\"docClass\">setDensity</a>(int)\n@see Bitmap#getDensity()</p>\n</div></li></ul></div></div></div><div id='method-getDrawFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getDrawFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getDrawFilter' class='name expandable'>getDrawFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getHeight' class='name expandable'>getHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the height of the current drawing layer ...</div><div class='long'><p>Returns the height of the current drawing layer</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the height of the current drawing layer</p>\n</div></li></ul></div></div></div><div id='method-getMatrix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getMatrix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getMatrix' class='name expandable'>getMatrix</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return a new matrix with a copy of the canvas' current transformation\n matrix. ...</div><div class='long'><p>Return a new matrix with a copy of the canvas' current transformation\n matrix.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Hardware accelerated canvases may have any\n matrix when passed to a View or Drawable, as it is implementation defined where in the\n hierarchy such canvases are created. It is recommended in such cases to either draw contents\n irrespective of the current matrix, or to track relevant transform state outside of the\n canvas.</p>\n\n        </div>\n</div></div></div><div id='method-getMaximumBitmapHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getMaximumBitmapHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getMaximumBitmapHeight' class='name expandable'>getMaximumBitmapHeight</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum allowed height for bitmaps drawn with this canvas. ...</div><div class='long'><p>Returns the maximum allowed height for bitmaps drawn with this canvas.\n Attempting to draw with a bitmap taller than this value will result\n in an error.\n@see <a href=\"#!/api/android.graphics.Canvas-method-getMaximumBitmapWidth\" rel=\"android.graphics.Canvas-method-getMaximumBitmapWidth\" class=\"docClass\">getMaximumBitmapWidth</a>()</p>\n</div></div></div><div id='method-getMaximumBitmapWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getMaximumBitmapWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getMaximumBitmapWidth' class='name expandable'>getMaximumBitmapWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum allowed width for bitmaps drawn with this canvas. ...</div><div class='long'><p>Returns the maximum allowed width for bitmaps drawn with this canvas.\n Attempting to draw with a bitmap wider than this value will result\n in an error.\n@see <a href=\"#!/api/android.graphics.Canvas-method-getMaximumBitmapHeight\" rel=\"android.graphics.Canvas-method-getMaximumBitmapHeight\" class=\"docClass\">getMaximumBitmapHeight</a>()</p>\n</div></div></div><div id='method-getSaveCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getSaveCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getSaveCount' class='name expandable'>getSaveCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of matrix/clip states on the Canvas' private stack. ...</div><div class='long'><p>Returns the number of matrix/clip states on the Canvas' private stack.\n This will equal # save() calls - # restore() calls.</p>\n</div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the width of the current drawing layer ...</div><div class='long'><p>Returns the width of the current drawing layer</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the width of the current drawing layer</p>\n</div></li></ul></div></div></div><div id='method-isHardwareAccelerated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-isHardwareAccelerated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-isHardwareAccelerated' class='name expandable'>isHardwareAccelerated</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether this Canvas uses hardware acceleration. ...</div><div class='long'><p>Indicates whether this Canvas uses hardware acceleration.</p>\n\n<p> Note that this method does not define what type of hardware acceleration\n may or may not be used.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if drawing operations are hardware accelerated,\n         false otherwise.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.BaseCanvas-method-isHardwareAccelerated\" rel=\"android.graphics.BaseCanvas-method-isHardwareAccelerated\" class=\"docClass\">android.graphics.BaseCanvas.isHardwareAccelerated</a></p></div></div></div><div id='method-isOpaque' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-isOpaque' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-isOpaque' class='name expandable'>isOpaque</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the device that the current layer draws into is opaque\n (i.e. ...</div><div class='long'><p>Return true if the device that the current layer draws into is opaque\n (i.e. does not support per-pixel alpha).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the device that the current layer draws into is opaque</p>\n</div></li></ul></div></div></div><div id='method-quickReject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-quickReject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-quickReject' class='name expandable'>quickReject</a>( <span class='pre'>left, top, right, bottom, type</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the specified rectangle, after being transformed by the\n current matrix, would lie completely outside ...</div><div class='long'><p>Return true if the specified rectangle, after being transformed by the\n current matrix, would lie completely outside of the current clip. Call\n this to check if an area you intend to draw into is clipped out (and\n therefore you can skip making the draw calls).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>The left side of the rectangle to compare with the\n                    current clip</p>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>The top of the rectangle to compare with the current\n                    clip</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>The right side of the rectangle to compare with the\n                    current clip</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>The bottom of the rectangle to compare with the\n                    current clip</p>\n</div></li><li><span class='pre'>type</span> : Object {Canvas.EdgeType}<div class='sub-desc'><p>Canvas.EdgeType.AA if the path should be considered antialiased,\n                    since that means it may affect a larger area (more pixels) than\n                    non-antialiased (Canvas.EdgeType.BW).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the rect (transformed by the canvas' matrix)\n                    does not intersect with the canvas' clip</p>\n</div></li></ul></div></div></div><div id='method-restore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-restore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-restore' class='name expandable'>restore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This call balances a previous call to save(), and is used to remove all\n modifications to the matrix/clip state since...</div><div class='long'><p>This call balances a previous call to save(), and is used to remove all\n modifications to the matrix/clip state since the last save call. It is\n an error to call restore() more times than save() was called.</p>\n</div></div></div><div id='method-restoreToCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-restoreToCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-restoreToCount' class='name expandable'>restoreToCount</a>( <span class='pre'>saveCount</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Efficient way to pop any calls to save() that happened after the save\n count reached saveCount. ...</div><div class='long'><p>Efficient way to pop any calls to save() that happened after the save\n count reached saveCount. It is an error for saveCount to be less than 1.</p>\n\n<p> Example:\n    int count = canvas.save();\n    ... // more calls potentially to save()\n    canvas.restoreToCount(count);\n    // now the canvas is back in the same state it was before the initial\n    // call to save().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>saveCount</span> : Number<div class='sub-desc'><p>The save level to restore to.</p>\n</div></li></ul></div></div></div><div id='method-restoreUnclippedLayer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-restoreUnclippedLayer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-restoreUnclippedLayer' class='name expandable'>restoreUnclippedLayer</a>( <span class='pre'>saveCount, paint, paint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>saveCount</span> : Number<div class='sub-desc'><p>The save level to restore to.</p>\n</div></li><li><span class='pre'>paint</span> : Object {Paint}<div class='sub-desc'><p>This is copied and is applied to the area within the unclipped layer's\n                  bounds (i.e. equivalent to a drawPaint()) before restore() is called.</p>\n</div></li><li><span class='pre'>paint</span> : Object<div class='sub-desc'><p>This is copied and is applied to the area within the unclipped layer's\n                  bounds (i.e. equivalent to a drawPaint()) before restore() is called.</p>\n</div></li></ul></div></div></div><div id='method-rotate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-rotate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-rotate' class='name expandable'>rotate</a>( <span class='pre'>degrees, px, py</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Preconcat the current matrix with the specified rotation. ...</div><div class='long'><p>Preconcat the current matrix with the specified rotation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>degrees</span> : Number<div class='sub-desc'><p>The amount to rotate, in degrees</p>\n</div></li><li><span class='pre'>px</span> : Number<div class='sub-desc'><p>The x-coord for the pivot point (unchanged by the rotation)</p>\n</div></li><li><span class='pre'>py</span> : Number<div class='sub-desc'><p>The y-coord for the pivot point (unchanged by the rotation)</p>\n</div></li></ul></div></div></div><div id='method-save' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-save' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-save' class='name expandable'>save</a>( <span class='pre'>saveFlags, saveFlags</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Based on saveFlags, can save the current matrix and clip onto a private\n stack. ...</div><div class='long'><p>Based on saveFlags, can save the current matrix and clip onto a private\n stack.\n <p class=\"note\"><strong>Note:</strong> if possible, use the\n parameter-less save(). It is simpler and faster than individually\n disabling the saving of matrix or clip with this method.\n <p>\n Subsequent calls to translate,scale,rotate,skew,concat or clipRect,\n clipPath will all operate as usual, but when the balancing call to\n restore() is made, those calls will be forgotten, and the settings that\n existed before the save() will be reinstated.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use save() instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>saveFlags</span> : Number<div class='sub-desc'><p>flag bits that specify which parts of the Canvas state\n                  to save/restore</p>\n</div></li><li><span class='pre'>saveFlags</span> : Object<div class='sub-desc'><p>flag bits that specify which parts of the Canvas state\n                  to save/restore</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The value to pass to restoreToCount() to balance this save()</p>\n</div></li></ul></div></div></div><div id='method-saveLayer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-saveLayer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-saveLayer' class='name expandable'>saveLayer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for android.graphics.Paint) that takes the four float coordinates of the\n bounds rectangle. ...</div><div class='long'><p>Convenience for android.graphics.Paint) that takes the four float coordinates of the\n bounds rectangle.</p>\n</div></div></div><div id='method-saveLayerAlpha' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-saveLayerAlpha' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-saveLayerAlpha' class='name expandable'>saveLayerAlpha</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for int) that takes the four float coordinates of\n the bounds rectangle. ...</div><div class='long'><p>Convenience for int) that takes the four float coordinates of\n the bounds rectangle.</p>\n</div></div></div><div id='method-scale' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-scale' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-scale' class='name expandable'>scale</a>( <span class='pre'>sx, sy, px, py</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Preconcat the current matrix with the specified scale. ...</div><div class='long'><p>Preconcat the current matrix with the specified scale.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sx</span> : Number<div class='sub-desc'><p>The amount to scale in X</p>\n</div></li><li><span class='pre'>sy</span> : Number<div class='sub-desc'><p>The amount to scale in Y</p>\n</div></li><li><span class='pre'>px</span> : Number<div class='sub-desc'><p>The x-coord for the pivot point (unchanged by the scale)</p>\n</div></li><li><span class='pre'>py</span> : Number<div class='sub-desc'><p>The y-coord for the pivot point (unchanged by the scale)</p>\n</div></li></ul></div></div></div><div id='method-setBitmap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-setBitmap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-setBitmap' class='name expandable'>setBitmap</a>( <span class='pre'>bitmap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specify a bitmap for the canvas to draw into. ...</div><div class='long'><p>Specify a bitmap for the canvas to draw into. All canvas state such as\n layers, filters, and the save/restore stack are reset. Additionally,\n the canvas' target density is updated to match that of the bitmap.</p>\n\n<p> Prior to API level {@value Build.VERSION_CODES#O} the current matrix and\n clip stack were preserved.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bitmap</span> : Object {Bitmap}<div class='sub-desc'><p>Specifies a mutable bitmap for the canvas to draw into.\n@see <a href=\"#!/api/android.graphics.Canvas-method-setDensity\" rel=\"android.graphics.Canvas-method-setDensity\" class=\"docClass\">setDensity</a>(int)\n@see <a href=\"#!/api/android.graphics.Canvas-method-getDensity\" rel=\"android.graphics.Canvas-method-getDensity\" class=\"docClass\">getDensity</a>()</p>\n</div></li></ul></div></div></div><div id='method-setDensity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-setDensity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-setDensity' class='name expandable'>setDensity</a>( <span class='pre'>density</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies the density for this Canvas' backing bitmap. ...</div><div class='long'><p><p>Specifies the density for this Canvas' backing bitmap.  This modifies\n the target density of the canvas itself, as well as the density of its\n backing bitmap via android.graphics.Bitmap.setDensity(int).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>density</span> : Number<div class='sub-desc'><p>The new target density of the canvas, which is used\n to determine the scaling factor when drawing a bitmap into it.  Use\n Bitmap.DENSITY_NONE to disable bitmap scaling.\n@see <a href=\"#!/api/android.graphics.Canvas-method-getDensity\" rel=\"android.graphics.Canvas-method-getDensity\" class=\"docClass\">getDensity</a>()\n@see Bitmap#setDensity(int)</p>\n</div></li></ul></div></div></div><div id='method-setDrawFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-setDrawFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-setDrawFilter' class='name expandable'>setDrawFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setMatrix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-setMatrix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-setMatrix' class='name expandable'>setMatrix</a>( <span class='pre'>matrix</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Completely replace the current matrix with the specified matrix. ...</div><div class='long'><p>Completely replace the current matrix with the specified matrix. If the\n matrix parameter is null, then the current matrix is reset to identity.</p>\n\n<p> <strong>Note:</strong> it is recommended to use <a href=\"#!/api/android.graphics.Canvas-method-concat\" rel=\"android.graphics.Canvas-method-concat\" class=\"docClass\">concat</a>(Matrix),\n float), float) and\n <a href=\"#!/api/android.graphics.Canvas-method-rotate\" rel=\"android.graphics.Canvas-method-rotate\" class=\"docClass\">rotate</a>(float) instead of this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>matrix</span> : Object {Matrix}<div class='sub-desc'><p>The matrix to replace the current matrix with. If it is\n               null, set the current matrix to identity.\n@see <a href=\"#!/api/android.graphics.Canvas-method-concat\" rel=\"android.graphics.Canvas-method-concat\" class=\"docClass\">concat</a>(Matrix)</p>\n</div></li></ul></div></div></div><div id='method-skew' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-skew' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-skew' class='name expandable'>skew</a>( <span class='pre'>sx, sy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Preconcat the current matrix with the specified skew. ...</div><div class='long'><p>Preconcat the current matrix with the specified skew.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sx</span> : Number<div class='sub-desc'><p>The amount to skew in X</p>\n</div></li><li><span class='pre'>sy</span> : Number<div class='sub-desc'><p>The amount to skew in Y</p>\n</div></li></ul></div></div></div><div id='method-translate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Canvas'>android.graphics.Canvas</span><br/><a href='source/Canvas.html#android-graphics-Canvas-method-translate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Canvas-method-translate' class='name expandable'>translate</a>( <span class='pre'>dx, dy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Preconcat the current matrix with the specified translation ...</div><div class='long'><p>Preconcat the current matrix with the specified translation</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dx</span> : Number<div class='sub-desc'><p>The distance to translate in X</p>\n</div></li><li><span class='pre'>dy</span> : Number<div class='sub-desc'><p>The distance to translate in Y</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});