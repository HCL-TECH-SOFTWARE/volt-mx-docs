Ext.data.JsonP.android_graphics_Color({"tagname":"class","name":"android.graphics.Color","autodetected":{},"files":[{"filename":"Color.js","href":"Color.html#android-graphics-Color"}],"extends":"java.lang.Object","members":[{"name":"BLACK","tagname":"property","owner":"android.graphics.Color","id":"property-BLACK","meta":{}},{"name":"BLUE","tagname":"property","owner":"android.graphics.Color","id":"property-BLUE","meta":{}},{"name":"CYAN","tagname":"property","owner":"android.graphics.Color","id":"property-CYAN","meta":{}},{"name":"DKGRAY","tagname":"property","owner":"android.graphics.Color","id":"property-DKGRAY","meta":{}},{"name":"GRAY","tagname":"property","owner":"android.graphics.Color","id":"property-GRAY","meta":{}},{"name":"GREEN","tagname":"property","owner":"android.graphics.Color","id":"property-GREEN","meta":{}},{"name":"LTGRAY","tagname":"property","owner":"android.graphics.Color","id":"property-LTGRAY","meta":{}},{"name":"MAGENTA","tagname":"property","owner":"android.graphics.Color","id":"property-MAGENTA","meta":{}},{"name":"RED","tagname":"property","owner":"android.graphics.Color","id":"property-RED","meta":{}},{"name":"TRANSPARENT","tagname":"property","owner":"android.graphics.Color","id":"property-TRANSPARENT","meta":{}},{"name":"WHITE","tagname":"property","owner":"android.graphics.Color","id":"property-WHITE","meta":{}},{"name":"YELLOW","tagname":"property","owner":"android.graphics.Color","id":"property-YELLOW","meta":{}},{"name":"HSVToColor","tagname":"method","owner":"android.graphics.Color","id":"method-HSVToColor","meta":{}},{"name":"RGBToHSV","tagname":"method","owner":"android.graphics.Color","id":"method-RGBToHSV","meta":{}},{"name":"alpha","tagname":"method","owner":"android.graphics.Color","id":"method-alpha","meta":{}},{"name":"argb","tagname":"method","owner":"android.graphics.Color","id":"method-argb","meta":{}},{"name":"blue","tagname":"method","owner":"android.graphics.Color","id":"method-blue","meta":{}},{"name":"colorSpace","tagname":"method","owner":"android.graphics.Color","id":"method-colorSpace","meta":{}},{"name":"colorToHSV","tagname":"method","owner":"android.graphics.Color","id":"method-colorToHSV","meta":{}},{"name":"convert","tagname":"method","owner":"android.graphics.Color","id":"method-convert","meta":{}},{"name":"equals","tagname":"method","owner":"android.graphics.Color","id":"method-equals","meta":{}},{"name":"getColorSpace","tagname":"method","owner":"android.graphics.Color","id":"method-getColorSpace","meta":{}},{"name":"getComponent","tagname":"method","owner":"android.graphics.Color","id":"method-getComponent","meta":{}},{"name":"getComponentCount","tagname":"method","owner":"android.graphics.Color","id":"method-getComponentCount","meta":{}},{"name":"getComponents","tagname":"method","owner":"android.graphics.Color","id":"method-getComponents","meta":{}},{"name":"getModel","tagname":"method","owner":"android.graphics.Color","id":"method-getModel","meta":{}},{"name":"green","tagname":"method","owner":"android.graphics.Color","id":"method-green","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.graphics.Color","id":"method-hashCode","meta":{}},{"name":"isInColorSpace","tagname":"method","owner":"android.graphics.Color","id":"method-isInColorSpace","meta":{}},{"name":"isSrgb","tagname":"method","owner":"android.graphics.Color","id":"method-isSrgb","meta":{}},{"name":"isWideGamut","tagname":"method","owner":"android.graphics.Color","id":"method-isWideGamut","meta":{}},{"name":"luminance","tagname":"method","owner":"android.graphics.Color","id":"method-luminance","meta":{}},{"name":"pack","tagname":"method","owner":"android.graphics.Color","id":"method-pack","meta":{}},{"name":"parseColor","tagname":"method","owner":"android.graphics.Color","id":"method-parseColor","meta":{}},{"name":"red","tagname":"method","owner":"android.graphics.Color","id":"method-red","meta":{}},{"name":"rgb","tagname":"method","owner":"android.graphics.Color","id":"method-rgb","meta":{}},{"name":"toArgb","tagname":"method","owner":"android.graphics.Color","id":"method-toArgb","meta":{}},{"name":"toString","tagname":"method","owner":"android.graphics.Color","id":"method-toString","meta":{}},{"name":"valueOf","tagname":"method","owner":"android.graphics.Color","id":"method-valueOf","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.Color","short_doc":"{@usesMathJax}\n\n The Color class provides methods for creating, converting and\n manipulating colors. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.graphics.Color</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Color.html#android-graphics-Color' target='_blank'>Color.js</a></div></pre><div class='doc-contents'><p>{@usesMathJax}</p>\n\n<p> <p>The <code>Color</code> class provides methods for creating, converting and\n manipulating colors. Colors have three different representations:</p>\n <ul>\n     <li>Color ints, the most common representation</li>\n     <li>Color longs</li>\n     <li><code>Color</code> instances</li>\n </ul>\n <p>The section below describe each representation in detail.</p></p>\n\n<p> <h3>Color ints</h3>\n <p>Color ints are the most common representation of colors on Android and\n have been used since API level 1.</p></p>\n\n<p> <p>A color int always defines a color in the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a>\n color space using 4 components packed in a single 32 bit integer value:</p></p>\n\n<p> <table summary=\"Color int definition\">\n     <tr>\n         <th>Component</th><th>Name</th><th>Size</th><th>Range</th>\n     </tr>\n     <tr><td>A</td><td>Alpha</td><td>8 bits</td><td>([0..255])</td></tr>\n     <tr><td>R</td><td>Red</td><td>8 bits</td><td>([0..255])</td></tr>\n     <tr><td>G</td><td>Green</td><td>8 bits</td><td>([0..255])</td></tr>\n     <tr><td>B</td><td>Blue</td><td>8 bits</td><td>([0..255])</td></tr>\n </table></p>\n\n<p> <p>The components in this table are listed in encoding order (see below),\n which is why color ints are called ARGB colors.</p></p>\n\n<p> <h4>Usage in code</h4>\n <p>To avoid confusing color ints with arbitrary integer values, it is a\n good practice to annotate them with the <code>@ColorInt</code> annotation\n found in the Android Support Library.</p></p>\n\n<p> <h4>Encoding</h4>\n <p>The four components of a color int are encoded in the following way:</p>\n <pre class=\"prettyprint\">\n int color = (A &amp; 0xff) &lt;&lt; 24 | (R &amp; 0xff) &lt;&lt; 16 | (G &amp; 0xff) &lt;&lt; 8 | (B &amp; 0xff);\n </pre></p>\n\n<p> <p>Because of this encoding, color ints can easily be described as an integer\n constant in source. For instance, opaque blue is <code>0xff0000ff</code>\n and yellow is <code>0xffffff00</code>.</p></p>\n\n<p> <p>To easily encode color ints, it is recommended to use the static methods\n int, int, int) and int, int). The second\n method omits the alpha component and assumes the color is opaque (alpha is 255).\n As a convenience this class also offers methods to encode color ints from components\n defined in the ([0..1]) range: float, float, float) and\n float, float).</p></p>\n\n<p> <p>Color longs (defined below) can be easily converted to color ints by invoking\n the <a href=\"#!/api/android.graphics.Color-method-toArgb\" rel=\"android.graphics.Color-method-toArgb\" class=\"docClass\">toArgb</a>(long) method. This method performs a color space conversion\n if needed.</p></p>\n\n<p> <p>It is also possible to create a color int by invoking the method <a href=\"#!/api/android.graphics.Color-method-toArgb\" rel=\"android.graphics.Color-method-toArgb\" class=\"docClass\">toArgb</a>()\n on a color instance.</p></p>\n\n<p> <h4>Decoding</h4>\n <p>The four ARGB components can be individually extracted from a color int\n using the following expressions:</p>\n <pre class=\"prettyprint\">\n int A = (color >> 24) &amp; 0xff; // or color >>> 24\n int R = (color >> 16) &amp; 0xff;\n int G = (color >>  8) &amp; 0xff;\n int B = (color      ) &amp; 0xff;\n </pre></p>\n\n<p> <p>This class offers convenience methods to easily extract these components:</p>\n <ul>\n     <li><a href=\"#!/api/android.graphics.Color-method-alpha\" rel=\"android.graphics.Color-method-alpha\" class=\"docClass\">alpha</a>(int) to extract the alpha component</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-red\" rel=\"android.graphics.Color-method-red\" class=\"docClass\">red</a>(int) to extract the red component</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-green\" rel=\"android.graphics.Color-method-green\" class=\"docClass\">green</a>(int) to extract the green component</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-blue\" rel=\"android.graphics.Color-method-blue\" class=\"docClass\">blue</a>(int) to extract the blue component</li>\n </ul></p>\n\n<p> <h3>Color longs</h3>\n <p>Color longs are a representation introduced in\n Android O to store colors in different\n <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">color spaces</a>, with more precision than color ints.</p></p>\n\n<p> <p>A color long always defines a color using 4 components packed in a single\n 64 bit long value. One of these components is always alpha while the other\n three components depend on the color space's <a href=\"#!/api/android.graphics.ColorSpace.Model\" rel=\"android.graphics.ColorSpace.Model\" class=\"docClass\">color model</a>.\n The most common color model is the <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a> model in\n which the components represent red, green and blue values.</p></p>\n\n<p> <p class=\"note\"><b>Component ranges:</b> the ranges defined in the tables\n below indicate the ranges that can be encoded in a color long. They do not\n represent the actual ranges as they may differ per color space. For instance,\n the RGB components of a color in the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-DISPLAY_P3\" rel=\"android.graphics.ColorSpace.Named-property-DISPLAY_P3\" class=\"docClass\">Display P3</a>\n color space use the ([0..1]) range. Please refer to the documentation of the\n various <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">color spaces</a> to find their respective ranges.</p></p>\n\n<p> <p class=\"note\"><b>Alpha range:</b> while alpha is encoded in a color long using\n a 10 bit integer (thus using a range of ([0..1023])), it is converted to and\n from ([0..1]) float values when decoding and encoding color longs.</p></p>\n\n<p> <p class=\"note\"><b>sRGB color space:</b> for compatibility reasons and ease of\n use, color longs encoding <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> colors do not\n use the same encoding as other color longs.</p></p>\n\n<p> <table summary=\"Color long definition\">\n     <tr>\n         <th>Component</th><th>Name</th><th>Size</th><th>Range</th>\n     </tr>\n     <tr><td colspan=\"4\"><a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a> color model</td></tr>\n     <tr><td>R</td><td>Red</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>G</td><td>Green</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>B</td><td>Blue</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>A</td><td>Alpha</td><td>10 bits</td><td>([0..1023])</td></tr>\n     <tr><td></td><td>Color space</td><td>6 bits</td><td>([0..63])</td></tr>\n     <tr><td colspan=\"4\"><a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> color space</td></tr>\n     <tr><td>A</td><td>Alpha</td><td>8 bits</td><td>([0..255])</td></tr>\n     <tr><td>R</td><td>Red</td><td>8 bits</td><td>([0..255])</td></tr>\n     <tr><td>G</td><td>Green</td><td>8 bits</td><td>([0..255])</td></tr>\n     <tr><td>B</td><td>Blue</td><td>8 bits</td><td>([0..255])</td></tr>\n     <tr><td>X</td><td>Unused</td><td>32 bits</td><td>(0)</td></tr>\n     <tr><td colspan=\"4\"><a href=\"#!/api/android.graphics.ColorSpace.Model-property-XYZ\" rel=\"android.graphics.ColorSpace.Model-property-XYZ\" class=\"docClass\">XYZ</a> color model</td></tr>\n     <tr><td>X</td><td>X</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>Y</td><td>Y</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>Z</td><td>Z</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>A</td><td>Alpha</td><td>10 bits</td><td>([0..1023])</td></tr>\n     <tr><td></td><td>Color space</td><td>6 bits</td><td>([0..63])</td></tr>\n     <tr><td colspan=\"4\"><a href=\"#!/api/android.graphics.ColorSpace.Model-property-XYZ\" rel=\"android.graphics.ColorSpace.Model-property-XYZ\" class=\"docClass\">Lab</a> color model</td></tr>\n     <tr><td>L</td><td>L</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>a</td><td>a</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>b</td><td>b</td><td>16 bits</td><td>([-65504.0, 65504.0])</td></tr>\n     <tr><td>A</td><td>Alpha</td><td>10 bits</td><td>([0..1023])</td></tr>\n     <tr><td></td><td>Color space</td><td>6 bits</td><td>([0..63])</td></tr>\n     <tr><td colspan=\"4\"><a href=\"#!/api/android.graphics.ColorSpace.Model-property-CMYK\" rel=\"android.graphics.ColorSpace.Model-property-CMYK\" class=\"docClass\">CMYK</a> color model</td></tr>\n     <tr><td colspan=\"4\">Unsupported</td></tr>\n </table></p>\n\n<p> <p>The components in this table are listed in encoding order (see below),\n which is why color longs in the RGB model are called RGBA colors (even if\n this doesn't quite hold for the special case of sRGB colors).</p></p>\n\n<p> <p>The color long encoding relies on half-precision float values (fp16). If you\n wish to know more about the limitations of half-precision float values, please\n refer to the documentation of the Half class.</p></p>\n\n<p> <h4>Usage in code</h4>\n <p>To avoid confusing color longs with arbitrary long values, it is a\n good practice to annotate them with the <code>@ColorLong</code> annotation\n found in the Android Support Library.</p></p>\n\n<p> <h4>Encoding</h4></p>\n\n<p> <p>Given the complex nature of color longs, it is strongly encouraged to use\n the various methods provided by this class to encode them.</p></p>\n\n<p> <p>The most flexible way to encode a color long is to use the method\n float, float, float, android.graphics.ColorSpace). This method allows you\n to specify three color components (typically RGB), an alpha component and a\n color space. To encode sRGB colors, use float, float)\n and float, float, float) which are the\n equivalent of int, int) and int, int, int)\n for color ints. If you simply need to convert a color int into a color long,\n use <a href=\"#!/api/android.graphics.Color-method-pack\" rel=\"android.graphics.Color-method-pack\" class=\"docClass\">pack</a>(int).</p></p>\n\n<p> <p>It is also possible to create a color long value by invoking the method\n <a href=\"#!/api/android.graphics.Color-method-pack\" rel=\"android.graphics.Color-method-pack\" class=\"docClass\">pack</a>() on a color instance.</p></p>\n\n<p> <h4>Decoding</h4></p>\n\n<p> <p>This class offers convenience methods to easily extract the components\n of a color long:</p>\n <ul>\n     <li><a href=\"#!/api/android.graphics.Color-method-alpha\" rel=\"android.graphics.Color-method-alpha\" class=\"docClass\">alpha</a>(long) to extract the alpha component</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-red\" rel=\"android.graphics.Color-method-red\" class=\"docClass\">red</a>(long) to extract the red/X/L component</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-green\" rel=\"android.graphics.Color-method-green\" class=\"docClass\">green</a>(long) to extract the green/Y/a component</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-blue\" rel=\"android.graphics.Color-method-blue\" class=\"docClass\">blue</a>(long) to extract the blue/Z/b component</li>\n </ul></p>\n\n<p> <p>The values returned by these methods depend on the color space encoded\n in the color long. The values are however typically in the ([0..1]) range\n for RGB colors. Please refer to the documentation of the various\n <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">color spaces</a> for the exact ranges.</p></p>\n\n<p> <h3>Color instances</h3>\n <p>Color instances are a representation introduced in\n Android O to store colors in different\n <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">color spaces</a>, with more precision than both color ints and\n color longs. Color instances also offer the ability to store more than 4\n components if necessary.</p></p>\n\n<p> <p>Colors instances are immutable and can be created using one of the various\n <code>valueOf</code> methods. For instance:</p>\n <pre class=\"prettyprint\">\n // sRGB\n Color opaqueRed = Color.valueOf(0xffff0000); // from a color int\n Color translucentRed = Color.valueOf(1.0f, 0.0f, 0.0f, 0.5f);</pre></p>\n\n<p> // Wide gamut color\n {@literal }ColorLong long p3 = pack(1.0f, 1.0f, 0.0f, 1.0f, colorSpaceP3);\n Color opaqueYellow = Color.valueOf(p3); // from a color long</p>\n\n<p> // CIE L<em>a</em>b* color space\n ColorSpace lab = ColorSpace.get(ColorSpace.Named.LAB);\n Color green = Color.valueOf(100.0f, -128.0f, 128.0f, 1.0f, lab);\n </p>\n\n<p> <p>Color instances can be converted to color ints (<a href=\"#!/api/android.graphics.Color-method-toArgb\" rel=\"android.graphics.Color-method-toArgb\" class=\"docClass\">toArgb</a>()) or\n color longs (<a href=\"#!/api/android.graphics.Color-method-pack\" rel=\"android.graphics.Color-method-pack\" class=\"docClass\">pack</a>()). They also offer easy access to their various\n components using the following methods:</p>\n <ul>\n     <li><a href=\"#!/api/android.graphics.Color-method-alpha\" rel=\"android.graphics.Color-method-alpha\" class=\"docClass\">alpha</a>(), returns the alpha component value</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-red\" rel=\"android.graphics.Color-method-red\" class=\"docClass\">red</a>(), returns the red component value (or first\n     component value in non-RGB models)</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-green\" rel=\"android.graphics.Color-method-green\" class=\"docClass\">green</a>(), returns the green component value (or second\n     component value in non-RGB models)</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-blue\" rel=\"android.graphics.Color-method-blue\" class=\"docClass\">blue</a>(), returns the blue component value (or third\n     component value in non-RGB models)</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-getComponent\" rel=\"android.graphics.Color-method-getComponent\" class=\"docClass\">getComponent</a>(int), returns a specific component value</li>\n     <li><a href=\"#!/api/android.graphics.Color-method-getComponents\" rel=\"android.graphics.Color-method-getComponents\" class=\"docClass\">getComponents</a>(), returns all component values as an array</li>\n </ul></p>\n\n<p> <h3>Color space conversions</h3>\n <p>You can convert colors from one color space to another using\n android.graphics.ColorSpace) and its variants. However,\n the <code>Color</code> class provides a few convenience methods to simplify\n the process. Here is a brief description of some of them:</p>\n <ul>\n     <li><a href=\"#!/api/android.graphics.Color-method-convert\" rel=\"android.graphics.Color-method-convert\" class=\"docClass\">convert</a>(ColorSpace) to convert a color instance in a color\n     space to a new color instance in a different color space</li>\n     <li>float, float, float, android.graphics.ColorSpace, android.graphics.ColorSpace) to\n     convert a color from a source color space to a destination color space</li>\n     <li>android.graphics.ColorSpace) to convert a color long from its\n     built-in color space to a destination color space</li>\n     <li>android.graphics.ColorSpace) to convert a color int from sRGB\n     to a destination color space</li>\n </ul></p>\n\n<p> <p>Please refere to the <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">android.graphics.ColorSpace</a> documentation for more\n information.</p></p>\n\n<p> <h3>Alpha and transparency</h3>\n <p>The alpha component of a color defines the level of transparency of a\n color. When the alpha component is 0, the color is completely transparent.\n When the alpha is component is 1 (in the ([0..1]) range) or 255 (in the\n ([0..255]) range), the color is completely opaque.</p></p>\n\n<p> <p>The color representations described above do not use pre-multiplied\n color components (a pre-multiplied color component is a color component\n that has been multiplied by the value of the alpha component).\n For instance, the color int representation of opaque red is\n <code>0xffff0000</code>. For semi-transparent (50%) red, the\n representation becomes <code>0x80ff0000</code>. The equivalent color\n instance representations would be <code>(1.0, 0.0, 0.0, 1.0)</code>\n and <code>(1.0, 0.0, 0.0, 0.5)</code>.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-BLACK' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-BLACK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-BLACK' class='name expandable'>BLACK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-16777216&quot;</code></p></div></div></div><div id='property-BLUE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-BLUE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-BLUE' class='name expandable'>BLUE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-16776961&quot;</code></p></div></div></div><div id='property-CYAN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-CYAN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-CYAN' class='name expandable'>CYAN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-16711681&quot;</code></p></div></div></div><div id='property-DKGRAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-DKGRAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-DKGRAY' class='name expandable'>DKGRAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-12303292&quot;</code></p></div></div></div><div id='property-GRAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-GRAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-GRAY' class='name expandable'>GRAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-7829368&quot;</code></p></div></div></div><div id='property-GREEN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-GREEN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-GREEN' class='name expandable'>GREEN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-16711936&quot;</code></p></div></div></div><div id='property-LTGRAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-LTGRAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-LTGRAY' class='name expandable'>LTGRAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-3355444&quot;</code></p></div></div></div><div id='property-MAGENTA' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-MAGENTA' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-MAGENTA' class='name expandable'>MAGENTA</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-65281&quot;</code></p></div></div></div><div id='property-RED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-RED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-RED' class='name expandable'>RED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-65536&quot;</code></p></div></div></div><div id='property-TRANSPARENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-TRANSPARENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-TRANSPARENT' class='name expandable'>TRANSPARENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-WHITE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-WHITE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-WHITE' class='name expandable'>WHITE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-YELLOW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-property-YELLOW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-property-YELLOW' class='name expandable'>YELLOW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-256&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-HSVToColor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-HSVToColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-HSVToColor' class='name expandable'>HSVToColor</a>( <span class='pre'>alpha, hsv</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Convert HSV components to an ARGB color. ...</div><div class='long'><p>Convert HSV components to an ARGB color. The alpha component is passed\n through unchanged.\n <ul>\n   <li><code>hsv[0]</code> is Hue ([0..360[)</li>\n   <li><code>hsv[1]</code> is Saturation ([0...1])</li>\n   <li><code>hsv[2]</code> is Value ([0...1])</li>\n </ul>\n If hsv values are out of range, they are pinned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>the alpha component of the returned argb color.</p>\n</div></li><li><span class='pre'>hsv</span> : Object {float[]}<div class='sub-desc'><p>3 element array which holds the input HSV components.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the resulting argb color</p>\n</div></li></ul></div></div></div><div id='method-RGBToHSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-RGBToHSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-RGBToHSV' class='name expandable'>RGBToHSV</a>( <span class='pre'>red, green, blue, hsv</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convert RGB components to HSV. ...</div><div class='long'><p>Convert RGB components to HSV.\n <ul>\n   <li><code>hsv[0]</code> is Hue ([0..360[)</li>\n   <li><code>hsv[1]</code> is Saturation ([0...1])</li>\n   <li><code>hsv[2]</code> is Value ([0...1])</li>\n </ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>red</span> : Number<div class='sub-desc'><p>red component value ([0..255])</p>\n</div></li><li><span class='pre'>green</span> : Number<div class='sub-desc'><p>green component value ([0..255])</p>\n</div></li><li><span class='pre'>blue</span> : Number<div class='sub-desc'><p>blue component value ([0..255])</p>\n</div></li><li><span class='pre'>hsv</span> : Object {float[]}<div class='sub-desc'><p>3 element array which holds the resulting HSV components.</p>\n</div></li></ul></div></div></div><div id='method-alpha' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-alpha' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-alpha' class='name expandable'>alpha</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the alpha component of a color int. ...</div><div class='long'><p>Return the alpha component of a color int. This is the same as saying\n color >>> 24</p>\n</div></div></div><div id='method-argb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-argb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-argb' class='name expandable'>argb</a>( <span class='pre'>alpha, red, green, blue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a color-int from alpha, red, green, blue float components\n in the range ([0..1]). ...</div><div class='long'><p>Return a color-int from alpha, red, green, blue float components\n in the range ([0..1]). If the components are out of range, the\n returned color is undefined.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>Alpha component ([0..1]) of the color</p>\n</div></li><li><span class='pre'>red</span> : Number<div class='sub-desc'><p>Red component ([0..1]) of the color</p>\n</div></li><li><span class='pre'>green</span> : Number<div class='sub-desc'><p>Green component ([0..1]) of the color</p>\n</div></li><li><span class='pre'>blue</span> : Number<div class='sub-desc'><p>Blue component ([0..1]) of the color</p>\n</div></li></ul></div></div></div><div id='method-blue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-blue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-blue' class='name expandable'>blue</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the blue component of a color int. ...</div><div class='long'><p>Return the blue component of a color int. This is the same as saying\n color &amp; 0xFF</p>\n</div></div></div><div id='method-colorSpace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-colorSpace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-colorSpace' class='name expandable'>colorSpace</a>( <span class='pre'>color</span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the color space encoded in the specified color long. ...</div><div class='long'><p>Returns the color space encoded in the specified color long.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>The color long whose color space to extract</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A non-null color space instance</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the encoded color space is invalid or unknown\n@see <a href=\"#!/api/android.graphics.Color-method-red\" rel=\"android.graphics.Color-method-red\" class=\"docClass\">red</a>(long)\n@see <a href=\"#!/api/android.graphics.Color-method-green\" rel=\"android.graphics.Color-method-green\" class=\"docClass\">green</a>(long)\n@see <a href=\"#!/api/android.graphics.Color-method-blue\" rel=\"android.graphics.Color-method-blue\" class=\"docClass\">blue</a>(long)\n@see <a href=\"#!/api/android.graphics.Color-method-alpha\" rel=\"android.graphics.Color-method-alpha\" class=\"docClass\">alpha</a>(long)</p>\n</div></li></ul></div></div></div><div id='method-colorToHSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-colorToHSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-colorToHSV' class='name expandable'>colorToHSV</a>( <span class='pre'>color, hsv</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convert the ARGB color to its HSV components. ...</div><div class='long'><p>Convert the ARGB color to its HSV components.\n <ul>\n   <li><code>hsv[0]</code> is Hue ([0..360[)</li>\n   <li><code>hsv[1]</code> is Saturation ([0...1])</li>\n   <li><code>hsv[2]</code> is Value ([0...1])</li>\n </ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>the argb color to convert. The alpha component is ignored.</p>\n</div></li><li><span class='pre'>hsv</span> : Object {float[]}<div class='sub-desc'><p>3 element array which holds the resulting HSV components.</p>\n</div></li></ul></div></div></div><div id='method-convert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-convert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-convert' class='name expandable'>convert</a>( <span class='pre'>r, g, b, a, connector</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts the specified 3 component color from a color space to another using\n the specified color space connector. ...</div><div class='long'><p>Converts the specified 3 component color from a color space to another using\n the specified color space <a href=\"#!/api/android.graphics.ColorSpace.Connector\" rel=\"android.graphics.ColorSpace.Connector\" class=\"docClass\">connector</a>. The resulting\n color is returned as a color long. See the documentation of this class for a\n description of the color long format.</p>\n\n\n<p> <p>When converting several colors in a row, this method is preferable to\n float, float, float, android.graphics.ColorSpace, android.graphics.ColorSpace) as\n it prevents a new connector from being created on every invocation.</p></p>\n\n<p> <p>The red, green and blue components must be in the range defined by the\n source color space of the connector. See android.graphics.ColorSpace.getMinValue(int)\n and android.graphics.ColorSpace.getMaxValue(int).</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>r</span> : Number<div class='sub-desc'><p>The red component of the color to convert</p>\n</div></li><li><span class='pre'>g</span> : Number<div class='sub-desc'><p>The green component of the color to convert</p>\n</div></li><li><span class='pre'>b</span> : Number<div class='sub-desc'><p>The blue component of the color to convert</p>\n</div></li><li><span class='pre'>a</span> : Number<div class='sub-desc'><p>The alpha component of the color to convert, in ([0..1])</p>\n</div></li><li><span class='pre'>connector</span> : Object {ColorSpace.Connector}<div class='sub-desc'><p>A color space connector, cannot be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A color long in the destination color space of the connector\n@see <a href=\"#!/api/android.graphics.Color-method-convert\" rel=\"android.graphics.Color-method-convert\" class=\"docClass\">convert</a>(float, float, float, float, ColorSpace, ColorSpace)</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getColorSpace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-getColorSpace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-getColorSpace' class='name expandable'>getColorSpace</a>( <span class='pre'></span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this color's color space. ...</div><div class='long'><p>Returns this color's color space.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A non-null instance of ColorSpace</p>\n</div></li></ul></div></div></div><div id='method-getComponent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-getComponent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-getComponent' class='name expandable'>getComponent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of the specified component in the range defined by\n this color's color space (see android.graphics....</div><div class='long'><p>Returns the value of the specified component in the range defined by\n this color's color space (see android.graphics.ColorSpace.getMinValue(int) and\n android.graphics.ColorSpace.getMaxValue(int)).</p>\n\n\n<p> <p>If the requested component index is <a href=\"#!/api/android.graphics.Color-method-getComponentCount\" rel=\"android.graphics.Color-method-getComponentCount\" class=\"docClass\">getComponentCount</a>(),\n this method returns the alpha component, always in the range\n ([0..1]).</p>\n@see <a href=\"#!/api/android.graphics.Color-method-getComponents\" rel=\"android.graphics.Color-method-getComponents\" class=\"docClass\">getComponents</a>()</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArrayIndexOutOfBoundsException If the specified component index\n is &lt; 0 or >= getComponentCount()</p>\n</div></li></ul></div></div></div><div id='method-getComponentCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-getComponentCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-getComponentCount' class='name expandable'>getComponentCount</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of components that form a color value according\n to this color space's color model, plus one extra...</div><div class='long'><p>Returns the number of components that form a color value according\n to this color space's color model, plus one extra component for\n alpha.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The integer 4 or 5</p>\n</div></li></ul></div></div></div><div id='method-getComponents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-getComponents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-getComponents' class='name expandable'>getComponents</a>( <span class='pre'>components</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Copies this color's components in the supplied array. ...</div><div class='long'><p>Copies this color's components in the supplied array. The last element of the\n array is always the alpha component.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>components</span> : Object {float[]}<div class='sub-desc'><p>An array of floats whose size must be at least\n                  getComponentCount(), can be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The array passed as a parameter if not null, or a new array of length\n         getComponentCount()\n@see <a href=\"#!/api/android.graphics.Color-method-getComponent\" rel=\"android.graphics.Color-method-getComponent\" class=\"docClass\">getComponent</a>(int)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the specified array's length is less than\n getComponentCount()</p>\n</div></li></ul></div></div></div><div id='method-getModel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-getModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-getModel' class='name expandable'>getModel</a>( <span class='pre'></span> ) : Object {android.graphics.ColorSpace.Model}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the color model of this color. ...</div><div class='long'><p>Returns the color model of this color.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace.Model}</span><div class='sub-desc'><p>A non-null ColorSpace.Model</p>\n</div></li></ul></div></div></div><div id='method-green' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-green' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-green' class='name expandable'>green</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the green component of a color int. ...</div><div class='long'><p>Return the green component of a color int. This is the same as saying\n (color >> 8) &amp; 0xFF</p>\n</div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-isInColorSpace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-isInColorSpace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-isInColorSpace' class='name expandable'>isInColorSpace</a>( <span class='pre'>color, colorSpace</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the specified color is in the specified color space. ...</div><div class='long'><p>Indicates whether the specified color is in the specified color space.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>The color to test</p>\n</div></li><li><span class='pre'>colorSpace</span> : Object {ColorSpace}<div class='sub-desc'><p>The color space to test against</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the color is in the specified color space, false otherwise\n@see <a href=\"#!/api/android.graphics.Color-method-isSrgb\" rel=\"android.graphics.Color-method-isSrgb\" class=\"docClass\">isSrgb</a>(long)\n@see <a href=\"#!/api/android.graphics.Color-method-isWideGamut\" rel=\"android.graphics.Color-method-isWideGamut\" class=\"docClass\">isWideGamut</a>(long)</p>\n</div></li></ul></div></div></div><div id='method-isSrgb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-isSrgb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-isSrgb' class='name expandable'>isSrgb</a>( <span class='pre'>color</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the specified color is in the\n sRGB color space. ...</div><div class='long'><p>Indicates whether the specified color is in the\n <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> color space.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>The color to test</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the color is in the sRGB color space, false otherwise</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the encoded color space is invalid or unknown\n@see <a href=\"#!/api/android.graphics.Color-method-isInColorSpace\" rel=\"android.graphics.Color-method-isInColorSpace\" class=\"docClass\">isInColorSpace</a>(long, ColorSpace)\n@see <a href=\"#!/api/android.graphics.Color-method-isWideGamut\" rel=\"android.graphics.Color-method-isWideGamut\" class=\"docClass\">isWideGamut</a>(long)</p>\n</div></li></ul></div></div></div><div id='method-isWideGamut' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-isWideGamut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-isWideGamut' class='name expandable'>isWideGamut</a>( <span class='pre'>color</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the specified color is in a wide-gamut color space. ...</div><div class='long'><p>Indicates whether the specified color is in a wide-gamut color space.\n See android.graphics.ColorSpace.isWideGamut() for a definition of a wide-gamut\n color space.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>The color to test</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the color is in a wide-gamut color space, false otherwise</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the encoded color space is invalid or unknown\n@see <a href=\"#!/api/android.graphics.Color-method-isInColorSpace\" rel=\"android.graphics.Color-method-isInColorSpace\" class=\"docClass\">isInColorSpace</a>(long, ColorSpace)\n@see <a href=\"#!/api/android.graphics.Color-method-isSrgb\" rel=\"android.graphics.Color-method-isSrgb\" class=\"docClass\">isSrgb</a>(long)\n@see ColorSpace#isWideGamut()</p>\n</div></li></ul></div></div></div><div id='method-luminance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-luminance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-luminance' class='name expandable'>luminance</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the relative luminance of a color. ...</div><div class='long'><p>Returns the relative luminance of a color.\n <p>\n Assumes sRGB encoding. Based on the formula for relative luminance\n defined in WCAG 2.0, W3C Recommendation 11 December 2008.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a value between 0 (darkest black) and 1 (lightest white)</p>\n</div></li></ul></div></div></div><div id='method-pack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-pack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-pack' class='name expandable'>pack</a>( <span class='pre'>red, green, blue, alpha</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Packs the 3 component color defined by the specified red, green, blue and\n alpha component values into a color long i...</div><div class='long'><p>Packs the 3 component color defined by the specified red, green, blue and\n alpha component values into a color long in the specified color space. See the\n documentation of this class for a description of the color long format.</p>\n\n\n<p> <p>The red, green and blue components must be in the range defined by the\n specified color space. See android.graphics.ColorSpace.getMinValue(int) and\n android.graphics.ColorSpace.getMaxValue(int).</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>red</span> : Number<div class='sub-desc'><p>The red component of the color to create</p>\n</div></li><li><span class='pre'>green</span> : Number<div class='sub-desc'><p>The green component of the color to create</p>\n</div></li><li><span class='pre'>blue</span> : Number<div class='sub-desc'><p>The blue component of the color to create</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The alpha component of the color to create, in ([0..1])</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A color long</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the color space's id is ColorSpace.MIN_ID\n or if the color space's color model has more than 3 components</p>\n</div></li></ul></div></div></div><div id='method-parseColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-parseColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-parseColor' class='name expandable'>parseColor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Parse the color string, and return the corresponding color-int. ...</div><div class='long'><p></p>Parse the color string, and return the corresponding color-int.\n If the string cannot be parsed, throws an IllegalArgumentException\n exception. Supported formats are:\n\n<p> <ul>\n   <li><code>#RRGGBB</code></li>\n   <li><code>#AARRGGBB</code></li>\n </ul></p>\n\n<p> <p>The following names are also accepted: <code>red</code>, <code>blue</code>,\n <code>green</code>, <code>black</code>, <code>white</code>, <code>gray</code>,\n <code>cyan</code>, <code>magenta</code>, <code>yellow</code>, <code>lightgray</code>,\n <code>darkgray</code>, <code>grey</code>, <code>lightgrey</code>, <code>darkgrey</code>,\n <code>aqua</code>, <code>fuchsia</code>, <code>lime</code>, <code>maroon</code>,\n <code>navy</code>, <code>olive</code>, <code>purple</code>, <code>silver</code>,\n and <code>teal</code>.</p></p>\n</div></div></div><div id='method-red' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-red' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-red' class='name expandable'>red</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the red component of a color int. ...</div><div class='long'><p>Return the red component of a color int. This is the same as saying\n (color >> 16) &amp; 0xFF</p>\n</div></div></div><div id='method-rgb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-rgb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-rgb' class='name expandable'>rgb</a>( <span class='pre'>red, green, blue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a color-int from red, green, blue float components\n in the range ([0..1]). ...</div><div class='long'><p>Return a color-int from red, green, blue float components\n in the range ([0..1]). The alpha component is implicitly\n 1.0 (fully opaque). If the components are out of range, the\n returned color is undefined.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>red</span> : Number<div class='sub-desc'><p>Red component ([0..1]) of the color</p>\n</div></li><li><span class='pre'>green</span> : Number<div class='sub-desc'><p>Green component ([0..1]) of the color</p>\n</div></li><li><span class='pre'>blue</span> : Number<div class='sub-desc'><p>Blue component ([0..1]) of the color</p>\n</div></li></ul></div></div></div><div id='method-toArgb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-toArgb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-toArgb' class='name expandable'>toArgb</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts the specified color long to an ARGB color int. ...</div><div class='long'><p>Converts the specified color long to an ARGB color int. A color int is\n always in the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> color space. This implies\n a color space conversion is applied if needed.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An ARGB color in the sRGB color space</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the encoded color space is invalid or unknown</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representation of the object. ...</div><div class='long'><p>Returns a string representation of the object. This method returns\n a string equal to the value of:</p>\n\n\n<p> <pre class=\"prettyprint\">\n \"Color(\" + r + \", \" + g + \", \" + b + \", \" + a +\n         \", \" + getColorSpace().getName + ')'\n </pre></p>\n\n<p> <p>For instance, the string representation of opaque black in the sRGB\n color space is equal to the following value:</p></p>\n\n<pre> Color(0.0, 0.0, 0.0, 1.0, sRGB IEC61966-2.1)\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A non-null string representation of the object</p>\n</div></li></ul></div></div></div><div id='method-valueOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.Color'>android.graphics.Color</span><br/><a href='source/Color.html#android-graphics-Color-method-valueOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.Color-method-valueOf' class='name expandable'>valueOf</a>( <span class='pre'>components, colorSpace</span> ) : Object {android.graphics.Color}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new Color in the specified color space with the\n specified component values. ...</div><div class='long'><p>Creates a new <code>Color</code> in the specified color space with the\n specified component values. The range of the components is defined by\n android.graphics.ColorSpace.getMinValue(int) and android.graphics.ColorSpace.getMaxValue(int).\n The values passed to this method must be in the proper range. The alpha\n component is always in the range \\([0..1]\\).</p>\n\n\n<p> <p>The length of the array of components must be at least\n <code>android.graphics.ColorSpace.getComponentCount() + 1</code>. The component at index\n android.graphics.ColorSpace.getComponentCount() is always alpha.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>components</span> : Object {float[]}<div class='sub-desc'><p>The components of the color to create, with alpha as the last component</p>\n</div></li><li><span class='pre'>colorSpace</span> : Object {ColorSpace}<div class='sub-desc'><p>The color space of the color to create</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Color}</span><div class='sub-desc'><p>A non-null instance of Color</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the array of components is smaller than\n required by the color space</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});