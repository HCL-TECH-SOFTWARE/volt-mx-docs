Ext.data.JsonP.android_graphics_ColorSpace({"tagname":"class","name":"android.graphics.ColorSpace","autodetected":{},"files":[{"filename":"ColorSpace.js","href":"ColorSpace.html#android-graphics-ColorSpace"}],"extends":"java.lang.Object","members":[{"name":"ILLUMINANT_A","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_A","meta":{}},{"name":"ILLUMINANT_B","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_B","meta":{}},{"name":"ILLUMINANT_C","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_C","meta":{}},{"name":"ILLUMINANT_D50","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D50","meta":{}},{"name":"ILLUMINANT_D55","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D55","meta":{}},{"name":"ILLUMINANT_D60","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D60","meta":{}},{"name":"ILLUMINANT_D65","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D65","meta":{}},{"name":"ILLUMINANT_D75","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D75","meta":{}},{"name":"ILLUMINANT_E","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_E","meta":{}},{"name":"MAX_ID","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-MAX_ID","meta":{}},{"name":"MIN_ID","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-MIN_ID","meta":{}},{"name":"adapt","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-adapt","meta":{}},{"name":"connect","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-connect","meta":{}},{"name":"equals","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-equals","meta":{}},{"name":"fromXyz","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-fromXyz","meta":{}},{"name":"get","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-get","meta":{}},{"name":"getComponentCount","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getComponentCount","meta":{}},{"name":"getId","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getId","meta":{}},{"name":"getMaxValue","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getMaxValue","meta":{}},{"name":"getMinValue","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getMinValue","meta":{}},{"name":"getModel","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getModel","meta":{}},{"name":"getName","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getName","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-hashCode","meta":{}},{"name":"isSrgb","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-isSrgb","meta":{}},{"name":"isWideGamut","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-isWideGamut","meta":{}},{"name":"match","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-match","meta":{}},{"name":"toString","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-toString","meta":{}},{"name":"toXyz","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-toXyz","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.ColorSpace","short_doc":"{@usesMathJax}\n\n A android.graphics.ColorSpace is used to identify a specific organization of colors. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.graphics.ColorSpace.Rgb"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.graphics.ColorSpace</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.graphics.ColorSpace.Rgb' rel='android.graphics.ColorSpace.Rgb' class='docClass'>android.graphics.ColorSpace.Rgb</a></div><h4>Files</h4><div class='dependency'><a href='source/ColorSpace.html#android-graphics-ColorSpace' target='_blank'>ColorSpace.js</a></div></pre><div class='doc-contents'><p>{@usesMathJax}</p>\n\n<p> <p>A <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">android.graphics.ColorSpace</a> is used to identify a specific organization of colors.\n Each color space is characterized by a <a href=\"#!/api/android.graphics.ColorSpace.Model\" rel=\"android.graphics.ColorSpace.Model\" class=\"docClass\">color model</a> that defines\n how a color value is represented (for instance the <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a> color\n model defines a color value as a triplet of numbers).</p></p>\n\n<p> <p>Each component of a color must fall within a valid range, specific to each\n color space, defined by <a href=\"#!/api/android.graphics.ColorSpace-method-getMinValue\" rel=\"android.graphics.ColorSpace-method-getMinValue\" class=\"docClass\">getMinValue</a>(int) and <a href=\"#!/api/android.graphics.ColorSpace-method-getMaxValue\" rel=\"android.graphics.ColorSpace-method-getMaxValue\" class=\"docClass\">getMaxValue</a>(int)\n This range is commonly ([0..1]). While it is recommended to use values in the\n valid range, a color space always clamps input and output values when performing\n operations such as converting to a different color space.</p></p>\n\n<p> <h3>Using color spaces</h3></p>\n\n<p> <p>This implementation provides a pre-defined set of common color spaces\n described in the <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a> enum. To obtain an instance of one of the\n pre-defined color spaces, simply invoke <a href=\"#!/api/android.graphics.ColorSpace-method-get\" rel=\"android.graphics.ColorSpace-method-get\" class=\"docClass\">get</a>(Named):</p></p>\n\n<p> <pre class=\"prettyprint\">\n ColorSpace sRgb = ColorSpace.get(ColorSpace.Named.SRGB);\n </pre></p>\n\n<p> <p>The <a href=\"#!/api/android.graphics.ColorSpace-method-get\" rel=\"android.graphics.ColorSpace-method-get\" class=\"docClass\">get</a>(Named) method always returns the same instance for a given\n name. Color spaces with an <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a> color model can be safely\n cast to <a href=\"#!/api/android.graphics.ColorSpace.Rgb\" rel=\"android.graphics.ColorSpace.Rgb\" class=\"docClass\">android.graphics.ColorSpace.Rgb</a>. Doing so gives you access to more APIs to query various\n properties of RGB color models: color gamut primaries, transfer functions,\n conversions to and from linear space, etc. Please refer to <a href=\"#!/api/android.graphics.ColorSpace.Rgb\" rel=\"android.graphics.ColorSpace.Rgb\" class=\"docClass\">android.graphics.ColorSpace.Rgb</a> for\n more information.</p></p>\n\n<p> <p>The documentation of <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a> provides a detailed description of the\n various characteristics of each available color space.</p></p>\n\n<p> <h3>Color space conversions</h3></p>\n\n<p> <p>To allow conversion between color spaces, this implementation uses the CIE\n XYZ profile connection space (PCS). Color values can be converted to and from\n this PCS using toXyz(float[]) and fromXyz(float[]).</p></p>\n\n<p> <p>For color space with a non-RGB color model, the white point of the PCS\n <em>must be</em> the CIE standard illuminant D50. RGB color spaces use their\n native white point (D65 for <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> for instance and must\n undergo <a href=\"#!/api/android.graphics.ColorSpace.Adaptation\" rel=\"android.graphics.ColorSpace.Adaptation\" class=\"docClass\">chromatic adaptation</a> as necessary.</p></p>\n\n<p> <p>Since the white point of the PCS is not defined for RGB color space, it is\n highly recommended to use the variants of the android.graphics.ColorSpace)\n method to perform conversions between color spaces. A color space can be\n manually adapted to a specific white point using float[]).\n Please refer to the documentation of <a href=\"#!/api/android.graphics.ColorSpace.Rgb\" rel=\"android.graphics.ColorSpace.Rgb\" class=\"docClass\">RGB color spaces</a> for more\n information. Several common CIE standard illuminants are provided in this\n class as reference (see <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D65\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D65\" class=\"docClass\">ILLUMINANT_D65</a> or <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D50\" class=\"docClass\">ILLUMINANT_D50</a>\n for instance).</p></p>\n\n<p> <p>Here is an example of how to convert from a color space to another:</p></p>\n\n<p> <pre class=\"prettyprint\">\n // Convert from DCI-P3 to Rec.2020\n ColorSpace.Connector connector = ColorSpace.connect(\n         ColorSpace.get(ColorSpace.Named.DCI_P3),\n         ColorSpace.get(ColorSpace.Named.BT2020));</pre></p>\n\n<p> float[] bt2020 = connector.transform(p3r, p3g, p3b);\n </p>\n\n<p> <p>You can easily convert to <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> by omitting the second\n parameter:</p></p>\n\n<p> <pre class=\"prettyprint\">\n // Convert from DCI-P3 to sRGB\n ColorSpace.Connector connector = ColorSpace.connect(ColorSpace.get(ColorSpace.Named.DCI_P3));</pre></p>\n\n<p> float[] sRGB = connector.transform(p3r, p3g, p3b);\n </p>\n\n<p> <p>Conversions also work between color spaces with different color models:</p></p>\n\n<p> <pre class=\"prettyprint\">\n // Convert from CIE L<em>a</em>b* (color model Lab) to Rec.709 (color model RGB)\n ColorSpace.Connector connector = ColorSpace.connect(\n         ColorSpace.get(ColorSpace.Named.CIE_LAB),\n         ColorSpace.get(ColorSpace.Named.BT709));\n </pre></p>\n\n<p> <h3>Color spaces and multi-threading</h3></p>\n\n<p> <p>Color spaces and other related classes (<a href=\"#!/api/android.graphics.ColorSpace.Connector\" rel=\"android.graphics.ColorSpace.Connector\" class=\"docClass\">android.graphics.ColorSpace.Connector</a> for instance)\n are immutable and stateless. They can be safely used from multiple concurrent\n threads.</p></p>\n\n<p> <p>Public static methods provided by this class, such as <a href=\"#!/api/android.graphics.ColorSpace-method-get\" rel=\"android.graphics.ColorSpace-method-get\" class=\"docClass\">get</a>(Named)\n and android.graphics.ColorSpace), are also guaranteed to be\n thread-safe.</p></p>\n\n<p> @see <a href=\"#!/api/android.graphics.ColorSpace-method-get\" rel=\"android.graphics.ColorSpace-method-get\" class=\"docClass\">get</a>(Named)\n @see Named\n @see Model\n @see Connector\n @see Adaptation</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ILLUMINANT_A' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_A' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_A' class='name expandable'>ILLUMINANT_A</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant A, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant A, encoded in xyY.\nThis illuminant has a color temperature of 2856K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_B' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_B' class='name expandable'>ILLUMINANT_B</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant B, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant B, encoded in xyY.\nThis illuminant has a color temperature of 4874K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_C' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_C' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_C' class='name expandable'>ILLUMINANT_C</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant C, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant C, encoded in xyY.\nThis illuminant has a color temperature of 6774K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D50' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D50' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50' class='name expandable'>ILLUMINANT_D50</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D50, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D50, encoded in xyY.\nThis illuminant has a color temperature of 5003K. This illuminant\nis used by the profile connection space in ICC profiles.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D55' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D55' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D55' class='name expandable'>ILLUMINANT_D55</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D55, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D55, encoded in xyY.\nThis illuminant has a color temperature of 5503K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D60' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D60' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D60' class='name expandable'>ILLUMINANT_D60</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D60, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D60, encoded in xyY.\nThis illuminant has a color temperature of 6004K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D65' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D65' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D65' class='name expandable'>ILLUMINANT_D65</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D65, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D65, encoded in xyY.\nThis illuminant has a color temperature of 6504K. This illuminant\nis commonly used in RGB color spaces such as sRGB, BT.209, etc.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D75' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D75' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D75' class='name expandable'>ILLUMINANT_D75</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D75, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D75, encoded in xyY.\nThis illuminant has a color temperature of 7504K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_E' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_E' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_E' class='name expandable'>ILLUMINANT_E</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant E, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant E, encoded in xyY.\nThis illuminant has a color temperature of 5454K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MAX_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-MAX_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-MAX_ID' class='name expandable'>MAX_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The maximum ID value a color space can have. ...</div><div class='long'><p>The maximum ID value a color space can have.</p>\n\n<p>@see <a href=\"#!/api/android.graphics.ColorSpace-method-getId\" rel=\"android.graphics.ColorSpace-method-getId\" class=\"docClass\">getId</a>()</p>\n<p>Defaults to: <code>&quot;63&quot;</code></p></div></div></div><div id='property-MIN_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-MIN_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-MIN_ID' class='name expandable'>MIN_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The minimum ID value a color space can have. ...</div><div class='long'><p>The minimum ID value a color space can have.</p>\n\n<p>@see <a href=\"#!/api/android.graphics.ColorSpace-method-getId\" rel=\"android.graphics.ColorSpace-method-getId\" class=\"docClass\">getId</a>()</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adapt' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-adapt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-adapt' class='name expandable'>adapt</a>( <span class='pre'>colorSpace, whitePoint, adaptation</span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs the chromatic adaptation of a color space from its native\n white point to the specified white point. ...</div><div class='long'><p>Performs the chromatic adaptation of a color space from its native\n white point to the specified white point. If the specified color space\n does not have an <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a> color model, or if the color\n space already has the target white point, the color space is returned\n unmodified.</p>\n\n\n<p> <p>The chromatic adaptation is performed using the von Kries method\n described in the documentation of <a href=\"#!/api/android.graphics.ColorSpace.Adaptation\" rel=\"android.graphics.ColorSpace.Adaptation\" class=\"docClass\">android.graphics.ColorSpace.Adaptation</a>.</p></p>\n\n<p> <p class=\"note\">The color space returned by this method always has\n an ID of <a href=\"#!/api/android.graphics.ColorSpace-property-MIN_ID\" rel=\"android.graphics.ColorSpace-property-MIN_ID\" class=\"docClass\">MIN_ID</a>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>colorSpace</span> : Object {ColorSpace}<div class='sub-desc'><p>The color space to chromatically adapt</p>\n</div></li><li><span class='pre'>whitePoint</span> : Object {float[]}<div class='sub-desc'><p>The new white point</p>\n</div></li><li><span class='pre'>adaptation</span> : Object {ColorSpace.Adaptation}<div class='sub-desc'><p>The adaptation matrix</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A new color space if the specified color space has an RGB\n         model and a white point different from the specified white\n         point; the specified color space otherwise\n@see Adaptation\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-adapt\" rel=\"android.graphics.ColorSpace-method-adapt\" class=\"docClass\">adapt</a>(ColorSpace, float[])</p>\n</div></li></ul></div></div></div><div id='method-connect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-connect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-connect' class='name expandable'>connect</a>( <span class='pre'>source, intent</span> ) : Object {android.graphics.ColorSpace.Connector}<span class=\"signature\"></span></div><div class='description'><div class='short'>Connects the specified color spaces to sRGB. ...</div><div class='long'><p>Connects the specified color spaces to sRGB.\n If the source color space does not use CIE XYZ D65 as its profile\n connection space, the two spaces are chromatically adapted to use the\n CIE standard illuminant <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D50\" class=\"docClass\">D50</a> as needed.</p>\n\n\n<p> <p>If the source is the sRGB color space, an optimized connector\n is returned to avoid unnecessary computations and loss of precision.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {ColorSpace}<div class='sub-desc'><p>The color space to convert colors from</p>\n</div></li><li><span class='pre'>intent</span> : Object {ColorSpace.RenderIntent}<div class='sub-desc'><p>The render intent to map colors from the source to the destination</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace.Connector}</span><div class='sub-desc'><p>A non-null connector between the specified color space and sRGB\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-connect\" rel=\"android.graphics.ColorSpace-method-connect\" class=\"docClass\">connect</a>(ColorSpace)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-connect\" rel=\"android.graphics.ColorSpace-method-connect\" class=\"docClass\">connect</a>(ColorSpace, ColorSpace)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-connect\" rel=\"android.graphics.ColorSpace-method-connect\" class=\"docClass\">connect</a>(ColorSpace, ColorSpace, RenderIntent)</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-fromXyz' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-fromXyz' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-fromXyz' class='name expandable'>fromXyz</a>( <span class='pre'>v</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts tristimulus values from the CIE XYZ space to this color\n space's color model. ...</div><div class='long'><p>Converts tristimulus values from the CIE XYZ space to this color\n space's color model. The resulting value is passed back in the specified\n array.</p>\n\n\n<p> <p class=\"note\">The specified array's length  must be at least equal to\n to the number of color components as returned by\n android.graphics.ColorSpace.Model.getComponentCount(), and its first 3 values must\n be the XYZ components to convert from.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Object {float[]}<div class='sub-desc'><p>An array of color components containing the XYZ values\n          to convert from, and large enough to hold the number\n          of components of this color space's model</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The array passed in parameter\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-fromXyz\" rel=\"android.graphics.ColorSpace-method-fromXyz\" class=\"docClass\">fromXyz</a>(float, float, float)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-toXyz\" rel=\"android.graphics.ColorSpace-method-toXyz\" class=\"docClass\">toXyz</a>(float[])</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-get' class='name expandable'>get</a>( <span class='pre'>name</span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an instance of android.graphics.ColorSpace identified by the specified\n name. ...</div><div class='long'><p>Returns an instance of <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">android.graphics.ColorSpace</a> identified by the specified\n name. The list of names provided in the <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a> enum gives access\n to a variety of common RGB color spaces.</p>\n\n\n<p> <p>This method always returns the same instance for a given name.</p></p>\n\n<p> <p>This method is thread-safe.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object {ColorSpace.Named}<div class='sub-desc'><p>The name of the color space to get an instance of</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A non-null ColorSpace instance</p>\n</div></li></ul></div></div></div><div id='method-getComponentCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getComponentCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getComponentCount' class='name expandable'>getComponentCount</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of components that form a color value according\n to this color space's color model. ...</div><div class='long'><p>Returns the number of components that form a color value according\n to this color space's color model.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An integer between 1 and 4\n@see Model\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-getModel\" rel=\"android.graphics.ColorSpace-method-getModel\" class=\"docClass\">getModel</a>()</p>\n</div></li></ul></div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the ID of this color space. ...</div><div class='long'><p>Returns the ID of this color space. Positive IDs match the color\n spaces enumerated in <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a>. A negative ID indicates a\n color space created by calling one of the public constructors.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An integer between <a href=\"#!/api/android.graphics.ColorSpace-property-MIN_ID\" rel=\"android.graphics.ColorSpace-property-MIN_ID\" class=\"docClass\">MIN_ID</a> and <a href=\"#!/api/android.graphics.ColorSpace-property-MAX_ID\" rel=\"android.graphics.ColorSpace-property-MAX_ID\" class=\"docClass\">MAX_ID</a></p>\n</div></li></ul></div></div></div><div id='method-getMaxValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getMaxValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getMaxValue' class='name expandable'>getMaxValue</a>( <span class='pre'>component</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum valid value for the specified component of this\n color space's color model. ...</div><div class='long'><p>Returns the maximum valid value for the specified component of this\n color space's color model.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Number<div class='sub-desc'><p>The index of the component</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A floating point value greater than getMinValue(int)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-getMinValue\" rel=\"android.graphics.ColorSpace-method-getMinValue\" class=\"docClass\">getMinValue</a>(int)\n@see Model#getComponentCount()</p>\n</div></li></ul></div></div></div><div id='method-getMinValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getMinValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getMinValue' class='name expandable'>getMinValue</a>( <span class='pre'>component</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the minimum valid value for the specified component of this\n color space's color model. ...</div><div class='long'><p>Returns the minimum valid value for the specified component of this\n color space's color model.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Number<div class='sub-desc'><p>The index of the component</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A floating point value less than getMaxValue(int)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-getMaxValue\" rel=\"android.graphics.ColorSpace-method-getMaxValue\" class=\"docClass\">getMaxValue</a>(int)\n@see Model#getComponentCount()</p>\n</div></li></ul></div></div></div><div id='method-getModel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getModel' class='name expandable'>getModel</a>( <span class='pre'></span> ) : Object {android.graphics.ColorSpace.Model}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the color model of this color space. ...</div><div class='long'><p>Return the color model of this color space.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace.Model}</span><div class='sub-desc'><p>A non-null Model\n@see Model\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-getComponentCount\" rel=\"android.graphics.ColorSpace-method-getComponentCount\" class=\"docClass\">getComponentCount</a>()</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of this color space. ...</div><div class='long'><p>Returns the name of this color space. The name is never null\n and contains always at least 1 character.</p>\n\n\n<p> <p>Color space names are recommended to be unique but are not\n guaranteed to be. There is no defined format but the name usually\n falls in one of the following categories:</p>\n <ul>\n     <li>Generic names used to identify color spaces in non-RGB\n     color models. For instance: <a href=\"#!/api/android.graphics.ColorSpace.Named-property-CIE_LAB\" rel=\"android.graphics.ColorSpace.Named-property-CIE_LAB\" class=\"docClass\">Generic L&lt;em&gt;a&lt;/em&gt;b*</a>.</li>\n     <li>Names tied to a particular specification. For instance:\n     <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB IEC61966-2.1</a> or\n     <a href=\"#!/api/android.graphics.ColorSpace.Named-property-ACES\" rel=\"android.graphics.ColorSpace.Named-property-ACES\" class=\"docClass\">SMPTE ST 2065-1:2012 ACES</a>.</li>\n     <li>Ad-hoc names, often generated procedurally or by the user\n     during a calibration workflow. These names often contain the\n     make and model of the display.</li>\n </ul></p>\n\n<p> <p>Because the format of color space names is not defined, it is\n not recommended to programmatically identify a color space by its\n name alone. Names can be used as a first approximation.</p></p>\n\n<p> <p>It is however perfectly acceptable to display color space names to\n users in a UI, or in debuggers and logs. When displaying a color space\n name to the user, it is recommended to add extra information to avoid\n ambiguities: color model, a representation of the color space's gamut,\n white point, etc.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A non-null String of length >= 1</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-isSrgb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-isSrgb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-isSrgb' class='name expandable'>isSrgb</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether this color space is the sRGB color space or\n equivalent to the sRGB color space. ...</div><div class='long'><p>Indicates whether this color space is the sRGB color space or\n equivalent to the sRGB color space.</p>\n\n\n<p> <p>A color space is considered sRGB if it meets all the following\n conditions:</p>\n <ul>\n     <li>Its color model is <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">android.graphics.ColorSpace.Model.RGB</a>.</li>\n     <li>\n         Its primaries are within 1e-3 of the true\n         <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> primaries.\n     </li>\n     <li>\n         Its white point is within 1e-3 of the CIE standard\n         illuminant <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D65\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D65\" class=\"docClass\">D65</a>.\n     </li>\n     <li>Its opto-electronic transfer function is not linear.</li>\n     <li>Its electro-optical transfer function is not linear.</li>\n     <li>Its transfer functions yield values within 1e-3 of <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">android.graphics.ColorSpace.Named.SRGB</a>.</li>\n     <li>Its range is ([0..1]).</li>\n </ul>\n <p>This method always returns true for <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">android.graphics.ColorSpace.Named.SRGB</a>.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this color space is the sRGB color space (or a\n         close approximation), false otherwise</p>\n</div></li></ul></div></div></div><div id='method-isWideGamut' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-isWideGamut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-isWideGamut' class='name expandable'>isWideGamut</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether this color space is a wide-gamut color space. ...</div><div class='long'><p>Returns whether this color space is a wide-gamut color space.\n An RGB color space is wide-gamut if its gamut entirely contains\n the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> gamut and if the area of its gamut is\n 90% of greater than the area of the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-NTSC_1953\" rel=\"android.graphics.ColorSpace.Named-property-NTSC_1953\" class=\"docClass\">NTSC</a>\n gamut.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this color space is a wide-gamut color space,\n         false otherwise</p>\n</div></li></ul></div></div></div><div id='method-match' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-match' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-match' class='name expandable'>match</a>( <span class='pre'>toXYZD50, function</span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a android.graphics.ColorSpace.Named instance of android.graphics.ColorSpace that matches\n the specified RGB t...</div><div class='long'><p>Returns a <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a> instance of <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">android.graphics.ColorSpace</a> that matches\n the specified RGB to CIE XYZ transform and transfer functions. If no\n instance can be found, this method returns null.</p>\n\n\n<p> <p>The color transform matrix is assumed to target the CIE XYZ space\n a <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D50\" class=\"docClass\">D50</a> standard illuminant.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toXYZD50</span> : Object {float[]}<div class='sub-desc'><p>3x3 column-major transform matrix from RGB to the profile\n                 connection space CIE XYZ as an array of 9 floats, cannot be null</p>\n</div></li><li><span class='pre'>function</span> : Object {ColorSpace.Rgb.TransferParameters}<div class='sub-desc'><p>Parameters for the transfer functions</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A non-null ColorSpace if a match is found, null otherwise</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representation of the object. ...</div><div class='long'><p>Returns a string representation of the object. This method returns\n a string equal to the value of:</p>\n\n\n<p> <pre class=\"prettyprint\">\n getName() + \"(id=\" + getId() + \", model=\" + getModel() + \")\"\n </pre></p>\n\n<p> <p>For instance, the string representation of the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a>\n color space is equal to the following value:</p></p>\n\n<pre> sRGB IEC61966-2.1 (id=0, model=RGB)\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A string representation of the object</p>\n</div></li></ul></div></div></div><div id='method-toXyz' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace'>android.graphics.ColorSpace</span><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-toXyz' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-toXyz' class='name expandable'>toXyz</a>( <span class='pre'>v</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts a color value from this color space's model to\n tristimulus CIE XYZ values. ...</div><div class='long'><p>Converts a color value from this color space's model to\n tristimulus CIE XYZ values. If the color model of this color\n space is not <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a>, it is assumed that the\n target CIE XYZ space uses a <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D50\" class=\"docClass\">D50</a>\n standard illuminant.</p>\n\n\n<p> <p class=\"note\">The specified array's length  must be at least\n equal to to the number of color components as returned by\n android.graphics.ColorSpace.Model.getComponentCount().</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Object {float[]}<div class='sub-desc'><p>An array of color components containing the color space's\n          color value to convert to XYZ, and large enough to hold\n          the resulting tristimulus XYZ values</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The array passed in parameter\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-toXyz\" rel=\"android.graphics.ColorSpace-method-toXyz\" class=\"docClass\">toXyz</a>(float, float, float)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-fromXyz\" rel=\"android.graphics.ColorSpace-method-fromXyz\" class=\"docClass\">fromXyz</a>(float[])</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});