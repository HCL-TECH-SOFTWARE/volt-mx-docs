Ext.data.JsonP.android_graphics_BidiRenderer({"tagname":"class","name":"android.graphics.BidiRenderer","autodetected":{},"files":[{"filename":"BidiRenderer.js","href":"BidiRenderer.html#android-graphics-BidiRenderer"}],"extends":"java.lang.Object","members":[{"name":"renderText","tagname":"method","owner":"android.graphics.BidiRenderer","id":"method-renderText","meta":{}},{"name":"setRenderLocation","tagname":"method","owner":"android.graphics.BidiRenderer","id":"method-setRenderLocation","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.BidiRenderer","short_doc":"Render the text by breaking it into various scripts and using the right font for each script. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.graphics.BidiRenderer</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BidiRenderer.html#android-graphics-BidiRenderer' target='_blank'>BidiRenderer.js</a></div></pre><div class='doc-contents'><p>Render the text by breaking it into various scripts and using the right font for each script.\n Can be used to measure the text without actually drawing it.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-renderText' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BidiRenderer'>android.graphics.BidiRenderer</span><br/><a href='source/BidiRenderer.html#android-graphics-BidiRenderer-method-renderText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BidiRenderer-method-renderText' class='name expandable'>renderText</a>( <span class='pre'>start, limit, isRtl, advances, advancesIndex, draw</span> ) : Object {android.graphics.RectF}<span class=\"signature\"></span></div><div class='description'><div class='short'>Render unidirectional text. ...</div><div class='long'><p>Render unidirectional text.\n <p/>\n This method can also be used to measure the width of the text without actually drawing it.\n <p/></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>index of the first character</p>\n</div></li><li><span class='pre'>limit</span> : Number<div class='sub-desc'><p>index of the first character that should not be rendered.</p>\n</div></li><li><span class='pre'>isRtl</span> : Boolean<div class='sub-desc'><p>is the text right-to-left</p>\n</div></li><li><span class='pre'>advances</span> : Object {float[]}<div class='sub-desc'><p>If not null, then advances for each character to be rendered are returned\n            here.</p>\n</div></li><li><span class='pre'>advancesIndex</span> : Number<div class='sub-desc'><p>index into advances from where the advances need to be filled.</p>\n</div></li><li><span class='pre'>draw</span> : Boolean<div class='sub-desc'><p>If true and {@code graphics} is not null, draw the rendered text on the graphics\n            at the given co-ordinates</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.RectF}</span><div class='sub-desc'><p>A rectangle specifying the bounds of the text drawn.</p>\n</div></li></ul></div></div></div><div id='method-setRenderLocation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BidiRenderer'>android.graphics.BidiRenderer</span><br/><a href='source/BidiRenderer.html#android-graphics-BidiRenderer-method-setRenderLocation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BidiRenderer-method-setRenderLocation' class='name expandable'>setRenderLocation</a>( <span class='pre'>x, y</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>The x-coordinate of the left edge of where the text should be drawn on the given\n            graphics.</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The y-coordinate at which to draw the text on the given mGraphics.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});