Ext.data.JsonP.android_graphics_HardwareRenderer_FrameRenderRequest({"tagname":"class","name":"android.graphics.HardwareRenderer.FrameRenderRequest","autodetected":{},"files":[{"filename":"FrameRenderRequest.js","href":"FrameRenderRequest.html#android-graphics-HardwareRenderer-FrameRenderRequest"}],"extends":"java.lang.Object","members":[{"name":"setFrameCommitCallback","tagname":"method","owner":"android.graphics.HardwareRenderer.FrameRenderRequest","id":"method-setFrameCommitCallback","meta":{}},{"name":"setVsyncTime","tagname":"method","owner":"android.graphics.HardwareRenderer.FrameRenderRequest","id":"method-setVsyncTime","meta":{}},{"name":"setWaitForPresent","tagname":"method","owner":"android.graphics.HardwareRenderer.FrameRenderRequest","id":"method-setWaitForPresent","meta":{}},{"name":"syncAndDraw","tagname":"method","owner":"android.graphics.HardwareRenderer.FrameRenderRequest","id":"method-syncAndDraw","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.HardwareRenderer.FrameRenderRequest","short_doc":"Sets the parameters that can be used to control a render request for a\n android.graphics.HardwareRenderer. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.graphics.HardwareRenderer.FrameRenderRequest</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FrameRenderRequest.html#android-graphics-HardwareRenderer-FrameRenderRequest' target='_blank'>FrameRenderRequest.js</a></div></pre><div class='doc-contents'><p>Sets the parameters that can be used to control a render request for a\n <a href=\"#!/api/android.graphics.HardwareRenderer\" rel=\"android.graphics.HardwareRenderer\" class=\"docClass\">android.graphics.HardwareRenderer</a>. This is not thread-safe and must not be held on to for longer\n than a single frame request.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-setFrameCommitCallback' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.HardwareRenderer.FrameRenderRequest'>android.graphics.HardwareRenderer.FrameRenderRequest</span><br/><a href='source/FrameRenderRequest.html#android-graphics-HardwareRenderer-FrameRenderRequest-method-setFrameCommitCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.HardwareRenderer.FrameRenderRequest-method-setFrameCommitCallback' class='name expandable'>setFrameCommitCallback</a>( <span class='pre'>executor, frameCommitCallback</span> ) : Object {android.graphics.HardwareRenderer.FrameRenderRequest}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a frame commit callback. ...</div><div class='long'><p>Adds a frame commit callback. This callback will be invoked when the current rendering\n content has been rendered into a frame and submitted to the swap chain. The frame may\n not currently be visible on the display when this is invoked, but it has been submitted.\n This callback is useful in combination with PixelCopy to capture the current\n rendered content of the UI reliably.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>The executor to run the callback on. It is strongly recommended that\n                 this executor post to a different thread, as the calling thread is\n                 highly sensitive to being blocked.</p>\n</div></li><li><span class='pre'>frameCommitCallback</span> : Object {Runnable}<div class='sub-desc'><p>The callback to invoke when the frame content has been drawn.\n                            Will be invoked on the given Executor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.HardwareRenderer.FrameRenderRequest}</span><div class='sub-desc'><p>this instance</p>\n</div></li></ul></div></div></div><div id='method-setVsyncTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.HardwareRenderer.FrameRenderRequest'>android.graphics.HardwareRenderer.FrameRenderRequest</span><br/><a href='source/FrameRenderRequest.html#android-graphics-HardwareRenderer-FrameRenderRequest-method-setVsyncTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.HardwareRenderer.FrameRenderRequest-method-setVsyncTime' class='name expandable'>setVsyncTime</a>( <span class='pre'>vsyncTime</span> ) : Object {android.graphics.HardwareRenderer.FrameRenderRequest}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the vsync time that represents the start point of this frame. ...</div><div class='long'><p>Sets the vsync time that represents the start point of this frame. Typically this\n comes from android.view.Choreographer.FrameCallback. Other compatible time\n sources include System.nanoTime(), however if the result is being displayed\n on-screen then using android.view.Choreographer is strongly recommended to\n ensure smooth animations.</p>\n\n<p> <p>If the clock source is not from a CLOCK_MONOTONIC source then any animations driven\n directly by RenderThread will not be synchronized properly with the current frame.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>vsyncTime</span> : Number<div class='sub-desc'><p>The vsync timestamp for this frame. The timestamp is in nanoseconds\n                  and should come from a CLOCK_MONOTONIC source.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.HardwareRenderer.FrameRenderRequest}</span><div class='sub-desc'><p>this instance</p>\n</div></li></ul></div></div></div><div id='method-setWaitForPresent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.HardwareRenderer.FrameRenderRequest'>android.graphics.HardwareRenderer.FrameRenderRequest</span><br/><a href='source/FrameRenderRequest.html#android-graphics-HardwareRenderer-FrameRenderRequest-method-setWaitForPresent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.HardwareRenderer.FrameRenderRequest-method-setWaitForPresent' class='name expandable'>setWaitForPresent</a>( <span class='pre'>shouldWait</span> ) : Object {android.graphics.HardwareRenderer.FrameRenderRequest}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether or not syncAndDraw() should block until the frame has been\n presented. ...</div><div class='long'><p>Sets whether or not <a href=\"#!/api/android.graphics.HardwareRenderer.FrameRenderRequest-method-syncAndDraw\" rel=\"android.graphics.HardwareRenderer.FrameRenderRequest-method-syncAndDraw\" class=\"docClass\">syncAndDraw</a>() should block until the frame has been\n presented. If this is true and <a href=\"#!/api/android.graphics.HardwareRenderer.FrameRenderRequest-method-syncAndDraw\" rel=\"android.graphics.HardwareRenderer.FrameRenderRequest-method-syncAndDraw\" class=\"docClass\">syncAndDraw</a>() does not return\n SYNC_FRAME_DROPPED or an error then when <a href=\"#!/api/android.graphics.HardwareRenderer.FrameRenderRequest-method-syncAndDraw\" rel=\"android.graphics.HardwareRenderer.FrameRenderRequest-method-syncAndDraw\" class=\"docClass\">syncAndDraw</a>() has returned\n the frame has been submitted to the Surface. The default and typically\n recommended value is false, as blocking for present will prevent pipelining from\n happening, reducing overall throughput. This is useful for situations such as\n SurfaceHolder.Callback2.surfaceRedrawNeeded(SurfaceHolder) where it is desired\n to block until a frame has been presented to ensure first-frame consistency with\n other Surfaces.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>shouldWait</span> : Boolean<div class='sub-desc'><p>If true the next call to syncAndDraw() will block until\n                   completion.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.HardwareRenderer.FrameRenderRequest}</span><div class='sub-desc'><p>this instance</p>\n</div></li></ul></div></div></div><div id='method-syncAndDraw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.HardwareRenderer.FrameRenderRequest'>android.graphics.HardwareRenderer.FrameRenderRequest</span><br/><a href='source/FrameRenderRequest.html#android-graphics-HardwareRenderer-FrameRenderRequest-method-syncAndDraw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.HardwareRenderer.FrameRenderRequest-method-syncAndDraw' class='name expandable'>syncAndDraw</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Syncs the RenderNode tree to the render thread and requests a frame to be drawn. ...</div><div class='long'><p>Syncs the RenderNode tree to the render thread and requests a frame to be drawn. This\n <a href=\"#!/api/android.graphics.HardwareRenderer.FrameRenderRequest\" rel=\"android.graphics.HardwareRenderer.FrameRenderRequest\" class=\"docClass\">android.graphics.HardwareRenderer.FrameRenderRequest</a> instance should no longer be used after calling this method.\n The system internally may reuse instances of <a href=\"#!/api/android.graphics.HardwareRenderer.FrameRenderRequest\" rel=\"android.graphics.HardwareRenderer.FrameRenderRequest\" class=\"docClass\">android.graphics.HardwareRenderer.FrameRenderRequest</a> to reduce\n allocation churn.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The result of the sync operation.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});