Ext.data.JsonP.android_graphics_LightingColorFilter({"tagname":"class","name":"android.graphics.LightingColorFilter","autodetected":{},"files":[{"filename":"LightingColorFilter.js","href":"LightingColorFilter.html#android-graphics-LightingColorFilter"}],"extends":"android.graphics.ColorFilter","members":[{"name":"getColorAdd","tagname":"method","owner":"android.graphics.LightingColorFilter","id":"method-getColorAdd","meta":{}},{"name":"getColorMultiply","tagname":"method","owner":"android.graphics.LightingColorFilter","id":"method-getColorMultiply","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.LightingColorFilter","short_doc":"A color filter that can be used to simulate simple lighting effects. ...","classIcon":"icon-class","superclasses":["java.lang.Object","android.graphics.ColorFilter"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.graphics.ColorFilter' rel='android.graphics.ColorFilter' class='docClass'>android.graphics.ColorFilter</a><div class='subclass '><strong>android.graphics.LightingColorFilter</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/LightingColorFilter.html#android-graphics-LightingColorFilter' target='_blank'>LightingColorFilter.js</a></div></pre><div class='doc-contents'><p>A color filter that can be used to simulate simple lighting effects.\n A <code>LightingColorFilter</code> is defined by two parameters, one\n used to multiply the source color (called <code>colorMultiply</code>)\n and one used to add to the source color (called <code>colorAdd</code>).\n The alpha channel is left untouched by this color filter.</p>\n\n<p> Given a source color RGB, the resulting R'G'B' color is computed thusly:</p>\n\n<pre> R' = R * colorMultiply.R + colorAdd.R\n G' = G * colorMultiply.G + colorAdd.G\n B' = B * colorMultiply.B + colorAdd.B\n </pre>\n\n\n<p> The result is pinned to the <code>[0..255]</code> range for each channel.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getColorAdd' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.LightingColorFilter'>android.graphics.LightingColorFilter</span><br/><a href='source/LightingColorFilter.html#android-graphics-LightingColorFilter-method-getColorAdd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.LightingColorFilter-method-getColorAdd' class='name expandable'>getColorAdd</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the RGB color that will be added to the source color\n when the color filter is applied. ...</div><div class='long'><p>Returns the RGB color that will be added to the source color\n when the color filter is applied.</p>\n</div></div></div><div id='method-getColorMultiply' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.LightingColorFilter'>android.graphics.LightingColorFilter</span><br/><a href='source/LightingColorFilter.html#android-graphics-LightingColorFilter-method-getColorMultiply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.LightingColorFilter-method-getColorMultiply' class='name expandable'>getColorMultiply</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the RGB color used to multiply the source color when the\n color filter is applied. ...</div><div class='long'><p>Returns the RGB color used to multiply the source color when the\n color filter is applied.</p>\n</div></div></div></div></div></div></div>","meta":{}});