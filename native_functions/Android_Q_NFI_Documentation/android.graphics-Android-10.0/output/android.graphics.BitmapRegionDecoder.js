Ext.data.JsonP.android_graphics_BitmapRegionDecoder({"tagname":"class","name":"android.graphics.BitmapRegionDecoder","autodetected":{},"files":[{"filename":"BitmapRegionDecoder.js","href":"BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder"}],"extends":"java.lang.Object","members":[{"name":"decodeRegion","tagname":"method","owner":"android.graphics.BitmapRegionDecoder","id":"method-decodeRegion","meta":{}},{"name":"getHeight","tagname":"method","owner":"android.graphics.BitmapRegionDecoder","id":"method-getHeight","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.graphics.BitmapRegionDecoder","id":"method-getWidth","meta":{}},{"name":"isRecycled","tagname":"method","owner":"android.graphics.BitmapRegionDecoder","id":"method-isRecycled","meta":{}},{"name":"newInstance","tagname":"method","owner":"android.graphics.BitmapRegionDecoder","id":"method-newInstance","meta":{}},{"name":"recycle","tagname":"method","owner":"android.graphics.BitmapRegionDecoder","id":"method-recycle","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.BitmapRegionDecoder","short_doc":"BitmapRegionDecoder can be used to decode a rectangle region from an image. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.graphics.BitmapRegionDecoder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder' target='_blank'>BitmapRegionDecoder.js</a></div></pre><div class='doc-contents'><p>BitmapRegionDecoder can be used to decode a rectangle region from an image.\n BitmapRegionDecoder is particularly useful when an original image is large and\n you only need parts of the image.</p>\n\n<p> <p>To create a BitmapRegionDecoder, call newInstance(...).\n Given a BitmapRegionDecoder, users can call decodeRegion() repeatedly\n to get a decoded Bitmap of the specified region.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-decodeRegion' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BitmapRegionDecoder'>android.graphics.BitmapRegionDecoder</span><br/><a href='source/BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder-method-decodeRegion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BitmapRegionDecoder-method-decodeRegion' class='name expandable'>decodeRegion</a>( <span class='pre'>rect, options</span> ) : Object {android.graphics.Bitmap}<span class=\"signature\"></span></div><div class='description'><div class='short'>Decodes a rectangle region in the image specified by rect. ...</div><div class='long'><p>Decodes a rectangle region in the image specified by rect.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rect</span> : Object {Rect}<div class='sub-desc'><p>The rectangle that specified the region to be decode.</p>\n</div></li><li><span class='pre'>options</span> : Object {BitmapFactory.Options}<div class='sub-desc'><p>null-ok; Options that control downsampling.\n             inPurgeable is not supported.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Bitmap}</span><div class='sub-desc'><p>The decoded bitmap, or null if the image data could not be\n         decoded.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if BitmapFactory.Options.inPreferredConfig\n         is <a href=\"#!/api/android.graphics.Bitmap.Config-property-HARDWARE\" rel=\"android.graphics.Bitmap.Config-property-HARDWARE\" class=\"docClass\">android.graphics.Bitmap.Config.HARDWARE</a>\n         and BitmapFactory.Options.inMutable is set, if the specified color space\n         is not RGB, or if the specified color space's transfer\n         function is not an ICC parametric curve</p>\n</div></li></ul></div></div></div><div id='method-getHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BitmapRegionDecoder'>android.graphics.BitmapRegionDecoder</span><br/><a href='source/BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder-method-getHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BitmapRegionDecoder-method-getHeight' class='name expandable'>getHeight</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the original image's height ...</div><div class='long'><p>Returns the original image's height</p>\n</div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BitmapRegionDecoder'>android.graphics.BitmapRegionDecoder</span><br/><a href='source/BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BitmapRegionDecoder-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the original image's width ...</div><div class='long'><p>Returns the original image's width</p>\n</div></div></div><div id='method-isRecycled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BitmapRegionDecoder'>android.graphics.BitmapRegionDecoder</span><br/><a href='source/BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder-method-isRecycled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BitmapRegionDecoder-method-isRecycled' class='name expandable'>isRecycled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this region decoder has been recycled. ...</div><div class='long'><p>Returns true if this region decoder has been recycled.\n If so, then it is an error to try use its method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the region decoder has been recycled</p>\n</div></li></ul></div></div></div><div id='method-newInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BitmapRegionDecoder'>android.graphics.BitmapRegionDecoder</span><br/><a href='source/BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder-method-newInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BitmapRegionDecoder-method-newInstance' class='name expandable'>newInstance</a>( <span class='pre'>pathName, isShareable</span> ) : Object {android.graphics.BitmapRegionDecoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a BitmapRegionDecoder from a file path. ...</div><div class='long'><p>Create a BitmapRegionDecoder from a file path.\n Currently only the JPEG and PNG formats are supported.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pathName</span> : String<div class='sub-desc'><p>complete path name for the file to be decoded.</p>\n</div></li><li><span class='pre'>isShareable</span> : Boolean<div class='sub-desc'><p>If this is true, then the BitmapRegionDecoder may keep a\n                    shallow reference to the input. If this is false,\n                    then the BitmapRegionDecoder will explicitly make a copy of the\n                    input data, and keep that. Even if sharing is allowed,\n                    the implementation may still decide to make a deep\n                    copy of the input data. If an image is progressively encoded,\n                    allowing sharing may degrade the decoding speed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.BitmapRegionDecoder}</span><div class='sub-desc'><p>BitmapRegionDecoder, or null if the image data could not be decoded.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if the image format is not supported or can not be decoded.</p>\n</div></li></ul></div></div></div><div id='method-recycle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.BitmapRegionDecoder'>android.graphics.BitmapRegionDecoder</span><br/><a href='source/BitmapRegionDecoder.html#android-graphics-BitmapRegionDecoder-method-recycle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.BitmapRegionDecoder-method-recycle' class='name expandable'>recycle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Frees up the memory associated with this region decoder, and mark the\n region decoder as \"dead\", meaning it will thro...</div><div class='long'><p>Frees up the memory associated with this region decoder, and mark the\n region decoder as \"dead\", meaning it will throw an exception if decodeRegion(),\n getWidth() or getHeight() is called.</p>\n\n<p> <p>This operation cannot be reversed, so it should only be called if you are\n sure there are no further uses for the region decoder. This is an advanced call,\n and normally need not be called, since the normal GC process will free up this\n memory when there are no more references to this region decoder.</p>\n</div></div></div></div></div></div></div>","meta":{}});