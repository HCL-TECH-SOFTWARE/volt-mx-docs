Ext.data.JsonP.android_graphics_ColorSpace_Rgb({"tagname":"class","name":"android.graphics.ColorSpace.Rgb","autodetected":{},"files":[{"filename":"Rgb.js","href":"Rgb.html#android-graphics-ColorSpace-Rgb"}],"extends":"android.graphics.ColorSpace","members":[{"name":"ILLUMINANT_A","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_A","meta":{}},{"name":"ILLUMINANT_B","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_B","meta":{}},{"name":"ILLUMINANT_C","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_C","meta":{}},{"name":"ILLUMINANT_D50","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D50","meta":{}},{"name":"ILLUMINANT_D55","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D55","meta":{}},{"name":"ILLUMINANT_D60","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D60","meta":{}},{"name":"ILLUMINANT_D65","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D65","meta":{}},{"name":"ILLUMINANT_D75","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_D75","meta":{}},{"name":"ILLUMINANT_E","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-ILLUMINANT_E","meta":{}},{"name":"MAX_ID","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-MAX_ID","meta":{}},{"name":"MIN_ID","tagname":"property","owner":"android.graphics.ColorSpace","id":"property-MIN_ID","meta":{}},{"name":"adapt","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-adapt","meta":{}},{"name":"connect","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-connect","meta":{}},{"name":"equals","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-equals","meta":{}},{"name":"fromLinear","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-fromLinear","meta":{}},{"name":"fromXyz","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-fromXyz","meta":{}},{"name":"get","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-get","meta":{}},{"name":"getComponentCount","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getComponentCount","meta":{}},{"name":"getEotf","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getEotf","meta":{}},{"name":"getId","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getId","meta":{}},{"name":"getInverseTransform","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getInverseTransform","meta":{}},{"name":"getMaxValue","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getMaxValue","meta":{}},{"name":"getMinValue","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getMinValue","meta":{}},{"name":"getModel","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getModel","meta":{}},{"name":"getName","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-getName","meta":{}},{"name":"getOetf","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getOetf","meta":{}},{"name":"getPrimaries","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getPrimaries","meta":{}},{"name":"getTransferParameters","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getTransferParameters","meta":{}},{"name":"getTransform","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getTransform","meta":{}},{"name":"getWhitePoint","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-getWhitePoint","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-hashCode","meta":{}},{"name":"isSrgb","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-isSrgb","meta":{}},{"name":"isWideGamut","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-isWideGamut","meta":{}},{"name":"match","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-match","meta":{}},{"name":"toLinear","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-toLinear","meta":{}},{"name":"toString","tagname":"method","owner":"android.graphics.ColorSpace","id":"method-toString","meta":{}},{"name":"toXyz","tagname":"method","owner":"android.graphics.ColorSpace.Rgb","id":"method-toXyz","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.ColorSpace.Rgb","short_doc":"{@usesMathJax}\n\n An RGB color space is an additive color space using the\n RGB color model (a color is therefore repre...","classIcon":"icon-class","superclasses":["java.lang.Object","android.graphics.ColorSpace"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='docClass'>android.graphics.ColorSpace</a><div class='subclass '><strong>android.graphics.ColorSpace.Rgb</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb' target='_blank'>Rgb.js</a></div></pre><div class='doc-contents'><p>{@usesMathJax}</p>\n\n<p> <p>An RGB color space is an additive color space using the\n <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a> color model (a color is therefore represented\n by a tuple of 3 numbers).</p></p>\n\n<p> <p>A specific RGB color space is defined by the following properties:</p>\n <ul>\n     <li>Three chromaticities of the red, green and blue primaries, which\n     define the gamut of the color space.</li>\n     <li>A white point chromaticity that defines the stimulus to which\n     color space values are normalized (also just called \"white\").</li>\n     <li>An opto-electronic transfer function, also called opto-electronic\n     conversion function or often, and approximately, gamma function.</li>\n     <li>An electro-optical transfer function, also called electo-optical\n     conversion function or often, and approximately, gamma function.</li>\n     <li>A range of valid RGB values (most commonly ([0..1])).</li>\n </ul></p>\n\n<p> <p>The most commonly used RGB color space is <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a>.</p></p>\n\n<p> <h3>Primaries and white point chromaticities</h3>\n <p>In this implementation, the chromaticity of the primaries and the white\n point of an RGB color space is defined in the CIE xyY color space. This\n color space separates the chromaticity of a color, the x and y components,\n and its luminance, the Y component. Since the primaries and the white\n point have full brightness, the Y component is assumed to be 1 and only\n the x and y components are needed to encode them.</p>\n <p>For convenience, this implementation also allows to define the\n primaries and white point in the CIE XYZ space. The tristimulus XYZ values\n are internally converted to xyY.</p></p>\n\n<p> <p>\n     <img style=\"display: block; margin: 0 auto;\" src=\"{@docRoot}reference/android/images/graphics/colorspace_srgb.png\" />\n     <figcaption style=\"text-align: center;\">sRGB primaries and white point</figcaption>\n </p></p>\n\n<p> <h3>Transfer functions</h3>\n <p>A transfer function is a color component conversion function, defined as\n a single variable, monotonic mathematical function. It is applied to each\n individual component of a color. They are used to perform the mapping\n between linear tristimulus values and non-linear electronic signal value.</p>\n <p>The <em>opto-electronic transfer function</em> (OETF or OECF) encodes\n tristimulus values in a scene to a non-linear electronic signal value.\n An OETF is often expressed as a power function with an exponent between\n 0.38 and 0.55 (the reciprocal of 1.8 to 2.6).</p>\n <p>The <em>electro-optical transfer function</em> (EOTF or EOCF) decodes\n a non-linear electronic signal value to a tristimulus value at the display.\n An EOTF is often expressed as a power function with an exponent between\n 1.8 and 2.6.</p>\n <p>Transfer functions are used as a compression scheme. For instance,\n linear sRGB values would normally require 11 to 12 bits of precision to\n store all values that can be perceived by the human eye. When encoding\n sRGB values using the appropriate OETF (see <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> for\n an exact mathematical description of that OETF), the values can be\n compressed to only 8 bits precision.</p>\n <p>When manipulating RGB values, particularly sRGB values, it is safe\n to assume that these values have been encoded with the appropriate\n OETF (unless noted otherwise). Encoded values are often said to be in\n \"gamma space\". They are therefore defined in a non-linear space. This\n in turns means that any linear operation applied to these values is\n going to yield mathematically incorrect results (any linear interpolation\n such as gradient generation for instance, most image processing functions\n such as blurs, etc.).</p>\n <p>To properly process encoded RGB values you must first apply the\n EOTF to decode the value into linear space. After processing, the RGB\n value must be encoded back to non-linear (\"gamma\") space. Here is a\n formal description of the process, where (f) is the processing\n function to apply:</p></p>\n\n<p> $$RGB<em>{out} = OETF(f(EOTF(RGB</em>{in})))$$</p>\n\n<p> <p>If the transfer functions of the color space can be expressed as an\n ICC parametric curve as defined in ICC.1:2004-10, the numeric parameters\n can be retrieved by calling <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getTransferParameters\" rel=\"android.graphics.ColorSpace.Rgb-method-getTransferParameters\" class=\"docClass\">getTransferParameters</a>(). This can\n be useful to match color spaces for instance.</p></p>\n\n<p> <p class=\"note\">Some RGB color spaces, such as <a href=\"#!/api/android.graphics.ColorSpace.Named-property-ACES\" rel=\"android.graphics.ColorSpace.Named-property-ACES\" class=\"docClass\">android.graphics.ColorSpace.Named.ACES</a> and\n <a href=\"#!/api/android.graphics.ColorSpace.Named-property-LINEAR_EXTENDED_SRGB\" rel=\"android.graphics.ColorSpace.Named-property-LINEAR_EXTENDED_SRGB\" class=\"docClass\">scRGB</a>, are said to be linear because\n their transfer functions are the identity function: (f(x) = x).\n If the source and/or destination are known to be linear, it is not\n necessary to invoke the transfer functions.</p></p>\n\n<p> <h3>Range</h3>\n <p>Most RGB color spaces allow RGB values in the range ([0..1]). There\n are however a few RGB color spaces that allow much larger ranges. For\n instance, <a href=\"#!/api/android.graphics.ColorSpace.Named-property-EXTENDED_SRGB\" rel=\"android.graphics.ColorSpace.Named-property-EXTENDED_SRGB\" class=\"docClass\">scRGB</a> is used to manipulate the\n range ([-0.5..7.5]) while <a href=\"#!/api/android.graphics.ColorSpace.Named-property-ACES\" rel=\"android.graphics.ColorSpace.Named-property-ACES\" class=\"docClass\">ACES</a> can be used throughout\n the range ([-65504, 65504]).</p></p>\n\n<p> <p>\n     <img style=\"display: block; margin: 0 auto;\" src=\"{@docRoot}reference/android/images/graphics/colorspace_scrgb.png\" />\n     <figcaption style=\"text-align: center;\">Extended sRGB and its large range</figcaption>\n </p></p>\n\n<p> <h3>Converting between RGB color spaces</h3>\n <p>Conversion between two color spaces is achieved by using an intermediate\n color space called the profile connection space (PCS). The PCS used by\n this implementation is CIE XYZ. The conversion operation is defined\n as such:</p></p>\n\n<p> $$RGB<em>{out} = OETF(T</em>{dst}^{-1} \\cdot T<em>{src} \\cdot EOTF(RGB</em>{in}))$$</p>\n\n<p> <p>Where (T<em>{src}) is the RGB to XYZ transform\n of the source color space and (T</em>{dst}^{-1}) the XYZ to RGB transform of the destination color space.</p>\n <p>Many RGB color spaces commonly used with electronic devices use the\n standard illuminant <a href=\"#!/api/android.graphics.ColorSpace.Rgb-property-ILLUMINANT_D65\" rel=\"android.graphics.ColorSpace.Rgb-property-ILLUMINANT_D65\" class=\"docClass\">D65</a>. Care must be take however\n when converting between two RGB color spaces if their white points do not\n match. This can be achieved by either calling\n float[]) to adapt one or both color spaces to\n a single common white point. This can be achieved automatically by calling\n android.graphics.ColorSpace), which also handles\n non-RGB color spaces.</p>\n <p>To learn more about the white point adaptation process, refer to the\n documentation of <a href=\"#!/api/android.graphics.ColorSpace.Adaptation\" rel=\"android.graphics.ColorSpace.Adaptation\" class=\"docClass\">android.graphics.ColorSpace.Adaptation</a>.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ILLUMINANT_A' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_A' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_A' class='name expandable'>ILLUMINANT_A</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant A, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant A, encoded in xyY.\nThis illuminant has a color temperature of 2856K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_B' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_B' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_B' class='name expandable'>ILLUMINANT_B</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant B, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant B, encoded in xyY.\nThis illuminant has a color temperature of 4874K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_C' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_C' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_C' class='name expandable'>ILLUMINANT_C</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant C, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant C, encoded in xyY.\nThis illuminant has a color temperature of 6774K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D50' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D50' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50' class='name expandable'>ILLUMINANT_D50</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D50, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D50, encoded in xyY.\nThis illuminant has a color temperature of 5003K. This illuminant\nis used by the profile connection space in ICC profiles.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D55' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D55' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D55' class='name expandable'>ILLUMINANT_D55</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D55, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D55, encoded in xyY.\nThis illuminant has a color temperature of 5503K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D60' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D60' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D60' class='name expandable'>ILLUMINANT_D60</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D60, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D60, encoded in xyY.\nThis illuminant has a color temperature of 6004K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D65' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D65' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D65' class='name expandable'>ILLUMINANT_D65</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D65, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D65, encoded in xyY.\nThis illuminant has a color temperature of 6504K. This illuminant\nis commonly used in RGB color spaces such as sRGB, BT.209, etc.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_D75' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_D75' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D75' class='name expandable'>ILLUMINANT_D75</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant D75, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant D75, encoded in xyY.\nThis illuminant has a color temperature of 7504K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ILLUMINANT_E' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-ILLUMINANT_E' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-ILLUMINANT_E' class='name expandable'>ILLUMINANT_E</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard CIE 1931 2° illuminant E, encoded in xyY. ...</div><div class='long'><p>Standard CIE 1931 2° illuminant E, encoded in xyY.\nThis illuminant has a color temperature of 5454K.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MAX_ID' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-MAX_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-MAX_ID' class='name expandable'>MAX_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The maximum ID value a color space can have. ...</div><div class='long'><p>The maximum ID value a color space can have.</p>\n\n<p>@see <a href=\"#!/api/android.graphics.ColorSpace-method-getId\" rel=\"android.graphics.ColorSpace-method-getId\" class=\"docClass\">getId</a>()</p>\n<p>Defaults to: <code>&quot;63&quot;</code></p></div></div></div><div id='property-MIN_ID' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-property-MIN_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-property-MIN_ID' class='name expandable'>MIN_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The minimum ID value a color space can have. ...</div><div class='long'><p>The minimum ID value a color space can have.</p>\n\n<p>@see <a href=\"#!/api/android.graphics.ColorSpace-method-getId\" rel=\"android.graphics.ColorSpace-method-getId\" class=\"docClass\">getId</a>()</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adapt' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-adapt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-adapt' class='name expandable'>adapt</a>( <span class='pre'>colorSpace, whitePoint, adaptation</span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs the chromatic adaptation of a color space from its native\n white point to the specified white point. ...</div><div class='long'><p>Performs the chromatic adaptation of a color space from its native\n white point to the specified white point. If the specified color space\n does not have an <a href=\"#!/api/android.graphics.ColorSpace.Model-property-RGB\" rel=\"android.graphics.ColorSpace.Model-property-RGB\" class=\"docClass\">RGB</a> color model, or if the color\n space already has the target white point, the color space is returned\n unmodified.</p>\n\n\n<p> <p>The chromatic adaptation is performed using the von Kries method\n described in the documentation of <a href=\"#!/api/android.graphics.ColorSpace.Adaptation\" rel=\"android.graphics.ColorSpace.Adaptation\" class=\"docClass\">android.graphics.ColorSpace.Adaptation</a>.</p></p>\n\n<p> <p class=\"note\">The color space returned by this method always has\n an ID of <a href=\"#!/api/android.graphics.ColorSpace-property-MIN_ID\" rel=\"android.graphics.ColorSpace-property-MIN_ID\" class=\"docClass\">MIN_ID</a>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>colorSpace</span> : Object {ColorSpace}<div class='sub-desc'><p>The color space to chromatically adapt</p>\n</div></li><li><span class='pre'>whitePoint</span> : Object {float[]}<div class='sub-desc'><p>The new white point</p>\n</div></li><li><span class='pre'>adaptation</span> : Object {ColorSpace.Adaptation}<div class='sub-desc'><p>The adaptation matrix</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A new color space if the specified color space has an RGB\n         model and a white point different from the specified white\n         point; the specified color space otherwise\n@see Adaptation\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-adapt\" rel=\"android.graphics.ColorSpace-method-adapt\" class=\"docClass\">adapt</a>(ColorSpace, float[])</p>\n</div></li></ul></div></div></div><div id='method-connect' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-connect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-connect' class='name expandable'>connect</a>( <span class='pre'>source, intent</span> ) : Object {android.graphics.ColorSpace.Connector}<span class=\"signature\"></span></div><div class='description'><div class='short'>Connects the specified color spaces to sRGB. ...</div><div class='long'><p>Connects the specified color spaces to sRGB.\n If the source color space does not use CIE XYZ D65 as its profile\n connection space, the two spaces are chromatically adapted to use the\n CIE standard illuminant <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D50\" class=\"docClass\">D50</a> as needed.</p>\n\n\n<p> <p>If the source is the sRGB color space, an optimized connector\n is returned to avoid unnecessary computations and loss of precision.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {ColorSpace}<div class='sub-desc'><p>The color space to convert colors from</p>\n</div></li><li><span class='pre'>intent</span> : Object {ColorSpace.RenderIntent}<div class='sub-desc'><p>The render intent to map colors from the source to the destination</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace.Connector}</span><div class='sub-desc'><p>A non-null connector between the specified color space and sRGB\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-connect\" rel=\"android.graphics.ColorSpace-method-connect\" class=\"docClass\">connect</a>(ColorSpace)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-connect\" rel=\"android.graphics.ColorSpace-method-connect\" class=\"docClass\">connect</a>(ColorSpace, ColorSpace)\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-connect\" rel=\"android.graphics.ColorSpace-method-connect\" class=\"docClass\">connect</a>(ColorSpace, ColorSpace, RenderIntent)</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-equals\" rel=\"android.graphics.ColorSpace-method-equals\" class=\"docClass\">android.graphics.ColorSpace.equals</a></p></div></div></div><div id='method-fromLinear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-fromLinear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-fromLinear' class='name expandable'>fromLinear</a>( <span class='pre'>v</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Encodes an RGB value from linear space to this color space's\n \"gamma space\". ...</div><div class='long'><p>Encodes an RGB value from linear space to this color space's\n \"gamma space\". This is achieved by applying this color space's\n opto-electronic transfer function to the first 3 values of the\n supplied array. The result is stored back in the input array.</p>\n\n\n<p> <p>Refer to the documentation of <a href=\"#!/api/android.graphics.ColorSpace.Rgb\" rel=\"android.graphics.ColorSpace.Rgb\" class=\"docClass\">android.graphics.ColorSpace.Rgb</a> for\n more information about transfer functions and their use for\n encoding and decoding RGB values.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Object {float[]}<div class='sub-desc'><p>A non-null array of linear RGB values, its length\n          must be at least 3</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A new array of 3 floats containing non-linear RGB values\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-fromLinear\" rel=\"android.graphics.ColorSpace.Rgb-method-fromLinear\" class=\"docClass\">fromLinear</a>(float[])\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-toLinear\" rel=\"android.graphics.ColorSpace.Rgb-method-toLinear\" class=\"docClass\">toLinear</a>(float, float, float)</p>\n</div></li></ul></div></div></div><div id='method-fromXyz' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-fromXyz' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-fromXyz' class='name expandable'>fromXyz</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-fromXyz\" rel=\"android.graphics.ColorSpace-method-fromXyz\" class=\"docClass\">android.graphics.ColorSpace.fromXyz</a></p></div></div></div><div id='method-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-get' class='name expandable'>get</a>( <span class='pre'>name</span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an instance of android.graphics.ColorSpace identified by the specified\n name. ...</div><div class='long'><p>Returns an instance of <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">android.graphics.ColorSpace</a> identified by the specified\n name. The list of names provided in the <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a> enum gives access\n to a variety of common RGB color spaces.</p>\n\n\n<p> <p>This method always returns the same instance for a given name.</p></p>\n\n<p> <p>This method is thread-safe.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object {ColorSpace.Named}<div class='sub-desc'><p>The name of the color space to get an instance of</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A non-null ColorSpace instance</p>\n</div></li></ul></div></div></div><div id='method-getComponentCount' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getComponentCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getComponentCount' class='name expandable'>getComponentCount</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of components that form a color value according\n to this color space's color model. ...</div><div class='long'><p>Returns the number of components that form a color value according\n to this color space's color model.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An integer between 1 and 4\n@see Model\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-getModel\" rel=\"android.graphics.ColorSpace-method-getModel\" class=\"docClass\">getModel</a>()</p>\n</div></li></ul></div></div></div><div id='method-getEotf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getEotf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getEotf' class='name expandable'>getEotf</a>( <span class='pre'></span> ) : Object {java.util.function.DoubleUnaryOperator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the electro-optical transfer function (EOTF) of this color space. ...</div><div class='long'><p>Returns the electro-optical transfer function (EOTF) of this color space.\n The inverse function is the opto-electronic transfer function (OETF)\n returned by <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getOetf\" rel=\"android.graphics.ColorSpace.Rgb-method-getOetf\" class=\"docClass\">getOetf</a>(). These functions are defined to satisfy the\n following equality for \\(x \\in [0..1]\\):</p>\n\n\n<p> $$OETF(EOTF(x)) = EOTF(OETF(x)) = x$$</p>\n\n<p> <p>For RGB colors, this function can be used to convert from \"gamma space\"\n (gamma encoded) to linear space. The terms gamma space and gamma encoded\n are frequently used because many EOTFs can be closely approximated using\n a simple power function of the form (x^\\gamma) (the approximation of the\n <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> EOTF uses (\\gamma=2.2) for instance).</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.DoubleUnaryOperator}</span><div class='sub-desc'><p>A transfer function that converts from \"gamma space\" to linear space\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getOetf\" rel=\"android.graphics.ColorSpace.Rgb-method-getOetf\" class=\"docClass\">getOetf</a>()\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getTransferParameters\" rel=\"android.graphics.ColorSpace.Rgb-method-getTransferParameters\" class=\"docClass\">getTransferParameters</a>()</p>\n</div></li></ul></div></div></div><div id='method-getId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the ID of this color space. ...</div><div class='long'><p>Returns the ID of this color space. Positive IDs match the color\n spaces enumerated in <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a>. A negative ID indicates a\n color space created by calling one of the public constructors.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An integer between <a href=\"#!/api/android.graphics.ColorSpace-property-MIN_ID\" rel=\"android.graphics.ColorSpace-property-MIN_ID\" class=\"docClass\">MIN_ID</a> and <a href=\"#!/api/android.graphics.ColorSpace-property-MAX_ID\" rel=\"android.graphics.ColorSpace-property-MAX_ID\" class=\"docClass\">MAX_ID</a></p>\n</div></li></ul></div></div></div><div id='method-getInverseTransform' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getInverseTransform' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getInverseTransform' class='name expandable'>getInverseTransform</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the inverse transform of this color space as a new array. ...</div><div class='long'><p>Returns the inverse transform of this color space as a new array.\n The inverse transform is used to convert from XYZ to RGB (with the\n same white point as this color space). To connect color spaces, you\n must first float[]) adapt them\n to the same white point.</p>\n\n\n<p> <p>It is recommended to use android.graphics.ColorSpace)\n to convert between color spaces.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A new array of 9 floats\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getTransform\" rel=\"android.graphics.ColorSpace.Rgb-method-getTransform\" class=\"docClass\">getTransform</a>(float[])</p>\n</div></li></ul></div></div></div><div id='method-getMaxValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getMaxValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getMaxValue' class='name expandable'>getMaxValue</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-getMaxValue\" rel=\"android.graphics.ColorSpace-method-getMaxValue\" class=\"docClass\">android.graphics.ColorSpace.getMaxValue</a></p></div></div></div><div id='method-getMinValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getMinValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getMinValue' class='name expandable'>getMinValue</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-getMinValue\" rel=\"android.graphics.ColorSpace-method-getMinValue\" class=\"docClass\">android.graphics.ColorSpace.getMinValue</a></p></div></div></div><div id='method-getModel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getModel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getModel' class='name expandable'>getModel</a>( <span class='pre'></span> ) : Object {android.graphics.ColorSpace.Model}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the color model of this color space. ...</div><div class='long'><p>Return the color model of this color space.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace.Model}</span><div class='sub-desc'><p>A non-null Model\n@see Model\n@see <a href=\"#!/api/android.graphics.ColorSpace-method-getComponentCount\" rel=\"android.graphics.ColorSpace-method-getComponentCount\" class=\"docClass\">getComponentCount</a>()</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of this color space. ...</div><div class='long'><p>Returns the name of this color space. The name is never null\n and contains always at least 1 character.</p>\n\n\n<p> <p>Color space names are recommended to be unique but are not\n guaranteed to be. There is no defined format but the name usually\n falls in one of the following categories:</p>\n <ul>\n     <li>Generic names used to identify color spaces in non-RGB\n     color models. For instance: <a href=\"#!/api/android.graphics.ColorSpace.Named-property-CIE_LAB\" rel=\"android.graphics.ColorSpace.Named-property-CIE_LAB\" class=\"docClass\">Generic L&lt;em&gt;a&lt;/em&gt;b*</a>.</li>\n     <li>Names tied to a particular specification. For instance:\n     <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB IEC61966-2.1</a> or\n     <a href=\"#!/api/android.graphics.ColorSpace.Named-property-ACES\" rel=\"android.graphics.ColorSpace.Named-property-ACES\" class=\"docClass\">SMPTE ST 2065-1:2012 ACES</a>.</li>\n     <li>Ad-hoc names, often generated procedurally or by the user\n     during a calibration workflow. These names often contain the\n     make and model of the display.</li>\n </ul></p>\n\n<p> <p>Because the format of color space names is not defined, it is\n not recommended to programmatically identify a color space by its\n name alone. Names can be used as a first approximation.</p></p>\n\n<p> <p>It is however perfectly acceptable to display color space names to\n users in a UI, or in debuggers and logs. When displaying a color space\n name to the user, it is recommended to add extra information to avoid\n ambiguities: color model, a representation of the color space's gamut,\n white point, etc.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A non-null String of length >= 1</p>\n</div></li></ul></div></div></div><div id='method-getOetf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getOetf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getOetf' class='name expandable'>getOetf</a>( <span class='pre'></span> ) : Object {java.util.function.DoubleUnaryOperator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the opto-electronic transfer function (OETF) of this color space. ...</div><div class='long'><p>Returns the opto-electronic transfer function (OETF) of this color space.\n The inverse function is the electro-optical transfer function (EOTF) returned\n by <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getEotf\" rel=\"android.graphics.ColorSpace.Rgb-method-getEotf\" class=\"docClass\">getEotf</a>(). These functions are defined to satisfy the following\n equality for \\(x \\in [0..1]\\):</p>\n\n\n<p> $$OETF(EOTF(x)) = EOTF(OETF(x)) = x$$</p>\n\n<p> <p>For RGB colors, this function can be used to convert from linear space\n to \"gamma space\" (gamma encoded). The terms gamma space and gamma encoded\n are frequently used because many OETFs can be closely approximated using\n a simple power function of the form (x^{\\frac{1}{\\gamma}}) (the\n approximation of the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a> OETF uses (\\gamma=2.2)\n for instance).</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.DoubleUnaryOperator}</span><div class='sub-desc'><p>A transfer function that converts from linear space to \"gamma space\"\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getEotf\" rel=\"android.graphics.ColorSpace.Rgb-method-getEotf\" class=\"docClass\">getEotf</a>()\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getTransferParameters\" rel=\"android.graphics.ColorSpace.Rgb-method-getTransferParameters\" class=\"docClass\">getTransferParameters</a>()</p>\n</div></li></ul></div></div></div><div id='method-getPrimaries' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getPrimaries' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getPrimaries' class='name expandable'>getPrimaries</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the primaries of this color space as a new array of 6 floats. ...</div><div class='long'><p>Returns the primaries of this color space as a new array of 6 floats.\n The Y component is assumed to be 1 and is therefore not copied into\n the destination. The x and y components of the first primary are\n written in the array at positions 0 and 1 respectively.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A new non-null array of 2 floats\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getWhitePoint\" rel=\"android.graphics.ColorSpace.Rgb-method-getWhitePoint\" class=\"docClass\">getWhitePoint</a>()</p>\n</div></li></ul></div></div></div><div id='method-getTransferParameters' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getTransferParameters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getTransferParameters' class='name expandable'>getTransferParameters</a>( <span class='pre'></span> ) : Object {android.graphics.ColorSpace.Rgb.TransferParameters}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the parameters used by the electro-optical\n and opto-electronic transfer functions. ...</div><div class='long'><p>Returns the parameters used by the electro-optical\n and opto-electronic transfer functions. If the transfer\n functions do not match the ICC parametric curves defined in ICC.1:2004-10\n (section 10.15), this method returns null.</p>\n\n\n<p> <p>See android.graphics.Rgb.TransferParameters for a full description of the transfer\n functions.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace.Rgb.TransferParameters}</span><div class='sub-desc'><p>An instance of TransferParameters or null if this color\n         space's transfer functions do not match the equation defined in\n         TransferParameters</p>\n</div></li></ul></div></div></div><div id='method-getTransform' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getTransform' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getTransform' class='name expandable'>getTransform</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the transform of this color space as a new array. ...</div><div class='long'><p>Returns the transform of this color space as a new array. The\n transform is used to convert from RGB to XYZ (with the same white\n point as this color space). To connect color spaces, you must first\n float[]) adapt them to the\n same white point.</p>\n\n\n<p> <p>It is recommended to use android.graphics.ColorSpace)\n to convert between color spaces.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A new array of 9 floats\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getInverseTransform\" rel=\"android.graphics.ColorSpace.Rgb-method-getInverseTransform\" class=\"docClass\">getInverseTransform</a>(float[])</p>\n</div></li></ul></div></div></div><div id='method-getWhitePoint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-getWhitePoint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-getWhitePoint' class='name expandable'>getWhitePoint</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the non-adapted CIE xyY white point of this color space as\n a new array of 2 floats. ...</div><div class='long'><p>Returns the non-adapted CIE xyY white point of this color space as\n a new array of 2 floats. The Y component is assumed to be 1 and is\n therefore not copied into the destination. The x and y components\n are written in the array at positions 0 and 1 respectively.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A new non-null array of 2 floats\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-getWhitePoint\" rel=\"android.graphics.ColorSpace.Rgb-method-getWhitePoint\" class=\"docClass\">getWhitePoint</a>()</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-hashCode\" rel=\"android.graphics.ColorSpace-method-hashCode\" class=\"docClass\">android.graphics.ColorSpace.hashCode</a></p></div></div></div><div id='method-isSrgb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-isSrgb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-isSrgb' class='name expandable'>isSrgb</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-isSrgb\" rel=\"android.graphics.ColorSpace-method-isSrgb\" class=\"docClass\">android.graphics.ColorSpace.isSrgb</a></p></div></div></div><div id='method-isWideGamut' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-isWideGamut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-isWideGamut' class='name expandable'>isWideGamut</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-isWideGamut\" rel=\"android.graphics.ColorSpace-method-isWideGamut\" class=\"docClass\">android.graphics.ColorSpace.isWideGamut</a></p></div></div></div><div id='method-match' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-match' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-match' class='name expandable'>match</a>( <span class='pre'>toXYZD50, function</span> ) : Object {android.graphics.ColorSpace}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a android.graphics.ColorSpace.Named instance of android.graphics.ColorSpace that matches\n the specified RGB t...</div><div class='long'><p>Returns a <a href=\"#!/api/android.graphics.ColorSpace.Named\" rel=\"android.graphics.ColorSpace.Named\" class=\"docClass\">android.graphics.ColorSpace.Named</a> instance of <a href=\"#!/api/android.graphics.ColorSpace\" rel=\"android.graphics.ColorSpace\" class=\"docClass\">android.graphics.ColorSpace</a> that matches\n the specified RGB to CIE XYZ transform and transfer functions. If no\n instance can be found, this method returns null.</p>\n\n\n<p> <p>The color transform matrix is assumed to target the CIE XYZ space\n a <a href=\"#!/api/android.graphics.ColorSpace-property-ILLUMINANT_D50\" rel=\"android.graphics.ColorSpace-property-ILLUMINANT_D50\" class=\"docClass\">D50</a> standard illuminant.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toXYZD50</span> : Object {float[]}<div class='sub-desc'><p>3x3 column-major transform matrix from RGB to the profile\n                 connection space CIE XYZ as an array of 9 floats, cannot be null</p>\n</div></li><li><span class='pre'>function</span> : Object {ColorSpace.Rgb.TransferParameters}<div class='sub-desc'><p>Parameters for the transfer functions</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.ColorSpace}</span><div class='sub-desc'><p>A non-null ColorSpace if a match is found, null otherwise</p>\n</div></li></ul></div></div></div><div id='method-toLinear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-toLinear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-toLinear' class='name expandable'>toLinear</a>( <span class='pre'>v</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Decodes an RGB value to linear space. ...</div><div class='long'><p>Decodes an RGB value to linear space. This is achieved by\n applying this color space's electro-optical transfer function\n to the first 3 values of the supplied array. The result is\n stored back in the input array.</p>\n\n\n<p> <p>Refer to the documentation of <a href=\"#!/api/android.graphics.ColorSpace.Rgb\" rel=\"android.graphics.ColorSpace.Rgb\" class=\"docClass\">android.graphics.ColorSpace.Rgb</a> for\n more information about transfer functions and their use for\n encoding and decoding RGB values.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Object {float[]}<div class='sub-desc'><p>A non-null array of non-linear RGB values, its length\n          must be at least 3</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The specified array\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-toLinear\" rel=\"android.graphics.ColorSpace.Rgb-method-toLinear\" class=\"docClass\">toLinear</a>(float, float, float)\n@see <a href=\"#!/api/android.graphics.ColorSpace.Rgb-method-fromLinear\" rel=\"android.graphics.ColorSpace.Rgb-method-fromLinear\" class=\"docClass\">fromLinear</a>(float[])</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.ColorSpace' rel='android.graphics.ColorSpace' class='defined-in docClass'>android.graphics.ColorSpace</a><br/><a href='source/ColorSpace.html#android-graphics-ColorSpace-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representation of the object. ...</div><div class='long'><p>Returns a string representation of the object. This method returns\n a string equal to the value of:</p>\n\n\n<p> <pre class=\"prettyprint\">\n getName() + \"(id=\" + getId() + \", model=\" + getModel() + \")\"\n </pre></p>\n\n<p> <p>For instance, the string representation of the <a href=\"#!/api/android.graphics.ColorSpace.Named-property-SRGB\" rel=\"android.graphics.ColorSpace.Named-property-SRGB\" class=\"docClass\">sRGB</a>\n color space is equal to the following value:</p></p>\n\n<pre> sRGB IEC61966-2.1 (id=0, model=RGB)\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A string representation of the object</p>\n</div></li></ul></div></div></div><div id='method-toXyz' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.ColorSpace.Rgb'>android.graphics.ColorSpace.Rgb</span><br/><a href='source/Rgb.html#android-graphics-ColorSpace-Rgb-method-toXyz' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.ColorSpace.Rgb-method-toXyz' class='name expandable'>toXyz</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.ColorSpace-method-toXyz\" rel=\"android.graphics.ColorSpace-method-toXyz\" class=\"docClass\">android.graphics.ColorSpace.toXyz</a></p></div></div></div></div></div></div></div>","meta":{}});