Ext.data.JsonP.android_content_pm_LauncherApps({"tagname":"class","name":"android.content.pm.LauncherApps","autodetected":{},"files":[{"filename":"LauncherApps.js","href":"LauncherApps.html#android-content-pm-LauncherApps"}],"extends":"java.lang.Object","members":[{"name":"ACTION_CONFIRM_PIN_APPWIDGET","tagname":"property","owner":"android.content.pm.LauncherApps","id":"property-ACTION_CONFIRM_PIN_APPWIDGET","meta":{}},{"name":"ACTION_CONFIRM_PIN_SHORTCUT","tagname":"property","owner":"android.content.pm.LauncherApps","id":"property-ACTION_CONFIRM_PIN_SHORTCUT","meta":{}},{"name":"EXTRA_PIN_ITEM_REQUEST","tagname":"property","owner":"android.content.pm.LauncherApps","id":"property-EXTRA_PIN_ITEM_REQUEST","meta":{}},{"name":"getActivityList","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getActivityList","meta":{}},{"name":"getAllPackageInstallerSessions","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getAllPackageInstallerSessions","meta":{}},{"name":"getApplicationInfo","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getApplicationInfo","meta":{}},{"name":"getPinItemRequest","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getPinItemRequest","meta":{}},{"name":"getProfiles","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getProfiles","meta":{}},{"name":"getShortcutBadgedIconDrawable","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getShortcutBadgedIconDrawable","meta":{}},{"name":"getShortcutConfigActivityIntent","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getShortcutConfigActivityIntent","meta":{}},{"name":"getShortcutConfigActivityList","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getShortcutConfigActivityList","meta":{}},{"name":"getShortcutIconDrawable","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getShortcutIconDrawable","meta":{}},{"name":"getShortcuts","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getShortcuts","meta":{}},{"name":"getSuspendedPackageLauncherExtras","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-getSuspendedPackageLauncherExtras","meta":{}},{"name":"hasShortcutHostPermission","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-hasShortcutHostPermission","meta":{}},{"name":"isActivityEnabled","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-isActivityEnabled","meta":{}},{"name":"isPackageEnabled","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-isPackageEnabled","meta":{}},{"name":"pinShortcuts","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-pinShortcuts","meta":{}},{"name":"registerCallback","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-registerCallback","meta":{}},{"name":"registerPackageInstallerSessionCallback","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-registerPackageInstallerSessionCallback","meta":{}},{"name":"resolveActivity","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-resolveActivity","meta":{}},{"name":"shouldHideFromSuggestions","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-shouldHideFromSuggestions","meta":{}},{"name":"startAppDetailsActivity","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-startAppDetailsActivity","meta":{}},{"name":"startMainActivity","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-startMainActivity","meta":{}},{"name":"startPackageInstallerSessionDetailsActivity","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-startPackageInstallerSessionDetailsActivity","meta":{}},{"name":"startShortcut","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-startShortcut","meta":{}},{"name":"unregisterCallback","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-unregisterCallback","meta":{}},{"name":"unregisterPackageInstallerSessionCallback","tagname":"method","owner":"android.content.pm.LauncherApps","id":"method-unregisterPackageInstallerSessionCallback","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.pm.LauncherApps","short_doc":"Class for retrieving a list of launchable activities for the current user and any associated\n managed profiles that a...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.pm.LauncherApps</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/LauncherApps.html#android-content-pm-LauncherApps' target='_blank'>LauncherApps.js</a></div></pre><div class='doc-contents'><p>Class for retrieving a list of launchable activities for the current user and any associated\n managed profiles that are visible to the current user, which can be retrieved with\n <a href=\"#!/api/android.content.pm.LauncherApps-method-getProfiles\" rel=\"android.content.pm.LauncherApps-method-getProfiles\" class=\"docClass\">getProfiles</a>. This is mainly for use by launchers.</p>\n\n<p> Apps can be queried for each user profile.\n Since the PackageManager will not deliver package broadcasts for other profiles, you can register\n for package changes here.\n <p>\n To watch for managed profiles being added or removed, register for the following broadcasts:\n Intent.ACTION_MANAGED_PROFILE_ADDED and Intent.ACTION_MANAGED_PROFILE_REMOVED.\n <p>\n Note as of Android O, apps on a managed profile are no longer allowed to access apps on the\n main profile.  Apps can only access profiles returned by <a href=\"#!/api/android.content.pm.LauncherApps-method-getProfiles\" rel=\"android.content.pm.LauncherApps-method-getProfiles\" class=\"docClass\">getProfiles</a>().</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_CONFIRM_PIN_APPWIDGET' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-property-ACTION_CONFIRM_PIN_APPWIDGET' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_APPWIDGET' class='name expandable'>ACTION_CONFIRM_PIN_APPWIDGET</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: For the default launcher to show the confirmation dialog to create\na pinned app widget. ...</div><div class='long'><p>Activity Action: For the default launcher to show the confirmation dialog to create\na pinned app widget.</p>\n\n<p><p>See the android.appwidget.AppWidgetManager.requestPinAppWidget javadoc for\ndetails.</p>\n\n<p><p>\nUse <a href=\"#!/api/android.content.pm.LauncherApps-method-getPinItemRequest\" rel=\"android.content.pm.LauncherApps-method-getPinItemRequest\" class=\"docClass\">getPinItemRequest</a>(Intent) to get a <a href=\"#!/api/android.content.pm.LauncherApps.PinItemRequest\" rel=\"android.content.pm.LauncherApps.PinItemRequest\" class=\"docClass\">android.content.pm.LauncherApps.PinItemRequest</a> object,\nand call android.content.pm.LauncherApps.PinItemRequest.accept(Bundle)\nif the user accepts.  If the user doesn't accept, no further action is required.</p>\n\n<p>@see <a href=\"#!/api/android.content.pm.LauncherApps-property-EXTRA_PIN_ITEM_REQUEST\" rel=\"android.content.pm.LauncherApps-property-EXTRA_PIN_ITEM_REQUEST\" class=\"docClass\">EXTRA_PIN_ITEM_REQUEST</a></p>\n<p>Defaults to: <code>&quot;android.content.pm.action.CONFIRM_PIN_APPWIDGET&quot;</code></p></div></div></div><div id='property-ACTION_CONFIRM_PIN_SHORTCUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-property-ACTION_CONFIRM_PIN_SHORTCUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_SHORTCUT' class='name expandable'>ACTION_CONFIRM_PIN_SHORTCUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: For the default launcher to show the confirmation dialog to create\na pinned shortcut. ...</div><div class='long'><p>Activity Action: For the default launcher to show the confirmation dialog to create\na pinned shortcut.</p>\n\n<p><p>See the <a href=\"#!/api/android.content.pm.ShortcutManager\" rel=\"android.content.pm.ShortcutManager\" class=\"docClass\">android.content.pm.ShortcutManager</a> javadoc for details.</p>\n\n<p><p>\nUse <a href=\"#!/api/android.content.pm.LauncherApps-method-getPinItemRequest\" rel=\"android.content.pm.LauncherApps-method-getPinItemRequest\" class=\"docClass\">getPinItemRequest</a>(Intent) to get a <a href=\"#!/api/android.content.pm.LauncherApps.PinItemRequest\" rel=\"android.content.pm.LauncherApps.PinItemRequest\" class=\"docClass\">android.content.pm.LauncherApps.PinItemRequest</a> object,\nand call android.content.pm.LauncherApps.PinItemRequest.accept(Bundle)\nif the user accepts.  If the user doesn't accept, no further action is required.</p>\n\n<p>@see <a href=\"#!/api/android.content.pm.LauncherApps-property-EXTRA_PIN_ITEM_REQUEST\" rel=\"android.content.pm.LauncherApps-property-EXTRA_PIN_ITEM_REQUEST\" class=\"docClass\">EXTRA_PIN_ITEM_REQUEST</a></p>\n<p>Defaults to: <code>&quot;android.content.pm.action.CONFIRM_PIN_SHORTCUT&quot;</code></p></div></div></div><div id='property-EXTRA_PIN_ITEM_REQUEST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-property-EXTRA_PIN_ITEM_REQUEST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-property-EXTRA_PIN_ITEM_REQUEST' class='name expandable'>EXTRA_PIN_ITEM_REQUEST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An extra for ACTION_CONFIRM_PIN_SHORTCUT &amp; ACTION_CONFIRM_PIN_APPWIDGET\ncontaining a android.content.pm.LauncherA...</div><div class='long'><p>An extra for <a href=\"#!/api/android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_SHORTCUT\" rel=\"android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_SHORTCUT\" class=\"docClass\">ACTION_CONFIRM_PIN_SHORTCUT</a> &amp; <a href=\"#!/api/android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_APPWIDGET\" rel=\"android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_APPWIDGET\" class=\"docClass\">ACTION_CONFIRM_PIN_APPWIDGET</a>\ncontaining a <a href=\"#!/api/android.content.pm.LauncherApps.PinItemRequest\" rel=\"android.content.pm.LauncherApps.PinItemRequest\" class=\"docClass\">android.content.pm.LauncherApps.PinItemRequest</a> of appropriate type asked to pin.</p>\n\n<p><p>A helper function <a href=\"#!/api/android.content.pm.LauncherApps-method-getPinItemRequest\" rel=\"android.content.pm.LauncherApps-method-getPinItemRequest\" class=\"docClass\">getPinItemRequest</a>(Intent) can be used\ninstead of using this constant directly.</p>\n\n<p>@see <a href=\"#!/api/android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_SHORTCUT\" rel=\"android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_SHORTCUT\" class=\"docClass\">ACTION_CONFIRM_PIN_SHORTCUT</a>\n@see <a href=\"#!/api/android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_APPWIDGET\" rel=\"android.content.pm.LauncherApps-property-ACTION_CONFIRM_PIN_APPWIDGET\" class=\"docClass\">ACTION_CONFIRM_PIN_APPWIDGET</a></p>\n<p>Defaults to: <code>&quot;android.content.pm.extra.PIN_ITEM_REQUEST&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getActivityList' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getActivityList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getActivityList' class='name expandable'>getActivityList</a>( <span class='pre'>packageName, user</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a list of launchable activities that match Intent.ACTION_MAIN and\n Intent.CATEGORY_LAUNCHER, for a specifie...</div><div class='long'><p>Retrieves a list of launchable activities that match Intent.ACTION_MAIN and\n Intent.CATEGORY_LAUNCHER, for a specified user. Result may include\n synthesized activities like app details Activity injected by system.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The specific package to query. If null, it checks all installed packages\n            in the profile.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of launchable activities. Can be an empty list but will not be null.</p>\n</div></li></ul></div></div></div><div id='method-getAllPackageInstallerSessions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getAllPackageInstallerSessions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getAllPackageInstallerSessions' class='name expandable'>getAllPackageInstallerSessions</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return list of all known install sessions in this user and managed profiles, regardless\n of the installer. ...</div><div class='long'><p>Return list of all known install sessions in this user and managed profiles, regardless\n of the installer.\n@see PackageInstaller#getAllSessions()</p>\n</div></div></div><div id='method-getApplicationInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getApplicationInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getApplicationInfo' class='name expandable'>getApplicationInfo</a>( <span class='pre'>packageName, flags, user</span> ) : Object {android.content.pm.ApplicationInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns android.content.pm.ApplicationInfo about an application installed for a specific user profile. ...</div><div class='long'><p>Returns <a href=\"#!/api/android.content.pm.ApplicationInfo\" rel=\"android.content.pm.ApplicationInfo\" class=\"docClass\">android.content.pm.ApplicationInfo</a> about an application installed for a specific user profile.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The package name of the application</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Additional option flags PackageManager.getApplicationInfo</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.pm.ApplicationInfo}</span><div class='sub-desc'><p>ApplicationInfo containing information about the package. Returns\n         {@code null} if the package isn't installed for the given profile, or the profile\n         isn't enabled.</p>\n</div></li></ul></div></div></div><div id='method-getPinItemRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getPinItemRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getPinItemRequest' class='name expandable'>getPinItemRequest</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A helper method to extract a android.content.pm.LauncherApps.PinItemRequest set to\n the EXTRA_PIN_ITEM_REQUEST extra. ...</div><div class='long'><p>A helper method to extract a <a href=\"#!/api/android.content.pm.LauncherApps.PinItemRequest\" rel=\"android.content.pm.LauncherApps.PinItemRequest\" class=\"docClass\">android.content.pm.LauncherApps.PinItemRequest</a> set to\n the <a href=\"#!/api/android.content.pm.LauncherApps-property-EXTRA_PIN_ITEM_REQUEST\" rel=\"android.content.pm.LauncherApps-property-EXTRA_PIN_ITEM_REQUEST\" class=\"docClass\">EXTRA_PIN_ITEM_REQUEST</a> extra.</p>\n</div></div></div><div id='method-getProfiles' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getProfiles' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getProfiles' class='name expandable'>getProfiles</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a list of profiles that the caller can access via the android.content.pm.LauncherApps APIs. ...</div><div class='long'><p>Return a list of profiles that the caller can access via the <a href=\"#!/api/android.content.pm.LauncherApps\" rel=\"android.content.pm.LauncherApps\" class=\"docClass\">android.content.pm.LauncherApps</a> APIs.</p>\n\n<p> <p>If the caller is running on a managed profile, it'll return only the current profile.\n Otherwise it'll return the same list as UserManager.getUserProfiles() would.</p>\n</div></div></div><div id='method-getShortcutBadgedIconDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getShortcutBadgedIconDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getShortcutBadgedIconDrawable' class='name expandable'>getShortcutBadgedIconDrawable</a>( <span class='pre'>density</span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the shortcut icon with badging appropriate for the profile. ...</div><div class='long'><p>Returns the shortcut icon with badging appropriate for the profile.</p>\n\n<p> <p>The calling launcher application must be allowed to access the shortcut information,\n as defined in <a href=\"#!/api/android.content.pm.LauncherApps-method-hasShortcutHostPermission\" rel=\"android.content.pm.LauncherApps-method-hasShortcutHostPermission\" class=\"docClass\">hasShortcutHostPermission</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>density</span> : Object {ShortcutInfo}<div class='sub-desc'><p>Optional density for the icon, or 0 to use the default density. Use</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>A badged icon for the shortcut.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked, or when the {@code user} user\n is locked or not running.\n@see ShortcutManager\n@see <a href=\"#!/api/android.content.pm.LauncherApps-method-getShortcutIconDrawable\" rel=\"android.content.pm.LauncherApps-method-getShortcutIconDrawable\" class=\"docClass\">getShortcutIconDrawable</a>(ShortcutInfo, int)\n@see DisplayMetrics</p>\n</div></li></ul></div></div></div><div id='method-getShortcutConfigActivityIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getShortcutConfigActivityIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getShortcutConfigActivityIntent' class='name expandable'>getShortcutConfigActivityIntent</a>( <span class='pre'>info</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an intent sender which can be used to start the configure activity for creating\n custom shortcuts. ...</div><div class='long'><p>Returns an intent sender which can be used to start the configure activity for creating\n custom shortcuts. Use this method if the provider is in another profile as you are not\n allowed to start an activity in another profile.</p>\n\n<p> <p>The caller should receive <a href=\"#!/api/android.content.pm.LauncherApps.PinItemRequest\" rel=\"android.content.pm.LauncherApps.PinItemRequest\" class=\"docClass\">android.content.pm.LauncherApps.PinItemRequest</a> in onActivityResult on\n android.app.Activity.RESULT_OK.</p>\n\n<p> <p>Callers must be allowed to access the shortcut information, as defined in <a href=\"#!/api/android.content.pm.LauncherApps-method-hasShortcutHostPermission\" rel=\"android.content.pm.LauncherApps-method-hasShortcutHostPermission\" class=\"docClass\">hasShortcutHostPermission</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>info</span> : Object {LauncherActivityInfo}<div class='sub-desc'><p>a configuration activity returned by <a href=\"#!/api/android.content.pm.LauncherApps-method-getShortcutConfigActivityList\" rel=\"android.content.pm.LauncherApps-method-getShortcutConfigActivityList\" class=\"docClass\">getShortcutConfigActivityList</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked or not running.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if hasShortcutHostPermission() is false.\n@see <a href=\"#!/api/android.content.pm.LauncherApps-method-getPinItemRequest\" rel=\"android.content.pm.LauncherApps-method-getPinItemRequest\" class=\"docClass\">getPinItemRequest</a>(Intent)\n@see Intent#ACTION_CREATE_SHORTCUT\n@see android.app.Activity#startIntentSenderForResult</p>\n</div></li></ul></div></div></div><div id='method-getShortcutConfigActivityList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getShortcutConfigActivityList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getShortcutConfigActivityList' class='name expandable'>getShortcutConfigActivityList</a>( <span class='pre'>packageName, user</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a list of config activities for creating android.content.pm.ShortcutInfo. ...</div><div class='long'><p>Retrieves a list of config activities for creating <a href=\"#!/api/android.content.pm.ShortcutInfo\" rel=\"android.content.pm.ShortcutInfo\" class=\"docClass\">android.content.pm.ShortcutInfo</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The specific package to query. If null, it checks all installed packages\n            in the profile.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of config activities. Can be an empty list but will not be null.\n@see Intent#ACTION_CREATE_SHORTCUT\n@see <a href=\"#!/api/android.content.pm.LauncherApps-method-getShortcutConfigActivityIntent\" rel=\"android.content.pm.LauncherApps-method-getShortcutConfigActivityIntent\" class=\"docClass\">getShortcutConfigActivityIntent</a>(LauncherActivityInfo)</p>\n</div></li></ul></div></div></div><div id='method-getShortcutIconDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getShortcutIconDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getShortcutIconDrawable' class='name expandable'>getShortcutIconDrawable</a>( <span class='pre'>density</span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the icon for this shortcut, without any badging for the profile. ...</div><div class='long'><p>Returns the icon for this shortcut, without any badging for the profile.</p>\n\n<p> <p>The calling launcher application must be allowed to access the shortcut information,\n as defined in <a href=\"#!/api/android.content.pm.LauncherApps-method-hasShortcutHostPermission\" rel=\"android.content.pm.LauncherApps-method-hasShortcutHostPermission\" class=\"docClass\">hasShortcutHostPermission</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>density</span> : Object {ShortcutInfo}<div class='sub-desc'><p>The preferred density of the icon, zero for default density. Use\n density DPI values from DisplayMetrics.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>The drawable associated with the shortcut.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked, or when the {@code user} user\n is locked or not running.\n@see ShortcutManager\n@see <a href=\"#!/api/android.content.pm.LauncherApps-method-getShortcutBadgedIconDrawable\" rel=\"android.content.pm.LauncherApps-method-getShortcutBadgedIconDrawable\" class=\"docClass\">getShortcutBadgedIconDrawable</a>(ShortcutInfo, int)\n@see DisplayMetrics</p>\n</div></li></ul></div></div></div><div id='method-getShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getShortcuts' class='name expandable'>getShortcuts</a>( <span class='pre'>query, user</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns android.content.pm.ShortcutInfos that match {@code query}. ...</div><div class='long'><p>Returns <a href=\"#!/api/android.content.pm.ShortcutInfo\" rel=\"android.content.pm.ShortcutInfo\" class=\"docClass\">android.content.pm.ShortcutInfo</a>s that match {@code query}.</p>\n\n<p> <p>Callers must be allowed to access the shortcut information, as defined in <a href=\"#!/api/android.content.pm.LauncherApps-method-hasShortcutHostPermission\" rel=\"android.content.pm.LauncherApps-method-hasShortcutHostPermission\" class=\"docClass\">hasShortcutHostPermission</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : Object {LauncherApps.ShortcutQuery}<div class='sub-desc'><p>result includes shortcuts matching this query.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the IDs of ShortcutInfos that match the query.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked, or when the {@code user} user\n is locked or not running.\n@see ShortcutManager</p>\n</div></li></ul></div></div></div><div id='method-getSuspendedPackageLauncherExtras' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-getSuspendedPackageLauncherExtras' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-getSuspendedPackageLauncherExtras' class='name expandable'>getSuspendedPackageLauncherExtras</a>( <span class='pre'>packageName, user</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the launcher extras supplied to the system when the given package was suspended via\n {@code PackageManager#setPa...</div><div class='long'><p>Gets the launcher extras supplied to the system when the given package was suspended via\n {@code PackageManager#setPackagesSuspended(String[], boolean, PersistableBundle,\n PersistableBundle, String)}.</p>\n\n<p> <p>The contents of this Bundle are supposed to be a contract between the suspending\n app and the launcher.</p>\n\n<p> <p>Note: This just returns whatever extras were provided to the system, <em>which might\n even be {@code null}.</em></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The package for which to fetch the launcher extras.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>A Bundle of launcher extras. Or {@code null} if the package is not currently\n         suspended.\n@see Callback#onPackagesSuspended(String[], UserHandle, Bundle)\n@see PackageManager#isPackageSuspended()</p>\n</div></li></ul></div></div></div><div id='method-hasShortcutHostPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-hasShortcutHostPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-hasShortcutHostPermission' class='name expandable'>hasShortcutHostPermission</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the caller can access the shortcut information. ...</div><div class='long'><p>Returns whether the caller can access the shortcut information.  Access is currently\n available to:</p>\n\n<p> <ul>\n     <li>The current launcher (or default launcher if there is no set current launcher).</li>\n     <li>The currently active voice interaction service.</li>\n </ul></p>\n\n<p> <p>Note when this method returns {@code false}, it may be a temporary situation because\n the user is trying a new launcher application.  The user may decide to change the default\n launcher back to the calling application again, so even if a launcher application loses\n this permission, it does <b>not</b> have to purge pinned shortcut information.\n If the calling launcher application contains pinned shortcuts, they will still work,\n even though the caller no longer has the shortcut host permission.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.\n@see ShortcutManager</p>\n</div></li></ul></div></div></div><div id='method-isActivityEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-isActivityEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-isActivityEnabled' class='name expandable'>isActivityEnabled</a>( <span class='pre'>component, user</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the activity exists and it enabled for a profile. ...</div><div class='long'><p>Checks if the activity exists and it enabled for a profile.</p>\n\n<p> <p>The activity may still not be exported, in which case <a href=\"#!/api/android.content.pm.LauncherApps-method-startMainActivity\" rel=\"android.content.pm.LauncherApps-method-startMainActivity\" class=\"docClass\">startMainActivity</a> will\n throw a SecurityException unless the caller has the same UID as the target app's.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Object {ComponentName}<div class='sub-desc'><p>The activity to check.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the activity exists and is enabled.</p>\n</div></li></ul></div></div></div><div id='method-isPackageEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-isPackageEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-isPackageEnabled' class='name expandable'>isPackageEnabled</a>( <span class='pre'>packageName, user</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the package is installed and enabled for a profile. ...</div><div class='long'><p>Checks if the package is installed and enabled for a profile.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The package to check.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the package exists and is enabled.</p>\n</div></li></ul></div></div></div><div id='method-pinShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-pinShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-pinShortcuts' class='name expandable'>pinShortcuts</a>( <span class='pre'>packageName, shortcutIds, user</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Pin shortcuts on a package. ...</div><div class='long'><p>Pin shortcuts on a package.</p>\n\n<p> <p>This API is <b>NOT</b> cumulative; this will replace all pinned shortcuts for the package.\n However, different launchers may have different set of pinned shortcuts.</p>\n\n<p> <p>The calling launcher application must be allowed to access the shortcut information,\n as defined in <a href=\"#!/api/android.content.pm.LauncherApps-method-hasShortcutHostPermission\" rel=\"android.content.pm.LauncherApps-method-hasShortcutHostPermission\" class=\"docClass\">hasShortcutHostPermission</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The target package name.</p>\n</div></li><li><span class='pre'>shortcutIds</span> : Object {java.util.List}<div class='sub-desc'><p>The IDs of the shortcut to be pinned.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked, or when the {@code user} user\n is locked or not running.\n@see ShortcutManager</p>\n</div></li></ul></div></div></div><div id='method-registerCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-registerCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-registerCallback' class='name expandable'>registerCallback</a>( <span class='pre'>callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a callback for changes to packages in this user and managed profiles. ...</div><div class='long'><p>Registers a callback for changes to packages in this user and managed profiles.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {LauncherApps.Callback}<div class='sub-desc'><p>The callback to register.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>that should be used to post callbacks on, may be null.</p>\n</div></li></ul></div></div></div><div id='method-registerPackageInstallerSessionCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-registerPackageInstallerSessionCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-registerPackageInstallerSessionCallback' class='name expandable'>registerPackageInstallerSessionCallback</a>( <span class='pre'>callback, executor</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to watch for session lifecycle events in this user and managed profiles. ...</div><div class='long'><p>Register a callback to watch for session lifecycle events in this user and managed profiles.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {Executor}<div class='sub-desc'><p>The callback to register.</p>\n</div></li><li><span class='pre'>executor</span> : Object {PackageInstaller.SessionCallback}<div class='sub-desc'><p>Executor to handle the callbacks, cannot be null.\n@see PackageInstaller#registerSessionCallback(SessionCallback)</p>\n</div></li></ul></div></div></div><div id='method-resolveActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-resolveActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-resolveActivity' class='name expandable'>resolveActivity</a>( <span class='pre'>intent, user</span> ) : Object {android.content.pm.LauncherActivityInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the activity info for a given intent and user handle, if it resolves. ...</div><div class='long'><p>Returns the activity info for a given intent and user handle, if it resolves. Otherwise it\n returns null.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent to find a match for.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The profile to look in for a match.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.pm.LauncherActivityInfo}</span><div class='sub-desc'><p>An activity info object if there is a match.</p>\n</div></li></ul></div></div></div><div id='method-shouldHideFromSuggestions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-shouldHideFromSuggestions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-shouldHideFromSuggestions' class='name expandable'>shouldHideFromSuggestions</a>( <span class='pre'>packageName, user</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether a package should be hidden from suggestions to the user. ...</div><div class='long'><p>Returns whether a package should be hidden from suggestions to the user. Currently, this\n could be done because the package was marked as distracting to the user via\n {@code PackageManager.setDistractingPackageRestrictions(String[], int)}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The package for which to check.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>the UserHandle of the profile.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-startAppDetailsActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-startAppDetailsActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-startAppDetailsActivity' class='name expandable'>startAppDetailsActivity</a>( <span class='pre'>component, user, sourceBounds, opts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts the settings activity to show the application details for a\n package in the specified profile. ...</div><div class='long'><p>Starts the settings activity to show the application details for a\n package in the specified profile.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Object {ComponentName}<div class='sub-desc'><p>The ComponentName of the package to launch settings for.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile</p>\n</div></li><li><span class='pre'>sourceBounds</span> : Object {Rect}<div class='sub-desc'><p>The Rect containing the source bounds of the clicked icon</p>\n</div></li><li><span class='pre'>opts</span> : Object {Bundle}<div class='sub-desc'><p>Options to pass to startActivity</p>\n</div></li></ul></div></div></div><div id='method-startMainActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-startMainActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-startMainActivity' class='name expandable'>startMainActivity</a>( <span class='pre'>component, user, sourceBounds, opts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts a Main activity in the specified profile. ...</div><div class='long'><p>Starts a Main activity in the specified profile.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Object {ComponentName}<div class='sub-desc'><p>The ComponentName of the activity to launch</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile</p>\n</div></li><li><span class='pre'>sourceBounds</span> : Object {Rect}<div class='sub-desc'><p>The Rect containing the source bounds of the clicked icon</p>\n</div></li><li><span class='pre'>opts</span> : Object {Bundle}<div class='sub-desc'><p>Options to pass to startActivity</p>\n</div></li></ul></div></div></div><div id='method-startPackageInstallerSessionDetailsActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-startPackageInstallerSessionDetailsActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-startPackageInstallerSessionDetailsActivity' class='name expandable'>startPackageInstallerSessionDetailsActivity</a>( <span class='pre'>sessionInfo, sourceBounds, opts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts an activity to show the details of the specified session. ...</div><div class='long'><p>Starts an activity to show the details of the specified session.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sessionInfo</span> : Object {PackageInstaller.SessionInfo}<div class='sub-desc'><p>The SessionInfo of the session</p>\n</div></li><li><span class='pre'>sourceBounds</span> : Object {Rect}<div class='sub-desc'><p>The Rect containing the source bounds of the clicked icon</p>\n</div></li><li><span class='pre'>opts</span> : Object {Bundle}<div class='sub-desc'><p>Options to pass to startActivity</p>\n</div></li></ul></div></div></div><div id='method-startShortcut' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-startShortcut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-startShortcut' class='name expandable'>startShortcut</a>( <span class='pre'>shortcut, sourceBounds, startActivityOptions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Launches a shortcut. ...</div><div class='long'><p>Launches a shortcut.</p>\n\n<p> <p>The calling launcher application must be allowed to access the shortcut information,\n as defined in <a href=\"#!/api/android.content.pm.LauncherApps-method-hasShortcutHostPermission\" rel=\"android.content.pm.LauncherApps-method-hasShortcutHostPermission\" class=\"docClass\">hasShortcutHostPermission</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>shortcut</span> : Object {ShortcutInfo}<div class='sub-desc'><p>The target shortcut.</p>\n</div></li><li><span class='pre'>sourceBounds</span> : Object {Rect}<div class='sub-desc'><p>The Rect containing the source bounds of the clicked icon.</p>\n</div></li><li><span class='pre'>startActivityOptions</span> : Object {Bundle}<div class='sub-desc'><p>Options to pass to startActivity.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked, or when the {@code user} user\n is locked or not running.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.ActivityNotFoundException failed to start shortcut. (e.g.\n the shortcut no longer exists, is disabled, the intent receiver activity doesn't exist, etc)</p>\n</div></li></ul></div></div></div><div id='method-unregisterCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-unregisterCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-unregisterCallback' class='name expandable'>unregisterCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters a callback that was previously registered. ...</div><div class='long'><p>Unregisters a callback that was previously registered.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {LauncherApps.Callback}<div class='sub-desc'><p>The callback to unregister.\n@see <a href=\"#!/api/android.content.pm.LauncherApps-method-registerCallback\" rel=\"android.content.pm.LauncherApps-method-registerCallback\" class=\"docClass\">registerCallback</a>(Callback)</p>\n</div></li></ul></div></div></div><div id='method-unregisterPackageInstallerSessionCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.LauncherApps'>android.content.pm.LauncherApps</span><br/><a href='source/LauncherApps.html#android-content-pm-LauncherApps-method-unregisterPackageInstallerSessionCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.LauncherApps-method-unregisterPackageInstallerSessionCallback' class='name expandable'>unregisterPackageInstallerSessionCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters a callback that was previously registered. ...</div><div class='long'><p>Unregisters a callback that was previously registered.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {PackageInstaller.SessionCallback}<div class='sub-desc'><p>The callback to unregister.\n@see <a href=\"#!/api/android.content.pm.LauncherApps-method-registerPackageInstallerSessionCallback\" rel=\"android.content.pm.LauncherApps-method-registerPackageInstallerSessionCallback\" class=\"docClass\">registerPackageInstallerSessionCallback</a>(Executor, SessionCallback)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});