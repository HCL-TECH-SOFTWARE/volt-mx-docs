Ext.data.JsonP.android_content_pm_CrossProfileApps({"tagname":"class","name":"android.content.pm.CrossProfileApps","autodetected":{},"files":[{"filename":"CrossProfileApps.js","href":"CrossProfileApps.html#android-content-pm-CrossProfileApps"}],"extends":"java.lang.Object","members":[{"name":"getProfileSwitchingIconDrawable","tagname":"method","owner":"android.content.pm.CrossProfileApps","id":"method-getProfileSwitchingIconDrawable","meta":{}},{"name":"getProfileSwitchingLabel","tagname":"method","owner":"android.content.pm.CrossProfileApps","id":"method-getProfileSwitchingLabel","meta":{}},{"name":"getTargetUserProfiles","tagname":"method","owner":"android.content.pm.CrossProfileApps","id":"method-getTargetUserProfiles","meta":{}},{"name":"startMainActivity","tagname":"method","owner":"android.content.pm.CrossProfileApps","id":"method-startMainActivity","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.pm.CrossProfileApps","short_doc":"Class for handling cross profile operations. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.pm.CrossProfileApps</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CrossProfileApps.html#android-content-pm-CrossProfileApps' target='_blank'>CrossProfileApps.js</a></div></pre><div class='doc-contents'><p>Class for handling cross profile operations. Apps can use this class to interact with its\n instance in any profile that is in <a href=\"#!/api/android.content.pm.CrossProfileApps-method-getTargetUserProfiles\" rel=\"android.content.pm.CrossProfileApps-method-getTargetUserProfiles\" class=\"docClass\">getTargetUserProfiles</a>(). For example, app can\n use this class to start its main activity in managed profile.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getProfileSwitchingIconDrawable' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.CrossProfileApps'>android.content.pm.CrossProfileApps</span><br/><a href='source/CrossProfileApps.html#android-content-pm-CrossProfileApps-method-getProfileSwitchingIconDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.CrossProfileApps-method-getProfileSwitchingIconDrawable' class='name expandable'>getProfileSwitchingIconDrawable</a>( <span class='pre'>userHandle</span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a drawable that calling app can show to user for the semantic of profile switching --\n launching its own activ...</div><div class='long'><p>Return a drawable that calling app can show to user for the semantic of profile switching --\n launching its own activity in specified user profile. For example, it may return a briefcase\n icon if the given user handle is the managed profile one.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>userHandle</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the target profile, must be one of the users returned by\n        getTargetUserProfiles(), otherwise a SecurityException will\n        be thrown.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>an icon that calling app can show user for the semantic of launching its own\n         activity in specified user profile.\n@see <a href=\"#!/api/android.content.pm.CrossProfileApps-method-startMainActivity\" rel=\"android.content.pm.CrossProfileApps-method-startMainActivity\" class=\"docClass\">startMainActivity</a>(ComponentName, UserHandle)</p>\n</div></li></ul></div></div></div><div id='method-getProfileSwitchingLabel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.CrossProfileApps'>android.content.pm.CrossProfileApps</span><br/><a href='source/CrossProfileApps.html#android-content-pm-CrossProfileApps-method-getProfileSwitchingLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.CrossProfileApps-method-getProfileSwitchingLabel' class='name expandable'>getProfileSwitchingLabel</a>( <span class='pre'>userHandle</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a label that calling app can show to user for the semantic of profile switching --\n launching its own activity...</div><div class='long'><p>Return a label that calling app can show to user for the semantic of profile switching --\n launching its own activity in specified user profile. For example, it may return\n \"Switch to work\" if the given user handle is the managed profile one.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>userHandle</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the target profile, must be one of the users returned by\n        getTargetUserProfiles(), otherwise a SecurityException will\n        be thrown.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>a label that calling app can show user for the semantic of launching its own\n         activity in the specified user profile.\n@see <a href=\"#!/api/android.content.pm.CrossProfileApps-method-startMainActivity\" rel=\"android.content.pm.CrossProfileApps-method-startMainActivity\" class=\"docClass\">startMainActivity</a>(ComponentName, UserHandle)</p>\n</div></li></ul></div></div></div><div id='method-getTargetUserProfiles' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.CrossProfileApps'>android.content.pm.CrossProfileApps</span><br/><a href='source/CrossProfileApps.html#android-content-pm-CrossProfileApps-method-getTargetUserProfiles' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.CrossProfileApps-method-getTargetUserProfiles' class='name expandable'>getTargetUserProfiles</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a list of user profiles that that the caller can use when calling other APIs in this\n class. ...</div><div class='long'><p>Return a list of user profiles that that the caller can use when calling other APIs in this\n class.\n <p>\n A user profile would be considered as a valid target user profile, provided that:\n <ul>\n <li>It gets caller app installed</li>\n <li>It is not equal to the calling user</li>\n <li>It is in the same profile group of calling user profile</li>\n <li>It is enabled</li>\n </ul>\n@see UserManager#getUserProfiles()</p>\n</div></div></div><div id='method-startMainActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.CrossProfileApps'>android.content.pm.CrossProfileApps</span><br/><a href='source/CrossProfileApps.html#android-content-pm-CrossProfileApps-method-startMainActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.CrossProfileApps-method-startMainActivity' class='name expandable'>startMainActivity</a>( <span class='pre'>component, targetUser</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts the specified main activity of the caller package in the specified profile. ...</div><div class='long'><p>Starts the specified main activity of the caller package in the specified profile.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Object {ComponentName}<div class='sub-desc'><p>The ComponentName of the activity to launch, it must be exported and has\n        action android.content.Intent.ACTION_MAIN, category\n        android.content.Intent.CATEGORY_LAUNCHER. Otherwise, SecurityException will\n        be thrown.</p>\n</div></li><li><span class='pre'>targetUser</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the profile, must be one of the users returned by\n        getTargetUserProfiles(), otherwise a SecurityException will\n        be thrown.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});