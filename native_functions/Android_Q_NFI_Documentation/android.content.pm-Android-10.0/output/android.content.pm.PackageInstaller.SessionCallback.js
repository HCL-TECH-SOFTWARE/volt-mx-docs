Ext.data.JsonP.android_content_pm_PackageInstaller_SessionCallback({"tagname":"class","name":"android.content.pm.PackageInstaller.SessionCallback","autodetected":{},"files":[{"filename":"SessionCallback.js","href":"SessionCallback.html#android-content-pm-PackageInstaller-SessionCallback"}],"extends":"java.lang.Object","members":[{"name":"onActiveChanged","tagname":"method","owner":"android.content.pm.PackageInstaller.SessionCallback","id":"method-onActiveChanged","meta":{}},{"name":"onBadgingChanged","tagname":"method","owner":"android.content.pm.PackageInstaller.SessionCallback","id":"method-onBadgingChanged","meta":{}},{"name":"onCreated","tagname":"method","owner":"android.content.pm.PackageInstaller.SessionCallback","id":"method-onCreated","meta":{}},{"name":"onFinished","tagname":"method","owner":"android.content.pm.PackageInstaller.SessionCallback","id":"method-onFinished","meta":{}},{"name":"onProgressChanged","tagname":"method","owner":"android.content.pm.PackageInstaller.SessionCallback","id":"method-onProgressChanged","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.pm.PackageInstaller.SessionCallback","short_doc":"Events for observing session lifecycle. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.pm.PackageInstaller.SessionCallback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SessionCallback.html#android-content-pm-PackageInstaller-SessionCallback' target='_blank'>SessionCallback.js</a></div></pre><div class='doc-contents'><p>Events for observing session lifecycle.\n <p>\n A typical session lifecycle looks like this:\n <ul>\n <li>An installer creates a session to indicate pending app delivery. All\n install details are available at this point.\n <li>The installer opens the session to deliver APK data. Note that a\n session may be opened and closed multiple times as network connectivity\n changes. The installer may deliver periodic progress updates.\n <li>The installer commits or abandons the session, resulting in the\n session being finished.\n </li></li></li></ul></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onActiveChanged' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.PackageInstaller.SessionCallback'>android.content.pm.PackageInstaller.SessionCallback</span><br/><a href='source/SessionCallback.html#android-content-pm-PackageInstaller-SessionCallback-method-onActiveChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.PackageInstaller.SessionCallback-method-onActiveChanged' class='name expandable'>onActiveChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Active state for session has been changed. ...</div><div class='long'><p>Active state for session has been changed.\n <p>\n A session is considered active whenever there is ongoing forward\n progress being made, such as the installer holding an open\n <a href=\"#!/api/android.content.pm.PackageInstaller.Session\" rel=\"android.content.pm.PackageInstaller.Session\" class=\"docClass\">android.content.pm.PackageInstaller.Session</a> instance while streaming data into place, or the\n system optimizing code as the result of\n android.content.pm.PackageInstaller.Session.commit(IntentSender).\n <p>\n If the installer closes the <a href=\"#!/api/android.content.pm.PackageInstaller.Session\" rel=\"android.content.pm.PackageInstaller.Session\" class=\"docClass\">android.content.pm.PackageInstaller.Session</a> without committing, the\n session is considered inactive until the installer opens the session\n again.</p>\n</div></div></div><div id='method-onBadgingChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.PackageInstaller.SessionCallback'>android.content.pm.PackageInstaller.SessionCallback</span><br/><a href='source/SessionCallback.html#android-content-pm-PackageInstaller-SessionCallback-method-onBadgingChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.PackageInstaller.SessionCallback-method-onBadgingChanged' class='name expandable'>onBadgingChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Badging details for an existing session has changed. ...</div><div class='long'><p>Badging details for an existing session has changed. For example, the\n app icon or label has been updated.</p>\n</div></div></div><div id='method-onCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.PackageInstaller.SessionCallback'>android.content.pm.PackageInstaller.SessionCallback</span><br/><a href='source/SessionCallback.html#android-content-pm-PackageInstaller-SessionCallback-method-onCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.PackageInstaller.SessionCallback-method-onCreated' class='name expandable'>onCreated</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>New session has been created. ...</div><div class='long'><p>New session has been created. Details about the session can be\n obtained from android.content.pm.PackageParser.PackageInstaller.getSessionInfo(int).</p>\n</div></div></div><div id='method-onFinished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.PackageInstaller.SessionCallback'>android.content.pm.PackageInstaller.SessionCallback</span><br/><a href='source/SessionCallback.html#android-content-pm-PackageInstaller-SessionCallback-method-onFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.PackageInstaller.SessionCallback-method-onFinished' class='name expandable'>onFinished</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Session has completely finished, either with success or failure. ...</div><div class='long'><p>Session has completely finished, either with success or failure.</p>\n</div></div></div><div id='method-onProgressChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.PackageInstaller.SessionCallback'>android.content.pm.PackageInstaller.SessionCallback</span><br/><a href='source/SessionCallback.html#android-content-pm-PackageInstaller-SessionCallback-method-onProgressChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.PackageInstaller.SessionCallback-method-onProgressChanged' class='name expandable'>onProgressChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Progress for given session has been updated. ...</div><div class='long'><p>Progress for given session has been updated.\n <p>\n Note that this progress may not directly correspond to the value\n reported by\n android.content.pm.PackageParser.PackageInstaller.Session.setStagingProgress(float), as the\n system may carve out a portion of the overall progress to represent\n its own internal installation work.</p>\n</div></div></div></div></div></div></div>","meta":{}});