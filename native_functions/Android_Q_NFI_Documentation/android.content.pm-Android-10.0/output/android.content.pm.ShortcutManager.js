Ext.data.JsonP.android_content_pm_ShortcutManager({"tagname":"class","name":"android.content.pm.ShortcutManager","autodetected":{},"files":[{"filename":"ShortcutManager.js","href":"ShortcutManager.html#android-content-pm-ShortcutManager"}],"extends":"java.lang.Object","members":[{"name":"addDynamicShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-addDynamicShortcuts","meta":{}},{"name":"createShortcutResultIntent","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-createShortcutResultIntent","meta":{}},{"name":"disableShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-disableShortcuts","meta":{}},{"name":"enableShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-enableShortcuts","meta":{}},{"name":"getDynamicShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-getDynamicShortcuts","meta":{}},{"name":"getIconMaxHeight","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-getIconMaxHeight","meta":{}},{"name":"getIconMaxWidth","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-getIconMaxWidth","meta":{}},{"name":"getManifestShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-getManifestShortcuts","meta":{}},{"name":"getMaxShortcutCountPerActivity","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-getMaxShortcutCountPerActivity","meta":{}},{"name":"getPinnedShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-getPinnedShortcuts","meta":{}},{"name":"isRateLimitingActive","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-isRateLimitingActive","meta":{}},{"name":"isRequestPinShortcutSupported","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-isRequestPinShortcutSupported","meta":{}},{"name":"removeAllDynamicShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-removeAllDynamicShortcuts","meta":{}},{"name":"removeDynamicShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-removeDynamicShortcuts","meta":{}},{"name":"reportShortcutUsed","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-reportShortcutUsed","meta":{}},{"name":"requestPinShortcut","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-requestPinShortcut","meta":{}},{"name":"setDynamicShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-setDynamicShortcuts","meta":{}},{"name":"updateShortcuts","tagname":"method","owner":"android.content.pm.ShortcutManager","id":"method-updateShortcuts","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.pm.ShortcutManager","short_doc":"ShortcutManager executes operations on an app's set of shortcuts, which\n represent specific tasks and actions that us...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.pm.ShortcutManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager' target='_blank'>ShortcutManager.js</a></div></pre><div class='doc-contents'><p><p><code>ShortcutManager</code> executes operations on an app's set of <i>shortcuts</i>, which\n represent specific tasks and actions that users can perform within your app. This page lists\n components of the <code>ShortcutManager</code> class that you can use to create and manage\n sets of shortcuts.</p>\n\n<p> <p>To learn about methods that retrieve information about a single shortcut&mdash;including\n identifiers, type, and status&mdash;read the <code>\n <a href=\"/reference/android/content/pm/ShortcutInfo.html\">ShortcutInfo</a></code> reference.</p>\n\n<p> <p>For guidance about using shortcuts, see\n <a href=\"/guide/topics/ui/shortcuts/index.html\">App shortcuts</a>.</p>\n\n<p> <h3>Retrieving class instances</h3>\n <!-- Provides a heading for the content filled in by the @SystemService annotation below --></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addDynamicShortcuts' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-addDynamicShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-addDynamicShortcuts' class='name expandable'>addDynamicShortcuts</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Publish the list of dynamic shortcuts. ...</div><div class='long'><p>Publish the list of dynamic shortcuts.  If there are already dynamic or pinned shortcuts with\n the same IDs, each mutable shortcut is updated.</p>\n\n<p> <p>This API will be rate-limited.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the call has succeeded. {@code false} if the call is rate-limited.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if getMaxShortcutCountPerActivity() is exceeded,\n or when trying to update immutable shortcuts.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-createShortcutResultIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-createShortcutResultIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-createShortcutResultIntent' class='name expandable'>createShortcutResultIntent</a>( <span class='pre'>shortcut</span> ) : Object {android.content.Intent}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an Intent which can be used by the default launcher to pin a shortcut containing the\n given android.content.p...</div><div class='long'><p>Returns an Intent which can be used by the default launcher to pin a shortcut containing the\n given <a href=\"#!/api/android.content.pm.ShortcutInfo\" rel=\"android.content.pm.ShortcutInfo\" class=\"docClass\">android.content.pm.ShortcutInfo</a>. This method should be used by an Activity to set a result in\n response to Intent.ACTION_CREATE_SHORTCUT.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>shortcut</span> : Object {ShortcutInfo}<div class='sub-desc'><p>New shortcut to pin.  If an app wants to pin an existing (either dynamic\n     or manifest) shortcut, then it only needs to have an ID, and other fields don't have to\n     be set, in which case, the target shortcut must be enabled.\n     If it's a new shortcut, all the mandatory fields, such as a short label, must be\n     set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Intent}</span><div class='sub-desc'><p>The intent that should be set as the result for the calling activity, or\n     <code>null</code> if the current launcher doesn't support shortcuts.\n@see Intent#ACTION_CREATE_SHORTCUT</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if a shortcut with the same ID exists and is disabled.</p>\n</div></li></ul></div></div></div><div id='method-disableShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-disableShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-disableShortcuts' class='name expandable'>disableShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Disable pinned shortcuts, showing the user a custom error message when they try to select\n the disabled shortcuts. ...</div><div class='long'><p>Disable pinned shortcuts, showing the user a custom error message when they try to select\n the disabled shortcuts.\n For more details, read\n <a href=\"/guide/topics/ui/shortcuts/managing-shortcuts.html#disable-shortcuts\">\n Disable shortcuts</a>.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If trying to disable immutable shortcuts.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-enableShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-enableShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-enableShortcuts' class='name expandable'>enableShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Re-enable pinned shortcuts that were previously disabled. ...</div><div class='long'><p>Re-enable pinned shortcuts that were previously disabled.  If the target shortcuts\n are already enabled, this method does nothing.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If trying to enable immutable shortcuts.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-getDynamicShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-getDynamicShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-getDynamicShortcuts' class='name expandable'>getDynamicShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return all dynamic shortcuts from the caller app. ...</div><div class='long'><p>Return all dynamic shortcuts from the caller app.</p>\n\n<p> <p>This API is intended to be used for examining what shortcuts are currently published.\n Re-publishing returned <a href=\"#!/api/android.content.pm.ShortcutInfo\" rel=\"android.content.pm.ShortcutInfo\" class=\"docClass\">android.content.pm.ShortcutInfo</a>s via APIs such as\n <a href=\"#!/api/android.content.pm.ShortcutManager-method-setDynamicShortcuts\" rel=\"android.content.pm.ShortcutManager-method-setDynamicShortcuts\" class=\"docClass\">setDynamicShortcuts</a>(List) may cause loss of information such as icons.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-getIconMaxHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-getIconMaxHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-getIconMaxHeight' class='name expandable'>getIconMaxHeight</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the max height for icons, in pixels. ...</div><div class='long'><p>Return the max height for icons, in pixels.</p>\n</div></div></div><div id='method-getIconMaxWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-getIconMaxWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-getIconMaxWidth' class='name expandable'>getIconMaxWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the max width for icons, in pixels. ...</div><div class='long'><p>Return the max width for icons, in pixels.</p>\n\n<p> <p> Note that this method returns max width of icon's visible part. Hence, it does not take\n into account the inset introduced by AdaptiveIconDrawable. To calculate bitmap image\n to function as AdaptiveIconDrawable, multiply\n 1 + 2 * AdaptiveIconDrawable.getExtraInsetFraction() to the returned size.</p>\n</div></div></div><div id='method-getManifestShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-getManifestShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-getManifestShortcuts' class='name expandable'>getManifestShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return all static (manifest) shortcuts from the caller app. ...</div><div class='long'><p>Return all static (manifest) shortcuts from the caller app.</p>\n\n<p> <p>This API is intended to be used for examining what shortcuts are currently published.\n Re-publishing returned <a href=\"#!/api/android.content.pm.ShortcutInfo\" rel=\"android.content.pm.ShortcutInfo\" class=\"docClass\">android.content.pm.ShortcutInfo</a>s via APIs such as\n <a href=\"#!/api/android.content.pm.ShortcutManager-method-setDynamicShortcuts\" rel=\"android.content.pm.ShortcutManager-method-setDynamicShortcuts\" class=\"docClass\">setDynamicShortcuts</a>(List) may cause loss of information such as icons.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-getMaxShortcutCountPerActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-getMaxShortcutCountPerActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-getMaxShortcutCountPerActivity' class='name expandable'>getMaxShortcutCountPerActivity</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the maximum number of static and dynamic shortcuts that each launcher icon\n can have at a time. ...</div><div class='long'><p>Return the maximum number of static and dynamic shortcuts that each launcher icon\n can have at a time.</p>\n</div></div></div><div id='method-getPinnedShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-getPinnedShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-getPinnedShortcuts' class='name expandable'>getPinnedShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return all pinned shortcuts from the caller app. ...</div><div class='long'><p>Return all pinned shortcuts from the caller app.</p>\n\n<p> <p>This API is intended to be used for examining what shortcuts are currently published.\n Re-publishing returned <a href=\"#!/api/android.content.pm.ShortcutInfo\" rel=\"android.content.pm.ShortcutInfo\" class=\"docClass\">android.content.pm.ShortcutInfo</a>s via APIs such as\n <a href=\"#!/api/android.content.pm.ShortcutManager-method-setDynamicShortcuts\" rel=\"android.content.pm.ShortcutManager-method-setDynamicShortcuts\" class=\"docClass\">setDynamicShortcuts</a>(List) may cause loss of information such as icons.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-isRateLimitingActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-isRateLimitingActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-isRateLimitingActive' class='name expandable'>isRateLimitingActive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return {@code true} when rate-limiting is active for the caller app. ...</div><div class='long'><p>Return {@code true} when rate-limiting is active for the caller app.</p>\n\n<p> <p>For details, see <a href=\"/guide/topics/ui/shortcuts/managing-shortcuts#rate-limiting\">\n Rate limiting</a>.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-isRequestPinShortcutSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-isRequestPinShortcutSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-isRequestPinShortcutSupported' class='name expandable'>isRequestPinShortcutSupported</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return {@code TRUE} if the app is running on a device whose default launcher supports\n IntentSender). ...</div><div class='long'><p>Return {@code TRUE} if the app is running on a device whose default launcher supports\n IntentSender).</p>\n\n<p> <p>The return value may change in subsequent calls if the user changes the default launcher\n app.</p>\n\n<p> <p><b>Note:</b> See also the support library counterpart\n Context), which supports Android versions lower than VERSION_CODES.O using the\n legacy private intent {@code com.android.launcher.action.INSTALL_SHORTCUT}.\n@see <a href=\"#!/api/android.content.pm.ShortcutManager-method-requestPinShortcut\" rel=\"android.content.pm.ShortcutManager-method-requestPinShortcut\" class=\"docClass\">requestPinShortcut</a>(ShortcutInfo, IntentSender)</p>\n</div></div></div><div id='method-removeAllDynamicShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-removeAllDynamicShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-removeAllDynamicShortcuts' class='name expandable'>removeAllDynamicShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Delete all dynamic shortcuts from the caller app. ...</div><div class='long'><p>Delete all dynamic shortcuts from the caller app.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-removeDynamicShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-removeDynamicShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-removeDynamicShortcuts' class='name expandable'>removeDynamicShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Delete dynamic shortcuts by ID. ...</div><div class='long'><p>Delete dynamic shortcuts by ID.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-reportShortcutUsed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-reportShortcutUsed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-reportShortcutUsed' class='name expandable'>reportShortcutUsed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Apps that publish shortcuts should call this method whenever the user\n selects the shortcut containing the given ID o...</div><div class='long'><p>Apps that publish shortcuts should call this method whenever the user\n selects the shortcut containing the given ID or when the user completes\n an action in the app that is equivalent to selecting the shortcut.\n For more details, read about\n <a href=\"/guide/topics/ui/shortcuts/managing-shortcuts.html#track-usage\">\n tracking shortcut usage</a>.</p>\n\n<p> <p>The information is accessible via UsageStatsManager.queryEvents\n Typically, launcher apps use this information to build a prediction model\n so that they can promote the shortcuts that are likely to be used at the moment.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-requestPinShortcut' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-requestPinShortcut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-requestPinShortcut' class='name expandable'>requestPinShortcut</a>( <span class='pre'>shortcut, resultIntent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Request to create a pinned shortcut. ...</div><div class='long'><p>Request to create a pinned shortcut.  The default launcher will receive this request and\n ask the user for approval.  If the user approves it, the shortcut will be created, and\n {@code resultIntent} will be sent. If a request is denied by the user, however, no response\n will be sent to the caller.</p>\n\n<p> <p>Only apps with a foreground activity or a foreground service can call this method.\n Otherwise, it'll throw IllegalStateException.</p>\n\n<p> <p>It's up to the launcher to decide how to handle previous pending requests when the same\n package calls this API multiple times in a row. One possible strategy is to ignore any\n previous requests.</p>\n\n<p> <p><b>Note:</b> See also the support library counterpart\n Context, android.content.pm.ShortcutInfoCompat, IntentSender),\n which supports Android versions lower than VERSION_CODES.O using the\n legacy private intent {@code com.android.launcher.action.INSTALL_SHORTCUT}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>shortcut</span> : Object {ShortcutInfo}<div class='sub-desc'><p>Shortcut to pin.  If an app wants to pin an existing (either static\n     or dynamic) shortcut, then it only needs to have an ID. Although other fields don't have\n     to be set, the target shortcut must be enabled.</p>\n\n<pre><code> &lt;p&gt;If it's a new shortcut, all the mandatory fields, such as a short label, must be\n set.\n</code></pre>\n</div></li><li><span class='pre'>resultIntent</span> : Object {IntentSender}<div class='sub-desc'><p>If not null, this intent will be sent when the shortcut is pinned.\n    Use android.app.PendingIntent.getIntentSender() to create an IntentSender.\n    To avoid background execution limits, use an unexported, manifest-declared receiver.\n    For more details, see\n    <a href=\"/guide/topics/ui/shortcuts/creating-shortcuts.html#pinned\">\n    Creating pinned shortcuts</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code TRUE} if the launcher supports this feature.  Note the API will return without\n    waiting for the user to respond, so getting {@code TRUE} from this API does <em>not</em> mean\n    the shortcut was pinned successfully.  {@code FALSE} if the launcher doesn't support this\n    feature.\n@see <a href=\"#!/api/android.content.pm.ShortcutManager-method-isRequestPinShortcutSupported\" rel=\"android.content.pm.ShortcutManager-method-isRequestPinShortcutSupported\" class=\"docClass\">isRequestPinShortcutSupported</a>()\n@see IntentSender\n@see android.app.PendingIntent#getIntentSender()</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if a shortcut with the same ID exists and is disabled.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException The caller doesn't have a foreground activity or a foreground\n service, or the device is locked.</p>\n</div></li></ul></div></div></div><div id='method-setDynamicShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-setDynamicShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-setDynamicShortcuts' class='name expandable'>setDynamicShortcuts</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Publish the list of shortcuts. ...</div><div class='long'><p>Publish the list of shortcuts.  All existing dynamic shortcuts from the caller app\n will be replaced.  If there are already pinned shortcuts with the same IDs,\n the mutable pinned shortcuts are updated.</p>\n\n<p> <p>This API will be rate-limited.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the call has succeeded. {@code false} if the call is rate-limited.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if getMaxShortcutCountPerActivity() is exceeded,\n or when trying to update immutable shortcuts.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div><div id='method-updateShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.pm.ShortcutManager'>android.content.pm.ShortcutManager</span><br/><a href='source/ShortcutManager.html#android-content-pm-ShortcutManager-method-updateShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.pm.ShortcutManager-method-updateShortcuts' class='name expandable'>updateShortcuts</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Update all existing shortcuts with the same IDs. ...</div><div class='long'><p>Update all existing shortcuts with the same IDs.  Target shortcuts may be pinned and/or\n dynamic, but they must not be immutable.</p>\n\n<p> <p>This API will be rate-limited.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the call has succeeded. {@code false} if the call is rate-limited.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If trying to update immutable shortcuts.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException when the user is locked.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});