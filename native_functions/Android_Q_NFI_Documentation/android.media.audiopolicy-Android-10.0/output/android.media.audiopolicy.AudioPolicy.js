Ext.data.JsonP.android_media_audiopolicy_AudioPolicy({"tagname":"class","name":"android.media.audiopolicy.AudioPolicy","autodetected":{},"files":[{"filename":"AudioPolicy.js","href":"AudioPolicy.html#android-media-audiopolicy-AudioPolicy"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"FOCUS_POLICY_DUCKING_DEFAULT","tagname":"property","owner":"android.media.audiopolicy.AudioPolicy","id":"property-FOCUS_POLICY_DUCKING_DEFAULT","meta":{}},{"name":"FOCUS_POLICY_DUCKING_IN_APP","tagname":"property","owner":"android.media.audiopolicy.AudioPolicy","id":"property-FOCUS_POLICY_DUCKING_IN_APP","meta":{}},{"name":"FOCUS_POLICY_DUCKING_IN_POLICY","tagname":"property","owner":"android.media.audiopolicy.AudioPolicy","id":"property-FOCUS_POLICY_DUCKING_IN_POLICY","meta":{}},{"name":"POLICY_STATUS_REGISTERED","tagname":"property","owner":"android.media.audiopolicy.AudioPolicy","id":"property-POLICY_STATUS_REGISTERED","meta":{}},{"name":"POLICY_STATUS_UNREGISTERED","tagname":"property","owner":"android.media.audiopolicy.AudioPolicy","id":"property-POLICY_STATUS_UNREGISTERED","meta":{}},{"name":"attachMixes","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-attachMixes","meta":{}},{"name":"createAudioRecordSink","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-createAudioRecordSink","meta":{}},{"name":"createAudioTrackSource","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-createAudioTrackSource","meta":{}},{"name":"detachMixes","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-detachMixes","meta":{}},{"name":"getFocusDuckingBehavior","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-getFocusDuckingBehavior","meta":{}},{"name":"getStatus","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-getStatus","meta":{}},{"name":"removeUidDeviceAffinity","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-removeUidDeviceAffinity","meta":{}},{"name":"setFocusDuckingBehavior","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-setFocusDuckingBehavior","meta":{}},{"name":"setRegistration","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-setRegistration","meta":{}},{"name":"setUidDeviceAffinity","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-setUidDeviceAffinity","meta":{}},{"name":"toLogFriendlyString","tagname":"method","owner":"android.media.audiopolicy.AudioPolicy","id":"method-toLogFriendlyString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.audiopolicy.AudioPolicy","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.audiopolicy.AudioPolicy</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy' target='_blank'>AudioPolicy.js</a></div></pre><div class='doc-contents'><p>AudioPolicy provides access to the management of audio routing and audio focus.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-FOCUS_POLICY_DUCKING_DEFAULT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-property-FOCUS_POLICY_DUCKING_DEFAULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_DEFAULT' class='name expandable'>FOCUS_POLICY_DUCKING_DEFAULT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-FOCUS_POLICY_DUCKING_IN_APP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_APP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_APP' class='name expandable'>FOCUS_POLICY_DUCKING_IN_APP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The behavior of a policy with regards to audio focus where it relies on the application\nto do the ducking, the is the...</div><div class='long'><p>The behavior of a policy with regards to audio focus where it relies on the application\nto do the ducking, the is the legacy and default behavior.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-FOCUS_POLICY_DUCKING_IN_POLICY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_POLICY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_POLICY' class='name expandable'>FOCUS_POLICY_DUCKING_IN_POLICY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The behavior of a policy with regards to audio focus where it handles ducking instead\nof the application losing focus...</div><div class='long'><p>The behavior of a policy with regards to audio focus where it handles ducking instead\nof the application losing focus and being signaled it can duck (as communicated by\nandroid.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK).\n<br>Can only be used after having set a listener with\nsetandroid.media.audiopolicy.AudioPolicyFocusListener(android.media.audiopolicy.AudioPolicyFocusListener).</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-POLICY_STATUS_REGISTERED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-property-POLICY_STATUS_REGISTERED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-property-POLICY_STATUS_REGISTERED' class='name expandable'>POLICY_STATUS_REGISTERED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The status of an audio policy that is valid, successfully registered and thus active. ...</div><div class='long'><p>The status of an audio policy that is valid, successfully registered and thus active.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-POLICY_STATUS_UNREGISTERED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-property-POLICY_STATUS_UNREGISTERED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-property-POLICY_STATUS_UNREGISTERED' class='name expandable'>POLICY_STATUS_UNREGISTERED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The status of an audio policy that is valid but cannot be used because it is not registered. ...</div><div class='long'><p>The status of an audio policy that is valid but cannot be used because it is not registered.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-attachMixes' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-attachMixes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-attachMixes' class='name expandable'>attachMixes</a>( <span class='pre'>mixes</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the current configuration of the set of audio mixes by adding new ones, while\n keeping the policy registered. ...</div><div class='long'><p>Update the current configuration of the set of audio mixes by adding new ones, while\n keeping the policy registered.\n This method can only be called on a registered policy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mixes</span> : Object {java.util.List}<div class='sub-desc'><p>the list of AudioMix to add</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>AudioManager.SUCCESS if the change was successful, AudioManager.ERROR\n    otherwise.</p>\n</div></li></ul></div></div></div><div id='method-createAudioRecordSink' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-createAudioRecordSink' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-createAudioRecordSink' class='name expandable'>createAudioRecordSink</a>( <span class='pre'>mix</span> ) : Object {android.media.AudioRecord}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an AudioRecord instance that is associated with the given android.media.audiopolicy.AudioMix. ...</div><div class='long'><p>Create an AudioRecord instance that is associated with the given <a href=\"#!/api/android.media.audiopolicy.AudioMix\" rel=\"android.media.audiopolicy.AudioMix\" class=\"docClass\">android.media.audiopolicy.AudioMix</a>.\n Audio buffers recorded through the created instance will contain the mix of the audio\n streams that fed the given mixer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mix</span> : Object {AudioMix}<div class='sub-desc'><p>a non-null AudioMix instance whose routing flags was defined with\n     AudioMix.ROUTE_FLAG_LOOP_BACK, previously added to this policy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.AudioRecord}</span><div class='sub-desc'><p>a new AudioRecord instance whose data format is the one defined in the\n     AudioMix, or null if this policy was not successfully registered\n     with AudioManager.registerAudioPolicy(AudioPolicy).</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li></ul></div></div></div><div id='method-createAudioTrackSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-createAudioTrackSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-createAudioTrackSource' class='name expandable'>createAudioTrackSource</a>( <span class='pre'>mix</span> ) : Object {android.media.AudioTrack}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an AudioTrack instance that is associated with the given android.media.audiopolicy.AudioMix. ...</div><div class='long'><p>Create an AudioTrack instance that is associated with the given <a href=\"#!/api/android.media.audiopolicy.AudioMix\" rel=\"android.media.audiopolicy.AudioMix\" class=\"docClass\">android.media.audiopolicy.AudioMix</a>.\n Audio buffers played through the created instance will be sent to the given mix\n to be recorded through the recording APIs.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mix</span> : Object {AudioMix}<div class='sub-desc'><p>a non-null AudioMix instance whose routing flags was defined with\n     AudioMix.ROUTE_FLAG_LOOP_BACK, previously added to this policy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.AudioTrack}</span><div class='sub-desc'><p>a new AudioTrack instance whose data format is the one defined in the\n     AudioMix, or null if this policy was not successfully registered\n     with AudioManager.registerAudioPolicy(AudioPolicy).</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li></ul></div></div></div><div id='method-detachMixes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-detachMixes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-detachMixes' class='name expandable'>detachMixes</a>( <span class='pre'>mixes</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the current configuration of the set of audio mixes by removing some, while\n keeping the policy registered. ...</div><div class='long'><p>Update the current configuration of the set of audio mixes by removing some, while\n keeping the policy registered.\n This method can only be called on a registered policy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mixes</span> : Object {java.util.List}<div class='sub-desc'><p>the list of AudioMix to remove</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>AudioManager.SUCCESS if the change was successful, AudioManager.ERROR\n    otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getFocusDuckingBehavior' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-getFocusDuckingBehavior' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-getFocusDuckingBehavior' class='name expandable'>getFocusDuckingBehavior</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current behavior for audio focus-related ducking. ...</div><div class='long'><p>Returns the current behavior for audio focus-related ducking.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_APP\" rel=\"android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_APP\" class=\"docClass\">FOCUS_POLICY_DUCKING_IN_APP</a> or <a href=\"#!/api/android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_POLICY\" rel=\"android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_POLICY\" class=\"docClass\">FOCUS_POLICY_DUCKING_IN_POLICY</a></p>\n</div></li></ul></div></div></div><div id='method-getStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-getStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-getStatus' class='name expandable'>getStatus</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-removeUidDeviceAffinity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-removeUidDeviceAffinity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-removeUidDeviceAffinity' class='name expandable'>removeUidDeviceAffinity</a>( <span class='pre'>uid, uid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>UID of the application affected.</p>\n</div></li><li><span class='pre'>uid</span> : Object<div class='sub-desc'><p>UID of the application affected.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the change was successful, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setFocusDuckingBehavior' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-setFocusDuckingBehavior' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-setFocusDuckingBehavior' class='name expandable'>setFocusDuckingBehavior</a>( <span class='pre'>behavior</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the behavior for audio focus-related ducking. ...</div><div class='long'><p>Sets the behavior for audio focus-related ducking.\n There must be a focus listener if this policy is to handle ducking.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>behavior</span> : Number<div class='sub-desc'><p><a href=\"#!/api/android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_APP\" rel=\"android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_APP\" class=\"docClass\">FOCUS_POLICY_DUCKING_IN_APP</a> or\n     <a href=\"#!/api/android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_POLICY\" rel=\"android.media.audiopolicy.AudioPolicy-property-FOCUS_POLICY_DUCKING_IN_POLICY\" class=\"docClass\">FOCUS_POLICY_DUCKING_IN_POLICY</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>AudioManager.SUCCESS or AudioManager.ERROR (for instance if there\n     is already an audio policy that handles ducking).</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException</p>\n</div></li></ul></div></div></div><div id='method-setRegistration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-setRegistration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-setRegistration' class='name expandable'>setRegistration</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setUidDeviceAffinity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-setUidDeviceAffinity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-setUidDeviceAffinity' class='name expandable'>setUidDeviceAffinity</a>( <span class='pre'>uid, devices, devices</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>UID of the application to affect.</p>\n</div></li><li><span class='pre'>devices</span> : Object {java.util.List}<div class='sub-desc'><p>list of devices to which the audio stream of the application may be routed.</p>\n</div></li><li><span class='pre'>devices</span> : Object<div class='sub-desc'><p>list of devices to which the audio stream of the application may be routed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the change was successful, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-toLogFriendlyString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.audiopolicy.AudioPolicy'>android.media.audiopolicy.AudioPolicy</span><br/><a href='source/AudioPolicy.html#android-media-audiopolicy-AudioPolicy-method-toLogFriendlyString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.audiopolicy.AudioPolicy-method-toLogFriendlyString' class='name expandable'>toLogFriendlyString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});