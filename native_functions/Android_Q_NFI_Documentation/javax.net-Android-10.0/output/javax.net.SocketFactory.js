Ext.data.JsonP.javax_net_SocketFactory({"tagname":"class","name":"javax.net.SocketFactory","autodetected":{},"files":[{"filename":"SocketFactory.js","href":"SocketFactory.html#javax-net-SocketFactory"}],"extends":"java.lang.Object","since":"1.4","author":[{"tagname":"author","name":"David Brownell","email":null}],"members":[{"name":"createSocket","tagname":"method","owner":"javax.net.SocketFactory","id":"method-createSocket","meta":{}},{"name":"getDefault","tagname":"method","owner":"javax.net.SocketFactory","id":"method-getDefault","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.net.SocketFactory","short_doc":"This class creates sockets. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.net.SocketFactory</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SocketFactory.html#javax-net-SocketFactory' target='_blank'>SocketFactory.js</a></div></pre><div class='doc-contents'><p>This class creates sockets.  It may be subclassed by other factories,\n which create particular subclasses of sockets and thus provide a general\n framework for the addition of public socket-level functionality.</p>\n\n<p> <P> Socket factories are a simple way to capture a variety of policies\n related to the sockets being constructed, producing such sockets in\n a way which does not require special configuration of the code which\n asks for the sockets:  <UL></UL></P></p>\n\n<pre><code>  &lt;LI&gt; Due to polymorphism of both factories and sockets, different\n  kinds of sockets can be used by the same application code just\n  by passing it different kinds of factories.\n\n  &lt;LI&gt; Factories can themselves be customized with parameters used\n  in socket construction.  So for example, factories could be\n  customized to return sockets with different networking timeouts\n  or security parameters already configured.\n\n  &lt;LI&gt; The sockets returned to the application can be subclasses\n  of java.net.Socket, so that they can directly expose new APIs\n  for features such as compression, security, record marking,\n  statistics collection, or firewall tunneling.\n\n  &lt;/UL&gt;\n</code></pre>\n\n<p> <P> Factory classes are specified by environment-specific configuration\n mechanisms.  For example, the <em>getDefault</em> method could return\n a factory that was appropriate for a particular user or applet, and a\n framework could use a factory customized to its own purposes.</P></p>\n\n<p> @see ServerSocketFactory</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createSocket' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.SocketFactory'>javax.net.SocketFactory</span><br/><a href='source/SocketFactory.html#javax-net-SocketFactory-method-createSocket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.SocketFactory-method-createSocket' class='name expandable'>createSocket</a>( <span class='pre'>address, port, localAddress, localPort</span> ) : Object {java.net.Socket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a socket and connect it to the specified remote address\n on the specified remote port. ...</div><div class='long'><p>Creates a socket and connect it to the specified remote address\n on the specified remote port.  The socket will also be bound\n to the local address and port suplied.  The socket is configured using\n the socket options established for this factory.\n <p>\n If there is a security manager, its <code>checkConnect</code>\n method is called with the host address and <code>port</code>\n as its arguments. This could result in a SecurityException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>address</span> : Object {InetAddress}<div class='sub-desc'><p>the server network address</p>\n</div></li><li><span class='pre'>port</span> : Number<div class='sub-desc'><p>the server port</p>\n</div></li><li><span class='pre'>localAddress</span> : Object {InetAddress}<div class='sub-desc'><p>the client network address</p>\n</div></li><li><span class='pre'>localPort</span> : Number<div class='sub-desc'><p>the client port</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.Socket}</span><div class='sub-desc'><p>the <code>Socket</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error occurs when creating the socket</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and its\n         <code>checkConnect</code> method doesn't allow the operation.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the port parameter or localPort\n         parameter is outside the specified range of valid port values,\n         which is between 0 and 65535, inclusive.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <code>address</code> is null.\n@see SecurityManager#checkConnect\n@see java.net.Socket#Socket(java.net.InetAddress, int,\n     java.net.InetAddress, int)</p>\n</div></li></ul></div></div></div><div id='method-getDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.SocketFactory'>javax.net.SocketFactory</span><br/><a href='source/SocketFactory.html#javax-net-SocketFactory-method-getDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.SocketFactory-method-getDefault' class='name expandable'>getDefault</a>( <span class='pre'></span> ) : Object {javax.net.SocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of the environment's default socket factory. ...</div><div class='long'><p>Returns a copy of the environment's default socket factory.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.SocketFactory}</span><div class='sub-desc'><p>the default <code>SocketFactory</code></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});