Ext.data.JsonP.javax_net_ServerSocketFactory({"tagname":"class","name":"javax.net.ServerSocketFactory","autodetected":{},"files":[{"filename":"ServerSocketFactory.js","href":"ServerSocketFactory.html#javax-net-ServerSocketFactory"}],"extends":"java.lang.Object","since":"1.4","author":[{"tagname":"author","name":"David Brownell","email":null}],"members":[{"name":"createServerSocket","tagname":"method","owner":"javax.net.ServerSocketFactory","id":"method-createServerSocket","meta":{}},{"name":"getDefault","tagname":"method","owner":"javax.net.ServerSocketFactory","id":"method-getDefault","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.net.ServerSocketFactory","short_doc":"This class creates server sockets. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.net.ServerSocketFactory</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ServerSocketFactory.html#javax-net-ServerSocketFactory' target='_blank'>ServerSocketFactory.js</a></div></pre><div class='doc-contents'><p>This class creates server sockets.  It may be subclassed by other\n factories, which create particular types of server sockets.  This\n provides a general framework for the addition of public socket-level\n functionality.  It is the server side analogue of a socket factory,\n and similarly provides a way to capture a variety of policies related\n to the sockets being constructed.</p>\n\n<p> <P> Like socket factories, server Socket factory instances have\n methods used to create sockets. There is also an environment\n specific default server socket factory; frameworks will often use\n their own customized factory.</P></p>\n\n<p> @see SocketFactory</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createServerSocket' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ServerSocketFactory'>javax.net.ServerSocketFactory</span><br/><a href='source/ServerSocketFactory.html#javax-net-ServerSocketFactory-method-createServerSocket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ServerSocketFactory-method-createServerSocket' class='name expandable'>createServerSocket</a>( <span class='pre'>port, backlog, ifAddress</span> ) : Object {java.net.ServerSocket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a server socket bound to the specified port,\n with a specified listen backlog and local IP. ...</div><div class='long'><p>Returns a server socket bound to the specified port,\n with a specified listen backlog and local IP.\n <P>\n The <code>ifAddress</code> argument can be used on a multi-homed\n host for a <code>ServerSocket</code> that will only accept connect\n requests to one of its addresses. If <code>ifAddress</code> is null,\n it will accept connections on all local addresses. The socket is\n configured with the socket options (such as accept timeout) given\n to this factory.\n <P>\n The <code>backlog</code> argument must be a positive\n value greater than 0. If the value passed if equal or less\n than 0, then the default value will be assumed.\n <P>\n If there is a security manager, its <code>checkListen</code>\n method is called with the <code>port</code> argument as its\n argument to ensure the operation is allowed. This could result\n in a SecurityException.</P></P></P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>port</span> : Number<div class='sub-desc'><p>the port to listen to</p>\n</div></li><li><span class='pre'>backlog</span> : Number<div class='sub-desc'><p>how many connections are queued</p>\n</div></li><li><span class='pre'>ifAddress</span> : Object {InetAddress}<div class='sub-desc'><p>the network interface address to use</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.ServerSocket}</span><div class='sub-desc'><p>the <code>ServerSocket</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException for networking errors</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and its\n         <code>checkListen</code> method doesn't allow the operation.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the port parameter is outside the\n         specified range of valid port values, which is between 0 and\n         65535, inclusive.\n@see SecurityManager#checkListen\n@see java.net.ServerSocket#ServerSocket(int, int, java.net.InetAddress)</p>\n</div></li></ul></div></div></div><div id='method-getDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ServerSocketFactory'>javax.net.ServerSocketFactory</span><br/><a href='source/ServerSocketFactory.html#javax-net-ServerSocketFactory-method-getDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ServerSocketFactory-method-getDefault' class='name expandable'>getDefault</a>( <span class='pre'></span> ) : Object {javax.net.ServerSocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of the environment's default socket factory. ...</div><div class='long'><p>Returns a copy of the environment's default socket factory.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ServerSocketFactory}</span><div class='sub-desc'><p>the <code>ServerSocketFactory</code></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});