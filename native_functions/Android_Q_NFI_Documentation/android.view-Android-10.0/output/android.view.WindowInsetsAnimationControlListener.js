Ext.data.JsonP.android_view_WindowInsetsAnimationControlListener({"tagname":"class","name":"android.view.WindowInsetsAnimationControlListener","autodetected":{},"files":[{"filename":"WindowInsetsAnimationControlListener.js","href":"WindowInsetsAnimationControlListener.html#android-view-WindowInsetsAnimationControlListener"}],"hide":true,"members":[{"name":"onCancelled","tagname":"method","owner":"android.view.WindowInsetsAnimationControlListener","id":"method-onCancelled","meta":{}},{"name":"onReady","tagname":"method","owner":"android.view.WindowInsetsAnimationControlListener","id":"method-onReady","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.WindowInsetsAnimationControlListener","short_doc":"Interface that informs the client about android.view.WindowInsetsAnimationController state changes. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/WindowInsetsAnimationControlListener.html#android-view-WindowInsetsAnimationControlListener' target='_blank'>WindowInsetsAnimationControlListener.js</a></div></pre><div class='doc-contents'><p>Interface that informs the client about <a href=\"#!/api/android.view.WindowInsetsAnimationController\" rel=\"android.view.WindowInsetsAnimationController\" class=\"docClass\">android.view.WindowInsetsAnimationController</a> state changes.\n pending unhide</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onCancelled' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.WindowInsetsAnimationControlListener'>android.view.WindowInsetsAnimationControlListener</span><br/><a href='source/WindowInsetsAnimationControlListener.html#android-view-WindowInsetsAnimationControlListener-method-onCancelled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.WindowInsetsAnimationControlListener-method-onCancelled' class='name expandable'>onCancelled</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the window no longer has control over the requested types. ...</div><div class='long'><p>Called when the window no longer has control over the requested types. If it loses control\n over one type, the whole control will be cancelled. If none of the requested types were\n available when requesting the control, the animation control will be cancelled immediately\n without <a href=\"#!/api/android.view.WindowInsetsAnimationControlListener-method-onReady\" rel=\"android.view.WindowInsetsAnimationControlListener-method-onReady\" class=\"docClass\">onReady</a> being called.</p>\n</div></div></div><div id='method-onReady' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.WindowInsetsAnimationControlListener'>android.view.WindowInsetsAnimationControlListener</span><br/><a href='source/WindowInsetsAnimationControlListener.html#android-view-WindowInsetsAnimationControlListener-method-onReady' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.WindowInsetsAnimationControlListener-method-onReady' class='name expandable'>onReady</a>( <span class='pre'>controller, types</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets called as soon as the animation is ready to be controlled. ...</div><div class='long'><p>Gets called as soon as the animation is ready to be controlled. This may be\n delayed when the IME needs to redraw because of an EditorInfo change, or when the\n window is starting up.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {WindowInsetsAnimationController}<div class='sub-desc'><p>The controller to control the inset animation.</p>\n</div></li><li><span class='pre'>types</span> : Number<div class='sub-desc'><p>The InsetTypes it was able to gain control over. Note that this may be\n              different than the types passed into\n              WindowInsetsController.controlWindowInsetsAnimation in case the window\n              wasn't able to gain the controls because it wasn't the IME target or not\n              currently the window that's controlling the system bars.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});