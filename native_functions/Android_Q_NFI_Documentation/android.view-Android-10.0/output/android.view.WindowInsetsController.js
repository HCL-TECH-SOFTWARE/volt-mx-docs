Ext.data.JsonP.android_view_WindowInsetsController({"tagname":"class","name":"android.view.WindowInsetsController","autodetected":{},"files":[{"filename":"WindowInsetsController.js","href":"WindowInsetsController.html#android-view-WindowInsetsController"}],"hide":true,"members":[{"name":"controlInputMethodAnimation","tagname":"method","owner":"android.view.WindowInsetsController","id":"method-controlInputMethodAnimation","meta":{}},{"name":"hideInputMethod","tagname":"method","owner":"android.view.WindowInsetsController","id":"method-hideInputMethod","meta":{}},{"name":"showInputMethod","tagname":"method","owner":"android.view.WindowInsetsController","id":"method-showInputMethod","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.WindowInsetsController","short_doc":"Interface to control windows that generate insets. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/WindowInsetsController.html#android-view-WindowInsetsController' target='_blank'>WindowInsetsController.js</a></div></pre><div class='doc-contents'><p>Interface to control windows that generate insets.</p>\n\n<p> TODO Needs more information and examples once the API is more baked.\n pending unhide</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-controlInputMethodAnimation' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.WindowInsetsController'>android.view.WindowInsetsController</span><br/><a href='source/WindowInsetsController.html#android-view-WindowInsetsController-method-controlInputMethodAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.WindowInsetsController-method-controlInputMethodAnimation' class='name expandable'>controlInputMethodAnimation</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets the application control the animation for showing the IME in a frame-by-frame manner by\n modifying the position ...</div><div class='long'><p>Lets the application control the animation for showing the IME in a frame-by-frame manner by\n modifying the position of the IME when it's causing insets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {WindowInsetsAnimationControlListener}<div class='sub-desc'><p>The WindowInsetsAnimationControlListener that gets called when the\n                 IME are ready to be controlled, among other callbacks.</p>\n</div></li></ul></div></div></div><div id='method-hideInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.WindowInsetsController'>android.view.WindowInsetsController</span><br/><a href='source/WindowInsetsController.html#android-view-WindowInsetsController-method-hideInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.WindowInsetsController-method-hideInputMethod' class='name expandable'>hideInputMethod</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Makes the IME disappear on screen. ...</div><div class='long'><p>Makes the IME disappear on screen.\n <p>\n Note that if the window currently doesn't have control over IME, because it doesn't have\n focus, it will apply the change as soon as the window gains control. The app can listen to\n the event by observing android.view.View.onApplyWindowInsets and checking visibility with\n android.view.WindowInsets.isVisible.\n@see <a href=\"#!/api/android.view.WindowInsetsController-method-controlInputMethodAnimation\" rel=\"android.view.WindowInsetsController-method-controlInputMethodAnimation\" class=\"docClass\">controlInputMethodAnimation</a>(WindowInsetsAnimationControlListener)\n@see <a href=\"#!/api/android.view.WindowInsetsController-method-showInputMethod\" rel=\"android.view.WindowInsetsController-method-showInputMethod\" class=\"docClass\">showInputMethod</a>()</p>\n</div></div></div><div id='method-showInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.WindowInsetsController'>android.view.WindowInsetsController</span><br/><a href='source/WindowInsetsController.html#android-view-WindowInsetsController-method-showInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.WindowInsetsController-method-showInputMethod' class='name expandable'>showInputMethod</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Makes the IME appear on screen. ...</div><div class='long'><p>Makes the IME appear on screen.\n <p>\n Note that if the window currently doesn't have control over the IME, because it doesn't have\n focus, it will apply the change as soon as the window gains control. The app can listen to\n the event by observing android.view.View.onApplyWindowInsets and checking visibility with\n android.view.WindowInsets.isVisible.\n@see <a href=\"#!/api/android.view.WindowInsetsController-method-controlInputMethodAnimation\" rel=\"android.view.WindowInsetsController-method-controlInputMethodAnimation\" class=\"docClass\">controlInputMethodAnimation</a>(WindowInsetsAnimationControlListener)\n@see <a href=\"#!/api/android.view.WindowInsetsController-method-hideInputMethod\" rel=\"android.view.WindowInsetsController-method-hideInputMethod\" class=\"docClass\">hideInputMethod</a>()</p>\n</div></div></div></div></div></div></div>","meta":{}});