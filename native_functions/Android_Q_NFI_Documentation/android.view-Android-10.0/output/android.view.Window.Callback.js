Ext.data.JsonP.android_view_Window_Callback({"tagname":"class","name":"android.view.Window.Callback","autodetected":{},"files":[{"filename":"Callback.js","href":"Callback.html#android-view-Window-Callback"}],"members":[{"name":"dispatchGenericMotionEvent","tagname":"method","owner":"android.view.Window.Callback","id":"method-dispatchGenericMotionEvent","meta":{}},{"name":"dispatchKeyEvent","tagname":"method","owner":"android.view.Window.Callback","id":"method-dispatchKeyEvent","meta":{}},{"name":"dispatchKeyShortcutEvent","tagname":"method","owner":"android.view.Window.Callback","id":"method-dispatchKeyShortcutEvent","meta":{}},{"name":"dispatchPopulateAccessibilityEvent","tagname":"method","owner":"android.view.Window.Callback","id":"method-dispatchPopulateAccessibilityEvent","meta":{}},{"name":"dispatchTouchEvent","tagname":"method","owner":"android.view.Window.Callback","id":"method-dispatchTouchEvent","meta":{}},{"name":"dispatchTrackballEvent","tagname":"method","owner":"android.view.Window.Callback","id":"method-dispatchTrackballEvent","meta":{}},{"name":"onActionModeFinished","tagname":"method","owner":"android.view.Window.Callback","id":"method-onActionModeFinished","meta":{}},{"name":"onActionModeStarted","tagname":"method","owner":"android.view.Window.Callback","id":"method-onActionModeStarted","meta":{}},{"name":"onAttachedToWindow","tagname":"method","owner":"android.view.Window.Callback","id":"method-onAttachedToWindow","meta":{}},{"name":"onContentChanged","tagname":"method","owner":"android.view.Window.Callback","id":"method-onContentChanged","meta":{}},{"name":"onCreatePanelMenu","tagname":"method","owner":"android.view.Window.Callback","id":"method-onCreatePanelMenu","meta":{}},{"name":"onCreatePanelView","tagname":"method","owner":"android.view.Window.Callback","id":"method-onCreatePanelView","meta":{}},{"name":"onDetachedFromWindow","tagname":"method","owner":"android.view.Window.Callback","id":"method-onDetachedFromWindow","meta":{}},{"name":"onMenuItemSelected","tagname":"method","owner":"android.view.Window.Callback","id":"method-onMenuItemSelected","meta":{}},{"name":"onMenuOpened","tagname":"method","owner":"android.view.Window.Callback","id":"method-onMenuOpened","meta":{}},{"name":"onPanelClosed","tagname":"method","owner":"android.view.Window.Callback","id":"method-onPanelClosed","meta":{}},{"name":"onPointerCaptureChanged","tagname":"method","owner":"android.view.Window.Callback","id":"method-onPointerCaptureChanged","meta":{}},{"name":"onPreparePanel","tagname":"method","owner":"android.view.Window.Callback","id":"method-onPreparePanel","meta":{}},{"name":"onProvideKeyboardShortcuts","tagname":"method","owner":"android.view.Window.Callback","id":"method-onProvideKeyboardShortcuts","meta":{}},{"name":"onSearchRequested","tagname":"method","owner":"android.view.Window.Callback","id":"method-onSearchRequested","meta":{}},{"name":"onWindowAttributesChanged","tagname":"method","owner":"android.view.Window.Callback","id":"method-onWindowAttributesChanged","meta":{}},{"name":"onWindowFocusChanged","tagname":"method","owner":"android.view.Window.Callback","id":"method-onWindowFocusChanged","meta":{}},{"name":"onWindowStartingActionMode","tagname":"method","owner":"android.view.Window.Callback","id":"method-onWindowStartingActionMode","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.Window.Callback","short_doc":"API from a Window back to its caller. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Callback.html#android-view-Window-Callback' target='_blank'>Callback.js</a></div></pre><div class='doc-contents'><p>API from a Window back to its caller.  This allows the client to\n intercept key dispatching, panels and menus, etc.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dispatchGenericMotionEvent' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-dispatchGenericMotionEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-dispatchGenericMotionEvent' class='name expandable'>dispatchGenericMotionEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process generic motion events. ...</div><div class='long'><p>Called to process generic motion events.  At the very least your\n implementation must call\n <a href=\"#!/api/android.view.Window-method-superDispatchGenericMotionEvent\" rel=\"android.view.Window-method-superDispatchGenericMotionEvent\" class=\"docClass\">android.view.Window.superDispatchGenericMotionEvent</a> to do the\n standard processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>The generic motion event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchKeyEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-dispatchKeyEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-dispatchKeyEvent' class='name expandable'>dispatchKeyEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process key events. ...</div><div class='long'><p>Called to process key events.  At the very least your\n implementation must call\n <a href=\"#!/api/android.view.Window-method-superDispatchKeyEvent\" rel=\"android.view.Window-method-superDispatchKeyEvent\" class=\"docClass\">android.view.Window.superDispatchKeyEvent</a> to do the\n standard key processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchKeyShortcutEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-dispatchKeyShortcutEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-dispatchKeyShortcutEvent' class='name expandable'>dispatchKeyShortcutEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process a key shortcut event. ...</div><div class='long'><p>Called to process a key shortcut event.\n At the very least your implementation must call\n <a href=\"#!/api/android.view.Window-method-superDispatchKeyShortcutEvent\" rel=\"android.view.Window-method-superDispatchKeyShortcutEvent\" class=\"docClass\">android.view.Window.superDispatchKeyShortcutEvent</a> to do the\n standard key shortcut processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key shortcut event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchPopulateAccessibilityEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-dispatchPopulateAccessibilityEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-dispatchPopulateAccessibilityEvent' class='name expandable'>dispatchPopulateAccessibilityEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process population of AccessibilityEvents. ...</div><div class='long'><p>Called to process population of AccessibilityEvents.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {AccessibilityEvent}<div class='sub-desc'><p>The event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if event population was completed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchTouchEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-dispatchTouchEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-dispatchTouchEvent' class='name expandable'>dispatchTouchEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process touch screen events. ...</div><div class='long'><p>Called to process touch screen events.  At the very least your\n implementation must call\n <a href=\"#!/api/android.view.Window-method-superDispatchTouchEvent\" rel=\"android.view.Window-method-superDispatchTouchEvent\" class=\"docClass\">android.view.Window.superDispatchTouchEvent</a> to do the\n standard touch screen processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>The touch screen event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchTrackballEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-dispatchTrackballEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-dispatchTrackballEvent' class='name expandable'>dispatchTrackballEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process trackball events. ...</div><div class='long'><p>Called to process trackball events.  At the very least your\n implementation must call\n <a href=\"#!/api/android.view.Window-method-superDispatchTrackballEvent\" rel=\"android.view.Window-method-superDispatchTrackballEvent\" class=\"docClass\">android.view.Window.superDispatchTrackballEvent</a> to do the\n standard trackball processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>The trackball event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-onActionModeFinished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onActionModeFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onActionModeFinished' class='name expandable'>onActionModeFinished</a>( <span class='pre'>mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an action mode has been finished. ...</div><div class='long'><p>Called when an action mode has been finished. The appropriate mode callback\n method will have already been invoked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Object {ActionMode}<div class='sub-desc'><p>The mode that was just finished.</p>\n</div></li></ul></div></div></div><div id='method-onActionModeStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onActionModeStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onActionModeStarted' class='name expandable'>onActionModeStarted</a>( <span class='pre'>mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an action mode has been started. ...</div><div class='long'><p>Called when an action mode has been started. The appropriate mode callback\n method will have already been invoked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Object {ActionMode}<div class='sub-desc'><p>The new mode that has just been started.</p>\n</div></li></ul></div></div></div><div id='method-onAttachedToWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onAttachedToWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onAttachedToWindow' class='name expandable'>onAttachedToWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the window has been attached to the window manager. ...</div><div class='long'><p>Called when the window has been attached to the window manager.\n See android.view.View.onAttachedToWindow()\n for more information.</p>\n</div></div></div><div id='method-onContentChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onContentChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onContentChanged' class='name expandable'>onContentChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever the content view of the screen changes\n (due to a call to\n android.view.ViewGroup.Layout...</div><div class='long'><p>This hook is called whenever the content view of the screen changes\n (due to a call to\n android.view.ViewGroup.LayoutParams)\n Window.setContentView or\n android.view.ViewGroup.LayoutParams)\n Window.addContentView).</p>\n</div></div></div><div id='method-onCreatePanelMenu' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onCreatePanelMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onCreatePanelMenu' class='name expandable'>onCreatePanelMenu</a>( <span class='pre'>featureId, menu</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Initialize the contents of the menu for panel 'featureId'. ...</div><div class='long'><p>Initialize the contents of the menu for panel 'featureId'.  This is\n called if onCreatePanelView() returns null, giving you a standard\n menu in which you can place your items.  It is only called once for\n the panel, the first time it is shown.</p>\n\n<p> <p>You can safely hold on to <var>menu</var> (and any items created\n from it), making modifications to it as desired, until the next\n time onCreatePanelMenu() is called for this feature.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>featureId</span> : Number<div class='sub-desc'><p>The panel being created.</p>\n</div></li><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The menu inside the panel.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean You must return true for the panel to be displayed;\n         if you return false it will not be shown.</p>\n</div></li></ul></div></div></div><div id='method-onCreatePanelView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onCreatePanelView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onCreatePanelView' class='name expandable'>onCreatePanelView</a>( <span class='pre'>featureId</span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Instantiate the view to display in the panel for 'featureId'. ...</div><div class='long'><p>Instantiate the view to display in the panel for 'featureId'.\n You can return null, in which case the default content (typically\n a menu) will be created for you.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>featureId</span> : Number<div class='sub-desc'><p>Which panel is being created.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>view The top-level view to place in the panel.\n@see <a href=\"#!/api/android.view.Window.Callback-method-onPreparePanel\" rel=\"android.view.Window.Callback-method-onPreparePanel\" class=\"docClass\">onPreparePanel</a></p>\n</div></li></ul></div></div></div><div id='method-onDetachedFromWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onDetachedFromWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onDetachedFromWindow' class='name expandable'>onDetachedFromWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the window has been detached from the window manager. ...</div><div class='long'><p>Called when the window has been detached from the window manager.\n See android.view.View.onDetachedFromWindow()\n for more information.</p>\n</div></div></div><div id='method-onMenuItemSelected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onMenuItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onMenuItemSelected' class='name expandable'>onMenuItemSelected</a>( <span class='pre'>featureId, item</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a panel's menu item has been selected by the user. ...</div><div class='long'><p>Called when a panel's menu item has been selected by the user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>featureId</span> : Number<div class='sub-desc'><p>The panel that the menu is in.</p>\n</div></li><li><span class='pre'>item</span> : Object {MenuItem}<div class='sub-desc'><p>The menu item that was selected.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true to finish processing of selection, or\n         false to perform the normal menu handling (calling its\n         Runnable or sending a Message to its target Handler).</p>\n</div></li></ul></div></div></div><div id='method-onMenuOpened' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onMenuOpened' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onMenuOpened' class='name expandable'>onMenuOpened</a>( <span class='pre'>featureId, menu</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a panel's menu is opened by the user. ...</div><div class='long'><p>Called when a panel's menu is opened by the user. This may also be\n called when the menu is changing from one type to another (for\n example, from the icon menu to the expanded menu).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>featureId</span> : Number<div class='sub-desc'><p>The panel that the menu is in.</p>\n</div></li><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The menu that is opened.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Return true to allow the menu to open, or false to prevent\n         the menu from opening.</p>\n</div></li></ul></div></div></div><div id='method-onPanelClosed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onPanelClosed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onPanelClosed' class='name expandable'>onPanelClosed</a>( <span class='pre'>featureId, menu</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a panel is being closed. ...</div><div class='long'><p>Called when a panel is being closed.  If another logical subsequent\n panel is being opened (and this panel is being closed to make room for the subsequent\n panel), this method will NOT be called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>featureId</span> : Number<div class='sub-desc'><p>The panel that is being displayed.</p>\n</div></li><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>If onCreatePanelView() returned null, this is the Menu\n            being displayed in the panel.</p>\n</div></li></ul></div></div></div><div id='method-onPointerCaptureChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onPointerCaptureChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onPointerCaptureChanged' class='name expandable'>onPointerCaptureChanged</a>( <span class='pre'>hasCapture</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when pointer capture is enabled or disabled for the current window. ...</div><div class='long'><p>Called when pointer capture is enabled or disabled for the current window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hasCapture</span> : Boolean<div class='sub-desc'><p>True if the window has pointer capture.</p>\n</div></li></ul></div></div></div><div id='method-onPreparePanel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onPreparePanel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onPreparePanel' class='name expandable'>onPreparePanel</a>( <span class='pre'>featureId, view, menu</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepare a panel to be displayed. ...</div><div class='long'><p>Prepare a panel to be displayed.  This is called right before the\n panel window is shown, every time it is shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>featureId</span> : Number<div class='sub-desc'><p>The panel that is being displayed.</p>\n</div></li><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The View that was returned by onCreatePanelView().</p>\n</div></li><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>If onCreatePanelView() returned null, this is the Menu\n             being displayed in the panel.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean You must return true for the panel to be displayed;\n         if you return false it will not be shown.\n@see <a href=\"#!/api/android.view.Window.Callback-method-onCreatePanelView\" rel=\"android.view.Window.Callback-method-onCreatePanelView\" class=\"docClass\">onCreatePanelView</a></p>\n</div></li></ul></div></div></div><div id='method-onProvideKeyboardShortcuts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onProvideKeyboardShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onProvideKeyboardShortcuts' class='name expandable'>onProvideKeyboardShortcuts</a>( <span class='pre'>data, menu, deviceId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when Keyboard Shortcuts are requested for the current window. ...</div><div class='long'><p>Called when Keyboard Shortcuts are requested for the current window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object {java.util.List}<div class='sub-desc'><p>The data list to populate with shortcuts.</p>\n</div></li><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The current menu, which may be null.</p>\n</div></li><li><span class='pre'>deviceId</span> : Number<div class='sub-desc'><p>The id for the connected device the shortcuts should be provided for.</p>\n</div></li></ul></div></div></div><div id='method-onSearchRequested' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onSearchRequested' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onSearchRequested' class='name expandable'>onSearchRequested</a>( <span class='pre'>searchEvent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the user signals the desire to start a search. ...</div><div class='long'><p>Called when the user signals the desire to start a search.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>searchEvent</span> : Object {SearchEvent}<div class='sub-desc'><p>A SearchEvent describing the signal to\n                   start a search.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if search launched, false if activity refuses (blocks)</p>\n</div></li></ul></div></div></div><div id='method-onWindowAttributesChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onWindowAttributesChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onWindowAttributesChanged' class='name expandable'>onWindowAttributesChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called whenever the current window attributes change. ...</div><div class='long'><p>This is called whenever the current window attributes change.</p>\n</div></div></div><div id='method-onWindowFocusChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onWindowFocusChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onWindowFocusChanged' class='name expandable'>onWindowFocusChanged</a>( <span class='pre'>hasFocus</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever the window focus changes. ...</div><div class='long'><p>This hook is called whenever the window focus changes.  See\n android.view.View.onWindowFocusChangedNotLocked(boolean) for more information.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hasFocus</span> : Boolean<div class='sub-desc'><p>Whether the window now has focus.</p>\n</div></li></ul></div></div></div><div id='method-onWindowStartingActionMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.Window.Callback'>android.view.Window.Callback</span><br/><a href='source/Callback.html#android-view-Window-Callback-method-onWindowStartingActionMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.Window.Callback-method-onWindowStartingActionMode' class='name expandable'>onWindowStartingActionMode</a>( <span class='pre'>callback, type</span> ) : Object {android.view.ActionMode}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an action mode is being started for this window. ...</div><div class='long'><p>Called when an action mode is being started for this window. Gives the\n callback an opportunity to handle the action mode in its own unique and\n beautiful way. If this method returns null the system can choose a way\n to present the mode or choose not to start the mode at all.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {ActionMode.Callback}<div class='sub-desc'><p>Callback to control the lifecycle of this action mode</p>\n</div></li><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>One of ActionMode.TYPE_PRIMARY or ActionMode.TYPE_FLOATING.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.ActionMode}</span><div class='sub-desc'><p>The ActionMode that was started, or null if the system should present it</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});