Ext.data.JsonP.android_service_restrictions_RestrictionsReceiver({"tagname":"class","name":"android.service.restrictions.RestrictionsReceiver","autodetected":{},"files":[{"filename":"RestrictionsReceiver.js","href":"RestrictionsReceiver.html#android-service-restrictions-RestrictionsReceiver"}],"extends":"android.content.BroadcastReceiver","members":[{"name":"onReceive","tagname":"method","owner":"android.service.restrictions.RestrictionsReceiver","id":"method-onReceive","meta":{}},{"name":"onRequestPermission","tagname":"method","owner":"android.service.restrictions.RestrictionsReceiver","id":"method-onRequestPermission","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.service.restrictions.RestrictionsReceiver","short_doc":"Abstract implementation of a Restrictions Provider BroadcastReceiver. ...","classIcon":"icon-class","superclasses":["android.content.BroadcastReceiver"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.content.BroadcastReceiver<div class='subclass '><strong>android.service.restrictions.RestrictionsReceiver</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RestrictionsReceiver.html#android-service-restrictions-RestrictionsReceiver' target='_blank'>RestrictionsReceiver.js</a></div></pre><div class='doc-contents'><p>Abstract implementation of a Restrictions Provider BroadcastReceiver. To implement a\n Restrictions Provider, extend from this class and implement the abstract methods.\n Export this receiver in the manifest. A profile owner device admin can then register this\n component as a Restrictions Provider using\n ComponentName).\n <p>\n The function of a Restrictions Provider is to transport permission requests from apps on this\n device to an administrator (most likely on a remote device or computer) and deliver back\n responses. The response should be sent back to the app via\n PersistableBundle).</p>\n\n<p> @see RestrictionsManager</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onReceive' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.restrictions.RestrictionsReceiver'>android.service.restrictions.RestrictionsReceiver</span><br/><a href='source/RestrictionsReceiver.html#android-service-restrictions-RestrictionsReceiver-method-onReceive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.restrictions.RestrictionsReceiver-method-onReceive' class='name expandable'>onReceive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Intercept standard Restrictions Provider broadcasts. ...</div><div class='long'><p>Intercept standard Restrictions Provider broadcasts.  Implementations\n should not override this method; it is better to implement the\n convenience callbacks for each action.</p>\n</div></div></div><div id='method-onRequestPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.restrictions.RestrictionsReceiver'>android.service.restrictions.RestrictionsReceiver</span><br/><a href='source/RestrictionsReceiver.html#android-service-restrictions-RestrictionsReceiver-method-onRequestPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.restrictions.RestrictionsReceiver-method-onRequestPermission' class='name expandable'>onRequestPermission</a>( <span class='pre'>packageName, requestType, request</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>An asynchronous permission request made by an application for an operation that requires\n authorization by a local or...</div><div class='long'><p>An asynchronous permission request made by an application for an operation that requires\n authorization by a local or remote administrator other than the user. The Restrictions\n Provider should transfer the request to the administrator and deliver back a response, when\n available. The calling application is aware that the response could take an indefinite\n amount of time.\n <p>\n If the request bundle contains the key RestrictionsManager.REQUEST_KEY_NEW_REQUEST,\n then a new request must be sent. Otherwise the provider can look up any previous response\n to the same requestId and return the cached response.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : Object {Context}<div class='sub-desc'><p>the application requesting permission.</p>\n</div></li><li><span class='pre'>requestType</span> : String<div class='sub-desc'><p>the type of request, which determines the content and presentation of\n the request data.</p>\n</div></li><li><span class='pre'>request</span> : String<div class='sub-desc'><p>the request data bundle containing at a minimum a request id.\n@see RestrictionsManager#REQUEST_TYPE_APPROVAL\n@see RestrictionsManager#REQUEST_KEY_ID</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});