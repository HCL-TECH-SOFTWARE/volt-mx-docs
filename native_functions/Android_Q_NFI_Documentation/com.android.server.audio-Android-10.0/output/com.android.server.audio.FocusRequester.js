Ext.data.JsonP.com_android_server_audio_FocusRequester({"tagname":"class","name":"com.android.server.audio.FocusRequester","autodetected":{},"files":[{"filename":"FocusRequester.js","href":"FocusRequester.html#com-android-server-audio-FocusRequester"}],"extends":"java.lang.Object","hide":true,"members":[],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.audio.FocusRequester","short_doc":"Class to handle all the information about a user of audio focus. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.audio.FocusRequester</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FocusRequester.html#com-android-server-audio-FocusRequester' target='_blank'>FocusRequester.js</a></div></pre><div class='doc-contents'><p>Class to handle all the information about a user of audio focus. The lifecycle of each\n instance is managed by android.media.MediaFocusControl, from its addition to the audio focus\n stack, or the map of focus owners for an external focus policy, to its release.</p>\n</div><div class='members'></div></div>","meta":{}});