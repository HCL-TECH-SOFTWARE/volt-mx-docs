Ext.data.JsonP.com_android_server_policy_WindowManagerPolicy({"tagname":"class","name":"com.android.server.policy.WindowManagerPolicy","autodetected":{},"files":[{"filename":"WindowManagerPolicy.js","href":"WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy"}],"members":[{"name":"ACTION_PASS_TO_USER","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-ACTION_PASS_TO_USER","meta":{}},{"name":"COLOR_FADE_LAYER","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-COLOR_FADE_LAYER","meta":{}},{"name":"FINISH_LAYOUT_REDO_ANIM","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-FINISH_LAYOUT_REDO_ANIM","meta":{}},{"name":"FINISH_LAYOUT_REDO_CONFIG","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-FINISH_LAYOUT_REDO_CONFIG","meta":{}},{"name":"FINISH_LAYOUT_REDO_LAYOUT","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-FINISH_LAYOUT_REDO_LAYOUT","meta":{}},{"name":"FINISH_LAYOUT_REDO_WALLPAPER","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-FINISH_LAYOUT_REDO_WALLPAPER","meta":{}},{"name":"TRANSIT_ENTER","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-TRANSIT_ENTER","meta":{}},{"name":"TRANSIT_EXIT","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-TRANSIT_EXIT","meta":{}},{"name":"TRANSIT_HIDE","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-TRANSIT_HIDE","meta":{}},{"name":"TRANSIT_PREVIEW_DONE","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-TRANSIT_PREVIEW_DONE","meta":{}},{"name":"TRANSIT_SHOW","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-TRANSIT_SHOW","meta":{}},{"name":"USER_ROTATION_FREE","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-USER_ROTATION_FREE","meta":{}},{"name":"USER_ROTATION_LOCKED","tagname":"property","owner":"com.android.server.policy.WindowManagerPolicy","id":"property-USER_ROTATION_LOCKED","meta":{}},{"name":"addSplashScreen","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-addSplashScreen","meta":{}},{"name":"adjustConfigurationLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-adjustConfigurationLw","meta":{}},{"name":"applyKeyguardPolicyLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-applyKeyguardPolicyLw","meta":{}},{"name":"canBeHiddenByKeyguardLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-canBeHiddenByKeyguardLw","meta":{}},{"name":"canDismissBootAnimation","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-canDismissBootAnimation","meta":{}},{"name":"checkAddPermission","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-checkAddPermission","meta":{}},{"name":"checkShowToOwnerOnly","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-checkShowToOwnerOnly","meta":{}},{"name":"createHiddenByKeyguardExit","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-createHiddenByKeyguardExit","meta":{}},{"name":"createKeyguardWallpaperExit","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-createKeyguardWallpaperExit","meta":{}},{"name":"dismissKeyguardLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-dismissKeyguardLw","meta":{}},{"name":"dispatchUnhandledKey","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-dispatchUnhandledKey","meta":{}},{"name":"dump","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-dump","meta":{}},{"name":"enableKeyguard","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-enableKeyguard","meta":{}},{"name":"enableScreenAfterBoot","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-enableScreenAfterBoot","meta":{}},{"name":"exitKeyguardSecurely","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-exitKeyguardSecurely","meta":{}},{"name":"finishedGoingToSleep","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-finishedGoingToSleep","meta":{}},{"name":"finishedWakingUp","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-finishedWakingUp","meta":{}},{"name":"getFoldedArea","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-getFoldedArea","meta":{}},{"name":"getMaxWallpaperLayer","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-getMaxWallpaperLayer","meta":{}},{"name":"getSubWindowLayerFromTypeLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-getSubWindowLayerFromTypeLw","meta":{}},{"name":"getUiMode","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-getUiMode","meta":{}},{"name":"getWindowLayerFromTypeLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-getWindowLayerFromTypeLw","meta":{}},{"name":"getWindowLayerLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-getWindowLayerLw","meta":{}},{"name":"hasNavigationBar","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-hasNavigationBar","meta":{}},{"name":"hideBootMessages","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-hideBootMessages","meta":{}},{"name":"inKeyguardRestrictedKeyInputMode","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-inKeyguardRestrictedKeyInputMode","meta":{}},{"name":"init","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-init","meta":{}},{"name":"interceptKeyBeforeDispatching","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-interceptKeyBeforeDispatching","meta":{}},{"name":"interceptKeyBeforeQueueing","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-interceptKeyBeforeQueueing","meta":{}},{"name":"interceptMotionBeforeQueueingNonInteractive","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-interceptMotionBeforeQueueingNonInteractive","meta":{}},{"name":"isKeyguardDrawnLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isKeyguardDrawnLw","meta":{}},{"name":"isKeyguardHostWindow","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isKeyguardHostWindow","meta":{}},{"name":"isKeyguardLocked","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isKeyguardLocked","meta":{}},{"name":"isKeyguardOccluded","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isKeyguardOccluded","meta":{}},{"name":"isKeyguardSecure","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isKeyguardSecure","meta":{}},{"name":"isKeyguardShowingAndNotOccluded","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isKeyguardShowingAndNotOccluded","meta":{}},{"name":"isKeyguardTrustedLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isKeyguardTrustedLw","meta":{}},{"name":"isScreenOn","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isScreenOn","meta":{}},{"name":"isTopLevelWindow","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isTopLevelWindow","meta":{}},{"name":"isUserSetupComplete","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-isUserSetupComplete","meta":{}},{"name":"keepScreenOnStartedLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-keepScreenOnStartedLw","meta":{}},{"name":"keepScreenOnStoppedLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-keepScreenOnStoppedLw","meta":{}},{"name":"lockNow","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-lockNow","meta":{}},{"name":"notifyCameraLensCoverSwitchChanged","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-notifyCameraLensCoverSwitchChanged","meta":{}},{"name":"notifyLidSwitchChanged","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-notifyLidSwitchChanged","meta":{}},{"name":"okToAnimate","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-okToAnimate","meta":{}},{"name":"onDefaultDisplayFocusChangedLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-onDefaultDisplayFocusChangedLw","meta":{}},{"name":"onKeyguardOccludedChangedLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-onKeyguardOccludedChangedLw","meta":{}},{"name":"onSystemUiStarted","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-onSystemUiStarted","meta":{}},{"name":"performHapticFeedback","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-performHapticFeedback","meta":{}},{"name":"registerDisplayFoldListener","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-registerDisplayFoldListener","meta":{}},{"name":"requestUserActivityNotification","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-requestUserActivityNotification","meta":{}},{"name":"screenTurnedOff","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-screenTurnedOff","meta":{}},{"name":"screenTurnedOn","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-screenTurnedOn","meta":{}},{"name":"screenTurningOff","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-screenTurningOff","meta":{}},{"name":"screenTurningOn","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-screenTurningOn","meta":{}},{"name":"setAllowLockscreenWhenOn","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setAllowLockscreenWhenOn","meta":{}},{"name":"setAodShowing","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setAodShowing","meta":{}},{"name":"setCurrentUserLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setCurrentUserLw","meta":{}},{"name":"setDefaultDisplay","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setDefaultDisplay","meta":{}},{"name":"setKeyguardCandidateLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setKeyguardCandidateLw","meta":{}},{"name":"setNavBarVirtualKeyHapticFeedbackEnabledLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setNavBarVirtualKeyHapticFeedbackEnabledLw","meta":{}},{"name":"setOverrideFoldedArea","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setOverrideFoldedArea","meta":{}},{"name":"setPipVisibilityLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setPipVisibilityLw","meta":{}},{"name":"setRecentsVisibilityLw","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setRecentsVisibilityLw","meta":{}},{"name":"setSafeMode","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setSafeMode","meta":{}},{"name":"setSwitchingUser","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setSwitchingUser","meta":{}},{"name":"setTopFocusedDisplay","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-setTopFocusedDisplay","meta":{}},{"name":"showBootMessage","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-showBootMessage","meta":{}},{"name":"startKeyguardExitAnimation","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-startKeyguardExitAnimation","meta":{}},{"name":"startedGoingToSleep","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-startedGoingToSleep","meta":{}},{"name":"startedWakingUp","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-startedWakingUp","meta":{}},{"name":"systemBooted","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-systemBooted","meta":{}},{"name":"systemReady","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-systemReady","meta":{}},{"name":"unregisterDisplayFoldListener","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-unregisterDisplayFoldListener","meta":{}},{"name":"userActivity","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-userActivity","meta":{}},{"name":"userRotationModeToString","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-userRotationModeToString","meta":{}},{"name":"writeToProto","tagname":"method","owner":"com.android.server.policy.WindowManagerPolicy","id":"method-writeToProto","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.policy.WindowManagerPolicy","short_doc":"implements android.view.WindowManagerPolicyConstants\n\n This interface supplies all UI-specific behavior of the window...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy' target='_blank'>WindowManagerPolicy.js</a></div></pre><div class='doc-contents'><p>implements android.view.WindowManagerPolicyConstants</p>\n\n<p> This interface supplies all UI-specific behavior of the window manager.  An\n instance of it is created by the window manager when it starts up, and allows\n customization of window layering, special window types, key dispatching, and\n layout.</p>\n\n<p> <p>Because this provides deep interaction with the system window manager,\n specific methods on this interface can be called from a variety of contexts\n with various restrictions on what they can do.  These are encoded through\n a suffixes at the end of a method encoding the thread the method is called\n from and any locks that are held when it is being called; if no suffix\n is attached to a method, then it is not called with any locks and may be\n called from the main window manager thread or another thread calling into\n the window manager.</p>\n\n<p> <p>The current suffixes are:</p>\n\n<p> <dl>\n <dt> Ti <dd> Called from the input thread.  This is the thread that\n collects pending input events and dispatches them to the appropriate window.\n It may block waiting for events to be processed, so that the input stream is\n properly serialized.\n <dt> Tq <dd> Called from the low-level input queue thread.  This is the\n thread that reads events out of the raw input devices and places them\n into the global input queue that is read by the <var>Ti</var> thread.\n This thread should not block for a long period of time on anything but the\n key driver.\n <dt> Lw <dd> Called with the main window manager lock held.  Because the\n window manager is a very low-level system service, there are few other\n system services you can call with this lock held.  It is explicitly okay to\n make calls into the package manager and power manager; it is explicitly not\n okay to make calls into the activity manager or most other services.  Note that\n int, int) and\n variations require calling into the activity manager.\n <dt> Li <dd> Called with the input thread lock held.  This lock can be\n acquired by the window manager while it holds the window lock, so this is\n even more restrictive than <var>Lw</var>.\n </dd></dt></dd></dt></dd></dt></dd></dt></dl></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_PASS_TO_USER' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-ACTION_PASS_TO_USER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-ACTION_PASS_TO_USER' class='name expandable'>ACTION_PASS_TO_USER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Pass this event to the user / app. ...</div><div class='long'><p>Pass this event to the user / app.  To be returned from\n<a href=\"#!/api/com.android.server.policy.WindowManagerPolicy-method-interceptKeyBeforeQueueing\" rel=\"com.android.server.policy.WindowManagerPolicy-method-interceptKeyBeforeQueueing\" class=\"docClass\">interceptKeyBeforeQueueing</a>.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-COLOR_FADE_LAYER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-COLOR_FADE_LAYER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-COLOR_FADE_LAYER' class='name expandable'>COLOR_FADE_LAYER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Layer for the screen off animation ...</div><div class='long'><p>Layer for the screen off animation</p>\n<p>Defaults to: <code>&quot;1073741825&quot;</code></p></div></div></div><div id='property-FINISH_LAYOUT_REDO_ANIM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-FINISH_LAYOUT_REDO_ANIM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-FINISH_LAYOUT_REDO_ANIM' class='name expandable'>FINISH_LAYOUT_REDO_ANIM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Need to recompute animations ...</div><div class='long'><p>Need to recompute animations</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-FINISH_LAYOUT_REDO_CONFIG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-FINISH_LAYOUT_REDO_CONFIG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-FINISH_LAYOUT_REDO_CONFIG' class='name expandable'>FINISH_LAYOUT_REDO_CONFIG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Configuration state may have changed ...</div><div class='long'><p>Configuration state may have changed</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-FINISH_LAYOUT_REDO_LAYOUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-FINISH_LAYOUT_REDO_LAYOUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-FINISH_LAYOUT_REDO_LAYOUT' class='name expandable'>FINISH_LAYOUT_REDO_LAYOUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Layout state may have changed (so another layout will be performed) ...</div><div class='long'><p>Layout state may have changed (so another layout will be performed)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-FINISH_LAYOUT_REDO_WALLPAPER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-FINISH_LAYOUT_REDO_WALLPAPER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-FINISH_LAYOUT_REDO_WALLPAPER' class='name expandable'>FINISH_LAYOUT_REDO_WALLPAPER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Wallpaper may need to move ...</div><div class='long'><p>Wallpaper may need to move</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-TRANSIT_ENTER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-TRANSIT_ENTER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-TRANSIT_ENTER' class='name expandable'>TRANSIT_ENTER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Window has been added to the screen. ...</div><div class='long'><p>Window has been added to the screen.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-TRANSIT_EXIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-TRANSIT_EXIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-TRANSIT_EXIT' class='name expandable'>TRANSIT_EXIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Window has been removed from the screen. ...</div><div class='long'><p>Window has been removed from the screen.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-TRANSIT_HIDE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-TRANSIT_HIDE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-TRANSIT_HIDE' class='name expandable'>TRANSIT_HIDE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Window has been made invisible. ...</div><div class='long'><p>Window has been made invisible.\n TODO: Consider removal as this is unused.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-TRANSIT_PREVIEW_DONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-TRANSIT_PREVIEW_DONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-TRANSIT_PREVIEW_DONE' class='name expandable'>TRANSIT_PREVIEW_DONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The \"application starting\" preview window is no longer needed, and will\n animate away to show the real window. ...</div><div class='long'><p>The \"application starting\" preview window is no longer needed, and will\n animate away to show the real window.</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-TRANSIT_SHOW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-TRANSIT_SHOW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-TRANSIT_SHOW' class='name expandable'>TRANSIT_SHOW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Window has been made visible. ...</div><div class='long'><p>Window has been made visible.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-USER_ROTATION_FREE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-USER_ROTATION_FREE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-USER_ROTATION_FREE' class='name expandable'>USER_ROTATION_FREE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>When not otherwise specified by the activity's screenOrientation, rotation should be\n determined by the system (that ...</div><div class='long'><p>When not otherwise specified by the activity's screenOrientation, rotation should be\n determined by the system (that is, using sensors).</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-USER_ROTATION_LOCKED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-property-USER_ROTATION_LOCKED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-property-USER_ROTATION_LOCKED' class='name expandable'>USER_ROTATION_LOCKED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>When not otherwise specified by the activity's screenOrientation, rotation is set by\n the user. ...</div><div class='long'><p>When not otherwise specified by the activity's screenOrientation, rotation is set by\n the user.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addSplashScreen' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-addSplashScreen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-addSplashScreen' class='name expandable'>addSplashScreen</a>( <span class='pre'>appToken, packageName, theme, nonLocalizedLabel, labelRes, icon, windowFlags, overrideConfig, displayId</span> ) : Object {com.android.server.policy.WindowManagerPolicy.StartingSurface}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the system would like to show a UI to indicate that an\n application is starting. ...</div><div class='long'><p>Called when the system would like to show a UI to indicate that an\n application is starting.  You can use this to add a\n APPLICATION_STARTING_TYPE window with the given appToken to the window\n manager (using the normal window manager APIs) that will be shown until\n the application displays its own window.  This is called without the\n window manager locked so that you can call back into it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>appToken</span> : Object {IBinder}<div class='sub-desc'><p>Token of the application being started.</p>\n</div></li><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The name of the application package being started.</p>\n</div></li><li><span class='pre'>theme</span> : Number<div class='sub-desc'><p>Resource defining the application's overall visual theme.</p>\n</div></li><li><span class='pre'>nonLocalizedLabel</span> : Object {CompatibilityInfo}<div class='sub-desc'><p>The default title label of the application if\n        no data is found in the resource.</p>\n</div></li><li><span class='pre'>labelRes</span> : Object {CharSequence}<div class='sub-desc'><p>The resource ID the application would like to use as its name.</p>\n</div></li><li><span class='pre'>icon</span> : Number<div class='sub-desc'><p>The resource ID the application would like to use as its icon.</p>\n</div></li><li><span class='pre'>windowFlags</span> : Number<div class='sub-desc'><p>Window layout flags.</p>\n</div></li><li><span class='pre'>overrideConfig</span> : Number<div class='sub-desc'><p>override configuration to consider when generating\n        context to for resources.</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>Id of the display to show the splash screen at.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.server.policy.WindowManagerPolicy.StartingSurface}</span><div class='sub-desc'><p>The starting surface.</p>\n</div></li></ul></div></div></div><div id='method-adjustConfigurationLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-adjustConfigurationLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-adjustConfigurationLw' class='name expandable'>adjustConfigurationLw</a>( <span class='pre'>config, keyboardPresence, navigationPresence</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>After the window manager has computed the current configuration based\n on its knowledge of the display and input devi...</div><div class='long'><p>After the window manager has computed the current configuration based\n on its knowledge of the display and input devices, it gives the policy\n a chance to adjust the information contained in it.  If you want to\n leave it as-is, simply do nothing.</p>\n\n<p> <p>This method may be called by any thread in the window manager, but\n no internal locks in the window manager will be held.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {Configuration}<div class='sub-desc'><p>The Configuration being computed, for you to change as\n desired.</p>\n</div></li><li><span class='pre'>keyboardPresence</span> : Number<div class='sub-desc'><p>Flags that indicate whether internal or external\n keyboards are present.</p>\n</div></li><li><span class='pre'>navigationPresence</span> : Number<div class='sub-desc'><p>Flags that indicate whether internal or external\n navigation devices are present.</p>\n</div></li></ul></div></div></div><div id='method-applyKeyguardPolicyLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-applyKeyguardPolicyLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-applyKeyguardPolicyLw' class='name expandable'>applyKeyguardPolicyLw</a>( <span class='pre'>win, imeTarget</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Apply the keyguard policy to a specific window. ...</div><div class='long'><p>Apply the keyguard policy to a specific window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>win</span> : Object {WindowManagerPolicy.WindowState}<div class='sub-desc'><p>The window to apply the keyguard policy.</p>\n</div></li><li><span class='pre'>imeTarget</span> : Object {WindowManagerPolicy.WindowState}<div class='sub-desc'><p>The current IME target window.</p>\n</div></li></ul></div></div></div><div id='method-canBeHiddenByKeyguardLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-canBeHiddenByKeyguardLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-canBeHiddenByKeyguardLw' class='name expandable'>canBeHiddenByKeyguardLw</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether {@param win} can be hidden by Keyguard</p>\n</div></li></ul></div></div></div><div id='method-canDismissBootAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-canDismissBootAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-canDismissBootAnimation' class='name expandable'>canDismissBootAnimation</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the policy is ready for dismissing the boot animation and completing the boot. ...</div><div class='long'><p>Checks whether the policy is ready for dismissing the boot animation and completing the boot.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if ready; false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-checkAddPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-checkAddPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-checkAddPermission' class='name expandable'>checkAddPermission</a>( <span class='pre'>attrs, outAppOp</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Check permissions when adding a window. ...</div><div class='long'><p>Check permissions when adding a window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attrs</span> : Object {WindowManager.LayoutParams}<div class='sub-desc'><p>The window's LayoutParams.</p>\n</div></li><li><span class='pre'>outAppOp</span> : Object {int[]}<div class='sub-desc'><p>First element will be filled with the app op corresponding to\n                 this window, or OP_NONE.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>WindowManagerGlobal.ADD_OKAY if the add can proceed;\n      else an error code, usually\n      WindowManagerGlobal.ADD_PERMISSION_DENIED, to abort the add.</p>\n</div></li></ul></div></div></div><div id='method-checkShowToOwnerOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-checkShowToOwnerOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-checkShowToOwnerOnly' class='name expandable'>checkShowToOwnerOnly</a>( <span class='pre'>attrs</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check permissions when adding a window. ...</div><div class='long'><p>Check permissions when adding a window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attrs</span> : Object {WindowManager.LayoutParams}<div class='sub-desc'><p>The window's LayoutParams.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the window may only be shown to the current user, false if the window can\n be shown on all users' windows.</p>\n</div></li></ul></div></div></div><div id='method-createHiddenByKeyguardExit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-createHiddenByKeyguardExit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-createHiddenByKeyguardExit' class='name expandable'>createHiddenByKeyguardExit</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create and return an animation to re-display a window that was force hidden by Keyguard. ...</div><div class='long'><p>Create and return an animation to re-display a window that was force hidden by Keyguard.</p>\n</div></div></div><div id='method-createKeyguardWallpaperExit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-createKeyguardWallpaperExit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-createKeyguardWallpaperExit' class='name expandable'>createKeyguardWallpaperExit</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create and return an animation to let the wallpaper disappear after being shown behind\n Keyguard. ...</div><div class='long'><p>Create and return an animation to let the wallpaper disappear after being shown behind\n Keyguard.</p>\n</div></div></div><div id='method-dismissKeyguardLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-dismissKeyguardLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-dismissKeyguardLw' class='name expandable'>dismissKeyguardLw</a>( <span class='pre'>callback, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask the policy to dismiss the keyguard, if it is currently shown. ...</div><div class='long'><p>Ask the policy to dismiss the keyguard, if it is currently shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {IKeyguardDismissCallback}<div class='sub-desc'><p>Callback to be informed about the result.</p>\n</div></li><li><span class='pre'>message</span> : Object {CharSequence}<div class='sub-desc'><p>A message that should be displayed in the keyguard.</p>\n</div></li></ul></div></div></div><div id='method-dispatchUnhandledKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-dispatchUnhandledKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-dispatchUnhandledKey' class='name expandable'>dispatchUnhandledKey</a>( <span class='pre'>win, event, policyFlags</span> ) : Object {android.view.KeyEvent}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called from the input dispatcher thread when an application did not handle\n a key that was dispatched to it. ...</div><div class='long'><p>Called from the input dispatcher thread when an application did not handle\n a key that was dispatched to it.</p>\n\n<p> <p>Allows you to define default global behavior for keys that were not handled\n by applications.  This method is called from the input thread, with no locks held.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>win</span> : Object {WindowManagerPolicy.WindowState}<div class='sub-desc'><p>The window that currently has focus.  This is where the key\n            event will normally go.</p>\n</div></li><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key event.</p>\n</div></li><li><span class='pre'>policyFlags</span> : Number<div class='sub-desc'><p>The policy flags associated with the key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.KeyEvent}</span><div class='sub-desc'><p>Returns an alternate key event to redispatch as a fallback, or null to give up.\n The caller is responsible for recycling the key event.</p>\n</div></li></ul></div></div></div><div id='method-dump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-dump' class='name expandable'>dump</a>( <span class='pre'>prefix, writer, args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Print the WindowManagerPolicy's state into the given stream. ...</div><div class='long'><p>Print the WindowManagerPolicy's state into the given stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : String<div class='sub-desc'><p>Text to print at the front of each line.</p>\n</div></li><li><span class='pre'>writer</span> : Object {PrintWriter}<div class='sub-desc'><p>The PrintWriter to which you should dump your state.  This will be\n closed for you after you return.</p>\n</div></li><li><span class='pre'>args</span> : Object {java.lang.String[]}<div class='sub-desc'><p>additional arguments to the dump request.</p>\n</div></li></ul></div></div></div><div id='method-enableKeyguard' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-enableKeyguard' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-enableKeyguard' class='name expandable'>enableKeyguard</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the policy if anyone is requesting that keyguard not come on. ...</div><div class='long'><p>Tell the policy if anyone is requesting that keyguard not come on.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>Whether keyguard can be on or not.  does not actually\n turn it on, unless it was previously disabled with this function.\n@see android.app.KeyguardManager.KeyguardLock#disableKeyguard()\n@see android.app.KeyguardManager.KeyguardLock#reenableKeyguard()</p>\n</div></li></ul></div></div></div><div id='method-enableScreenAfterBoot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-enableScreenAfterBoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-enableScreenAfterBoot' class='name expandable'>enableScreenAfterBoot</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when we have finished booting and can now display the home\n screen to the user. ...</div><div class='long'><p>Called when we have finished booting and can now display the home\n screen to the user.  This will happen after systemReady(), and at\n this point the display is active.</p>\n</div></div></div><div id='method-exitKeyguardSecurely' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-exitKeyguardSecurely' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-exitKeyguardSecurely' class='name expandable'>exitKeyguardSecurely</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the policy if anyone is requesting the keyguard to exit securely\n (this would be called after the keyguard was d...</div><div class='long'><p>Tell the policy if anyone is requesting the keyguard to exit securely\n (this would be called after the keyguard was disabled)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {WindowManagerPolicy.OnKeyguardExitResult}<div class='sub-desc'><p>Callback to send the result back.\n@see android.app.KeyguardManager#exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)</p>\n</div></li></ul></div></div></div><div id='method-finishedGoingToSleep' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-finishedGoingToSleep' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-finishedGoingToSleep' class='name expandable'>finishedGoingToSleep</a>( <span class='pre'>why</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the device has finished going to sleep. ...</div><div class='long'><p>Called when the device has finished going to sleep.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>why</span> : Number<div class='sub-desc'><p>OFF_BECAUSE_OF_USER, OFF_BECAUSE_OF_ADMIN,\n or OFF_BECAUSE_OF_TIMEOUT.</p>\n</div></li></ul></div></div></div><div id='method-finishedWakingUp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-finishedWakingUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-finishedWakingUp' class='name expandable'>finishedWakingUp</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the device has finished waking up. ...</div><div class='long'><p>Called when the device has finished waking up.</p>\n</div></div></div><div id='method-getFoldedArea' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-getFoldedArea' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-getFoldedArea' class='name expandable'>getFoldedArea</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the display folded area. ...</div><div class='long'><p>Get the display folded area.</p>\n</div></div></div><div id='method-getMaxWallpaperLayer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-getMaxWallpaperLayer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-getMaxWallpaperLayer' class='name expandable'>getMaxWallpaperLayer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the highest layer (actually one more than) that the wallpaper is\n allowed to be in. ...</div><div class='long'><p>Get the highest layer (actually one more than) that the wallpaper is\n allowed to be in.</p>\n</div></div></div><div id='method-getSubWindowLayerFromTypeLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-getSubWindowLayerFromTypeLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-getSubWindowLayerFromTypeLw' class='name expandable'>getSubWindowLayerFromTypeLw</a>( <span class='pre'>type</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return how to Z-order sub-windows in relation to the window they are attached to. ...</div><div class='long'><p>Return how to Z-order sub-windows in relation to the window they are attached to.\n Return positive to have them ordered in front, negative for behind.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>The sub-window type code.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int Layer in relation to the attached window, where positive is\n         above and negative is below.</p>\n</div></li></ul></div></div></div><div id='method-getUiMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-getUiMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-getUiMode' class='name expandable'>getUiMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current UI mode. ...</div><div class='long'><p>Returns the current UI mode.</p>\n</div></div></div><div id='method-getWindowLayerFromTypeLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-getWindowLayerFromTypeLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-getWindowLayerFromTypeLw' class='name expandable'>getWindowLayerFromTypeLw</a>( <span class='pre'>type, canAddInternalSystemWindow</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the layer assignment for the window type. ...</div><div class='long'><p>Returns the layer assignment for the window type. Allows you to control how different\n kinds of windows are ordered on-screen.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>The type of window being assigned.</p>\n</div></li><li><span class='pre'>canAddInternalSystemWindow</span> : Boolean<div class='sub-desc'><p>If the owner window associated with the type we are\n        evaluating can add internal system windows. I.e they have\n        Manifest.permission.INTERNAL_SYSTEM_WINDOW. If true, alert window\n        types android.view.WindowManager.LayoutParams.isSystemAlertWindowType(int)\n        can be assigned layers greater than the layer for\n        android.view.WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY Else, their\n        layers would be lesser.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int An arbitrary integer used to order windows, with lower numbers below higher ones.</p>\n</div></li></ul></div></div></div><div id='method-getWindowLayerLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-getWindowLayerLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-getWindowLayerLw' class='name expandable'>getWindowLayerLw</a>( <span class='pre'>win</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the layer assignment for the window state. ...</div><div class='long'><p>Returns the layer assignment for the window state. Allows you to control how different\n kinds of windows are ordered on-screen.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>win</span> : Object {WindowManagerPolicy.WindowState}<div class='sub-desc'><p>The window state</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int An arbitrary integer used to order windows, with lower numbers below higher ones.</p>\n</div></li></ul></div></div></div><div id='method-hasNavigationBar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-hasNavigationBar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-hasNavigationBar' class='name expandable'>hasNavigationBar</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies whether there is an on-screen navigation bar separate from the status bar. ...</div><div class='long'><p>Specifies whether there is an on-screen navigation bar separate from the status bar.</p>\n</div></div></div><div id='method-hideBootMessages' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-hideBootMessages' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-hideBootMessages' class='name expandable'>hideBootMessages</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Hide the UI for showing boot messages, never to be displayed again. ...</div><div class='long'><p>Hide the UI for showing boot messages, never to be displayed again.</p>\n</div></div></div><div id='method-inKeyguardRestrictedKeyInputMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-inKeyguardRestrictedKeyInputMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-inKeyguardRestrictedKeyInputMode' class='name expandable'>inKeyguardRestrictedKeyInputMode</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>inKeyguardRestrictedKeyInputMode\n\n If keyguard screen is showing or in restricted key input mode (i.e. ...</div><div class='long'><p>inKeyguardRestrictedKeyInputMode</p>\n\n<p> If keyguard screen is showing or in restricted key input mode (i.e. in\n keyguard password emergency screen). When in such mode, certain keys,\n such as the Home key and the right soft keys, don't work.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if in keyguard restricted input mode.</p>\n</div></li></ul></div></div></div><div id='method-init' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-init' class='name expandable'>init</a>( <span class='pre'>context</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform initialization of the policy. ...</div><div class='long'><p>Perform initialization of the policy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The system context we are running in.</p>\n</div></li></ul></div></div></div><div id='method-interceptKeyBeforeDispatching' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-interceptKeyBeforeDispatching' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-interceptKeyBeforeDispatching' class='name expandable'>interceptKeyBeforeDispatching</a>( <span class='pre'>win, event, policyFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Called from the input dispatcher thread before a key is dispatched to a window. ...</div><div class='long'><p>Called from the input dispatcher thread before a key is dispatched to a window.</p>\n\n<p> <p>Allows you to define\n behavior for keys that can not be overridden by applications.\n This method is called from the input thread, with no locks held.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>win</span> : Object {WindowManagerPolicy.WindowState}<div class='sub-desc'><p>The window that currently has focus.  This is where the key\n            event will normally go.</p>\n</div></li><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key event.</p>\n</div></li><li><span class='pre'>policyFlags</span> : Number<div class='sub-desc'><p>The policy flags associated with the key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>0 if the key should be dispatched immediately, -1 if the key should\n not be dispatched ever, or a positive value indicating the number of\n milliseconds by which the key dispatch should be delayed before trying\n again.</p>\n</div></li></ul></div></div></div><div id='method-interceptKeyBeforeQueueing' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-interceptKeyBeforeQueueing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-interceptKeyBeforeQueueing' class='name expandable'>interceptKeyBeforeQueueing</a>( <span class='pre'>event, policyFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Called from the input reader thread before a key is enqueued. ...</div><div class='long'><p>Called from the input reader thread before a key is enqueued.</p>\n\n<p> <p>There are some actions that need to be handled here because they\n affect the power state of the device, for example, the power keys.\n Generally, it's best to keep as little as possible in the queue thread\n because it's the most fragile.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key event.</p>\n</div></li><li><span class='pre'>policyFlags</span> : Number<div class='sub-desc'><p>The policy flags associated with the key.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Actions flags: may be <a href=\"#!/api/com.android.server.policy.WindowManagerPolicy-property-ACTION_PASS_TO_USER\" rel=\"com.android.server.policy.WindowManagerPolicy-property-ACTION_PASS_TO_USER\" class=\"docClass\">ACTION_PASS_TO_USER</a>.</p>\n</div></li></ul></div></div></div><div id='method-interceptMotionBeforeQueueingNonInteractive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-interceptMotionBeforeQueueingNonInteractive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-interceptMotionBeforeQueueingNonInteractive' class='name expandable'>interceptMotionBeforeQueueingNonInteractive</a>( <span class='pre'>displayId, policyFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Called from the input reader thread before a motion is enqueued when the device is in a\n non-interactive state. ...</div><div class='long'><p>Called from the input reader thread before a motion is enqueued when the device is in a\n non-interactive state.</p>\n\n<p> <p>There are some actions that need to be handled here because they\n affect the power state of the device, for example, waking on motions.\n Generally, it's best to keep as little as possible in the queue thread\n because it's the most fragile.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The display ID of the motion event.</p>\n</div></li><li><span class='pre'>policyFlags</span> : Number<div class='sub-desc'><p>The policy flags associated with the motion.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Actions flags: may be <a href=\"#!/api/com.android.server.policy.WindowManagerPolicy-property-ACTION_PASS_TO_USER\" rel=\"com.android.server.policy.WindowManagerPolicy-property-ACTION_PASS_TO_USER\" class=\"docClass\">ACTION_PASS_TO_USER</a>.</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardDrawnLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isKeyguardDrawnLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isKeyguardDrawnLw' class='name expandable'>isKeyguardDrawnLw</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask the policy whether the Keyguard has drawn. ...</div><div class='long'><p>Ask the policy whether the Keyguard has drawn. If the Keyguard is disabled, this method\n returns true as soon as we know that Keyguard is disabled.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the keyguard has drawn.</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardHostWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isKeyguardHostWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isKeyguardHostWindow' class='name expandable'>isKeyguardHostWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the given window can become the Keyguard window. ...</div><div class='long'><p>Return whether the given window can become the Keyguard window. Typically returns true for\n the StatusBar.</p>\n</div></div></div><div id='method-isKeyguardLocked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isKeyguardLocked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isKeyguardLocked' class='name expandable'>isKeyguardLocked</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>isKeyguardLocked\n\n Return whether the keyguard is currently locked. ...</div><div class='long'><p>isKeyguardLocked</p>\n\n<p> Return whether the keyguard is currently locked.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if in keyguard is locked.</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardOccluded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isKeyguardOccluded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isKeyguardOccluded' class='name expandable'>isKeyguardOccluded</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the keyguard is currently occluded. ...</div><div class='long'><p>Return whether the keyguard is currently occluded.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if in keyguard is occluded, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardSecure' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isKeyguardSecure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isKeyguardSecure' class='name expandable'>isKeyguardSecure</a>( <span class='pre'>userId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>isKeyguardSecure\n\n Return whether the keyguard requires a password to unlock. ...</div><div class='long'><p>isKeyguardSecure</p>\n\n<p> Return whether the keyguard requires a password to unlock.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>userId</span> : Number<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if in keyguard is secure.</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardShowingAndNotOccluded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isKeyguardShowingAndNotOccluded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isKeyguardShowingAndNotOccluded' class='name expandable'>isKeyguardShowingAndNotOccluded</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if in keyguard is on and not occluded.</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardTrustedLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isKeyguardTrustedLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isKeyguardTrustedLw' class='name expandable'>isKeyguardTrustedLw</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether Keyguard is in trusted state and can be dismissed without credentials</p>\n</div></li></ul></div></div></div><div id='method-isScreenOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isScreenOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isScreenOn' class='name expandable'>isScreenOn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the default display is on and not blocked by a black surface. ...</div><div class='long'><p>Return whether the default display is on and not blocked by a black surface.</p>\n</div></div></div><div id='method-isTopLevelWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isTopLevelWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isTopLevelWindow' class='name expandable'>isTopLevelWindow</a>( <span class='pre'>windowType</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether a given window type is considered a top level one. ...</div><div class='long'><p>Returns whether a given window type is considered a top level one.\n A top level window does not have a container, i.e. attached window,\n or if it has a container it is laid out as a top-level window, not\n as a child of its container.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>windowType</span> : Number<div class='sub-desc'><p>The window type.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the window is a top level one.</p>\n</div></li></ul></div></div></div><div id='method-isUserSetupComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-isUserSetupComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-isUserSetupComplete' class='name expandable'>isUserSetupComplete</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the user setup is complete. ...</div><div class='long'><p>Returns whether the user setup is complete.</p>\n</div></div></div><div id='method-keepScreenOnStartedLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-keepScreenOnStartedLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-keepScreenOnStartedLw' class='name expandable'>keepScreenOnStartedLw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when we have started keeping the screen on because a window\n requesting this has become visible. ...</div><div class='long'><p>Called when we have started keeping the screen on because a window\n requesting this has become visible.</p>\n</div></div></div><div id='method-keepScreenOnStoppedLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-keepScreenOnStoppedLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-keepScreenOnStoppedLw' class='name expandable'>keepScreenOnStoppedLw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when we have stopped keeping the screen on because the last window\n requesting this is no longer visible. ...</div><div class='long'><p>Called when we have stopped keeping the screen on because the last window\n requesting this is no longer visible.</p>\n</div></div></div><div id='method-lockNow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-lockNow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-lockNow' class='name expandable'>lockNow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lock the device now. ...</div><div class='long'><p>Lock the device now.</p>\n</div></div></div><div id='method-notifyCameraLensCoverSwitchChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-notifyCameraLensCoverSwitchChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-notifyCameraLensCoverSwitchChanged' class='name expandable'>notifyCameraLensCoverSwitchChanged</a>( <span class='pre'>whenNanos, lensCovered</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the policy that the camera lens has been covered or uncovered. ...</div><div class='long'><p>Tell the policy that the camera lens has been covered or uncovered.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>whenNanos</span> : Number<div class='sub-desc'><p>The time when the change occurred in uptime nanoseconds.</p>\n</div></li><li><span class='pre'>lensCovered</span> : Boolean<div class='sub-desc'><p>True if the lens is covered.</p>\n</div></li></ul></div></div></div><div id='method-notifyLidSwitchChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-notifyLidSwitchChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-notifyLidSwitchChanged' class='name expandable'>notifyLidSwitchChanged</a>( <span class='pre'>whenNanos, lidOpen</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the policy that the lid switch has changed state. ...</div><div class='long'><p>Tell the policy that the lid switch has changed state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>whenNanos</span> : Number<div class='sub-desc'><p>The time when the change occurred in uptime nanoseconds.</p>\n</div></li><li><span class='pre'>lidOpen</span> : Boolean<div class='sub-desc'><p>True if the lid is now open.</p>\n</div></li></ul></div></div></div><div id='method-okToAnimate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-okToAnimate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-okToAnimate' class='name expandable'>okToAnimate</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether the device is currently allowed to animate.</p>\n\n<p> Note: this can be true even if it is not appropriate to animate for reasons that are outside\n       of the policy's authority.</p>\n</div></li></ul></div></div></div><div id='method-onDefaultDisplayFocusChangedLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-onDefaultDisplayFocusChangedLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-onDefaultDisplayFocusChangedLw' class='name expandable'>onDefaultDisplayFocusChangedLw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A new window on default display has been focused. ...</div><div class='long'><p>A new window on default display has been focused.</p>\n</div></div></div><div id='method-onKeyguardOccludedChangedLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-onKeyguardOccludedChangedLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-onKeyguardOccludedChangedLw' class='name expandable'>onKeyguardOccludedChangedLw</a>( <span class='pre'>occluded</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the Keyguard occluded state changed. ...</div><div class='long'><p>Called when the Keyguard occluded state changed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>occluded</span> : Boolean<div class='sub-desc'><p>Whether Keyguard is currently occluded or not.</p>\n</div></li></ul></div></div></div><div id='method-onSystemUiStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-onSystemUiStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-onSystemUiStarted' class='name expandable'>onSystemUiStarted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when System UI has been started. ...</div><div class='long'><p>Called when System UI has been started.</p>\n</div></div></div><div id='method-performHapticFeedback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-performHapticFeedback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-performHapticFeedback' class='name expandable'>performHapticFeedback</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call from application to perform haptic feedback on its window. ...</div><div class='long'><p>Call from application to perform haptic feedback on its window.</p>\n</div></div></div><div id='method-registerDisplayFoldListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-registerDisplayFoldListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-registerDisplayFoldListener' class='name expandable'>registerDisplayFoldListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers an IDisplayFoldListener. ...</div><div class='long'><p>Registers an IDisplayFoldListener.</p>\n</div></div></div><div id='method-requestUserActivityNotification' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-requestUserActivityNotification' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-requestUserActivityNotification' class='name expandable'>requestUserActivityNotification</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Requests that the WindowManager sends\n WindowManagerPolicyConstants#ACTION_USER_ACTIVITY_NOTIFICATION on the next use...</div><div class='long'><p>Requests that the WindowManager sends\n WindowManagerPolicyConstants#ACTION_USER_ACTIVITY_NOTIFICATION on the next user activity.</p>\n</div></div></div><div id='method-screenTurnedOff' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-screenTurnedOff' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-screenTurnedOff' class='name expandable'>screenTurnedOff</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the device has turned the screen off. ...</div><div class='long'><p>Called when the device has turned the screen off.</p>\n</div></div></div><div id='method-screenTurnedOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-screenTurnedOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-screenTurnedOn' class='name expandable'>screenTurnedOn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the device has actually turned on the screen, i.e. ...</div><div class='long'><p>Called when the device has actually turned on the screen, i.e. the display power state has\n been set to ON and the screen is unblocked.</p>\n</div></div></div><div id='method-screenTurningOff' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-screenTurningOff' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-screenTurningOff' class='name expandable'>screenTurningOff</a>( <span class='pre'>screenOffListener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the display would like to be turned off. ...</div><div class='long'><p>Called when the display would like to be turned off. This gives policy a chance to do some\n things before the display power state is actually changed to off.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>screenOffListener</span> : Object {WindowManagerPolicy.ScreenOffListener}<div class='sub-desc'><p>Must be called to tell that the display power state can actually be\n                          changed now after policy has done its work.</p>\n</div></li></ul></div></div></div><div id='method-screenTurningOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-screenTurningOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-screenTurningOn' class='name expandable'>screenTurningOn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the device is about to turn on the screen to show content. ...</div><div class='long'><p>Called when the device is about to turn on the screen to show content.\n When waking up, this method will be called once after the call to wakingUp().\n When dozing, the method will be called sometime after the call to goingToSleep() and\n may be called repeatedly in the case where the screen is pulsing on and off.</p>\n\n<p> Must call back on the listener to tell it when the higher-level system\n is ready for the screen to go on (i.e. the lock screen is shown).</p>\n</div></div></div><div id='method-setAllowLockscreenWhenOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setAllowLockscreenWhenOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setAllowLockscreenWhenOn' class='name expandable'>setAllowLockscreenWhenOn</a>( <span class='pre'>displayId, allow</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the state of allow-lockscreen-when-on of the display is changed. ...</div><div class='long'><p>Called when the state of allow-lockscreen-when-on of the display is changed. See\n WindowManager.LayoutParams.FLAG_ALLOW_LOCK_WHILE_SCREEN_ON</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The ID of the display.</p>\n</div></li><li><span class='pre'>allow</span> : Boolean<div class='sub-desc'><p>Whether the display allows showing lockscreen when it is on.</p>\n</div></li></ul></div></div></div><div id='method-setAodShowing' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setAodShowing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setAodShowing' class='name expandable'>setAodShowing</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates the flag about whether AOD is showing. ...</div><div class='long'><p>Updates the flag about whether AOD is showing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether the value was changed.</p>\n</div></li></ul></div></div></div><div id='method-setCurrentUserLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setCurrentUserLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setCurrentUserLw' class='name expandable'>setCurrentUserLw</a>( <span class='pre'>newUserId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the current user changes. ...</div><div class='long'><p>Called when the current user changes. Guaranteed to be called before the broadcast\n of the new user id is made to all listeners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newUserId</span> : Number<div class='sub-desc'><p>The id of the incoming user.</p>\n</div></li></ul></div></div></div><div id='method-setDefaultDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setDefaultDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setDefaultDisplay' class='name expandable'>setDefaultDisplay</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the default display content to provide basic functions for the policy. ...</div><div class='long'><p>Set the default display content to provide basic functions for the policy.</p>\n</div></div></div><div id='method-setKeyguardCandidateLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setKeyguardCandidateLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setKeyguardCandidateLw' class='name expandable'>setKeyguardCandidateLw</a>( <span class='pre'>win</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set or clear a window which can behave as the keyguard. ...</div><div class='long'><p>Set or clear a window which can behave as the keyguard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>win</span> : Object {WindowManagerPolicy.WindowState}<div class='sub-desc'><p>The window which can behave as the keyguard.</p>\n</div></li></ul></div></div></div><div id='method-setNavBarVirtualKeyHapticFeedbackEnabledLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setNavBarVirtualKeyHapticFeedbackEnabledLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setNavBarVirtualKeyHapticFeedbackEnabledLw' class='name expandable'>setNavBarVirtualKeyHapticFeedbackEnabledLw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by System UI to enable or disable haptic feedback on the navigation bar buttons. ...</div><div class='long'><p>Called by System UI to enable or disable haptic feedback on the navigation bar buttons.</p>\n</div></div></div><div id='method-setOverrideFoldedArea' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setOverrideFoldedArea' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setOverrideFoldedArea' class='name expandable'>setOverrideFoldedArea</a>( <span class='pre'>area</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Overrides the folded area. ...</div><div class='long'><p>Overrides the folded area.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>area</span> : Object {Rect}<div class='sub-desc'><p>the overriding folded area or an empty {@code Rect} to clear the override.</p>\n</div></li></ul></div></div></div><div id='method-setPipVisibilityLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setPipVisibilityLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setPipVisibilityLw' class='name expandable'>setPipVisibilityLw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by System UI to notify of changes to the visibility of PIP. ...</div><div class='long'><p>Called by System UI to notify of changes to the visibility of PIP.</p>\n</div></div></div><div id='method-setRecentsVisibilityLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setRecentsVisibilityLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setRecentsVisibilityLw' class='name expandable'>setRecentsVisibilityLw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by System UI to notify of changes to the visibility of Recents. ...</div><div class='long'><p>Called by System UI to notify of changes to the visibility of Recents.</p>\n</div></div></div><div id='method-setSafeMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setSafeMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setSafeMode' class='name expandable'>setSafeMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the system is mostly done booting to set whether\n the system should go into safe mode. ...</div><div class='long'><p>Called when the system is mostly done booting to set whether\n the system should go into safe mode.</p>\n</div></div></div><div id='method-setSwitchingUser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setSwitchingUser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setSwitchingUser' class='name expandable'>setSwitchingUser</a>( <span class='pre'>switching</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>For a given user-switch operation, this will be called once with switching=true before the\n user-switch and once with...</div><div class='long'><p>For a given user-switch operation, this will be called once with switching=true before the\n user-switch and once with switching=false afterwards (or if the user-switch was cancelled).\n This gives the policy a chance to alter its behavior for the duration of a user-switch.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>switching</span> : Boolean<div class='sub-desc'><p>true if a user-switch is in progress</p>\n</div></li></ul></div></div></div><div id='method-setTopFocusedDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-setTopFocusedDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-setTopFocusedDisplay' class='name expandable'>setTopFocusedDisplay</a>( <span class='pre'>displayId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the top focused display is changed. ...</div><div class='long'><p>Called when the top focused display is changed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The ID of the top focused display.</p>\n</div></li></ul></div></div></div><div id='method-showBootMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-showBootMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-showBootMessage' class='name expandable'>showBootMessage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Show boot time message to the user. ...</div><div class='long'><p>Show boot time message to the user.</p>\n</div></div></div><div id='method-startKeyguardExitAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-startKeyguardExitAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-startKeyguardExitAnimation' class='name expandable'>startKeyguardExitAnimation</a>( <span class='pre'>startTime, fadeoutDuration</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the keyguard to start fading out. ...</div><div class='long'><p>Notifies the keyguard to start fading out.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startTime</span> : Number<div class='sub-desc'><p>the start time of the animation in uptime milliseconds</p>\n</div></li><li><span class='pre'>fadeoutDuration</span> : Number<div class='sub-desc'><p>the duration of the exit animation, in milliseconds</p>\n</div></li></ul></div></div></div><div id='method-startedGoingToSleep' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-startedGoingToSleep' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-startedGoingToSleep' class='name expandable'>startedGoingToSleep</a>( <span class='pre'>why</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the device has started going to sleep. ...</div><div class='long'><p>Called when the device has started going to sleep.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>why</span> : Number<div class='sub-desc'><p>OFF_BECAUSE_OF_USER, OFF_BECAUSE_OF_ADMIN,\n or OFF_BECAUSE_OF_TIMEOUT.</p>\n</div></li></ul></div></div></div><div id='method-startedWakingUp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-startedWakingUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-startedWakingUp' class='name expandable'>startedWakingUp</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the device has started waking up. ...</div><div class='long'><p>Called when the device has started waking up.</p>\n</div></div></div><div id='method-systemBooted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-systemBooted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-systemBooted' class='name expandable'>systemBooted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the system is done booting to the point where the\n user can start interacting with it. ...</div><div class='long'><p>Called when the system is done booting to the point where the\n user can start interacting with it.</p>\n</div></div></div><div id='method-systemReady' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-systemReady' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-systemReady' class='name expandable'>systemReady</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the system is mostly done booting. ...</div><div class='long'><p>Called when the system is mostly done booting.</p>\n</div></div></div><div id='method-unregisterDisplayFoldListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-unregisterDisplayFoldListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-unregisterDisplayFoldListener' class='name expandable'>unregisterDisplayFoldListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters an IDisplayFoldListener. ...</div><div class='long'><p>Unregisters an IDisplayFoldListener.</p>\n</div></div></div><div id='method-userActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-userActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-userActivity' class='name expandable'>userActivity</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when userActivity is signalled in the power manager. ...</div><div class='long'><p>Called when userActivity is signalled in the power manager.\n This is safe to call from any thread, with any window manager locks held or not.</p>\n</div></div></div><div id='method-userRotationModeToString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-userRotationModeToString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-userRotationModeToString' class='name expandable'>userRotationModeToString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convert the user rotation mode to a human readable format. ...</div><div class='long'><p>Convert the user rotation mode to a human readable format.</p>\n</div></div></div><div id='method-writeToProto' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.policy.WindowManagerPolicy'>com.android.server.policy.WindowManagerPolicy</span><br/><a href='source/WindowManagerPolicy.html#com-android-server-policy-WindowManagerPolicy-method-writeToProto' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.policy.WindowManagerPolicy-method-writeToProto' class='name expandable'>writeToProto</a>( <span class='pre'>proto</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write the WindowManagerPolicy's state into the protocol buffer. ...</div><div class='long'><p>Write the WindowManagerPolicy's state into the protocol buffer.\n The message is described in com.android.server.wm.WindowManagerPolicyProto</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proto</span> : Object {ProtoOutputStream}<div class='sub-desc'><p>The protocol buffer output stream to write to.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});