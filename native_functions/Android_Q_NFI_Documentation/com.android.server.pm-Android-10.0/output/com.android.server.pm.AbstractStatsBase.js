Ext.data.JsonP.com_android_server_pm_AbstractStatsBase({"tagname":"class","name":"com.android.server.pm.AbstractStatsBase","autodetected":{},"files":[{"filename":"AbstractStatsBase.js","href":"AbstractStatsBase.html#com-android-server-pm-AbstractStatsBase"}],"extends":"java.lang.Object","members":[],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.pm.AbstractStatsBase","short_doc":"A simple base class for statistics that need to be saved/restored from a dedicated file. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.pm.AbstractStatsBase</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AbstractStatsBase.html#com-android-server-pm-AbstractStatsBase' target='_blank'>AbstractStatsBase.js</a></div></pre><div class='doc-contents'><p>A simple base class for statistics that need to be saved/restored from a dedicated file. This\n class provides a base implementation that:\n <ul>\n <li>Provide an AtomicFile to the actual read/write code\n <li>A background-thread write and a synchronous write\n <li>Write-limiting for the background-thread (by default writes are at least 30 minutes apart)\n <li>Can lock on the provided data object before writing\n </li></li></li></li></ul>\n For completion, a subclass needs to implement actual writing and\n reading.</p>\n</div><div class='members'></div></div>","meta":{}});