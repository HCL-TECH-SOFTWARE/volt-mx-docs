Ext.data.JsonP.android_privacy_DifferentialPrivacyEncoder({"tagname":"class","name":"android.privacy.DifferentialPrivacyEncoder","autodetected":{},"files":[{"filename":"DifferentialPrivacyEncoder.js","href":"DifferentialPrivacyEncoder.html#android-privacy-DifferentialPrivacyEncoder"}],"hide":true,"members":[{"name":"encodeBits","tagname":"method","owner":"android.privacy.DifferentialPrivacyEncoder","id":"method-encodeBits","meta":{}},{"name":"encodeBoolean","tagname":"method","owner":"android.privacy.DifferentialPrivacyEncoder","id":"method-encodeBoolean","meta":{}},{"name":"encodeString","tagname":"method","owner":"android.privacy.DifferentialPrivacyEncoder","id":"method-encodeString","meta":{}},{"name":"getConfig","tagname":"method","owner":"android.privacy.DifferentialPrivacyEncoder","id":"method-getConfig","meta":{}},{"name":"isInsecureEncoderForTest","tagname":"method","owner":"android.privacy.DifferentialPrivacyEncoder","id":"method-isInsecureEncoderForTest","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.privacy.DifferentialPrivacyEncoder","short_doc":"An interface for differential privacy encoder. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/DifferentialPrivacyEncoder.html#android-privacy-DifferentialPrivacyEncoder' target='_blank'>DifferentialPrivacyEncoder.js</a></div></pre><div class='doc-contents'><p>An interface for differential privacy encoder.\n Applications can use it to convert privacy sensitive data to privacy protected report.\n There is no decoder implemented in Android as it is not possible decode a single report by\n design.</p>\n\n<p> <p>Each type of log should have its own encoder, otherwise it may leak\n some information about Permanent Randomized Response(PRR, is used to create a “noisy”\n answer which is memoized by the client and permanently reused in place of the real answer).</p>\n\n<p> <p>Some encoders may not support all encoding methods, and it will throw UnsupportedOperationException if you call unsupported encoding method.</p>\n\n<p> <p><b>WARNING:</b> Privacy protection works only when encoder uses a suitable DP configuration,\n and the configuration and algorithm that is suitable is highly dependent on the use case.\n If the configuration is not suitable for the use case, it may hurt privacy or utility or both.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-encodeBits' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.privacy.DifferentialPrivacyEncoder'>android.privacy.DifferentialPrivacyEncoder</span><br/><a href='source/DifferentialPrivacyEncoder.html#android-privacy-DifferentialPrivacyEncoder-method-encodeBits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.privacy.DifferentialPrivacyEncoder-method-encodeBits' class='name expandable'>encodeBits</a>( <span class='pre'>original</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Apply differential privacy to encode sequence of bytes. ...</div><div class='long'><p>Apply differential privacy to encode sequence of bytes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>original</span> : Object {byte[]}<div class='sub-desc'><p>An arbitrary byte array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Differential privacy encoded bytes derived from the bytes</p>\n</div></li></ul></div></div></div><div id='method-encodeBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.privacy.DifferentialPrivacyEncoder'>android.privacy.DifferentialPrivacyEncoder</span><br/><a href='source/DifferentialPrivacyEncoder.html#android-privacy-DifferentialPrivacyEncoder-method-encodeBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.privacy.DifferentialPrivacyEncoder-method-encodeBoolean' class='name expandable'>encodeBoolean</a>( <span class='pre'>original</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Apply differential privacy to encode a boolean. ...</div><div class='long'><p>Apply differential privacy to encode a boolean.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>original</span> : Boolean<div class='sub-desc'><p>An arbitrary boolean.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Differential privacy encoded bytes derived from the boolean</p>\n</div></li></ul></div></div></div><div id='method-encodeString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.privacy.DifferentialPrivacyEncoder'>android.privacy.DifferentialPrivacyEncoder</span><br/><a href='source/DifferentialPrivacyEncoder.html#android-privacy-DifferentialPrivacyEncoder-method-encodeString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.privacy.DifferentialPrivacyEncoder-method-encodeString' class='name expandable'>encodeString</a>( <span class='pre'>original</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Apply differential privacy to encode a string. ...</div><div class='long'><p>Apply differential privacy to encode a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>original</span> : String<div class='sub-desc'><p>An arbitrary string</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Differential privacy encoded bytes derived from the string</p>\n</div></li></ul></div></div></div><div id='method-getConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.privacy.DifferentialPrivacyEncoder'>android.privacy.DifferentialPrivacyEncoder</span><br/><a href='source/DifferentialPrivacyEncoder.html#android-privacy-DifferentialPrivacyEncoder-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.privacy.DifferentialPrivacyEncoder-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the configuration that this encoder is using. ...</div><div class='long'><p>Returns the configuration that this encoder is using.</p>\n</div></div></div><div id='method-isInsecureEncoderForTest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.privacy.DifferentialPrivacyEncoder'>android.privacy.DifferentialPrivacyEncoder</span><br/><a href='source/DifferentialPrivacyEncoder.html#android-privacy-DifferentialPrivacyEncoder-method-isInsecureEncoderForTest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.privacy.DifferentialPrivacyEncoder-method-isInsecureEncoderForTest' class='name expandable'>isInsecureEncoderForTest</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return True if the output from encoder is NOT securely randomized, otherwise encoder should\n be secure to randomize i...</div><div class='long'><p>Return True if the output from encoder is NOT securely randomized, otherwise encoder should\n be secure to randomize input.</p>\n\n<p> <b> A non-secure encoder is intended only for testing only and must not be used to process\n real data.\n </b></p>\n</div></div></div></div></div></div></div>","meta":{}});