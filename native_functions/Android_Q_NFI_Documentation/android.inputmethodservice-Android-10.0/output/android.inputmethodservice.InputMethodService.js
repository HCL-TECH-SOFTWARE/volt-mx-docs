Ext.data.JsonP.android_inputmethodservice_InputMethodService({"tagname":"class","name":"android.inputmethodservice.InputMethodService","autodetected":{},"files":[{"filename":"InputMethodService.js","href":"InputMethodService.html#android-inputmethodservice-InputMethodService"}],"extends":"android.inputmethodservice.AbstractInputMethodService","members":[{"name":"BACK_DISPOSITION_ADJUST_NOTHING","tagname":"property","owner":"android.inputmethodservice.InputMethodService","id":"property-BACK_DISPOSITION_ADJUST_NOTHING","meta":{}},{"name":"BACK_DISPOSITION_DEFAULT","tagname":"property","owner":"android.inputmethodservice.InputMethodService","id":"property-BACK_DISPOSITION_DEFAULT","meta":{}},{"name":"BACK_DISPOSITION_WILL_DISMISS","tagname":"property","owner":"android.inputmethodservice.InputMethodService","id":"property-BACK_DISPOSITION_WILL_DISMISS","meta":{"deprecated":{"text":"<p>on android.os.Build.VERSION_CODES.P and later devices, this flag is\n            handled as a synonym of <a href=\"#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" rel=\"android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" class=\"docClass\">BACK_DISPOSITION_DEFAULT</a>. On\n            android.os.Build.VERSION_CODES.O_MR1 and prior devices, expected behavior\n            of this mode had not been well defined. In AOSP implementation running on devices\n            that have navigation bar, specifying this flag could change the software back\n            button to \"Dismiss\" icon no matter whether the software keyboard is shown or not,\n            but there would be no easy way to restore the icon state even after IME lost the\n            connection to the application. To avoid user confusions, do not specify this mode\n            anyway\n@see <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int)</p>\n"}}},{"name":"BACK_DISPOSITION_WILL_NOT_DISMISS","tagname":"property","owner":"android.inputmethodservice.InputMethodService","id":"property-BACK_DISPOSITION_WILL_NOT_DISMISS","meta":{"deprecated":{"text":"<p>on android.os.Build.VERSION_CODES.P and later devices, this flag is\n            handled as a synonym of <a href=\"#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" rel=\"android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" class=\"docClass\">BACK_DISPOSITION_DEFAULT</a>. On\n            android.os.Build.VERSION_CODES.O_MR1 and prior devices, expected behavior\n            of this mode had not been well defined. Most likely the end result would be the\n            same as <a href=\"#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" rel=\"android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" class=\"docClass\">BACK_DISPOSITION_DEFAULT</a>. Either way it is not recommended to\n            use this mode\n@see <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int)</p>\n"}}},{"name":"enableHardwareAcceleration","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-enableHardwareAcceleration","meta":{"deprecated":{"text":"<p>Starting in API 21, hardware acceleration is always enabled on capable devices</p>\n"}}},{"name":"getBackDisposition","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getBackDisposition","meta":{}},{"name":"getCandidatesHiddenVisibility","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getCandidatesHiddenVisibility","meta":{}},{"name":"getCurrentInputBinding","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getCurrentInputBinding","meta":{}},{"name":"getCurrentInputConnection","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getCurrentInputConnection","meta":{}},{"name":"getCurrentInputEditorInfo","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getCurrentInputEditorInfo","meta":{}},{"name":"getCurrentInputStarted","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getCurrentInputStarted","meta":{}},{"name":"getInputMethodWindowRecommendedHeight","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getInputMethodWindowRecommendedHeight","meta":{"deprecated":{"text":"<p>the actual behavior of this method has never been well defined.  You cannot use\n             this method in a reliable and predictable way</p>\n"}}},{"name":"getKeyDispatcherState","tagname":"method","owner":"android.inputmethodservice.AbstractInputMethodService","id":"method-getKeyDispatcherState","meta":{}},{"name":"getLayoutInflater","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getLayoutInflater","meta":{}},{"name":"getMaxWidth","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getMaxWidth","meta":{}},{"name":"getTextForImeAction","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getTextForImeAction","meta":{}},{"name":"getWindow","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-getWindow","meta":{}},{"name":"hideStatusIcon","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-hideStatusIcon","meta":{}},{"name":"hideWindow","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-hideWindow","meta":{}},{"name":"isExtractViewShown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-isExtractViewShown","meta":{}},{"name":"isFullscreenMode","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-isFullscreenMode","meta":{}},{"name":"isInputViewShown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-isInputViewShown","meta":{}},{"name":"isShowInputRequested","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-isShowInputRequested","meta":{}},{"name":"onAppPrivateCommand","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onAppPrivateCommand","meta":{}},{"name":"onBind","tagname":"method","owner":"android.inputmethodservice.AbstractInputMethodService","id":"method-onBind","meta":{}},{"name":"onBindInput","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onBindInput","meta":{}},{"name":"onComputeInsets","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onComputeInsets","meta":{}},{"name":"onConfigurationChanged","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onConfigurationChanged","meta":{}},{"name":"onConfigureWindow","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onConfigureWindow","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onCreate","meta":{}},{"name":"onCreateCandidatesView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onCreateCandidatesView","meta":{}},{"name":"onCreateExtractTextView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onCreateExtractTextView","meta":{}},{"name":"onCreateInputMethodInterface","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onCreateInputMethodInterface","meta":{}},{"name":"onCreateInputMethodSessionInterface","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onCreateInputMethodSessionInterface","meta":{}},{"name":"onCreateInputView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onCreateInputView","meta":{}},{"name":"onDestroy","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onDestroy","meta":{}},{"name":"onDisplayCompletions","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onDisplayCompletions","meta":{}},{"name":"onEvaluateFullscreenMode","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onEvaluateFullscreenMode","meta":{}},{"name":"onEvaluateInputViewShown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onEvaluateInputViewShown","meta":{}},{"name":"onExtractTextContextMenuItem","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onExtractTextContextMenuItem","meta":{}},{"name":"onExtractedCursorMovement","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onExtractedCursorMovement","meta":{}},{"name":"onExtractedSelectionChanged","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onExtractedSelectionChanged","meta":{}},{"name":"onExtractedTextClicked","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onExtractedTextClicked","meta":{}},{"name":"onExtractingInputChanged","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onExtractingInputChanged","meta":{}},{"name":"onFinishCandidatesView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onFinishCandidatesView","meta":{}},{"name":"onFinishInput","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onFinishInput","meta":{}},{"name":"onFinishInputView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onFinishInputView","meta":{}},{"name":"onGenericMotionEvent","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onGenericMotionEvent","meta":{}},{"name":"onInitializeInterface","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onInitializeInterface","meta":{}},{"name":"onKeyDown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onKeyDown","meta":{}},{"name":"onKeyLongPress","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onKeyLongPress","meta":{}},{"name":"onKeyMultiple","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onKeyMultiple","meta":{}},{"name":"onKeyUp","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onKeyUp","meta":{}},{"name":"onShowInputRequested","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onShowInputRequested","meta":{}},{"name":"onStartCandidatesView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onStartCandidatesView","meta":{}},{"name":"onStartInput","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onStartInput","meta":{}},{"name":"onStartInputView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onStartInputView","meta":{}},{"name":"onTrackballEvent","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onTrackballEvent","meta":{}},{"name":"onUnbindInput","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onUnbindInput","meta":{}},{"name":"onUpdateCursor","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onUpdateCursor","meta":{"deprecated":{"text":"<p>Use onUpdateCursorAnchorInfo(CursorAnchorInfo) instead.</p>\n"}}},{"name":"onUpdateCursorAnchorInfo","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onUpdateCursorAnchorInfo","meta":{}},{"name":"onUpdateExtractedText","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onUpdateExtractedText","meta":{}},{"name":"onUpdateExtractingViews","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onUpdateExtractingViews","meta":{}},{"name":"onUpdateExtractingVisibility","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onUpdateExtractingVisibility","meta":{}},{"name":"onUpdateSelection","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onUpdateSelection","meta":{}},{"name":"onViewClicked","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onViewClicked","meta":{"deprecated":{"text":"<p>The method may not be called for composite View that works as a giant\n             \"Canvas\", which can host its own UI hierarchy and sub focus state.\n             android.webkit.WebView is a good example. Application / IME developers\n             should not rely on this method. If your goal is just being notified when an\n             on-going input is interrupted, simply monitor onFinishInput().</p>\n"}}},{"name":"onWindowHidden","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onWindowHidden","meta":{}},{"name":"onWindowShown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-onWindowShown","meta":{}},{"name":"requestHideSelf","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-requestHideSelf","meta":{}},{"name":"requestShowSelf","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-requestShowSelf","meta":{}},{"name":"sendDefaultEditorAction","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-sendDefaultEditorAction","meta":{}},{"name":"sendDownUpKeyEvents","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-sendDownUpKeyEvents","meta":{}},{"name":"sendKeyChar","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-sendKeyChar","meta":{}},{"name":"setBackDisposition","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-setBackDisposition","meta":{}},{"name":"setCandidatesView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-setCandidatesView","meta":{}},{"name":"setCandidatesViewShown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-setCandidatesViewShown","meta":{}},{"name":"setExtractView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-setExtractView","meta":{}},{"name":"setExtractViewShown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-setExtractViewShown","meta":{}},{"name":"setInputView","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-setInputView","meta":{}},{"name":"setTheme","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-setTheme","meta":{}},{"name":"shouldOfferSwitchingToNextInputMethod","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-shouldOfferSwitchingToNextInputMethod","meta":{}},{"name":"showStatusIcon","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-showStatusIcon","meta":{}},{"name":"showWindow","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-showWindow","meta":{}},{"name":"switchInputMethod","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-switchInputMethod","meta":{}},{"name":"switchToNextInputMethod","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-switchToNextInputMethod","meta":{}},{"name":"switchToPreviousInputMethod","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-switchToPreviousInputMethod","meta":{}},{"name":"updateFullscreenMode","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-updateFullscreenMode","meta":{}},{"name":"updateInputViewShown","tagname":"method","owner":"android.inputmethodservice.InputMethodService","id":"method-updateInputViewShown","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.inputmethodservice.InputMethodService","short_doc":"InputMethodService provides a standard implementation of an InputMethod,\n which final implementations can derive from...","classIcon":"icon-class","superclasses":["android.app.Service","android.inputmethodservice.AbstractInputMethodService"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.app.Service<div class='subclass '><a href='#!/api/android.inputmethodservice.AbstractInputMethodService' rel='android.inputmethodservice.AbstractInputMethodService' class='docClass'>android.inputmethodservice.AbstractInputMethodService</a><div class='subclass '><strong>android.inputmethodservice.InputMethodService</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService' target='_blank'>InputMethodService.js</a></div></pre><div class='doc-contents'><p>InputMethodService provides a standard implementation of an InputMethod,\n which final implementations can derive from and customize.  See the\n base class <a href=\"#!/api/android.inputmethodservice.AbstractInputMethodService\" rel=\"android.inputmethodservice.AbstractInputMethodService\" class=\"docClass\">android.inputmethodservice.AbstractInputMethodService</a> and the InputMethod\n interface for more information on the basics of writing input methods.</p>\n\n<p> <p>In addition to the normal Service lifecycle methods, this class\n introduces some new specific callbacks that most subclasses will want\n to make use of:</p>\n <ul>\n <li> <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onInitializeInterface\" rel=\"android.inputmethodservice.InputMethodService-method-onInitializeInterface\" class=\"docClass\">onInitializeInterface</a>() for user-interface initialization,\n in particular to deal with configuration changes while the service is\n running.\n <li> <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onBindInput\" rel=\"android.inputmethodservice.InputMethodService-method-onBindInput\" class=\"docClass\">onBindInput</a> to find out about switching to a new client.\n <li> <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onStartInput\" rel=\"android.inputmethodservice.InputMethodService-method-onStartInput\" class=\"docClass\">onStartInput</a> to deal with an input session starting with\n the client.\n <li> <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateInputView\" class=\"docClass\">onCreateInputView</a>(), <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" class=\"docClass\">onCreateCandidatesView</a>(),\n and <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateExtractTextView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateExtractTextView\" class=\"docClass\">onCreateExtractTextView</a>() for non-demand generation of the UI.\n <li> boolean) to deal with input\n starting within the input area of the IME.\n </li></li></li></li></li></ul></p>\n\n<p> <p>An input method has significant discretion in how it goes about its\n work: the <a href=\"#!/api/android.inputmethodservice.InputMethodService\" rel=\"android.inputmethodservice.InputMethodService\" class=\"docClass\">android.inputmethodservice.InputMethodService</a> provides\n a basic framework for standard UI elements (input view, candidates view,\n and running in fullscreen mode), but it is up to a particular implementor\n to decide how to use them.  For example, one input method could implement\n an input area with a keyboard, another could allow the user to draw text,\n while a third could have no input area (and thus not be visible to the\n user) but instead listen to audio and perform text to speech conversion.</p></p>\n\n<p> <p>In the implementation provided here, all of these elements are placed\n together in a single window managed by the InputMethodService.  It will\n execute callbacks as it needs information about them, and provides APIs for\n programmatic control over them.  They layout of these elements is explicitly\n defined:</p></p>\n\n<p> <ul>\n <li>The soft input view, if available, is placed at the bottom of the\n screen.\n <li>The candidates view, if currently shown, is placed above the soft\n input view.\n <li>If not running fullscreen, the application is moved or resized to be\n above these views; if running fullscreen, the window will completely cover\n the application and its top part will contain the extract text of what is\n currently being edited by the application.\n </li></li></li></ul></p>\n\n<p> <a name=\"SoftInputView\"></a>\n <h3>Soft Input View</h3></p>\n\n<p> <p>Central to most input methods is the soft input view.  This is where most\n user interaction occurs: pressing on soft keys, drawing characters, or\n however else your input method wants to generate text.  Most implementations\n will simply have their own view doing all of this work, and return a new\n instance of it when <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateInputView\" class=\"docClass\">onCreateInputView</a>() is called.  At that point,\n as long as the input view is visible, you will see user interaction in\n that view and can call back on the InputMethodService to interact with the\n application as appropriate.</p></p>\n\n<p> <p>There are some situations where you want to decide whether or not your\n soft input view should be shown to the user.  This is done by implementing\n the <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" class=\"docClass\">onEvaluateInputViewShown</a>() to return true or false based on\n whether it should be shown in the current environment.  If any of your\n state has changed that may impact this, call\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-updateInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-updateInputViewShown\" class=\"docClass\">updateInputViewShown</a>() to have it re-evaluated.  The default\n implementation always shows the input view unless there is a hard\n keyboard available, which is the appropriate behavior for most input\n methods.</p></p>\n\n<p> <a name=\"CandidatesView\"></a>\n <h3>Candidates View</h3></p>\n\n<p> <p>Often while the user is generating raw text, an input method wants to\n provide them with a list of possible interpretations of that text that can\n be selected for use.  This is accomplished with the candidates view, and\n like the soft input view you implement <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" class=\"docClass\">onCreateCandidatesView</a>()\n to instantiate your own view implementing your candidates UI.</p></p>\n\n<p> <p>Management of the candidates view is a little different than the input\n view, because the candidates view tends to be more transient, being shown\n only when there are possible candidates for the current text being entered\n by the user.  To control whether the candidates view is shown, you use\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setCandidatesViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-setCandidatesViewShown\" class=\"docClass\">setCandidatesViewShown</a>(boolean).  Note that because the candidate\n view tends to be shown and hidden a lot, it does not impact the application\n UI in the same way as the soft input view: it will never cause application\n windows to resize, only cause them to be panned if needed for the user to\n see the current focus.</p></p>\n\n<p> <a name=\"FullscreenMode\"></a>\n <h3>Fullscreen Mode</h3></p>\n\n<p> <p>Sometimes your input method UI is too large to integrate with the\n application UI, so you just want to take over the screen.  This is\n accomplished by switching to full-screen mode, causing the input method\n window to fill the entire screen and add its own \"extracted text\" editor\n showing the user the text that is being typed.  Unlike the other UI elements,\n there is a standard implementation for the extract editor that you should\n not need to change.  The editor is placed at the top of the IME, above the\n input and candidates views.</p></p>\n\n<p> <p>Similar to the input view, you control whether the IME is running in\n fullscreen mode by implementing <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-onEvaluateFullscreenMode\" class=\"docClass\">onEvaluateFullscreenMode</a>()\n to return true or false based on\n whether it should be fullscreen in the current environment.  If any of your\n state has changed that may impact this, call\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-updateFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-updateFullscreenMode\" class=\"docClass\">updateFullscreenMode</a>() to have it re-evaluated.  The default\n implementation selects fullscreen mode when the screen is in a landscape\n orientation, which is appropriate behavior for most input methods that have\n a significant input area.</p></p>\n\n<p> <p>When in fullscreen mode, you have some special requirements because the\n user can not see the application UI.  In particular, you should implement\n onDisplayCompletions(CompletionInfo[]) to show completions\n generated by your application, typically in your candidates view like you\n would normally show candidates.</p>\n\n<p> <a name=\"GeneratingText\"></a>\n <h3>Generating Text</h3></p>\n\n<p> <p>The key part of an IME is of course generating text for the application.\n This is done through calls to the\n android.view.inputmethod.InputConnection interface to the\n application, which can be retrieved from <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputConnection\" rel=\"android.inputmethodservice.InputMethodService-method-getCurrentInputConnection\" class=\"docClass\">getCurrentInputConnection</a>().\n This interface allows you to generate raw key events or, if the target\n supports it, directly edit in strings of candidates and committed text.</p></p>\n\n<p> <p>Information about what the target is expected and supports can be found\n through the android.view.inputmethod.EditorInfo class, which is\n retrieved with <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputEditorInfo\" rel=\"android.inputmethodservice.InputMethodService-method-getCurrentInputEditorInfo\" class=\"docClass\">getCurrentInputEditorInfo</a>() method.  The most\n important part of this is EditorInfo.inputType; in particular, if this is\n EditorInfo.TYPE_NULL,\n then the target does not support complex edits and you need to only deliver\n raw key events to it.  An input method will also want to look at other\n values here, to for example detect password mode, auto complete text views,\n phone number entry, etc.</p></p>\n\n<p> <p>When the user switches between input targets, you will receive calls to\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onFinishInput\" rel=\"android.inputmethodservice.InputMethodService-method-onFinishInput\" class=\"docClass\">onFinishInput</a>() and boolean).\n You can use these to reset and initialize your input state for the current\n target.  For example, you will often want to clear any input state, and\n update a soft keyboard to be appropriate for the new inputType.</p></p>\n\n<p> @attr ref android.R.styleable#InputMethodService_imeFullscreenBackground\n @attr ref android.R.styleable#InputMethodService_imeExtractEnterAnimation\n @attr ref android.R.styleable#InputMethodService_imeExtractExitAnimation</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-BACK_DISPOSITION_ADJUST_NOTHING' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-property-BACK_DISPOSITION_ADJUST_NOTHING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_ADJUST_NOTHING' class='name expandable'>BACK_DISPOSITION_ADJUST_NOTHING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Asks the system to not adjust the back button affordance even when the software keyboard is\nshown. ...</div><div class='long'><p>Asks the system to not adjust the back button affordance even when the software keyboard is\nshown.</p>\n\n<p>This mode is useful for UI modes where IME's main soft input window is used for some\nsupplemental UI, such as floating candidate window for languages such as Chinese and\nJapanese, where users expect the back button is, or at least looks to be, handled by the\ntarget application rather than the UI shown by the IME even while <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-isInputViewShown\" class=\"docClass\">isInputViewShown</a>()\nreturns {@code true}.</p>\n\n\n\n\n<p>Note that android.inputmethodservice.Keyboard.KeyEvent.KEYCODE_BACK events continue to be sent to\nandroid.inputmethodservice.Keyboard.KeyEvent) even when this mode is specified. The default\nimplementation of android.inputmethodservice.Keyboard.KeyEvent) for android.inputmethodservice.Keyboard.KeyEvent.KEYCODE_BACK does\nnot take this mode into account.</p>\n\n\n<p>@see <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int)</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-BACK_DISPOSITION_DEFAULT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-property-BACK_DISPOSITION_DEFAULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT' class='name expandable'>BACK_DISPOSITION_DEFAULT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows the system to optimize the back button affordance based on the presence of software\nkeyboard. ...</div><div class='long'><p>Allows the system to optimize the back button affordance based on the presence of software\nkeyboard.</p>\n\n<p>For instance, on devices that have navigation bar and software-rendered back button, the\nsystem may use a different icon while <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-isInputViewShown\" class=\"docClass\">isInputViewShown</a>() returns {@code true}, to\nindicate that the back button has \"dismiss\" affordance.</p>\n\n\n\n\n<p>Note that android.inputmethodservice.Keyboard.KeyEvent.KEYCODE_BACK events continue to be sent to\nandroid.inputmethodservice.Keyboard.KeyEvent) even when this mode is specified. The default\nimplementation of android.inputmethodservice.Keyboard.KeyEvent) for android.inputmethodservice.Keyboard.KeyEvent.KEYCODE_BACK does\nnot take this mode into account.</p>\n\n\n\n\n<p>For API level android.os.Build.VERSION_CODES.O_MR1 and lower devices, this is the\nonly mode you can safely specify without worrying about the compatibility.</p>\n\n\n<p>@see <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int)</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-BACK_DISPOSITION_WILL_DISMISS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-property-BACK_DISPOSITION_WILL_DISMISS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_WILL_DISMISS' class='name expandable'>BACK_DISPOSITION_WILL_DISMISS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Deprecated flag. ...</div><div class='long'><p>Deprecated flag.</p>\n\n<p>To avoid compatibility issues, IME developers should not use this flag.</p>\n\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>on android.os.Build.VERSION_CODES.P and later devices, this flag is\n            handled as a synonym of <a href=\"#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" rel=\"android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" class=\"docClass\">BACK_DISPOSITION_DEFAULT</a>. On\n            android.os.Build.VERSION_CODES.O_MR1 and prior devices, expected behavior\n            of this mode had not been well defined. In AOSP implementation running on devices\n            that have navigation bar, specifying this flag could change the software back\n            button to \"Dismiss\" icon no matter whether the software keyboard is shown or not,\n            but there would be no easy way to restore the icon state even after IME lost the\n            connection to the application. To avoid user confusions, do not specify this mode\n            anyway\n@see <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int)</p>\n\n        </div>\n</div></div></div><div id='property-BACK_DISPOSITION_WILL_NOT_DISMISS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-property-BACK_DISPOSITION_WILL_NOT_DISMISS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_WILL_NOT_DISMISS' class='name expandable'>BACK_DISPOSITION_WILL_NOT_DISMISS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Deprecated flag. ...</div><div class='long'><p>Deprecated flag.</p>\n\n<p>To avoid compatibility issues, IME developers should not use this flag.</p>\n\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>on android.os.Build.VERSION_CODES.P and later devices, this flag is\n            handled as a synonym of <a href=\"#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" rel=\"android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" class=\"docClass\">BACK_DISPOSITION_DEFAULT</a>. On\n            android.os.Build.VERSION_CODES.O_MR1 and prior devices, expected behavior\n            of this mode had not been well defined. Most likely the end result would be the\n            same as <a href=\"#!/api/android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" rel=\"android.inputmethodservice.InputMethodService-property-BACK_DISPOSITION_DEFAULT\" class=\"docClass\">BACK_DISPOSITION_DEFAULT</a>. Either way it is not recommended to\n            use this mode\n@see <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int)</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-enableHardwareAcceleration' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-enableHardwareAcceleration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-enableHardwareAcceleration' class='name expandable'>enableHardwareAcceleration</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>You can call this to try to enable accelerated drawing for your IME. ...</div><div class='long'><p>You can call this to try to enable accelerated drawing for your IME. This must be set before\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreate\" rel=\"android.inputmethodservice.InputMethodService-method-onCreate\" class=\"docClass\">onCreate</a>(), so you will typically call it in your constructor.  It is not always\n possible to use hardware accelerated drawing in an IME (for example on low-end devices that\n do not have the resources to support this), so the call {@code true} if it succeeds otherwise\n {@code false} if you will need to draw in software.  You must be able to handle either case.</p>\n\n<p> <p>In API 21 and later, system may automatically enable hardware accelerated drawing for your\n IME on capable devices even if this method is not explicitly called. Make sure that your IME\n is able to handle either case.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Starting in API 21, hardware acceleration is always enabled on capable devices</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if accelerated drawing is successfully enabled otherwise {@code false}.\n         On API 21 and later devices the return value is basically just a hint and your IME\n         does not need to change the behavior based on the it</p>\n</div></li></ul></div></div></div><div id='method-getBackDisposition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getBackDisposition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getBackDisposition' class='name expandable'>getBackDisposition</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the current disposition mode that indicates the expected back button affordance. ...</div><div class='long'><p>Retrieves the current disposition mode that indicates the expected back button affordance.\n@see <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>currently selected disposition mode</p>\n</div></li></ul></div></div></div><div id='method-getCandidatesHiddenVisibility' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getCandidatesHiddenVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getCandidatesHiddenVisibility' class='name expandable'>getCandidatesHiddenVisibility</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the visibility mode (either View.INVISIBLE\n or View.GONE) of the candidates view when it is not\n shown. ...</div><div class='long'><p>Returns the visibility mode (either View.INVISIBLE\n or View.GONE) of the candidates view when it is not\n shown.  The default implementation returns GONE when\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isExtractViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-isExtractViewShown\" class=\"docClass\">isExtractViewShown</a> returns true,\n otherwise VISIBLE.  Be careful if you change this to return GONE in\n other situations -- if showing or hiding the candidates view causes\n your window to resize, this can cause temporary drawing artifacts as\n the resize takes place.</p>\n</div></div></div><div id='method-getCurrentInputBinding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getCurrentInputBinding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputBinding' class='name expandable'>getCurrentInputBinding</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the currently active InputBinding for the input method, or\n null if there is none. ...</div><div class='long'><p>Return the currently active InputBinding for the input method, or\n null if there is none.</p>\n</div></div></div><div id='method-getCurrentInputConnection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getCurrentInputConnection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputConnection' class='name expandable'>getCurrentInputConnection</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the currently active InputConnection that is bound to\n the input method, or null if there is none. ...</div><div class='long'><p>Retrieve the currently active InputConnection that is bound to\n the input method, or null if there is none.</p>\n</div></div></div><div id='method-getCurrentInputEditorInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getCurrentInputEditorInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputEditorInfo' class='name expandable'>getCurrentInputEditorInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getCurrentInputStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getCurrentInputStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputStarted' class='name expandable'>getCurrentInputStarted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getInputMethodWindowRecommendedHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getInputMethodWindowRecommendedHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getInputMethodWindowRecommendedHeight' class='name expandable'>getInputMethodWindowRecommendedHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Aimed to return the previous input method's android.inputmethodservice.InputMethodService.Insets.contentTopandroid.in...</div><div class='long'><p>Aimed to return the previous input method's android.inputmethodservice.InputMethodService.Insets.contentTopandroid.inputmethodservice.InputMethodService.Insets, but its actual\n semantics has never been well defined.</p>\n\n<p> <p>Note that the previous document clearly mentioned that this method could return {@code 0}\n at any time for whatever reason.  Now this method is just always returning {@code 0}.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>the actual behavior of this method has never been well defined.  You cannot use\n             this method in a reliable and predictable way</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>on Android android.os.Build.VERSION_CODES.Q and later devices this method\n         always returns {@code 0}</p>\n</div></li></ul></div></div></div><div id='method-getKeyDispatcherState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.inputmethodservice.AbstractInputMethodService' rel='android.inputmethodservice.AbstractInputMethodService' class='defined-in docClass'>android.inputmethodservice.AbstractInputMethodService</a><br/><a href='source/AbstractInputMethodService.html#android-inputmethodservice-AbstractInputMethodService-method-getKeyDispatcherState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.AbstractInputMethodService-method-getKeyDispatcherState' class='name expandable'>getKeyDispatcherState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the global android.inputmethodservice.Keyboard.KeyEvent.DispatcherState\n for used for processing events from t...</div><div class='long'><p>Return the global android.inputmethodservice.Keyboard.KeyEvent.DispatcherState\n for used for processing events from the target application.\n Normally you will not need to use this directly, but\n just use the standard high-level event callbacks like onKeyDown.</p>\n</div></div></div><div id='method-getLayoutInflater' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getLayoutInflater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getLayoutInflater' class='name expandable'>getLayoutInflater</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getMaxWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getMaxWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getMaxWidth' class='name expandable'>getMaxWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the maximum width, in pixels, available the input method. ...</div><div class='long'><p>Return the maximum width, in pixels, available the input method.\n Input methods are positioned at the bottom of the screen and, unless\n running in fullscreen, will generally want to be as short as possible\n so should compute their height based on their contents.  However, they\n can stretch as much as needed horizontally.  The function returns to\n you the maximum amount of space available horizontally, which you can\n use if needed for UI placement.</p>\n\n<p> <p>In many cases this is not needed, you can just rely on the normal\n view layout mechanisms to position your views within the full horizontal\n space given to the input method.</p>\n\n<p> <p>Note that this value can change dynamically, in particular when the\n screen orientation changes.</p>\n</div></div></div><div id='method-getTextForImeAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getTextForImeAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getTextForImeAction' class='name expandable'>getTextForImeAction</a>( <span class='pre'>imeOptions</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return text that can be used as a button label for the given\n EditorInfo.imeOptions. ...</div><div class='long'><p>Return text that can be used as a button label for the given\n EditorInfo.imeOptions.  Returns null\n if there is no action requested.  Note that there is no guarantee that\n the returned text will be relatively short, so you probably do not\n want to use it as text on a soft keyboard key label.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imeOptions</span> : Number<div class='sub-desc'><p>The value from EditorInfo.imeOptions.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>Returns a label to use, or null if there is no action.</p>\n</div></li></ul></div></div></div><div id='method-getWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-getWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-getWindow' class='name expandable'>getWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-hideStatusIcon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-hideStatusIcon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-hideStatusIcon' class='name expandable'>hideStatusIcon</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-hideWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-hideWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-hideWindow' class='name expandable'>hideWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-isExtractViewShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-isExtractViewShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-isExtractViewShown' class='name expandable'>isExtractViewShown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the fullscreen extract view is shown. ...</div><div class='long'><p>Return whether the fullscreen extract view is shown.  This will only\n return true if <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-isFullscreenMode\" class=\"docClass\">isFullscreenMode</a>() returns true, and in that\n case its value depends on the last call to\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setExtractViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-setExtractViewShown\" class=\"docClass\">setExtractViewShown</a>(boolean).  This effectively lets you\n determine if the application window is entirely covered (when this\n returns true) or if some part of it may be shown (if this returns\n false, though if <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-isFullscreenMode\" class=\"docClass\">isFullscreenMode</a>() returns true in that case\n then it is probably only a sliver of the application).</p>\n</div></div></div><div id='method-isFullscreenMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-isFullscreenMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-isFullscreenMode' class='name expandable'>isFullscreenMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the input method is currently running in\n fullscreen mode. ...</div><div class='long'><p>Return whether the input method is <em>currently</em> running in\n fullscreen mode.  This is the mode that was last determined and\n applied by <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-updateFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-updateFullscreenMode\" class=\"docClass\">updateFullscreenMode</a>().</p>\n</div></div></div><div id='method-isInputViewShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-isInputViewShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-isInputViewShown' class='name expandable'>isInputViewShown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the soft input view is currently shown to the\n user. ...</div><div class='long'><p>Return whether the soft input view is <em>currently</em> shown to the\n user.  This is the state that was last determined and\n applied by <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-updateInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-updateInputViewShown\" class=\"docClass\">updateInputViewShown</a>().</p>\n</div></div></div><div id='method-isShowInputRequested' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-isShowInputRequested' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-isShowInputRequested' class='name expandable'>isShowInputRequested</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if we have been asked to show our input view. ...</div><div class='long'><p>Returns true if we have been asked to show our input view.</p>\n</div></div></div><div id='method-onAppPrivateCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onAppPrivateCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onAppPrivateCommand' class='name expandable'>onAppPrivateCommand</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onBind' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.inputmethodservice.AbstractInputMethodService' rel='android.inputmethodservice.AbstractInputMethodService' class='defined-in docClass'>android.inputmethodservice.AbstractInputMethodService</a><br/><a href='source/AbstractInputMethodService.html#android-inputmethodservice-AbstractInputMethodService-method-onBind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.AbstractInputMethodService-method-onBind' class='name expandable'>onBind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onBindInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onBindInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onBindInput' class='name expandable'>onBindInput</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a new client has bound to the input method. ...</div><div class='long'><p>Called when a new client has bound to the input method.  This\n may be followed by a series of boolean)\n and <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onFinishInput\" rel=\"android.inputmethodservice.InputMethodService-method-onFinishInput\" class=\"docClass\">onFinishInput</a>() calls as the user navigates through its\n UI.  Upon this call you know that <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputBinding\" rel=\"android.inputmethodservice.InputMethodService-method-getCurrentInputBinding\" class=\"docClass\">getCurrentInputBinding</a>\n and <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputConnection\" rel=\"android.inputmethodservice.InputMethodService-method-getCurrentInputConnection\" class=\"docClass\">getCurrentInputConnection</a> return valid objects.</p>\n</div></div></div><div id='method-onComputeInsets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onComputeInsets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onComputeInsets' class='name expandable'>onComputeInsets</a>( <span class='pre'>outInsets</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Compute the interesting insets into your UI. ...</div><div class='long'><p>Compute the interesting insets into your UI.  The default implementation\n uses the top of the candidates frame for the visible insets, and the\n top of the input frame for the content insets.  The default touchable\n insets are <a href=\"#!/api/android.inputmethodservice.InputMethodService.Insets-property-TOUCHABLE_INSETS_VISIBLE\" rel=\"android.inputmethodservice.InputMethodService.Insets-property-TOUCHABLE_INSETS_VISIBLE\" class=\"docClass\">android.inputmethodservice.InputMethodService.Insets.TOUCHABLE_INSETS_VISIBLE</a>.</p>\n\n<p> <p>Note that this method is not called when\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isExtractViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-isExtractViewShown\" class=\"docClass\">isExtractViewShown</a> returns true, since\n in that case the application is left as-is behind the input method and\n not impacted by anything in its UI.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outInsets</span> : Object {InputMethodService.Insets}<div class='sub-desc'><p>Fill in with the current UI insets.</p>\n</div></li></ul></div></div></div><div id='method-onConfigurationChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onConfigurationChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onConfigurationChanged' class='name expandable'>onConfigurationChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Take care of handling configuration changes. ...</div><div class='long'><p>Take care of handling configuration changes.  Subclasses of\n InputMethodService generally don't need to deal directly with\n this on their own; the standard implementation here takes care of\n regenerating the input method UI as a result of the configuration\n change, so you can rely on your <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateInputView\" class=\"docClass\">onCreateInputView</a> and\n other methods being called as appropriate due to a configuration change.</p>\n\n<p> <p>When a configuration change does happen,\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onInitializeInterface\" rel=\"android.inputmethodservice.InputMethodService-method-onInitializeInterface\" class=\"docClass\">onInitializeInterface</a>() is guaranteed to be called the next\n time prior to any of the other input or UI creation callbacks.  The\n following will be called immediately depending if appropriate for current\n state: <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onStartInput\" rel=\"android.inputmethodservice.InputMethodService-method-onStartInput\" class=\"docClass\">onStartInput</a> if input is active, and\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateInputView\" class=\"docClass\">onCreateInputView</a> and <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onStartInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onStartInputView\" class=\"docClass\">onStartInputView</a> and related\n appropriate functions if the UI is displayed.</p>\n</div></div></div><div id='method-onConfigureWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onConfigureWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onConfigureWindow' class='name expandable'>onConfigureWindow</a>( <span class='pre'>win, isFullscreen, isCandidatesOnly</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the given window's parameters for the given mode. ...</div><div class='long'><p>Update the given window's parameters for the given mode.  This is called\n when the window is first displayed and each time the fullscreen or\n candidates only mode changes.</p>\n\n<p> <p>The default implementation makes the layout for the window\n MATCH_PARENT x MATCH_PARENT when in fullscreen mode, and\n MATCH_PARENT x WRAP_CONTENT when in non-fullscreen mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>win</span> : Object {Window}<div class='sub-desc'><p>The input method's window.</p>\n</div></li><li><span class='pre'>isFullscreen</span> : Boolean<div class='sub-desc'><p>If true, the window is running in fullscreen mode\n and intended to cover the entire application display.</p>\n</div></li><li><span class='pre'>isCandidatesOnly</span> : Boolean<div class='sub-desc'><p>If true, the window is only showing the\n candidates view and none of the rest of its UI.  This is mutually\n exclusive with fullscreen mode.</p>\n</div></li></ul></div></div></div><div id='method-onCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onCreateCandidatesView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onCreateCandidatesView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onCreateCandidatesView' class='name expandable'>onCreateCandidatesView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create and return the view hierarchy used to show candidates. ...</div><div class='long'><p>Create and return the view hierarchy used to show candidates.  This will\n be called once, when the candidates are first displayed.  You can return\n null to have no candidates view; the default implementation returns null.</p>\n\n<p> <p>To control when the candidates view is displayed, use\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setCandidatesViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-setCandidatesViewShown\" class=\"docClass\">setCandidatesViewShown</a>(boolean).\n To change the candidates view after the first one is created by this\n function, use <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setCandidatesView\" rel=\"android.inputmethodservice.InputMethodService-method-setCandidatesView\" class=\"docClass\">setCandidatesView</a>(View).</p>\n</div></div></div><div id='method-onCreateExtractTextView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onCreateExtractTextView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onCreateExtractTextView' class='name expandable'>onCreateExtractTextView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the framework to create the layout for showing extacted text. ...</div><div class='long'><p>Called by the framework to create the layout for showing extacted text.\n Only called when in fullscreen mode.  The returned view hierarchy must\n have an <a href=\"#!/api/android.inputmethodservice.ExtractEditText\" rel=\"android.inputmethodservice.ExtractEditText\" class=\"docClass\">android.inputmethodservice.ExtractEditText</a> whose ID is\n android.R.id.inputExtractEditText.</p>\n</div></div></div><div id='method-onCreateInputMethodInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onCreateInputMethodInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputMethodInterface' class='name expandable'>onCreateInputMethodInterface</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implement to return our standard android.inputmethodservice.InputMethodService.InputMethodImpl. ...</div><div class='long'><p>Implement to return our standard <a href=\"#!/api/android.inputmethodservice.InputMethodService.InputMethodImpl\" rel=\"android.inputmethodservice.InputMethodService.InputMethodImpl\" class=\"docClass\">android.inputmethodservice.InputMethodService.InputMethodImpl</a>.  Subclasses\n can override to provide their own customized version.</p>\n<p>Overrides: <a href=\"#!/api/android.inputmethodservice.AbstractInputMethodService-method-onCreateInputMethodInterface\" rel=\"android.inputmethodservice.AbstractInputMethodService-method-onCreateInputMethodInterface\" class=\"docClass\">android.inputmethodservice.AbstractInputMethodService.onCreateInputMethodInterface</a></p></div></div></div><div id='method-onCreateInputMethodSessionInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onCreateInputMethodSessionInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputMethodSessionInterface' class='name expandable'>onCreateInputMethodSessionInterface</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implement to return our standard android.inputmethodservice.InputMethodService.InputMethodSessionImpl. ...</div><div class='long'><p>Implement to return our standard <a href=\"#!/api/android.inputmethodservice.InputMethodService.InputMethodSessionImpl\" rel=\"android.inputmethodservice.InputMethodService.InputMethodSessionImpl\" class=\"docClass\">android.inputmethodservice.InputMethodService.InputMethodSessionImpl</a>.  Subclasses\n can override to provide their own customized version.</p>\n<p>Overrides: <a href=\"#!/api/android.inputmethodservice.AbstractInputMethodService-method-onCreateInputMethodSessionInterface\" rel=\"android.inputmethodservice.AbstractInputMethodService-method-onCreateInputMethodSessionInterface\" class=\"docClass\">android.inputmethodservice.AbstractInputMethodService.onCreateInputMethodSessionInterface</a></p></div></div></div><div id='method-onCreateInputView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onCreateInputView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputView' class='name expandable'>onCreateInputView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create and return the view hierarchy used for the input area (such as\n a soft keyboard). ...</div><div class='long'><p>Create and return the view hierarchy used for the input area (such as\n a soft keyboard).  This will be called once, when the input area is\n first displayed.  You can return null to have no input area; the default\n implementation returns null.</p>\n\n<p> <p>To control when the input view is displayed, implement\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" class=\"docClass\">onEvaluateInputViewShown</a>().\n To change the input view after the first one is created by this\n function, use <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setInputView\" rel=\"android.inputmethodservice.InputMethodService-method-setInputView\" class=\"docClass\">setInputView</a>(View).</p>\n</div></div></div><div id='method-onDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onDestroy' class='name expandable'>onDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onDisplayCompletions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onDisplayCompletions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onDisplayCompletions' class='name expandable'>onDisplayCompletions</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application has reported auto-completion candidates that\n it would like to have the input method disp...</div><div class='long'><p>Called when the application has reported auto-completion candidates that\n it would like to have the input method displayed.  Typically these are\n only used when an input method is running in full-screen mode, since\n otherwise the user can see and interact with the pop-up window of\n completions shown by the application.</p>\n\n<p> <p>The default implementation here does nothing.</p>\n</div></div></div><div id='method-onEvaluateFullscreenMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onEvaluateFullscreenMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateFullscreenMode' class='name expandable'>onEvaluateFullscreenMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this to control when the input method should run in\n fullscreen mode. ...</div><div class='long'><p>Override this to control when the input method should run in\n fullscreen mode.  The default implementation runs in fullsceen only\n when the screen is in landscape mode.  If you change what\n this returns, you will need to call <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-updateFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-updateFullscreenMode\" class=\"docClass\">updateFullscreenMode</a>()\n yourself whenever the returned value may have changed to have it\n re-evaluated and applied.</p>\n</div></div></div><div id='method-onEvaluateInputViewShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onEvaluateInputViewShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown' class='name expandable'>onEvaluateInputViewShown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this to control when the soft input area should be shown to the user. ...</div><div class='long'><p>Override this to control when the soft input area should be shown to the user.  The default\n implementation returns {@code false} when there is no hard keyboard or the keyboard is hidden\n unless the user shows an intention to use software keyboard.  If you change what this\n returns, you will need to call <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-updateInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-updateInputViewShown\" class=\"docClass\">updateInputViewShown</a>() yourself whenever the returned\n value may have changed to have it re-evaluated and applied.</p>\n\n<p> <p>When you override this method, it is recommended to call\n {@code super.onEvaluateInputViewShown()} and return {@code true} when {@code true} is\n returned.</p></p>\n</div></div></div><div id='method-onExtractTextContextMenuItem' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onExtractTextContextMenuItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onExtractTextContextMenuItem' class='name expandable'>onExtractTextContextMenuItem</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when the user has selected a context menu item from the\n extracted text view, when running in fullscre...</div><div class='long'><p>This is called when the user has selected a context menu item from the\n extracted text view, when running in fullscreen mode.  The default\n implementation sends this action to the current InputConnection's\n InputConnection.performContextMenuAction(int), for it\n to be processed in underlying \"real\" editor.  Re-implement this to\n provide whatever behavior you want.</p>\n</div></div></div><div id='method-onExtractedCursorMovement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onExtractedCursorMovement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onExtractedCursorMovement' class='name expandable'>onExtractedCursorMovement</a>( <span class='pre'>dx, dy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when the user has performed a cursor movement in the\n extracted text view, when it is running in fulls...</div><div class='long'><p>This is called when the user has performed a cursor movement in the\n extracted text view, when it is running in fullscreen mode.  The default\n implementation hides the candidates view when a vertical movement\n happens, but only if the extracted text editor has a vertical scroll bar\n because its text doesn't fit.\n Re-implement this to provide whatever behavior you want.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dx</span> : Number<div class='sub-desc'><p>The amount of cursor movement in the x dimension.</p>\n</div></li><li><span class='pre'>dy</span> : Number<div class='sub-desc'><p>The amount of cursor movement in the y dimension.</p>\n</div></li></ul></div></div></div><div id='method-onExtractedSelectionChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onExtractedSelectionChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onExtractedSelectionChanged' class='name expandable'>onExtractedSelectionChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when the user has moved the cursor in the extracted\n text view, when running in fullsreen mode. ...</div><div class='long'><p>This is called when the user has moved the cursor in the extracted\n text view, when running in fullsreen mode.  The default implementation\n performs the corresponding selection change on the underlying text\n editor.</p>\n</div></div></div><div id='method-onExtractedTextClicked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onExtractedTextClicked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onExtractedTextClicked' class='name expandable'>onExtractedTextClicked</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when the user has clicked on the extracted text view,\n when running in fullscreen mode. ...</div><div class='long'><p>This is called when the user has clicked on the extracted text view,\n when running in fullscreen mode.  The default implementation hides\n the candidates view when this happens, but only if the extracted text\n editor has a vertical scroll bar because its text doesn't fit.\n Re-implement this to provide whatever behavior you want.</p>\n</div></div></div><div id='method-onExtractingInputChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onExtractingInputChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onExtractingInputChanged' class='name expandable'>onExtractingInputChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when, while currently displayed in extract mode, the\n current input target changes. ...</div><div class='long'><p>This is called when, while currently displayed in extract mode, the\n current input target changes.  The default implementation will\n auto-hide the IME if the new target is not a full editor, since this\n can be a confusing experience for the user.</p>\n</div></div></div><div id='method-onFinishCandidatesView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onFinishCandidatesView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onFinishCandidatesView' class='name expandable'>onFinishCandidatesView</a>( <span class='pre'>finishingInput</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the candidates view is being hidden from the user. ...</div><div class='long'><p>Called when the candidates view is being hidden from the user.  This will\n be called either prior to hiding the window, or prior to switching to\n another target for editing.</p>\n\n<p> <p>The default\n implementation uses the InputConnection to clear any active composing\n text; you can override this (not calling the base class implementation)\n to perform whatever behavior you would like.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>finishingInput</span> : Boolean<div class='sub-desc'><p>If true, <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onFinishInput\" rel=\"android.inputmethodservice.InputMethodService-method-onFinishInput\" class=\"docClass\">onFinishInput</a> will be\n called immediately after.</p>\n</div></li></ul></div></div></div><div id='method-onFinishInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onFinishInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onFinishInput' class='name expandable'>onFinishInput</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to inform the input method that text input has finished in\n the last editor. ...</div><div class='long'><p>Called to inform the input method that text input has finished in\n the last editor.  At this point there may be a call to\n boolean) to perform input in a\n new editor, or the input method may be left idle.  This method is\n <em>not</em> called when input restarts in the same editor.</p>\n\n<p> <p>The default\n implementation uses the InputConnection to clear any active composing\n text; you can override this (not calling the base class implementation)\n to perform whatever behavior you would like.</p>\n</div></div></div><div id='method-onFinishInputView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onFinishInputView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onFinishInputView' class='name expandable'>onFinishInputView</a>( <span class='pre'>finishingInput</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the input view is being hidden from the user. ...</div><div class='long'><p>Called when the input view is being hidden from the user.  This will\n be called either prior to hiding the window, or prior to switching to\n another target for editing.</p>\n\n<p> <p>The default\n implementation uses the InputConnection to clear any active composing\n text; you can override this (not calling the base class implementation)\n to perform whatever behavior you would like.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>finishingInput</span> : Boolean<div class='sub-desc'><p>If true, <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onFinishInput\" rel=\"android.inputmethodservice.InputMethodService-method-onFinishInput\" class=\"docClass\">onFinishInput</a> will be\n called immediately after.</p>\n</div></li></ul></div></div></div><div id='method-onGenericMotionEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onGenericMotionEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onGenericMotionEvent' class='name expandable'>onGenericMotionEvent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this to intercept generic motion events before they are\n processed by the application. ...</div><div class='long'><p>Override this to intercept generic motion events before they are\n processed by the application.\n If you return true, the application will not itself process the event.\n If you return false, the normal application processing will occur as if\n the IME had not seen the event at all.</p>\n<p>Overrides: <a href=\"#!/api/android.inputmethodservice.AbstractInputMethodService-method-onGenericMotionEvent\" rel=\"android.inputmethodservice.AbstractInputMethodService-method-onGenericMotionEvent\" class=\"docClass\">android.inputmethodservice.AbstractInputMethodService.onGenericMotionEvent</a></p></div></div></div><div id='method-onInitializeInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onInitializeInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onInitializeInterface' class='name expandable'>onInitializeInterface</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is a hook that subclasses can use to perform initialization of\n their interface. ...</div><div class='long'><p>This is a hook that subclasses can use to perform initialization of\n their interface.  It is called for you prior to any of your UI objects\n being created, both after the service is first created and after a\n configuration change happens.</p>\n</div></div></div><div id='method-onKeyDown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onKeyDown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onKeyDown' class='name expandable'>onKeyDown</a>( <span class='pre'>keyCode, event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called back when a android.inputmethodservice.Keyboard.KeyEvent is forwarded from the target application. ...</div><div class='long'><p>Called back when a android.inputmethodservice.Keyboard.KeyEvent is forwarded from the target application.</p>\n\n<p> <p>The default implementation intercepts android.inputmethodservice.Keyboard.KeyEvent.KEYCODE_BACK if the IME is\n currently shown , to possibly hide it when the key goes up (if not canceled or long pressed).\n In addition, in fullscreen mode only, it will consume DPAD movement events to move the cursor\n in the extracted text view, not allowing them to perform navigation in the underlying\n application.</p></p>\n\n<p> <p>The default implementation does not take flags specified to\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int) into account, even on API version\n android.os.Build.VERSION_CODES.P and later devices.  IME developers are responsible\n for making sure that their special handling for android.inputmethodservice.Keyboard.KeyEvent.KEYCODE_BACK are consistent\n with the flag they specified to <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition\" rel=\"android.inputmethodservice.InputMethodService-method-setBackDisposition\" class=\"docClass\">setBackDisposition</a>(int).</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyCode</span> : Number<div class='sub-desc'><p>The value in {@code event.getKeyCode()}</p>\n</div></li><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>Description of the key event</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the event is consumed by the IME and the application no longer needs\n         to consume it.  Return {@code false} when the event should be handled as if the IME\n         had not seen the event at all.</p>\n</div></li></ul></div></div></div><div id='method-onKeyLongPress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onKeyLongPress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onKeyLongPress' class='name expandable'>onKeyLongPress</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of android.inputmethodservice.Keyboard.KeyEvent)\n android.inputmethodservice.Keyboard.KeyEvent...</div><div class='long'><p>Default implementation of android.inputmethodservice.Keyboard.KeyEvent)\n android.inputmethodservice.Keyboard.KeyEvent.Callback.onandroid.inputmethodservice.Keyboard.KeyLongPress(): always returns false (doesn't handle\n the event).</p>\n</div></div></div><div id='method-onKeyMultiple' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onKeyMultiple' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onKeyMultiple' class='name expandable'>onKeyMultiple</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this to intercept special key multiple events before they are\n processed by the\n application. ...</div><div class='long'><p>Override this to intercept special key multiple events before they are\n processed by the\n application.  If you return true, the application will not itself\n process the event.  If you return false, the normal application processing\n will occur as if the IME had not seen the event at all.</p>\n\n<p> <p>The default implementation always returns false, except when\n in fullscreen mode, where it will consume DPAD movement\n events to move the cursor in the extracted text view, not allowing\n them to perform navigation in the underlying application.</p>\n</div></div></div><div id='method-onKeyUp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onKeyUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onKeyUp' class='name expandable'>onKeyUp</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this to intercept key up events before they are processed by the\n application. ...</div><div class='long'><p>Override this to intercept key up events before they are processed by the\n application.  If you return true, the application will not itself\n process the event.  If you return false, the normal application processing\n will occur as if the IME had not seen the event at all.</p>\n\n<p> <p>The default implementation intercepts android.inputmethodservice.Keyboard.KeyEvent.KEYCODE_BACK to hide the current IME UI if it is shown.  In\n addition, in fullscreen mode only, it will consume DPAD movement\n events to move the cursor in the extracted text view, not allowing\n them to perform navigation in the underlying application.</p>\n</div></div></div><div id='method-onShowInputRequested' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onShowInputRequested' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onShowInputRequested' class='name expandable'>onShowInputRequested</a>( <span class='pre'>flags, configChange</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>The system has decided that it may be time to show your input method. ...</div><div class='long'><p>The system has decided that it may be time to show your input method.\n This is called due to a corresponding call to your\n InputMethod.showSoftInput()\n method.  The default implementation uses\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" class=\"docClass\">onEvaluateInputViewShown</a>(), <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-onEvaluateFullscreenMode\" class=\"docClass\">onEvaluateFullscreenMode</a>(),\n and the current configuration to decide whether the input view should\n be shown at this point.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Provides additional information about the show request,\n as per InputMethod.showSoftInput().</p>\n</div></li><li><span class='pre'>configChange</span> : Boolean<div class='sub-desc'><p>This is true if we are re-showing due to a\n configuration change.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true to indicate that the window should be shown.</p>\n</div></li></ul></div></div></div><div id='method-onStartCandidatesView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onStartCandidatesView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onStartCandidatesView' class='name expandable'>onStartCandidatesView</a>( <span class='pre'>info, restarting</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when only the candidates view has been shown for showing\n processing as the user enters text through a hard ke...</div><div class='long'><p>Called when only the candidates view has been shown for showing\n processing as the user enters text through a hard keyboard.\n This will always be called after <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onStartInput\" rel=\"android.inputmethodservice.InputMethodService-method-onStartInput\" class=\"docClass\">onStartInput</a>,\n allowing you to do your general setup there and just view-specific\n setup here.  You are guaranteed that <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" class=\"docClass\">onCreateCandidatesView</a>()\n will have been called some time before this function is called.</p>\n\n<p> <p>Note that this will <em>not</em> be called when the input method\n is running in full editing mode, and thus receiving\n <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onStartInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onStartInputView\" class=\"docClass\">onStartInputView</a> to initiate that operation.  This is only\n for the case when candidates are being shown while the input method\n editor is hidden but wants to show its candidates UI as text is\n entered through some other mechanism.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>info</span> : Object {EditorInfo}<div class='sub-desc'><p>Description of the type of text being edited.</p>\n</div></li><li><span class='pre'>restarting</span> : Boolean<div class='sub-desc'><p>Set to true if we are restarting input on the\n same text field as before.</p>\n</div></li></ul></div></div></div><div id='method-onStartInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onStartInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onStartInput' class='name expandable'>onStartInput</a>( <span class='pre'>attribute, restarting</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to inform the input method that text input has started in an\n editor. ...</div><div class='long'><p>Called to inform the input method that text input has started in an\n editor.  You should use this callback to initialize the state of your\n input to match the state of the editor given to it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attribute</span> : Object {EditorInfo}<div class='sub-desc'><p>The attributes of the editor that input is starting\n in.</p>\n</div></li><li><span class='pre'>restarting</span> : Boolean<div class='sub-desc'><p>Set to true if input is restarting in the same\n editor such as because the application has changed the text in\n the editor.  Otherwise will be false, indicating this is a new\n session with the editor.</p>\n</div></li></ul></div></div></div><div id='method-onStartInputView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onStartInputView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onStartInputView' class='name expandable'>onStartInputView</a>( <span class='pre'>info, restarting</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the input view is being shown and input has started on\n a new editor. ...</div><div class='long'><p>Called when the input view is being shown and input has started on\n a new editor.  This will always be called after <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onStartInput\" rel=\"android.inputmethodservice.InputMethodService-method-onStartInput\" class=\"docClass\">onStartInput</a>,\n allowing you to do your general setup there and just view-specific\n setup here.  You are guaranteed that <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateInputView\" class=\"docClass\">onCreateInputView</a>() will\n have been called some time before this function is called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>info</span> : Object {EditorInfo}<div class='sub-desc'><p>Description of the type of text being edited.</p>\n</div></li><li><span class='pre'>restarting</span> : Boolean<div class='sub-desc'><p>Set to true if we are restarting input on the\n same text field as before.</p>\n</div></li></ul></div></div></div><div id='method-onTrackballEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onTrackballEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onTrackballEvent' class='name expandable'>onTrackballEvent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this to intercept trackball motion events before they are\n processed by the application. ...</div><div class='long'><p>Override this to intercept trackball motion events before they are\n processed by the application.\n If you return true, the application will not itself process the event.\n If you return false, the normal application processing will occur as if\n the IME had not seen the event at all.</p>\n<p>Overrides: <a href=\"#!/api/android.inputmethodservice.AbstractInputMethodService-method-onTrackballEvent\" rel=\"android.inputmethodservice.AbstractInputMethodService-method-onTrackballEvent\" class=\"docClass\">android.inputmethodservice.AbstractInputMethodService.onTrackballEvent</a></p></div></div></div><div id='method-onUnbindInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onUnbindInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onUnbindInput' class='name expandable'>onUnbindInput</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the previous bound client is no longer associated\n with the input method. ...</div><div class='long'><p>Called when the previous bound client is no longer associated\n with the input method.  After returning <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputBinding\" rel=\"android.inputmethodservice.InputMethodService-method-getCurrentInputBinding\" class=\"docClass\">getCurrentInputBinding</a>\n and <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-getCurrentInputConnection\" rel=\"android.inputmethodservice.InputMethodService-method-getCurrentInputConnection\" class=\"docClass\">getCurrentInputConnection</a> will no longer return\n valid objects.</p>\n</div></div></div><div id='method-onUpdateCursor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onUpdateCursor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onUpdateCursor' class='name expandable'>onUpdateCursor</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called when the application has reported a new location of its text\n cursor. ...</div><div class='long'><p>Called when the application has reported a new location of its text\n cursor.  This is only called if explicitly requested by the input method.\n The default implementation does nothing.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use onUpdateCursorAnchorInfo(CursorAnchorInfo) instead.</p>\n\n        </div>\n</div></div></div><div id='method-onUpdateCursorAnchorInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onUpdateCursorAnchorInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onUpdateCursorAnchorInfo' class='name expandable'>onUpdateCursorAnchorInfo</a>( <span class='pre'>cursorAnchorInfo</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application has reported a new location of its text insertion point and\n characters in the compositio...</div><div class='long'><p>Called when the application has reported a new location of its text insertion point and\n characters in the composition string.  This is only called if explicitly requested by the\n input method. The default implementation does nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cursorAnchorInfo</span> : Object {CursorAnchorInfo}<div class='sub-desc'><p>The positional information of the text insertion point and the\n composition string.</p>\n</div></li></ul></div></div></div><div id='method-onUpdateExtractedText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onUpdateExtractedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onUpdateExtractedText' class='name expandable'>onUpdateExtractedText</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application has reported new extracted text to be shown\n due to changes in its current text state. ...</div><div class='long'><p>Called when the application has reported new extracted text to be shown\n due to changes in its current text state.  The default implementation\n here places the new text in the extract edit text, when the input\n method is running in fullscreen mode.</p>\n</div></div></div><div id='method-onUpdateExtractingViews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onUpdateExtractingViews' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onUpdateExtractingViews' class='name expandable'>onUpdateExtractingViews</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the fullscreen-mode extracting editor info has changed,\n to update the state of its UI such as the action...</div><div class='long'><p>Called when the fullscreen-mode extracting editor info has changed,\n to update the state of its UI such as the action buttons shown.\n You do not need to deal with this if you are using the standard\n full screen extract UI.  If replacing it, you will need to re-implement\n this to put the appropriate action button in your own UI and handle it,\n and perform any other changes.</p>\n\n<p> <p>The standard implementation turns on or off its accessory area\n depending on whether there is an action button, and hides or shows\n the entire extract area depending on whether it makes sense for the\n current editor.  In particular, a InputType.TYPE_NULL or\n InputType.TYPE_TEXT_VARIATION_FILTER input type will turn off the\n extract area since there is no text to be shown.</p>\n</div></div></div><div id='method-onUpdateExtractingVisibility' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onUpdateExtractingVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onUpdateExtractingVisibility' class='name expandable'>onUpdateExtractingVisibility</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the fullscreen-mode extracting editor info has changed,\n to determine whether the extracting (extract tex...</div><div class='long'><p>Called when the fullscreen-mode extracting editor info has changed,\n to determine whether the extracting (extract text and candidates) portion\n of the UI should be shown.  The standard implementation hides or shows\n the extract area depending on whether it makes sense for the\n current editor.  In particular, a InputType.TYPE_NULL\n input type or EditorInfo.IME_FLAG_NO_EXTRACT_UI flag will\n turn off the extract area since there is no text to be shown.</p>\n</div></div></div><div id='method-onUpdateSelection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onUpdateSelection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onUpdateSelection' class='name expandable'>onUpdateSelection</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application has reported a new selection region of\n the text. ...</div><div class='long'><p>Called when the application has reported a new selection region of\n the text.  This is called whether or not the input method has requested\n extracted text updates, although if so it will not receive this call\n if the extracted text has changed as well.</p>\n\n<p> <p>Be careful about changing the text in reaction to this call with\n methods such as setComposingText, commitText or\n deleteSurroundingText. If the cursor moves as a result, this method\n will be called again, which may result in an infinite loop.</p>\n\n<p> <p>The default implementation takes care of updating the cursor in\n the extract text, if it is being shown.</p>\n</div></div></div><div id='method-onViewClicked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onViewClicked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onViewClicked' class='name expandable'>onViewClicked</a>( <span class='pre'>focusChanged</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called when the user tapped or clicked a text view. ...</div><div class='long'><p>Called when the user tapped or clicked a text view.\n IMEs can't rely on this method being called because this was not part of the original IME\n protocol, so applications with custom text editing written before this method appeared will\n not call to inform the IME of this interaction.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The method may not be called for composite View that works as a giant\n             \"Canvas\", which can host its own UI hierarchy and sub focus state.\n             android.webkit.WebView is a good example. Application / IME developers\n             should not rely on this method. If your goal is just being notified when an\n             on-going input is interrupted, simply monitor onFinishInput().</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>focusChanged</span> : Boolean<div class='sub-desc'><p>true if the user changed the focused view by this click.\n@see InputMethodManager#viewClicked(View)</p>\n</div></li></ul></div></div></div><div id='method-onWindowHidden' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onWindowHidden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onWindowHidden' class='name expandable'>onWindowHidden</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the input method window has been hidden from the user,\n after previously being visible. ...</div><div class='long'><p>Called when the input method window has been hidden from the user,\n after previously being visible.</p>\n</div></div></div><div id='method-onWindowShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-onWindowShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-onWindowShown' class='name expandable'>onWindowShown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called immediately before the input method window is shown to the user. ...</div><div class='long'><p>Called immediately before the input method window is shown to the user.\n You could override this to prepare for the window to be shown\n (update view structure etc).</p>\n</div></div></div><div id='method-requestHideSelf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-requestHideSelf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-requestHideSelf' class='name expandable'>requestHideSelf</a>( <span class='pre'>flags, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close this input method's soft input area, removing it from the display. ...</div><div class='long'><p>Close this input method's soft input area, removing it from the display.</p>\n\n<p> The input method will continue running, but the user can no longer use it to generate input\n by touching the screen.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.\n@see InputMethodManager#HIDE_NOT_ALWAYS</p>\n</div></li><li><span class='pre'>flags</span> : Object<div class='sub-desc'><p>Provides additional operating flags.</p>\n</div></li></ul></div></div></div><div id='method-requestShowSelf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-requestShowSelf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-requestShowSelf' class='name expandable'>requestShowSelf</a>( <span class='pre'>flags, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Show the input method's soft input area, so the user sees the input method window and can\n interact with it. ...</div><div class='long'><p>Show the input method's soft input area, so the user sees the input method window and can\n interact with it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.\n@see InputMethodManager#SHOW_FORCED</p>\n</div></li><li><span class='pre'>flags</span> : Object<div class='sub-desc'><p>Provides additional operating flags.</p>\n</div></li></ul></div></div></div><div id='method-sendDefaultEditorAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-sendDefaultEditorAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-sendDefaultEditorAction' class='name expandable'>sendDefaultEditorAction</a>( <span class='pre'>fromEnterKey</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask the input target to execute its default action via\n InputConnection.performEditorAction(). ...</div><div class='long'><p>Ask the input target to execute its default action via\n InputConnection.performEditorAction().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromEnterKey</span> : Boolean<div class='sub-desc'><p>If true, this will be executed as if the user had\n pressed an enter key on the keyboard, that is it will <em>not</em>\n be done if the editor has set EditorInfo.IME_FLAG_NO_ENTER_ACTION.  If false, the action will be\n sent regardless of how the editor has set that flag.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns a boolean indicating whether an action has been sent.\n If false, either the editor did not specify a default action or it\n does not want an action from the enter key.  If true, the action was\n sent (or there was no input connection at all).</p>\n</div></li></ul></div></div></div><div id='method-sendDownUpKeyEvents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-sendDownUpKeyEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-sendDownUpKeyEvents' class='name expandable'>sendDownUpKeyEvents</a>( <span class='pre'>keyEventCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Send the given key event code (as defined by android.inputmethodservice.Keyboard.KeyEvent) to the\n current input conn...</div><div class='long'><p>Send the given key event code (as defined by android.inputmethodservice.Keyboard.KeyEvent) to the\n current input connection is a key down + key up event pair.  The sent\n events have android.inputmethodservice.Keyboard.KeyEvent.FLAG_SOFT_KEYBOARD\n set, so that the recipient can identify them as coming from a software\n input method, and\n android.inputmethodservice.Keyboard.KeyEvent.FLAG_KEEP_TOUCH_MODE, so\n that they don't impact the current touch mode of the UI.</p>\n\n<p> <p>Note that it's discouraged to send such key events in normal operation;\n this is mainly for use with android.text.InputType.TYPE_NULL type\n text fields, or for non-rich input methods. A reasonably capable software\n input method should use the\n android.view.inputmethod.InputConnection.commitText family of methods\n to send text to an application, rather than sending key events.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyEventCode</span> : Number<div class='sub-desc'><p>The raw key code to send, as defined by\n KeyEvent.</p>\n</div></li></ul></div></div></div><div id='method-sendKeyChar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-sendKeyChar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-sendKeyChar' class='name expandable'>sendKeyChar</a>( <span class='pre'>charCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Send the given UTF-16 character to the current input connection. ...</div><div class='long'><p>Send the given UTF-16 character to the current input connection.  Most\n characters will be delivered simply by calling\n InputConnection.commitText() with\n the character; some, however, may be handled different.  In particular,\n the enter character ('\\n') will either be delivered as an action code\n or a raw key event, as appropriate.  Consider this as a convenience\n method for IMEs that do not have a full implementation of actions; a\n fully complying IME will decide of the right action for each event and\n will likely never call this method except maybe to handle events coming\n from an actual hardware keyboard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>charCode</span> : String<div class='sub-desc'><p>The UTF-16 character code to send.</p>\n</div></li></ul></div></div></div><div id='method-setBackDisposition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-setBackDisposition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-setBackDisposition' class='name expandable'>setBackDisposition</a>( <span class='pre'>disposition, disposition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the disposition mode that indicates the expected affordance for the back button. ...</div><div class='long'><p>Sets the disposition mode that indicates the expected affordance for the back button.</p>\n\n<p> <p>Keep in mind that specifying this flag does not change the the default behavior of\n android.inputmethodservice.Keyboard.KeyEvent).  It is IME developers' responsibility for making sure that\n their custom implementation of android.inputmethodservice.Keyboard.KeyEvent) is consistent with the mode\n specified to this API.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>disposition</span> : Number<div class='sub-desc'><p>disposition mode to be set</p>\n</div></li><li><span class='pre'>disposition</span> : Object<div class='sub-desc'><p>disposition mode to be set</p>\n</div></li></ul></div></div></div><div id='method-setCandidatesView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-setCandidatesView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-setCandidatesView' class='name expandable'>setCandidatesView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Replaces the current candidates view with a new one. ...</div><div class='long'><p>Replaces the current candidates view with a new one.  You only need to\n call this when dynamically changing the view; normally, you should\n implement <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateCandidatesView\" class=\"docClass\">onCreateCandidatesView</a>() and create your view when\n first needed by the input method.</p>\n</div></div></div><div id='method-setCandidatesViewShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-setCandidatesViewShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-setCandidatesViewShown' class='name expandable'>setCandidatesViewShown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Controls the visibility of the candidates display area. ...</div><div class='long'><p>Controls the visibility of the candidates display area.  By default\n it is hidden.</p>\n</div></div></div><div id='method-setExtractView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-setExtractView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-setExtractView' class='name expandable'>setExtractView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setExtractViewShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-setExtractViewShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-setExtractViewShown' class='name expandable'>setExtractViewShown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Controls the visibility of the extracted text area. ...</div><div class='long'><p>Controls the visibility of the extracted text area.  This only applies\n when the input method is in fullscreen mode, and thus showing extracted\n text.  When false, the extracted text will not be shown, allowing some\n of the application to be seen behind.  This is normally set for you\n by <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onUpdateExtractingVisibility\" rel=\"android.inputmethodservice.InputMethodService-method-onUpdateExtractingVisibility\" class=\"docClass\">onUpdateExtractingVisibility</a>.  This controls the visibility\n of both the extracted text and candidate view; the latter since it is\n not useful if there is no text to see.</p>\n</div></div></div><div id='method-setInputView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-setInputView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-setInputView' class='name expandable'>setInputView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Replaces the current input view with a new one. ...</div><div class='long'><p>Replaces the current input view with a new one.  You only need to\n call this when dynamically changing the view; normally, you should\n implement <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreateInputView\" rel=\"android.inputmethodservice.InputMethodService-method-onCreateInputView\" class=\"docClass\">onCreateInputView</a>() and create your view when\n first needed by the input method.</p>\n</div></div></div><div id='method-setTheme' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-setTheme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-setTheme' class='name expandable'>setTheme</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>You can call this to customize the theme used by your IME's window. ...</div><div class='long'><p>You can call this to customize the theme used by your IME's window.\n This theme should typically be one that derives from\n android.R.style.Theme_InputMethod, which is the default theme\n you will get.  This must be set before <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onCreate\" rel=\"android.inputmethodservice.InputMethodService-method-onCreate\" class=\"docClass\">onCreate</a>, so you\n will typically call it in your constructor with the resource ID\n of your custom theme.</p>\n</div></div></div><div id='method-shouldOfferSwitchingToNextInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-shouldOfferSwitchingToNextInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-shouldOfferSwitchingToNextInputMethod' class='name expandable'>shouldOfferSwitchingToNextInputMethod</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the current IME needs to offer the users ways to switch to a next input\n method (e.g. ...</div><div class='long'><p>Returns true if the current IME needs to offer the users ways to switch to a next input\n method (e.g. a globe key.).\n When an IME sets supportsSwitchingToNextInputMethod and this method returns true,\n the IME has to offer ways to to invoke <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-switchToNextInputMethod\" rel=\"android.inputmethodservice.InputMethodService-method-switchToNextInputMethod\" class=\"docClass\">switchToNextInputMethod</a> accordingly.\n <p> Note that the system determines the most appropriate next input method\n and subtype in order to provide the consistent user experience in switching\n between IMEs and subtypes.</p>\n</div></div></div><div id='method-showStatusIcon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-showStatusIcon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-showStatusIcon' class='name expandable'>showStatusIcon</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-showWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-showWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-showWindow' class='name expandable'>showWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-switchInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-switchInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-switchInputMethod' class='name expandable'>switchInputMethod</a>( <span class='pre'>id, subtype</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Force switch to a new input method, as identified by {@code id}. ...</div><div class='long'><p>Force switch to a new input method, as identified by {@code id}.  This\n input method will be destroyed, and the requested one started on the\n current input field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>Unique identifier of the new input method to start.</p>\n</div></li><li><span class='pre'>subtype</span> : Object {InputMethodSubtype}<div class='sub-desc'><p>The new subtype of the new input method to be switched to.</p>\n</div></li></ul></div></div></div><div id='method-switchToNextInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-switchToNextInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-switchToNextInputMethod' class='name expandable'>switchToNextInputMethod</a>( <span class='pre'>onlyCurrentIme</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Force switch to the next input method and subtype. ...</div><div class='long'><p>Force switch to the next input method and subtype. If there is no IME enabled except\n current IME and subtype, do nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onlyCurrentIme</span> : Boolean<div class='sub-desc'><p>if true, the framework will find the next subtype which\n belongs to the current IME</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the current input method and subtype was successfully switched to the next\n input method and subtype.</p>\n</div></li></ul></div></div></div><div id='method-switchToPreviousInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-switchToPreviousInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-switchToPreviousInputMethod' class='name expandable'>switchToPreviousInputMethod</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Force switch to the last used input method and subtype. ...</div><div class='long'><p>Force switch to the last used input method and subtype. If the last input method didn't have\n any subtypes, the framework will simply switch to the last input method with no subtype\n specified.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the current input method and subtype was successfully switched to the last\n used input method and subtype.</p>\n</div></li></ul></div></div></div><div id='method-updateFullscreenMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-updateFullscreenMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-updateFullscreenMode' class='name expandable'>updateFullscreenMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Re-evaluate whether the input method should be running in fullscreen\n mode, and update its UI if this has changed sin...</div><div class='long'><p>Re-evaluate whether the input method should be running in fullscreen\n mode, and update its UI if this has changed since the last time it\n was evaluated.  This will call <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-onEvaluateFullscreenMode\" class=\"docClass\">onEvaluateFullscreenMode</a>() to\n determine whether it should currently run in fullscreen mode.  You\n can use <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isFullscreenMode\" rel=\"android.inputmethodservice.InputMethodService-method-isFullscreenMode\" class=\"docClass\">isFullscreenMode</a>() to determine if the input method\n is currently running in fullscreen mode.</p>\n</div></div></div><div id='method-updateInputViewShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.inputmethodservice.InputMethodService'>android.inputmethodservice.InputMethodService</span><br/><a href='source/InputMethodService.html#android-inputmethodservice-InputMethodService-method-updateInputViewShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.inputmethodservice.InputMethodService-method-updateInputViewShown' class='name expandable'>updateInputViewShown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Re-evaluate whether the soft input area should currently be shown, and\n update its UI if this has changed since the l...</div><div class='long'><p>Re-evaluate whether the soft input area should currently be shown, and\n update its UI if this has changed since the last time it\n was evaluated.  This will call <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-onEvaluateInputViewShown\" class=\"docClass\">onEvaluateInputViewShown</a>() to\n determine whether the input view should currently be shown.  You\n can use <a href=\"#!/api/android.inputmethodservice.InputMethodService-method-isInputViewShown\" rel=\"android.inputmethodservice.InputMethodService-method-isInputViewShown\" class=\"docClass\">isInputViewShown</a>() to determine if the input view\n is currently shown.</p>\n</div></div></div></div></div></div></div>","meta":{}});