Ext.data.JsonP.android_animation_TimeInterpolator({"tagname":"class","name":"android.animation.TimeInterpolator","autodetected":{},"files":[{"filename":"TimeInterpolator.js","href":"TimeInterpolator.html#android-animation-TimeInterpolator"}],"members":[{"name":"getInterpolation","tagname":"method","owner":"android.animation.TimeInterpolator","id":"method-getInterpolation","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.animation.TimeInterpolator","short_doc":"A time interpolator defines the rate of change of an animation. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/TimeInterpolator.html#android-animation-TimeInterpolator' target='_blank'>TimeInterpolator.js</a></div></pre><div class='doc-contents'><p>A time interpolator defines the rate of change of an animation. This allows animations\n to have non-linear motion, such as acceleration and deceleration.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getInterpolation' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.TimeInterpolator'>android.animation.TimeInterpolator</span><br/><a href='source/TimeInterpolator.html#android-animation-TimeInterpolator-method-getInterpolation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.TimeInterpolator-method-getInterpolation' class='name expandable'>getInterpolation</a>( <span class='pre'>input</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Maps a value representing the elapsed fraction of an animation to a value that represents\n the interpolated fraction. ...</div><div class='long'><p>Maps a value representing the elapsed fraction of an animation to a value that represents\n the interpolated fraction. This interpolated value is then multiplied by the change in\n value of an animation to derive the animated value at the current elapsed animation time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>input</span> : Number<div class='sub-desc'><p>A value between 0 and 1.0 indicating our current point\n        in the animation where 0 represents the start and 1.0 represents\n        the end</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The interpolation value. This value can be more than 1.0 for\n         interpolators which overshoot their targets, or less than 0 for\n         interpolators that undershoot their targets.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});