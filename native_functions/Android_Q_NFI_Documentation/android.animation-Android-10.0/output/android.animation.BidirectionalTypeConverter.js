Ext.data.JsonP.android_animation_BidirectionalTypeConverter({"tagname":"class","name":"android.animation.BidirectionalTypeConverter","autodetected":{},"files":[{"filename":"BidirectionalTypeConverter.js","href":"BidirectionalTypeConverter.html#android-animation-BidirectionalTypeConverter"}],"extends":"android.animation.TypeConverter","members":[{"name":"convert","tagname":"method","owner":"android.animation.TypeConverter","id":"method-convert","meta":{}},{"name":"convertBack","tagname":"method","owner":"android.animation.BidirectionalTypeConverter","id":"method-convertBack","meta":{}},{"name":"invert","tagname":"method","owner":"android.animation.BidirectionalTypeConverter","id":"method-invert","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.animation.BidirectionalTypeConverter","short_doc":"Abstract base class used convert type T to another type V and back again. ...","classIcon":"icon-class","superclasses":["java.lang.Object","android.animation.TypeConverter"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.animation.TypeConverter' rel='android.animation.TypeConverter' class='docClass'>android.animation.TypeConverter</a><div class='subclass '><strong>android.animation.BidirectionalTypeConverter</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/BidirectionalTypeConverter.html#android-animation-BidirectionalTypeConverter' target='_blank'>BidirectionalTypeConverter.js</a></div></pre><div class='doc-contents'><p>Abstract base class used convert type T to another type V and back again. This\n is necessary when the value types of in animation are different from the property\n type. BidirectionalTypeConverter is needed when only the final value for the\n animation is supplied to animators.\n @see PropertyValuesHolder#setConverter(TypeConverter)</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-convert' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.animation.TypeConverter' rel='android.animation.TypeConverter' class='defined-in docClass'>android.animation.TypeConverter</a><br/><a href='source/TypeConverter.html#android-animation-TypeConverter-method-convert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.TypeConverter-method-convert' class='name expandable'>convert</a>( <span class='pre'>value</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts a value from one type to another. ...</div><div class='long'><p>Converts a value from one type to another.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object {Object}<div class='sub-desc'><p>The Object to convert.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>A value of type V, converted from <code>value</code>.</p>\n</div></li></ul></div></div></div><div id='method-convertBack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.BidirectionalTypeConverter'>android.animation.BidirectionalTypeConverter</span><br/><a href='source/BidirectionalTypeConverter.html#android-animation-BidirectionalTypeConverter-method-convertBack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.BidirectionalTypeConverter-method-convertBack' class='name expandable'>convertBack</a>( <span class='pre'>value</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Does a conversion from the target type back to the source type. ...</div><div class='long'><p>Does a conversion from the target type back to the source type. The subclass\n must implement this when a TypeConverter is used in animations and current\n values will need to be read for an animation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object {Object}<div class='sub-desc'><p>The Object to convert.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>A value of type T, converted from <code>value</code>.</p>\n</div></li></ul></div></div></div><div id='method-invert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.BidirectionalTypeConverter'>android.animation.BidirectionalTypeConverter</span><br/><a href='source/BidirectionalTypeConverter.html#android-animation-BidirectionalTypeConverter-method-invert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.BidirectionalTypeConverter-method-invert' class='name expandable'>invert</a>( <span class='pre'></span> ) : Object {android.animation.BidirectionalTypeConverter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the inverse of this converter, where the from and to classes are reversed. ...</div><div class='long'><p>Returns the inverse of this converter, where the from and to classes are reversed.\n The inverted converter uses this convert to call <a href=\"#!/api/android.animation.BidirectionalTypeConverter-method-convertBack\" rel=\"android.animation.BidirectionalTypeConverter-method-convertBack\" class=\"docClass\">convertBack</a>(Object) for\n <a href=\"#!/api/android.animation.BidirectionalTypeConverter-method-convert\" rel=\"android.animation.BidirectionalTypeConverter-method-convert\" class=\"docClass\">convert</a>(Object) calls and <a href=\"#!/api/android.animation.BidirectionalTypeConverter-method-convert\" rel=\"android.animation.BidirectionalTypeConverter-method-convert\" class=\"docClass\">convert</a>(Object) for\n <a href=\"#!/api/android.animation.BidirectionalTypeConverter-method-convertBack\" rel=\"android.animation.BidirectionalTypeConverter-method-convertBack\" class=\"docClass\">convertBack</a>(Object) calls.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.animation.BidirectionalTypeConverter}</span><div class='sub-desc'><p>The inverse of this converter, where the from and to classes are reversed.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});