Ext.data.JsonP.android_animation_Animator({"tagname":"class","name":"android.animation.Animator","autodetected":{},"files":[{"filename":"Animator.js","href":"Animator.html#android-animation-Animator"}],"extends":"java.lang.Object","members":[{"name":"DURATION_INFINITE","tagname":"property","owner":"android.animation.Animator","id":"property-DURATION_INFINITE","meta":{}},{"name":"addListener","tagname":"method","owner":"android.animation.Animator","id":"method-addListener","meta":{}},{"name":"addPauseListener","tagname":"method","owner":"android.animation.Animator","id":"method-addPauseListener","meta":{}},{"name":"cancel","tagname":"method","owner":"android.animation.Animator","id":"method-cancel","meta":{}},{"name":"clone","tagname":"method","owner":"android.animation.Animator","id":"method-clone","meta":{}},{"name":"end","tagname":"method","owner":"android.animation.Animator","id":"method-end","meta":{}},{"name":"getDuration","tagname":"method","owner":"android.animation.Animator","id":"method-getDuration","meta":{}},{"name":"getInterpolator","tagname":"method","owner":"android.animation.Animator","id":"method-getInterpolator","meta":{}},{"name":"getListeners","tagname":"method","owner":"android.animation.Animator","id":"method-getListeners","meta":{}},{"name":"getStartDelay","tagname":"method","owner":"android.animation.Animator","id":"method-getStartDelay","meta":{}},{"name":"getTotalDuration","tagname":"method","owner":"android.animation.Animator","id":"method-getTotalDuration","meta":{}},{"name":"isPaused","tagname":"method","owner":"android.animation.Animator","id":"method-isPaused","meta":{}},{"name":"isRunning","tagname":"method","owner":"android.animation.Animator","id":"method-isRunning","meta":{}},{"name":"isStarted","tagname":"method","owner":"android.animation.Animator","id":"method-isStarted","meta":{}},{"name":"pause","tagname":"method","owner":"android.animation.Animator","id":"method-pause","meta":{}},{"name":"removeAllListeners","tagname":"method","owner":"android.animation.Animator","id":"method-removeAllListeners","meta":{}},{"name":"removeListener","tagname":"method","owner":"android.animation.Animator","id":"method-removeListener","meta":{}},{"name":"removePauseListener","tagname":"method","owner":"android.animation.Animator","id":"method-removePauseListener","meta":{}},{"name":"resume","tagname":"method","owner":"android.animation.Animator","id":"method-resume","meta":{}},{"name":"setDuration","tagname":"method","owner":"android.animation.Animator","id":"method-setDuration","meta":{}},{"name":"setInterpolator","tagname":"method","owner":"android.animation.Animator","id":"method-setInterpolator","meta":{}},{"name":"setStartDelay","tagname":"method","owner":"android.animation.Animator","id":"method-setStartDelay","meta":{}},{"name":"setTarget","tagname":"method","owner":"android.animation.Animator","id":"method-setTarget","meta":{}},{"name":"setupEndValues","tagname":"method","owner":"android.animation.Animator","id":"method-setupEndValues","meta":{}},{"name":"setupStartValues","tagname":"method","owner":"android.animation.Animator","id":"method-setupStartValues","meta":{}},{"name":"start","tagname":"method","owner":"android.animation.Animator","id":"method-start","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.animation.Animator","short_doc":"implements java.lang.Cloneable\n\nThis is the superclass for classes which provide basic support for animations which c...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.animation.AnimatorSet","android.animation.ValueAnimator"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.animation.Animator</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.animation.AnimatorSet' rel='android.animation.AnimatorSet' class='docClass'>android.animation.AnimatorSet</a></div><div class='dependency'><a href='#!/api/android.animation.ValueAnimator' rel='android.animation.ValueAnimator' class='docClass'>android.animation.ValueAnimator</a></div><h4>Files</h4><div class='dependency'><a href='source/Animator.html#android-animation-Animator' target='_blank'>Animator.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Cloneable</p>\n\n<p>This is the superclass for classes which provide basic support for animations which can be\n started, ended, and have <code>AnimatorListeners</code> added to them.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DURATION_INFINITE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-property-DURATION_INFINITE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-property-DURATION_INFINITE' class='name expandable'>DURATION_INFINITE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The value used to indicate infinite duration (e.g. ...</div><div class='long'><p>The value used to indicate infinite duration (e.g. when Animators repeat infinitely).</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-addListener' class='name expandable'>addListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a listener to the set of listeners that are sent events through the life of an\n animation, such as start, repeat...</div><div class='long'><p>Adds a listener to the set of listeners that are sent events through the life of an\n animation, such as start, repeat, and end.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {Animator.AnimatorListener}<div class='sub-desc'><p>the listener to be added to the current set of listeners for this animation.</p>\n</div></li></ul></div></div></div><div id='method-addPauseListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-addPauseListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-addPauseListener' class='name expandable'>addPauseListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a pause listener to this animator. ...</div><div class='long'><p>Adds a pause listener to this animator.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {Animator.AnimatorPauseListener}<div class='sub-desc'><p>the listener to be added to the current set of pause listeners\n for this animation.</p>\n</div></li></ul></div></div></div><div id='method-cancel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-cancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-cancel' class='name expandable'>cancel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancels the animation. ...</div><div class='long'><p>Cancels the animation. Unlike <a href=\"#!/api/android.animation.Animator-method-end\" rel=\"android.animation.Animator-method-end\" class=\"docClass\">end</a>(), <code>cancel()</code> causes the animation to\n stop in its tracks, sending an\n android.animation.Animator.AnimatorListener.onAnimationCancel(Animator) to\n its listeners, followed by an\n android.animation.Animator.AnimatorListener.onAnimationEnd(Animator) message.</p>\n\n<p> <p>This method must be called on the thread that is running the animation.</p></p>\n</div></div></div><div id='method-clone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-end' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-end' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-end' class='name expandable'>end</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ends the animation. ...</div><div class='long'><p>Ends the animation. This causes the animation to assign the end value of the property being\n animated, then calling the\n android.animation.Animator.AnimatorListener.onAnimationEnd(Animator) method on\n its listeners.</p>\n\n<p> <p>This method must be called on the thread that is running the animation.</p></p>\n</div></div></div><div id='method-getDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-getDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-getDuration' class='name expandable'>getDuration</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the duration of the animation. ...</div><div class='long'><p>Gets the duration of the animation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The length of the animation, in milliseconds.</p>\n</div></li></ul></div></div></div><div id='method-getInterpolator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-getInterpolator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-getInterpolator' class='name expandable'>getInterpolator</a>( <span class='pre'></span> ) : Object {android.animation.TimeInterpolator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the timing interpolator that this animation uses. ...</div><div class='long'><p>Returns the timing interpolator that this animation uses.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.animation.TimeInterpolator}</span><div class='sub-desc'><p>The timing interpolator for this animation.</p>\n</div></li></ul></div></div></div><div id='method-getListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-getListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-getListeners' class='name expandable'>getListeners</a>( <span class='pre'></span> ) : Object {java.util.ArrayList}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the set of android.animation.Animator.AnimatorListener objects that are currently\n listening for events on this ...</div><div class='long'><p>Gets the set of <a href=\"#!/api/android.animation.Animator.AnimatorListener\" rel=\"android.animation.Animator.AnimatorListener\" class=\"docClass\">android.animation.Animator.AnimatorListener</a> objects that are currently\n listening for events on this <code>Animator</code> object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.ArrayList}</span><div class='sub-desc'><p>ArrayList<AnimatorListener> The set of listeners.</AnimatorListener></p>\n</div></li></ul></div></div></div><div id='method-getStartDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-getStartDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-getStartDelay' class='name expandable'>getStartDelay</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>The amount of time, in milliseconds, to delay processing the animation\n after start() is called. ...</div><div class='long'><p>The amount of time, in milliseconds, to delay processing the animation\n after <a href=\"#!/api/android.animation.Animator-method-start\" rel=\"android.animation.Animator-method-start\" class=\"docClass\">start</a>() is called.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of milliseconds to delay running the animation</p>\n</div></li></ul></div></div></div><div id='method-getTotalDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-getTotalDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-getTotalDuration' class='name expandable'>getTotalDuration</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the total duration of the animation, accounting for animation sequences, start delay,\n and repeating. ...</div><div class='long'><p>Gets the total duration of the animation, accounting for animation sequences, start delay,\n and repeating. Return <a href=\"#!/api/android.animation.Animator-property-DURATION_INFINITE\" rel=\"android.animation.Animator-property-DURATION_INFINITE\" class=\"docClass\">DURATION_INFINITE</a> if the duration is infinite.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Total time an animation takes to finish, starting from the time start()\n          is called. <a href=\"#!/api/android.animation.Animator-property-DURATION_INFINITE\" rel=\"android.animation.Animator-property-DURATION_INFINITE\" class=\"docClass\">DURATION_INFINITE</a> will be returned if the animation or any\n          child animation repeats infinite times.</p>\n</div></li></ul></div></div></div><div id='method-isPaused' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-isPaused' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-isPaused' class='name expandable'>isPaused</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether this animator is currently in a paused state. ...</div><div class='long'><p>Returns whether this animator is currently in a paused state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the animator is currently paused, false otherwise.\n@see <a href=\"#!/api/android.animation.Animator-method-pause\" rel=\"android.animation.Animator-method-pause\" class=\"docClass\">pause</a>()\n@see <a href=\"#!/api/android.animation.Animator-method-resume\" rel=\"android.animation.Animator-method-resume\" class=\"docClass\">resume</a>()</p>\n</div></li></ul></div></div></div><div id='method-isRunning' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-isRunning' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-isRunning' class='name expandable'>isRunning</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether this Animator is currently running (having been started and gone past any\n initial startDelay period ...</div><div class='long'><p>Returns whether this Animator is currently running (having been started and gone past any\n initial startDelay period and not yet ended).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the Animator is running.</p>\n</div></li></ul></div></div></div><div id='method-isStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-isStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-isStarted' class='name expandable'>isStarted</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether this Animator has been started and not yet ended. ...</div><div class='long'><p>Returns whether this Animator has been started and not yet ended. For reusable\n Animators (which most Animators are, apart from the one-shot animator produced by\n android.view.View, int, int, float, float) createCircularReveal()),\n this state is a superset of <a href=\"#!/api/android.animation.Animator-method-isRunning\" rel=\"android.animation.Animator-method-isRunning\" class=\"docClass\">isRunning</a>(), because an Animator with a\n nonzero startDelay will return true for <a href=\"#!/api/android.animation.Animator-method-isStarted\" rel=\"android.animation.Animator-method-isStarted\" class=\"docClass\">isStarted</a>() during\n the delay phase, whereas <a href=\"#!/api/android.animation.Animator-method-isRunning\" rel=\"android.animation.Animator-method-isRunning\" class=\"docClass\">isRunning</a>() will return true only after the delay phase\n is complete. Non-reusable animators will always return true after they have been\n started, because they cannot return to a non-started state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the Animator has been started and not yet ended.</p>\n</div></li></ul></div></div></div><div id='method-pause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-pause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-pause' class='name expandable'>pause</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Pauses a running animation. ...</div><div class='long'><p>Pauses a running animation. This method should only be called on the same thread on\n which the animation was started. If the animation has not yet been started or has since ended, then the call is ignored. Paused\n animations can be resumed by calling <a href=\"#!/api/android.animation.Animator-method-resume\" rel=\"android.animation.Animator-method-resume\" class=\"docClass\">resume</a>().\n@see <a href=\"#!/api/android.animation.Animator-method-resume\" rel=\"android.animation.Animator-method-resume\" class=\"docClass\">resume</a>()\n@see <a href=\"#!/api/android.animation.Animator-method-isPaused\" rel=\"android.animation.Animator-method-isPaused\" class=\"docClass\">isPaused</a>()\n@see AnimatorPauseListener</p>\n</div></div></div><div id='method-removeAllListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-removeAllListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-removeAllListeners' class='name expandable'>removeAllListeners</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all listeners\n and pauseListeners from this object. ...</div><div class='long'><p>Removes all listeners\n and pauseListeners from this object.</p>\n</div></div></div><div id='method-removeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a listener from the set listening to this animation. ...</div><div class='long'><p>Removes a listener from the set listening to this animation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {Animator.AnimatorListener}<div class='sub-desc'><p>the listener to be removed from the current set of listeners for this\n                 animation.</p>\n</div></li></ul></div></div></div><div id='method-removePauseListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-removePauseListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-removePauseListener' class='name expandable'>removePauseListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a pause listener from the set listening to this animation. ...</div><div class='long'><p>Removes a pause listener from the set listening to this animation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {Animator.AnimatorPauseListener}<div class='sub-desc'><p>the listener to be removed from the current set of pause\n listeners for this animation.</p>\n</div></li></ul></div></div></div><div id='method-resume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-resume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-resume' class='name expandable'>resume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resumes a paused animation, causing the animator to pick up where it left off\n when it was paused. ...</div><div class='long'><p>Resumes a paused animation, causing the animator to pick up where it left off\n when it was paused. This method should only be called on the same thread on\n which the animation was started. Calls to resume() on an animator that is\n not currently paused will be ignored.\n@see <a href=\"#!/api/android.animation.Animator-method-pause\" rel=\"android.animation.Animator-method-pause\" class=\"docClass\">pause</a>()\n@see <a href=\"#!/api/android.animation.Animator-method-isPaused\" rel=\"android.animation.Animator-method-isPaused\" class=\"docClass\">isPaused</a>()\n@see AnimatorPauseListener</p>\n</div></div></div><div id='method-setDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-setDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-setDuration' class='name expandable'>setDuration</a>( <span class='pre'>duration</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the duration of the animation. ...</div><div class='long'><p>Sets the duration of the animation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>duration</span> : Number<div class='sub-desc'><p>The length of the animation, in milliseconds.</p>\n</div></li></ul></div></div></div><div id='method-setInterpolator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-setInterpolator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-setInterpolator' class='name expandable'>setInterpolator</a>( <span class='pre'>value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The time interpolator used in calculating the elapsed fraction of the\n animation. ...</div><div class='long'><p>The time interpolator used in calculating the elapsed fraction of the\n animation. The interpolator determines whether the animation runs with\n linear or non-linear motion, such as acceleration and deceleration. The\n default value is android.view.animation.AccelerateDecelerateInterpolator.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object {TimeInterpolator}<div class='sub-desc'><p>the interpolator to be used by this animation</p>\n</div></li></ul></div></div></div><div id='method-setStartDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-setStartDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-setStartDelay' class='name expandable'>setStartDelay</a>( <span class='pre'>startDelay</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The amount of time, in milliseconds, to delay processing the animation\n after start() is called. ...</div><div class='long'><p>The amount of time, in milliseconds, to delay processing the animation\n after <a href=\"#!/api/android.animation.Animator-method-start\" rel=\"android.animation.Animator-method-start\" class=\"docClass\">start</a>() is called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startDelay</span> : Number<div class='sub-desc'><p>The amount of the delay, in milliseconds</p>\n</div></li></ul></div></div></div><div id='method-setTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-setTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-setTarget' class='name expandable'>setTarget</a>( <span class='pre'>target</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the target object whose property will be animated by this animation. ...</div><div class='long'><p>Sets the target object whose property will be animated by this animation. Not all subclasses\n operate on target objects (for example, <a href=\"#!/api/android.animation.ValueAnimator\" rel=\"android.animation.ValueAnimator\" class=\"docClass\">android.animation.ValueAnimator</a>, but this method\n is on the superclass for the convenience of dealing generically with those subclasses\n that do handle targets.\n <p>\n <strong>Note:</strong> The target is stored as a weak reference internally to avoid leaking\n resources by having animators directly reference old targets. Therefore, you should\n ensure that animator targets always have a hard reference elsewhere.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Object {Object}<div class='sub-desc'><p>The object being animated</p>\n</div></li></ul></div></div></div><div id='method-setupEndValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-setupEndValues' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-setupEndValues' class='name expandable'>setupEndValues</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method tells the object to use appropriate information to extract\n ending values for the animation. ...</div><div class='long'><p>This method tells the object to use appropriate information to extract\n ending values for the animation. For example, a AnimatorSet object will pass\n this call to its child objects to tell them to set up the values. A\n ObjectAnimator object will use the information it has about its target object\n and PropertyValuesHolder objects to get the start values for its properties.\n A ValueAnimator object will ignore the request since it does not have enough\n information (such as a target object) to gather these values.</p>\n</div></div></div><div id='method-setupStartValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-setupStartValues' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-setupStartValues' class='name expandable'>setupStartValues</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method tells the object to use appropriate information to extract\n starting values for the animation. ...</div><div class='long'><p>This method tells the object to use appropriate information to extract\n starting values for the animation. For example, a AnimatorSet object will pass\n this call to its child objects to tell them to set up the values. A\n ObjectAnimator object will use the information it has about its target object\n and PropertyValuesHolder objects to get the start values for its properties.\n A ValueAnimator object will ignore the request since it does not have enough\n information (such as a target object) to gather these values.</p>\n</div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.animation.Animator'>android.animation.Animator</span><br/><a href='source/Animator.html#android-animation-Animator-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.animation.Animator-method-start' class='name expandable'>start</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts this animation. ...</div><div class='long'><p>Starts this animation. If the animation has a nonzero startDelay, the animation will start\n running after that delay elapses. A non-delayed animation will have its initial\n value(s) set immediately, followed by calls to\n android.animation.Animator.AnimatorListener.onAnimationStart(Animator) for any listeners of this animator.</p>\n\n<p> <p>The animation started by calling this method will be run on the thread that called\n this method. This thread should have a Looper on it (a runtime exception will be thrown if\n this is not the case). Also, if the animation will animate\n properties of objects in the view hierarchy, then the calling thread should be the UI\n thread for that view hierarchy.</p></p>\n</div></div></div></div></div></div></div>","meta":{}});