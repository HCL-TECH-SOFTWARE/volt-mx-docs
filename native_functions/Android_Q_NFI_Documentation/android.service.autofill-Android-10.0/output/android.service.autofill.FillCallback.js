Ext.data.JsonP.android_service_autofill_FillCallback({"tagname":"class","name":"android.service.autofill.FillCallback","autodetected":{},"files":[{"filename":"FillCallback.js","href":"FillCallback.html#android-service-autofill-FillCallback"}],"extends":"java.lang.Object","members":[{"name":"onFailure","tagname":"method","owner":"android.service.autofill.FillCallback","id":"method-onFailure","meta":{}},{"name":"onSuccess","tagname":"method","owner":"android.service.autofill.FillCallback","id":"method-onSuccess","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.service.autofill.FillCallback","short_doc":"FillCallback handles autofill requests from the android.service.autofill.AutofillService into\n the Activity being aut...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.service.autofill.FillCallback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FillCallback.html#android-service-autofill-FillCallback' target='_blank'>FillCallback.js</a></div></pre><div class='doc-contents'><p><p><code>FillCallback</code> handles autofill requests from the <a href=\"#!/api/android.service.autofill.AutofillService\" rel=\"android.service.autofill.AutofillService\" class=\"docClass\">android.service.autofill.AutofillService</a> into\n the Activity being autofilled.</p>\n\n<p> <p>To learn about using Autofill services in your app, read\n <a href=\"/guide/topics/text/autofill-services\">Build autofill services</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onFailure' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.autofill.FillCallback'>android.service.autofill.FillCallback</span><br/><a href='source/FillCallback.html#android-service-autofill-FillCallback-method-onFailure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.autofill.FillCallback-method-onFailure' class='name expandable'>onFailure</a>( <span class='pre'>message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the Android System that a fill request (\n android.os.CancellationSignal,\n FillCallback)) could not be fulfil...</div><div class='long'><p>Notifies the Android System that a fill request (\n android.os.CancellationSignal,\n FillCallback)) could not be fulfilled by the service (for example, because the user data was\n not available yet), so the request could be retried later.</p>\n\n<p> <p><b>Note: </b>this method should not be used when the service didn't have the heursitics to\n fulfill the request; in this case, the service should call onSuccess(null) instead.</p>\n\n<p> <p><b>Note: </b>prior to android.os.Build.VERSION_CODES.Q, this\n method was not working as intended and the service should always call\n onSuccess(null) instead.</p>\n\n<p> <p><b>Note: </b>for apps targeting android.os.Build.VERSION_CODES.Q or higher, this\n method just logs the message on {@code logcat}; for apps targetting older SDKs, it also\n displays the message to user using a android.widget.Toast. Generally speaking, you\n should not display an error to the user if the request failed, unless the request had the\n <a href=\"#!/api/android.service.autofill.FillRequest-property-FLAG_MANUAL_REQUEST\" rel=\"android.service.autofill.FillRequest-property-FLAG_MANUAL_REQUEST\" class=\"docClass\">android.service.autofill.FillRequest.FLAG_MANUAL_REQUEST</a> flag.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : Object {CharSequence}<div class='sub-desc'><p>error message. <b>Note: </b> this message should <b>not</b> contain PII\n (Personally Identifiable Information, such as username or email address).</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this method or onSuccess(FillResponse) was already\n called.</p>\n</div></li></ul></div></div></div><div id='method-onSuccess' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.autofill.FillCallback'>android.service.autofill.FillCallback</span><br/><a href='source/FillCallback.html#android-service-autofill-FillCallback-method-onSuccess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.autofill.FillCallback-method-onSuccess' class='name expandable'>onSuccess</a>( <span class='pre'>response</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the Android System that a fill request\n (android.os.CancellationSignal,\n FillCallback)) was successfully ful...</div><div class='long'><p>Notifies the Android System that a fill request\n (android.os.CancellationSignal,\n FillCallback)) was successfully fulfilled by the service.</p>\n\n<p> <p>This method should always be called, even if the service doesn't have the heuristics to\n fulfill the request (in which case it should be called with {@code null}).</p>\n\n<p> <p>See the main <a href=\"#!/api/android.service.autofill.AutofillService\" rel=\"android.service.autofill.AutofillService\" class=\"docClass\">android.service.autofill.AutofillService</a> documentation for more details and examples.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {FillResponse}<div class='sub-desc'><p>autofill information for that activity, or {@code null} when the service\n cannot autofill the activity.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this method or onFailure(CharSequence) was already\n called.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});