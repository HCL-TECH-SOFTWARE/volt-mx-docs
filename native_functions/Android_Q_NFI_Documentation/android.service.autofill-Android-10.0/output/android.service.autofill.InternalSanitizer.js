Ext.data.JsonP.android_service_autofill_InternalSanitizer({"tagname":"class","name":"android.service.autofill.InternalSanitizer","autodetected":{},"files":[{"filename":"InternalSanitizer.js","href":"InternalSanitizer.html#android-service-autofill-InternalSanitizer"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"sanitize","tagname":"method","owner":"android.service.autofill.InternalSanitizer","id":"method-sanitize","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.service.autofill.InternalSanitizer","short_doc":"implements android.service.autofill.Sanitizer\n\n implements android.os.Parcelable\n\nSuperclass of all sanitizers the sy...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.service.autofill.DateValueSanitizer","android.service.autofill.TextValueSanitizer"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.service.autofill.InternalSanitizer</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.service.autofill.DateValueSanitizer' rel='android.service.autofill.DateValueSanitizer' class='docClass'>android.service.autofill.DateValueSanitizer</a></div><div class='dependency'><a href='#!/api/android.service.autofill.TextValueSanitizer' rel='android.service.autofill.TextValueSanitizer' class='docClass'>android.service.autofill.TextValueSanitizer</a></div><h4>Files</h4><div class='dependency'><a href='source/InternalSanitizer.html#android-service-autofill-InternalSanitizer' target='_blank'>InternalSanitizer.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.service.autofill.Sanitizer\" rel=\"android.service.autofill.Sanitizer\" class=\"docClass\">android.service.autofill.Sanitizer</a></p>\n\n<p> implements android.os.Parcelable</p>\n\n<p>Superclass of all sanitizers the system understands. As this is not public all public subclasses\n have to implement <a href=\"#!/api/android.service.autofill.Sanitizer\" rel=\"android.service.autofill.Sanitizer\" class=\"docClass\">android.service.autofill.Sanitizer</a> again.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-sanitize' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.autofill.InternalSanitizer'>android.service.autofill.InternalSanitizer</span><br/><a href='source/InternalSanitizer.html#android-service-autofill-InternalSanitizer-method-sanitize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.autofill.InternalSanitizer-method-sanitize' class='name expandable'>sanitize</a>( <span class='pre'></span> ) : Object {android.view.autofill.AutofillValue}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sanitizes an AutofillValue. ...</div><div class='long'><p>Sanitizes an AutofillValue.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.autofill.AutofillValue}</span><div class='sub-desc'><p>sanitized value or {@code null} if value could not be sanitized (for example: didn't\n match regex, it's an invalid type, regex failed, etc).</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});