Ext.data.JsonP.java_util_logging_XMLFormatter({"tagname":"class","name":"java.util.logging.XMLFormatter","autodetected":{},"files":[{"filename":"XMLFormatter.js","href":"XMLFormatter.html#java-util-logging-XMLFormatter"}],"extends":"java.util.logging.Formatter","since":"1.4","members":[{"name":"format","tagname":"method","owner":"java.util.logging.XMLFormatter","id":"method-format","meta":{}},{"name":"formatMessage","tagname":"method","owner":"java.util.logging.Formatter","id":"method-formatMessage","meta":{}},{"name":"getHead","tagname":"method","owner":"java.util.logging.XMLFormatter","id":"method-getHead","meta":{}},{"name":"getTail","tagname":"method","owner":"java.util.logging.XMLFormatter","id":"method-getTail","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.logging.XMLFormatter","short_doc":"Format a LogRecord into a standard XML format. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.util.logging.Formatter"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.util.logging.Formatter' rel='java.util.logging.Formatter' class='docClass'>java.util.logging.Formatter</a><div class='subclass '><strong>java.util.logging.XMLFormatter</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/XMLFormatter.html#java-util-logging-XMLFormatter' target='_blank'>XMLFormatter.js</a></div></pre><div class='doc-contents'><p>Format a LogRecord into a standard XML format.\n <p>\n The DTD specification is provided as Appendix A to the\n Java Logging APIs specification.\n <p>\n The XMLFormatter can be used with arbitrary character encodings,\n but it is recommended that it normally be used with UTF-8.  The\n character encoding can be set on the output Handler.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-format' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.XMLFormatter'>java.util.logging.XMLFormatter</span><br/><a href='source/XMLFormatter.html#java-util-logging-XMLFormatter-method-format' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.XMLFormatter-method-format' class='name expandable'>format</a>( <span class='pre'>record</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Format the given message to XML. ...</div><div class='long'><p>Format the given message to XML.\n <p>\n This method can be overridden in a subclass.\n It is recommended to use the <a href=\"#!/api/java.util.logging.Formatter-method-formatMessage\" rel=\"java.util.logging.Formatter-method-formatMessage\" class=\"docClass\">java.util.logging.Formatter.formatMessage</a>\n convenience method to localize and format the message field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : Object {LogRecord}<div class='sub-desc'><p>the log record to be formatted.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a formatted log record</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.logging.Formatter-method-format\" rel=\"java.util.logging.Formatter-method-format\" class=\"docClass\">java.util.logging.Formatter.format</a></p></div></div></div><div id='method-formatMessage' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Formatter' rel='java.util.logging.Formatter' class='defined-in docClass'>java.util.logging.Formatter</a><br/><a href='source/Formatter.html#java-util-logging-Formatter-method-formatMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Formatter-method-formatMessage' class='name expandable'>formatMessage</a>( <span class='pre'>record</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Localize and format the message string from a log record. ...</div><div class='long'><p>Localize and format the message string from a log record.  This\n method is provided as a convenience for Formatter subclasses to\n use when they are performing formatting.\n <p>\n The message string is first localized to a format string using\n the record's ResourceBundle.  (If there is no ResourceBundle,\n or if the message key is not found, then the key is used as the\n format string.)  The format String uses java.text style\n formatting.\n <ul>\n <li>If there are no parameters, no formatter is used.\n <li>Otherwise, if the string contains \"{0\" then\n     java.text.MessageFormat  is used to format the string.\n <li>Otherwise no formatting is performed.\n </li></li></li></ul>\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : Object {LogRecord}<div class='sub-desc'><p>the log record containing the raw message</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a localized and formatted message</p>\n</div></li></ul></div></div></div><div id='method-getHead' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.XMLFormatter'>java.util.logging.XMLFormatter</span><br/><a href='source/XMLFormatter.html#java-util-logging-XMLFormatter-method-getHead' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.XMLFormatter-method-getHead' class='name expandable'>getHead</a>( <span class='pre'>h</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the header string for a set of XML formatted records. ...</div><div class='long'><p>Return the header string for a set of XML formatted records.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>h</span> : Object {Handler}<div class='sub-desc'><p>The target handler (can be null)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a valid XML string</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.logging.Formatter-method-getHead\" rel=\"java.util.logging.Formatter-method-getHead\" class=\"docClass\">java.util.logging.Formatter.getHead</a></p></div></div></div><div id='method-getTail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.XMLFormatter'>java.util.logging.XMLFormatter</span><br/><a href='source/XMLFormatter.html#java-util-logging-XMLFormatter-method-getTail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.XMLFormatter-method-getTail' class='name expandable'>getTail</a>( <span class='pre'>h</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the tail string for a set of XML formatted records. ...</div><div class='long'><p>Return the tail string for a set of XML formatted records.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>h</span> : Object {Handler}<div class='sub-desc'><p>The target handler (can be null)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a valid XML string</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.logging.Formatter-method-getTail\" rel=\"java.util.logging.Formatter-method-getTail\" class=\"docClass\">java.util.logging.Formatter.getTail</a></p></div></div></div></div></div></div></div>","meta":{}});