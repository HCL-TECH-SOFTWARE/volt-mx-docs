Ext.data.JsonP.java_util_logging_FileHandler({"tagname":"class","name":"java.util.logging.FileHandler","autodetected":{},"files":[{"filename":"FileHandler.js","href":"FileHandler.html#java-util-logging-FileHandler"}],"extends":"java.util.logging.StreamHandler","since":"1.4","members":[{"name":"close","tagname":"method","owner":"java.util.logging.FileHandler","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.util.logging.StreamHandler","id":"method-flush","meta":{}},{"name":"getEncoding","tagname":"method","owner":"java.util.logging.Handler","id":"method-getEncoding","meta":{}},{"name":"getErrorManager","tagname":"method","owner":"java.util.logging.Handler","id":"method-getErrorManager","meta":{}},{"name":"getFilter","tagname":"method","owner":"java.util.logging.Handler","id":"method-getFilter","meta":{}},{"name":"getFormatter","tagname":"method","owner":"java.util.logging.Handler","id":"method-getFormatter","meta":{}},{"name":"getLevel","tagname":"method","owner":"java.util.logging.Handler","id":"method-getLevel","meta":{}},{"name":"isLoggable","tagname":"method","owner":"java.util.logging.StreamHandler","id":"method-isLoggable","meta":{}},{"name":"publish","tagname":"method","owner":"java.util.logging.FileHandler","id":"method-publish","meta":{}},{"name":"setEncoding","tagname":"method","owner":"java.util.logging.StreamHandler","id":"method-setEncoding","meta":{}},{"name":"setErrorManager","tagname":"method","owner":"java.util.logging.Handler","id":"method-setErrorManager","meta":{}},{"name":"setFilter","tagname":"method","owner":"java.util.logging.Handler","id":"method-setFilter","meta":{}},{"name":"setFormatter","tagname":"method","owner":"java.util.logging.Handler","id":"method-setFormatter","meta":{}},{"name":"setLevel","tagname":"method","owner":"java.util.logging.Handler","id":"method-setLevel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.logging.FileHandler","short_doc":"Simple file logging Handler. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.util.logging.Handler","java.util.logging.StreamHandler"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='docClass'>java.util.logging.Handler</a><div class='subclass '><a href='#!/api/java.util.logging.StreamHandler' rel='java.util.logging.StreamHandler' class='docClass'>java.util.logging.StreamHandler</a><div class='subclass '><strong>java.util.logging.FileHandler</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/FileHandler.html#java-util-logging-FileHandler' target='_blank'>FileHandler.js</a></div></pre><div class='doc-contents'><p>Simple file logging <tt>Handler</tt>.\n <p>\n The <tt>FileHandler</tt> can either write to a specified file,\n or it can write to a rotating set of files.\n <p>\n For a rotating set of files, as each file reaches a given size\n limit, it is closed, rotated out, and a new file opened.\n Successively older files are named by adding \"0\", \"1\", \"2\",\n etc. into the base filename.\n <p>\n By default buffering is enabled in the IO libraries but each log\n record is flushed out when it is complete.\n <p>\n By default the <tt>XMLFormatter</tt> class is used for formatting.\n <p>\n <b>Configuration:</b>\n By default each <tt>FileHandler</tt> is initialized using the following\n <tt>LogManager</tt> configuration properties where <tt>&lt;handler-name&gt;</tt>\n refers to the fully-qualified class name of the handler.\n If properties are not defined\n (or have invalid values) then the specified default values are used.\n <ul>\n <li>   &lt;handler-name&gt;.level\n        specifies the default level for the <tt>Handler</tt>\n        (defaults to <tt>Level.ALL</tt>). </li>\n <li>   &lt;handler-name&gt;.filter\n        specifies the name of a <tt>Filter</tt> class to use\n        (defaults to no <tt>Filter</tt>). </li>\n <li>   &lt;handler-name&gt;.formatter\n        specifies the name of a <tt>Formatter</tt> class to use\n        (defaults to <tt><a href=\"#!/api/java.util.logging.XMLFormatter\" rel=\"java.util.logging.XMLFormatter\" class=\"docClass\">java.util.logging.XMLFormatter</a></tt>) </li>\n <li>   &lt;handler-name&gt;.encoding\n        the name of the character set encoding to use (defaults to\n        the default platform encoding). </li>\n <li>   &lt;handler-name&gt;.limit\n        specifies an approximate maximum amount to write (in bytes)\n        to any one file.  If this is zero, then there is no limit.\n        (Defaults to no limit). </li>\n <li>   &lt;handler-name&gt;.count\n        specifies how many output files to cycle through (defaults to 1). </li>\n <li>   &lt;handler-name&gt;.pattern\n        specifies a pattern for generating the output file name.  See\n        below for details. (Defaults to \"%h/java%u.log\"). </li>\n <li>   &lt;handler-name&gt;.append\n        specifies whether the FileHandler should append onto\n        any existing files (defaults to false). </li>\n </ul>\n <p>\n For example, the properties for {@code FileHandler} would be:\n <ul>\n <li>   java.util.logging.FileHandler.level=INFO </li>\n <li>   java.util.logging.FileHandler.formatter=<a href=\"#!/api/java.util.logging.SimpleFormatter\" rel=\"java.util.logging.SimpleFormatter\" class=\"docClass\">java.util.logging.SimpleFormatter</a> </li>\n </ul>\n <p>\n For a custom handler, e.g. com.foo.MyHandler, the properties would be:\n <ul>\n <li>   com.foo.MyHandler.level=INFO </li>\n <li>   com.foo.MyHandler.formatter=<a href=\"#!/api/java.util.logging.SimpleFormatter\" rel=\"java.util.logging.SimpleFormatter\" class=\"docClass\">java.util.logging.SimpleFormatter</a> </li>\n </ul>\n <p>\n A pattern consists of a string that includes the following special\n components that will be replaced at runtime:\n <ul>\n <li>    \"/\"    the local pathname separator </li>\n <li>     \"%t\"   the system temporary directory </li>\n <li>     \"%h\"   the value of the \"user.home\" system property </li>\n <li>     \"%g\"   the generation number to distinguish rotated logs </li>\n <li>     \"%u\"   a unique number to resolve conflicts </li>\n <li>     \"%%\"   translates to a single percent sign \"%\" </li>\n </ul>\n If no \"%g\" field has been specified and the file count is greater\n than one, then the generation number will be added to the end of\n the generated filename, after a dot.\n <p>\n Thus for example a pattern of \"%t/java%g.log\" with a count of 2\n would typically cause log files to be written on Solaris to\n /var/tmp/java0.log and /var/tmp/java1.log whereas on Windows 95 they\n would be typically written to C:\\TEMP\\java0.log and C:\\TEMP\\java1.log\n <p>\n Generation numbers follow the sequence 0, 1, 2, etc.\n <p>\n Normally the \"%u\" unique field is set to 0.  However, if the <tt>FileHandler</tt>\n tries to open the filename and finds the file is currently in use by\n another process it will increment the unique number field and try\n again.  This will be repeated until <tt>FileHandler</tt> finds a file name that\n is  not currently in use. If there is a conflict and no \"%u\" field has\n been specified, it will be added at the end of the filename after a dot.\n (This will be after any automatically added generation number.)\n <p>\n Thus if three processes were all trying to log to fred%u.%g.txt then\n they  might end up using fred0.0.txt, fred1.0.txt, fred2.0.txt as\n the first file in their rotating sequences.\n <p>\n Note that the use of unique ids to avoid conflicts is only guaranteed\n to work reliably when using a local disk file system.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.FileHandler'>java.util.logging.FileHandler</span><br/><a href='source/FileHandler.html#java-util-logging-FileHandler-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.FileHandler-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close all the files. ...</div><div class='long'><p>Close all the files.\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n<p>Overrides: <a href=\"#!/api/java.util.logging.StreamHandler-method-close\" rel=\"java.util.logging.StreamHandler-method-close\" class=\"docClass\">java.util.logging.StreamHandler.close</a></p></div></div></div><div id='method-flush' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.StreamHandler' rel='java.util.logging.StreamHandler' class='defined-in docClass'>java.util.logging.StreamHandler</a><br/><a href='source/StreamHandler.html#java-util-logging-StreamHandler-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.StreamHandler-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flush any buffered messages. ...</div><div class='long'><p>Flush any buffered messages.</p>\n<p>Overrides: <a href=\"#!/api/java.util.logging.Handler-method-flush\" rel=\"java.util.logging.Handler-method-flush\" class=\"docClass\">java.util.logging.Handler.flush</a></p></div></div></div><div id='method-getEncoding' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-getEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getEncoding' class='name expandable'>getEncoding</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the character encoding for this Handler. ...</div><div class='long'><p>Return the character encoding for this <tt>Handler</tt>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The encoding name.  May be null, which indicates the\n          default encoding should be used.</p>\n</div></li></ul></div></div></div><div id='method-getErrorManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-getErrorManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getErrorManager' class='name expandable'>getErrorManager</a>( <span class='pre'></span> ) : Object {java.util.logging.ErrorManager}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the ErrorManager for this Handler. ...</div><div class='long'><p>Retrieves the ErrorManager for this Handler.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.ErrorManager}</span><div class='sub-desc'><p>the ErrorManager for this Handler\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-getFilter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-getFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getFilter' class='name expandable'>getFilter</a>( <span class='pre'></span> ) : Object {java.util.logging.Filter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current Filter for this Handler. ...</div><div class='long'><p>Get the current <tt>Filter</tt> for this <tt>Handler</tt>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.Filter}</span><div class='sub-desc'><p>a <tt>Filter</tt> object (may be null)</p>\n</div></li></ul></div></div></div><div id='method-getFormatter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-getFormatter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getFormatter' class='name expandable'>getFormatter</a>( <span class='pre'></span> ) : Object {java.util.logging.Formatter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Formatter for this Handler. ...</div><div class='long'><p>Return the <tt>Formatter</tt> for this <tt>Handler</tt>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.Formatter}</span><div class='sub-desc'><p>the <tt>Formatter</tt> (may be null).</p>\n</div></li></ul></div></div></div><div id='method-getLevel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-getLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getLevel' class='name expandable'>getLevel</a>( <span class='pre'></span> ) : Object {java.util.logging.Level}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the log level specifying which messages will be\n logged by this Handler. ...</div><div class='long'><p>Get the log level specifying which messages will be\n logged by this <tt>Handler</tt>.  Message levels lower\n than this level will be discarded.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.Level}</span><div class='sub-desc'><p>the level of messages being logged.</p>\n</div></li></ul></div></div></div><div id='method-isLoggable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.StreamHandler' rel='java.util.logging.StreamHandler' class='defined-in docClass'>java.util.logging.StreamHandler</a><br/><a href='source/StreamHandler.html#java-util-logging-StreamHandler-method-isLoggable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.StreamHandler-method-isLoggable' class='name expandable'>isLoggable</a>( <span class='pre'>record</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if this Handler would actually log a given LogRecord. ...</div><div class='long'><p>Check if this <tt>Handler</tt> would actually log a given <tt>LogRecord</tt>.\n <p>\n This method checks if the <tt>LogRecord</tt> has an appropriate level and\n whether it satisfies any <tt>Filter</tt>.  It will also return false if\n no output stream has been assigned yet or the LogRecord is null.\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : Object {LogRecord}<div class='sub-desc'><p>a <tt>LogRecord</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the <tt>LogRecord</tt> would be logged.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.logging.Handler-method-isLoggable\" rel=\"java.util.logging.Handler-method-isLoggable\" class=\"docClass\">java.util.logging.Handler.isLoggable</a></p></div></div></div><div id='method-publish' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.FileHandler'>java.util.logging.FileHandler</span><br/><a href='source/FileHandler.html#java-util-logging-FileHandler-method-publish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.FileHandler-method-publish' class='name expandable'>publish</a>( <span class='pre'>record</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Format and publish a LogRecord. ...</div><div class='long'><p>Format and publish a <tt>LogRecord</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : Object {LogRecord}<div class='sub-desc'><p>description of the log event. A null record is\n                 silently ignored and is not published</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.logging.StreamHandler-method-publish\" rel=\"java.util.logging.StreamHandler-method-publish\" class=\"docClass\">java.util.logging.StreamHandler.publish</a></p></div></div></div><div id='method-setEncoding' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.StreamHandler' rel='java.util.logging.StreamHandler' class='defined-in docClass'>java.util.logging.StreamHandler</a><br/><a href='source/StreamHandler.html#java-util-logging-StreamHandler-method-setEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.StreamHandler-method-setEncoding' class='name expandable'>setEncoding</a>( <span class='pre'>encoding</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set (or change) the character encoding used by this Handler. ...</div><div class='long'><p>Set (or change) the character encoding used by this <tt>Handler</tt>.\n <p>\n The encoding should be set before any <tt>LogRecords</tt> are written\n to the <tt>Handler</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>encoding</span> : String<div class='sub-desc'><p>The name of a supported character encoding.\n        May be null, to indicate the default platform encoding.\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.\n@exception UnsupportedEncodingException if the named encoding is\n          not supported.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.logging.Handler-method-setEncoding\" rel=\"java.util.logging.Handler-method-setEncoding\" class=\"docClass\">java.util.logging.Handler.setEncoding</a></p></div></div></div><div id='method-setErrorManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-setErrorManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setErrorManager' class='name expandable'>setErrorManager</a>( <span class='pre'>em</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Define an ErrorManager for this Handler. ...</div><div class='long'><p>Define an ErrorManager for this Handler.\n <p>\n The ErrorManager's \"error\" method will be invoked if any\n errors occur while using this Handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>em</span> : Object {ErrorManager}<div class='sub-desc'><p>the new ErrorManager\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-setFilter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-setFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setFilter' class='name expandable'>setFilter</a>( <span class='pre'>newFilter</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a Filter to control output on this Handler. ...</div><div class='long'><p>Set a <tt>Filter</tt> to control output on this <tt>Handler</tt>.\n <P>\n For each call of <tt>publish</tt> the <tt>Handler</tt> will call\n this <tt>Filter</tt> (if it is non-null) to check if the\n <tt>LogRecord</tt> should be published or discarded.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newFilter</span> : Object {Filter}<div class='sub-desc'><p>a <tt>Filter</tt> object (may be null)\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-setFormatter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-setFormatter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setFormatter' class='name expandable'>setFormatter</a>( <span class='pre'>newFormatter</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a Formatter. ...</div><div class='long'><p>Set a <tt>Formatter</tt>.  This <tt>Formatter</tt> will be used\n to format <tt>LogRecords</tt> for this <tt>Handler</tt>.\n <p>\n Some <tt>Handlers</tt> may not use <tt>Formatters</tt>, in\n which case the <tt>Formatter</tt> will be remembered, but not used.\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newFormatter</span> : Object {Formatter}<div class='sub-desc'><p>the <tt>Formatter</tt> to use (may not be null)\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-setLevel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.logging.Handler' rel='java.util.logging.Handler' class='defined-in docClass'>java.util.logging.Handler</a><br/><a href='source/Handler.html#java-util-logging-Handler-method-setLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setLevel' class='name expandable'>setLevel</a>( <span class='pre'>newLevel</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the log level specifying which message levels will be\n logged by this Handler. ...</div><div class='long'><p>Set the log level specifying which message levels will be\n logged by this <tt>Handler</tt>.  Message levels lower than this\n value will be discarded.\n <p>\n The intention is to allow developers to turn on voluminous\n logging, but to limit the messages that are sent to certain\n <tt>Handlers</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newLevel</span> : Object {Level}<div class='sub-desc'><p>the new value for the log level\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});