Ext.data.JsonP.java_util_logging_LoggingMXBean({"tagname":"class","name":"java.util.logging.LoggingMXBean","autodetected":{},"files":[{"filename":"LoggingMXBean.js","href":"LoggingMXBean.html#java-util-logging-LoggingMXBean"}],"author":[{"tagname":"author","name":"Ron Mann","email":null},{"tagname":"author","name":"Mandy Chung","email":null}],"since":"1.5","members":[{"name":"getLoggerLevel","tagname":"method","owner":"java.util.logging.LoggingMXBean","id":"method-getLoggerLevel","meta":{}},{"name":"getLoggerNames","tagname":"method","owner":"java.util.logging.LoggingMXBean","id":"method-getLoggerNames","meta":{}},{"name":"getParentLoggerName","tagname":"method","owner":"java.util.logging.LoggingMXBean","id":"method-getParentLoggerName","meta":{}},{"name":"setLoggerLevel","tagname":"method","owner":"java.util.logging.LoggingMXBean","id":"method-setLoggerLevel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.logging.LoggingMXBean","short_doc":"The management interface for the logging facility. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/LoggingMXBean.html#java-util-logging-LoggingMXBean' target='_blank'>LoggingMXBean.js</a></div></pre><div class='doc-contents'><p>The management interface for the logging facility.</p>\n\n<p> <p>There is a single global instance of the <tt>LoggingMXBean</tt>.</p>\n\n<p> The {@code javax.management.ObjectName ObjectName} that uniquely identifies\n the management interface for logging within the {@code MBeanServer} is:</p>\n\n<pre>    java.util.logging:type=Logging\n </pre>\n\n\n<p> <p></p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getLoggerLevel' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.LoggingMXBean'>java.util.logging.LoggingMXBean</span><br/><a href='source/LoggingMXBean.html#java-util-logging-LoggingMXBean-method-getLoggerLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.LoggingMXBean-method-getLoggerLevel' class='name expandable'>getLoggerLevel</a>( <span class='pre'>loggerName</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the name of the log level associated with the specified logger. ...</div><div class='long'><p>Gets the name of the log level associated with the specified logger.\n If the specified logger does not exist, <tt>null</tt>\n is returned.\n This method first finds the logger of the given name and\n then returns the name of the log level by calling:\n <blockquote>\n   <a href=\"#!/api/java.util.logging.Logger-method-getLevel\" rel=\"java.util.logging.Logger-method-getLevel\" class=\"docClass\">java.util.logging.Logger.getLevel()</a>.<a href=\"#!/api/java.util.logging.Level-method-getName\" rel=\"java.util.logging.Level-method-getName\" class=\"docClass\">getName()</a>;\n </blockquote></p>\n\n<p> <p>\n If the <tt>Level</tt> of the specified logger is <tt>null</tt>,\n which means that this logger's effective level is inherited\n from its parent, an empty string will be returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>loggerName</span> : String<div class='sub-desc'><p>The name of the <tt>Logger</tt> to be retrieved.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The name of the log level of the specified logger; or\n         an empty string if the log level of the specified logger\n         is <tt>null</tt>.  If the specified logger does not\n         exist, <tt>null</tt> is returned.\n@see Logger#getLevel</p>\n</div></li></ul></div></div></div><div id='method-getLoggerNames' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.LoggingMXBean'>java.util.logging.LoggingMXBean</span><br/><a href='source/LoggingMXBean.html#java-util-logging-LoggingMXBean-method-getLoggerNames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.LoggingMXBean-method-getLoggerNames' class='name expandable'>getLoggerNames</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of currently registered logger names. ...</div><div class='long'><p>Returns the list of currently registered logger names. This method\n calls <a href=\"#!/api/java.util.logging.LogManager-method-getLoggerNames\" rel=\"java.util.logging.LogManager-method-getLoggerNames\" class=\"docClass\">java.util.logging.LogManager.getLoggerNames</a> and returns a list\n of the logger names.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>A list of <tt>String</tt> each of which is a\n         currently registered <tt>Logger</tt> name.</p>\n</div></li></ul></div></div></div><div id='method-getParentLoggerName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.LoggingMXBean'>java.util.logging.LoggingMXBean</span><br/><a href='source/LoggingMXBean.html#java-util-logging-LoggingMXBean-method-getParentLoggerName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.LoggingMXBean-method-getParentLoggerName' class='name expandable'>getParentLoggerName</a>( <span class='pre'>loggerName</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the parent for the specified logger. ...</div><div class='long'><p>Returns the name of the parent for the specified logger.\n If the specified logger does not exist, <tt>null</tt> is returned.\n If the specified logger is the root <tt>Logger</tt> in the namespace,\n the result will be an empty string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>loggerName</span> : String<div class='sub-desc'><p>The name of a <tt>Logger</tt>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of the nearest existing parent logger;\n         an empty string if the specified logger is the root logger.\n         If the specified logger does not exist, <tt>null</tt>\n         is returned.</p>\n</div></li></ul></div></div></div><div id='method-setLoggerLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.LoggingMXBean'>java.util.logging.LoggingMXBean</span><br/><a href='source/LoggingMXBean.html#java-util-logging-LoggingMXBean-method-setLoggerLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.LoggingMXBean-method-setLoggerLevel' class='name expandable'>setLoggerLevel</a>( <span class='pre'>loggerName, levelName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the specified logger to the specified new level. ...</div><div class='long'><p>Sets the specified logger to the specified new level.\n If the <tt>levelName</tt> is not <tt>null</tt>, the level\n of the specified logger is set to the parsed <tt>Level</tt>\n matching the <tt>levelName</tt>.\n If the <tt>levelName</tt> is <tt>null</tt>, the level\n of the specified logger is set to <tt>null</tt> and\n the effective level of the logger is inherited from\n its nearest ancestor with a specific (non-null) level value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>loggerName</span> : String<div class='sub-desc'><p>The name of the <tt>Logger</tt> to be set.\n                   Must be non-null.</p>\n</div></li><li><span class='pre'>levelName</span> : String<div class='sub-desc'><p>The name of the level to set on the specified logger,\n                 or <tt>null</tt> if setting the level to inherit\n                 from its nearest ancestor.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the specified logger\n does not exist, or <tt>levelName</tt> is not a valid level name.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and if\n the caller does not have LoggingPermission(\"control\").\n@see Logger#setLevel</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});