Ext.data.JsonP.java_util_logging_Handler({"tagname":"class","name":"java.util.logging.Handler","autodetected":{},"files":[{"filename":"Handler.js","href":"Handler.html#java-util-logging-Handler"}],"extends":"java.lang.Object","since":"1.4","members":[{"name":"close","tagname":"method","owner":"java.util.logging.Handler","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.util.logging.Handler","id":"method-flush","meta":{}},{"name":"getEncoding","tagname":"method","owner":"java.util.logging.Handler","id":"method-getEncoding","meta":{}},{"name":"getErrorManager","tagname":"method","owner":"java.util.logging.Handler","id":"method-getErrorManager","meta":{}},{"name":"getFilter","tagname":"method","owner":"java.util.logging.Handler","id":"method-getFilter","meta":{}},{"name":"getFormatter","tagname":"method","owner":"java.util.logging.Handler","id":"method-getFormatter","meta":{}},{"name":"getLevel","tagname":"method","owner":"java.util.logging.Handler","id":"method-getLevel","meta":{}},{"name":"isLoggable","tagname":"method","owner":"java.util.logging.Handler","id":"method-isLoggable","meta":{}},{"name":"publish","tagname":"method","owner":"java.util.logging.Handler","id":"method-publish","meta":{}},{"name":"setEncoding","tagname":"method","owner":"java.util.logging.Handler","id":"method-setEncoding","meta":{}},{"name":"setErrorManager","tagname":"method","owner":"java.util.logging.Handler","id":"method-setErrorManager","meta":{}},{"name":"setFilter","tagname":"method","owner":"java.util.logging.Handler","id":"method-setFilter","meta":{}},{"name":"setFormatter","tagname":"method","owner":"java.util.logging.Handler","id":"method-setFormatter","meta":{}},{"name":"setLevel","tagname":"method","owner":"java.util.logging.Handler","id":"method-setLevel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.logging.Handler","short_doc":"A Handler object takes log messages from a Logger and\n exports them. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["java.util.logging.MemoryHandler","java.util.logging.StreamHandler"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.util.logging.Handler</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.util.logging.MemoryHandler' rel='java.util.logging.MemoryHandler' class='docClass'>java.util.logging.MemoryHandler</a></div><div class='dependency'><a href='#!/api/java.util.logging.StreamHandler' rel='java.util.logging.StreamHandler' class='docClass'>java.util.logging.StreamHandler</a></div><h4>Files</h4><div class='dependency'><a href='source/Handler.html#java-util-logging-Handler' target='_blank'>Handler.js</a></div></pre><div class='doc-contents'><p>A <tt>Handler</tt> object takes log messages from a <tt>Logger</tt> and\n exports them.  It might for example, write them to a console\n or write them to a file, or send them to a network logging service,\n or forward them to an OS log, or whatever.\n <p>\n A <tt>Handler</tt> can be disabled by doing a <tt>setLevel(Level.OFF)</tt>\n and can  be re-enabled by doing a <tt>setLevel</tt> with an appropriate level.\n <p>\n <tt>Handler</tt> classes typically use <tt>LogManager</tt> properties to set\n default values for the <tt>Handler</tt>'s <tt>Filter</tt>, <tt>Formatter</tt>,\n and <tt>Level</tt>.  See the specific documentation for each concrete\n <tt>Handler</tt> class.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close the Handler and free all associated resources. ...</div><div class='long'><p>Close the <tt>Handler</tt> and free all associated resources.\n <p>\n The close method will perform a <tt>flush</tt> and then close the\n <tt>Handler</tt>.   After close has been called this <tt>Handler</tt>\n should no longer be used.  Method calls may either be silently\n ignored or may throw runtime exceptions.\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flush any buffered output. ...</div><div class='long'><p>Flush any buffered output.</p>\n</div></div></div><div id='method-getEncoding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-getEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getEncoding' class='name expandable'>getEncoding</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the character encoding for this Handler. ...</div><div class='long'><p>Return the character encoding for this <tt>Handler</tt>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The encoding name.  May be null, which indicates the\n          default encoding should be used.</p>\n</div></li></ul></div></div></div><div id='method-getErrorManager' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-getErrorManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getErrorManager' class='name expandable'>getErrorManager</a>( <span class='pre'></span> ) : Object {java.util.logging.ErrorManager}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the ErrorManager for this Handler. ...</div><div class='long'><p>Retrieves the ErrorManager for this Handler.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.ErrorManager}</span><div class='sub-desc'><p>the ErrorManager for this Handler\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-getFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-getFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getFilter' class='name expandable'>getFilter</a>( <span class='pre'></span> ) : Object {java.util.logging.Filter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current Filter for this Handler. ...</div><div class='long'><p>Get the current <tt>Filter</tt> for this <tt>Handler</tt>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.Filter}</span><div class='sub-desc'><p>a <tt>Filter</tt> object (may be null)</p>\n</div></li></ul></div></div></div><div id='method-getFormatter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-getFormatter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getFormatter' class='name expandable'>getFormatter</a>( <span class='pre'></span> ) : Object {java.util.logging.Formatter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Formatter for this Handler. ...</div><div class='long'><p>Return the <tt>Formatter</tt> for this <tt>Handler</tt>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.Formatter}</span><div class='sub-desc'><p>the <tt>Formatter</tt> (may be null).</p>\n</div></li></ul></div></div></div><div id='method-getLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-getLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-getLevel' class='name expandable'>getLevel</a>( <span class='pre'></span> ) : Object {java.util.logging.Level}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the log level specifying which messages will be\n logged by this Handler. ...</div><div class='long'><p>Get the log level specifying which messages will be\n logged by this <tt>Handler</tt>.  Message levels lower\n than this level will be discarded.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.logging.Level}</span><div class='sub-desc'><p>the level of messages being logged.</p>\n</div></li></ul></div></div></div><div id='method-isLoggable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-isLoggable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-isLoggable' class='name expandable'>isLoggable</a>( <span class='pre'>record</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if this Handler would actually log a given LogRecord. ...</div><div class='long'><p>Check if this <tt>Handler</tt> would actually log a given <tt>LogRecord</tt>.\n <p>\n This method checks if the <tt>LogRecord</tt> has an appropriate\n <tt>Level</tt> and  whether it satisfies any <tt>Filter</tt>.  It also\n may make other <tt>Handler</tt> specific checks that might prevent a\n handler from logging the <tt>LogRecord</tt>. It will return false if\n the <tt>LogRecord</tt> is null.\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : Object {LogRecord}<div class='sub-desc'><p>a <tt>LogRecord</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the <tt>LogRecord</tt> would be logged.</p>\n</div></li></ul></div></div></div><div id='method-publish' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-publish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-publish' class='name expandable'>publish</a>( <span class='pre'>record</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Publish a LogRecord. ...</div><div class='long'><p>Publish a <tt>LogRecord</tt>.\n <p>\n The logging request was made initially to a <tt>Logger</tt> object,\n which initialized the <tt>LogRecord</tt> and forwarded it here.\n <p>\n The <tt>Handler</tt>  is responsible for formatting the message, when and\n if necessary.  The formatting should include localization.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>record</span> : Object {LogRecord}<div class='sub-desc'><p>description of the log event. A null record is\n                 silently ignored and is not published</p>\n</div></li></ul></div></div></div><div id='method-setEncoding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-setEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setEncoding' class='name expandable'>setEncoding</a>( <span class='pre'>encoding</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the character encoding used by this Handler. ...</div><div class='long'><p>Set the character encoding used by this <tt>Handler</tt>.\n <p>\n The encoding should be set before any <tt>LogRecords</tt> are written\n to the <tt>Handler</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>encoding</span> : String<div class='sub-desc'><p>The name of a supported character encoding.\n        May be null, to indicate the default platform encoding.\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.\n@exception UnsupportedEncodingException if the named encoding is\n          not supported.</p>\n</div></li></ul></div></div></div><div id='method-setErrorManager' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-setErrorManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setErrorManager' class='name expandable'>setErrorManager</a>( <span class='pre'>em</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Define an ErrorManager for this Handler. ...</div><div class='long'><p>Define an ErrorManager for this Handler.\n <p>\n The ErrorManager's \"error\" method will be invoked if any\n errors occur while using this Handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>em</span> : Object {ErrorManager}<div class='sub-desc'><p>the new ErrorManager\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-setFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-setFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setFilter' class='name expandable'>setFilter</a>( <span class='pre'>newFilter</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a Filter to control output on this Handler. ...</div><div class='long'><p>Set a <tt>Filter</tt> to control output on this <tt>Handler</tt>.\n <P>\n For each call of <tt>publish</tt> the <tt>Handler</tt> will call\n this <tt>Filter</tt> (if it is non-null) to check if the\n <tt>LogRecord</tt> should be published or discarded.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newFilter</span> : Object {Filter}<div class='sub-desc'><p>a <tt>Filter</tt> object (may be null)\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-setFormatter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-setFormatter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setFormatter' class='name expandable'>setFormatter</a>( <span class='pre'>newFormatter</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a Formatter. ...</div><div class='long'><p>Set a <tt>Formatter</tt>.  This <tt>Formatter</tt> will be used\n to format <tt>LogRecords</tt> for this <tt>Handler</tt>.\n <p>\n Some <tt>Handlers</tt> may not use <tt>Formatters</tt>, in\n which case the <tt>Formatter</tt> will be remembered, but not used.\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newFormatter</span> : Object {Formatter}<div class='sub-desc'><p>the <tt>Formatter</tt> to use (may not be null)\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div><div id='method-setLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.logging.Handler'>java.util.logging.Handler</span><br/><a href='source/Handler.html#java-util-logging-Handler-method-setLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.logging.Handler-method-setLevel' class='name expandable'>setLevel</a>( <span class='pre'>newLevel</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the log level specifying which message levels will be\n logged by this Handler. ...</div><div class='long'><p>Set the log level specifying which message levels will be\n logged by this <tt>Handler</tt>.  Message levels lower than this\n value will be discarded.\n <p>\n The intention is to allow developers to turn on voluminous\n logging, but to limit the messages that are sent to certain\n <tt>Handlers</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newLevel</span> : Object {Level}<div class='sub-desc'><p>the new value for the log level\n@exception SecurityException  if a security manager exists and if\n             the caller does not have <tt>LoggingPermission(\"control\")</tt>.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});