Ext.data.JsonP.java_sql_PreparedStatement({"tagname":"class","name":"java.sql.PreparedStatement","autodetected":{},"files":[{"filename":"PreparedStatement.js","href":"PreparedStatement.html#java-sql-PreparedStatement"}],"members":[{"name":"addBatch","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-addBatch","meta":{}},{"name":"clearParameters","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-clearParameters","meta":{}},{"name":"execute","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-execute","meta":{}},{"name":"executeQuery","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-executeQuery","meta":{}},{"name":"executeUpdate","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-executeUpdate","meta":{}},{"name":"getMetaData","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-getMetaData","meta":{}},{"name":"getParameterMetaData","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-getParameterMetaData","meta":{}},{"name":"setArray","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setArray","meta":{}},{"name":"setAsciiStream","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setAsciiStream","meta":{}},{"name":"setBigDecimal","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setBigDecimal","meta":{}},{"name":"setBinaryStream","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setBinaryStream","meta":{}},{"name":"setBlob","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setBlob","meta":{}},{"name":"setBoolean","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setBoolean","meta":{}},{"name":"setByte","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setByte","meta":{}},{"name":"setBytes","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setBytes","meta":{}},{"name":"setCharacterStream","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setCharacterStream","meta":{}},{"name":"setClob","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setClob","meta":{}},{"name":"setDate","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setDate","meta":{}},{"name":"setDouble","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setDouble","meta":{}},{"name":"setFloat","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setFloat","meta":{}},{"name":"setInt","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setInt","meta":{}},{"name":"setLong","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setLong","meta":{}},{"name":"setNCharacterStream","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setNCharacterStream","meta":{}},{"name":"setNClob","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setNClob","meta":{}},{"name":"setNString","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setNString","meta":{}},{"name":"setNull","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setNull","meta":{}},{"name":"setObject","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setObject","meta":{}},{"name":"setRef","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setRef","meta":{}},{"name":"setRowId","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setRowId","meta":{}},{"name":"setSQLXML","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setSQLXML","meta":{}},{"name":"setShort","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setShort","meta":{}},{"name":"setString","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setString","meta":{}},{"name":"setTime","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setTime","meta":{}},{"name":"setTimestamp","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setTimestamp","meta":{}},{"name":"setURL","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setURL","meta":{}},{"name":"setUnicodeStream","tagname":"method","owner":"java.sql.PreparedStatement","id":"method-setUnicodeStream","meta":{"deprecated":{"text":"<p>Use setCharacterStream</p>\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-java.sql.PreparedStatement","short_doc":"implements java.sql.Statement\n\n An object that represents a precompiled SQL statement. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/PreparedStatement.html#java-sql-PreparedStatement' target='_blank'>PreparedStatement.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.sql.Statement\" rel=\"java.sql.Statement\" class=\"docClass\">java.sql.Statement</a></p>\n\n<p> An object that represents a precompiled SQL statement.\n <P>A SQL statement is precompiled and stored in a\n <code>PreparedStatement</code> object. This object can then be used to\n efficiently execute this statement multiple times.</P></p>\n\n<p> <P><B>Note:</B> The setter methods (<code>setShort</code>, <code>setString</code>,\n and so on) for setting IN parameter values\n must specify types that are compatible with the defined SQL type of\n the input parameter. For instance, if the IN parameter has SQL type\n <code>INTEGER</code>, then the method <code>setInt</code> should be used.</P></p>\n\n<p> <p>If arbitrary parameter type conversions are required, the method\n <code>setObject</code> should be used with a target SQL type.\n <P>\n In the following example of setting a parameter, <code>con</code> represents\n an active connection:\n <PRE>\n   PreparedStatement pstmt = con.prepareStatement(\"UPDATE EMPLOYEES\n                                     SET SALARY = ? WHERE ID = ?\");\n   pstmt.setBigDecimal(1, 153833.00)\n   pstmt.setInt(2, 110592)\n </PRE></P></p>\n\n<p> @see Connection#prepareStatement\n @see ResultSet</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addBatch' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-addBatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-addBatch' class='name expandable'>addBatch</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a set of parameters to this PreparedStatement\n object's batch of commands. ...</div><div class='long'><p>Adds a set of parameters to this <code>PreparedStatement</code>\n object's batch of commands.\n@exception SQLException if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code>\n@see Statement#addBatch</p>\n        <p>Available since: <b>1.2</b></p>\n</div></div></div><div id='method-clearParameters' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-clearParameters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-clearParameters' class='name expandable'>clearParameters</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clears the current parameter values immediately. ...</div><div class='long'><p>Clears the current parameter values immediately.\n <P>In general, parameter values remain in force for repeated use of a\n statement. Setting a parameter value automatically clears its\n previous value.  However, in some cases it is useful to immediately\n release the resources used by the current parameter values; this can\n be done by calling the method <code>clearParameters</code>.\n@exception SQLException if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></P></p>\n</div></div></div><div id='method-execute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-execute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-execute' class='name expandable'>execute</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes the SQL statement in this PreparedStatement object,\n which may be any kind of SQL statement. ...</div><div class='long'><p>Executes the SQL statement in this <code>PreparedStatement</code> object,\n which may be any kind of SQL statement.\n Some prepared statements return multiple results; the <code>execute</code>\n method handles these complex statements as well as the simpler\n form of statements handled by the methods <code>executeQuery</code>\n and <code>executeUpdate</code>.\n <P>\n The <code>execute</code> method returns a <code>boolean</code> to\n indicate the form of the first result.  You must call either the method\n <code>getResultSet</code> or <code>getUpdateCount</code>\n to retrieve the result; you must call <code>getMoreResults</code> to\n move to any subsequent result(s).</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the first result is a <code>ResultSet</code>\n         object; <code>false</code> if the first result is an update\n         count or there is no result\n@exception SQLException if a database access error occurs;\n this method is called on a closed <code>PreparedStatement</code>\n or an argument is supplied to this method</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLTimeoutException when the driver has determined that the\n timeout value that was specified by the {@code setQueryTimeout}\n method has been exceeded and has at least attempted to cancel\n the currently running {@code Statement}\n@see Statement#execute\n@see Statement#getResultSet\n@see Statement#getUpdateCount\n@see Statement#getMoreResults</p>\n</div></li></ul></div></div></div><div id='method-executeQuery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-executeQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-executeQuery' class='name expandable'>executeQuery</a>( <span class='pre'></span> ) : Object {java.sql.ResultSet}<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes the SQL query in this PreparedStatement object\n and returns the ResultSet object generated by the query. ...</div><div class='long'><p>Executes the SQL query in this <code>PreparedStatement</code> object\n and returns the <code>ResultSet</code> object generated by the query.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.ResultSet}</span><div class='sub-desc'><p>a <code>ResultSet</code> object that contains the data produced by the\n         query; never <code>null</code>\n@exception SQLException if a database access error occurs;\n this method is called on a closed  <code>PreparedStatement</code> or the SQL\n            statement does not return a <code>ResultSet</code> object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLTimeoutException when the driver has determined that the\n timeout value that was specified by the {@code setQueryTimeout}\n method has been exceeded and has at least attempted to cancel\n the currently running {@code Statement}</p>\n</div></li></ul></div></div></div><div id='method-executeUpdate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-executeUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-executeUpdate' class='name expandable'>executeUpdate</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes the SQL statement in this PreparedStatement object,\n which must be an SQL Data Manipulation Language (DML) s...</div><div class='long'><p>Executes the SQL statement in this <code>PreparedStatement</code> object,\n which must be an SQL Data Manipulation Language (DML) statement, such as <code>INSERT</code>, <code>UPDATE</code> or\n <code>DELETE</code>; or an SQL statement that returns nothing,\n such as a DDL statement.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>either (1) the row count for SQL Data Manipulation Language (DML) statements\n         or (2) 0 for SQL statements that return nothing\n@exception SQLException if a database access error occurs;\n this method is called on a closed  <code>PreparedStatement</code>\n or the SQL statement returns a <code>ResultSet</code> object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLTimeoutException when the driver has determined that the\n timeout value that was specified by the {@code setQueryTimeout}\n method has been exceeded and has at least attempted to cancel\n the currently running {@code Statement}</p>\n</div></li></ul></div></div></div><div id='method-getMetaData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-getMetaData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-getMetaData' class='name expandable'>getMetaData</a>( <span class='pre'></span> ) : Object {java.sql.ResultSetMetaData}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a ResultSetMetaData object that contains\n information about the columns of the ResultSet object\n that will ...</div><div class='long'><p>Retrieves a <code>ResultSetMetaData</code> object that contains\n information about the columns of the <code>ResultSet</code> object\n that will be returned when this <code>PreparedStatement</code> object\n is executed.\n <P>\n Because a <code>PreparedStatement</code> object is precompiled, it is\n possible to know about the <code>ResultSet</code> object that it will\n return without having to execute it.  Consequently, it is possible\n to invoke the method <code>getMetaData</code> on a\n <code>PreparedStatement</code> object rather than waiting to execute\n it and then invoking the <code>ResultSet.getMetaData</code> method\n on the <code>ResultSet</code> object that is returned.\n <P>\n <B>NOTE:</B> Using this method may be expensive for some drivers due\n to the lack of underlying DBMS support.</P></P></p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.ResultSetMetaData}</span><div class='sub-desc'><p>the description of a <code>ResultSet</code> object's columns or\n         <code>null</code> if the driver cannot return a\n         <code>ResultSetMetaData</code> object\n@exception SQLException if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code>\n@exception SQLFeatureNotSupportedException if the JDBC driver does not support\n this method</p>\n</div></li></ul></div></div></div><div id='method-getParameterMetaData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-getParameterMetaData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-getParameterMetaData' class='name expandable'>getParameterMetaData</a>( <span class='pre'></span> ) : Object {java.sql.ParameterMetaData}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the number, types and properties of this\n PreparedStatement object's parameters. ...</div><div class='long'><p>Retrieves the number, types and properties of this\n <code>PreparedStatement</code> object's parameters.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.ParameterMetaData}</span><div class='sub-desc'><p>a <code>ParameterMetaData</code> object that contains information\n         about the number, types and properties for each\n  parameter marker of this <code>PreparedStatement</code> object\n@exception SQLException if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code>\n@see ParameterMetaData</p>\n</div></li></ul></div></div></div><div id='method-setArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setArray' class='name expandable'>setArray</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.sql.Array object. ...</div><div class='long'><p>Sets the designated parameter to the given <code><a href=\"#!/api/java.sql.Array\" rel=\"java.sql.Array\" class=\"docClass\">java.sql.Array</a></code> object.\n The driver converts this to an SQL <code>ARRAY</code> value when it\n sends it to the database.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {Array}<div class='sub-desc'><p>an <code>Array</code> object that maps an SQL <code>ARRAY</code> value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setAsciiStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setAsciiStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setAsciiStream' class='name expandable'>setAsciiStream</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given input stream. ...</div><div class='long'><p>Sets the designated parameter to the given input stream.\n When a very large ASCII value is input to a <code>LONGVARCHAR</code>\n parameter, it may be more practical to send it via a\n <code>java.io.InputStream</code>. Data will be read from the stream\n as needed until end-of-file is reached.  The JDBC driver will\n do any necessary conversion from ASCII to the database char format.</p>\n\n<p> <P><B>Note:</B> This stream object can either be a standard\n Java stream object or your own subclass that implements the\n standard interface.\n <P><B>Note:</B> Consult your JDBC driver documentation to determine if\n it might be more efficient to use a version of\n <code>setAsciiStream</code> which takes a length parameter.</P></P></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {InputStream}<div class='sub-desc'><p>the Java input stream that contains the ASCII parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setBigDecimal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setBigDecimal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setBigDecimal' class='name expandable'>setBigDecimal</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.math.BigDecimal value. ...</div><div class='long'><p>Sets the designated parameter to the given <code>java.math.BigDecimal</code> value.\n The driver converts this to an SQL <code>NUMERIC</code> value when\n it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {BigDecimal}<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setBinaryStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setBinaryStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setBinaryStream' class='name expandable'>setBinaryStream</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given input stream. ...</div><div class='long'><p>Sets the designated parameter to the given input stream.\n When a very large binary value is input to a <code>LONGVARBINARY</code>\n parameter, it may be more practical to send it via a\n <code>java.io.InputStream</code> object. The data will be read from the\n stream as needed until end-of-file is reached.</p>\n\n<p> <P><B>Note:</B> This stream object can either be a standard\n Java stream object or your own subclass that implements the\n standard interface.\n <P><B>Note:</B> Consult your JDBC driver documentation to determine if\n it might be more efficient to use a version of\n <code>setBinaryStream</code> which takes a length parameter.</P></P></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {InputStream}<div class='sub-desc'><p>the java input stream which contains the binary parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setBlob' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setBlob' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setBlob' class='name expandable'>setBlob</a>( <span class='pre'>parameterIndex, inputStream</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to a InputStream object. ...</div><div class='long'><p>Sets the designated parameter to a <code>InputStream</code> object.\n This method differs from the <code>setBinaryStream (int, InputStream)</code>\n method because it informs the driver that the parameter value should be\n sent to the server as a <code>BLOB</code>.  When the <code>setBinaryStream</code> method is used,\n the driver may have to do extra work to determine whether the parameter\n data should be sent to the server as a <code>LONGVARBINARY</code> or a <code>BLOB</code></p>\n\n<p> <P><B>Note:</B> Consult your JDBC driver documentation to determine if\n it might be more efficient to use a version of\n <code>setBlob</code> which takes a length parameter.</P></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>index of the first parameter is 1,\n the second is 2, ...</p>\n</div></li><li><span class='pre'>inputStream</span> : Object {InputStream}<div class='sub-desc'><p>An object that contains the data to set the parameter\n value to.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs;\n this method is called on a closed <code>PreparedStatement</code> or\n if parameterIndex does not correspond\n to a parameter marker in the SQL statement,</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setBoolean' class='name expandable'>setBoolean</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java boolean value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>boolean</code> value.\n The driver converts this\n to an SQL <code>BIT</code> or <code>BOOLEAN</code> value when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Boolean<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement;\n if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setByte' class='name expandable'>setByte</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java byte value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>byte</code> value.\n The driver converts this\n to an SQL <code>TINYINT</code> value when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setBytes' class='name expandable'>setBytes</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java array of bytes. ...</div><div class='long'><p>Sets the designated parameter to the given Java array of bytes.  The driver converts\n this to an SQL <code>VARBINARY</code> or <code>LONGVARBINARY</code>\n (depending on the argument's size relative to the driver's limits on\n <code>VARBINARY</code> values) when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {byte[]}<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setCharacterStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setCharacterStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setCharacterStream' class='name expandable'>setCharacterStream</a>( <span class='pre'>parameterIndex, reader</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Reader\n object. ...</div><div class='long'><p>Sets the designated parameter to the given <code>Reader</code>\n object.\n When a very large UNICODE value is input to a <code>LONGVARCHAR</code>\n parameter, it may be more practical to send it via a\n <code>java.io.Reader</code> object. The data will be read from the stream\n as needed until end-of-file is reached.  The JDBC driver will\n do any necessary conversion from UNICODE to the database char format.</p>\n\n<p> <P><B>Note:</B> This stream object can either be a standard\n Java stream object or your own subclass that implements the\n standard interface.\n <P><B>Note:</B> Consult your JDBC driver documentation to determine if\n it might be more efficient to use a version of\n <code>setCharacterStream</code> which takes a length parameter.</P></P></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>reader</span> : Object {Reader}<div class='sub-desc'><p>the <code>java.io.Reader</code> object that contains the\n        Unicode data\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setClob' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setClob' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setClob' class='name expandable'>setClob</a>( <span class='pre'>parameterIndex, reader</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to a Reader object. ...</div><div class='long'><p>Sets the designated parameter to a <code>Reader</code> object.\n This method differs from the <code>setCharacterStream (int, Reader)</code> method\n because it informs the driver that the parameter value should be sent to\n the server as a <code>CLOB</code>.  When the <code>setCharacterStream</code> method is used, the\n driver may have to do extra work to determine whether the parameter\n data should be sent to the server as a <code>LONGVARCHAR</code> or a <code>CLOB</code></p>\n\n<p> <P><B>Note:</B> Consult your JDBC driver documentation to determine if\n it might be more efficient to use a version of\n <code>setClob</code> which takes a length parameter.</P></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>index of the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>reader</span> : Object {Reader}<div class='sub-desc'><p>An object that contains the data to set the parameter value to.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs; this method is called on\n a closed <code>PreparedStatement</code>or if parameterIndex does not correspond to a parameter\n marker in the SQL statement</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setDate' class='name expandable'>setDate</a>( <span class='pre'>parameterIndex, x, cal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.sql.Date value,\n using the given Calendar object. ...</div><div class='long'><p>Sets the designated parameter to the given <code><a href=\"#!/api/java.sql.Date\" rel=\"java.sql.Date\" class=\"docClass\">java.sql.Date</a></code> value,\n using the given <code>Calendar</code> object.  The driver uses\n the <code>Calendar</code> object to construct an SQL <code>DATE</code> value,\n which the driver then sends to the database.  With\n a <code>Calendar</code> object, the driver can calculate the date\n taking into account a custom timezone.  If no\n <code>Calendar</code> object is specified, the driver uses the default\n timezone, which is that of the virtual machine running the application.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {Date}<div class='sub-desc'><p>the parameter value</p>\n</div></li><li><span class='pre'>cal</span> : Object {Calendar}<div class='sub-desc'><p>the <code>Calendar</code> object the driver will use\n            to construct the date\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setDouble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setDouble' class='name expandable'>setDouble</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java double value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>double</code> value.\n The driver converts this\n to an SQL <code>DOUBLE</code> value when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setFloat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setFloat' class='name expandable'>setFloat</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java float value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>float</code> value.\n The driver converts this\n to an SQL <code>REAL</code> value when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setInt' class='name expandable'>setInt</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java int value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>int</code> value.\n The driver converts this\n to an SQL <code>INTEGER</code> value when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setLong' class='name expandable'>setLong</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java long value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>long</code> value.\n The driver converts this\n to an SQL <code>BIGINT</code> value when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setNCharacterStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setNCharacterStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setNCharacterStream' class='name expandable'>setNCharacterStream</a>( <span class='pre'>parameterIndex, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to a Reader object. ...</div><div class='long'><p>Sets the designated parameter to a <code>Reader</code> object. The\n <code>Reader</code> reads the data till end-of-file is reached. The\n driver does the necessary conversion from Java character format to\n the national character set in the database.</p>\n\n<p> <P><B>Note:</B> This stream object can either be a standard\n Java stream object or your own subclass that implements the\n standard interface.\n <P><B>Note:</B> Consult your JDBC driver documentation to determine if\n it might be more efficient to use a version of\n <code>setNCharacterStream</code> which takes a length parameter.</P></P></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>of the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>value</span> : Object {Reader}<div class='sub-desc'><p>the parameter value</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if the driver does not support national\n         character sets;  if the driver can detect that a data conversion\n  error could occur; if a database access error occurs; or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setNClob' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setNClob' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setNClob' class='name expandable'>setNClob</a>( <span class='pre'>parameterIndex, reader</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to a Reader object. ...</div><div class='long'><p>Sets the designated parameter to a <code>Reader</code> object.\n This method differs from the <code>setCharacterStream (int, Reader)</code> method\n because it informs the driver that the parameter value should be sent to\n the server as a <code>NCLOB</code>.  When the <code>setCharacterStream</code> method is used, the\n driver may have to do extra work to determine whether the parameter\n data should be sent to the server as a <code>LONGNVARCHAR</code> or a <code>NCLOB</code>\n <P><B>Note:</B> Consult your JDBC driver documentation to determine if\n it might be more efficient to use a version of\n <code>setNClob</code> which takes a length parameter.</P></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>index of the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>reader</span> : Object {Reader}<div class='sub-desc'><p>An object that contains the data to set the parameter value to.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement;\n if the driver does not support national character sets;\n if the driver can detect that a data conversion\n  error could occur;  if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setNString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setNString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setNString' class='name expandable'>setNString</a>( <span class='pre'>parameterIndex, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated paramter to the given String object. ...</div><div class='long'><p>Sets the designated paramter to the given <code>String</code> object.\n The driver converts this to a SQL <code>NCHAR</code> or\n <code>NVARCHAR</code> or <code>LONGNVARCHAR</code> value\n (depending on the argument's\n size relative to the driver's limits on <code>NVARCHAR</code> values)\n when it sends it to the database.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>of the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>the parameter value</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if the driver does not support national\n         character sets;  if the driver can detect that a data conversion\n  error could occur; if a database access error occurs; or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setNull' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setNull' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setNull' class='name expandable'>setNull</a>( <span class='pre'>parameterIndex, sqlType, typeName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to SQL NULL. ...</div><div class='long'><p>Sets the designated parameter to SQL <code>NULL</code>.\n This version of the method <code>setNull</code> should\n be used for user-defined types and REF type parameters.  Examples\n of user-defined types include: STRUCT, DISTINCT, JAVA_OBJECT, and\n named array types.</p>\n\n<p> <P><B>Note:</B> To be portable, applications must give the\n SQL type code and the fully-qualified SQL type name when specifying\n a NULL user-defined or REF parameter.  In the case of a user-defined type\n the name is the type name of the parameter itself.  For a REF\n parameter, the name is the type name of the referenced type.  If\n a JDBC driver does not need the type code or type name information,\n it may ignore it.</P></p>\n\n<p> Although it is intended for user-defined and Ref parameters,\n this method may be used to set a null parameter of any JDBC type.\n If the parameter does not have a user-defined or REF type, the given\n typeName is ignored.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>sqlType</span> : Number<div class='sub-desc'><p>a value from <code><a href=\"#!/api/java.sql.Types\" rel=\"java.sql.Types\" class=\"docClass\">java.sql.Types</a></code></p>\n</div></li><li><span class='pre'>typeName</span> : String<div class='sub-desc'><p>the fully-qualified name of an SQL user-defined type;\n  ignored if the parameter is not a user-defined type or REF\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code>\n@exception SQLFeatureNotSupportedException if <code>sqlType</code> is\n a <code>ARRAY</code>, <code>BLOB</code>, <code>CLOB</code>,\n <code>DATALINK</code>, <code>JAVA_OBJECT</code>, <code>NCHAR</code>,\n <code>NCLOB</code>, <code>NVARCHAR</code>, <code>LONGNVARCHAR</code>,\n  <code>REF</code>, <code>ROWID</code>, <code>SQLXML</code>\n or  <code>STRUCT</code> data type and the JDBC driver does not support\n this data type or if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setObject' class='name expandable'>setObject</a>( <span class='pre'>parameterIndex, x, targetSqlType, scaleOrLength</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of the designated parameter with the given object. ...</div><div class='long'><p><p>Sets the value of the designated parameter with the given object. The second\n argument must be an object type; for integral values, the\n <code>java.lang</code> equivalent objects should be used.</p>\n\n<p> If the second argument is an <code>InputStream</code> then the stream must contain\n the number of bytes specified by scaleOrLength.  If the second argument is a\n <code>Reader</code> then the reader must contain the number of characters specified\n by scaleOrLength. If these conditions are not true the driver will generate a\n <code>SQLException</code> when the prepared statement is executed.</p>\n\n<p> <p>The given Java object will be converted to the given targetSqlType\n before being sent to the database.</p>\n\n<p> If the object has a custom mapping (is of a class implementing the\n interface <code>SQLData</code>),\n the JDBC driver should call the method <code>SQLData.writeSQL</code> to\n write it to the SQL data stream.\n If, on the other hand, the object is of a class implementing\n <code>Ref</code>, <code>Blob</code>, <code>Clob</code>,  <code>NClob</code>,\n  <code>Struct</code>, <code>java.net.URL</code>,\n or <code>Array</code>, the driver should pass it to the database as a\n value of the corresponding SQL type.</p>\n\n<p> <p>Note that this method may be used to pass database-specific\n abstract data types.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {Object}<div class='sub-desc'><p>the object containing the input parameter value</p>\n</div></li><li><span class='pre'>targetSqlType</span> : Number<div class='sub-desc'><p>the SQL type (as defined in <a href=\"#!/api/java.sql.Types\" rel=\"java.sql.Types\" class=\"docClass\">java.sql.Types</a>) to be\n sent to the database. The scale argument may further qualify this type.</p>\n</div></li><li><span class='pre'>scaleOrLength</span> : Number<div class='sub-desc'><p>for <code><a href=\"#!/api/java.sql.Types-property-DECIMAL\" rel=\"java.sql.Types-property-DECIMAL\" class=\"docClass\">java.sql.Types.DECIMAL</a></code>\n          or <code><a href=\"#!/api/java.sql.Types-property-NUMERIC\" rel=\"java.sql.Types-property-NUMERIC\" class=\"docClass\">java.sql.Types.NUMERIC</a> types</code>,\n          this is the number of digits after the decimal point. For\n          Java Object types <code>InputStream</code> and <code>Reader</code>,\n          this is the length\n          of the data in the stream or reader.  For all other types,\n          this value will be ignored.\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs;\n this method is called on a closed <code>PreparedStatement</code> or\n            if the Java Object specified by x is an InputStream\n            or Reader object and the value of the scale parameter is less\n            than zero\n@exception SQLFeatureNotSupportedException if <code>targetSqlType</code> is\n a <code>ARRAY</code>, <code>BLOB</code>, <code>CLOB</code>,\n <code>DATALINK</code>, <code>JAVA_OBJECT</code>, <code>NCHAR</code>,\n <code>NCLOB</code>, <code>NVARCHAR</code>, <code>LONGNVARCHAR</code>,\n  <code>REF</code>, <code>ROWID</code>, <code>SQLXML</code>\n or  <code>STRUCT</code> data type and the JDBC driver does not support\n this data type\n@see Types</p>\n</div></li></ul></div></div></div><div id='method-setRef' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setRef' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setRef' class='name expandable'>setRef</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given\n  REF(&lt;structured-type&gt;) value. ...</div><div class='long'><p>Sets the designated parameter to the given\n  <code>REF(&lt;structured-type&gt;)</code> value.\n The driver converts this to an SQL <code>REF</code> value when it\n sends it to the database.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {Ref}<div class='sub-desc'><p>an SQL <code>REF</code> value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setRowId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setRowId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setRowId' class='name expandable'>setRowId</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.sql.RowId object. ...</div><div class='long'><p>Sets the designated parameter to the given <code><a href=\"#!/api/java.sql.RowId\" rel=\"java.sql.RowId\" class=\"docClass\">java.sql.RowId</a></code> object. The\n driver converts this to a SQL <code>ROWID</code> value when it sends it\n to the database</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {RowId}<div class='sub-desc'><p>the parameter value</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setSQLXML' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setSQLXML' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setSQLXML' class='name expandable'>setSQLXML</a>( <span class='pre'>parameterIndex, xmlObject</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.sql.SQLXML object. ...</div><div class='long'><p>Sets the designated parameter to the given <code><a href=\"#!/api/java.sql.SQLXML\" rel=\"java.sql.SQLXML\" class=\"docClass\">java.sql.SQLXML</a></code> object.\n The driver converts this to an\n SQL <code>XML</code> value when it sends it to the database.\n <p></p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>index of the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>xmlObject</span> : Object {SQLXML}<div class='sub-desc'><p>a <code>SQLXML</code> object that maps an SQL <code>XML</code> value</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs;\n  this method is called on a closed <code>PreparedStatement</code>\n or the <code>java.xml.transform.Result</code>,\n  <code>Writer</code> or <code>OutputStream</code> has not been closed for\n the <code>SQLXML</code> object</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setShort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setShort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setShort' class='name expandable'>setShort</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java short value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>short</code> value.\n The driver converts this\n to an SQL <code>SMALLINT</code> value when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setString' class='name expandable'>setString</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given Java String value. ...</div><div class='long'><p>Sets the designated parameter to the given Java <code>String</code> value.\n The driver converts this\n to an SQL <code>VARCHAR</code> or <code>LONGVARCHAR</code> value\n (depending on the argument's\n size relative to the driver's limits on <code>VARCHAR</code> values)\n when it sends it to the database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : String<div class='sub-desc'><p>the parameter value\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setTime' class='name expandable'>setTime</a>( <span class='pre'>parameterIndex, x, cal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.sql.Time value,\n using the given Calendar object. ...</div><div class='long'><p>Sets the designated parameter to the given <code><a href=\"#!/api/java.sql.Time\" rel=\"java.sql.Time\" class=\"docClass\">java.sql.Time</a></code> value,\n using the given <code>Calendar</code> object.  The driver uses\n the <code>Calendar</code> object to construct an SQL <code>TIME</code> value,\n which the driver then sends to the database.  With\n a <code>Calendar</code> object, the driver can calculate the time\n taking into account a custom timezone.  If no\n <code>Calendar</code> object is specified, the driver uses the default\n timezone, which is that of the virtual machine running the application.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {Time}<div class='sub-desc'><p>the parameter value</p>\n</div></li><li><span class='pre'>cal</span> : Object {Calendar}<div class='sub-desc'><p>the <code>Calendar</code> object the driver will use\n            to construct the time\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setTimestamp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setTimestamp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setTimestamp' class='name expandable'>setTimestamp</a>( <span class='pre'>parameterIndex, x, cal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.sql.Timestamp value,\n using the given Calendar object. ...</div><div class='long'><p>Sets the designated parameter to the given <code><a href=\"#!/api/java.sql.Timestamp\" rel=\"java.sql.Timestamp\" class=\"docClass\">java.sql.Timestamp</a></code> value,\n using the given <code>Calendar</code> object.  The driver uses\n the <code>Calendar</code> object to construct an SQL <code>TIMESTAMP</code> value,\n which the driver then sends to the database.  With a\n  <code>Calendar</code> object, the driver can calculate the timestamp\n taking into account a custom timezone.  If no\n <code>Calendar</code> object is specified, the driver uses the default\n timezone, which is that of the virtual machine running the application.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {Timestamp}<div class='sub-desc'><p>the parameter value</p>\n</div></li><li><span class='pre'>cal</span> : Object {Calendar}<div class='sub-desc'><p>the <code>Calendar</code> object the driver will use\n            to construct the timestamp\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul></div></div></div><div id='method-setURL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setURL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setURL' class='name expandable'>setURL</a>( <span class='pre'>parameterIndex, x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the designated parameter to the given java.net.URL value. ...</div><div class='long'><p>Sets the designated parameter to the given <code>java.net.URL</code> value.\n The driver converts this to an SQL <code>DATALINK</code> value\n when it sends it to the database.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {URL}<div class='sub-desc'><p>the <code>java.net.URL</code> object to be set\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLFeatureNotSupportedException  if the JDBC driver does not support this method</p>\n</div></li></ul></div></div></div><div id='method-setUnicodeStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.PreparedStatement'>java.sql.PreparedStatement</span><br/><a href='source/PreparedStatement.html#java-sql-PreparedStatement-method-setUnicodeStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.PreparedStatement-method-setUnicodeStream' class='name expandable'>setUnicodeStream</a>( <span class='pre'>parameterIndex, x, length</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the designated parameter to the given input stream, which\n will have the specified number of bytes. ...</div><div class='long'><p>Sets the designated parameter to the given input stream, which\n will have the specified number of bytes.</p>\n\n<p> When a very large Unicode value is input to a <code>LONGVARCHAR</code>\n parameter, it may be more practical to send it via a\n <code>java.io.InputStream</code> object. The data will be read from the\n stream as needed until end-of-file is reached.  The JDBC driver will\n do any necessary conversion from Unicode to the database char format.</p>\n\n<p>The byte format of the Unicode stream must be a Java UTF-8, as defined in the\nJava Virtual Machine Specification.</p>\n\n<p> <P><B>Note:</B> This stream object can either be a standard\n Java stream object or your own subclass that implements the\n standard interface.</P></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use setCharacterStream</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameterIndex</span> : Number<div class='sub-desc'><p>the first parameter is 1, the second is 2, ...</p>\n</div></li><li><span class='pre'>x</span> : Object {InputStream}<div class='sub-desc'><p>a <code>java.io.InputStream</code> object that contains the\n        Unicode parameter value</p>\n</div></li><li><span class='pre'>length</span> : Number<div class='sub-desc'><p>the number of bytes in the stream\n@exception SQLException if parameterIndex does not correspond to a parameter\n marker in the SQL statement; if a database access error occurs or\n this method is called on a closed <code>PreparedStatement</code>\n@exception SQLFeatureNotSupportedException if the JDBC driver does not support\n this method</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});