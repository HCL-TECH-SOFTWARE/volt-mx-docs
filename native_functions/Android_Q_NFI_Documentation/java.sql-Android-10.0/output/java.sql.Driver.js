Ext.data.JsonP.java_sql_Driver({"tagname":"class","name":"java.sql.Driver","autodetected":{},"files":[{"filename":"Driver.js","href":"Driver.html#java-sql-Driver"}],"members":[{"name":"acceptsURL","tagname":"method","owner":"java.sql.Driver","id":"method-acceptsURL","meta":{}},{"name":"connect","tagname":"method","owner":"java.sql.Driver","id":"method-connect","meta":{}},{"name":"getMajorVersion","tagname":"method","owner":"java.sql.Driver","id":"method-getMajorVersion","meta":{}},{"name":"getMinorVersion","tagname":"method","owner":"java.sql.Driver","id":"method-getMinorVersion","meta":{}},{"name":"getPropertyInfo","tagname":"method","owner":"java.sql.Driver","id":"method-getPropertyInfo","meta":{}},{"name":"jdbcCompliant","tagname":"method","owner":"java.sql.Driver","id":"method-jdbcCompliant","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.sql.Driver","short_doc":"The interface that every driver class must implement. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Driver.html#java-sql-Driver' target='_blank'>Driver.js</a></div></pre><div class='doc-contents'><p>The interface that every driver class must implement.\n <P>The Java SQL framework allows for multiple database drivers.</P></p>\n\n<p> <P>Each driver should supply a class that implements\n the Driver interface.</P></p>\n\n<p> <P>The DriverManager will try to load as many drivers as it can\n find and then for any given connection request, it will ask each\n driver in turn to try to connect to the target URL.</P></p>\n\n<p> <P>It is strongly recommended that each Driver class should be\n small and standalone so that the Driver class can be loaded and\n queried without bringing in vast quantities of supporting code.</P></p>\n\n<p> <P>When a Driver class is loaded, it should create an instance of\n itself and register it with the DriverManager. This means that a\n user can load and register a driver by calling</P></p>\n\n<pre>   <code>Class.forName(\"foo.bah.Driver\")</code>\n </pre>\n\n\n<p> @see DriverManager\n @see Connection</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acceptsURL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.Driver'>java.sql.Driver</span><br/><a href='source/Driver.html#java-sql-Driver-method-acceptsURL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.Driver-method-acceptsURL' class='name expandable'>acceptsURL</a>( <span class='pre'>url</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves whether the driver thinks that it can open a connection\n to the given URL. ...</div><div class='long'><p>Retrieves whether the driver thinks that it can open a connection\n to the given URL.  Typically drivers will return <code>true</code> if they\n understand the subprotocol specified in the URL and <code>false</code> if\n they do not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>the URL of the database</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if this driver understands the given URL;\n         <code>false</code> otherwise\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div><div id='method-connect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.Driver'>java.sql.Driver</span><br/><a href='source/Driver.html#java-sql-Driver-method-connect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.Driver-method-connect' class='name expandable'>connect</a>( <span class='pre'>url, info</span> ) : Object {java.sql.Connection}<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to make a database connection to the given URL. ...</div><div class='long'><p>Attempts to make a database connection to the given URL.\n The driver should return \"null\" if it realizes it is the wrong kind\n of driver to connect to the given URL.  This will be common, as when\n the JDBC driver manager is asked to connect to a given URL it passes\n the URL to each loaded driver in turn.</p>\n\n<p> <P>The driver should throw an <code>SQLException</code> if it is the right\n driver to connect to the given URL but has trouble connecting to\n the database.</P></p>\n\n<p> <P>The <code>java.util.Properties</code> argument can be used to pass\n arbitrary string tag/value pairs as connection arguments.\n Normally at least \"user\" and \"password\" properties should be\n included in the <code>Properties</code> object.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>the URL of the database to which to connect</p>\n</div></li><li><span class='pre'>info</span> : Object {Properties}<div class='sub-desc'><p>a list of arbitrary string tag/value pairs as\n connection arguments. Normally at least a \"user\" and\n \"password\" property should be included.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.Connection}</span><div class='sub-desc'><p>a <code>Connection</code> object that represents a\n         connection to the URL\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div><div id='method-getMajorVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.Driver'>java.sql.Driver</span><br/><a href='source/Driver.html#java-sql-Driver-method-getMajorVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.Driver-method-getMajorVersion' class='name expandable'>getMajorVersion</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the driver's major version number. ...</div><div class='long'><p>Retrieves the driver's major version number. Initially this should be 1.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>this driver's major version number</p>\n</div></li></ul></div></div></div><div id='method-getMinorVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.Driver'>java.sql.Driver</span><br/><a href='source/Driver.html#java-sql-Driver-method-getMinorVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.Driver-method-getMinorVersion' class='name expandable'>getMinorVersion</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the driver's minor version number. ...</div><div class='long'><p>Gets the driver's minor version number. Initially this should be 0.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>this driver's minor version number</p>\n</div></li></ul></div></div></div><div id='method-getPropertyInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.Driver'>java.sql.Driver</span><br/><a href='source/Driver.html#java-sql-Driver-method-getPropertyInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.Driver-method-getPropertyInfo' class='name expandable'>getPropertyInfo</a>( <span class='pre'>url, info</span> ) : Object {java.sql.DriverPropertyInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets information about the possible properties for this driver. ...</div><div class='long'><p>Gets information about the possible properties for this driver.\n <P>\n The <code>getPropertyInfo</code> method is intended to allow a generic\n GUI tool to discover what properties it should prompt\n a human for in order to get\n enough information to connect to a database.  Note that depending on\n the values the human has supplied so far, additional values may become\n necessary, so it may be necessary to iterate though several calls\n to the <code>getPropertyInfo</code> method.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>the URL of the database to which to connect</p>\n</div></li><li><span class='pre'>info</span> : Object {Properties}<div class='sub-desc'><p>a proposed list of tag/value pairs that will be sent on\n          connect open</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.DriverPropertyInfo}</span><div class='sub-desc'><p>an array of <code>DriverPropertyInfo</code> objects describing\n          possible properties.  This array may be an empty array if\n          no properties are required.\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div><div id='method-jdbcCompliant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.Driver'>java.sql.Driver</span><br/><a href='source/Driver.html#java-sql-Driver-method-jdbcCompliant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.Driver-method-jdbcCompliant' class='name expandable'>jdbcCompliant</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Reports whether this driver is a genuine JDBC\n CompliantTM driver. ...</div><div class='long'><p>Reports whether this driver is a genuine JDBC\n Compliant<sup><font size=-2>TM</font></sup> driver.\n A driver may only report <code>true</code> here if it passes the JDBC\n compliance tests; otherwise it is required to return <code>false</code>.\n <P>\n JDBC compliance requires full support for the JDBC API and full support\n for SQL 92 Entry Level.  It is expected that JDBC compliant drivers will\n be available for all the major commercial databases.\n <P>\n This method is not intended to encourage the development of non-JDBC\n compliant drivers, but is a recognition of the fact that some vendors\n are interested in using the JDBC API and framework for lightweight\n databases that do not support full database functionality, or for\n special databases such as document information retrieval where a SQL\n implementation may not be feasible.</P></P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if this driver is JDBC Compliant; <code>false</code>\n         otherwise</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});