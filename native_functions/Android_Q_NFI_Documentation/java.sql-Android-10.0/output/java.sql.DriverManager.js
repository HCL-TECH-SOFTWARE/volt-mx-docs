Ext.data.JsonP.java_sql_DriverManager({"tagname":"class","name":"java.sql.DriverManager","autodetected":{},"files":[{"filename":"DriverManager.js","href":"DriverManager.html#java-sql-DriverManager"}],"extends":"java.lang.Object","members":[{"name":"deregisterDriver","tagname":"method","owner":"java.sql.DriverManager","id":"method-deregisterDriver","meta":{}},{"name":"getConnection","tagname":"method","owner":"java.sql.DriverManager","id":"method-getConnection","meta":{}},{"name":"getDriver","tagname":"method","owner":"java.sql.DriverManager","id":"method-getDriver","meta":{}},{"name":"getDrivers","tagname":"method","owner":"java.sql.DriverManager","id":"method-getDrivers","meta":{}},{"name":"getLogStream","tagname":"method","owner":"java.sql.DriverManager","id":"method-getLogStream","meta":{"deprecated":{"text":"<p>Use {@code getLogWriter} instead.\n@see <a href=\"#!/api/java.sql.DriverManager-method-setLogStream\" rel=\"java.sql.DriverManager-method-setLogStream\" class=\"docClass\">setLogStream</a></p>\n"}}},{"name":"getLogWriter","tagname":"method","owner":"java.sql.DriverManager","id":"method-getLogWriter","meta":{}},{"name":"getLoginTimeout","tagname":"method","owner":"java.sql.DriverManager","id":"method-getLoginTimeout","meta":{}},{"name":"println","tagname":"method","owner":"java.sql.DriverManager","id":"method-println","meta":{}},{"name":"registerDriver","tagname":"method","owner":"java.sql.DriverManager","id":"method-registerDriver","meta":{}},{"name":"setLogStream","tagname":"method","owner":"java.sql.DriverManager","id":"method-setLogStream","meta":{"deprecated":{"text":"<p>Use {@code setLogWriter} instead.</p>\n"}}},{"name":"setLogWriter","tagname":"method","owner":"java.sql.DriverManager","id":"method-setLogWriter","meta":{}},{"name":"setLoginTimeout","tagname":"method","owner":"java.sql.DriverManager","id":"method-setLoginTimeout","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.sql.DriverManager","short_doc":"The basic service for managing a set of JDBC drivers. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.sql.DriverManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DriverManager.html#java-sql-DriverManager' target='_blank'>DriverManager.js</a></div></pre><div class='doc-contents'><p><P>The basic service for managing a set of JDBC drivers.<br>\n <B>NOTE:</B> The {@code DataSource} interface, new in the\n JDBC 2.0 API, provides another way to connect to a data source.\n The use of a <code>DataSource</code> object is the preferred means of\n connecting to a data source.</P></p>\n\n<p> <P>As part of its initialization, the <code>DriverManager</code> class will\n attempt to load the driver classes referenced in the \"jdbc.drivers\"\n system property. This allows a user to customize the JDBC Drivers\n used by their applications. For example in your\n ~/.hotjava/properties file you might specify:</P></p>\n\n<p><pre> <CODE>jdbc.drivers=foo.bah.Driver:wombat.sql.Driver:bad.taste.ourDriver</CODE>\n </pre>\n<P> The <code>DriverManager</code> methods <code>getConnection</code> and\n <code>getDrivers</code> have been enhanced to support the Java Standard Edition\n <a href=\"https://docs.oracle.com/javase/8/docs/technotes/guides/jar/jar.html#Service%20Provider\">Service Provider</a> mechanism. JDBC 4.0 Drivers must\n include the file <code>META-INF/services/<a href=\"#!/api/java.sql.Driver\" rel=\"java.sql.Driver\" class=\"docClass\">java.sql.Driver</a></code>. This file contains the name of the JDBC drivers\n implementation of <code><a href=\"#!/api/java.sql.Driver\" rel=\"java.sql.Driver\" class=\"docClass\">java.sql.Driver</a></code>.  For example, to load the <code>my.sql.Driver</code> class,\n the <code>META-INF/services/<a href=\"#!/api/java.sql.Driver\" rel=\"java.sql.Driver\" class=\"docClass\">java.sql.Driver</a></code> file would contain the entry:</P></p>\n\n<p><pre> <code>my.sql.Driver</code>\n </pre></p>\n\n<p> <P>Applications no longer need to explictly load JDBC drivers using <code>Class.forName()</code>. Existing programs\n which currently load JDBC drivers using <code>Class.forName()</code> will continue to work without\n modification.</P></p>\n\n<p> <P>When the method <code>getConnection</code> is called,\n the <code>DriverManager</code> will attempt to\n locate a suitable driver from amongst those loaded at\n initialization and those loaded explicitly using the same classloader\n as the current applet or application.</P></p>\n\n<p> <P>\n Starting with the Java 2 SDK, Standard Edition, version 1.3, a\n logging stream can be set only if the proper\n permission has been granted.  Normally this will be done with\n the tool PolicyTool, which can be used to grant <code>permission\n <a href=\"#!/api/java.sql.SQLPermission\" rel=\"java.sql.SQLPermission\" class=\"docClass\">java.sql.SQLPermission</a> \"setLog\"</code>.\n @see Driver\n @see Connection</P></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-deregisterDriver' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-deregisterDriver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-deregisterDriver' class='name expandable'>deregisterDriver</a>( <span class='pre'>driver</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Drops a driver from the DriverManager's list. ...</div><div class='long'><p>Drops a driver from the <code>DriverManager</code>'s list.\n  Applets can only deregister drivers from their own classloaders.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>driver</span> : Object {Driver}<div class='sub-desc'><p>the JDBC Driver to drop\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div><div id='method-getConnection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-getConnection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-getConnection' class='name expandable'>getConnection</a>( <span class='pre'>url</span> ) : Object {java.sql.Connection}<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to establish a connection to the given database URL. ...</div><div class='long'><p>Attempts to establish a connection to the given database URL.\n The <code>DriverManager</code> attempts to select an appropriate driver from\n the set of registered JDBC drivers.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>a database url of the form\n  <code> jdbc:<em>subprotocol</em>:<em>subname</em></code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.Connection}</span><div class='sub-desc'><p>a connection to the URL\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div><div id='method-getDriver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-getDriver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-getDriver' class='name expandable'>getDriver</a>( <span class='pre'>url</span> ) : Object {java.sql.Driver}<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to locate a driver that understands the given URL. ...</div><div class='long'><p>Attempts to locate a driver that understands the given URL.\n The <code>DriverManager</code> attempts to select an appropriate driver from\n the set of registered JDBC drivers.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>a database URL of the form\n     <code>jdbc:<em>subprotocol</em>:<em>subname</em></code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.sql.Driver}</span><div class='sub-desc'><p>a <code>Driver</code> object representing a driver\n that can connect to the given URL\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div><div id='method-getDrivers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-getDrivers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-getDrivers' class='name expandable'>getDrivers</a>( <span class='pre'></span> ) : Object {java.util.Enumeration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves an Enumeration with all of the currently loaded JDBC drivers\n to which the current caller has access. ...</div><div class='long'><p>Retrieves an Enumeration with all of the currently loaded JDBC drivers\n to which the current caller has access.</p>\n\n<p> <P><B>Note:</B> The classname of a driver can be found using\n <CODE>d.getClass().getName()</CODE></P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Enumeration}</span><div class='sub-desc'><p>the list of JDBC Drivers loaded by the caller's class loader</p>\n</div></li></ul></div></div></div><div id='method-getLogStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-getLogStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-getLogStream' class='name expandable'>getLogStream</a>( <span class='pre'></span> ) : Object {java.io.PrintStream}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Retrieves the logging/tracing PrintStream that is used by the DriverManager\n and all drivers. ...</div><div class='long'><p>Retrieves the logging/tracing PrintStream that is used by the <code>DriverManager</code>\n and all drivers.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use {@code getLogWriter} instead.\n@see <a href=\"#!/api/java.sql.DriverManager-method-setLogStream\" rel=\"java.sql.DriverManager-method-setLogStream\" class=\"docClass\">setLogStream</a></p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.PrintStream}</span><div class='sub-desc'><p>the logging/tracing PrintStream; if disabled, is <code>null</code></p>\n</div></li></ul></div></div></div><div id='method-getLogWriter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-getLogWriter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-getLogWriter' class='name expandable'>getLogWriter</a>( <span class='pre'></span> ) : Object {java.io.PrintWriter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the log writer. ...</div><div class='long'><p>Retrieves the log writer.</p>\n\n<p> The <code>getLogWriter</code> and <code>setLogWriter</code>\n methods should be used instead\n of the <code>get/setlogStream</code> methods, which are deprecated.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.PrintWriter}</span><div class='sub-desc'><p>a <code>java.io.PrintWriter</code> object\n@see <a href=\"#!/api/java.sql.DriverManager-method-setLogWriter\" rel=\"java.sql.DriverManager-method-setLogWriter\" class=\"docClass\">setLogWriter</a></p>\n</div></li></ul></div></div></div><div id='method-getLoginTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-getLoginTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-getLoginTimeout' class='name expandable'>getLoginTimeout</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the maximum time in seconds that a driver can wait\n when attempting to log in to a database. ...</div><div class='long'><p>Gets the maximum time in seconds that a driver can wait\n when attempting to log in to a database.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the driver login time limit in seconds\n@see <a href=\"#!/api/java.sql.DriverManager-method-setLoginTimeout\" rel=\"java.sql.DriverManager-method-setLoginTimeout\" class=\"docClass\">setLoginTimeout</a></p>\n</div></li></ul></div></div></div><div id='method-println' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-println' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-println' class='name expandable'>println</a>( <span class='pre'>message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prints a message to the current JDBC log stream. ...</div><div class='long'><p>Prints a message to the current JDBC log stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : String<div class='sub-desc'><p>a log or tracing message</p>\n</div></li></ul></div></div></div><div id='method-registerDriver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-registerDriver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-registerDriver' class='name expandable'>registerDriver</a>( <span class='pre'>driver</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers the given driver with the DriverManager. ...</div><div class='long'><p>Registers the given driver with the <code>DriverManager</code>.\n A newly-loaded driver class should call\n the method <code>registerDriver</code> to make itself\n known to the <code>DriverManager</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>driver</span> : Object {Driver}<div class='sub-desc'><p>the new JDBC Driver that is to be registered with the\n               <code>DriverManager</code>\n@exception SQLException if a database access error occurs</p>\n</div></li></ul></div></div></div><div id='method-setLogStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-setLogStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-setLogStream' class='name expandable'>setLogStream</a>( <span class='pre'>out</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the logging/tracing PrintStream that is used\n by the DriverManager\n and all drivers. ...</div><div class='long'><p>Sets the logging/tracing PrintStream that is used\n by the <code>DriverManager</code>\n and all drivers.</p>\n\n<p><P>\n In the Java 2 SDK, Standard Edition, version 1.3 release, this method checks\n to see that there is an <code>SQLPermission</code> object before setting\n the logging stream.  If a <code>SecurityManager</code> exists and its\n <code>checkPermission</code> method denies setting the log writer, this\n method throws a <code>java.lang.SecurityException</code>.</P></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use {@code setLogWriter} instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>out</span> : Object {PrintStream}<div class='sub-desc'><p>the new logging/tracing PrintStream; to disable, set to <code>null</code></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and its\n    <code>checkPermission</code> method denies setting the log stream\n@see SecurityManager#checkPermission\n@see <a href=\"#!/api/java.sql.DriverManager-method-getLogStream\" rel=\"java.sql.DriverManager-method-getLogStream\" class=\"docClass\">getLogStream</a></p>\n</div></li></ul></div></div></div><div id='method-setLogWriter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-setLogWriter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-setLogWriter' class='name expandable'>setLogWriter</a>( <span class='pre'>out</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the logging/tracing PrintWriter object\n that is used by the DriverManager and all drivers. ...</div><div class='long'><p>Sets the logging/tracing <code>PrintWriter</code> object\n that is used by the <code>DriverManager</code> and all drivers.\n <P>\n There is a minor versioning problem created by the introduction\n of the method <code>setLogWriter</code>.  The\n method <code>setLogWriter</code> cannot create a <code>PrintStream</code> object\n that will be returned by <code>getLogStream</code>---the Java platform does\n not provide a backward conversion.  As a result, a new application\n that uses <code>setLogWriter</code> and also uses a JDBC 1.0 driver that uses\n <code>getLogStream</code> will likely not see debugging information written\n by that driver.</P></p>\n\n<p><P>\n Starting with the Java 2 SDK, Standard Edition, version 1.3 release, this method checks\n to see that there is an <code>SQLPermission</code> object before setting\n the logging stream.  If a <code>SecurityManager</code> exists and its\n <code>checkPermission</code> method denies setting the log writer, this\n method throws a <code>java.lang.SecurityException</code>.</P></p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>out</span> : Object {PrintWriter}<div class='sub-desc'><p>the new logging/tracing <code>PrintStream</code> object;\n      <code>null</code> to disable logging and tracing</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n    if a security manager exists and its\n    <code>checkPermission</code> method denies\n    setting the log writer\n@see SecurityManager#checkPermission\n@see <a href=\"#!/api/java.sql.DriverManager-method-getLogWriter\" rel=\"java.sql.DriverManager-method-getLogWriter\" class=\"docClass\">getLogWriter</a></p>\n</div></li></ul></div></div></div><div id='method-setLoginTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.sql.DriverManager'>java.sql.DriverManager</span><br/><a href='source/DriverManager.html#java-sql-DriverManager-method-setLoginTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.sql.DriverManager-method-setLoginTimeout' class='name expandable'>setLoginTimeout</a>( <span class='pre'>seconds</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the maximum time in seconds that a driver will wait\n while attempting to connect to a database. ...</div><div class='long'><p>Sets the maximum time in seconds that a driver will wait\n while attempting to connect to a database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seconds</span> : Number<div class='sub-desc'><p>the login time limit in seconds; zero means there is no limit\n@see <a href=\"#!/api/java.sql.DriverManager-method-getLoginTimeout\" rel=\"java.sql.DriverManager-method-getLoginTimeout\" class=\"docClass\">getLoginTimeout</a></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});