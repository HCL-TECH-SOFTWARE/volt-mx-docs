Ext.data.JsonP.com_android_server_wifi_WifiNative({"tagname":"class","name":"com.android.server.wifi.WifiNative","autodetected":{},"files":[{"filename":"WifiNative.js","href":"WifiNative.html#com-android-server-wifi-WifiNative"}],"extends":"java.lang.Object","members":[{"name":"BLUETOOTH_COEXISTENCE_MODE_DISABLED","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-BLUETOOTH_COEXISTENCE_MODE_DISABLED","meta":{}},{"name":"BLUETOOTH_COEXISTENCE_MODE_ENABLED","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-BLUETOOTH_COEXISTENCE_MODE_ENABLED","meta":{}},{"name":"BLUETOOTH_COEXISTENCE_MODE_SENSE","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-BLUETOOTH_COEXISTENCE_MODE_SENSE","meta":{}},{"name":"DISABLE_FIRMWARE_ROAMING","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-DISABLE_FIRMWARE_ROAMING","meta":{}},{"name":"EAP_SIM_NOT_SUBSCRIBED","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-EAP_SIM_NOT_SUBSCRIBED","meta":{}},{"name":"EAP_SIM_VENDOR_SPECIFIC_CERT_EXPIRED","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-EAP_SIM_VENDOR_SPECIFIC_CERT_EXPIRED","meta":{}},{"name":"ENABLE_FIRMWARE_ROAMING","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-ENABLE_FIRMWARE_ROAMING","meta":{}},{"name":"RX_FILTER_TYPE_V4_MULTICAST","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-RX_FILTER_TYPE_V4_MULTICAST","meta":{}},{"name":"RX_FILTER_TYPE_V6_MULTICAST","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-RX_FILTER_TYPE_V6_MULTICAST","meta":{}},{"name":"SCAN_TYPE_HIGH_ACCURACY","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SCAN_TYPE_HIGH_ACCURACY","meta":{}},{"name":"SCAN_TYPE_LOW_LATENCY","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SCAN_TYPE_LOW_LATENCY","meta":{}},{"name":"SCAN_TYPE_LOW_POWER","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SCAN_TYPE_LOW_POWER","meta":{}},{"name":"SEND_MGMT_FRAME_ERROR_ALREADY_STARTED","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SEND_MGMT_FRAME_ERROR_ALREADY_STARTED","meta":{}},{"name":"SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED","meta":{}},{"name":"SEND_MGMT_FRAME_ERROR_NO_ACK","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SEND_MGMT_FRAME_ERROR_NO_ACK","meta":{}},{"name":"SEND_MGMT_FRAME_ERROR_TIMEOUT","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SEND_MGMT_FRAME_ERROR_TIMEOUT","meta":{}},{"name":"SEND_MGMT_FRAME_ERROR_UNKNOWN","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SEND_MGMT_FRAME_ERROR_UNKNOWN","meta":{}},{"name":"SET_FIRMWARE_ROAMING_BUSY","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SET_FIRMWARE_ROAMING_BUSY","meta":{}},{"name":"SET_FIRMWARE_ROAMING_FAILURE","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SET_FIRMWARE_ROAMING_FAILURE","meta":{}},{"name":"SET_FIRMWARE_ROAMING_SUCCESS","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SET_FIRMWARE_ROAMING_SUCCESS","meta":{}},{"name":"SIM_AUTH_RESP_TYPE_GSM_AUTH","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SIM_AUTH_RESP_TYPE_GSM_AUTH","meta":{}},{"name":"SIM_AUTH_RESP_TYPE_UMTS_AUTH","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SIM_AUTH_RESP_TYPE_UMTS_AUTH","meta":{}},{"name":"SIM_AUTH_RESP_TYPE_UMTS_AUTS","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-SIM_AUTH_RESP_TYPE_UMTS_AUTS","meta":{}},{"name":"WIFI_SCAN_FAILED","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-WIFI_SCAN_FAILED","meta":{}},{"name":"WIFI_SCAN_RESULTS_AVAILABLE","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-WIFI_SCAN_RESULTS_AVAILABLE","meta":{}},{"name":"WIFI_SCAN_THRESHOLD_NUM_SCANS","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-WIFI_SCAN_THRESHOLD_NUM_SCANS","meta":{}},{"name":"WIFI_SCAN_THRESHOLD_PERCENT","tagname":"property","owner":"com.android.server.wifi.WifiNative","id":"property-WIFI_SCAN_THRESHOLD_PERCENT","meta":{}},{"name":"addDppPeerUri","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-addDppPeerUri","meta":{}},{"name":"cancelWps","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-cancelWps","meta":{}},{"name":"configureNeighborDiscoveryOffload","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-configureNeighborDiscoveryOffload","meta":{}},{"name":"configureRoaming","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-configureRoaming","meta":{}},{"name":"connectToNetwork","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-connectToNetwork","meta":{}},{"name":"disconnect","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-disconnect","meta":{}},{"name":"enableFirmwareRoaming","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-enableFirmwareRoaming","meta":{}},{"name":"enableStaAutoReconnect","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-enableStaAutoReconnect","meta":{}},{"name":"enableVerboseLogging","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-enableVerboseLogging","meta":{}},{"name":"flushRingBufferData","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-flushRingBufferData","meta":{}},{"name":"getApfCapabilities","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getApfCapabilities","meta":{}},{"name":"getBgScanCapabilities","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getBgScanCapabilities","meta":{}},{"name":"getBgScanResults","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getBgScanResults","meta":{}},{"name":"getChannelsForBand","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getChannelsForBand","meta":{}},{"name":"getClientInterfaceName","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getClientInterfaceName","meta":{}},{"name":"getCurrentNetworkWpsNfcConfigurationToken","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getCurrentNetworkWpsNfcConfigurationToken","meta":{}},{"name":"getDriverStateDump","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getDriverStateDump","meta":{}},{"name":"getDriverVersion","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getDriverVersion","meta":{}},{"name":"getEapAnonymousIdentity","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getEapAnonymousIdentity","meta":{}},{"name":"getFactoryMacAddress","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getFactoryMacAddress","meta":{}},{"name":"getFirmwareVersion","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getFirmwareVersion","meta":{}},{"name":"getFwMemoryDump","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getFwMemoryDump","meta":{}},{"name":"getMacAddress","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getMacAddress","meta":{}},{"name":"getPnoScanResults","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getPnoScanResults","meta":{}},{"name":"getRingBufferData","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getRingBufferData","meta":{}},{"name":"getRingBufferStatus","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getRingBufferStatus","meta":{}},{"name":"getRoamingCapabilities","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getRoamingCapabilities","meta":{}},{"name":"getRxPackets","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getRxPackets","meta":{}},{"name":"getRxPktFates","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getRxPktFates","meta":{}},{"name":"getScanResults","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getScanResults","meta":{}},{"name":"getSoftApInterfaceName","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getSoftApInterfaceName","meta":{}},{"name":"getSupportedFeatureSet","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getSupportedFeatureSet","meta":{}},{"name":"getSupportedLoggerFeatureSet","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getSupportedLoggerFeatureSet","meta":{}},{"name":"getTxPacketCounters","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getTxPacketCounters","meta":{}},{"name":"getTxPackets","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getTxPackets","meta":{}},{"name":"getTxPktFates","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getTxPktFates","meta":{}},{"name":"getWifiLinkLayerStats","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getWifiLinkLayerStats","meta":{}},{"name":"getWlanWakeReasonCount","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-getWlanWakeReasonCount","meta":{}},{"name":"initialize","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-initialize","meta":{}},{"name":"installPacketFilter","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-installPacketFilter","meta":{}},{"name":"isHalStarted","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-isHalStarted","meta":{}},{"name":"isInterfaceUp","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-isInterfaceUp","meta":{}},{"name":"migrateNetworksFromSupplicant","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-migrateNetworksFromSupplicant","meta":{}},{"name":"pauseBgScan","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-pauseBgScan","meta":{}},{"name":"probeLink","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-probeLink","meta":{}},{"name":"readKernelLog","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-readKernelLog","meta":{}},{"name":"readPacketFilter","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-readPacketFilter","meta":{}},{"name":"reassociate","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-reassociate","meta":{}},{"name":"reconnect","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-reconnect","meta":{}},{"name":"registerDppEventCallback","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-registerDppEventCallback","meta":{}},{"name":"registerStatusListener","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-registerStatusListener","meta":{}},{"name":"removeAllNetworks","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-removeAllNetworks","meta":{}},{"name":"removeDppUri","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-removeDppUri","meta":{}},{"name":"removeNetworkIfCurrent","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-removeNetworkIfCurrent","meta":{}},{"name":"requestAnqp","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-requestAnqp","meta":{}},{"name":"requestIcon","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-requestIcon","meta":{}},{"name":"resetLogHandler","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-resetLogHandler","meta":{}},{"name":"resetRoamingConfiguration","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-resetRoamingConfiguration","meta":{}},{"name":"restartBgScan","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-restartBgScan","meta":{}},{"name":"roamToNetwork","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-roamToNetwork","meta":{}},{"name":"scan","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-scan","meta":{}},{"name":"selectTxPowerScenario","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-selectTxPowerScenario","meta":{}},{"name":"sendMgmtFrame","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-sendMgmtFrame","meta":{}},{"name":"setBluetoothCoexistenceMode","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setBluetoothCoexistenceMode","meta":{}},{"name":"setBluetoothCoexistenceScanMode","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setBluetoothCoexistenceScanMode","meta":{}},{"name":"setConcurrencyPriority","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setConcurrencyPriority","meta":{}},{"name":"setConfigMethods","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setConfigMethods","meta":{}},{"name":"setConfiguredNetworkBSSID","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setConfiguredNetworkBSSID","meta":{}},{"name":"setCountryCode","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setCountryCode","meta":{}},{"name":"setCountryCodeHal","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setCountryCodeHal","meta":{}},{"name":"setDeviceName","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setDeviceName","meta":{}},{"name":"setDeviceType","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setDeviceType","meta":{}},{"name":"setExternalSim","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setExternalSim","meta":{}},{"name":"setLoggingEventHandler","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setLoggingEventHandler","meta":{}},{"name":"setLowLatencyMode","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setLowLatencyMode","meta":{}},{"name":"setMacAddress","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setMacAddress","meta":{}},{"name":"setManufacturer","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setManufacturer","meta":{}},{"name":"setModelName","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setModelName","meta":{}},{"name":"setModelNumber","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setModelNumber","meta":{}},{"name":"setPowerSave","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setPowerSave","meta":{}},{"name":"setScanningMacOui","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setScanningMacOui","meta":{}},{"name":"setSerialNumber","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setSerialNumber","meta":{}},{"name":"setSupplicantLogLevel","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setSupplicantLogLevel","meta":{}},{"name":"setSuspendOptimizations","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setSuspendOptimizations","meta":{}},{"name":"setupInterfaceForClientInConnectivityMode","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setupInterfaceForClientInConnectivityMode","meta":{}},{"name":"setupInterfaceForClientInScanMode","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setupInterfaceForClientInScanMode","meta":{}},{"name":"setupInterfaceForSoftApMode","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-setupInterfaceForSoftApMode","meta":{}},{"name":"signalPoll","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-signalPoll","meta":{}},{"name":"simAuthFailedResponse","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-simAuthFailedResponse","meta":{}},{"name":"simAuthResponse","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-simAuthResponse","meta":{}},{"name":"simIdentityResponse","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-simIdentityResponse","meta":{}},{"name":"startBgScan","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startBgScan","meta":{}},{"name":"startDppConfiguratorInitiator","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startDppConfiguratorInitiator","meta":{}},{"name":"startDppEnrolleeInitiator","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startDppEnrolleeInitiator","meta":{}},{"name":"startFilteringMulticastV4Packets","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startFilteringMulticastV4Packets","meta":{}},{"name":"startFilteringMulticastV6Packets","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startFilteringMulticastV6Packets","meta":{}},{"name":"startLoggingRingBuffer","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startLoggingRingBuffer","meta":{}},{"name":"startPktFateMonitoring","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startPktFateMonitoring","meta":{}},{"name":"startPnoScan","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startPnoScan","meta":{}},{"name":"startRssiMonitoring","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startRssiMonitoring","meta":{}},{"name":"startSendingOffloadedPacket","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startSendingOffloadedPacket","meta":{}},{"name":"startSoftAp","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startSoftAp","meta":{}},{"name":"startTdls","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startTdls","meta":{}},{"name":"startWpsPbc","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startWpsPbc","meta":{}},{"name":"startWpsPinDisplay","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startWpsPinDisplay","meta":{}},{"name":"startWpsPinKeypad","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startWpsPinKeypad","meta":{}},{"name":"startWpsRegistrar","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-startWpsRegistrar","meta":{}},{"name":"stopBgScan","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-stopBgScan","meta":{}},{"name":"stopDppInitiator","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-stopDppInitiator","meta":{}},{"name":"stopFilteringMulticastV4Packets","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-stopFilteringMulticastV4Packets","meta":{}},{"name":"stopFilteringMulticastV6Packets","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-stopFilteringMulticastV6Packets","meta":{}},{"name":"stopPnoScan","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-stopPnoScan","meta":{}},{"name":"stopRssiMonitoring","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-stopRssiMonitoring","meta":{}},{"name":"stopSendingOffloadedPacket","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-stopSendingOffloadedPacket","meta":{}},{"name":"teardownAllInterfaces","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-teardownAllInterfaces","meta":{}},{"name":"teardownInterface","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-teardownInterface","meta":{}},{"name":"umtsAuthFailedResponse","tagname":"method","owner":"com.android.server.wifi.WifiNative","id":"method-umtsAuthFailedResponse","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wifi.WifiNative","short_doc":"Native calls for bring up/shut down of the supplicant daemon and for\n sending requests to the supplicant daemon\n\n {@h...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.wifi.WifiNative</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WifiNative.html#com-android-server-wifi-WifiNative' target='_blank'>WifiNative.js</a></div></pre><div class='doc-contents'><p>Native calls for bring up/shut down of the supplicant daemon and for\n sending requests to the supplicant daemon</p>\n\n<p> {@hide}</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-BLUETOOTH_COEXISTENCE_MODE_DISABLED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_DISABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_DISABLED' class='name expandable'>BLUETOOTH_COEXISTENCE_MODE_DISABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-BLUETOOTH_COEXISTENCE_MODE_ENABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_ENABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_ENABLED' class='name expandable'>BLUETOOTH_COEXISTENCE_MODE_ENABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-BLUETOOTH_COEXISTENCE_MODE_SENSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_SENSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_SENSE' class='name expandable'>BLUETOOTH_COEXISTENCE_MODE_SENSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-DISABLE_FIRMWARE_ROAMING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-DISABLE_FIRMWARE_ROAMING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-DISABLE_FIRMWARE_ROAMING' class='name expandable'>DISABLE_FIRMWARE_ROAMING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Macros for controlling firmware roaming. ...</div><div class='long'><p>Macros for controlling firmware roaming.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-EAP_SIM_NOT_SUBSCRIBED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-EAP_SIM_NOT_SUBSCRIBED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-EAP_SIM_NOT_SUBSCRIBED' class='name expandable'>EAP_SIM_NOT_SUBSCRIBED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>EAP-SIM Error Codes ...</div><div class='long'><p>EAP-SIM Error Codes</p>\n<p>Defaults to: <code>&quot;1031&quot;</code></p></div></div></div><div id='property-EAP_SIM_VENDOR_SPECIFIC_CERT_EXPIRED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-EAP_SIM_VENDOR_SPECIFIC_CERT_EXPIRED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-EAP_SIM_VENDOR_SPECIFIC_CERT_EXPIRED' class='name expandable'>EAP_SIM_VENDOR_SPECIFIC_CERT_EXPIRED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;16385&quot;</code></p></div></div></div><div id='property-ENABLE_FIRMWARE_ROAMING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-ENABLE_FIRMWARE_ROAMING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-ENABLE_FIRMWARE_ROAMING' class='name expandable'>ENABLE_FIRMWARE_ROAMING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-RX_FILTER_TYPE_V4_MULTICAST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-RX_FILTER_TYPE_V4_MULTICAST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-RX_FILTER_TYPE_V4_MULTICAST' class='name expandable'>RX_FILTER_TYPE_V4_MULTICAST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-RX_FILTER_TYPE_V6_MULTICAST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-RX_FILTER_TYPE_V6_MULTICAST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-RX_FILTER_TYPE_V6_MULTICAST' class='name expandable'>RX_FILTER_TYPE_V6_MULTICAST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SCAN_TYPE_HIGH_ACCURACY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SCAN_TYPE_HIGH_ACCURACY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SCAN_TYPE_HIGH_ACCURACY' class='name expandable'>SCAN_TYPE_HIGH_ACCURACY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SCAN_TYPE_LOW_LATENCY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SCAN_TYPE_LOW_LATENCY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SCAN_TYPE_LOW_LATENCY' class='name expandable'>SCAN_TYPE_LOW_LATENCY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-SCAN_TYPE_LOW_POWER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SCAN_TYPE_LOW_POWER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SCAN_TYPE_LOW_POWER' class='name expandable'>SCAN_TYPE_LOW_POWER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SEND_MGMT_FRAME_ERROR_ALREADY_STARTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SEND_MGMT_FRAME_ERROR_ALREADY_STARTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_ALREADY_STARTED' class='name expandable'>SEND_MGMT_FRAME_ERROR_ALREADY_STARTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An existing call to\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmtFrame()\nis in prog...</div><div class='long'><p>An existing call to\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmtFrame()\nis in progress. Another frame cannot be sent until the first call completes.</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED' class='name expandable'>SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifying the MCS rate in\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmtFrame() is ...</div><div class='long'><p>Specifying the MCS rate in\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmtFrame() is not\nsupported by this device.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SEND_MGMT_FRAME_ERROR_NO_ACK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SEND_MGMT_FRAME_ERROR_NO_ACK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_NO_ACK' class='name expandable'>SEND_MGMT_FRAME_ERROR_NO_ACK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Driver reported that no ACK was received for the frame transmitted using\nbyte[], com.android.server.wifi.WifiNative.S...</div><div class='long'><p>Driver reported that no ACK was received for the frame transmitted using\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmtFrame().</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-SEND_MGMT_FRAME_ERROR_TIMEOUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SEND_MGMT_FRAME_ERROR_TIMEOUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_TIMEOUT' class='name expandable'>SEND_MGMT_FRAME_ERROR_TIMEOUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Error code for when the driver fails to report on the status of the frame sent by\nbyte[], com.android.server.wifi.Wif...</div><div class='long'><p>Error code for when the driver fails to report on the status of the frame sent by\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmtFrame()\nafter <a href=\"#!/api/com.android.server.wifi.WificondControl-property-SEND_MGMT_FRAME_TIMEOUT_MS\" rel=\"com.android.server.wifi.WificondControl-property-SEND_MGMT_FRAME_TIMEOUT_MS\" class=\"docClass\">com.android.server.wifi.WificondControl.SEND_MGMT_FRAME_TIMEOUT_MS</a> milliseconds.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-SEND_MGMT_FRAME_ERROR_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SEND_MGMT_FRAME_ERROR_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_UNKNOWN' class='name expandable'>SEND_MGMT_FRAME_ERROR_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unknown error occurred during call to\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmt...</div><div class='long'><p>Unknown error occurred during call to\nbyte[], com.android.server.wifi.WifiNative.SendMgmtFrameCallback, int) sendMgmtFrame().</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SET_FIRMWARE_ROAMING_BUSY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SET_FIRMWARE_ROAMING_BUSY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SET_FIRMWARE_ROAMING_BUSY' class='name expandable'>SET_FIRMWARE_ROAMING_BUSY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates temporary failure for enableFirmwareRoaming - try again later ...</div><div class='long'><p>Indicates temporary failure for enableFirmwareRoaming - try again later</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SET_FIRMWARE_ROAMING_FAILURE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SET_FIRMWARE_ROAMING_FAILURE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SET_FIRMWARE_ROAMING_FAILURE' class='name expandable'>SET_FIRMWARE_ROAMING_FAILURE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates failure for enableFirmwareRoaming ...</div><div class='long'><p>Indicates failure for enableFirmwareRoaming</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SET_FIRMWARE_ROAMING_SUCCESS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SET_FIRMWARE_ROAMING_SUCCESS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SET_FIRMWARE_ROAMING_SUCCESS' class='name expandable'>SET_FIRMWARE_ROAMING_SUCCESS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates success for enableFirmwareRoaming ...</div><div class='long'><p>Indicates success for enableFirmwareRoaming</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-SIM_AUTH_RESP_TYPE_GSM_AUTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SIM_AUTH_RESP_TYPE_GSM_AUTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SIM_AUTH_RESP_TYPE_GSM_AUTH' class='name expandable'>SIM_AUTH_RESP_TYPE_GSM_AUTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Sim auth response types. ...</div><div class='long'><p>Sim auth response types.</p>\n<p>Defaults to: <code>&quot;GSM-AUTH&quot;</code></p></div></div></div><div id='property-SIM_AUTH_RESP_TYPE_UMTS_AUTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SIM_AUTH_RESP_TYPE_UMTS_AUTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SIM_AUTH_RESP_TYPE_UMTS_AUTH' class='name expandable'>SIM_AUTH_RESP_TYPE_UMTS_AUTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;UMTS-AUTH&quot;</code></p></div></div></div><div id='property-SIM_AUTH_RESP_TYPE_UMTS_AUTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-SIM_AUTH_RESP_TYPE_UMTS_AUTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-SIM_AUTH_RESP_TYPE_UMTS_AUTS' class='name expandable'>SIM_AUTH_RESP_TYPE_UMTS_AUTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;UMTS-AUTS&quot;</code></p></div></div></div><div id='property-WIFI_SCAN_FAILED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-WIFI_SCAN_FAILED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-WIFI_SCAN_FAILED' class='name expandable'>WIFI_SCAN_FAILED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-WIFI_SCAN_RESULTS_AVAILABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-WIFI_SCAN_RESULTS_AVAILABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-WIFI_SCAN_RESULTS_AVAILABLE' class='name expandable'>WIFI_SCAN_RESULTS_AVAILABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-WIFI_SCAN_THRESHOLD_NUM_SCANS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-WIFI_SCAN_THRESHOLD_NUM_SCANS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-WIFI_SCAN_THRESHOLD_NUM_SCANS' class='name expandable'>WIFI_SCAN_THRESHOLD_NUM_SCANS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-WIFI_SCAN_THRESHOLD_PERCENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-property-WIFI_SCAN_THRESHOLD_PERCENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-property-WIFI_SCAN_THRESHOLD_PERCENT' class='name expandable'>WIFI_SCAN_THRESHOLD_PERCENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addDppPeerUri' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-addDppPeerUri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-addDppPeerUri' class='name expandable'>addDppPeerUri</a>( <span class='pre'>ifaceName, uri</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a DPP peer URI to the URI list. ...</div><div class='long'><p>Adds a DPP peer URI to the URI list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Interface name</p>\n</div></li><li><span class='pre'>uri</span> : String<div class='sub-desc'><p>Bootstrap (URI) string (e.g. DPP:....)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>ID, or -1 for failure</p>\n</div></li></ul></div></div></div><div id='method-cancelWps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-cancelWps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-cancelWps' class='name expandable'>cancelWps</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancels any ongoing WPS requests. ...</div><div class='long'><p>Cancels any ongoing WPS requests.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-configureNeighborDiscoveryOffload' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-configureNeighborDiscoveryOffload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-configureNeighborDiscoveryOffload' class='name expandable'>configureNeighborDiscoveryOffload</a>( <span class='pre'>ifaceName, enabled</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable/Disable Neighbour discovery offload functionality in the firmware. ...</div><div class='long'><p>Enable/Disable Neighbour discovery offload functionality in the firmware.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true to enable, false to disable.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-configureRoaming' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-configureRoaming' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-configureRoaming' class='name expandable'>configureRoaming</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set firmware roaming configurations. ...</div><div class='long'><p>Set firmware roaming configurations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-connectToNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-connectToNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-connectToNetwork' class='name expandable'>connectToNetwork</a>( <span class='pre'>ifaceName, configuration</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Add the provided network configuration to wpa_supplicant and initiate connection to it. ...</div><div class='long'><p>Add the provided network configuration to wpa_supplicant and initiate connection to it.\n This method does the following:\n 1. Abort any ongoing scan to unblock the connection request.\n 2. Remove any existing network in wpa_supplicant(This implicitly triggers disconnect).\n 3. Add a new network to wpa_supplicant.\n 4. Save the provided configuration to wpa_supplicant.\n 5. Select the new network in wpa_supplicant.\n 6. Triggers reconnect command to wpa_supplicant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>configuration</span> : Object {WifiConfiguration}<div class='sub-desc'><p>WifiConfiguration parameters for the provided network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if it succeeds, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-disconnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-disconnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-disconnect' class='name expandable'>disconnect</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Trigger a disconnection from the currently connected network. ...</div><div class='long'><p>Trigger a disconnection from the currently connected network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-enableFirmwareRoaming' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-enableFirmwareRoaming' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-enableFirmwareRoaming' class='name expandable'>enableFirmwareRoaming</a>( <span class='pre'>ifaceName</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable/disable firmware roaming. ...</div><div class='long'><p>Enable/disable firmware roaming.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>SET_FIRMWARE_ROAMING_SUCCESS, SET_FIRMWARE_ROAMING_FAILURE,\n         or SET_FIRMWARE_ROAMING_BUSY</p>\n</div></li></ul></div></div></div><div id='method-enableStaAutoReconnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-enableStaAutoReconnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-enableStaAutoReconnect' class='name expandable'>enableStaAutoReconnect</a>( <span class='pre'>ifaceName, enable</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable/Disable auto reconnect functionality in wpa_supplicant. ...</div><div class='long'><p>Enable/Disable auto reconnect functionality in wpa_supplicant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>enable</span> : Boolean<div class='sub-desc'><p>true to enable auto reconnecting, false to disable.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-enableVerboseLogging' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-enableVerboseLogging' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-enableVerboseLogging' class='name expandable'>enableVerboseLogging</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable verbose logging for all sub modules. ...</div><div class='long'><p>Enable verbose logging for all sub modules.</p>\n</div></div></div><div id='method-flushRingBufferData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-flushRingBufferData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-flushRingBufferData' class='name expandable'>flushRingBufferData</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Request hal to flush ring buffers to files ...</div><div class='long'><p>Request hal to flush ring buffers to files</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getApfCapabilities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getApfCapabilities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getApfCapabilities' class='name expandable'>getApfCapabilities</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the APF (Android Packet Filter) capabilities of the device ...</div><div class='long'><p>Get the APF (Android Packet Filter) capabilities of the device</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-getBgScanCapabilities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getBgScanCapabilities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getBgScanCapabilities' class='name expandable'>getBgScanCapabilities</a>( <span class='pre'>ifaceName, capabilities</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the scan capabilities ...</div><div class='long'><p>Gets the scan capabilities</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>capabilities</span> : Object {WifiNative.ScanCapabilities}<div class='sub-desc'><p>object to be filled in</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success. false for failure</p>\n</div></li></ul></div></div></div><div id='method-getBgScanResults' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getBgScanResults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getBgScanResults' class='name expandable'>getBgScanResults</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the latest scan results received. ...</div><div class='long'><p>Gets the latest scan results received.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-getChannelsForBand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getChannelsForBand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getChannelsForBand' class='name expandable'>getChannelsForBand</a>( <span class='pre'>band</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Query the list of valid frequencies for the provided band. ...</div><div class='long'><p>Query the list of valid frequencies for the provided band.\n The result depends on the on the country code that has been set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>band</span> : Number<div class='sub-desc'><p>as specified by one of the WifiScanner.WIFI_BAND_* constants.\n The following bands are supported:\n WifiScanner.WIFI_BAND_24_GHZ\n WifiScanner.WIFI_BAND_5_GHZ\n WifiScanner.WIFI_BAND_5_GHZ_DFS_ONLY</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>frequencies vector of valid frequencies (MHz), or null for error.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if band is not recognized.</p>\n</div></li></ul></div></div></div><div id='method-getClientInterfaceName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getClientInterfaceName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getClientInterfaceName' class='name expandable'>getClientInterfaceName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get name of the client interface. ...</div><div class='long'><p>Get name of the client interface.</p>\n\n<p> This is mainly used by external modules that needs to perform some\n client operations on the STA interface.</p>\n\n<p> TODO(b/70932231): This may need to be reworked once we start supporting STA + STA.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Interface name of any active client interface, null if no active client interface\n exist.\n Return Values for the different scenarios are listed below:\n a) When there are no client interfaces, returns null.\n b) when there is 1 client interface, returns the name of that interface.\n c) When there are 2 or more client interface, returns the name of any client interface.</p>\n</div></li></ul></div></div></div><div id='method-getCurrentNetworkWpsNfcConfigurationToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getCurrentNetworkWpsNfcConfigurationToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getCurrentNetworkWpsNfcConfigurationToken' class='name expandable'>getCurrentNetworkWpsNfcConfigurationToken</a>( <span class='pre'>ifaceName</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the currently configured network's WPS NFC token. ...</div><div class='long'><p>Get the currently configured network's WPS NFC token.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Hex string corresponding to the WPS NFC token.</p>\n</div></li></ul></div></div></div><div id='method-getDriverStateDump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getDriverStateDump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getDriverStateDump' class='name expandable'>getDriverStateDump</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Request vendor debug info from the driver ...</div><div class='long'><p>Request vendor debug info from the driver</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Raw data obtained from the HAL.</p>\n</div></li></ul></div></div></div><div id='method-getDriverVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getDriverVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getDriverVersion' class='name expandable'>getDriverVersion</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Vendor-provided wifi driver version string ...</div><div class='long'><p>Vendor-provided wifi driver version string</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>String returned from the HAL.</p>\n</div></li></ul></div></div></div><div id='method-getEapAnonymousIdentity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getEapAnonymousIdentity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getEapAnonymousIdentity' class='name expandable'>getEapAnonymousIdentity</a>( <span class='pre'>ifaceName</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This get anonymous identity from supplicant and returns it as a string. ...</div><div class='long'><p>This get anonymous identity from supplicant and returns it as a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>anonymous identity string if succeeds, null otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getFactoryMacAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getFactoryMacAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getFactoryMacAddress' class='name expandable'>getFactoryMacAddress</a>( <span class='pre'>interfaceName</span> ) : Object {android.net.MacAddress}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the factory MAC address of the given interface ...</div><div class='long'><p>Get the factory MAC address of the given interface</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interfaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.MacAddress}</span><div class='sub-desc'><p>factory MAC address, or null on a failed call or if feature is unavailable.</p>\n</div></li></ul></div></div></div><div id='method-getFirmwareVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getFirmwareVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getFirmwareVersion' class='name expandable'>getFirmwareVersion</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Vendor-provided wifi firmware version string ...</div><div class='long'><p>Vendor-provided wifi firmware version string</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>String returned from the HAL.</p>\n</div></li></ul></div></div></div><div id='method-getFwMemoryDump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getFwMemoryDump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getFwMemoryDump' class='name expandable'>getFwMemoryDump</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Request vendor debug info from the firmware ...</div><div class='long'><p>Request vendor debug info from the firmware</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Raw data obtained from the HAL.</p>\n</div></li></ul></div></div></div><div id='method-getMacAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getMacAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getMacAddress' class='name expandable'>getMacAddress</a>( <span class='pre'>ifaceName</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Makes a callback to HIDL to getMacAddress from supplicant ...</div><div class='long'><p>Makes a callback to HIDL to getMacAddress from supplicant</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>string containing the MAC address, or null on a failed call</p>\n</div></li></ul></div></div></div><div id='method-getPnoScanResults' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getPnoScanResults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getPnoScanResults' class='name expandable'>getPnoScanResults</a>( <span class='pre'>ifaceName</span> ) : Object {java.util.ArrayList}<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetch the latest scan result from kernel via wificond. ...</div><div class='long'><p>Fetch the latest scan result from kernel via wificond.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.ArrayList}</span><div class='sub-desc'><p>Returns an ArrayList of ScanDetail.\n Returns an empty ArrayList on failure.</p>\n</div></li></ul></div></div></div><div id='method-getRingBufferData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getRingBufferData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getRingBufferData' class='name expandable'>getRingBufferData</a>( <span class='pre'>ringName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates to driver that all the data has to be uploaded urgently ...</div><div class='long'><p>Indicates to driver that all the data has to be uploaded urgently</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ringName</span> : String<div class='sub-desc'><p>Name of the ring buffer requested.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getRingBufferStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getRingBufferStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getRingBufferStatus' class='name expandable'>getRingBufferStatus</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>API to get the status of all ring buffers supported by driver ...</div><div class='long'><p>API to get the status of all ring buffers supported by driver</p>\n</div></div></div><div id='method-getRoamingCapabilities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getRoamingCapabilities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getRoamingCapabilities' class='name expandable'>getRoamingCapabilities</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Query the firmware roaming capabilities. ...</div><div class='long'><p>Query the firmware roaming capabilities.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getRxPackets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getRxPackets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getRxPackets' class='name expandable'>getRxPackets</a>( <span class='pre'>ifaceName</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the rx packet counts for the interface. ...</div><div class='long'><p>Get the rx packet counts for the interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>rx packet counts</p>\n</div></li></ul></div></div></div><div id='method-getRxPktFates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getRxPktFates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getRxPktFates' class='name expandable'>getRxPktFates</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetch the most recent RX packet fates from the HAL. ...</div><div class='long'><p>Fetch the most recent RX packet fates from the HAL. Fails unless HAL is started.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-getScanResults' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getScanResults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getScanResults' class='name expandable'>getScanResults</a>( <span class='pre'>ifaceName</span> ) : Object {java.util.ArrayList}<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetch the latest scan result from kernel via wificond. ...</div><div class='long'><p>Fetch the latest scan result from kernel via wificond.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.ArrayList}</span><div class='sub-desc'><p>Returns an ArrayList of ScanDetail.\n Returns an empty ArrayList on failure.</p>\n</div></li></ul></div></div></div><div id='method-getSoftApInterfaceName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getSoftApInterfaceName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getSoftApInterfaceName' class='name expandable'>getSoftApInterfaceName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get name of the softap interface. ...</div><div class='long'><p>Get name of the softap interface.</p>\n\n<p> This is mainly used by external modules that needs to perform some\n operations on the AP interface.</p>\n\n<p> TODO(b/70932231): This may need to be reworked once we start supporting AP + AP.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Interface name of any active softap interface, null if no active softap interface\n exist.\n Return Values for the different scenarios are listed below:\n a) When there are no softap interfaces, returns null.\n b) when there is 1 softap interface, returns the name of that interface.\n c) When there are 2 or more softap interface, returns the name of any softap interface.</p>\n</div></li></ul></div></div></div><div id='method-getSupportedFeatureSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getSupportedFeatureSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getSupportedFeatureSet' class='name expandable'>getSupportedFeatureSet</a>( <span class='pre'>ifaceName</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the supported features ...</div><div class='long'><p>Get the supported features</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>bitmask defined by WifiManager.WIFI_FEATURE_*</p>\n</div></li></ul></div></div></div><div id='method-getSupportedLoggerFeatureSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getSupportedLoggerFeatureSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getSupportedLoggerFeatureSet' class='name expandable'>getSupportedLoggerFeatureSet</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Logger features exposed. ...</div><div class='long'><p>Logger features exposed.\n This is a no-op now, will always return -1.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getTxPacketCounters' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getTxPacketCounters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getTxPacketCounters' class='name expandable'>getTxPacketCounters</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetch TX packet counters on current connection from wificond. ...</div><div class='long'><p>Fetch TX packet counters on current connection from wificond.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.\n Returns an TxPacketCounters object.\n Returns null on failure.</p>\n</div></li></ul></div></div></div><div id='method-getTxPackets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getTxPackets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getTxPackets' class='name expandable'>getTxPackets</a>( <span class='pre'>ifaceName</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the tx packet counts for the interface. ...</div><div class='long'><p>Get the tx packet counts for the interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>tx packet counts</p>\n</div></li></ul></div></div></div><div id='method-getTxPktFates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getTxPktFates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getTxPktFates' class='name expandable'>getTxPktFates</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetch the most recent TX packet fates from the HAL. ...</div><div class='long'><p>Fetch the most recent TX packet fates from the HAL. Fails unless HAL is started.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getWifiLinkLayerStats' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getWifiLinkLayerStats' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getWifiLinkLayerStats' class='name expandable'>getWifiLinkLayerStats</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the latest link layer stats ...</div><div class='long'><p>Gets the latest link layer stats</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-getWlanWakeReasonCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-getWlanWakeReasonCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-getWlanWakeReasonCount' class='name expandable'>getWlanWakeReasonCount</a>( <span class='pre'></span> ) : Object {com.android.server.wifi.WlanWakeReasonAndCounts}<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetch the host wakeup reasons stats from wlan driver. ...</div><div class='long'><p>Fetch the host wakeup reasons stats from wlan driver.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.server.wifi.WlanWakeReasonAndCounts}</span><div class='sub-desc'><p>the |WlanWakeReasonAndCounts| object retrieved from the wlan driver.</p>\n</div></li></ul></div></div></div><div id='method-initialize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-initialize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-initialize' class='name expandable'>initialize</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Initialize the native modules. ...</div><div class='long'><p>Initialize the native modules.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-installPacketFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-installPacketFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-installPacketFilter' class='name expandable'>installPacketFilter</a>( <span class='pre'>ifaceName, filter</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Installs an APF program on this iface, replacing any existing program. ...</div><div class='long'><p>Installs an APF program on this iface, replacing any existing program.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface</p>\n</div></li><li><span class='pre'>filter</span> : Object {byte[]}<div class='sub-desc'><p>is the android packet filter program</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success</p>\n</div></li></ul></div></div></div><div id='method-isHalStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-isHalStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-isHalStarted' class='name expandable'>isHalStarted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests whether the HAL is running or not ...</div><div class='long'><p>Tests whether the HAL is running or not</p>\n</div></div></div><div id='method-isInterfaceUp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-isInterfaceUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-isInterfaceUp' class='name expandable'>isInterfaceUp</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if the interface is up or down. ...</div><div class='long'><p>Check if the interface is up or down.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if iface is up, false if it's down or on error.</p>\n</div></li></ul></div></div></div><div id='method-migrateNetworksFromSupplicant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-migrateNetworksFromSupplicant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-migrateNetworksFromSupplicant' class='name expandable'>migrateNetworksFromSupplicant</a>( <span class='pre'>ifaceName, configs, networkExtras</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Migrate all the configured networks from wpa_supplicant. ...</div><div class='long'><p>Migrate all the configured networks from wpa_supplicant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>configs</span> : Object {java.util.Map}<div class='sub-desc'><p>Map of configuration key to configuration objects corresponding to all\n                      the networks.</p>\n</div></li><li><span class='pre'>networkExtras</span> : Object {android.util.SparseArray}<div class='sub-desc'><p>Map of extra configuration parameters stored in wpa_supplicant.conf</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Max priority of all the configs.</p>\n</div></li></ul></div></div></div><div id='method-pauseBgScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-pauseBgScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-pauseBgScan' class='name expandable'>pauseBgScan</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Pauses an ongoing backgound scan ...</div><div class='long'><p>Pauses an ongoing backgound scan</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-probeLink' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-probeLink' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-probeLink' class='name expandable'>probeLink</a>( <span class='pre'>ifaceName, receiverMac, callback, mcs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends a probe request to the AP and waits for a response in order to determine whether\n there is connectivity between...</div><div class='long'><p>Sends a probe request to the AP and waits for a response in order to determine whether\n there is connectivity between the device and AP.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>receiverMac</span> : Object {MacAddress}<div class='sub-desc'><p>the MAC address of the AP that the probe request will be sent to.</p>\n</div></li><li><span class='pre'>callback</span> : Object {WifiNative.SendMgmtFrameCallback}<div class='sub-desc'><p>callback triggered when the probe was ACKed by the AP, or when\n                an error occurs after the link probe was started.</p>\n</div></li><li><span class='pre'>mcs</span> : Number<div class='sub-desc'><p>The MCS index that this probe will be sent at. If mcs &lt; 0, the driver will select\n            the rate automatically. If the device does not support sending the frame at a\n            specified MCS rate, the transmission will be aborted and\n            SendMgmtFrameCallback.onFailure(int) will be called with reason\n            <a href=\"#!/api/com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED\" rel=\"com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED\" class=\"docClass\">SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED</a>.</p>\n</div></li></ul></div></div></div><div id='method-readKernelLog' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-readKernelLog' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-readKernelLog' class='name expandable'>readKernelLog</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetches the latest kernel logs. ...</div><div class='long'><p>Fetches the latest kernel logs.</p>\n</div></div></div><div id='method-readPacketFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-readPacketFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-readPacketFilter' class='name expandable'>readPacketFilter</a>( <span class='pre'>ifaceName</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads the APF program and data buffer for this iface. ...</div><div class='long'><p>Reads the APF program and data buffer for this iface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the buffer returned by the driver, or null in case of an error</p>\n</div></li></ul></div></div></div><div id='method-reassociate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-reassociate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-reassociate' class='name expandable'>reassociate</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Trigger a reassociation even if the iface is currently connected. ...</div><div class='long'><p>Trigger a reassociation even if the iface is currently connected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-reconnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-reconnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-reconnect' class='name expandable'>reconnect</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Trigger a reconnection if the iface is disconnected. ...</div><div class='long'><p>Trigger a reconnection if the iface is disconnected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-registerDppEventCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-registerDppEventCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-registerDppEventCallback' class='name expandable'>registerDppEventCallback</a>( <span class='pre'>dppEventCallback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers DPP event callbacks. ...</div><div class='long'><p>Registers DPP event callbacks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dppEventCallback</span> : Object {WifiNative.DppEventCallback}<div class='sub-desc'><p>Callback object.</p>\n</div></li></ul></div></div></div><div id='method-registerStatusListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-registerStatusListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-registerStatusListener' class='name expandable'>registerStatusListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a StatusListener to get notified about any status changes from the native daemons. ...</div><div class='long'><p>Register a StatusListener to get notified about any status changes from the native daemons.</p>\n\n<p> It is safe to re-register the same callback object - duplicates are detected and only a\n single copy kept.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {WifiNative.StatusListener}<div class='sub-desc'><p>StatusListener listener object.</p>\n</div></li></ul></div></div></div><div id='method-removeAllNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-removeAllNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-removeAllNetworks' class='name expandable'>removeAllNetworks</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove all the networks. ...</div><div class='long'><p>Remove all the networks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if it succeeds, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-removeDppUri' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-removeDppUri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-removeDppUri' class='name expandable'>removeDppUri</a>( <span class='pre'>ifaceName, bootstrapId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a DPP URI to the URI list given an ID. ...</div><div class='long'><p>Removes a DPP URI to the URI list given an ID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Interface name</p>\n</div></li><li><span class='pre'>bootstrapId</span> : Number<div class='sub-desc'><p>Bootstrap (URI) ID</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true when operation is successful, or false for failure</p>\n</div></li></ul></div></div></div><div id='method-removeNetworkIfCurrent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-removeNetworkIfCurrent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-removeNetworkIfCurrent' class='name expandable'>removeNetworkIfCurrent</a>( <span class='pre'>ifaceName, networkId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove the request |networkId| from supplicant if it's the current network,\n if the current configured network matche...</div><div class='long'><p>Remove the request |networkId| from supplicant if it's the current network,\n if the current configured network matches |networkId|.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network id of the network to be removed from supplicant.</p>\n</div></li></ul></div></div></div><div id='method-requestAnqp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-requestAnqp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-requestAnqp' class='name expandable'>requestAnqp</a>( <span class='pre'>ifaceName, bssid, anqpIds, hs20Subtypes</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Initiate ANQP query. ...</div><div class='long'><p>Initiate ANQP query.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>bssid</span> : String<div class='sub-desc'><p>BSSID of the AP to be queried</p>\n</div></li><li><span class='pre'>anqpIds</span> : Object {java.util.Set}<div class='sub-desc'><p>Set of anqp IDs.</p>\n</div></li><li><span class='pre'>hs20Subtypes</span> : Object {java.util.Set}<div class='sub-desc'><p>Set of HS20 subtypes.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-requestIcon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-requestIcon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-requestIcon' class='name expandable'>requestIcon</a>( <span class='pre'>ifaceName, bssid, fileName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Request a passpoint icon file |filename| from the specified AP |bssid|. ...</div><div class='long'><p>Request a passpoint icon file |filename| from the specified AP |bssid|.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>bssid</span> : String<div class='sub-desc'><p>BSSID of the AP</p>\n</div></li><li><span class='pre'>fileName</span> : String<div class='sub-desc'><p>name of the icon file</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-resetLogHandler' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-resetLogHandler' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-resetLogHandler' class='name expandable'>resetLogHandler</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops all logging and resets the logger callback. ...</div><div class='long'><p>Stops all logging and resets the logger callback.\n This stops both the alerts and ring buffer data collection.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-resetRoamingConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-resetRoamingConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-resetRoamingConfiguration' class='name expandable'>resetRoamingConfiguration</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reset firmware roaming configuration. ...</div><div class='long'><p>Reset firmware roaming configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-restartBgScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-restartBgScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-restartBgScan' class='name expandable'>restartBgScan</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restarts a paused scan ...</div><div class='long'><p>Restarts a paused scan</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-roamToNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-roamToNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-roamToNetwork' class='name expandable'>roamToNetwork</a>( <span class='pre'>ifaceName, configuration</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Initiates roaming to the already configured network in wpa_supplicant. ...</div><div class='long'><p>Initiates roaming to the already configured network in wpa_supplicant. If the network\n configuration provided does not match the already configured network, then this triggers\n a new connection attempt (instead of roam).\n 1. Abort any ongoing scan to unblock the roam request.\n 2. First check if we're attempting to connect to the same network as we currently have\n configured.\n 3. Set the new bssid for the network in wpa_supplicant.\n 4. Triggers reassociate command to wpa_supplicant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>configuration</span> : Object {WifiConfiguration}<div class='sub-desc'><p>WifiConfiguration parameters for the provided network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if it succeeds, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-scan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-scan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-scan' class='name expandable'>scan</a>( <span class='pre'>ifaceName, scanType, freqs, hiddenNetworkSSIDs</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start a scan using wificond for the given parameters. ...</div><div class='long'><p>Start a scan using wificond for the given parameters.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>scanType</span> : Number<div class='sub-desc'><p>Type of scan to perform. One of ScanSettings.SCAN_TYPE_LOW_LATENCY,\n ScanSettings.SCAN_TYPE_LOW_POWER or ScanSettings.SCAN_TYPE_HIGH_ACCURACY.</p>\n</div></li><li><span class='pre'>freqs</span> : Object {java.util.Set}<div class='sub-desc'><p>list of frequencies to scan for, if null scan all supported channels.</p>\n</div></li><li><span class='pre'>hiddenNetworkSSIDs</span> : Object {java.util.List}<div class='sub-desc'><p>List of hidden networks to be scanned for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true on success.</p>\n</div></li></ul></div></div></div><div id='method-selectTxPowerScenario' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-selectTxPowerScenario' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-selectTxPowerScenario' class='name expandable'>selectTxPowerScenario</a>( <span class='pre'>sarInfo</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Select one of the pre-configured transmit power level scenarios or reset it back to normal. ...</div><div class='long'><p>Select one of the pre-configured transmit power level scenarios or reset it back to normal.\n Primarily used for meeting SAR requirements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sarInfo</span> : Object {SarInfo}<div class='sub-desc'><p>The collection of inputs used to select the SAR scenario.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success; false for failure or if the HAL version does not support this API.</p>\n</div></li></ul></div></div></div><div id='method-sendMgmtFrame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-sendMgmtFrame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-sendMgmtFrame' class='name expandable'>sendMgmtFrame</a>( <span class='pre'>ifaceName, frame, callback, mcs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends an arbitrary 802.11 management frame on the current channel. ...</div><div class='long'><p>Sends an arbitrary 802.11 management frame on the current channel.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>frame</span> : Object {byte[]}<div class='sub-desc'><p>Bytes of the 802.11 management frame to be sent, including the header, but not\n              including the frame check sequence (FCS).</p>\n</div></li><li><span class='pre'>callback</span> : Object {WifiNative.SendMgmtFrameCallback}<div class='sub-desc'><p>A callback triggered when the transmitted frame is ACKed or the transmission\n                 fails.</p>\n</div></li><li><span class='pre'>mcs</span> : Number<div class='sub-desc'><p>The MCS index that the frame will be sent at. If mcs &lt; 0, the driver will select\n            the rate automatically. If the device does not support sending the frame at a\n            specified MCS rate, the transmission will be aborted and\n            SendMgmtFrameCallback.onFailure(int) will be called with reason\n            <a href=\"#!/api/com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED\" rel=\"com.android.server.wifi.WifiNative-property-SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED\" class=\"docClass\">SEND_MGMT_FRAME_ERROR_MCS_UNSUPPORTED</a>.</p>\n</div></li></ul></div></div></div><div id='method-setBluetoothCoexistenceMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setBluetoothCoexistenceMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setBluetoothCoexistenceMode' class='name expandable'>setBluetoothCoexistenceMode</a>( <span class='pre'>ifaceName, mode</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the bluetooth coexistence mode. ...</div><div class='long'><p>Sets the bluetooth coexistence mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>One of <a href=\"#!/api/com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_DISABLED\" rel=\"com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_DISABLED\" class=\"docClass\">BLUETOOTH_COEXISTENCE_MODE_DISABLED</a>,\n            <a href=\"#!/api/com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_ENABLED\" rel=\"com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_ENABLED\" class=\"docClass\">BLUETOOTH_COEXISTENCE_MODE_ENABLED</a>, or\n            <a href=\"#!/api/com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_SENSE\" rel=\"com.android.server.wifi.WifiNative-property-BLUETOOTH_COEXISTENCE_MODE_SENSE\" class=\"docClass\">BLUETOOTH_COEXISTENCE_MODE_SENSE</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the mode was successfully set.</p>\n</div></li></ul></div></div></div><div id='method-setBluetoothCoexistenceScanMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setBluetoothCoexistenceScanMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setBluetoothCoexistenceScanMode' class='name expandable'>setBluetoothCoexistenceScanMode</a>( <span class='pre'>ifaceName, setCoexScanMode</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable or disable Bluetooth coexistence scan mode. ...</div><div class='long'><p>Enable or disable Bluetooth coexistence scan mode. When this mode is on,\n some of the low-level scan parameters used by the driver are changed to\n reduce interference with A2DP streaming.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>setCoexScanMode</span> : Boolean<div class='sub-desc'><p>whether to enable or disable this mode</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the command succeeded, {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setConcurrencyPriority' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setConcurrencyPriority' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setConcurrencyPriority' class='name expandable'>setConcurrencyPriority</a>( <span class='pre'>isStaHigherPriority</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set concurrency priority between P2P &amp; STA operations. ...</div><div class='long'><p>Set concurrency priority between P2P &amp; STA operations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isStaHigherPriority</span> : Boolean<div class='sub-desc'><p>Set to true to prefer STA over P2P during concurrency operations,\n                            false otherwise.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setConfigMethods' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setConfigMethods' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setConfigMethods' class='name expandable'>setConfigMethods</a>( <span class='pre'>cfg</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set WPS config methods ...</div><div class='long'><p>Set WPS config methods</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cfg</span> : String<div class='sub-desc'><p>List of config methods.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setConfiguredNetworkBSSID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setConfiguredNetworkBSSID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setConfiguredNetworkBSSID' class='name expandable'>setConfiguredNetworkBSSID</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the BSSID for the currently configured network in wpa_supplicant. ...</div><div class='long'><p>Set the BSSID for the currently configured network in wpa_supplicant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if successful, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setCountryCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setCountryCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setCountryCode' class='name expandable'>setCountryCode</a>( <span class='pre'>ifaceName, countryCode</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set country code. ...</div><div class='long'><p>Set country code.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>countryCode</span> : String<div class='sub-desc'><p>2 byte ASCII string. For ex: US, CA.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setCountryCodeHal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setCountryCodeHal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setCountryCodeHal' class='name expandable'>setCountryCodeHal</a>( <span class='pre'>ifaceName, countryCode</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set country code for this AP iface. ...</div><div class='long'><p>Set country code for this AP iface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>countryCode</span> : String<div class='sub-desc'><ul>\n<li>two-letter country code (as ISO 3166)</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success</p>\n</div></li></ul></div></div></div><div id='method-setDeviceName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setDeviceName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setDeviceName' class='name expandable'>setDeviceName</a>( <span class='pre'>ifaceName, name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set WPS device name. ...</div><div class='long'><p>Set WPS device name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>String to be set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setDeviceType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setDeviceType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setDeviceType' class='name expandable'>setDeviceType</a>( <span class='pre'>ifaceName, type</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set WPS device type. ...</div><div class='long'><p>Set WPS device type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>type</span> : String<div class='sub-desc'><p>Type specified as a string. Used format: <categ>-<OUI>-<subcateg></subcateg></OUI></categ></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setExternalSim' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setExternalSim' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setExternalSim' class='name expandable'>setExternalSim</a>( <span class='pre'>ifaceName, external</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether to use external sim for SIM/USIM processing. ...</div><div class='long'><p>Sets whether to use external sim for SIM/USIM processing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>external</span> : Boolean<div class='sub-desc'><p>true to enable, false otherwise.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setLoggingEventHandler' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setLoggingEventHandler' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setLoggingEventHandler' class='name expandable'>setLoggingEventHandler</a>( <span class='pre'>handler</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers the logger callback and enables alerts. ...</div><div class='long'><p>Registers the logger callback and enables alerts.\n Ring buffer data collection is only triggered when |startLoggingRingBuffer| is invoked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>handler</span> : Object {WifiNative.WifiLoggerEventHandler}<div class='sub-desc'><p>Callback to be invoked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setLowLatencyMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setLowLatencyMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setLowLatencyMode' class='name expandable'>setLowLatencyMode</a>( <span class='pre'>enabled</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable or disable low latency mode. ...</div><div class='long'><p>Enable or disable low latency mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true to enable, false to disable.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false on failure</p>\n</div></li></ul></div></div></div><div id='method-setMacAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setMacAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setMacAddress' class='name expandable'>setMacAddress</a>( <span class='pre'>interfaceName, mac</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set MAC address of the given interface ...</div><div class='long'><p>Set MAC address of the given interface</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interfaceName</span> : String<div class='sub-desc'><p>Name of the interface</p>\n</div></li><li><span class='pre'>mac</span> : Object {MacAddress}<div class='sub-desc'><p>Mac address to change into</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success</p>\n</div></li></ul></div></div></div><div id='method-setManufacturer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setManufacturer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setManufacturer' class='name expandable'>setManufacturer</a>( <span class='pre'>ifaceName, value</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set WPS manufacturer. ...</div><div class='long'><p>Set WPS manufacturer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>String to be set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setModelName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setModelName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setModelName' class='name expandable'>setModelName</a>( <span class='pre'>ifaceName, value</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set WPS model name. ...</div><div class='long'><p>Set WPS model name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>String to be set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setModelNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setModelNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setModelNumber' class='name expandable'>setModelNumber</a>( <span class='pre'>ifaceName, value</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set WPS model number. ...</div><div class='long'><p>Set WPS model number.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>String to be set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setPowerSave' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setPowerSave' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setPowerSave' class='name expandable'>setPowerSave</a>( <span class='pre'>ifaceName, enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable or disable power save mode. ...</div><div class='long'><p>Enable or disable power save mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true to enable, false to disable.</p>\n</div></li></ul></div></div></div><div id='method-setScanningMacOui' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setScanningMacOui' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setScanningMacOui' class='name expandable'>setScanningMacOui</a>( <span class='pre'>ifaceName, oui</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the MAC OUI during scanning. ...</div><div class='long'><p>Set the MAC OUI during scanning.\n An OUI {Organizationally Unique Identifier} is a 24-bit number that\n uniquely identifies a vendor or manufacturer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>oui</span> : Object {byte[]}<div class='sub-desc'><p>OUI to set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success</p>\n</div></li></ul></div></div></div><div id='method-setSerialNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setSerialNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setSerialNumber' class='name expandable'>setSerialNumber</a>( <span class='pre'>ifaceName, value</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set WPS serial number. ...</div><div class='long'><p>Set WPS serial number.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>String to be set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setSupplicantLogLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setSupplicantLogLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setSupplicantLogLevel' class='name expandable'>setSupplicantLogLevel</a>( <span class='pre'>turnOnVerbose</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set supplicant log level ...</div><div class='long'><p>Set supplicant log level</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>turnOnVerbose</span> : Boolean<div class='sub-desc'><p>Whether to turn on verbose logging or not.</p>\n</div></li></ul></div></div></div><div id='method-setSuspendOptimizations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setSuspendOptimizations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setSuspendOptimizations' class='name expandable'>setSuspendOptimizations</a>( <span class='pre'>ifaceName, enabled</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable or disable suspend mode optimizations. ...</div><div class='long'><p>Enable or disable suspend mode optimizations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true to enable, false otherwise.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setupInterfaceForClientInConnectivityMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setupInterfaceForClientInConnectivityMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setupInterfaceForClientInConnectivityMode' class='name expandable'>setupInterfaceForClientInConnectivityMode</a>( <span class='pre'>interfaceCallback</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Setup an interface for client mode (for connectivity) operations. ...</div><div class='long'><p>Setup an interface for client mode (for connectivity) operations.</p>\n\n<p> This method configures an interface in STA mode in all the native daemons\n (wificond, wpa_supplicant &amp; vendor HAL).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interfaceCallback</span> : Object {WifiNative.InterfaceCallback}<div class='sub-desc'><p>Associated callback for notifying status changes for the iface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Returns the name of the allocated interface, will be null on failure.</p>\n</div></li></ul></div></div></div><div id='method-setupInterfaceForClientInScanMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setupInterfaceForClientInScanMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setupInterfaceForClientInScanMode' class='name expandable'>setupInterfaceForClientInScanMode</a>( <span class='pre'>interfaceCallback</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Setup an interface for client mode (for scan) operations. ...</div><div class='long'><p>Setup an interface for client mode (for scan) operations.</p>\n\n<p> This method configures an interface in STA mode in the native daemons\n (wificond, vendor HAL).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interfaceCallback</span> : Object {WifiNative.InterfaceCallback}<div class='sub-desc'><p>Associated callback for notifying status changes for the iface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Returns the name of the allocated interface, will be null on failure.</p>\n</div></li></ul></div></div></div><div id='method-setupInterfaceForSoftApMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-setupInterfaceForSoftApMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-setupInterfaceForSoftApMode' class='name expandable'>setupInterfaceForSoftApMode</a>( <span class='pre'>interfaceCallback</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Setup an interface for Soft AP mode operations. ...</div><div class='long'><p>Setup an interface for Soft AP mode operations.</p>\n\n<p> This method configures an interface in AP mode in all the native daemons\n (wificond, wpa_supplicant &amp; vendor HAL).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interfaceCallback</span> : Object {WifiNative.InterfaceCallback}<div class='sub-desc'><p>Associated callback for notifying status changes for the iface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Returns the name of the allocated interface, will be null on failure.</p>\n</div></li></ul></div></div></div><div id='method-signalPoll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-signalPoll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-signalPoll' class='name expandable'>signalPoll</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request signal polling to wificond. ...</div><div class='long'><p>Request signal polling to wificond.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.\n Returns an SignalPollResult object.\n Returns null on failure.</p>\n</div></li></ul></div></div></div><div id='method-simAuthFailedResponse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-simAuthFailedResponse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-simAuthFailedResponse' class='name expandable'>simAuthFailedResponse</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Send the eap sim gsm auth failure for the currently configured network. ...</div><div class='long'><p>Send the eap sim gsm auth failure for the currently configured network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succeeds, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-simAuthResponse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-simAuthResponse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-simAuthResponse' class='name expandable'>simAuthResponse</a>( <span class='pre'>ifaceName, type, response</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Send the sim auth response for the currently configured network. ...</div><div class='long'><p>Send the sim auth response for the currently configured network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>|GSM-AUTH|, |UMTS-AUTH| or |UMTS-AUTS|.</p>\n</div></li><li><span class='pre'>response</span> : String<div class='sub-desc'><p>Response params.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succeeds, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-simIdentityResponse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-simIdentityResponse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-simIdentityResponse' class='name expandable'>simIdentityResponse</a>( <span class='pre'>ifaceName, unencryptedResponse, encryptedResponse</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Send the eap identity response for the currently configured network. ...</div><div class='long'><p>Send the eap identity response for the currently configured network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>unencryptedResponse</span> : Number<div class='sub-desc'><p>String to send.</p>\n</div></li><li><span class='pre'>encryptedResponse</span> : String<div class='sub-desc'><p>String to send.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succeeds, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startBgScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startBgScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startBgScan' class='name expandable'>startBgScan</a>( <span class='pre'>ifaceName, settings, eventHandler</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts a background scan. ...</div><div class='long'><p>Starts a background scan.\n Any ongoing scan will be stopped first</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>settings</span> : Object {WifiNative.ScanSettings}<div class='sub-desc'><p>to control the scan</p>\n</div></li><li><span class='pre'>eventHandler</span> : Object {WifiNative.ScanEventHandler}<div class='sub-desc'><p>to call with the results</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success</p>\n</div></li></ul></div></div></div><div id='method-startDppConfiguratorInitiator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startDppConfiguratorInitiator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startDppConfiguratorInitiator' class='name expandable'>startDppConfiguratorInitiator</a>( <span class='pre'>ifaceName, peerBootstrapId, ownBootstrapId, ssid, password, psk, netRole, securityAkm</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts DPP Configurator-Initiator request ...</div><div class='long'><p>Starts DPP Configurator-Initiator request</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Interface name</p>\n</div></li><li><span class='pre'>peerBootstrapId</span> : Number<div class='sub-desc'><p>Peer's bootstrap (URI) ID</p>\n</div></li><li><span class='pre'>ownBootstrapId</span> : Number<div class='sub-desc'><p>Own bootstrap (URI) ID - Optional, 0 for none</p>\n</div></li><li><span class='pre'>ssid</span> : String<div class='sub-desc'><p>SSID of the selected network</p>\n</div></li><li><span class='pre'>password</span> : String<div class='sub-desc'><p>Password of the selected network, or</p>\n</div></li><li><span class='pre'>psk</span> : String<div class='sub-desc'><p>PSK of the selected network in hexadecimal representation</p>\n</div></li><li><span class='pre'>netRole</span> : Number<div class='sub-desc'><p>The network role of the enrollee (STA or AP)</p>\n</div></li><li><span class='pre'>securityAkm</span> : Number<div class='sub-desc'><p>Security AKM to use: PSK, SAE</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true when operation is successful, or false for failure</p>\n</div></li></ul></div></div></div><div id='method-startDppEnrolleeInitiator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startDppEnrolleeInitiator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startDppEnrolleeInitiator' class='name expandable'>startDppEnrolleeInitiator</a>( <span class='pre'>ifaceName, peerBootstrapId, ownBootstrapId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts DPP Enrollee-Initiator request ...</div><div class='long'><p>Starts DPP Enrollee-Initiator request</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Interface name</p>\n</div></li><li><span class='pre'>peerBootstrapId</span> : Number<div class='sub-desc'><p>Peer's bootstrap (URI) ID</p>\n</div></li><li><span class='pre'>ownBootstrapId</span> : Number<div class='sub-desc'><p>Own bootstrap (URI) ID - Optional, 0 for none</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true when operation is successful, or false for failure</p>\n</div></li></ul></div></div></div><div id='method-startFilteringMulticastV4Packets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startFilteringMulticastV4Packets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startFilteringMulticastV4Packets' class='name expandable'>startFilteringMulticastV4Packets</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start filtering out Multicast V4 packets ...</div><div class='long'><p>Start filtering out Multicast V4 packets</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded, {@code false} otherwise</p>\n\n<p> Multicast filtering rules work as follows:</p>\n\n<p> The driver can filter multicast (v4 and/or v6) and broadcast packets when in\n a power optimized mode (typically when screen goes off).</p>\n\n<p> In order to prevent the driver from filtering the multicast/broadcast packets, we have to\n add a DRIVER RXFILTER-ADD rule followed by DRIVER RXFILTER-START to make the rule effective</p>\n\n<p> DRIVER RXFILTER-ADD Num\n   where Num = 0 - Unicast, 1 - Broadcast, 2 - Mutil4 or 3 - Multi6</p>\n\n<p> and DRIVER RXFILTER-START\n In order to stop the usage of these rules, we do</p>\n\n<p> DRIVER RXFILTER-STOP\n DRIVER RXFILTER-REMOVE Num\n   where Num is as described for RXFILTER-ADD</p>\n\n<p> The  SETSUSPENDOPT driver command overrides the filtering rules</p>\n</div></li></ul></div></div></div><div id='method-startFilteringMulticastV6Packets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startFilteringMulticastV6Packets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startFilteringMulticastV6Packets' class='name expandable'>startFilteringMulticastV6Packets</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start filtering out Multicast V6 packets ...</div><div class='long'><p>Start filtering out Multicast V6 packets</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-startLoggingRingBuffer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startLoggingRingBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startLoggingRingBuffer' class='name expandable'>startLoggingRingBuffer</a>( <span class='pre'>verboseLevel, flags, maxInterval, minDataSize, ringName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Control debug data collection ...</div><div class='long'><p>Control debug data collection</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>verboseLevel</span> : Number<div class='sub-desc'><p>0 to 3, inclusive. 0 stops logging.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Ignored.</p>\n</div></li><li><span class='pre'>maxInterval</span> : Number<div class='sub-desc'><p>Maximum interval between reports; ignore if 0.</p>\n</div></li><li><span class='pre'>minDataSize</span> : Number<div class='sub-desc'><p>Minimum data size in buffer for report; ignore if 0.</p>\n</div></li><li><span class='pre'>ringName</span> : String<div class='sub-desc'><p>Name of the ring for which data collection is to start.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startPktFateMonitoring' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startPktFateMonitoring' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startPktFateMonitoring' class='name expandable'>startPktFateMonitoring</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask the HAL to enable packet fate monitoring. ...</div><div class='long'><p>Ask the HAL to enable packet fate monitoring. Fails unless HAL is started.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true for success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startPnoScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startPnoScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startPnoScan' class='name expandable'>startPnoScan</a>( <span class='pre'>ifaceName, pnoSettings</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start PNO scan. ...</div><div class='long'><p>Start PNO scan.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>pnoSettings</span> : Object {WifiNative.PnoSettings}<div class='sub-desc'><p>Pno scan configuration.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success.</p>\n</div></li></ul></div></div></div><div id='method-startRssiMonitoring' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startRssiMonitoring' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startRssiMonitoring' class='name expandable'>startRssiMonitoring</a>( <span class='pre'>ifaceName, maxRssi, minRssi, rssiEventHandler</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Start RSSI monitoring on the currently connected access point. ...</div><div class='long'><p>Start RSSI monitoring on the currently connected access point.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>maxRssi</span> : Number<div class='sub-desc'><p>Maximum RSSI threshold.</p>\n</div></li><li><span class='pre'>minRssi</span> : Number<div class='sub-desc'><p>Minimum RSSI threshold.</p>\n</div></li><li><span class='pre'>rssiEventHandler</span> : Object {WifiNative.WifiRssiEventHandler}<div class='sub-desc'><p>Called when RSSI goes above maxRssi or below minRssi</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>0 for success, -1 for failure</p>\n</div></li></ul></div></div></div><div id='method-startSendingOffloadedPacket' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startSendingOffloadedPacket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startSendingOffloadedPacket' class='name expandable'>startSendingOffloadedPacket</a>( <span class='pre'>ifaceName, slot, dstMac, packet, protocol, period</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Start sending the specified keep alive packets periodically. ...</div><div class='long'><p>Start sending the specified keep alive packets periodically.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>slot</span> : Number<div class='sub-desc'><p>Integer used to identify each request.</p>\n</div></li><li><span class='pre'>dstMac</span> : Object {byte[]}<div class='sub-desc'><p>Destination MAC Address</p>\n</div></li><li><span class='pre'>packet</span> : Object {byte[]}<div class='sub-desc'><p>Raw packet contents to send.</p>\n</div></li><li><span class='pre'>protocol</span> : Number<div class='sub-desc'><p>The ethernet protocol type</p>\n</div></li><li><span class='pre'>period</span> : Number<div class='sub-desc'><p>Period to use for sending these packets.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>0 for success, -1 for error</p>\n</div></li></ul></div></div></div><div id='method-startSoftAp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startSoftAp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startSoftAp' class='name expandable'>startSoftAp</a>( <span class='pre'>ifaceName, config, listener</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start Soft AP operation using the provided configuration. ...</div><div class='long'><p>Start Soft AP operation using the provided configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>config</span> : Object {WifiConfiguration}<div class='sub-desc'><p>Configuration to use for the soft ap created.</p>\n</div></li><li><span class='pre'>listener</span> : Object {WifiNative.SoftApListener}<div class='sub-desc'><p>Callback for AP events.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startTdls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startTdls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startTdls' class='name expandable'>startTdls</a>( <span class='pre'>ifaceName, macAddr, enable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Initiate TDLS discover and setup or teardown with the specified peer. ...</div><div class='long'><p>Initiate TDLS discover and setup or teardown with the specified peer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>macAddr</span> : String<div class='sub-desc'><p>MAC Address of the peer.</p>\n</div></li><li><span class='pre'>enable</span> : Boolean<div class='sub-desc'><p>true to start discovery and setup, false to teardown.</p>\n</div></li></ul></div></div></div><div id='method-startWpsPbc' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startWpsPbc' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startWpsPbc' class='name expandable'>startWpsPbc</a>( <span class='pre'>ifaceName, bssid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start WPS pin display operation with the specified peer. ...</div><div class='long'><p>Start WPS pin display operation with the specified peer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>bssid</span> : String<div class='sub-desc'><p>BSSID of the peer.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startWpsPinDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startWpsPinDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startWpsPinDisplay' class='name expandable'>startWpsPinDisplay</a>( <span class='pre'>ifaceName, bssid</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Start WPS pin display operation with the specified peer. ...</div><div class='long'><p>Start WPS pin display operation with the specified peer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>bssid</span> : String<div class='sub-desc'><p>BSSID of the peer.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>new pin generated on success, null otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startWpsPinKeypad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startWpsPinKeypad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startWpsPinKeypad' class='name expandable'>startWpsPinKeypad</a>( <span class='pre'>ifaceName, pin</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start WPS pin keypad operation with the specified pin. ...</div><div class='long'><p>Start WPS pin keypad operation with the specified pin.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>pin</span> : String<div class='sub-desc'><p>Pin to be used.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startWpsRegistrar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-startWpsRegistrar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-startWpsRegistrar' class='name expandable'>startWpsRegistrar</a>( <span class='pre'>ifaceName, bssid, pin</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start WPS pin registrar operation with the specified peer and pin. ...</div><div class='long'><p>Start WPS pin registrar operation with the specified peer and pin.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>bssid</span> : String<div class='sub-desc'><p>BSSID of the peer.</p>\n</div></li><li><span class='pre'>pin</span> : String<div class='sub-desc'><p>Pin to be used.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if request is sent successfully, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-stopBgScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-stopBgScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-stopBgScan' class='name expandable'>stopBgScan</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops any ongoing backgound scan ...</div><div class='long'><p>Stops any ongoing backgound scan</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-stopDppInitiator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-stopDppInitiator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-stopDppInitiator' class='name expandable'>stopDppInitiator</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops/aborts DPP Initiator request ...</div><div class='long'><p>Stops/aborts DPP Initiator request</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Interface name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true when operation is successful, or false for failure</p>\n</div></li></ul></div></div></div><div id='method-stopFilteringMulticastV4Packets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-stopFilteringMulticastV4Packets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-stopFilteringMulticastV4Packets' class='name expandable'>stopFilteringMulticastV4Packets</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop filtering out Multicast V4 packets. ...</div><div class='long'><p>Stop filtering out Multicast V4 packets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-stopFilteringMulticastV6Packets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-stopFilteringMulticastV6Packets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-stopFilteringMulticastV6Packets' class='name expandable'>stopFilteringMulticastV6Packets</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop filtering out Multicast V6 packets. ...</div><div class='long'><p>Stop filtering out Multicast V6 packets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-stopPnoScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-stopPnoScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-stopPnoScan' class='name expandable'>stopPnoScan</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop PNO scan. ...</div><div class='long'><p>Stop PNO scan.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success.</p>\n</div></li></ul></div></div></div><div id='method-stopRssiMonitoring' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-stopRssiMonitoring' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-stopRssiMonitoring' class='name expandable'>stopRssiMonitoring</a>( <span class='pre'>ifaceName</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop RSSI monitoring on the currently connected access point. ...</div><div class='long'><p>Stop RSSI monitoring on the currently connected access point.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>0 for success, -1 for failure</p>\n</div></li></ul></div></div></div><div id='method-stopSendingOffloadedPacket' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-stopSendingOffloadedPacket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-stopSendingOffloadedPacket' class='name expandable'>stopSendingOffloadedPacket</a>( <span class='pre'>ifaceName, slot</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop sending the specified keep alive packets. ...</div><div class='long'><p>Stop sending the specified keep alive packets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li><li><span class='pre'>slot</span> : Number<div class='sub-desc'><p>id - same as startSendingOffloadedPacket call.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>0 for success, -1 for error</p>\n</div></li></ul></div></div></div><div id='method-teardownAllInterfaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-teardownAllInterfaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-teardownAllInterfaces' class='name expandable'>teardownAllInterfaces</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Teardown all the active interfaces. ...</div><div class='long'><p>Teardown all the active interfaces.</p>\n\n<p> This method tears down the associated interfaces from all the native daemons\n (wificond, wpa_supplicant &amp; vendor HAL).\n Also, brings down the HAL, supplicant or hostapd as necessary.</p>\n</div></div></div><div id='method-teardownInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-teardownInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-teardownInterface' class='name expandable'>teardownInterface</a>( <span class='pre'>ifaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Teardown an interface in Client/AP mode. ...</div><div class='long'><p>Teardown an interface in Client/AP mode.</p>\n\n<p> This method tears down the associated interface from all the native daemons\n (wificond, wpa_supplicant &amp; vendor HAL).\n Also, brings down the HAL, supplicant or hostapd as necessary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul></div></div></div><div id='method-umtsAuthFailedResponse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiNative'>com.android.server.wifi.WifiNative</span><br/><a href='source/WifiNative.html#com-android-server-wifi-WifiNative-method-umtsAuthFailedResponse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiNative-method-umtsAuthFailedResponse' class='name expandable'>umtsAuthFailedResponse</a>( <span class='pre'>ifaceName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Send the eap sim umts auth failure for the currently configured network. ...</div><div class='long'><p>Send the eap sim umts auth failure for the currently configured network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ifaceName</span> : String<div class='sub-desc'><p>Name of the interface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succeeds, false otherwise.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});