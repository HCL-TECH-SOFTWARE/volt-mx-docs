Ext.data.JsonP.com_android_server_wifi_WifiCountryCode({"tagname":"class","name":"com.android.server.wifi.WifiCountryCode","autodetected":{},"files":[{"filename":"WifiCountryCode.js","href":"WifiCountryCode.html#com-android-server-wifi-WifiCountryCode"}],"extends":"java.lang.Object","members":[{"name":"airplaneModeEnabled","tagname":"method","owner":"com.android.server.wifi.WifiCountryCode","id":"method-airplaneModeEnabled","meta":{}},{"name":"dump","tagname":"method","owner":"com.android.server.wifi.WifiCountryCode","id":"method-dump","meta":{}},{"name":"enableVerboseLogging","tagname":"method","owner":"com.android.server.wifi.WifiCountryCode","id":"method-enableVerboseLogging","meta":{}},{"name":"getCountryCode","tagname":"method","owner":"com.android.server.wifi.WifiCountryCode","id":"method-getCountryCode","meta":{}},{"name":"getCountryCodeSentToDriver","tagname":"method","owner":"com.android.server.wifi.WifiCountryCode","id":"method-getCountryCodeSentToDriver","meta":{}},{"name":"setCountryCode","tagname":"method","owner":"com.android.server.wifi.WifiCountryCode","id":"method-setCountryCode","meta":{}},{"name":"setReadyForChange","tagname":"method","owner":"com.android.server.wifi.WifiCountryCode","id":"method-setReadyForChange","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wifi.WifiCountryCode","short_doc":"Provide functions for making changes to WiFi country code. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.wifi.WifiCountryCode</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode' target='_blank'>WifiCountryCode.js</a></div></pre><div class='doc-contents'><p>Provide functions for making changes to WiFi country code.\n This Country Code is from MCC or phone default setting. This class sends Country Code\n to driver through wpa_supplicant when ClientModeImpl marks current state as ready\n using setReadyForChange(true).</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-airplaneModeEnabled' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiCountryCode'>com.android.server.wifi.WifiCountryCode</span><br/><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode-method-airplaneModeEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiCountryCode-method-airplaneModeEnabled' class='name expandable'>airplaneModeEnabled</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when airplane mode is enabled. ...</div><div class='long'><p>This is called when airplane mode is enabled.\n In this case we should invalidate all other country code except the\n phone default one.</p>\n</div></div></div><div id='method-dump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiCountryCode'>com.android.server.wifi.WifiCountryCode</span><br/><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiCountryCode-method-dump' class='name expandable'>dump</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Method to dump the current state of this WifiCounrtyCode object. ...</div><div class='long'><p>Method to dump the current state of this WifiCounrtyCode object.</p>\n</div></div></div><div id='method-enableVerboseLogging' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiCountryCode'>com.android.server.wifi.WifiCountryCode</span><br/><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode-method-enableVerboseLogging' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiCountryCode-method-enableVerboseLogging' class='name expandable'>enableVerboseLogging</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable verbose logging for WifiCountryCode. ...</div><div class='long'><p>Enable verbose logging for WifiCountryCode.</p>\n</div></div></div><div id='method-getCountryCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiCountryCode'>com.android.server.wifi.WifiCountryCode</span><br/><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode-method-getCountryCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiCountryCode-method-getCountryCode' class='name expandable'>getCountryCode</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Method to return the currently reported Country Code from the SIM or phone default setting. ...</div><div class='long'><p>Method to return the currently reported Country Code from the SIM or phone default setting.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The currently reported Country Code from the SIM. If there is no Country Code\n reported from SIM, a phone default Country Code will be returned.\n Returns null when there is no Country Code available.</p>\n</div></li></ul></div></div></div><div id='method-getCountryCodeSentToDriver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiCountryCode'>com.android.server.wifi.WifiCountryCode</span><br/><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode-method-getCountryCodeSentToDriver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiCountryCode-method-getCountryCodeSentToDriver' class='name expandable'>getCountryCodeSentToDriver</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Method to get the Country Code that was sent to wpa_supplicant. ...</div><div class='long'><p>Method to get the Country Code that was sent to wpa_supplicant.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Returns the local copy of the Country Code that was sent to the driver upon\n setReadyForChange(true).\n If wpa_supplicant was never started, this may be null even if a SIM reported a valid\n country code.\n Returns null if no Country Code was sent to driver.</p>\n</div></li></ul></div></div></div><div id='method-setCountryCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiCountryCode'>com.android.server.wifi.WifiCountryCode</span><br/><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode-method-setCountryCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiCountryCode-method-setCountryCode' class='name expandable'>setCountryCode</a>( <span class='pre'>countryCode</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Handle country code change request. ...</div><div class='long'><p>Handle country code change request.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>countryCode</span> : String<div class='sub-desc'><p>The country code intended to set.\n This is supposed to be from Telephony service.\n otherwise we think it is from other applications.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if the country code passed in is acceptable.</p>\n</div></li></ul></div></div></div><div id='method-setReadyForChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiCountryCode'>com.android.server.wifi.WifiCountryCode</span><br/><a href='source/WifiCountryCode.html#com-android-server-wifi-WifiCountryCode-method-setReadyForChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiCountryCode-method-setReadyForChange' class='name expandable'>setReadyForChange</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the state to indicates if wpa_supplicant is ready to handle country code changing\n request or not. ...</div><div class='long'><p>Change the state to indicates if wpa_supplicant is ready to handle country code changing\n request or not.\n We call native code to request country code changes only when wpa_supplicant is\n started but not yet L2 connected.</p>\n</div></div></div></div></div></div></div>","meta":{}});