Ext.data.JsonP.com_android_server_wifi_WifiLockManager({"tagname":"class","name":"com.android.server.wifi.WifiLockManager","autodetected":{},"files":[{"filename":"WifiLockManager.js","href":"WifiLockManager.html#com-android-server-wifi-WifiLockManager"}],"extends":"java.lang.Object","members":[{"name":"acquireWifiLock","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-acquireWifiLock","meta":{}},{"name":"createMergedWorkSource","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-createMergedWorkSource","meta":{}},{"name":"forceHiPerfMode","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-forceHiPerfMode","meta":{}},{"name":"forceLowLatencyMode","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-forceLowLatencyMode","meta":{}},{"name":"getStrongestLockMode","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-getStrongestLockMode","meta":{}},{"name":"handleScreenStateChanged","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-handleScreenStateChanged","meta":{}},{"name":"releaseWifiLock","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-releaseWifiLock","meta":{}},{"name":"updateWifiClientConnected","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-updateWifiClientConnected","meta":{}},{"name":"updateWifiLockWorkSource","tagname":"method","owner":"com.android.server.wifi.WifiLockManager","id":"method-updateWifiLockWorkSource","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wifi.WifiLockManager","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.wifi.WifiLockManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager' target='_blank'>WifiLockManager.js</a></div></pre><div class='doc-contents'><p>WifiLockManager maintains the list of wake locks held by different applications.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acquireWifiLock' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-acquireWifiLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-acquireWifiLock' class='name expandable'>acquireWifiLock</a>( <span class='pre'>lockMode, tag, binder, ws</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Method allowing a calling app to acquire a Wifi WakeLock in the supplied mode. ...</div><div class='long'><p>Method allowing a calling app to acquire a Wifi WakeLock in the supplied mode.</p>\n\n<p> This method checks that the lock mode is a valid WifiLock mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lockMode</span> : Number<div class='sub-desc'><p>int representation of the Wifi WakeLock type.</p>\n</div></li><li><span class='pre'>tag</span> : String<div class='sub-desc'><p>String passed to WifiManager.WifiLock</p>\n</div></li><li><span class='pre'>binder</span> : Object {IBinder}<div class='sub-desc'><p>IBinder for the calling app</p>\n</div></li><li><span class='pre'>ws</span> : Object {WorkSource}<div class='sub-desc'><p>WorkSource of the calling app</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the lock was successfully acquired, false if the lockMode was invalid.</p>\n</div></li></ul></div></div></div><div id='method-createMergedWorkSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-createMergedWorkSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-createMergedWorkSource' class='name expandable'>createMergedWorkSource</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Method to create a WorkSource containing all active WifiLock WorkSources. ...</div><div class='long'><p>Method to create a WorkSource containing all active WifiLock WorkSources.</p>\n</div></div></div><div id='method-forceHiPerfMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-forceHiPerfMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-forceHiPerfMode' class='name expandable'>forceHiPerfMode</a>( <span class='pre'>isEnabled</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Method Used for shell command support ...</div><div class='long'><p>Method Used for shell command support</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isEnabled</span> : Boolean<div class='sub-desc'><p>True to force hi-perf mode, false to leave it up to acquired wifiLocks.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True for success, false for failure (failure turns forcing mode off)</p>\n</div></li></ul></div></div></div><div id='method-forceLowLatencyMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-forceLowLatencyMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-forceLowLatencyMode' class='name expandable'>forceLowLatencyMode</a>( <span class='pre'>isEnabled</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Method Used for shell command support ...</div><div class='long'><p>Method Used for shell command support</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isEnabled</span> : Boolean<div class='sub-desc'><p>True to force low-latency mode, false to leave it up to acquired wifiLocks.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True for success, false for failure (failure turns forcing mode off)</p>\n</div></li></ul></div></div></div><div id='method-getStrongestLockMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-getStrongestLockMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-getStrongestLockMode' class='name expandable'>getStrongestLockMode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Method used to get the strongest lock type currently held by the WifiLockManager. ...</div><div class='long'><p>Method used to get the strongest lock type currently held by the WifiLockManager.</p>\n\n<p> If no locks are held, WifiManager.WIFI_MODE_NO_LOCKS_HELD is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int representing the currently held (highest power consumption) lock.</p>\n</div></li></ul></div></div></div><div id='method-handleScreenStateChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-handleScreenStateChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-handleScreenStateChanged' class='name expandable'>handleScreenStateChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Handler for screen state (on/off) changes ...</div><div class='long'><p>Handler for screen state (on/off) changes</p>\n</div></div></div><div id='method-releaseWifiLock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-releaseWifiLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-releaseWifiLock' class='name expandable'>releaseWifiLock</a>( <span class='pre'>binder</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Method used by applications to release a WiFi Wake lock. ...</div><div class='long'><p>Method used by applications to release a WiFi Wake lock.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>binder</span> : Object {IBinder}<div class='sub-desc'><p>IBinder for the calling app.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the lock was released, false if the caller did not hold any locks</p>\n</div></li></ul></div></div></div><div id='method-updateWifiClientConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-updateWifiClientConnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-updateWifiClientConnected' class='name expandable'>updateWifiClientConnected</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Handler for Wifi Client mode state changes ...</div><div class='long'><p>Handler for Wifi Client mode state changes</p>\n</div></div></div><div id='method-updateWifiLockWorkSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiLockManager'>com.android.server.wifi.WifiLockManager</span><br/><a href='source/WifiLockManager.html#com-android-server-wifi-WifiLockManager-method-updateWifiLockWorkSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiLockManager-method-updateWifiLockWorkSource' class='name expandable'>updateWifiLockWorkSource</a>( <span class='pre'>binder, ws</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Method used to update WifiLocks with a new WorkSouce. ...</div><div class='long'><p>Method used to update WifiLocks with a new WorkSouce.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>binder</span> : Object {IBinder}<div class='sub-desc'><p>IBinder for the calling application.</p>\n</div></li><li><span class='pre'>ws</span> : Object {WorkSource}<div class='sub-desc'><p>WorkSource to add to the existing WifiLock(s).</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});