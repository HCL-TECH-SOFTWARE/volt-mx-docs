Ext.data.JsonP.com_android_server_wifi_LinkProbeManager({"tagname":"class","name":"com.android.server.wifi.LinkProbeManager","autodetected":{},"files":[{"filename":"LinkProbeManager.js","href":"LinkProbeManager.html#com-android-server-wifi-LinkProbeManager"}],"extends":"java.lang.Object","members":[{"name":"dump","tagname":"method","owner":"com.android.server.wifi.LinkProbeManager","id":"method-dump","meta":{}},{"name":"enableVerboseLogging","tagname":"method","owner":"com.android.server.wifi.LinkProbeManager","id":"method-enableVerboseLogging","meta":{}},{"name":"resetOnNewConnection","tagname":"method","owner":"com.android.server.wifi.LinkProbeManager","id":"method-resetOnNewConnection","meta":{}},{"name":"resetOnScreenTurnedOn","tagname":"method","owner":"com.android.server.wifi.LinkProbeManager","id":"method-resetOnScreenTurnedOn","meta":{}},{"name":"updateConnectionStats","tagname":"method","owner":"com.android.server.wifi.LinkProbeManager","id":"method-updateConnectionStats","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wifi.LinkProbeManager","short_doc":"Tracks state that decides if a link probe should be performed. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.wifi.LinkProbeManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/LinkProbeManager.html#com-android-server-wifi-LinkProbeManager' target='_blank'>LinkProbeManager.js</a></div></pre><div class='doc-contents'><p>Tracks state that decides if a link probe should be performed. If so, trigger a link probe to\n evaluate connection quality.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dump' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.LinkProbeManager'>com.android.server.wifi.LinkProbeManager</span><br/><a href='source/LinkProbeManager.html#com-android-server-wifi-LinkProbeManager-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.LinkProbeManager-method-dump' class='name expandable'>dump</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>dumps internal state ...</div><div class='long'><p>dumps internal state</p>\n</div></div></div><div id='method-enableVerboseLogging' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.LinkProbeManager'>com.android.server.wifi.LinkProbeManager</span><br/><a href='source/LinkProbeManager.html#com-android-server-wifi-LinkProbeManager-method-enableVerboseLogging' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.LinkProbeManager-method-enableVerboseLogging' class='name expandable'>enableVerboseLogging</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>enables/disables wifi verbose logging ...</div><div class='long'><p>enables/disables wifi verbose logging</p>\n</div></div></div><div id='method-resetOnNewConnection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.LinkProbeManager'>com.android.server.wifi.LinkProbeManager</span><br/><a href='source/LinkProbeManager.html#com-android-server-wifi-LinkProbeManager-method-resetOnNewConnection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.LinkProbeManager-method-resetOnNewConnection' class='name expandable'>resetOnNewConnection</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>When connecting to a new network, reset internal state. ...</div><div class='long'><p>When connecting to a new network, reset internal state.</p>\n</div></div></div><div id='method-resetOnScreenTurnedOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.LinkProbeManager'>com.android.server.wifi.LinkProbeManager</span><br/><a href='source/LinkProbeManager.html#com-android-server-wifi-LinkProbeManager-method-resetOnScreenTurnedOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.LinkProbeManager-method-resetOnScreenTurnedOn' class='name expandable'>resetOnScreenTurnedOn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>When RSSI poll events are stopped and restarted (usually screen turned off then back on),\n reset internal state. ...</div><div class='long'><p>When RSSI poll events are stopped and restarted (usually screen turned off then back on),\n reset internal state.</p>\n</div></div></div><div id='method-updateConnectionStats' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.LinkProbeManager'>com.android.server.wifi.LinkProbeManager</span><br/><a href='source/LinkProbeManager.html#com-android-server-wifi-LinkProbeManager-method-updateConnectionStats' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.LinkProbeManager-method-updateConnectionStats' class='name expandable'>updateConnectionStats</a>( <span class='pre'>wifiInfo, interfaceName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Based on network conditions provided by WifiInfo, decides if a link probe should be\n performed. ...</div><div class='long'><p>Based on network conditions provided by WifiInfo, decides if a link probe should be\n performed. If so, trigger a link probe and report the results to WifiMetrics.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>wifiInfo</span> : Object {WifiInfo}<div class='sub-desc'><p>the updated WifiInfo</p>\n</div></li><li><span class='pre'>interfaceName</span> : String<div class='sub-desc'><p>the interface that the link probe should be performed on, if applicable.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});