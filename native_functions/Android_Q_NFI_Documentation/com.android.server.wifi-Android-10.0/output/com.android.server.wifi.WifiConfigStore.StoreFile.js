Ext.data.JsonP.com_android_server_wifi_WifiConfigStore_StoreFile({"tagname":"class","name":"com.android.server.wifi.WifiConfigStore.StoreFile","autodetected":{},"files":[{"filename":"StoreFile.js","href":"StoreFile.html#com-android-server-wifi-WifiConfigStore-StoreFile"}],"extends":"java.lang.Object","members":[{"name":"exists","tagname":"method","owner":"com.android.server.wifi.WifiConfigStore.StoreFile","id":"method-exists","meta":{}},{"name":"readRawData","tagname":"method","owner":"com.android.server.wifi.WifiConfigStore.StoreFile","id":"method-readRawData","meta":{}},{"name":"storeRawDataToWrite","tagname":"method","owner":"com.android.server.wifi.WifiConfigStore.StoreFile","id":"method-storeRawDataToWrite","meta":{}},{"name":"writeBufferedRawData","tagname":"method","owner":"com.android.server.wifi.WifiConfigStore.StoreFile","id":"method-writeBufferedRawData","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wifi.WifiConfigStore.StoreFile","short_doc":"Class to encapsulate all file writes. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.wifi.WifiConfigStore.StoreFile</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/StoreFile.html#com-android-server-wifi-WifiConfigStore-StoreFile' target='_blank'>StoreFile.js</a></div></pre><div class='doc-contents'><p>Class to encapsulate all file writes. This is a wrapper over AtomicFile to write/read\n raw data from the persistent file with integrity. This class provides helper methods to\n read/write the entire file into a byte array.\n This helps to separate out the processing, parsing, and integrity checking from the actual\n file writing.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-exists' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigStore.StoreFile'>com.android.server.wifi.WifiConfigStore.StoreFile</span><br/><a href='source/StoreFile.html#com-android-server-wifi-WifiConfigStore-StoreFile-method-exists' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigStore.StoreFile-method-exists' class='name expandable'>exists</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the store file already exists on disk or not. ...</div><div class='long'><p>Returns whether the store file already exists on disk or not.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if it exists, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-readRawData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigStore.StoreFile'>com.android.server.wifi.WifiConfigStore.StoreFile</span><br/><a href='source/StoreFile.html#com-android-server-wifi-WifiConfigStore-StoreFile-method-readRawData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigStore.StoreFile-method-readRawData' class='name expandable'>readRawData</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Read the entire raw data from the store file and return in a byte array. ...</div><div class='long'><p>Read the entire raw data from the store file and return in a byte array.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>raw data read from the file or null if the file is not found or the data has\n  been altered.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an error occurs. The input stream is always closed by the method\n even when an exception is encountered.</p>\n</div></li></ul></div></div></div><div id='method-storeRawDataToWrite' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigStore.StoreFile'>com.android.server.wifi.WifiConfigStore.StoreFile</span><br/><a href='source/StoreFile.html#com-android-server-wifi-WifiConfigStore-StoreFile-method-storeRawDataToWrite' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigStore.StoreFile-method-storeRawDataToWrite' class='name expandable'>storeRawDataToWrite</a>( <span class='pre'>data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Store the provided byte array to be written when writeBufferedRawData() method\n is invoked. ...</div><div class='long'><p>Store the provided byte array to be written when <a href=\"#!/api/com.android.server.wifi.WifiConfigStore.StoreFile-method-writeBufferedRawData\" rel=\"com.android.server.wifi.WifiConfigStore.StoreFile-method-writeBufferedRawData\" class=\"docClass\">writeBufferedRawData</a>() method\n is invoked.\n This intermediate step is needed to help in buffering file writes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object {byte[]}<div class='sub-desc'><p>raw data to be written to the file.</p>\n</div></li></ul></div></div></div><div id='method-writeBufferedRawData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigStore.StoreFile'>com.android.server.wifi.WifiConfigStore.StoreFile</span><br/><a href='source/StoreFile.html#com-android-server-wifi-WifiConfigStore-StoreFile-method-writeBufferedRawData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigStore.StoreFile-method-writeBufferedRawData' class='name expandable'>writeBufferedRawData</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write the stored raw data to the store file. ...</div><div class='long'><p>Write the stored raw data to the store file.\n After the write to file, the mWriteData member is reset.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an error occurs. The output stream is always closed by the method\n even when an exception is encountered.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});