Ext.data.JsonP.com_android_server_wifi_WifiConfigManager({"tagname":"class","name":"com.android.server.wifi.WifiConfigManager","autodetected":{},"files":[{"filename":"WifiConfigManager.js","href":"WifiConfigManager.html#com-android-server-wifi-WifiConfigManager"}],"extends":"java.lang.Object","members":[{"name":"DELETED_EPHEMERAL_SSID_EXPIRY_MS","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-DELETED_EPHEMERAL_SSID_EXPIRY_MS","meta":{}},{"name":"LINK_CONFIGURATION_BSSID_MATCH_LENGTH","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-LINK_CONFIGURATION_BSSID_MATCH_LENGTH","meta":{}},{"name":"LINK_CONFIGURATION_MAX_SCAN_CACHE_ENTRIES","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-LINK_CONFIGURATION_MAX_SCAN_CACHE_ENTRIES","meta":{}},{"name":"MAX_PNO_SCAN_FREQUENCY_AGE_MS","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-MAX_PNO_SCAN_FREQUENCY_AGE_MS","meta":{}},{"name":"NETWORK_SELECTION_DISABLE_THRESHOLD","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-NETWORK_SELECTION_DISABLE_THRESHOLD","meta":{}},{"name":"NETWORK_SELECTION_DISABLE_TIMEOUT_MS","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-NETWORK_SELECTION_DISABLE_TIMEOUT_MS","meta":{}},{"name":"PASSWORD_MASK","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-PASSWORD_MASK","meta":{}},{"name":"SCAN_CACHE_ENTRIES_MAX_SIZE","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-SCAN_CACHE_ENTRIES_MAX_SIZE","meta":{}},{"name":"SCAN_CACHE_ENTRIES_TRIM_SIZE","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-SCAN_CACHE_ENTRIES_TRIM_SIZE","meta":{}},{"name":"SYSUI_PACKAGE_NAME","tagname":"property","owner":"com.android.server.wifi.WifiConfigManager","id":"property-SYSUI_PACKAGE_NAME","meta":{}},{"name":"addOrUpdateNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-addOrUpdateNetwork","meta":{}},{"name":"clearDeletedEphemeralNetworks","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-clearDeletedEphemeralNetworks","meta":{}},{"name":"clearNetworkCandidateScanResult","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-clearNetworkCandidateScanResult","meta":{}},{"name":"clearNetworkConnectChoice","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-clearNetworkConnectChoice","meta":{}},{"name":"clearRecentFailureReason","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-clearRecentFailureReason","meta":{}},{"name":"createDebugTimeStampString","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-createDebugTimeStampString","meta":{}},{"name":"disableEphemeralNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-disableEphemeralNetwork","meta":{}},{"name":"disableNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-disableNetwork","meta":{}},{"name":"dump","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-dump","meta":{}},{"name":"enableNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-enableNetwork","meta":{}},{"name":"enableVerboseLogging","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-enableVerboseLogging","meta":{}},{"name":"fetchChannelSetForNetworkForPartialScan","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-fetchChannelSetForNetworkForPartialScan","meta":{}},{"name":"getConfiguredNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getConfiguredNetwork","meta":{}},{"name":"getConfiguredNetworkForScanDetail","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getConfiguredNetworkForScanDetail","meta":{}},{"name":"getConfiguredNetworkForScanDetailAndCache","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getConfiguredNetworkForScanDetailAndCache","meta":{}},{"name":"getConfiguredNetworkWithPassword","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getConfiguredNetworkWithPassword","meta":{}},{"name":"getConfiguredNetworkWithoutMasking","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getConfiguredNetworkWithoutMasking","meta":{}},{"name":"getConfiguredNetworks","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getConfiguredNetworks","meta":{}},{"name":"getConfiguredNetworksWithPasswords","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getConfiguredNetworksWithPasswords","meta":{}},{"name":"getLastSelectedNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getLastSelectedNetwork","meta":{}},{"name":"getLastSelectedNetworkConfigKey","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getLastSelectedNetworkConfigKey","meta":{}},{"name":"getLastSelectedTimeStamp","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getLastSelectedTimeStamp","meta":{}},{"name":"getSavedNetworks","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getSavedNetworks","meta":{}},{"name":"getScanDetailCacheForNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-getScanDetailCacheForNetwork","meta":{}},{"name":"handleUserStop","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-handleUserStop","meta":{}},{"name":"handleUserSwitch","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-handleUserSwitch","meta":{}},{"name":"handleUserUnlock","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-handleUserUnlock","meta":{}},{"name":"incrementNetworkNoInternetAccessReports","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-incrementNetworkNoInternetAccessReports","meta":{}},{"name":"loadFromStore","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-loadFromStore","meta":{}},{"name":"removeAllEphemeralOrPasspointConfiguredNetworks","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-removeAllEphemeralOrPasspointConfiguredNetworks","meta":{}},{"name":"removeNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-removeNetwork","meta":{}},{"name":"removeNetworksForApp","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-removeNetworksForApp","meta":{}},{"name":"removePasspointConfiguredNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-removePasspointConfiguredNetwork","meta":{}},{"name":"resetSimNetworks","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-resetSimNetworks","meta":{}},{"name":"retrieveHiddenNetworkList","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-retrieveHiddenNetworkList","meta":{}},{"name":"retrievePnoNetworkList","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-retrievePnoNetworkList","meta":{}},{"name":"saveToStore","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-saveToStore","meta":{}},{"name":"setNetworkCandidateScanResult","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setNetworkCandidateScanResult","meta":{}},{"name":"setNetworkConnectChoice","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setNetworkConnectChoice","meta":{}},{"name":"setNetworkDefaultGwMacAddress","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setNetworkDefaultGwMacAddress","meta":{}},{"name":"setNetworkNoInternetAccessExpected","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setNetworkNoInternetAccessExpected","meta":{}},{"name":"setNetworkRandomizedMacAddress","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setNetworkRandomizedMacAddress","meta":{}},{"name":"setNetworkValidatedInternetAccess","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setNetworkValidatedInternetAccess","meta":{}},{"name":"setOnSavedNetworkUpdateListener","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setOnSavedNetworkUpdateListener","meta":{}},{"name":"setRecentFailureAssociationStatus","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-setRecentFailureAssociationStatus","meta":{}},{"name":"tryEnableNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-tryEnableNetwork","meta":{}},{"name":"updateLastConnectUid","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-updateLastConnectUid","meta":{}},{"name":"updateNetworkAfterConnect","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-updateNetworkAfterConnect","meta":{}},{"name":"updateNetworkAfterDisconnect","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-updateNetworkAfterDisconnect","meta":{}},{"name":"updateNetworkNotRecommended","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-updateNetworkNotRecommended","meta":{}},{"name":"updateNetworkSelectionStatus","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-updateNetworkSelectionStatus","meta":{}},{"name":"updateScanDetailCacheFromWifiInfo","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-updateScanDetailCacheFromWifiInfo","meta":{}},{"name":"updateScanDetailForNetwork","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-updateScanDetailForNetwork","meta":{}},{"name":"wasEphemeralNetworkDeleted","tagname":"method","owner":"com.android.server.wifi.WifiConfigManager","id":"method-wasEphemeralNetworkDeleted","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wifi.WifiConfigManager","short_doc":"This class provides the APIs to manage configured Wi-Fi networks. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.wifi.WifiConfigManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager' target='_blank'>WifiConfigManager.js</a></div></pre><div class='doc-contents'><p>This class provides the APIs to manage configured Wi-Fi networks.\n It deals with the following:\n - Maintaining a list of configured networks for quick access.\n - Persisting the configurations to store when required.\n - Supporting WifiManager Public API calls:</p>\n\n<blockquote><p>addOrUpdateNetwork()\nremoveNetwork()\nenableNetwork()\ndisableNetwork()\n - Handle user switching on multi-user devices.</p></blockquote>\n\n<p> All network configurations retrieved from this class are copies of the original configuration\n stored in the internal database. So, any updates to the retrieved configuration object are\n meaningless and will not be reflected in the original database.\n This is done on purpose to ensure that only WifiConfigManager can modify configurations stored\n in the internal database. Any configuration updates should be triggered with appropriate helper\n methods of this class using the configuration's unique networkId.</p>\n\n<p> NOTE: These API's are not thread safe and should only be used from ClientModeImpl thread.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DELETED_EPHEMERAL_SSID_EXPIRY_MS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-DELETED_EPHEMERAL_SSID_EXPIRY_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-DELETED_EPHEMERAL_SSID_EXPIRY_MS' class='name expandable'>DELETED_EPHEMERAL_SSID_EXPIRY_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Expiration timeout for deleted ephemeral ssids. ...</div><div class='long'><p>Expiration timeout for deleted ephemeral ssids. (1 day)</p>\n<p>Defaults to: <code>&quot;86400000&quot;</code></p></div></div></div><div id='property-LINK_CONFIGURATION_BSSID_MATCH_LENGTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-LINK_CONFIGURATION_BSSID_MATCH_LENGTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-LINK_CONFIGURATION_BSSID_MATCH_LENGTH' class='name expandable'>LINK_CONFIGURATION_BSSID_MATCH_LENGTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Link networks only if the bssid in scan results for the networks match in the first\n16 ASCII chars in the bssid string. ...</div><div class='long'><p>Link networks only if the bssid in scan results for the networks match in the first\n16 ASCII chars in the bssid string. For example = \"af:de:56;34:15:7\"</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p></div></div></div><div id='property-LINK_CONFIGURATION_MAX_SCAN_CACHE_ENTRIES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-LINK_CONFIGURATION_MAX_SCAN_CACHE_ENTRIES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-LINK_CONFIGURATION_MAX_SCAN_CACHE_ENTRIES' class='name expandable'>LINK_CONFIGURATION_MAX_SCAN_CACHE_ENTRIES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Link networks only if they have less than this number of scan cache entries. ...</div><div class='long'><p>Link networks only if they have less than this number of scan cache entries.</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-MAX_PNO_SCAN_FREQUENCY_AGE_MS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-MAX_PNO_SCAN_FREQUENCY_AGE_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-MAX_PNO_SCAN_FREQUENCY_AGE_MS' class='name expandable'>MAX_PNO_SCAN_FREQUENCY_AGE_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Maximum age of frequencies last seen to be included in pno scans. ...</div><div class='long'><p>Maximum age of frequencies last seen to be included in pno scans. (30 days)</p>\n<p>Defaults to: <code>&quot;2592000000&quot;</code></p></div></div></div><div id='property-NETWORK_SELECTION_DISABLE_THRESHOLD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-NETWORK_SELECTION_DISABLE_THRESHOLD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-NETWORK_SELECTION_DISABLE_THRESHOLD' class='name expandable'>NETWORK_SELECTION_DISABLE_THRESHOLD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Network Selection disable reason thresholds. ...</div><div class='long'><p>Network Selection disable reason thresholds. These numbers are used to debounce network\nfailures before we disable them.\nThese are indexed using the disable reason constants defined in\nandroid.net.wifi.WifiConfiguration.NetworkSelectionStatus.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-NETWORK_SELECTION_DISABLE_TIMEOUT_MS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-NETWORK_SELECTION_DISABLE_TIMEOUT_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-NETWORK_SELECTION_DISABLE_TIMEOUT_MS' class='name expandable'>NETWORK_SELECTION_DISABLE_TIMEOUT_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Network Selection disable timeout for each kind of error. ...</div><div class='long'><p>Network Selection disable timeout for each kind of error. After the timeout milliseconds,\nenable the network again.\nThese are indexed using the disable reason constants defined in\nandroid.net.wifi.WifiConfiguration.NetworkSelectionStatus.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-PASSWORD_MASK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-PASSWORD_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-PASSWORD_MASK' class='name expandable'>PASSWORD_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>String used to mask passwords to public interface. ...</div><div class='long'><p>String used to mask passwords to public interface.</p>\n<p>Defaults to: <code>&quot;*&quot;</code></p></div></div></div><div id='property-SCAN_CACHE_ENTRIES_MAX_SIZE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-SCAN_CACHE_ENTRIES_MAX_SIZE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-SCAN_CACHE_ENTRIES_MAX_SIZE' class='name expandable'>SCAN_CACHE_ENTRIES_MAX_SIZE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Max size of scan details to cache in mScanDetailCaches. ...</div><div class='long'><p>Max size of scan details to cache in mScanDetailCaches.</p>\n<p>Defaults to: <code>&quot;192&quot;</code></p></div></div></div><div id='property-SCAN_CACHE_ENTRIES_TRIM_SIZE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-SCAN_CACHE_ENTRIES_TRIM_SIZE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-SCAN_CACHE_ENTRIES_TRIM_SIZE' class='name expandable'>SCAN_CACHE_ENTRIES_TRIM_SIZE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Once the size of the scan details in the cache mScanDetailCaches exceeds\nSCAN_CACHE_ENTRIES_MAX_SIZE, trim it down to...</div><div class='long'><p>Once the size of the scan details in the cache mScanDetailCaches exceeds\n<a href=\"#!/api/com.android.server.wifi.WifiConfigManager-property-SCAN_CACHE_ENTRIES_MAX_SIZE\" rel=\"com.android.server.wifi.WifiConfigManager-property-SCAN_CACHE_ENTRIES_MAX_SIZE\" class=\"docClass\">SCAN_CACHE_ENTRIES_MAX_SIZE</a>, trim it down to this value so that we have some\nbuffer time before the next eviction.</p>\n<p>Defaults to: <code>&quot;128&quot;</code></p></div></div></div><div id='property-SYSUI_PACKAGE_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-property-SYSUI_PACKAGE_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-property-SYSUI_PACKAGE_NAME' class='name expandable'>SYSUI_PACKAGE_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Package name for SysUI. ...</div><div class='long'><p>Package name for SysUI. This is used to lookup the UID of SysUI which is used to allow\nQuick settings to modify network configurations.</p>\n<p>Defaults to: <code>&quot;com.android.systemui&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addOrUpdateNetwork' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-addOrUpdateNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-addOrUpdateNetwork' class='name expandable'>addOrUpdateNetwork</a>( <span class='pre'>config, uid</span> ) : Object {com.android.server.wifi.NetworkUpdateResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a network or update a network configuration to our database. ...</div><div class='long'><p>Add a network or update a network configuration to our database.\n If the supplied networkId is INVALID_NETWORK_ID, we create a new empty\n network configuration. Otherwise, the networkId should refer to an existing configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {WifiConfiguration}<div class='sub-desc'><p>provided WifiConfiguration object.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>UID of the app requesting the network addition/modification.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.server.wifi.NetworkUpdateResult}</span><div class='sub-desc'><p>NetworkUpdateResult object representing status of the update.</p>\n</div></li></ul></div></div></div><div id='method-clearDeletedEphemeralNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-clearDeletedEphemeralNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-clearDeletedEphemeralNetworks' class='name expandable'>clearDeletedEphemeralNetworks</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clear all deleted ephemeral networks. ...</div><div class='long'><p>Clear all deleted ephemeral networks.</p>\n</div></div></div><div id='method-clearNetworkCandidateScanResult' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-clearNetworkCandidateScanResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-clearNetworkCandidateScanResult' class='name expandable'>clearNetworkCandidateScanResult</a>( <span class='pre'>networkId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Clear the NetworkSelectionStatus.mCandidate,\n NetworkSelectionStatus.mCandidateScore &amp;\n NetworkSelectionStatus.mS...</div><div class='long'><p>Clear the NetworkSelectionStatus.mCandidate,\n NetworkSelectionStatus.mCandidateScore &amp;\n NetworkSelectionStatus.mSeenInLastQualifiedNetworkSelection for the provided network.</p>\n\n<p> This is invoked by Network Selector at the start of every selection procedure to clear all\n configured networks' scan-result-candidates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-clearNetworkConnectChoice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-clearNetworkConnectChoice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-clearNetworkConnectChoice' class='name expandable'>clearNetworkConnectChoice</a>( <span class='pre'>networkId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Clear the NetworkSelectionStatus.mConnectChoice &amp;\n NetworkSelectionStatus.mConnectChoiceTimestamp for the provide...</div><div class='long'><p>Clear the NetworkSelectionStatus.mConnectChoice &amp;\n NetworkSelectionStatus.mConnectChoiceTimestamp for the provided network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-clearRecentFailureReason' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-clearRecentFailureReason' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-clearRecentFailureReason' class='name expandable'>clearRecentFailureReason</a>( <span class='pre'>netId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>netId</span> : Number<div class='sub-desc'><p>The network ID of the config to clear the extra failure reason from</p>\n</div></li></ul></div></div></div><div id='method-createDebugTimeStampString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-createDebugTimeStampString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-createDebugTimeStampString' class='name expandable'>createDebugTimeStampString</a>( <span class='pre'>wallClockMillis</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Construct the string to be put in the |creationTime| &amp; |updateTime| elements of\n WifiConfiguration from the provi...</div><div class='long'><p>Construct the string to be put in the |creationTime| &amp; |updateTime| elements of\n WifiConfiguration from the provided wall clock millis.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>wallClockMillis</span> : Number<div class='sub-desc'><p>Time in milliseconds to be converted to string.</p>\n</div></li></ul></div></div></div><div id='method-disableEphemeralNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-disableEphemeralNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-disableEphemeralNetwork' class='name expandable'>disableEphemeralNetwork</a>( <span class='pre'>ssid</span> ) : Object {android.net.wifi.WifiConfiguration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Disable an ephemeral or Passpoint SSID for the purpose of network selection. ...</div><div class='long'><p>Disable an ephemeral or Passpoint SSID for the purpose of network selection.</p>\n\n<p> The network will be re-enabled when:\n a) The user creates a network for that SSID and then forgets.\n b) The time specified by <a href=\"#!/api/com.android.server.wifi.WifiConfigManager-property-DELETED_EPHEMERAL_SSID_EXPIRY_MS\" rel=\"com.android.server.wifi.WifiConfigManager-property-DELETED_EPHEMERAL_SSID_EXPIRY_MS\" class=\"docClass\">DELETED_EPHEMERAL_SSID_EXPIRY_MS</a> expires after the disable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ssid</span> : String<div class='sub-desc'><p>caller must ensure that the SSID passed thru this API match\n             the WifiConfiguration.SSID rules, and thus be surrounded by quotes.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiConfiguration}</span><div class='sub-desc'><p>the WifiConfiguration corresponding to this SSID, if any, so that we can\n disconnect if this is the current network.</p>\n</div></li></ul></div></div></div><div id='method-disableNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-disableNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-disableNetwork' class='name expandable'>disableNetwork</a>( <span class='pre'>networkId, uid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Disable a network using the public WifiManager.disableNetwork(int) API. ...</div><div class='long'><p>Disable a network using the public WifiManager.disableNetwork(int) API.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID of the network that needs the update.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>uid of the app requesting the update.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if it succeeds, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-dump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-dump' class='name expandable'>dump</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dump the local log buffer and other internal state of WifiConfigManager. ...</div><div class='long'><p>Dump the local log buffer and other internal state of WifiConfigManager.</p>\n</div></div></div><div id='method-enableNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-enableNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-enableNetwork' class='name expandable'>enableNetwork</a>( <span class='pre'>networkId, disableOthers, uid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable a network using the public boolean) API. ...</div><div class='long'><p>Enable a network using the public boolean) API.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID of the network that needs the update.</p>\n</div></li><li><span class='pre'>disableOthers</span> : Boolean<div class='sub-desc'><p>Whether to disable all other networks or not. This is used to indicate\n                      that the app requested connection to a specific network.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>uid of the app requesting the update.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if it succeeds, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-enableVerboseLogging' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-enableVerboseLogging' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-enableVerboseLogging' class='name expandable'>enableVerboseLogging</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable/disable verbose logging in WifiConfigManager &amp; its helper classes. ...</div><div class='long'><p>Enable/disable verbose logging in WifiConfigManager &amp; its helper classes.</p>\n</div></div></div><div id='method-fetchChannelSetForNetworkForPartialScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-fetchChannelSetForNetworkForPartialScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-fetchChannelSetForNetworkForPartialScan' class='name expandable'>fetchChannelSetForNetworkForPartialScan</a>( <span class='pre'>networkId, ageInMillis, homeChannelFreq</span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve a set of channels on which AP's for the provided network was seen using the\n internal ScanResult's cache mSc...</div><div class='long'><p>Retrieve a set of channels on which AP's for the provided network was seen using the\n internal ScanResult's cache mScanDetailCaches. This is used for initiating partial\n scans for the currently connected network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>ageInMillis</span> : Number<div class='sub-desc'><p>only consider scan details whose timestamps are earlier than this value.</p>\n</div></li><li><span class='pre'>homeChannelFreq</span> : Number<div class='sub-desc'><p>frequency of the currently connected network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>Set containing the frequencies on which this network was found, null if the network\n was not found or there are no associated scan details in the cache.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getConfiguredNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getConfiguredNetwork' class='name expandable'>getConfiguredNetwork</a>( <span class='pre'>configKey</span> ) : Object {android.net.wifi.WifiConfiguration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the configured network corresponding to the provided config key with password\n masked. ...</div><div class='long'><p>Retrieves the configured network corresponding to the provided config key with password\n masked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>configKey</span> : String<div class='sub-desc'><p>configKey of the requested network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiConfiguration}</span><div class='sub-desc'><p>WifiConfiguration object if found, null otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetworkForScanDetail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getConfiguredNetworkForScanDetail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getConfiguredNetworkForScanDetail' class='name expandable'>getConfiguredNetworkForScanDetail</a>( <span class='pre'>scanDetail</span> ) : Object {android.net.wifi.WifiConfiguration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a configured network corresponding to the provided scan detail if one exists. ...</div><div class='long'><p>Retrieves a configured network corresponding to the provided scan detail if one exists.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>scanDetail</span> : Object {ScanDetail}<div class='sub-desc'><p>ScanDetail instance  to use for looking up the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiConfiguration}</span><div class='sub-desc'><p>WifiConfiguration object representing the network corresponding to the scanDetail,\n null if none exists.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetworkForScanDetailAndCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getConfiguredNetworkForScanDetailAndCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getConfiguredNetworkForScanDetailAndCache' class='name expandable'>getConfiguredNetworkForScanDetailAndCache</a>( <span class='pre'>scanDetail</span> ) : Object {android.net.wifi.WifiConfiguration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a configured network corresponding to the provided scan detail if one exists and\n caches the provided |scan...</div><div class='long'><p>Retrieves a configured network corresponding to the provided scan detail if one exists and\n caches the provided |scanDetail| into the corresponding scan detail cache entry\n mScanDetailCaches for the retrieved network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>scanDetail</span> : Object {ScanDetail}<div class='sub-desc'><p>input a scanDetail from the scan result</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiConfiguration}</span><div class='sub-desc'><p>WifiConfiguration object representing the network corresponding to the scanDetail,\n null if none exists.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetworkWithPassword' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getConfiguredNetworkWithPassword' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getConfiguredNetworkWithPassword' class='name expandable'>getConfiguredNetworkWithPassword</a>( <span class='pre'>networkId</span> ) : Object {android.net.wifi.WifiConfiguration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the configured network corresponding to the provided networkId with password\n in plaintext. ...</div><div class='long'><p>Retrieves the configured network corresponding to the provided networkId with password\n in plaintext.</p>\n\n<p> WARNING: Don't use this to pass network configurations to external apps. Should only be\n sent to system apps/wifi stack, when there is a need for passwords in plaintext.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>networkId of the requested network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiConfiguration}</span><div class='sub-desc'><p>WifiConfiguration object if found, null otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetworkWithoutMasking' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getConfiguredNetworkWithoutMasking' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getConfiguredNetworkWithoutMasking' class='name expandable'>getConfiguredNetworkWithoutMasking</a>( <span class='pre'>networkId</span> ) : Object {android.net.wifi.WifiConfiguration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the configured network corresponding to the provided networkId\n without any masking. ...</div><div class='long'><p>Retrieves the configured network corresponding to the provided networkId\n without any masking.</p>\n\n<p> WARNING: Don't use this to pass network configurations except in the wifi stack, when\n there is a need for passwords and randomized MAC address.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>networkId of the requested network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiConfiguration}</span><div class='sub-desc'><p>Copy of WifiConfiguration object if found, null otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getConfiguredNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getConfiguredNetworks' class='name expandable'>getConfiguredNetworks</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the list of all configured networks with passwords masked. ...</div><div class='long'><p>Retrieves the list of all configured networks with passwords masked.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of WifiConfiguration objects representing the networks.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetworksWithPasswords' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getConfiguredNetworksWithPasswords' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getConfiguredNetworksWithPasswords' class='name expandable'>getConfiguredNetworksWithPasswords</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the list of all configured networks with the passwords in plaintext. ...</div><div class='long'><p>Retrieves the list of all configured networks with the passwords in plaintext.</p>\n\n<p> WARNING: Don't use this to pass network configurations to external apps. Should only be\n sent to system apps/wifi stack, when there is a need for passwords in plaintext.\n TODO: Need to understand the current use case of this API.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of WifiConfiguration objects representing the networks.</p>\n</div></li></ul></div></div></div><div id='method-getLastSelectedNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getLastSelectedNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getLastSelectedNetwork' class='name expandable'>getLastSelectedNetwork</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the network Id corresponding to the last network that was explicitly selected by\n an app/user. ...</div><div class='long'><p>Retrieve the network Id corresponding to the last network that was explicitly selected by\n an app/user.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>network Id corresponding to the last selected network.</p>\n</div></li></ul></div></div></div><div id='method-getLastSelectedNetworkConfigKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getLastSelectedNetworkConfigKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getLastSelectedNetworkConfigKey' class='name expandable'>getLastSelectedNetworkConfigKey</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the configKey corresponding to the last network that was explicitly selected by\n an app/user. ...</div><div class='long'><p>Retrieve the configKey corresponding to the last network that was explicitly selected by\n an app/user.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>network Id corresponding to the last selected network.</p>\n</div></li></ul></div></div></div><div id='method-getLastSelectedTimeStamp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getLastSelectedTimeStamp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getLastSelectedTimeStamp' class='name expandable'>getLastSelectedTimeStamp</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the time stamp at which a network was explicitly selected by an app/user. ...</div><div class='long'><p>Retrieve the time stamp at which a network was explicitly selected by an app/user.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>timestamp in milliseconds from boot when this was set.</p>\n</div></li></ul></div></div></div><div id='method-getSavedNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getSavedNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getSavedNetworks' class='name expandable'>getSavedNetworks</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the list of all configured networks with the passwords masked. ...</div><div class='long'><p>Retrieves the list of all configured networks with the passwords masked.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of WifiConfiguration objects representing the networks.</p>\n</div></li></ul></div></div></div><div id='method-getScanDetailCacheForNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-getScanDetailCacheForNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-getScanDetailCacheForNetwork' class='name expandable'>getScanDetailCacheForNetwork</a>( <span class='pre'>networkId</span> ) : Object {com.android.server.wifi.ScanDetailCache}<span class=\"signature\"></span></div><div class='description'><div class='short'>Helper method to get the scan detail cache entry mScanDetailCaches for the provided\n network. ...</div><div class='long'><p>Helper method to get the scan detail cache entry mScanDetailCaches for the provided\n network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.server.wifi.ScanDetailCache}</span><div class='sub-desc'><p>existing ScanDetailCache entry if one exists or null.</p>\n</div></li></ul></div></div></div><div id='method-handleUserStop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-handleUserStop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-handleUserStop' class='name expandable'>handleUserStop</a>( <span class='pre'>userId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Handles the stop of foreground user. ...</div><div class='long'><p>Handles the stop of foreground user. This is needed to write the store file to flush\n out any pending data before the user's CE store storage is unavailable.</p>\n\n<p> Need to be called when com.android.server.SystemService.onStopUser(int) is invoked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>userId</span> : Number<div class='sub-desc'><p>The identifier of the user that stopped.</p>\n</div></li></ul></div></div></div><div id='method-handleUserSwitch' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-handleUserSwitch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-handleUserSwitch' class='name expandable'>handleUserSwitch</a>( <span class='pre'>userId</span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Handles the switch to a different foreground user:\n - Flush the current state to the old user's store file. ...</div><div class='long'><p>Handles the switch to a different foreground user:\n - Flush the current state to the old user's store file.\n - Switch the user specific store file.\n - Reload the networks from the store files (shared &amp; user).\n - Write the store files to move any user specific private networks from shared store to user\n   store.</p>\n\n<p> Need to be called when com.android.server.SystemService.onSwitchUser(int) is invoked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>userId</span> : Number<div class='sub-desc'><p>The identifier of the new foreground user, after the switch.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>List of network ID's of all the private networks of the old user which will be\n removed from memory.</p>\n</div></li></ul></div></div></div><div id='method-handleUserUnlock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-handleUserUnlock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-handleUserUnlock' class='name expandable'>handleUserUnlock</a>( <span class='pre'>userId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Handles the unlock of foreground user. ...</div><div class='long'><p>Handles the unlock of foreground user. This maybe needed to read the store file if the user's\n CE storage is not visible when <a href=\"#!/api/com.android.server.wifi.WifiConfigManager-method-handleUserSwitch\" rel=\"com.android.server.wifi.WifiConfigManager-method-handleUserSwitch\" class=\"docClass\">handleUserSwitch</a>(int) is invoked.</p>\n\n<p> Need to be called when com.android.server.SystemService.onUnlockUser(int) is invoked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>userId</span> : Number<div class='sub-desc'><p>The identifier of the user that unlocked.</p>\n</div></li></ul></div></div></div><div id='method-incrementNetworkNoInternetAccessReports' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-incrementNetworkNoInternetAccessReports' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-incrementNetworkNoInternetAccessReports' class='name expandable'>incrementNetworkNoInternetAccessReports</a>( <span class='pre'>networkId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Increments the number of no internet access reports in the provided network. ...</div><div class='long'><p>Increments the number of no internet access reports in the provided network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-loadFromStore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-loadFromStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-loadFromStore' class='name expandable'>loadFromStore</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Read the config store and load the in-memory lists from the store data retrieved and sends\n out the networks changed ...</div><div class='long'><p>Read the config store and load the in-memory lists from the store data retrieved and sends\n out the networks changed broadcast.</p>\n\n<p> This reads all the network configurations from:\n 1. Shared WifiConfigStore.xml\n 2. User WifiConfigStore.xml</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success or not needed (fresh install), false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-removeAllEphemeralOrPasspointConfiguredNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-removeAllEphemeralOrPasspointConfiguredNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-removeAllEphemeralOrPasspointConfiguredNetworks' class='name expandable'>removeAllEphemeralOrPasspointConfiguredNetworks</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Iterates through the internal list of configured networks and removes any ephemeral or\n passpoint network configurati...</div><div class='long'><p>Iterates through the internal list of configured networks and removes any ephemeral or\n passpoint network configurations which are transient in nature.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a network was removed, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-removeNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-removeNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-removeNetwork' class='name expandable'>removeNetwork</a>( <span class='pre'>networkId, uid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the specified network configuration from our database. ...</div><div class='long'><p>Removes the specified network configuration from our database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID of the provided network.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>UID of the app requesting the network deletion.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if successful, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-removeNetworksForApp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-removeNetworksForApp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-removeNetworksForApp' class='name expandable'>removeNetworksForApp</a>( <span class='pre'>app</span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove all networks associated with an application. ...</div><div class='long'><p>Remove all networks associated with an application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>app</span> : Object {ApplicationInfo}<div class='sub-desc'><p>Application info of the package of networks to remove.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>the Set of networks that were removed by this call. Networks which matched\n         but failed to remove are omitted from this set.</p>\n</div></li></ul></div></div></div><div id='method-removePasspointConfiguredNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-removePasspointConfiguredNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-removePasspointConfiguredNetwork' class='name expandable'>removePasspointConfiguredNetwork</a>( <span class='pre'>fqdn</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the passpoint network configuration matched with {@code fqdn} provided. ...</div><div class='long'><p>Removes the passpoint network configuration matched with {@code fqdn} provided.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fqdn</span> : String<div class='sub-desc'><p>Fully Qualified Domain Name to remove.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a network was removed, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-resetSimNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-resetSimNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-resetSimNetworks' class='name expandable'>resetSimNetworks</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets all sim networks state. ...</div><div class='long'><p>Resets all sim networks state.</p>\n</div></div></div><div id='method-retrieveHiddenNetworkList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-retrieveHiddenNetworkList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-retrieveHiddenNetworkList' class='name expandable'>retrieveHiddenNetworkList</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a list of all the saved hidden networks for scans. ...</div><div class='long'><p>Retrieves a list of all the saved hidden networks for scans.</p>\n\n<p> Hidden network list sent to the firmware has limited size. If there are a lot of saved\n networks, this list will be truncated and we might end up not sending the networks\n with the highest chance of connecting to the firmware.\n So, re-sort the network list based on the frequency of connection to those networks\n and whether it was last seen in the scan results.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>list of networks in the order of priority.</p>\n</div></li></ul></div></div></div><div id='method-retrievePnoNetworkList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-retrievePnoNetworkList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-retrievePnoNetworkList' class='name expandable'>retrievePnoNetworkList</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a list of all the saved networks before enabling disconnected/connected PNO. ...</div><div class='long'><p>Retrieves a list of all the saved networks before enabling disconnected/connected PNO.</p>\n\n<p> PNO network list sent to the firmware has limited size. If there are a lot of saved\n networks, this list will be truncated and we might end up not sending the networks\n with the highest chance of connecting to the firmware.\n So, re-sort the network list based on the frequency of connection to those networks\n and whether it was last seen in the scan results.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>list of networks in the order of priority.</p>\n</div></li></ul></div></div></div><div id='method-saveToStore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-saveToStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-saveToStore' class='name expandable'>saveToStore</a>( <span class='pre'>forceWrite</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Save the current snapshot of the in-memory lists to the config store. ...</div><div class='long'><p>Save the current snapshot of the in-memory lists to the config store.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>forceWrite</span> : Boolean<div class='sub-desc'><p>Whether the write needs to be forced or not.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the write was successful or not, this is applicable only for force writes.</p>\n</div></li></ul></div></div></div><div id='method-setNetworkCandidateScanResult' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setNetworkCandidateScanResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setNetworkCandidateScanResult' class='name expandable'>setNetworkCandidateScanResult</a>( <span class='pre'>networkId, scanResult, score</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the NetworkSelectionStatus.mCandidate,\n NetworkSelectionStatus.mCandidateScore &amp;\n NetworkSelectionStatus.mSee...</div><div class='long'><p>Set the NetworkSelectionStatus.mCandidate,\n NetworkSelectionStatus.mCandidateScore &amp;\n NetworkSelectionStatus.mSeenInLastQualifiedNetworkSelection for the provided network.</p>\n\n<p> This is invoked by Network Selector when it sees a network during network selection procedure\n to set the scan result candidate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>scanResult</span> : Object {ScanResult}<div class='sub-desc'><p>Candidate ScanResult associated with this network.</p>\n</div></li><li><span class='pre'>score</span> : Number<div class='sub-desc'><p>Score assigned to the candidate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setNetworkConnectChoice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setNetworkConnectChoice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setNetworkConnectChoice' class='name expandable'>setNetworkConnectChoice</a>( <span class='pre'>networkId, connectChoiceConfigKey, timestamp</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the NetworkSelectionStatus.mConnectChoice &amp;\n NetworkSelectionStatus.mConnectChoiceTimestamp for the provided ...</div><div class='long'><p>Set the NetworkSelectionStatus.mConnectChoice &amp;\n NetworkSelectionStatus.mConnectChoiceTimestamp for the provided network.</p>\n\n<p> This is invoked by Network Selector when the user overrides the currently connected network\n choice.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>connectChoiceConfigKey</span> : String<div class='sub-desc'><p>ConfigKey corresponding to the network which was chosen over\n                               this network.</p>\n</div></li><li><span class='pre'>timestamp</span> : Number<div class='sub-desc'><p>timestamp at which the choice was made.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setNetworkDefaultGwMacAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setNetworkDefaultGwMacAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setNetworkDefaultGwMacAddress' class='name expandable'>setNetworkDefaultGwMacAddress</a>( <span class='pre'>networkId, macAddress</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set default GW MAC address for the provided network. ...</div><div class='long'><p>Set default GW MAC address for the provided network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>macAddress</span> : String<div class='sub-desc'><p>MAC address of the gateway to be set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setNetworkNoInternetAccessExpected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setNetworkNoInternetAccessExpected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setNetworkNoInternetAccessExpected' class='name expandable'>setNetworkNoInternetAccessExpected</a>( <span class='pre'>networkId, expected</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the internet access is expected or not in the provided network. ...</div><div class='long'><p>Sets whether the internet access is expected or not in the provided network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>expected</span> : Boolean<div class='sub-desc'><p>Whether access is expected or not.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setNetworkRandomizedMacAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setNetworkRandomizedMacAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setNetworkRandomizedMacAddress' class='name expandable'>setNetworkRandomizedMacAddress</a>( <span class='pre'>networkId, macAddress</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set randomized MAC address for the provided network. ...</div><div class='long'><p>Set randomized MAC address for the provided network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>macAddress</span> : Object {MacAddress}<div class='sub-desc'><p>Randomized MAC address to be used for network connection.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setNetworkValidatedInternetAccess' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setNetworkValidatedInternetAccess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setNetworkValidatedInternetAccess' class='name expandable'>setNetworkValidatedInternetAccess</a>( <span class='pre'>networkId, validated</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the internet access is validated or not in the provided network. ...</div><div class='long'><p>Sets the internet access is validated or not in the provided network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>validated</span> : Boolean<div class='sub-desc'><p>Whether access is validated or not.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setOnSavedNetworkUpdateListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setOnSavedNetworkUpdateListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setOnSavedNetworkUpdateListener' class='name expandable'>setOnSavedNetworkUpdateListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the saved network update event listener ...</div><div class='long'><p>Set the saved network update event listener</p>\n</div></div></div><div id='method-setRecentFailureAssociationStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-setRecentFailureAssociationStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-setRecentFailureAssociationStatus' class='name expandable'>setRecentFailureAssociationStatus</a>( <span class='pre'>netId, reason</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set extra failure reason for given config. ...</div><div class='long'><p>Set extra failure reason for given config. Used to surface extra failure details to the UI</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>netId</span> : Number<div class='sub-desc'><p>The network ID of the config to set the extra failure reason for</p>\n</div></li><li><span class='pre'>reason</span> : Number<div class='sub-desc'><p>the WifiConfiguration.ExtraFailureReason failure code representing the most\n               recent failure reason</p>\n</div></li></ul></div></div></div><div id='method-tryEnableNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-tryEnableNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-tryEnableNetwork' class='name expandable'>tryEnableNetwork</a>( <span class='pre'>networkId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempt to re-enable a network for network selection, if this network was either:\n a) Previously temporarily disabled...</div><div class='long'><p>Attempt to re-enable a network for network selection, if this network was either:\n a) Previously temporarily disabled, but its disable timeout has expired, or\n b) Previously disabled because of a user switch, but is now visible to the current\n user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>the id of the network to be checked for possible unblock (due to timeout)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network identified by {@param networkId} was re-enabled for qualified\n network selection, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-updateLastConnectUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-updateLastConnectUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-updateLastConnectUid' class='name expandable'>updateLastConnectUid</a>( <span class='pre'>networkId, uid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates the last connected UID for the provided configuration. ...</div><div class='long'><p>Updates the last connected UID for the provided configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>uid of the app requesting the connection.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-updateNetworkAfterConnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-updateNetworkAfterConnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-updateNetworkAfterConnect' class='name expandable'>updateNetworkAfterConnect</a>( <span class='pre'>networkId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates a network configuration after a successful connection to it. ...</div><div class='long'><p>Updates a network configuration after a successful connection to it.</p>\n\n<p> This method updates the following WifiConfiguration elements:\n 1. Set the |lastConnected| timestamp.\n 2. Increment |numAssociation| counter.\n 3. Clear the disable reason counters in the associated |NetworkSelectionStatus|.\n 4. Set the hasEverConnected| flag in the associated |NetworkSelectionStatus|.\n 5. Sets the status of network as |CURRENT|.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-updateNetworkAfterDisconnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-updateNetworkAfterDisconnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-updateNetworkAfterDisconnect' class='name expandable'>updateNetworkAfterDisconnect</a>( <span class='pre'>networkId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates a network configuration after disconnection from it. ...</div><div class='long'><p>Updates a network configuration after disconnection from it.</p>\n\n<p> This method updates the following WifiConfiguration elements:\n 1. Set the |lastDisConnected| timestamp.\n 2. Sets the status of network back to |ENABLED|.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID corresponding to the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network was found, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-updateNetworkNotRecommended' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-updateNetworkNotRecommended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-updateNetworkNotRecommended' class='name expandable'>updateNetworkNotRecommended</a>( <span class='pre'>networkId, notRecommended</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Update whether a network is currently not recommended by RecommendedNetworkEvaluator. ...</div><div class='long'><p>Update whether a network is currently not recommended by RecommendedNetworkEvaluator.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID of the network to be updated</p>\n</div></li><li><span class='pre'>notRecommended</span> : Boolean<div class='sub-desc'><p>whether this network is not recommended</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the network is updated, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-updateNetworkSelectionStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-updateNetworkSelectionStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-updateNetworkSelectionStatus' class='name expandable'>updateNetworkSelectionStatus</a>( <span class='pre'>networkId, reason</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Update a network's status (both internal and public) according to the update reason and\n its current state. ...</div><div class='long'><p>Update a network's status (both internal and public) according to the update reason and\n its current state.</p>\n\n<p> Each network has 2 status:\n 1. NetworkSelectionStatus: This is internal selection status of the network. This is used\n for temporarily disabling a network for Network Selector.\n 2. Status: This is the exposed status for a network. This is mostly set by\n the public API's boolean) &amp;\n WifiManager.disableNetwork(int).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>network ID of the network that needs the update.</p>\n</div></li><li><span class='pre'>reason</span> : Number<div class='sub-desc'><p>reason to update the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the input configuration has been updated, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-updateScanDetailCacheFromWifiInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-updateScanDetailCacheFromWifiInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-updateScanDetailCacheFromWifiInfo' class='name expandable'>updateScanDetailCacheFromWifiInfo</a>( <span class='pre'>info</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the scan detail cache associated with current connected network with latest\n RSSI value in the provided WifiInfo. ...</div><div class='long'><p>Update the scan detail cache associated with current connected network with latest\n RSSI value in the provided WifiInfo.\n This is invoked when we get an RSSI poll update after connection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>info</span> : Object {WifiInfo}<div class='sub-desc'><p>WifiInfo instance pointing to the current connected network.</p>\n</div></li></ul></div></div></div><div id='method-updateScanDetailForNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-updateScanDetailForNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-updateScanDetailForNetwork' class='name expandable'>updateScanDetailForNetwork</a>( <span class='pre'>networkId, scanDetail</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Save the ScanDetail to the ScanDetailCache of the given network. ...</div><div class='long'><p>Save the ScanDetail to the ScanDetailCache of the given network.  This is used\n by com.android.server.wifi.hotspot2.PasspointNetworkEvaluator for caching\n ScanDetail for newly created WifiConfiguration for Passpoint network.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkId</span> : Number<div class='sub-desc'><p>The ID of the network to save ScanDetail to</p>\n</div></li><li><span class='pre'>scanDetail</span> : Object {ScanDetail}<div class='sub-desc'><p>The ScanDetail to cache</p>\n</div></li></ul></div></div></div><div id='method-wasEphemeralNetworkDeleted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.WifiConfigManager'>com.android.server.wifi.WifiConfigManager</span><br/><a href='source/WifiConfigManager.html#com-android-server-wifi-WifiConfigManager-method-wasEphemeralNetworkDeleted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.WifiConfigManager-method-wasEphemeralNetworkDeleted' class='name expandable'>wasEphemeralNetworkDeleted</a>( <span class='pre'>ssid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if the provided ephemeral network was deleted by the user or not. ...</div><div class='long'><p>Check if the provided ephemeral network was deleted by the user or not. This call also clears\n the SSID from the deleted ephemeral network map, if the duration has expired the\n timeout specified by <a href=\"#!/api/com.android.server.wifi.WifiConfigManager-property-DELETED_EPHEMERAL_SSID_EXPIRY_MS\" rel=\"com.android.server.wifi.WifiConfigManager-property-DELETED_EPHEMERAL_SSID_EXPIRY_MS\" class=\"docClass\">DELETED_EPHEMERAL_SSID_EXPIRY_MS</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ssid</span> : String<div class='sub-desc'><p>caller must ensure that the SSID passed thru this API match\n             the WifiConfiguration.SSID rules, and thus be surrounded by quotes.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if network was deleted, false otherwise.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});