Ext.data.JsonP.com_android_server_wifi_HalDeviceManager_InterfaceRttControllerLifecycleCallback({"tagname":"class","name":"com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback","autodetected":{},"files":[{"filename":"InterfaceRttControllerLifecycleCallback.js","href":"InterfaceRttControllerLifecycleCallback.html#com-android-server-wifi-HalDeviceManager-InterfaceRttControllerLifecycleCallback"}],"members":[{"name":"onNewRttController","tagname":"method","owner":"com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback","id":"method-onNewRttController","meta":{}},{"name":"onRttControllerDestroyed","tagname":"method","owner":"com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback","id":"method-onRttControllerDestroyed","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback","short_doc":"Called on RTT controller lifecycle events. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/InterfaceRttControllerLifecycleCallback.html#com-android-server-wifi-HalDeviceManager-InterfaceRttControllerLifecycleCallback' target='_blank'>InterfaceRttControllerLifecycleCallback.js</a></div></pre><div class='doc-contents'><p>Called on RTT controller lifecycle events. RTT controller is a singleton which will be\n created when possible (after first lifecycle registration) and destroyed if necessary.</p>\n\n<p> Determination of availability is determined by the HAL. Creation attempts (if requested\n by registration of interface) will be done on any mode changes.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onNewRttController' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback'>com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback</span><br/><a href='source/InterfaceRttControllerLifecycleCallback.html#com-android-server-wifi-HalDeviceManager-InterfaceRttControllerLifecycleCallback-method-onNewRttController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback-method-onNewRttController' class='name expandable'>onNewRttController</a>( <span class='pre'>controller</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an RTT controller was created (or for newly registered listeners - if it\n was already available). ...</div><div class='long'><p>Called when an RTT controller was created (or for newly registered listeners - if it\n was already available). The controller provided by this callback may be destroyed by\n the HAL at which point the <a href=\"#!/api/com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback-method-onRttControllerDestroyed\" rel=\"com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback-method-onRttControllerDestroyed\" class=\"docClass\">onRttControllerDestroyed</a>() will be called.</p>\n\n<p> Note: this callback can be triggered to replace an existing controller (instead of\n calling the Destroyed callback in between).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {IWifiRttController}<div class='sub-desc'><p>The RTT controller object.</p>\n</div></li></ul></div></div></div><div id='method-onRttControllerDestroyed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback'>com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback</span><br/><a href='source/InterfaceRttControllerLifecycleCallback.html#com-android-server-wifi-HalDeviceManager-InterfaceRttControllerLifecycleCallback-method-onRttControllerDestroyed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback-method-onRttControllerDestroyed' class='name expandable'>onRttControllerDestroyed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the previously provided RTT controller is destroyed. ...</div><div class='long'><p>Called when the previously provided RTT controller is destroyed. Clients must discard\n their copy. A new copy may be provided later by\n <a href=\"#!/api/com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback-method-onNewRttController\" rel=\"com.android.server.wifi.HalDeviceManager.InterfaceRttControllerLifecycleCallback-method-onNewRttController\" class=\"docClass\">onNewRttController</a>(IWifiRttController).</p>\n</div></div></div></div></div></div></div>","meta":{}});