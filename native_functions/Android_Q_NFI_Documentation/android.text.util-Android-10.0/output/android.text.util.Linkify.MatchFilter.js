Ext.data.JsonP.android_text_util_Linkify_MatchFilter({"tagname":"class","name":"android.text.util.Linkify.MatchFilter","autodetected":{},"files":[{"filename":"MatchFilter.js","href":"MatchFilter.html#android-text-util-Linkify-MatchFilter"}],"members":[{"name":"acceptMatch","tagname":"method","owner":"android.text.util.Linkify.MatchFilter","id":"method-acceptMatch","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.util.Linkify.MatchFilter","short_doc":"MatchFilter enables client code to have more control over\n  what is allowed to match and become a link, and what is not. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/MatchFilter.html#android-text-util-Linkify-MatchFilter' target='_blank'>MatchFilter.js</a></div></pre><div class='doc-contents'><p>MatchFilter enables client code to have more control over\n  what is allowed to match and become a link, and what is not.</p>\n\n<p>  For example:  when matching web URLs you would like things like\n  http://www.example.com to match, as well as just example.com itelf.\n  However, you would not want to match against the domain in\n  support@example.com.  So, when matching against a web URL pattern you\n  might also include a MatchFilter that disallows the match if it is\n  immediately preceded by an at-sign (@).</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acceptMatch' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.util.Linkify.MatchFilter'>android.text.util.Linkify.MatchFilter</span><br/><a href='source/MatchFilter.html#android-text-util-Linkify-MatchFilter-method-acceptMatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.util.Linkify.MatchFilter-method-acceptMatch' class='name expandable'>acceptMatch</a>( <span class='pre'>s, start, end</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Examines the character span matched by the pattern and determines\n  if the match should be turned into an actionable ...</div><div class='long'><p>Examines the character span matched by the pattern and determines\n  if the match should be turned into an actionable link.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : Object {CharSequence}<div class='sub-desc'><p>The body of text against which the pattern\n                  was matched</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>The index of the first character in s that was\n                  matched by the pattern - inclusive</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>The index of the last character in s that was\n                  matched - exclusive</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether this match should be turned into a link</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});