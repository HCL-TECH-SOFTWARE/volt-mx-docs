Ext.data.JsonP.android_database_ContentObserver({"tagname":"class","name":"android.database.ContentObserver","autodetected":{},"files":[{"filename":"ContentObserver.js","href":"ContentObserver.html#android-database-ContentObserver"}],"extends":"java.lang.Object","members":[{"name":"deliverSelfNotifications","tagname":"method","owner":"android.database.ContentObserver","id":"method-deliverSelfNotifications","meta":{}},{"name":"dispatchChange","tagname":"method","owner":"android.database.ContentObserver","id":"method-dispatchChange","meta":{}},{"name":"getContentObserver","tagname":"method","owner":"android.database.ContentObserver","id":"method-getContentObserver","meta":{}},{"name":"releaseContentObserver","tagname":"method","owner":"android.database.ContentObserver","id":"method-releaseContentObserver","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.database.ContentObserver","short_doc":"Receives call backs for changes to content. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.database.ContentObserver</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ContentObserver.html#android-database-ContentObserver' target='_blank'>ContentObserver.js</a></div></pre><div class='doc-contents'><p>Receives call backs for changes to content.\n Must be implemented by objects which are added to a <a href=\"#!/api/android.database.ContentObservable\" rel=\"android.database.ContentObservable\" class=\"docClass\">android.database.ContentObservable</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-deliverSelfNotifications' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.ContentObserver'>android.database.ContentObserver</span><br/><a href='source/ContentObserver.html#android-database-ContentObserver-method-deliverSelfNotifications' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.ContentObserver-method-deliverSelfNotifications' class='name expandable'>deliverSelfNotifications</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this observer is interested receiving self-change notifications. ...</div><div class='long'><p>Returns true if this observer is interested receiving self-change notifications.</p>\n\n<p> Subclasses should override this method to indicate whether the observer\n is interested in receiving notifications for changes that it made to the\n content itself.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if self-change notifications should be delivered to the observer.</p>\n</div></li></ul></div></div></div><div id='method-dispatchChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.ContentObserver'>android.database.ContentObserver</span><br/><a href='source/ContentObserver.html#android-database-ContentObserver-method-dispatchChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.ContentObserver-method-dispatchChange' class='name expandable'>dispatchChange</a>( <span class='pre'>selfChange, uri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dispatches a change notification to the observer. ...</div><div class='long'><p>Dispatches a change notification to the observer.\n Includes the changed content Uri when available.\n <p>\n If a Handler was supplied to the <a href=\"#!/api/android.database.ContentObserver\" rel=\"android.database.ContentObserver\" class=\"docClass\">android.database.ContentObserver</a> constructor,\n then a call to the onChange method is posted to the handler's message queue.\n Otherwise, the onChange method is invoked immediately on this thread.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selfChange</span> : Boolean<div class='sub-desc'><p>True if this is a self-change notification.</p>\n</div></li><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The Uri of the changed content, or null if unknown.</p>\n</div></li></ul></div></div></div><div id='method-getContentObserver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.ContentObserver'>android.database.ContentObserver</span><br/><a href='source/ContentObserver.html#android-database-ContentObserver-method-getContentObserver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.ContentObserver-method-getContentObserver' class='name expandable'>getContentObserver</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets access to the binder transport object. ...</div><div class='long'><p>Gets access to the binder transport object. Not for public consumption.</p>\n\n<p> {@hide}</p>\n</div></div></div><div id='method-releaseContentObserver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.ContentObserver'>android.database.ContentObserver</span><br/><a href='source/ContentObserver.html#android-database-ContentObserver-method-releaseContentObserver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.ContentObserver-method-releaseContentObserver' class='name expandable'>releaseContentObserver</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets access to the binder transport object, and unlinks the transport object\n from the ContentObserver. ...</div><div class='long'><p>Gets access to the binder transport object, and unlinks the transport object\n from the ContentObserver. Not for public consumption.</p>\n\n<p> {@hide}</p>\n</div></div></div></div></div></div></div>","meta":{}});