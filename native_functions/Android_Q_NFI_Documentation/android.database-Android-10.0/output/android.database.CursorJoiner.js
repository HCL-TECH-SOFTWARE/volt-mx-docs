Ext.data.JsonP.android_database_CursorJoiner({"tagname":"class","name":"android.database.CursorJoiner","autodetected":{},"files":[{"filename":"CursorJoiner.js","href":"CursorJoiner.html#android-database-CursorJoiner"}],"extends":"java.lang.Object","members":[{"name":"hasNext","tagname":"method","owner":"android.database.CursorJoiner","id":"method-hasNext","meta":{}},{"name":"iterator","tagname":"method","owner":"android.database.CursorJoiner","id":"method-iterator","meta":{}},{"name":"next","tagname":"method","owner":"android.database.CursorJoiner","id":"method-next","meta":{}},{"name":"remove","tagname":"method","owner":"android.database.CursorJoiner","id":"method-remove","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.database.CursorJoiner","short_doc":"implements java.util.Iterator\n\n implements java.lang.Iterable\n\nDoes a join on two cursors using the specified columns. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.database.CursorJoiner</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CursorJoiner.html#android-database-CursorJoiner' target='_blank'>CursorJoiner.js</a></div></pre><div class='doc-contents'><p>implements java.util.Iterator</p>\n\n<p> implements java.lang.Iterable</p>\n\n<p>Does a join on two cursors using the specified columns. The cursors must already\n be sorted on each of the specified columns in ascending order. This joiner only\n supports the case where the tuple of key column values is unique.\n <p>\n Typical usage:</p>\n\n<pre> CursorJoiner joiner = new CursorJoiner(cursorA, keyColumnsofA, cursorB, keyColumnsofB);\n for (CursorJoiner.Result joinerResult : joiner) {\n     switch (joinerResult) {\n         case LEFT:\n             // handle case where a row in cursorA is unique\n             break;\n         case RIGHT:\n             // handle case where a row in cursorB is unique\n             break;\n         case BOTH:\n             // handle case where a row with the same key is in both cursors\n             break;\n     }\n }\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-hasNext' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.CursorJoiner'>android.database.CursorJoiner</span><br/><a href='source/CursorJoiner.html#android-database-CursorJoiner-method-hasNext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.CursorJoiner-method-hasNext' class='name expandable'>hasNext</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether or not there are more rows to compare using next(). ...</div><div class='long'><p>Returns whether or not there are more rows to compare using next().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if there are more rows to compare</p>\n</div></li></ul></div></div></div><div id='method-iterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.CursorJoiner'>android.database.CursorJoiner</span><br/><a href='source/CursorJoiner.html#android-database-CursorJoiner-method-iterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.CursorJoiner-method-iterator' class='name expandable'>iterator</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-next' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.CursorJoiner'>android.database.CursorJoiner</span><br/><a href='source/CursorJoiner.html#android-database-CursorJoiner-method-next' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.CursorJoiner-method-next' class='name expandable'>next</a>( <span class='pre'></span> ) : Object {android.database.CursorJoiner.Result}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the comparison result of the next row from each cursor. ...</div><div class='long'><p>Returns the comparison result of the next row from each cursor. If one cursor\n has no more rows but the other does then subsequent calls to this will indicate that\n the remaining rows are unique.\n <p>\n The caller must check that hasNext() returns true before calling this.\n <p>\n Once next() has been called the cursors specified in the result of the call to\n next() are guaranteed to point to the row that was indicated. Reading values\n from the cursor that was not indicated in the call to next() will result in\n undefined behavior.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.database.CursorJoiner.Result}</span><div class='sub-desc'><p>LEFT, if the row pointed to by the left cursor is unique, RIGHT\n   if the row pointed to by the right cursor is unique, BOTH if the rows in both\n   cursors are the same.</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.CursorJoiner'>android.database.CursorJoiner</span><br/><a href='source/CursorJoiner.html#android-database-CursorJoiner-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.CursorJoiner-method-remove' class='name expandable'>remove</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});