Ext.data.JsonP.java_text_CollationElementIterator({"tagname":"class","name":"java.text.CollationElementIterator","autodetected":{},"files":[{"filename":"CollationElementIterator.js","href":"CollationElementIterator.html#java-text-CollationElementIterator"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Helena Shih, Laura Werner, Richard Gillam","email":null}],"members":[{"name":"NULLORDER","tagname":"property","owner":"java.text.CollationElementIterator","id":"property-NULLORDER","meta":{}},{"name":"getMaxExpansion","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-getMaxExpansion","meta":{}},{"name":"getOffset","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-getOffset","meta":{}},{"name":"next","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-next","meta":{}},{"name":"previous","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-previous","meta":{}},{"name":"primaryOrder","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-primaryOrder","meta":{}},{"name":"reset","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-reset","meta":{}},{"name":"secondaryOrder","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-secondaryOrder","meta":{}},{"name":"setOffset","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-setOffset","meta":{}},{"name":"setText","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-setText","meta":{}},{"name":"tertiaryOrder","tagname":"method","owner":"java.text.CollationElementIterator","id":"method-tertiaryOrder","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.text.CollationElementIterator","short_doc":"The CollationElementIterator class is used as an iterator\n to walk through each character of an international string. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.text.CollationElementIterator</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CollationElementIterator.html#java-text-CollationElementIterator' target='_blank'>CollationElementIterator.js</a></div></pre><div class='doc-contents'><p>The <code>CollationElementIterator</code> class is used as an iterator\n to walk through each character of an international string. Use the iterator\n to return the ordering priority of the positioned character. The ordering\n priority of a character, which we refer to as a key, defines how a character\n is collated in the given collation object.</p>\n\n<p> <p>\n For example, consider the following in Spanish:\n <blockquote></blockquote></p>\n\n<pre> \"ca\" &rarr; the first key is key('c') and second key is key('a').\n \"cha\" &rarr; the first key is key('ch') and second key is key('a').\n </pre>\n\n\n<p> \n And in German,\n <blockquote></blockquote></p>\n\n<pre> \"Ã¤b\" &rarr; the first key is key('a'), the second key is key('e'), and\n the third key is key('b').\n </pre>\n\n\n<p> \n The key of a character is an integer composed of primary order(short),\n secondary order(byte), and tertiary order(byte). Java strictly defines\n the size and signedness of its primitive data types. Therefore, the static\n functions <code>primaryOrder</code>, <code>secondaryOrder</code>, and\n <code>tertiaryOrder</code> return <code>int</code>, <code>short</code>,\n and <code>short</code> respectively to ensure the correctness of the key\n value.</p>\n\n<p> <p>\n Example of the iterator usage,\n <blockquote></blockquote></p>\n\n<pre>\n  String testString = \"This is a test\";\n  Collator col = Collator.getInstance();\n  if (col instanceof RuleBasedCollator) {\n      RuleBasedCollator ruleBasedCollator = (RuleBasedCollator)col;\n      CollationElementIterator collationElementIterator = ruleBasedCollator.getCollationElementIterator(testString);\n      int primaryOrder = CollationElementIterator.primaryOrder(collationElementIterator.next());\n          :\n  }\n </pre>\n\n\n<p> </p>\n\n<p> <p>\n <code>CollationElementIterator.next</code> returns the collation order\n of the next character. A collation order consists of primary order,\n secondary order and tertiary order. The data type of the collation\n order is <strong>int</strong>. The first 16 bits of a collation order\n is its primary order; the next 8 bits is the secondary order and the\n last 8 bits is the tertiary order.</p>\n\n<p> <p><b>Note:</b> <code>CollationElementIterator</code> is a part of\n <code>RuleBasedCollator</code> implementation. It is only usable\n with <code>RuleBasedCollator</code> instances.</p>\n\n<p> @see                Collator\n @see                RuleBasedCollator</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-NULLORDER' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-property-NULLORDER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-property-NULLORDER' class='name expandable'>NULLORDER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Null order which indicates the end of string is reached by the\ncursor. ...</div><div class='long'><p>Null order which indicates the end of string is reached by the\ncursor.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getMaxExpansion' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-getMaxExpansion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-getMaxExpansion' class='name expandable'>getMaxExpansion</a>( <span class='pre'>order</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the maximum length of any expansion sequences that end\n with the specified comparison order. ...</div><div class='long'><p>Return the maximum length of any expansion sequences that end\n with the specified comparison order.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>order</span> : Number<div class='sub-desc'><p>a collation order returned by previous or next.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum length of any expansion sequences ending\n         with the specified order.</p>\n</div></li></ul></div></div></div><div id='method-getOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-getOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-getOffset' class='name expandable'>getOffset</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the character offset in the original text corresponding to the next\n collation element. ...</div><div class='long'><p>Returns the character offset in the original text corresponding to the next\n collation element.  (That is, getOffset() returns the position in the text\n corresponding to the collation element that will be returned by the next\n call to next().)  This value will always be the index of the FIRST character\n corresponding to the collation element (a contracting character sequence is\n when two or more characters all correspond to the same collation element).\n This means if you do setOffset(x) followed immediately by getOffset(), getOffset()\n won't necessarily return x.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The character offset in the original text corresponding to the collation\n element that will be returned by the next call to next().</p>\n</div></li></ul></div></div></div><div id='method-next' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-next' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-next' class='name expandable'>next</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the next collation element in the string. ...</div><div class='long'><p>Get the next collation element in the string.  <p>This iterator iterates\n over a sequence of collation elements that were built from the string.\n Because there isn't necessarily a one-to-one mapping from characters to\n collation elements, this doesn't mean the same thing as \"return the\n collation element [or ordering priority] of the next character in the\n string\".</p>\n <p>This function returns the collation element that the iterator is currently\n pointing to and then updates the internal pointer to point to the next element.\n previous() updates the pointer first and then returns the element.  This\n means that when you change direction while iterating (i.e., call next() and\n then call previous(), or call previous() and then call next()), you'll get\n back the same element twice.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next collation element</p>\n</div></li></ul></div></div></div><div id='method-previous' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-previous' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-previous' class='name expandable'>previous</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the previous collation element in the string. ...</div><div class='long'><p>Get the previous collation element in the string.  <p>This iterator iterates\n over a sequence of collation elements that were built from the string.\n Because there isn't necessarily a one-to-one mapping from characters to\n collation elements, this doesn't mean the same thing as \"return the\n collation element [or ordering priority] of the previous character in the\n string\".</p>\n <p>This function updates the iterator's internal pointer to point to the\n collation element preceding the one it's currently pointing to and then\n returns that element, while next() returns the current element and then\n updates the pointer.  This means that when you change direction while\n iterating (i.e., call next() and then call previous(), or call previous()\n and then call next()), you'll get back the same element twice.</p></p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the previous collation element</p>\n</div></li></ul></div></div></div><div id='method-primaryOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-primaryOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-primaryOrder' class='name expandable'>primaryOrder</a>( <span class='pre'>order</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the primary component of a collation element. ...</div><div class='long'><p>Return the primary component of a collation element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>order</span> : Number<div class='sub-desc'><p>the collation element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the element's primary component</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets the cursor to the beginning of the string. ...</div><div class='long'><p>Resets the cursor to the beginning of the string.  The next call\n to next() will return the first collation element in the string.</p>\n</div></div></div><div id='method-secondaryOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-secondaryOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-secondaryOrder' class='name expandable'>secondaryOrder</a>( <span class='pre'>order</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the secondary component of a collation element. ...</div><div class='long'><p>Return the secondary component of a collation element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>order</span> : Number<div class='sub-desc'><p>the collation element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the element's secondary component</p>\n</div></li></ul></div></div></div><div id='method-setOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-setOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-setOffset' class='name expandable'>setOffset</a>( <span class='pre'>newOffset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the iterator to point to the collation element corresponding to\n the specified character (the parameter is a CHA...</div><div class='long'><p>Sets the iterator to point to the collation element corresponding to\n the specified character (the parameter is a CHARACTER offset in the\n original string, not an offset into its corresponding sequence of\n collation elements).  The value returned by the next call to next()\n will be the collation element corresponding to the specified position\n in the text.  If that position is in the middle of a contracting\n character sequence, the result of the next call to next() is the\n collation element for that sequence.  This means that getOffset()\n is not guaranteed to return the same value as was passed to a preceding\n call to setOffset().</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newOffset</span> : Number<div class='sub-desc'><p>The new character offset into the original text.</p>\n</div></li></ul></div></div></div><div id='method-setText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-setText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-setText' class='name expandable'>setText</a>( <span class='pre'>source</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a new string over which to iterate. ...</div><div class='long'><p>Set a new string over which to iterate.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {CharacterIterator}<div class='sub-desc'><p>the new source text.</p>\n</div></li></ul></div></div></div><div id='method-tertiaryOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.CollationElementIterator'>java.text.CollationElementIterator</span><br/><a href='source/CollationElementIterator.html#java-text-CollationElementIterator-method-tertiaryOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.CollationElementIterator-method-tertiaryOrder' class='name expandable'>tertiaryOrder</a>( <span class='pre'>order</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the tertiary component of a collation element. ...</div><div class='long'><p>Return the tertiary component of a collation element.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>order</span> : Number<div class='sub-desc'><p>the collation element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the element's tertiary component</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});