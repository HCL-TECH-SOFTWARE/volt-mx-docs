Ext.data.JsonP.java_text_DecimalFormat({"tagname":"class","name":"java.text.DecimalFormat","autodetected":{},"files":[{"filename":"DecimalFormat.js","href":"DecimalFormat.html#java-text-DecimalFormat"}],"extends":"java.text.NumberFormat","author":[{"tagname":"author","name":"Mark Davis","email":null},{"tagname":"author","name":"Alan Liu","email":null}],"members":[{"name":"FRACTION_FIELD","tagname":"property","owner":"java.text.NumberFormat","id":"property-FRACTION_FIELD","meta":{}},{"name":"INTEGER_FIELD","tagname":"property","owner":"java.text.NumberFormat","id":"property-INTEGER_FIELD","meta":{}},{"name":"applyLocalizedPattern","tagname":"method","owner":"java.text.DecimalFormat","id":"method-applyLocalizedPattern","meta":{}},{"name":"applyPattern","tagname":"method","owner":"java.text.DecimalFormat","id":"method-applyPattern","meta":{}},{"name":"clone","tagname":"method","owner":"java.text.DecimalFormat","id":"method-clone","meta":{}},{"name":"equals","tagname":"method","owner":"java.text.DecimalFormat","id":"method-equals","meta":{}},{"name":"format","tagname":"method","owner":"java.text.DecimalFormat","id":"method-format","meta":{}},{"name":"formatToCharacterIterator","tagname":"method","owner":"java.text.DecimalFormat","id":"method-formatToCharacterIterator","meta":{}},{"name":"getAvailableLocales","tagname":"method","owner":"java.text.NumberFormat","id":"method-getAvailableLocales","meta":{}},{"name":"getCurrency","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getCurrency","meta":{}},{"name":"getCurrencyInstance","tagname":"method","owner":"java.text.NumberFormat","id":"method-getCurrencyInstance","meta":{}},{"name":"getDecimalFormatSymbols","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getDecimalFormatSymbols","meta":{}},{"name":"getGroupingSize","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getGroupingSize","meta":{}},{"name":"getInstance","tagname":"method","owner":"java.text.NumberFormat","id":"method-getInstance","meta":{}},{"name":"getIntegerInstance","tagname":"method","owner":"java.text.NumberFormat","id":"method-getIntegerInstance","meta":{}},{"name":"getMaximumFractionDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getMaximumFractionDigits","meta":{}},{"name":"getMaximumIntegerDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getMaximumIntegerDigits","meta":{}},{"name":"getMinimumFractionDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getMinimumFractionDigits","meta":{}},{"name":"getMinimumIntegerDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getMinimumIntegerDigits","meta":{}},{"name":"getMultiplier","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getMultiplier","meta":{}},{"name":"getNegativePrefix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getNegativePrefix","meta":{}},{"name":"getNegativeSuffix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getNegativeSuffix","meta":{}},{"name":"getNumberInstance","tagname":"method","owner":"java.text.NumberFormat","id":"method-getNumberInstance","meta":{}},{"name":"getPercentInstance","tagname":"method","owner":"java.text.NumberFormat","id":"method-getPercentInstance","meta":{}},{"name":"getPositivePrefix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getPositivePrefix","meta":{}},{"name":"getPositiveSuffix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getPositiveSuffix","meta":{}},{"name":"getRoundingMode","tagname":"method","owner":"java.text.DecimalFormat","id":"method-getRoundingMode","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.text.DecimalFormat","id":"method-hashCode","meta":{}},{"name":"isDecimalSeparatorAlwaysShown","tagname":"method","owner":"java.text.DecimalFormat","id":"method-isDecimalSeparatorAlwaysShown","meta":{}},{"name":"isGroupingUsed","tagname":"method","owner":"java.text.DecimalFormat","id":"method-isGroupingUsed","meta":{}},{"name":"isParseBigDecimal","tagname":"method","owner":"java.text.DecimalFormat","id":"method-isParseBigDecimal","meta":{}},{"name":"isParseIntegerOnly","tagname":"method","owner":"java.text.DecimalFormat","id":"method-isParseIntegerOnly","meta":{}},{"name":"parse","tagname":"method","owner":"java.text.DecimalFormat","id":"method-parse","meta":{}},{"name":"parseObject","tagname":"method","owner":"java.text.NumberFormat","id":"method-parseObject","meta":{}},{"name":"setCurrency","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setCurrency","meta":{}},{"name":"setDecimalFormatSymbols","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setDecimalFormatSymbols","meta":{}},{"name":"setDecimalSeparatorAlwaysShown","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setDecimalSeparatorAlwaysShown","meta":{}},{"name":"setGroupingSize","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setGroupingSize","meta":{}},{"name":"setGroupingUsed","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setGroupingUsed","meta":{}},{"name":"setMaximumFractionDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setMaximumFractionDigits","meta":{}},{"name":"setMaximumIntegerDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setMaximumIntegerDigits","meta":{}},{"name":"setMinimumFractionDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setMinimumFractionDigits","meta":{}},{"name":"setMinimumIntegerDigits","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setMinimumIntegerDigits","meta":{}},{"name":"setMultiplier","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setMultiplier","meta":{}},{"name":"setNegativePrefix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setNegativePrefix","meta":{}},{"name":"setNegativeSuffix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setNegativeSuffix","meta":{}},{"name":"setParseBigDecimal","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setParseBigDecimal","meta":{}},{"name":"setParseIntegerOnly","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setParseIntegerOnly","meta":{}},{"name":"setPositivePrefix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setPositivePrefix","meta":{}},{"name":"setPositiveSuffix","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setPositiveSuffix","meta":{}},{"name":"setRoundingMode","tagname":"method","owner":"java.text.DecimalFormat","id":"method-setRoundingMode","meta":{}},{"name":"toLocalizedPattern","tagname":"method","owner":"java.text.DecimalFormat","id":"method-toLocalizedPattern","meta":{}},{"name":"toPattern","tagname":"method","owner":"java.text.DecimalFormat","id":"method-toPattern","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.text.DecimalFormat","short_doc":"DecimalFormat is a concrete subclass of\n NumberFormat that formats decimal numbers. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.text.Format","java.text.NumberFormat"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.text.Format' rel='java.text.Format' class='docClass'>java.text.Format</a><div class='subclass '><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='docClass'>java.text.NumberFormat</a><div class='subclass '><strong>java.text.DecimalFormat</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/DecimalFormat.html#java-text-DecimalFormat' target='_blank'>DecimalFormat.js</a></div></pre><div class='doc-contents'><p><code>DecimalFormat</code> is a concrete subclass of\n <code>NumberFormat</code> that formats decimal numbers. It has a variety of\n features designed to make it possible to parse and format numbers in any\n locale, including support for Western, Arabic, and Indic digits.  It also\n supports different kinds of numbers, including integers (123), fixed-point\n numbers (123.4), scientific notation (1.23E4), percentages (12%), and\n currency amounts ($123).  All of these can be localized.</p>\n\n<p> <p>To obtain a <code>NumberFormat</code> for a specific locale, including the\n default locale, call one of <code>NumberFormat</code>'s factory methods, such\n as <code>getInstance()</code>.  In general, do not call the\n <code>DecimalFormat</code> constructors directly, since the\n <code>NumberFormat</code> factory methods may return subclasses other than\n <code>DecimalFormat</code>. If you need to customize the format object, do\n something like this:</p>\n\n<p> <blockquote></blockquote></p>\n\n<pre> NumberFormat f = NumberFormat.getInstance(loc);\n if (f instanceof DecimalFormat) {\n     ((DecimalFormat) f).setDecimalSeparatorAlwaysShown(true);\n }\n </pre>\n\n\n<p></p>\n\n<p> <p>A <code>DecimalFormat</code> comprises a <em>pattern</em> and a set of\n <em>symbols</em>.  The pattern may be set directly using\n <code>applyPattern()</code>, or indirectly using the API methods.  The\n symbols are stored in a <code>DecimalFormatSymbols</code> object.  When using\n the <code>NumberFormat</code> factory methods, the pattern and symbols are\n read from localized <code>ResourceBundle</code>s.</p>\n\n<p> <h3>Patterns</h3></p>\n\n<p> <code>DecimalFormat</code> patterns have the following syntax:\n <blockquote></blockquote></p>\n\n<pre> <i>Pattern:</i>\n         <i>PositivePattern</i>\n         <i>PositivePattern</i> ; <i>NegativePattern</i>\n <i>PositivePattern:</i>\n         <i>Prefix<sub>opt</sub></i> <i>Number</i> <i>Suffix<sub>opt</sub></i>\n <i>NegativePattern:</i>\n         <i>Prefix<sub>opt</sub></i> <i>Number</i> <i>Suffix<sub>opt</sub></i>\n <i>Prefix:</i>\n         any Unicode characters except &#92;uFFFE, &#92;uFFFF, and special characters\n <i>Suffix:</i>\n         any Unicode characters except &#92;uFFFE, &#92;uFFFF, and special characters\n <i>Number:</i>\n         <i>Integer</i> <i>Exponent<sub>opt</sub></i>\n         <i>Integer</i> . <i>Fraction</i> <i>Exponent<sub>opt</sub></i>\n <i>Integer:</i>\n         <i>MinimumInteger</i>\n         #\n         # <i>Integer</i>\n         # , <i>Integer</i>\n <i>MinimumInteger:</i>\n         0\n         0 <i>MinimumInteger</i>\n         0 , <i>MinimumInteger</i>\n <i>Fraction:</i>\n         <i>MinimumFraction<sub>opt</sub></i> <i>OptionalFraction<sub>opt</sub></i>\n <i>MinimumFraction:</i>\n         0 <i>MinimumFraction<sub>opt</sub></i>\n <i>OptionalFraction:</i>\n         # <i>OptionalFraction<sub>opt</sub></i>\n <i>Exponent:</i>\n         E <i>MinimumExponent</i>\n <i>MinimumExponent:</i>\n         0 <i>MinimumExponent<sub>opt</sub></i>\n </pre>\n\n\n<p></p>\n\n<p> <p>A <code>DecimalFormat</code> pattern contains a positive and negative\n subpattern, for example, <code>\"#,##0.00;(#,##0.00)\"</code>.  Each\n subpattern has a prefix, numeric part, and suffix. The negative subpattern\n is optional; if absent, then the positive subpattern prefixed with the\n localized minus sign (<code>'-'</code> in most locales) is used as the\n negative subpattern. That is, <code>\"0.00\"</code> alone is equivalent to\n <code>\"0.00;-0.00\"</code>.  If there is an explicit negative subpattern, it\n serves only to specify the negative prefix and suffix; the number of digits,\n minimal digits, and other characteristics are all the same as the positive\n pattern. That means that <code>\"#,##0.0#;(#)\"</code> produces precisely\n the same behavior as <code>\"#,##0.0#;(#,##0.0#)\"</code>.</p>\n\n<p> <p>The prefixes, suffixes, and various symbols used for infinity, digits,\n thousands separators, decimal separators, etc. may be set to arbitrary\n values, and they will appear properly during formatting.  However, care must\n be taken that the symbols and strings do not conflict, or parsing will be\n unreliable.  For example, either the positive and negative prefixes or the\n suffixes must be distinct for <code>DecimalFormat.parse()</code> to be able\n to distinguish positive from negative values.  (If they are identical, then\n <code>DecimalFormat</code> will behave as if no negative subpattern was\n specified.)  Another example is that the decimal separator and thousands\n separator should be distinct characters, or parsing will be impossible.</p>\n\n<p> <p>The grouping separator is commonly used for thousands, but in some\n countries it separates ten-thousands. The grouping size is a constant number\n of digits between the grouping characters, such as 3 for 100,000,000 or 4 for\n 1,0000,0000.  If you supply a pattern with multiple grouping characters, the\n interval between the last one and the end of the integer is the one that is\n used. So <code>\"#,##,###,####\"</code> == <code>\"######,####\"</code> ==\n <code>\"##,####,####\"</code>.</p>\n\n<p> <h4>Special Pattern Characters</h4></p>\n\n<p> <p>Many characters in a pattern are taken literally; they are matched during\n parsing and output unchanged during formatting.  Special characters, on the\n other hand, stand for other characters, strings, or classes of characters.\n They must be quoted, unless noted otherwise, if they are to appear in the\n prefix or suffix as literals.</p>\n\n<p> <p>The characters listed here are used in non-localized patterns.  Localized\n patterns use the corresponding characters taken from this formatter's\n <code>DecimalFormatSymbols</code> object instead, and these characters lose\n their special status.  Two exceptions are the currency sign and quote, which\n are not localized.</p>\n\n<p> <blockquote>\n <table border=0 cellspacing=3 cellpadding=0 summary=\"Chart showing symbol,\n  location, localized, and meaning.\">\n     <tr style=\"background-color: rgb(204, 204, 255);\">\n          <th align=left>Symbol\n          <th align=left>Location\n          <th align=left>Localized?\n          <th align=left>Meaning\n     <tr valign=top>\n          <td><code>0</code>\n          <td>Number\n          <td>Yes\n          <td>Digit\n     <tr style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">\n          <td><code>#</code>\n          <td>Number\n          <td>Yes\n          <td>Digit, zero shows as absent\n     <tr valign=top>\n          <td><code>.</code>\n          <td>Number\n          <td>Yes\n          <td>Decimal separator or monetary decimal separator\n     <tr style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">\n          <td><code>-</code>\n          <td>Number\n          <td>Yes\n          <td>Minus sign\n     <tr valign=top>\n          <td><code>,</code>\n          <td>Number\n          <td>Yes\n          <td>Grouping separator\n     <tr style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">\n          <td><code>E</code>\n          <td>Number\n          <td>Yes\n          <td>Separates mantissa and exponent in scientific notation.\n              <em>Need not be quoted in prefix or suffix.</em>\n     <tr valign=top>\n          <td><code>;</code>\n          <td>Subpattern boundary\n          <td>Yes\n          <td>Separates positive and negative subpatterns\n     <tr style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">\n          <td><code>%</code>\n          <td>Prefix or suffix\n          <td>Yes\n          <td>Multiply by 100 and show as percentage\n     <tr valign=top>\n          <td><code>&#92;u2030</code>\n          <td>Prefix or suffix\n          <td>Yes\n          <td>Multiply by 1000 and show as per mille value\n     <tr style=\"vertical-align: top; background-color: rgb(238, 238, 255);\">\n          <td><code>&#164;</code> (<code>&#92;u00A4</code>)\n          <td>Prefix or suffix\n          <td>No\n          <td>Currency sign, replaced by currency symbol.  If\n              doubled, replaced by international currency symbol.\n              If present in a pattern, the monetary decimal separator\n              is used instead of the decimal separator.\n     <tr valign=top>\n          <td><code>'</code>\n          <td>Prefix or suffix\n          <td>No\n          <td>Used to quote special characters in a prefix or suffix,\n              for example, <code>\"'#'#\"</code> formats 123 to\n              <code>\"#123\"</code>.  To create a single quote\n              itself, use two in a row: <code>\"# o''clock\"</code>.\n </td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></td></td></td></td></tr></th></th></th></th></tr></table>\n </blockquote></p>\n\n<p> <h4>Scientific Notation</h4></p>\n\n<p> <p>Numbers in scientific notation are expressed as the product of a mantissa\n and a power of ten, for example, 1234 can be expressed as 1.234 x 10<sup>3</sup>.  The\n mantissa is often in the range 1.0 &le; x {@literal &lt;} 10.0, but it need not\n be.\n <code>DecimalFormat</code> can be instructed to format and parse scientific\n notation <em>only via a pattern</em>; there is currently no factory method\n that creates a scientific notation format.  In a pattern, the exponent\n character immediately followed by one or more digit characters indicates\n scientific notation.  Example: <code>\"0.###E0\"</code> formats the number\n 1234 as <code>\"1.234E3\"</code>.</p>\n\n<p> <ul>\n <li>The number of digit characters after the exponent character gives the\n minimum exponent digit count.  There is no maximum.  Negative exponents are\n formatted using the localized minus sign, <em>not</em> the prefix and suffix\n from the pattern.  This allows patterns such as <code>\"0.###E0 m/s\"</code>.</li></ul></p>\n\n<p> <li>The minimum and maximum number of integer digits are interpreted\n together:</li></p>\n\n<p> <ul>\n <li>If the maximum number of integer digits is greater than their minimum number\n and greater than 1, it forces the exponent to be a multiple of the maximum\n number of integer digits, and the minimum number of integer digits to be\n interpreted as 1.  The most common use of this is to generate\n <em>engineering notation</em>, in which the exponent is a multiple of three,\n e.g., <code>\"##0.#####E0\"</code>. Using this pattern, the number 12345\n formats to <code>\"12.345E3\"</code>, and 123456 formats to\n <code>\"123.456E3\"</code>.</li></ul></p>\n\n<p> <li>Otherwise, the minimum number of integer digits is achieved by adjusting the\n exponent.  Example: 0.00123 formatted with <code>\"00.###E0\"</code> yields\n <code>\"12.3E-4\"</code>.\n </li></p>\n\n<p> <li>The number of significant digits in the mantissa is the sum of the\n <em>minimum integer</em> and <em>maximum fraction</em> digits, and is\n unaffected by the maximum integer digits.  For example, 12345 formatted with\n <code>\"##0.##E0\"</code> is <code>\"12.3E3\"</code>. To show all digits, set\n the significant digits count to zero.  The number of significant digits\n does not affect parsing.</li></p>\n\n<p> <li>Exponential patterns may not contain grouping separators.\n </li></p>\n\n<p> <h4>Rounding</h4></p>\n\n<p> <code>DecimalFormat</code> provides rounding modes defined in\n java.math.RoundingMode for formatting.  By default, it uses\n RoundingMode.HALF_EVEN.</p>\n\n<p> <h4>Digits</h4></p>\n\n<p> For formatting, <code>DecimalFormat</code> uses the ten consecutive\n characters starting with the localized zero digit defined in the\n <code>DecimalFormatSymbols</code> object as digits. For parsing, these\n digits as well as all Unicode decimal digits, as defined by\n Character.digit, are recognized.</p>\n\n<p> <h4>Special Values</h4></p>\n\n<p> <p><code>NaN</code> is formatted as a string, which typically has a single character\n <code>&#92;uFFFD</code>.  This string is determined by the\n <code>DecimalFormatSymbols</code> object.  This is the only value for which\n the prefixes and suffixes are not used.</p>\n\n<p> <p>Infinity is formatted as a string, which typically has a single character\n <code>&#92;u221E</code>, with the positive or negative prefixes and suffixes\n applied.  The infinity string is determined by the\n <code>DecimalFormatSymbols</code> object.</p>\n\n<p> <p>Negative zero (<code>\"-0\"</code>) parses to\n <ul>\n <li><code>BigDecimal(0)</code> if <code>isParseBigDecimal()</code> is\n true,\n <li><code>Long(0)</code> if <code>isParseBigDecimal()</code> is false\n     and <code>isParseIntegerOnly()</code> is true,\n <li><code>Double(-0.0)</code> if both <code>isParseBigDecimal()</code>\n and <code>isParseIntegerOnly()</code> are false.\n </li></li></li></ul></p>\n\n<p> <h4><a name=\"synchronization\">Synchronization</a></h4></p>\n\n<p> <p>\n Decimal formats are generally not synchronized.\n It is recommended to create separate format instances for each thread.\n If multiple threads access a format concurrently, it must be synchronized\n externally.</p>\n\n<p> <h4>Example</h4></p>\n\n<p> <blockquote><pre>{@code\n <strong>// Print out a number using the localized number, integer, currency,\n // and percent format for each locale</strong>\n Locale[] locales = NumberFormat.getAvailableLocales();\n double myNumber = -1234.56;\n NumberFormat form;\n for (int j = 0; j &lt; 4; ++j) {\n     System.out.println(\"FORMAT\");\n     for (int i = 0; i &lt; locales.length; ++i) {\n         if (locales[i].getCountry().length() == 0) {\n            continue; // Skip language-only locales\n         }\n         System.out.print(locales[i].getDisplayName());\n         switch (j) {\n         case 0:\n             form = NumberFormat.getInstance(locales[i]); break;\n         case 1:\n             form = NumberFormat.getIntegerInstance(locales[i]); break;\n         case 2:\n             form = NumberFormat.getCurrencyInstance(locales[i]); break;\n         default:\n             form = NumberFormat.getPercentInstance(locales[i]); break;\n         }\n         if (form instanceof DecimalFormat) {\n             System.out.print(\": \" + ((DecimalFormat) form).toPattern());\n         }\n         System.out.print(\" -> \" + form.format(myNumber));\n         try {\n             System.out.println(\" -> \" + form.parse(form.format(myNumber)));\n         } catch (ParseException e) {}\n     }\n }\n }</pre></blockquote></p>\n\n<p> @see          <a href=\"https://docs.oracle.com/javase/tutorial/i18n/format/decimalFormat.html\">Java Tutorial</a>\n @see          NumberFormat\n @see          DecimalFormatSymbols\n @see          ParsePosition</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-FRACTION_FIELD' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-property-FRACTION_FIELD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-property-FRACTION_FIELD' class='name expandable'>FRACTION_FIELD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-INTEGER_FIELD' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-property-INTEGER_FIELD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-property-INTEGER_FIELD' class='name expandable'>INTEGER_FIELD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-applyLocalizedPattern' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-applyLocalizedPattern' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-applyLocalizedPattern' class='name expandable'>applyLocalizedPattern</a>( <span class='pre'>pattern</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Apply the given pattern to this Format object. ...</div><div class='long'><p>Apply the given pattern to this Format object.  The pattern\n is assumed to be in a localized notation. A pattern is a\n short-hand specification for the various formatting properties.\n These properties can also be changed individually through the\n various setter methods.\n <p>\n There is no limit to integer digits set\n by this routine, since that is the typical end-user desire;\n use setMaximumInteger if you want to set a real value.\n For negative numbers, use a second pattern, separated by a semicolon\n <P>Example <code>\"#,#00.0#\"</code> &rarr; 1,234.56\n <P>This means a minimum of 2 integer digits, 1 fraction digit, and\n a maximum of 2 fraction digits.\n <p>Example: <code>\"#,#00.0#;(#,#00.0#)\"</code> for negatives in\n parentheses.\n <p>In negative patterns, the minimum and maximum counts are ignored;\n these are presumed to be set in the positive pattern.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pattern</span> : String<div class='sub-desc'><p>a new pattern\n@exception NullPointerException if <code>pattern</code> is null\n@exception IllegalArgumentException if the given pattern is invalid.</p>\n</div></li></ul></div></div></div><div id='method-applyPattern' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-applyPattern' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-applyPattern' class='name expandable'>applyPattern</a>( <span class='pre'>pattern</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Apply the given pattern to this Format object. ...</div><div class='long'><p>Apply the given pattern to this Format object.  A pattern is a\n short-hand specification for the various formatting properties.\n These properties can also be changed individually through the\n various setter methods.\n <p>\n There is no limit to integer digits set\n by this routine, since that is the typical end-user desire;\n use setMaximumInteger if you want to set a real value.\n For negative numbers, use a second pattern, separated by a semicolon\n <P>Example <code>\"#,#00.0#\"</code> &rarr; 1,234.56\n <P>This means a minimum of 2 integer digits, 1 fraction digit, and\n a maximum of 2 fraction digits.\n <p>Example: <code>\"#,#00.0#;(#,#00.0#)\"</code> for negatives in\n parentheses.\n <p>In negative patterns, the minimum and maximum counts are ignored;\n these are presumed to be set in the positive pattern.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pattern</span> : String<div class='sub-desc'><p>a new pattern\n@exception NullPointerException if <code>pattern</code> is null\n@exception IllegalArgumentException if the given pattern is invalid.</p>\n</div></li></ul></div></div></div><div id='method-clone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard override; no change in semantics. ...</div><div class='long'><p>Standard override; no change in semantics.</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-clone\" rel=\"java.text.NumberFormat-method-clone\" class=\"docClass\">java.text.NumberFormat.clone</a></p></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Overrides equals ...</div><div class='long'><p>Overrides equals</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-equals\" rel=\"java.text.NumberFormat-method-equals\" class=\"docClass\">java.text.NumberFormat.equals</a></p></div></div></div><div id='method-format' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-format' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-format' class='name expandable'>format</a>( <span class='pre'>number, result, fieldPosition</span> ) : Object {java.lang.StringBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Format a long to produce a string. ...</div><div class='long'><p>Format a long to produce a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>number</span> : Number<div class='sub-desc'><p>The long to format</p>\n</div></li><li><span class='pre'>result</span> : Object {StringBuffer}<div class='sub-desc'><p>where the text is to be appended</p>\n</div></li><li><span class='pre'>fieldPosition</span> : Object {FieldPosition}<div class='sub-desc'><p>On input: an alignment field, if desired.\n On output: the offsets of the alignment field.\n@exception ArithmeticException if rounding is needed with rounding\n                  mode being set to RoundingMode.UNNECESSARY</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.StringBuffer}</span><div class='sub-desc'><p>The formatted number string\n@see <a href=\"#!/api/java.text.FieldPosition\" rel=\"java.text.FieldPosition\" class=\"docClass\">java.text.FieldPosition</a></p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-format\" rel=\"java.text.NumberFormat-method-format\" class=\"docClass\">java.text.NumberFormat.format</a></p></div></div></div><div id='method-formatToCharacterIterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-formatToCharacterIterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-formatToCharacterIterator' class='name expandable'>formatToCharacterIterator</a>( <span class='pre'>obj, obj</span> ) : Object {java.text.AttributedCharacterIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats an Object producing an AttributedCharacterIterator. ...</div><div class='long'><p>Formats an Object producing an <code>AttributedCharacterIterator</code>.\n You can use the returned <code>AttributedCharacterIterator</code>\n to build the resulting String, as well as to determine information\n about the resulting String.\n <p>\n Each attribute key of the AttributedCharacterIterator will be of type\n <code>NumberFormat.Field</code>, with the attribute value being the\n same as the attribute key.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>The object to format\n@exception IllegalArgumentException when the Format cannot format the\n            given object.\n@exception ArithmeticException if rounding is needed with rounding\n                   mode being set to RoundingMode.UNNECESSARY</p>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>The object to format</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.text.AttributedCharacterIterator}</span><div class='sub-desc'><p>AttributedCharacterIterator describing the formatted value.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.text.Format-method-formatToCharacterIterator\" rel=\"java.text.Format-method-formatToCharacterIterator\" class=\"docClass\">java.text.Format.formatToCharacterIterator</a></p></div></div></div><div id='method-getAvailableLocales' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-method-getAvailableLocales' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-method-getAvailableLocales' class='name expandable'>getAvailableLocales</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getCurrency' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getCurrency' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getCurrency' class='name expandable'>getCurrency</a>( <span class='pre'></span> ) : Object {java.util.Currency}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the currency used by this decimal format when formatting\n currency values. ...</div><div class='long'><p>Gets the currency used by this decimal format when formatting\n currency values.\n The currency is obtained by calling\n <a href=\"#!/api/java.text.DecimalFormatSymbols-method-getCurrency\" rel=\"java.text.DecimalFormatSymbols-method-getCurrency\" class=\"docClass\">java.text.DecimalFormatSymbols.getCurrency</a>\n on this number format's symbols.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Currency}</span><div class='sub-desc'><p>the currency used by this decimal format, or <code>null</code></p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-getCurrency\" rel=\"java.text.NumberFormat-method-getCurrency\" class=\"docClass\">java.text.NumberFormat.getCurrency</a></p></div></div></div><div id='method-getCurrencyInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-method-getCurrencyInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-method-getCurrencyInstance' class='name expandable'>getCurrencyInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getDecimalFormatSymbols' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getDecimalFormatSymbols' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getDecimalFormatSymbols' class='name expandable'>getDecimalFormatSymbols</a>( <span class='pre'></span> ) : Object {java.text.DecimalFormatSymbols}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of the decimal format symbols, which is generally not\n changed by the programmer or user. ...</div><div class='long'><p>Returns a copy of the decimal format symbols, which is generally not\n changed by the programmer or user.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.text.DecimalFormatSymbols}</span><div class='sub-desc'><p>a copy of the desired DecimalFormatSymbols\n@see <a href=\"#!/api/java.text.DecimalFormatSymbols\" rel=\"java.text.DecimalFormatSymbols\" class=\"docClass\">java.text.DecimalFormatSymbols</a></p>\n</div></li></ul></div></div></div><div id='method-getGroupingSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getGroupingSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getGroupingSize' class='name expandable'>getGroupingSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the grouping size. ...</div><div class='long'><p>Return the grouping size. Grouping size is the number of digits between\n grouping separators in the integer portion of a number.  For example,\n in the number \"123,456.78\", the grouping size is 3.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the grouping size\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setGroupingSize\" rel=\"java.text.DecimalFormat-method-setGroupingSize\" class=\"docClass\">setGroupingSize</a>\n@see <a href=\"#!/api/java.text.NumberFormat-method-isGroupingUsed\" rel=\"java.text.NumberFormat-method-isGroupingUsed\" class=\"docClass\">java.text.NumberFormat.isGroupingUsed</a>\n@see <a href=\"#!/api/java.text.DecimalFormatSymbols-method-getGroupingSeparator\" rel=\"java.text.DecimalFormatSymbols-method-getGroupingSeparator\" class=\"docClass\">java.text.DecimalFormatSymbols.getGroupingSeparator</a></p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getIntegerInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-method-getIntegerInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-method-getIntegerInstance' class='name expandable'>getIntegerInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getMaximumFractionDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getMaximumFractionDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getMaximumFractionDigits' class='name expandable'>getMaximumFractionDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the maximum number of digits allowed in the fraction portion of a\n number. ...</div><div class='long'><p>Gets the maximum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 340 is used.\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setMaximumFractionDigits\" rel=\"java.text.DecimalFormat-method-setMaximumFractionDigits\" class=\"docClass\">setMaximumFractionDigits</a></p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-getMaximumFractionDigits\" rel=\"java.text.NumberFormat-method-getMaximumFractionDigits\" class=\"docClass\">java.text.NumberFormat.getMaximumFractionDigits</a></p></div></div></div><div id='method-getMaximumIntegerDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getMaximumIntegerDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getMaximumIntegerDigits' class='name expandable'>getMaximumIntegerDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the maximum number of digits allowed in the integer portion of a\n number. ...</div><div class='long'><p>Gets the maximum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 309 is used.\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setMaximumIntegerDigits\" rel=\"java.text.DecimalFormat-method-setMaximumIntegerDigits\" class=\"docClass\">setMaximumIntegerDigits</a></p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-getMaximumIntegerDigits\" rel=\"java.text.NumberFormat-method-getMaximumIntegerDigits\" class=\"docClass\">java.text.NumberFormat.getMaximumIntegerDigits</a></p></div></div></div><div id='method-getMinimumFractionDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getMinimumFractionDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getMinimumFractionDigits' class='name expandable'>getMinimumFractionDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the minimum number of digits allowed in the fraction portion of a\n number. ...</div><div class='long'><p>Gets the minimum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 340 is used.\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setMinimumFractionDigits\" rel=\"java.text.DecimalFormat-method-setMinimumFractionDigits\" class=\"docClass\">setMinimumFractionDigits</a></p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-getMinimumFractionDigits\" rel=\"java.text.NumberFormat-method-getMinimumFractionDigits\" class=\"docClass\">java.text.NumberFormat.getMinimumFractionDigits</a></p></div></div></div><div id='method-getMinimumIntegerDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getMinimumIntegerDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getMinimumIntegerDigits' class='name expandable'>getMinimumIntegerDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the minimum number of digits allowed in the integer portion of a\n number. ...</div><div class='long'><p>Gets the minimum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 309 is used.\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setMinimumIntegerDigits\" rel=\"java.text.DecimalFormat-method-setMinimumIntegerDigits\" class=\"docClass\">setMinimumIntegerDigits</a></p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-getMinimumIntegerDigits\" rel=\"java.text.NumberFormat-method-getMinimumIntegerDigits\" class=\"docClass\">java.text.NumberFormat.getMinimumIntegerDigits</a></p></div></div></div><div id='method-getMultiplier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getMultiplier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getMultiplier' class='name expandable'>getMultiplier</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the multiplier for use in percent, per mille, and similar\n formats. ...</div><div class='long'><p>Gets the multiplier for use in percent, per mille, and similar\n formats.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the multiplier\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setMultiplier\" rel=\"java.text.DecimalFormat-method-setMultiplier\" class=\"docClass\">setMultiplier</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getNegativePrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getNegativePrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getNegativePrefix' class='name expandable'>getNegativePrefix</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the negative prefix. ...</div><div class='long'><p>Get the negative prefix.\n <P>Examples: -123, ($123) (with negative suffix), sFr-123</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the negative prefix</p>\n</div></li></ul></div></div></div><div id='method-getNegativeSuffix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getNegativeSuffix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getNegativeSuffix' class='name expandable'>getNegativeSuffix</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the negative suffix. ...</div><div class='long'><p>Get the negative suffix.\n <P>Examples: -123%, ($123) (with positive suffixes)</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the negative suffix</p>\n</div></li></ul></div></div></div><div id='method-getNumberInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-method-getNumberInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-method-getNumberInstance' class='name expandable'>getNumberInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getPercentInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-method-getPercentInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-method-getPercentInstance' class='name expandable'>getPercentInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getPositivePrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getPositivePrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getPositivePrefix' class='name expandable'>getPositivePrefix</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the positive prefix. ...</div><div class='long'><p>Get the positive prefix.\n <P>Examples: +123, $123, sFr123</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the positive prefix</p>\n</div></li></ul></div></div></div><div id='method-getPositiveSuffix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getPositiveSuffix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getPositiveSuffix' class='name expandable'>getPositiveSuffix</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the positive suffix. ...</div><div class='long'><p>Get the positive suffix.\n <P>Example: 123%</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the positive suffix</p>\n</div></li></ul></div></div></div><div id='method-getRoundingMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-getRoundingMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-getRoundingMode' class='name expandable'>getRoundingMode</a>( <span class='pre'></span> ) : Object {java.math.RoundingMode}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the java.math.RoundingMode used in this DecimalFormat. ...</div><div class='long'><p>Gets the java.math.RoundingMode used in this DecimalFormat.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.math.RoundingMode}</span><div class='sub-desc'><p>The <code>RoundingMode</code> used for this DecimalFormat.\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setRoundingMode\" rel=\"java.text.DecimalFormat-method-setRoundingMode\" class=\"docClass\">setRoundingMode</a>(RoundingMode)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-getRoundingMode\" rel=\"java.text.NumberFormat-method-getRoundingMode\" class=\"docClass\">java.text.NumberFormat.getRoundingMode</a></p></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Overrides hashCode ...</div><div class='long'><p>Overrides hashCode</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-hashCode\" rel=\"java.text.NumberFormat-method-hashCode\" class=\"docClass\">java.text.NumberFormat.hashCode</a></p></div></div></div><div id='method-isDecimalSeparatorAlwaysShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-isDecimalSeparatorAlwaysShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-isDecimalSeparatorAlwaysShown' class='name expandable'>isDecimalSeparatorAlwaysShown</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows you to get the behavior of the decimal separator with integers. ...</div><div class='long'><p>Allows you to get the behavior of the decimal separator with integers.\n (The decimal separator will always appear with decimals.)\n <P>Example: Decimal ON: 12345 &rarr; 12345.; OFF: 12345 &rarr; 12345</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the decimal separator is always shown;\n         {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-isGroupingUsed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-isGroupingUsed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-isGroupingUsed' class='name expandable'>isGroupingUsed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-isGroupingUsed\" rel=\"java.text.NumberFormat-method-isGroupingUsed\" class=\"docClass\">java.text.NumberFormat.isGroupingUsed</a></p></div></div></div><div id='method-isParseBigDecimal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-isParseBigDecimal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-isParseBigDecimal' class='name expandable'>isParseBigDecimal</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the java.text.ParsePosition)\n method returns BigDecimal. ...</div><div class='long'><p>Returns whether the java.text.ParsePosition)\n method returns <code>BigDecimal</code>. The default value is false.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the parse method returns BigDecimal;\n         {@code false} otherwise\n@see <a href=\"#!/api/java.text.DecimalFormat-method-setParseBigDecimal\" rel=\"java.text.DecimalFormat-method-setParseBigDecimal\" class=\"docClass\">setParseBigDecimal</a></p>\n</div></li></ul></div></div></div><div id='method-isParseIntegerOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-isParseIntegerOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-isParseIntegerOnly' class='name expandable'>isParseIntegerOnly</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-isParseIntegerOnly\" rel=\"java.text.NumberFormat-method-isParseIntegerOnly\" class=\"docClass\">java.text.NumberFormat.isParseIntegerOnly</a></p></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-parse' class='name expandable'>parse</a>( <span class='pre'>text, pos</span> ) : Object {java.lang.Number}<span class=\"signature\"></span></div><div class='description'><div class='short'>Parses text from a string to produce a Number. ...</div><div class='long'><p>Parses text from a string to produce a <code>Number</code>.\n <p>\n The method attempts to parse text starting at the index given by\n <code>pos</code>.\n If parsing succeeds, then the index of <code>pos</code> is updated\n to the index after the last character used (parsing does not necessarily\n use all characters up to the end of the string), and the parsed\n number is returned. The updated <code>pos</code> can be used to\n indicate the starting point for the next call to this method.\n If an error occurs, then the index of <code>pos</code> is not\n changed, the error index of <code>pos</code> is set to the index of\n the character where the error occurred, and null is returned.\n <p>\n The subclass returned depends on the value of <a href=\"#!/api/java.text.DecimalFormat-method-isParseBigDecimal\" rel=\"java.text.DecimalFormat-method-isParseBigDecimal\" class=\"docClass\">isParseBigDecimal</a>\n as well as on the string being parsed.\n <ul>\n   <li>If <code>isParseBigDecimal()</code> is false (the default),\n       most integer values are returned as <code>Long</code>\n       objects, no matter how they are written: <code>\"17\"</code> and\n       <code>\"17.000\"</code> both parse to <code>Long(17)</code>.\n       Values that cannot fit into a <code>Long</code> are returned as\n       <code>Double</code>s. This includes values with a fractional part,\n       infinite values, <code>NaN</code>, and the value -0.0.\n       <code>DecimalFormat</code> does <em>not</em> decide whether to\n       return a <code>Double</code> or a <code>Long</code> based on the\n       presence of a decimal separator in the source string. Doing so\n       would prevent integers that overflow the mantissa of a double,\n       such as <code>\"-9,223,372,036,854,775,808.00\"</code>, from being\n       parsed accurately.\n       <p>\n       Callers may use the <code>Number</code> methods\n       <code>doubleValue</code>, <code>longValue</code>, etc., to obtain\n       the type they want.\n   <li>If <code>isParseBigDecimal()</code> is true, values are returned\n       as <code>BigDecimal</code> objects. The values are the ones\n       constructed by java.math.BigDecimal.BigDecimal(String)\n       for corresponding strings in locale-independent format. The\n       special cases negative and positive infinity and NaN are returned\n       as <code>Double</code> instances holding the values of the\n       corresponding <code>Double</code> constants.\n </li></p></li></ul>\n <p>\n <code>DecimalFormat</code> parses all Unicode characters that represent\n decimal digits, as defined by <code>Character.digit()</code>. In\n addition, <code>DecimalFormat</code> also recognizes as digits the ten\n consecutive characters starting with the localized zero digit defined in\n the <code>DecimalFormatSymbols</code> object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>the string to be parsed</p>\n</div></li><li><span class='pre'>pos</span> : Object {ParsePosition}<div class='sub-desc'><p>A <code>ParsePosition</code> object with index and error\n             index information as described above.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Number}</span><div class='sub-desc'><p>the parsed value, or <code>null</code> if the parse fails\n@exception NullPointerException if <code>text</code> or\n             <code>pos</code> is null.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-parse\" rel=\"java.text.NumberFormat-method-parse\" class=\"docClass\">java.text.NumberFormat.parse</a></p></div></div></div><div id='method-parseObject' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.text.NumberFormat' rel='java.text.NumberFormat' class='defined-in docClass'>java.text.NumberFormat</a><br/><a href='source/NumberFormat.html#java-text-NumberFormat-method-parseObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.NumberFormat-method-parseObject' class='name expandable'>parseObject</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.text.Format-method-parseObject\" rel=\"java.text.Format-method-parseObject\" class=\"docClass\">java.text.Format.parseObject</a></p></div></div></div><div id='method-setCurrency' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setCurrency' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setCurrency' class='name expandable'>setCurrency</a>( <span class='pre'>currency</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the currency used by this number format when formatting\n currency values. ...</div><div class='long'><p>Sets the currency used by this number format when formatting\n currency values. This does not update the minimum or maximum\n number of fraction digits used by the number format.\n The currency is set by calling\n <a href=\"#!/api/java.text.DecimalFormatSymbols-method-setCurrency\" rel=\"java.text.DecimalFormatSymbols-method-setCurrency\" class=\"docClass\">java.text.DecimalFormatSymbols.setCurrency</a>\n on this number format's symbols.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>currency</span> : Object {Currency}<div class='sub-desc'><p>the new currency to be used by this decimal format\n@exception NullPointerException if <code>currency</code> is null</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setCurrency\" rel=\"java.text.NumberFormat-method-setCurrency\" class=\"docClass\">java.text.NumberFormat.setCurrency</a></p></div></div></div><div id='method-setDecimalFormatSymbols' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setDecimalFormatSymbols' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setDecimalFormatSymbols' class='name expandable'>setDecimalFormatSymbols</a>( <span class='pre'>newSymbols</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the decimal format symbols, which is generally not changed\n by the programmer or user. ...</div><div class='long'><p>Sets the decimal format symbols, which is generally not changed\n by the programmer or user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newSymbols</span> : Object {DecimalFormatSymbols}<div class='sub-desc'><p>desired DecimalFormatSymbols\n@see <a href=\"#!/api/java.text.DecimalFormatSymbols\" rel=\"java.text.DecimalFormatSymbols\" class=\"docClass\">java.text.DecimalFormatSymbols</a></p>\n</div></li></ul></div></div></div><div id='method-setDecimalSeparatorAlwaysShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setDecimalSeparatorAlwaysShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setDecimalSeparatorAlwaysShown' class='name expandable'>setDecimalSeparatorAlwaysShown</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows you to set the behavior of the decimal separator with integers. ...</div><div class='long'><p>Allows you to set the behavior of the decimal separator with integers.\n (The decimal separator will always appear with decimals.)\n <P>Example: Decimal ON: 12345 &rarr; 12345.; OFF: 12345 &rarr; 12345</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Boolean<div class='sub-desc'><p>{@code true} if the decimal separator is always shown;\n                 {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-setGroupingSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setGroupingSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setGroupingSize' class='name expandable'>setGroupingSize</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the grouping size. ...</div><div class='long'><p>Set the grouping size. Grouping size is the number of digits between\n grouping separators in the integer portion of a number.  For example,\n in the number \"123,456.78\", the grouping size is 3.\n <br>\n The value passed in is converted to a byte, which may lose information.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Number<div class='sub-desc'><p>the new grouping size\n@see <a href=\"#!/api/java.text.DecimalFormat-method-getGroupingSize\" rel=\"java.text.DecimalFormat-method-getGroupingSize\" class=\"docClass\">getGroupingSize</a>\n@see <a href=\"#!/api/java.text.NumberFormat-method-setGroupingUsed\" rel=\"java.text.NumberFormat-method-setGroupingUsed\" class=\"docClass\">java.text.NumberFormat.setGroupingUsed</a>\n@see <a href=\"#!/api/java.text.DecimalFormatSymbols-method-setGroupingSeparator\" rel=\"java.text.DecimalFormatSymbols-method-setGroupingSeparator\" class=\"docClass\">java.text.DecimalFormatSymbols.setGroupingSeparator</a></p>\n</div></li></ul></div></div></div><div id='method-setGroupingUsed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setGroupingUsed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setGroupingUsed' class='name expandable'>setGroupingUsed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setGroupingUsed\" rel=\"java.text.NumberFormat-method-setGroupingUsed\" class=\"docClass\">java.text.NumberFormat.setGroupingUsed</a></p></div></div></div><div id='method-setMaximumFractionDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setMaximumFractionDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setMaximumFractionDigits' class='name expandable'>setMaximumFractionDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the maximum number of digits allowed in the fraction portion of a\n number. ...</div><div class='long'><p>Sets the maximum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 340 is used. Negative input values are replaced with 0.\n@see NumberFormat#setMaximumFractionDigits</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setMaximumFractionDigits\" rel=\"java.text.NumberFormat-method-setMaximumFractionDigits\" class=\"docClass\">java.text.NumberFormat.setMaximumFractionDigits</a></p></div></div></div><div id='method-setMaximumIntegerDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setMaximumIntegerDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setMaximumIntegerDigits' class='name expandable'>setMaximumIntegerDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the maximum number of digits allowed in the integer portion of a\n number. ...</div><div class='long'><p>Sets the maximum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 309 is used. Negative input values are replaced with 0.\n@see NumberFormat#setMaximumIntegerDigits</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setMaximumIntegerDigits\" rel=\"java.text.NumberFormat-method-setMaximumIntegerDigits\" class=\"docClass\">java.text.NumberFormat.setMaximumIntegerDigits</a></p></div></div></div><div id='method-setMinimumFractionDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setMinimumFractionDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setMinimumFractionDigits' class='name expandable'>setMinimumFractionDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the minimum number of digits allowed in the fraction portion of a\n number. ...</div><div class='long'><p>Sets the minimum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 340 is used. Negative input values are replaced with 0.\n@see NumberFormat#setMinimumFractionDigits</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setMinimumFractionDigits\" rel=\"java.text.NumberFormat-method-setMinimumFractionDigits\" class=\"docClass\">java.text.NumberFormat.setMinimumFractionDigits</a></p></div></div></div><div id='method-setMinimumIntegerDigits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setMinimumIntegerDigits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setMinimumIntegerDigits' class='name expandable'>setMinimumIntegerDigits</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the minimum number of digits allowed in the integer portion of a\n number. ...</div><div class='long'><p>Sets the minimum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 309 is used. Negative input values are replaced with 0.\n@see NumberFormat#setMinimumIntegerDigits</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setMinimumIntegerDigits\" rel=\"java.text.NumberFormat-method-setMinimumIntegerDigits\" class=\"docClass\">java.text.NumberFormat.setMinimumIntegerDigits</a></p></div></div></div><div id='method-setMultiplier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setMultiplier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setMultiplier' class='name expandable'>setMultiplier</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the multiplier for use in percent, per mille, and similar\n formats. ...</div><div class='long'><p>Sets the multiplier for use in percent, per mille, and similar\n formats.\n For a percent format, set the multiplier to 100 and the suffixes to\n have '%' (for Arabic, use the Arabic percent sign).\n For a per mille format, set the multiplier to 1000 and the suffixes to\n have '&#92;u2030'.</p>\n\n<p> <P>Example: with multiplier 100, 1.23 is formatted as \"123\", and\n \"123\" is parsed into 1.23.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Number<div class='sub-desc'><p>the new multiplier\n@see <a href=\"#!/api/java.text.DecimalFormat-method-getMultiplier\" rel=\"java.text.DecimalFormat-method-getMultiplier\" class=\"docClass\">getMultiplier</a></p>\n</div></li></ul></div></div></div><div id='method-setNegativePrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setNegativePrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setNegativePrefix' class='name expandable'>setNegativePrefix</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the negative prefix. ...</div><div class='long'><p>Set the negative prefix.\n <P>Examples: -123, ($123) (with negative suffix), sFr-123</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : String<div class='sub-desc'><p>the new negative prefix</p>\n</div></li></ul></div></div></div><div id='method-setNegativeSuffix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setNegativeSuffix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setNegativeSuffix' class='name expandable'>setNegativeSuffix</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the negative suffix. ...</div><div class='long'><p>Set the negative suffix.\n <P>Examples: 123%</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : String<div class='sub-desc'><p>the new negative suffix</p>\n</div></li></ul></div></div></div><div id='method-setParseBigDecimal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setParseBigDecimal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setParseBigDecimal' class='name expandable'>setParseBigDecimal</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the java.text.ParsePosition)\n method returns BigDecimal. ...</div><div class='long'><p>Sets whether the java.text.ParsePosition)\n method returns <code>BigDecimal</code>.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Boolean<div class='sub-desc'><p>{@code true} if the parse method returns BigDecimal;\n                 {@code false} otherwise\n@see <a href=\"#!/api/java.text.DecimalFormat-method-isParseBigDecimal\" rel=\"java.text.DecimalFormat-method-isParseBigDecimal\" class=\"docClass\">isParseBigDecimal</a></p>\n</div></li></ul></div></div></div><div id='method-setParseIntegerOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setParseIntegerOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setParseIntegerOnly' class='name expandable'>setParseIntegerOnly</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setParseIntegerOnly\" rel=\"java.text.NumberFormat-method-setParseIntegerOnly\" class=\"docClass\">java.text.NumberFormat.setParseIntegerOnly</a></p></div></div></div><div id='method-setPositivePrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setPositivePrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setPositivePrefix' class='name expandable'>setPositivePrefix</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the positive prefix. ...</div><div class='long'><p>Set the positive prefix.\n <P>Examples: +123, $123, sFr123</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : String<div class='sub-desc'><p>the new positive prefix</p>\n</div></li></ul></div></div></div><div id='method-setPositiveSuffix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setPositiveSuffix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setPositiveSuffix' class='name expandable'>setPositiveSuffix</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the positive suffix. ...</div><div class='long'><p>Set the positive suffix.\n <P>Example: 123%</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : String<div class='sub-desc'><p>the new positive suffix</p>\n</div></li></ul></div></div></div><div id='method-setRoundingMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-setRoundingMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-setRoundingMode' class='name expandable'>setRoundingMode</a>( <span class='pre'>roundingMode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the java.math.RoundingMode used in this DecimalFormat. ...</div><div class='long'><p>Sets the java.math.RoundingMode used in this DecimalFormat.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>roundingMode</span> : Object {RoundingMode}<div class='sub-desc'><p>The <code>RoundingMode</code> to be used\n@see <a href=\"#!/api/java.text.DecimalFormat-method-getRoundingMode\" rel=\"java.text.DecimalFormat-method-getRoundingMode\" class=\"docClass\">getRoundingMode</a>()\n@exception NullPointerException if <code>roundingMode</code> is null.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.text.NumberFormat-method-setRoundingMode\" rel=\"java.text.NumberFormat-method-setRoundingMode\" class=\"docClass\">java.text.NumberFormat.setRoundingMode</a></p></div></div></div><div id='method-toLocalizedPattern' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-toLocalizedPattern' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-toLocalizedPattern' class='name expandable'>toLocalizedPattern</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Synthesizes a localized pattern string that represents the current\n state of this Format object. ...</div><div class='long'><p>Synthesizes a localized pattern string that represents the current\n state of this Format object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a localized pattern string\n@see <a href=\"#!/api/java.text.DecimalFormat-method-applyPattern\" rel=\"java.text.DecimalFormat-method-applyPattern\" class=\"docClass\">applyPattern</a></p>\n</div></li></ul></div></div></div><div id='method-toPattern' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.DecimalFormat'>java.text.DecimalFormat</span><br/><a href='source/DecimalFormat.html#java-text-DecimalFormat-method-toPattern' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.DecimalFormat-method-toPattern' class='name expandable'>toPattern</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Synthesizes a pattern string that represents the current state\n of this Format object. ...</div><div class='long'><p>Synthesizes a pattern string that represents the current state\n of this Format object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a pattern string\n@see <a href=\"#!/api/java.text.DecimalFormat-method-applyPattern\" rel=\"java.text.DecimalFormat-method-applyPattern\" class=\"docClass\">applyPattern</a></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});