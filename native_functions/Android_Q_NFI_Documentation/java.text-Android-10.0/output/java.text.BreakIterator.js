Ext.data.JsonP.java_text_BreakIterator({"tagname":"class","name":"java.text.BreakIterator","autodetected":{},"files":[{"filename":"BreakIterator.js","href":"BreakIterator.html#java-text-BreakIterator"}],"extends":"java.lang.Object","members":[{"name":"DONE","tagname":"property","owner":"java.text.BreakIterator","id":"property-DONE","meta":{}},{"name":"clone","tagname":"method","owner":"java.text.BreakIterator","id":"method-clone","meta":{}},{"name":"current","tagname":"method","owner":"java.text.BreakIterator","id":"method-current","meta":{}},{"name":"first","tagname":"method","owner":"java.text.BreakIterator","id":"method-first","meta":{}},{"name":"following","tagname":"method","owner":"java.text.BreakIterator","id":"method-following","meta":{}},{"name":"getAvailableLocales","tagname":"method","owner":"java.text.BreakIterator","id":"method-getAvailableLocales","meta":{}},{"name":"getCharacterInstance","tagname":"method","owner":"java.text.BreakIterator","id":"method-getCharacterInstance","meta":{}},{"name":"getLineInstance","tagname":"method","owner":"java.text.BreakIterator","id":"method-getLineInstance","meta":{}},{"name":"getSentenceInstance","tagname":"method","owner":"java.text.BreakIterator","id":"method-getSentenceInstance","meta":{}},{"name":"getText","tagname":"method","owner":"java.text.BreakIterator","id":"method-getText","meta":{}},{"name":"getWordInstance","tagname":"method","owner":"java.text.BreakIterator","id":"method-getWordInstance","meta":{}},{"name":"isBoundary","tagname":"method","owner":"java.text.BreakIterator","id":"method-isBoundary","meta":{}},{"name":"last","tagname":"method","owner":"java.text.BreakIterator","id":"method-last","meta":{}},{"name":"next","tagname":"method","owner":"java.text.BreakIterator","id":"method-next","meta":{}},{"name":"preceding","tagname":"method","owner":"java.text.BreakIterator","id":"method-preceding","meta":{}},{"name":"previous","tagname":"method","owner":"java.text.BreakIterator","id":"method-previous","meta":{}},{"name":"setText","tagname":"method","owner":"java.text.BreakIterator","id":"method-setText","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.text.BreakIterator","short_doc":"implements java.lang.Cloneable\n\nThe BreakIterator class implements methods for finding\n the location of boundaries in...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.text.BreakIterator</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BreakIterator.html#java-text-BreakIterator' target='_blank'>BreakIterator.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Cloneable</p>\n\n<p>The <code>BreakIterator</code> class implements methods for finding\n the location of boundaries in text. Instances of <code>BreakIterator</code>\n maintain a current position and scan over text\n returning the index of characters where boundaries occur.\n Internally, <code>BreakIterator</code> scans text using a\n <code>CharacterIterator</code>, and is thus able to scan text held\n by any object implementing that protocol. A <code>StringCharacterIterator</code>\n is used to scan <code>String</code> objects passed to <code>setText</code>.\n The <code>CharacterIterator</code> object must not be modified after having been\n passed to <code>setText</code>. If the text in the <code>CharacterIterator</code> object\n is changed, the caller must reset <code>BreakIterator</code> by calling\n <code>setText</code>.</p>\n\n<p> <p>\n You use the factory methods provided by this class to create\n instances of various types of break iterators. In particular,\n use <code>getWordInstance</code>, <code>getLineInstance</code>,\n <code>getSentenceInstance</code>, and <code>getCharacterInstance</code>\n to create <code>BreakIterator</code>s that perform\n word, line, sentence, and character boundary analysis respectively.\n A single <code>BreakIterator</code> can work only on one unit\n (word, line, sentence, and so on). You must use a different iterator\n for each unit boundary analysis you wish to perform.</p>\n\n<p> <p><a name=\"line\"></a>\n Line boundary analysis determines where a text string can be\n broken when line-wrapping. The mechanism correctly handles\n punctuation and hyphenated words. Actual line breaking needs\n to also consider the available line width and is handled by\n higher-level software.</p>\n\n<p> <p><a name=\"sentence\"></a>\n Sentence boundary analysis allows selection with correct interpretation\n of periods within numbers and abbreviations, and trailing punctuation\n marks such as quotation marks and parentheses.</p>\n\n<p> <p><a name=\"word\"></a>\n Word boundary analysis is used by search and replace functions, as\n well as within text editing applications that allow the user to\n select words with a double click. Word selection provides correct\n interpretation of punctuation marks within and following\n words. Characters that are not part of a word, such as symbols\n or punctuation marks, have word-breaks on both sides.</p>\n\n<p> <p><a name=\"character\"></a>\n Character boundary analysis allows users to interact with characters\n as they expect to, for example, when moving the cursor through a text\n string. Character boundary analysis provides correct navigation\n through character strings, regardless of how the character is stored.\n The boundaries returned may be those of supplementary characters,\n combining character sequences, or ligature clusters.\n For example, an accented character might be stored as a base character\n and a diacritical mark. What users consider to be a character can\n differ between languages.</p>\n\n<p> <p>\n The <code>BreakIterator</code> instances returned by the factory methods\n of this class are intended for use with natural languages only, not for\n programming language text. It is however possible to define subclasses\n that tokenize a programming language.</p>\n\n<p> <P>\n <strong>Examples</strong>:<P>\n Creating and using text boundaries:\n <blockquote></blockquote></P></P></p>\n\n<pre> public static void main(String args[]) {\n      if (args.length == 1) {\n          String stringToExamine = args[0];\n          //print each word in order\n          BreakIterator boundary = BreakIterator.getWordInstance();\n          boundary.setText(stringToExamine);\n          printEachForward(boundary, stringToExamine);\n          //print each sentence in reverse order\n          boundary = BreakIterator.getSentenceInstance(Locale.US);\n          boundary.setText(stringToExamine);\n          printEachBackward(boundary, stringToExamine);\n          printFirst(boundary, stringToExamine);\n          printLast(boundary, stringToExamine);\n      }\n }\n </pre>\n\n\n<p> </p>\n\n<p> Print each element in order:\n <blockquote></blockquote></p>\n\n<pre> public static void printEachForward(BreakIterator boundary, String source) {\n     int start = boundary.first();\n     for (int end = boundary.next();\n          end != BreakIterator.DONE;\n          start = end, end = boundary.next()) {\n          System.out.println(source.substring(start,end));\n     }\n }\n </pre>\n\n\n<p> </p>\n\n<p> Print each element in reverse order:\n <blockquote></blockquote></p>\n\n<pre> public static void printEachBackward(BreakIterator boundary, String source) {\n     int end = boundary.last();\n     for (int start = boundary.previous();\n          start != BreakIterator.DONE;\n          end = start, start = boundary.previous()) {\n         System.out.println(source.substring(start,end));\n     }\n }\n </pre>\n\n\n<p> </p>\n\n<p> Print first element:\n <blockquote></blockquote></p>\n\n<pre> public static void printFirst(BreakIterator boundary, String source) {\n     int start = boundary.first();\n     int end = boundary.next();\n     System.out.println(source.substring(start,end));\n }\n </pre>\n\n\n<p> </p>\n\n<p> Print last element:\n <blockquote></blockquote></p>\n\n<pre> public static void printLast(BreakIterator boundary, String source) {\n     int end = boundary.last();\n     int start = boundary.previous();\n     System.out.println(source.substring(start,end));\n }\n </pre>\n\n\n<p> </p>\n\n<p> Print the element at a specified position:\n <blockquote></blockquote></p>\n\n<pre> public static void printAt(BreakIterator boundary, int pos, String source) {\n     int end = boundary.following(pos);\n     int start = boundary.previous();\n     System.out.println(source.substring(start,end));\n }\n </pre>\n\n\n<p> </p>\n\n<p> Find the next word:\n <blockquote>\n <pre>{@code\n public static int nextWordStartAfter(int pos, String text) {\n     BreakIterator wb = BreakIterator.getWordInstance();\n     wb.setText(text);\n     int last = wb.following(pos);\n     int current = wb.next();\n     while (current != BreakIterator.DONE) {\n         for (int p = last; p &lt; current; p++) {\n             if (Character.isLetter(text.codePointAt(p)))\n                 return last;\n         }\n         last = current;\n         current = wb.next();\n     }\n     return BreakIterator.DONE;\n }\n }</pre>\n (The iterator returned by BreakIterator.getWordInstance() is unique in that\n the break positions it returns don't represent both the start and end of the\n thing being iterated over.  That is, a sentence-break iterator returns breaks\n that each represent the end of one sentence and the beginning of the next.\n With the word-break iterator, the characters between two boundaries might be a\n word, or they might be the punctuation or whitespace between two words.  The\n above code uses a simple heuristic to determine which boundary is the beginning\n of a word: If the characters between this boundary and the next boundary\n include at least one letter (this can be an alphabetical letter, a CJK ideograph,\n a Hangul syllable, a Kana character, etc.), then the text between this boundary\n and the next is a word; otherwise, it's the material between words.)\n </blockquote></p>\n\n<p> @see CharacterIterator</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DONE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-property-DONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-property-DONE' class='name expandable'>DONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>DONE is returned by previous(), next(), next(int), preceding(int)\nand following(int) when either the first or last te...</div><div class='long'><p>DONE is returned by previous(), next(), next(int), preceding(int)\nand following(int) when either the first or last text boundary has been\nreached.</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clone' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a copy of this iterator ...</div><div class='long'><p>Create a copy of this iterator</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>A copy of this</p>\n</div></li></ul></div></div></div><div id='method-current' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-current' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-current' class='name expandable'>current</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns character index of the text boundary that was most\n recently returned by next(), next(int), previous(), first...</div><div class='long'><p>Returns character index of the text boundary that was most\n recently returned by next(), next(int), previous(), first(), last(),\n following(int) or preceding(int). If any of these methods returns\n <code>BreakIterator.DONE</code> because either first or last text boundary\n has been reached, it returns the first or last text boundary depending on\n which one is reached.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The text boundary returned from the above methods, first or last\n text boundary.\n@see <a href=\"#!/api/java.text.BreakIterator-method-next\" rel=\"java.text.BreakIterator-method-next\" class=\"docClass\">next</a>()\n@see <a href=\"#!/api/java.text.BreakIterator-method-next\" rel=\"java.text.BreakIterator-method-next\" class=\"docClass\">next</a>(int)\n@see <a href=\"#!/api/java.text.BreakIterator-method-previous\" rel=\"java.text.BreakIterator-method-previous\" class=\"docClass\">previous</a>()\n@see <a href=\"#!/api/java.text.BreakIterator-method-first\" rel=\"java.text.BreakIterator-method-first\" class=\"docClass\">first</a>()\n@see <a href=\"#!/api/java.text.BreakIterator-method-last\" rel=\"java.text.BreakIterator-method-last\" class=\"docClass\">last</a>()\n@see <a href=\"#!/api/java.text.BreakIterator-method-following\" rel=\"java.text.BreakIterator-method-following\" class=\"docClass\">following</a>(int)\n@see <a href=\"#!/api/java.text.BreakIterator-method-preceding\" rel=\"java.text.BreakIterator-method-preceding\" class=\"docClass\">preceding</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-first' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-first' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-first' class='name expandable'>first</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the first boundary. ...</div><div class='long'><p>Returns the first boundary. The iterator's current position is set\n to the first text boundary.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The character index of the first text boundary.</p>\n</div></li></ul></div></div></div><div id='method-following' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-following' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-following' class='name expandable'>following</a>( <span class='pre'>offset</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the first boundary following the specified character offset. ...</div><div class='long'><p>Returns the first boundary following the specified character offset. If the\n specified offset equals to the last text boundary, it returns\n <code>BreakIterator.DONE</code> and the iterator's current position is unchanged.\n Otherwise, the iterator's current position is set to the returned boundary.\n The value returned is always greater than the offset or the value\n <code>BreakIterator.DONE</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the character offset to begin scanning.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The first boundary after the specified offset or\n <code>BreakIterator.DONE</code> if the last text boundary is passed in\n as the offset.\n@exception IllegalArgumentException if the specified offset is less than\n the first text boundary or greater than the last text boundary.</p>\n</div></li></ul></div></div></div><div id='method-getAvailableLocales' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-getAvailableLocales' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-getAvailableLocales' class='name expandable'>getAvailableLocales</a>( <span class='pre'></span> ) : Object {java.util.Locale}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array of all locales for which the\n get*Instance methods of this class can return\n localized instances. ...</div><div class='long'><p>Returns an array of all locales for which the\n <code>get*Instance</code> methods of this class can return\n localized instances.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Locale}</span><div class='sub-desc'><p>An array of locales for which localized\n         <code>BreakIterator</code> instances are available.</p>\n</div></li></ul></div></div></div><div id='method-getCharacterInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-getCharacterInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-getCharacterInstance' class='name expandable'>getCharacterInstance</a>( <span class='pre'>locale</span> ) : Object {java.text.BreakIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new BreakIterator instance\n for character breaks\n for the given locale. ...</div><div class='long'><p>Returns a new <code>BreakIterator</code> instance\n for <a href=\"BreakIterator.html#character\">character breaks</a>\n for the given locale.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the desired locale</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.text.BreakIterator}</span><div class='sub-desc'><p>A break iterator for character breaks\n@exception NullPointerException if <code>locale</code> is null</p>\n</div></li></ul></div></div></div><div id='method-getLineInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-getLineInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-getLineInstance' class='name expandable'>getLineInstance</a>( <span class='pre'>locale</span> ) : Object {java.text.BreakIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new BreakIterator instance\n for line breaks\n for the given locale. ...</div><div class='long'><p>Returns a new <code>BreakIterator</code> instance\n for <a href=\"BreakIterator.html#line\">line breaks</a>\n for the given locale.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the desired locale</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.text.BreakIterator}</span><div class='sub-desc'><p>A break iterator for line breaks\n@exception NullPointerException if <code>locale</code> is null</p>\n</div></li></ul></div></div></div><div id='method-getSentenceInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-getSentenceInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-getSentenceInstance' class='name expandable'>getSentenceInstance</a>( <span class='pre'>locale</span> ) : Object {java.text.BreakIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new BreakIterator instance\n for sentence breaks\n for the given locale. ...</div><div class='long'><p>Returns a new <code>BreakIterator</code> instance\n for <a href=\"BreakIterator.html#sentence\">sentence breaks</a>\n for the given locale.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the desired locale</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.text.BreakIterator}</span><div class='sub-desc'><p>A break iterator for sentence breaks\n@exception NullPointerException if <code>locale</code> is null</p>\n</div></li></ul></div></div></div><div id='method-getText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-getText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-getText' class='name expandable'>getText</a>( <span class='pre'></span> ) : Object {java.text.CharacterIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the text being scanned ...</div><div class='long'><p>Get the text being scanned</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.text.CharacterIterator}</span><div class='sub-desc'><p>the text being scanned</p>\n</div></li></ul></div></div></div><div id='method-getWordInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-getWordInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-getWordInstance' class='name expandable'>getWordInstance</a>( <span class='pre'>locale</span> ) : Object {java.text.BreakIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new BreakIterator instance\n for word breaks\n for the given locale. ...</div><div class='long'><p>Returns a new <code>BreakIterator</code> instance\n for <a href=\"BreakIterator.html#word\">word breaks</a>\n for the given locale.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the desired locale</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.text.BreakIterator}</span><div class='sub-desc'><p>A break iterator for word breaks\n@exception NullPointerException if <code>locale</code> is null</p>\n</div></li></ul></div></div></div><div id='method-isBoundary' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-isBoundary' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-isBoundary' class='name expandable'>isBoundary</a>( <span class='pre'>offset</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the specified character offset is a text boundary. ...</div><div class='long'><p>Returns true if the specified character offset is a text boundary.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the character offset to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if \"offset\" is a boundary position,\n <code>false</code> otherwise.\n@exception IllegalArgumentException if the specified offset is less than\n the first text boundary or greater than the last text boundary.</p>\n</div></li></ul></div></div></div><div id='method-last' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-last' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-last' class='name expandable'>last</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the last boundary. ...</div><div class='long'><p>Returns the last boundary. The iterator's current position is set\n to the last text boundary.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The character index of the last text boundary.</p>\n</div></li></ul></div></div></div><div id='method-next' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-next' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-next' class='name expandable'>next</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the boundary following the current boundary. ...</div><div class='long'><p>Returns the boundary following the current boundary. If the current boundary\n is the last text boundary, it returns <code>BreakIterator.DONE</code> and\n the iterator's current position is unchanged. Otherwise, the iterator's\n current position is set to the boundary following the current boundary.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The character index of the next text boundary or\n <code>BreakIterator.DONE</code> if the current boundary is the last text\n boundary.\n Equivalent to next(1).\n@see <a href=\"#!/api/java.text.BreakIterator-method-next\" rel=\"java.text.BreakIterator-method-next\" class=\"docClass\">next</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-preceding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-preceding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-preceding' class='name expandable'>preceding</a>( <span class='pre'>offset</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the last boundary preceding the specified character offset. ...</div><div class='long'><p>Returns the last boundary preceding the specified character offset. If the\n specified offset equals to the first text boundary, it returns\n <code>BreakIterator.DONE</code> and the iterator's current position is unchanged.\n Otherwise, the iterator's current position is set to the returned boundary.\n The value returned is always less than the offset or the value\n <code>BreakIterator.DONE</code>.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the character offset to begin scanning.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The last boundary before the specified offset or\n <code>BreakIterator.DONE</code> if the first text boundary is passed in\n as the offset.\n@exception IllegalArgumentException if the specified offset is less than\n the first text boundary or greater than the last text boundary.</p>\n</div></li></ul></div></div></div><div id='method-previous' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-previous' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-previous' class='name expandable'>previous</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the boundary preceding the current boundary. ...</div><div class='long'><p>Returns the boundary preceding the current boundary. If the current boundary\n is the first text boundary, it returns <code>BreakIterator.DONE</code> and\n the iterator's current position is unchanged. Otherwise, the iterator's\n current position is set to the boundary preceding the current boundary.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The character index of the previous text boundary or\n <code>BreakIterator.DONE</code> if the current boundary is the first text\n boundary.</p>\n</div></li></ul></div></div></div><div id='method-setText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.text.BreakIterator'>java.text.BreakIterator</span><br/><a href='source/BreakIterator.html#java-text-BreakIterator-method-setText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.text.BreakIterator-method-setText' class='name expandable'>setText</a>( <span class='pre'>newText</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a new text for scanning. ...</div><div class='long'><p>Set a new text for scanning.  The current scan\n position is reset to first().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newText</span> : Object {CharacterIterator}<div class='sub-desc'><p>new text to scan.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});