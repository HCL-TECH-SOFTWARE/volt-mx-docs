Ext.data.JsonP.android_view_inputmethod_InputMethodManager({"tagname":"class","name":"android.view.inputmethod.InputMethodManager","autodetected":{},"files":[{"filename":"InputMethodManager.js","href":"InputMethodManager.html#android-view-inputmethod-InputMethodManager"}],"extends":"java.lang.Object","members":[{"name":"HIDE_IMPLICIT_ONLY","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-HIDE_IMPLICIT_ONLY","meta":{}},{"name":"HIDE_NOT_ALWAYS","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-HIDE_NOT_ALWAYS","meta":{}},{"name":"RESULT_HIDDEN","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-RESULT_HIDDEN","meta":{}},{"name":"RESULT_SHOWN","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-RESULT_SHOWN","meta":{}},{"name":"RESULT_UNCHANGED_HIDDEN","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-RESULT_UNCHANGED_HIDDEN","meta":{}},{"name":"RESULT_UNCHANGED_SHOWN","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-RESULT_UNCHANGED_SHOWN","meta":{}},{"name":"SHOW_FORCED","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-SHOW_FORCED","meta":{}},{"name":"SHOW_IMPLICIT","tagname":"property","owner":"android.view.inputmethod.InputMethodManager","id":"property-SHOW_IMPLICIT","meta":{}},{"name":"dispatchKeyEventFromInputMethod","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-dispatchKeyEventFromInputMethod","meta":{}},{"name":"displayCompletions","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-displayCompletions","meta":{}},{"name":"getCurrentInputMethodSubtype","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-getCurrentInputMethodSubtype","meta":{}},{"name":"getEnabledInputMethodList","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-getEnabledInputMethodList","meta":{}},{"name":"getEnabledInputMethodSubtypeList","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-getEnabledInputMethodSubtypeList","meta":{}},{"name":"getInputMethodList","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-getInputMethodList","meta":{}},{"name":"getLastInputMethodSubtype","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-getLastInputMethodSubtype","meta":{}},{"name":"getShortcutInputMethodsAndSubtypes","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-getShortcutInputMethodsAndSubtypes","meta":{}},{"name":"hideSoftInputFromInputMethod","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-hideSoftInputFromInputMethod","meta":{"deprecated":{"text":"<p>Use InputMethodService.requestHideSelf(int) instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in this\n class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"hideSoftInputFromWindow","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-hideSoftInputFromWindow","meta":{}},{"name":"hideStatusIcon","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-hideStatusIcon","meta":{"deprecated":{"text":"<p>Use InputMethodService.hideStatusIcon() instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in\n this class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"isAcceptingText","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-isAcceptingText","meta":{}},{"name":"isActive","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-isActive","meta":{}},{"name":"isFullscreenMode","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-isFullscreenMode","meta":{}},{"name":"isWatchingCursor","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-isWatchingCursor","meta":{"deprecated":{"text":"<p>Use InputConnection.requestCursorUpdates(int) instead.</p>\n"}}},{"name":"restartInput","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-restartInput","meta":{}},{"name":"sendAppPrivateCommand","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-sendAppPrivateCommand","meta":{}},{"name":"setAdditionalInputMethodSubtypes","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-setAdditionalInputMethodSubtypes","meta":{"deprecated":{"text":"<p>For IMEs that have already implemented features like customizable/downloadable\n             keyboard layouts/languages, please start migration to other approaches. One idea\n             would be exposing only one unified InputMethodSubtype then implement\n             IME's own language switching mechanism within that unified subtype. The support\n             of \"Additional Subtype\" may be completely dropped in a future version of Android.</p>\n"}}},{"name":"setCurrentInputMethodSubtype","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-setCurrentInputMethodSubtype","meta":{"deprecated":{"text":"<p>If the calling process is an IME, use\n             InputMethodSubtype), which\n             does not require any permission as long as the caller is the current IME.\n             If the calling process is some privileged app that already has\n             android.Manifest.permission.WRITE_SECURE_SETTINGS permission, just\n             directly update Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE.</p>\n"}}},{"name":"setInputMethod","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-setInputMethod","meta":{"deprecated":{"text":"<p>Use InputMethodService.switchInputMethod(String)\n instead. This method was intended for IME developers who should be accessing APIs through\n the service. APIs in this class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"setInputMethodAndSubtype","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-setInputMethodAndSubtype","meta":{"deprecated":{"text":"<p>Use\n InputMethodSubtype)\n instead. This method was intended for IME developers who should be accessing APIs through\n the service. APIs in this class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"shouldOfferSwitchingToNextInputMethod","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-shouldOfferSwitchingToNextInputMethod","meta":{"deprecated":{"text":"<p>Use InputMethodService.shouldOfferSwitchingToNextInputMethod()\n instead. This method was intended for IME developers who should be accessing APIs through\n the service. APIs in this class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"showInputMethodAndSubtypeEnabler","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-showInputMethodAndSubtypeEnabler","meta":{}},{"name":"showInputMethodPicker","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-showInputMethodPicker","meta":{}},{"name":"showSoftInput","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-showSoftInput","meta":{}},{"name":"showSoftInputFromInputMethod","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-showSoftInputFromInputMethod","meta":{"deprecated":{"text":"<p>Use InputMethodService.requestShowSelf(int) instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in this\n class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"showStatusIcon","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-showStatusIcon","meta":{"deprecated":{"text":"<p>Use InputMethodService.showStatusIcon(int) instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in this\n class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"switchToLastInputMethod","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-switchToLastInputMethod","meta":{"deprecated":{"text":"<p>Use InputMethodService.switchToPreviousInputMethod() instead. This method\n was intended for IME developers who should be accessing APIs through the service. APIs in\n this class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"switchToNextInputMethod","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-switchToNextInputMethod","meta":{"deprecated":{"text":"<p>Use InputMethodService.switchToNextInputMethod(boolean) instead. This\n method was intended for IME developers who should be accessing APIs through the service.\n APIs in this class are intended for app developers interacting with the IME.</p>\n"}}},{"name":"toggleSoftInput","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-toggleSoftInput","meta":{}},{"name":"toggleSoftInputFromWindow","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-toggleSoftInputFromWindow","meta":{}},{"name":"updateCursor","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-updateCursor","meta":{"deprecated":{"text":"<p>Use CursorAnchorInfo) instead.</p>\n"}}},{"name":"updateCursorAnchorInfo","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-updateCursorAnchorInfo","meta":{}},{"name":"updateExtractedText","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-updateExtractedText","meta":{}},{"name":"updateSelection","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-updateSelection","meta":{}},{"name":"viewClicked","tagname":"method","owner":"android.view.inputmethod.InputMethodManager","id":"method-viewClicked","meta":{"deprecated":{"text":"<p>The semantics of this method can never be defined well for composite View\n             that works as a giant \"Canvas\", which can host its own UI hierarchy and sub focus\n             state. android.webkit.WebView is a good example. Application / IME\n             developers should not rely on this method.</p>\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.inputmethod.InputMethodManager","short_doc":"Central system API to the overall input method framework (IMF) architecture,\n which arbitrates interaction between ap...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.view.inputmethod.InputMethodManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager' target='_blank'>InputMethodManager.js</a></div></pre><div class='doc-contents'><p>Central system API to the overall input method framework (IMF) architecture,\n which arbitrates interaction between applications and the current input method.</p>\n\n<p> <p>Topics covered here:\n <ol>\n <li><a href=\"#ArchitectureOverview\">Architecture Overview</a>\n <li><a href=\"#Applications\">Applications</a>\n <li><a href=\"#InputMethods\">Input Methods</a>\n <li><a href=\"#Security\">Security</a>\n </li></li></li></li></ol></p>\n\n<p> <a name=\"ArchitectureOverview\"></a>\n <h3>Architecture Overview</h3></p>\n\n<p> <p>There are three primary parties involved in the input method\n framework (IMF) architecture:</p></p>\n\n<p> <ul>\n <li> The <strong>input method manager</strong> as expressed by this class\n is the central point of the system that manages interaction between all\n other parts.  It is expressed as the client-side API here which exists\n in each application context and communicates with a global system service\n that manages the interaction across all processes.\n <li> An <strong>input method (IME)</strong> implements a particular\n interaction model allowing the user to generate text.  The system binds\n to the current input method that is in use, causing it to be created and run,\n and tells it when to hide and show its UI.  Only one IME is running at a time.\n <li> Multiple <strong>client applications</strong> arbitrate with the input\n method manager for input focus and control over the state of the IME.  Only\n one such client is ever active (working with the IME) at a time.\n </li></li></li></ul></p>\n\n<p> <a name=\"Applications\"></a>\n <h3>Applications</h3></p>\n\n<p> <p>In most cases, applications that are using the standard\n android.widget.TextView or its subclasses will have little they need\n to do to work well with soft input methods.  The main things you need to\n be aware of are:</p></p>\n\n<p> <ul>\n <li> Properly set the android.R.attr.inputType in your editable\n text views, so that the input method will have enough context to help the\n user in entering text into them.\n <li> Deal well with losing screen space when the input method is\n displayed.  Ideally an application should handle its window being resized\n smaller, but it can rely on the system performing panning of the window\n if needed.  You should set the android.R.attr.windowSoftInputMode\n attribute on your activity or the corresponding values on windows you\n create to help the system determine whether to pan or resize (it will\n try to determine this automatically but may get it wrong).\n <li> You can also control the preferred soft input state (open, closed, etc)\n for your window using the same android.R.attr.windowSoftInputMode\n attribute.\n </li></li></li></ul></p>\n\n<p> <p>More finer-grained control is available through the APIs here to directly\n interact with the IMF and its IME -- either showing or hiding the input\n area, letting the user pick an input method, etc.</p></p>\n\n<p> <p>For the rare people amongst us writing their own text editors, you\n will need to implement android.view.View.onCreateInputConnection\n to return a new instance of your own <a href=\"#!/api/android.view.inputmethod.InputConnection\" rel=\"android.view.inputmethod.InputConnection\" class=\"docClass\">android.view.inputmethod.InputConnection</a> interface\n allowing the IME to interact with your editor.</p></p>\n\n<p> <a name=\"InputMethods\"></a>\n <h3>Input Methods</h3></p>\n\n<p> <p>An input method (IME) is implemented\n as a android.app.Service, typically deriving from\n android.inputmethodservice.InputMethodService.  It must provide\n the core <a href=\"#!/api/android.view.inputmethod.InputMethod\" rel=\"android.view.inputmethod.InputMethod\" class=\"docClass\">android.view.inputmethod.InputMethod</a> interface, though this is normally handled by\n android.inputmethodservice.InputMethodService and implementors will\n only need to deal with the higher-level API there.</p></p>\n\n<p> See the android.inputmethodservice.InputMethodService class for\n more information on implementing IMEs.</p>\n\n<p> <a name=\"Security\"></a>\n <h3>Security</h3></p>\n\n<p> <p>There are a lot of security issues associated with input methods,\n since they essentially have freedom to completely drive the UI and monitor\n everything the user enters.  The Android input method framework also allows\n arbitrary third party IMEs, so care must be taken to restrict their\n selection and interactions.</p></p>\n\n<p> <p>Here are some key points about the security architecture behind the\n IMF:</p></p>\n\n<p> <ul>\n <li> <p>Only the system is allowed to directly access an IME's\n <a href=\"#!/api/android.view.inputmethod.InputMethod\" rel=\"android.view.inputmethod.InputMethod\" class=\"docClass\">android.view.inputmethod.InputMethod</a> interface, via the\n android.Manifest.permission.BIND_INPUT_METHOD permission.  This is\n enforced in the system by not binding to an input method service that does\n not require this permission, so the system can guarantee no other untrusted\n clients are accessing the current input method outside of its control.</p></li></ul></p>\n\n<p> <li> <p>There may be many client processes of the IMF, but only one may\n be active at a time.  The inactive clients can not interact with key\n parts of the IMF through the mechanisms described below.</p></li></p>\n\n<p> <li> <p>Clients of an input method are only given access to its\n <a href=\"#!/api/android.view.inputmethod.InputMethodSession\" rel=\"android.view.inputmethod.InputMethodSession\" class=\"docClass\">android.view.inputmethod.InputMethodSession</a> interface.  One instance of this interface is\n created for each client, and only calls from the session associated with\n the active client will be processed by the current IME.  This is enforced\n by android.inputmethodservice.AbstractInputMethodService for normal\n IMEs, but must be explicitly handled by an IME that is customizing the\n raw <a href=\"#!/api/android.view.inputmethod.InputMethodSession\" rel=\"android.view.inputmethod.InputMethodSession\" class=\"docClass\">android.view.inputmethod.InputMethodSession</a> implementation.</p></li></p>\n\n<p> <li> <p>Only the active client's <a href=\"#!/api/android.view.inputmethod.InputConnection\" rel=\"android.view.inputmethod.InputConnection\" class=\"docClass\">android.view.inputmethod.InputConnection</a> will accept\n operations.  The IMF tells each client process whether it is active, and\n the framework enforces that in inactive processes calls on to the current\n InputConnection will be ignored.  This ensures that the current IME can\n only deliver events and text edits to the UI that the user sees as\n being in focus.</p></li></p>\n\n<p> <li> <p>An IME can never interact with an <a href=\"#!/api/android.view.inputmethod.InputConnection\" rel=\"android.view.inputmethod.InputConnection\" class=\"docClass\">android.view.inputmethod.InputConnection</a> while\n the screen is off.  This is enforced by making all clients inactive while\n the screen is off, and prevents bad IMEs from driving the UI when the user\n can not be aware of its behavior.</p></li></p>\n\n<p> <li> <p>A client application can ask that the system let the user pick a\n new IME, but can not programmatically switch to one itself.  This avoids\n malicious applications from switching the user to their own IME, which\n remains running when the user navigates away to another application.  An\n IME, on the other hand, <em>is</em> allowed to programmatically switch\n the system to another IME, since it already has full control of user\n input.</p></li></p>\n\n<p> <li> <p>The user must explicitly enable a new IME in settings before\n they can switch to it, to confirm with the system that they know about it\n and want to make it available for use.</p>\n </li></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-HIDE_IMPLICIT_ONLY' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-HIDE_IMPLICIT_ONLY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY' class='name expandable'>HIDE_IMPLICIT_ONLY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for hideSoftInputFromWindow and android.view.inputmethod.InputMethodService.requestHideSelf(int)\nto indicate tha...</div><div class='long'><p>Flag for <a href=\"#!/api/android.view.inputmethod.InputMethodManager-method-hideSoftInputFromWindow\" rel=\"android.view.inputmethod.InputMethodManager-method-hideSoftInputFromWindow\" class=\"docClass\">hideSoftInputFromWindow</a> and android.view.inputmethod.InputMethodService.requestHideSelf(int)\nto indicate that the soft input window should only be hidden if it was not explicitly shown\nby the user.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-HIDE_NOT_ALWAYS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-HIDE_NOT_ALWAYS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_NOT_ALWAYS' class='name expandable'>HIDE_NOT_ALWAYS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for hideSoftInputFromWindow and android.view.inputmethod.InputMethodService.requestShowSelf(int)\nto indicate tha...</div><div class='long'><p>Flag for <a href=\"#!/api/android.view.inputmethod.InputMethodManager-method-hideSoftInputFromWindow\" rel=\"android.view.inputmethod.InputMethodManager-method-hideSoftInputFromWindow\" class=\"docClass\">hideSoftInputFromWindow</a> and android.view.inputmethod.InputMethodService.requestShowSelf(int)\nto indicate that the soft input window should normally be hidden, unless it was originally\nshown with <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" class=\"docClass\">SHOW_FORCED</a>.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-RESULT_HIDDEN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-RESULT_HIDDEN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_HIDDEN' class='name expandable'>RESULT_HIDDEN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft inp...</div><div class='long'><p>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft input window changed from shown to hidden.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-RESULT_SHOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-RESULT_SHOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_SHOWN' class='name expandable'>RESULT_SHOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft inp...</div><div class='long'><p>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft input window changed from hidden to shown.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-RESULT_UNCHANGED_HIDDEN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-RESULT_UNCHANGED_HIDDEN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_HIDDEN' class='name expandable'>RESULT_UNCHANGED_HIDDEN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft inp...</div><div class='long'><p>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft input window was unchanged and remains hidden.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-RESULT_UNCHANGED_SHOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-RESULT_UNCHANGED_SHOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_SHOWN' class='name expandable'>RESULT_UNCHANGED_SHOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft inp...</div><div class='long'><p>Flag for the ResultReceiver result code from\nint, ResultReceiver) and\nint, ResultReceiver): the\nstate of the soft input window was unchanged and remains shown.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-SHOW_FORCED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-SHOW_FORCED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_FORCED' class='name expandable'>SHOW_FORCED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for showSoftInput to indicate that the user has forced\nthe input method open (such as by long-pressing menu) so ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.view.inputmethod.InputMethodManager-method-showSoftInput\" rel=\"android.view.inputmethod.InputMethodManager-method-showSoftInput\" class=\"docClass\">showSoftInput</a> to indicate that the user has forced\nthe input method open (such as by long-pressing menu) so it should\nnot be closed until they explicitly do so.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SHOW_IMPLICIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-property-SHOW_IMPLICIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT' class='name expandable'>SHOW_IMPLICIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for showSoftInput to indicate that this is an implicit\nrequest to show the input window, not as the result of a ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.view.inputmethod.InputMethodManager-method-showSoftInput\" rel=\"android.view.inputmethod.InputMethodManager-method-showSoftInput\" class=\"docClass\">showSoftInput</a> to indicate that this is an implicit\nrequest to show the input window, not as the result of a direct request\nby the user.  The window may not be shown in this case.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dispatchKeyEventFromInputMethod' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-dispatchKeyEventFromInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-dispatchKeyEventFromInputMethod' class='name expandable'>dispatchKeyEventFromInputMethod</a>( <span class='pre'>targetView, event</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Provides the default implementation of android.view.inputmethod.InputConnection.sendKeyEvent(KeyEvent), which\n is exp...</div><div class='long'><p>Provides the default implementation of android.view.inputmethod.InputConnection.sendKeyEvent(KeyEvent), which\n is expected to dispatch an keyboard event sent from the IME to an appropriate event target\n depending on the given View and the current focus state.</p>\n\n<p> <p>CAUTION: This method is provided only for the situation where\n android.view.inputmethod.InputConnection.sendKeyEvent(KeyEvent) needs to be implemented without relying on\n <a href=\"#!/api/android.view.inputmethod.BaseInputConnection\" rel=\"android.view.inputmethod.BaseInputConnection\" class=\"docClass\">android.view.inputmethod.BaseInputConnection</a>. Do not use this API for anything else.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetView</span> : Object {View}<div class='sub-desc'><p>the default target view. If {@code null} is specified, then this method\n tries to find a good event target based on the current focus state.</p>\n</div></li><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>the key event to be dispatched.</p>\n</div></li></ul></div></div></div><div id='method-displayCompletions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-displayCompletions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-displayCompletions' class='name expandable'>displayCompletions</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getCurrentInputMethodSubtype' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-getCurrentInputMethodSubtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-getCurrentInputMethodSubtype' class='name expandable'>getCurrentInputMethodSubtype</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current input method subtype. ...</div><div class='long'><p>Returns the current input method subtype. This subtype is one of the subtypes in\n the current input method. This method returns null when the current input method doesn't\n have any input method subtype.</p>\n</div></div></div><div id='method-getEnabledInputMethodList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-getEnabledInputMethodList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-getEnabledInputMethodList' class='name expandable'>getEnabledInputMethodList</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of enabled input methods. ...</div><div class='long'><p>Returns the list of enabled input methods.</p>\n\n<p> <p>On multi user environment, this API returns a result for the calling process user.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of InputMethodInfo.</p>\n</div></li></ul></div></div></div><div id='method-getEnabledInputMethodSubtypeList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-getEnabledInputMethodSubtypeList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-getEnabledInputMethodSubtypeList' class='name expandable'>getEnabledInputMethodSubtypeList</a>( <span class='pre'>imi, allowsImplicitlySelectedSubtypes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a list of enabled input method subtypes for the specified input method info. ...</div><div class='long'><p>Returns a list of enabled input method subtypes for the specified input method info.</p>\n\n<p> <p>On multi user environment, this API returns a result for the calling process user.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imi</span> : Object {InputMethodInfo}<div class='sub-desc'><p>An input method info whose subtypes list will be returned.</p>\n</div></li><li><span class='pre'>allowsImplicitlySelectedSubtypes</span> : Boolean<div class='sub-desc'><p>A boolean flag to allow to return the implicitly\n selected subtypes. If an input method info doesn't have enabled subtypes, the framework\n will implicitly enable subtypes according to the current system language.</p>\n</div></li></ul></div></div></div><div id='method-getInputMethodList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-getInputMethodList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-getInputMethodList' class='name expandable'>getInputMethodList</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of installed input methods. ...</div><div class='long'><p>Returns the list of installed input methods.</p>\n\n<p> <p>On multi user environment, this API returns a result for the calling process user.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of InputMethodInfo.</p>\n</div></li></ul></div></div></div><div id='method-getLastInputMethodSubtype' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-getLastInputMethodSubtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-getLastInputMethodSubtype' class='name expandable'>getLastInputMethodSubtype</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getShortcutInputMethodsAndSubtypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-getShortcutInputMethodsAndSubtypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-getShortcutInputMethodsAndSubtypes' class='name expandable'>getShortcutInputMethodsAndSubtypes</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a map of all shortcut input method info and their subtypes. ...</div><div class='long'><p>Returns a map of all shortcut input method info and their subtypes.</p>\n</div></div></div><div id='method-hideSoftInputFromInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-hideSoftInputFromInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-hideSoftInputFromInputMethod' class='name expandable'>hideSoftInputFromInputMethod</a>( <span class='pre'>token, flags</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Close/hide the input method's soft input area, so the user no longer\n sees it or can interact with it. ...</div><div class='long'><p>Close/hide the input method's soft input area, so the user no longer\n sees it or can interact with it.  This can only be called\n from the currently active input method, as validated by the given token.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.requestHideSelf(int) instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in this\n class are intended for app developers interacting with the IME.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>Supplies the identifying token given to an input method\n when it was started, which allows it to perform this operation on\n itself.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  Currently may be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" rel=\"android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" class=\"docClass\">HIDE_IMPLICIT_ONLY</a>,\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_NOT_ALWAYS\" rel=\"android.view.inputmethod.InputMethodManager-property-HIDE_NOT_ALWAYS\" class=\"docClass\">HIDE_NOT_ALWAYS</a> bit set.</p>\n</div></li></ul></div></div></div><div id='method-hideSoftInputFromWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-hideSoftInputFromWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-hideSoftInputFromWindow' class='name expandable'>hideSoftInputFromWindow</a>( <span class='pre'>windowToken, flags, resultReceiver</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request to hide the soft input window from the context of the window\n that is currently accepting input. ...</div><div class='long'><p>Request to hide the soft input window from the context of the window\n that is currently accepting input.  This should be called as a result\n of the user doing some actually than fairly explicitly requests to\n have the input window hidden.</p>\n\n<p> <p><strong>Caveat:</strong> ResultReceiver instance passed to\n this method can be a long-lived object, because it may not be\n garbage-collected until all the corresponding ResultReceiver\n objects transferred to different processes get garbage-collected.\n Follow the general patterns to avoid memory leaks in Android.\n Consider to use java.lang.ref.WeakReference so that application\n logic objects such as android.app.Activity and Context\n can be garbage collected regardless of the lifetime of\n ResultReceiver.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>windowToken</span> : Object {IBinder}<div class='sub-desc'><p>The token of the window that is making the request,\n as returned by View.getWindowToken().</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  Currently may be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" rel=\"android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" class=\"docClass\">HIDE_IMPLICIT_ONLY</a> bit set.</p>\n</div></li><li><span class='pre'>resultReceiver</span> : Object {ResultReceiver}<div class='sub-desc'><p>If non-null, this will be called by the IME when\n it has processed your request to tell you what it has done.  The result\n code you receive may be either <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_SHOWN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_SHOWN\" class=\"docClass\">RESULT_UNCHANGED_SHOWN</a>,\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_HIDDEN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_HIDDEN\" class=\"docClass\">RESULT_UNCHANGED_HIDDEN</a>, <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_SHOWN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_SHOWN\" class=\"docClass\">RESULT_SHOWN</a>, or\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_HIDDEN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_HIDDEN\" class=\"docClass\">RESULT_HIDDEN</a>.</p>\n</div></li></ul></div></div></div><div id='method-hideStatusIcon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-hideStatusIcon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-hideStatusIcon' class='name expandable'>hideStatusIcon</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.hideStatusIcon() instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in\n this class are intended for app developers interacting with the IME.</p>\n\n        </div>\n</div></div></div><div id='method-isAcceptingText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-isAcceptingText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-isAcceptingText' class='name expandable'>isAcceptingText</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the currently served view is accepting full text edits. ...</div><div class='long'><p>Return true if the currently served view is accepting full text edits.\n If false, it has no input connection, so can only handle raw key events.</p>\n</div></div></div><div id='method-isActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-isActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-isActive' class='name expandable'>isActive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if any view is currently active in the input method. ...</div><div class='long'><p>Return true if any view is currently active in the input method.</p>\n</div></div></div><div id='method-isFullscreenMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-isFullscreenMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-isFullscreenMode' class='name expandable'>isFullscreenMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows you to discover whether the attached input method is running\n in fullscreen mode. ...</div><div class='long'><p>Allows you to discover whether the attached input method is running\n in fullscreen mode.  Return true if it is fullscreen, entirely covering\n your UI, else returns false.</p>\n</div></div></div><div id='method-isWatchingCursor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-isWatchingCursor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-isWatchingCursor' class='name expandable'>isWatchingCursor</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return true if the current input method wants to watch the location\n of the input editor's cursor in its window. ...</div><div class='long'><p>Return true if the current input method wants to watch the location\n of the input editor's cursor in its window.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputConnection.requestCursorUpdates(int) instead.</p>\n\n        </div>\n</div></div></div><div id='method-restartInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-restartInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-restartInput' class='name expandable'>restartInput</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If the input method is currently connected to the given view,\n restart it with its new contents. ...</div><div class='long'><p>If the input method is currently connected to the given view,\n restart it with its new contents.  You should call this when the text\n within your view changes outside of the normal input method or key\n input flow, such as when an application calls TextView.setText().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The view whose text has changed.</p>\n</div></li></ul></div></div></div><div id='method-sendAppPrivateCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-sendAppPrivateCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-sendAppPrivateCommand' class='name expandable'>sendAppPrivateCommand</a>( <span class='pre'>view, action, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call Bundle)\n android.view.inputmethod.InputMethodSession.appPrivateCommand() on the current Input Method. ...</div><div class='long'><p>Call Bundle)\n android.view.inputmethod.InputMethodSession.appPrivateCommand() on the current Input Method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>Optional View that is sending the command, or null if\n you want to send the command regardless of the view that is attached\n to the input method.</p>\n</div></li><li><span class='pre'>action</span> : String<div class='sub-desc'><p>Name of the command to be performed.  This <em>must</em>\n be a scoped name, i.e. prefixed with a package name you own, so that\n different developers will not create conflicting commands.</p>\n</div></li><li><span class='pre'>data</span> : Object {Bundle}<div class='sub-desc'><p>Any data to include with the command.</p>\n</div></li></ul></div></div></div><div id='method-setAdditionalInputMethodSubtypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-setAdditionalInputMethodSubtypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-setAdditionalInputMethodSubtypes' class='name expandable'>setAdditionalInputMethodSubtypes</a>( <span class='pre'>imiId, subtypes</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Set additional input method subtypes. ...</div><div class='long'><p>Set additional input method subtypes. Only a process which shares the same uid with the IME\n can add additional input method subtypes to the IME.\n Please note that a subtype's status is stored in the system.\n For example, enabled subtypes are remembered by the framework even after they are removed\n by using this method. If you re-add the same subtypes again,\n they will just get enabled. If you want to avoid such conflicts, for instance, you may\n want to create a \"different\" new subtype even with the same locale and mode,\n by changing its extra value. The different subtype won't get affected by the stored past\n status. (You may want to take a look at android.view.inputmethod.InputMethodSubtype.hashCode() to refer\n to the current implementation.)</p>\n\n<p> <p>NOTE: If the same subtype exists in both the manifest XML file and additional subtypes\n specified by {@code subtypes}, those multiple instances are automatically merged into one\n instance.</p></p>\n\n<p> <p>CAVEAT: In API Level 23 and prior, the system may do nothing if an empty\n <a href=\"#!/api/android.view.inputmethod.InputMethodSubtype\" rel=\"android.view.inputmethod.InputMethodSubtype\" class=\"docClass\">android.view.inputmethod.InputMethodSubtype</a> is specified in {@code subtypes}, which prevents you from removing\n the last one entry of additional subtypes. If your IME statically defines one or more\n subtypes in the manifest XML file, you may be able to work around this limitation by\n specifying one of those statically defined subtypes in {@code subtypes}.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>For IMEs that have already implemented features like customizable/downloadable\n             keyboard layouts/languages, please start migration to other approaches. One idea\n             would be exposing only one unified InputMethodSubtype then implement\n             IME's own language switching mechanism within that unified subtype. The support\n             of \"Additional Subtype\" may be completely dropped in a future version of Android.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imiId</span> : String<div class='sub-desc'><p>Id of InputMethodInfo which additional input method subtypes will be added to.</p>\n</div></li><li><span class='pre'>subtypes</span> : Object {android.view.inputmethod.InputMethodSubtype[]}<div class='sub-desc'><p>subtypes will be added as additional subtypes of the current input method.</p>\n</div></li></ul></div></div></div><div id='method-setCurrentInputMethodSubtype' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-setCurrentInputMethodSubtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-setCurrentInputMethodSubtype' class='name expandable'>setCurrentInputMethodSubtype</a>( <span class='pre'>subtype</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Switch to a new input method subtype of the current input method. ...</div><div class='long'><p>Switch to a new input method subtype of the current input method.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>If the calling process is an IME, use\n             InputMethodSubtype), which\n             does not require any permission as long as the caller is the current IME.\n             If the calling process is some privileged app that already has\n             android.Manifest.permission.WRITE_SECURE_SETTINGS permission, just\n             directly update Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>subtype</span> : Object {InputMethodSubtype}<div class='sub-desc'><p>A new input method subtype to switch.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the current subtype was successfully switched. When the specified subtype is\n null, this method returns false.</p>\n</div></li></ul></div></div></div><div id='method-setInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-setInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-setInputMethod' class='name expandable'>setInputMethod</a>( <span class='pre'>token, id</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Force switch to a new input method component. ...</div><div class='long'><p>Force switch to a new input method component. This can only be called\n from an application or a service which has a token of the currently active input method.</p>\n\n<p> <p>On Android Build.VERSION_CODES.Q and later devices, the undocumented behavior that\n token can be {@code null} when the caller has\n android.Manifest.permission.WRITE_SECURE_SETTINGS is deprecated. Instead, update\n android.provider.Settings.Secure.DEFAULT_INPUT_METHOD and\n android.provider.Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE directly.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.switchInputMethod(String)\n instead. This method was intended for IME developers who should be accessing APIs through\n the service. APIs in this class are intended for app developers interacting with the IME.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>Supplies the identifying token given to an input method\n when it was started, which allows it to perform this operation on\n itself.</p>\n</div></li><li><span class='pre'>id</span> : String<div class='sub-desc'><p>The unique identifier for the new input method to be switched to.</p>\n</div></li></ul></div></div></div><div id='method-setInputMethodAndSubtype' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-setInputMethodAndSubtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-setInputMethodAndSubtype' class='name expandable'>setInputMethodAndSubtype</a>( <span class='pre'>token, id, subtype</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Force switch to a new input method and subtype. ...</div><div class='long'><p>Force switch to a new input method and subtype. This can only be called\n from an application or a service which has a token of the currently active input method.</p>\n\n<p> <p>On Android Build.VERSION_CODES.Q and later devices, {@code token} cannot be\n {@code null} even with android.Manifest.permission.WRITE_SECURE_SETTINGS. Instead,\n update android.provider.Settings.Secure.DEFAULT_INPUT_METHOD and\n android.provider.Settings.Secure.SELECTED_INPUT_METHOD_SUBTYPE directly.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use\n InputMethodSubtype)\n instead. This method was intended for IME developers who should be accessing APIs through\n the service. APIs in this class are intended for app developers interacting with the IME.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>Supplies the identifying token given to an input method\n when it was started, which allows it to perform this operation on\n itself.</p>\n</div></li><li><span class='pre'>id</span> : String<div class='sub-desc'><p>The unique identifier for the new input method to be switched to.</p>\n</div></li><li><span class='pre'>subtype</span> : Object {InputMethodSubtype}<div class='sub-desc'><p>The new subtype of the new input method to be switched to.</p>\n</div></li></ul></div></div></div><div id='method-shouldOfferSwitchingToNextInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-shouldOfferSwitchingToNextInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-shouldOfferSwitchingToNextInputMethod' class='name expandable'>shouldOfferSwitchingToNextInputMethod</a>( <span class='pre'>imeToken</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns true if the current IME needs to offer the users ways to switch to a next input\n method (e.g. ...</div><div class='long'><p>Returns true if the current IME needs to offer the users ways to switch to a next input\n method (e.g. a globe key.).\n When an IME sets supportsSwitchingToNextInputMethod and this method returns true,\n the IME has to offer ways to to invoke <a href=\"#!/api/android.view.inputmethod.InputMethodManager-method-switchToNextInputMethod\" rel=\"android.view.inputmethod.InputMethodManager-method-switchToNextInputMethod\" class=\"docClass\">switchToNextInputMethod</a> accordingly.\n <p> Note that the system determines the most appropriate next input method\n and subtype in order to provide the consistent user experience in switching\n between IMEs and subtypes.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.shouldOfferSwitchingToNextInputMethod()\n instead. This method was intended for IME developers who should be accessing APIs through\n the service. APIs in this class are intended for app developers interacting with the IME.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imeToken</span> : Object {IBinder}<div class='sub-desc'><p>Supplies the identifying token given to an input method when it was started,\n which allows it to perform this operation on itself.</p>\n</div></li></ul></div></div></div><div id='method-showInputMethodAndSubtypeEnabler' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-showInputMethodAndSubtypeEnabler' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-showInputMethodAndSubtypeEnabler' class='name expandable'>showInputMethodAndSubtypeEnabler</a>( <span class='pre'>imiId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Show the settings for enabling subtypes of the specified input method. ...</div><div class='long'><p>Show the settings for enabling subtypes of the specified input method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imiId</span> : String<div class='sub-desc'><p>An input method, whose subtypes settings will be shown. If imiId is null,\n subtypes of all input methods will be shown.</p>\n</div></li></ul></div></div></div><div id='method-showInputMethodPicker' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-showInputMethodPicker' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-showInputMethodPicker' class='name expandable'>showInputMethodPicker</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Show IME picker popup window. ...</div><div class='long'><p>Show IME picker popup window.</p>\n\n<p> <p>Requires the PackageManager.FEATURE_INPUT_METHODS feature which can be detected\n using PackageManager.hasSystemFeature(String).</p>\n</div></div></div><div id='method-showSoftInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-showSoftInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-showSoftInput' class='name expandable'>showSoftInput</a>( <span class='pre'>view, flags, resultReceiver</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Explicitly request that the current input method's soft input area be\n shown to the user, if needed. ...</div><div class='long'><p>Explicitly request that the current input method's soft input area be\n shown to the user, if needed.  Call this if the user interacts with\n your view in such a way that they have expressed they would like to\n start performing input into it.</p>\n\n<p> <p><strong>Caveat:</strong> ResultReceiver instance passed to\n this method can be a long-lived object, because it may not be\n garbage-collected until all the corresponding ResultReceiver\n objects transferred to different processes get garbage-collected.\n Follow the general patterns to avoid memory leaks in Android.\n Consider to use java.lang.ref.WeakReference so that application\n logic objects such as android.app.Activity and Context\n can be garbage collected regardless of the lifetime of\n ResultReceiver.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The currently focused view, which would like to receive\n soft keyboard input.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  Currently may be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" class=\"docClass\">SHOW_IMPLICIT</a> bit set.</p>\n</div></li><li><span class='pre'>resultReceiver</span> : Object {ResultReceiver}<div class='sub-desc'><p>If non-null, this will be called by the IME when\n it has processed your request to tell you what it has done.  The result\n code you receive may be either <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_SHOWN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_SHOWN\" class=\"docClass\">RESULT_UNCHANGED_SHOWN</a>,\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_HIDDEN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_UNCHANGED_HIDDEN\" class=\"docClass\">RESULT_UNCHANGED_HIDDEN</a>, <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_SHOWN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_SHOWN\" class=\"docClass\">RESULT_SHOWN</a>, or\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-RESULT_HIDDEN\" rel=\"android.view.inputmethod.InputMethodManager-property-RESULT_HIDDEN\" class=\"docClass\">RESULT_HIDDEN</a>.</p>\n</div></li></ul></div></div></div><div id='method-showSoftInputFromInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-showSoftInputFromInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-showSoftInputFromInputMethod' class='name expandable'>showSoftInputFromInputMethod</a>( <span class='pre'>token, flags</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Show the input method's soft input area, so the user\n sees the input method window and can interact with it. ...</div><div class='long'><p>Show the input method's soft input area, so the user\n sees the input method window and can interact with it.\n This can only be called from the currently active input method,\n as validated by the given token.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.requestShowSelf(int) instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in this\n class are intended for app developers interacting with the IME.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>Supplies the identifying token given to an input method\n when it was started, which allows it to perform this operation on\n itself.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  Currently may be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" class=\"docClass\">SHOW_IMPLICIT</a> or\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" class=\"docClass\">SHOW_FORCED</a> bit set.</p>\n</div></li></ul></div></div></div><div id='method-showStatusIcon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-showStatusIcon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-showStatusIcon' class='name expandable'>showStatusIcon</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.showStatusIcon(int) instead. This method was\n intended for IME developers who should be accessing APIs through the service. APIs in this\n class are intended for app developers interacting with the IME.</p>\n\n        </div>\n</div></div></div><div id='method-switchToLastInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-switchToLastInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-switchToLastInputMethod' class='name expandable'>switchToLastInputMethod</a>( <span class='pre'>imeToken</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Force switch to the last used input method and subtype. ...</div><div class='long'><p>Force switch to the last used input method and subtype. If the last input method didn't have\n any subtypes, the framework will simply switch to the last input method with no subtype\n specified.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.switchToPreviousInputMethod() instead. This method\n was intended for IME developers who should be accessing APIs through the service. APIs in\n this class are intended for app developers interacting with the IME.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imeToken</span> : Object {IBinder}<div class='sub-desc'><p>Supplies the identifying token given to an input method when it was started,\n which allows it to perform this operation on itself.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the current input method and subtype was successfully switched to the last\n used input method and subtype.</p>\n</div></li></ul></div></div></div><div id='method-switchToNextInputMethod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-switchToNextInputMethod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-switchToNextInputMethod' class='name expandable'>switchToNextInputMethod</a>( <span class='pre'>imeToken, onlyCurrentIme</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Force switch to the next input method and subtype. ...</div><div class='long'><p>Force switch to the next input method and subtype. If there is no IME enabled except\n current IME and subtype, do nothing.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use InputMethodService.switchToNextInputMethod(boolean) instead. This\n method was intended for IME developers who should be accessing APIs through the service.\n APIs in this class are intended for app developers interacting with the IME.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imeToken</span> : Object {IBinder}<div class='sub-desc'><p>Supplies the identifying token given to an input method when it was started,\n which allows it to perform this operation on itself.</p>\n</div></li><li><span class='pre'>onlyCurrentIme</span> : Boolean<div class='sub-desc'><p>if true, the framework will find the next subtype which\n belongs to the current IME</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the current input method and subtype was successfully switched to the next\n input method and subtype.</p>\n</div></li></ul></div></div></div><div id='method-toggleSoftInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-toggleSoftInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-toggleSoftInput' class='name expandable'>toggleSoftInput</a>( <span class='pre'>showFlags, hideFlags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method toggles the input method window display. ...</div><div class='long'><p>This method toggles the input method window display.</p>\n\n<p> If the input window is already displayed, it gets hidden.\n If not the input window will be displayed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>showFlags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  May be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" class=\"docClass\">SHOW_IMPLICIT</a>,\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" class=\"docClass\">SHOW_FORCED</a> bit set.</p>\n</div></li><li><span class='pre'>hideFlags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  May be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" rel=\"android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" class=\"docClass\">HIDE_IMPLICIT_ONLY</a>,\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_NOT_ALWAYS\" rel=\"android.view.inputmethod.InputMethodManager-property-HIDE_NOT_ALWAYS\" class=\"docClass\">HIDE_NOT_ALWAYS</a> bit set.</p>\n</div></li></ul></div></div></div><div id='method-toggleSoftInputFromWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-toggleSoftInputFromWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-toggleSoftInputFromWindow' class='name expandable'>toggleSoftInputFromWindow</a>( <span class='pre'>windowToken, showFlags, hideFlags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method toggles the input method window display. ...</div><div class='long'><p>This method toggles the input method window display.\n If the input window is already displayed, it gets hidden.\n If not the input window will be displayed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>windowToken</span> : Object {IBinder}<div class='sub-desc'><p>The token of the window that is making the request,\n as returned by View.getWindowToken().</p>\n</div></li><li><span class='pre'>showFlags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  May be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_IMPLICIT\" class=\"docClass\">SHOW_IMPLICIT</a>,\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" rel=\"android.view.inputmethod.InputMethodManager-property-SHOW_FORCED\" class=\"docClass\">SHOW_FORCED</a> bit set.</p>\n</div></li><li><span class='pre'>hideFlags</span> : Number<div class='sub-desc'><p>Provides additional operating flags.  May be\n 0 or have the <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" rel=\"android.view.inputmethod.InputMethodManager-property-HIDE_IMPLICIT_ONLY\" class=\"docClass\">HIDE_IMPLICIT_ONLY</a>,\n <a href=\"#!/api/android.view.inputmethod.InputMethodManager-property-HIDE_NOT_ALWAYS\" rel=\"android.view.inputmethod.InputMethodManager-property-HIDE_NOT_ALWAYS\" class=\"docClass\">HIDE_NOT_ALWAYS</a> bit set.</p>\n</div></li></ul></div></div></div><div id='method-updateCursor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-updateCursor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-updateCursor' class='name expandable'>updateCursor</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Report the current cursor location in its window. ...</div><div class='long'><p>Report the current cursor location in its window.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use CursorAnchorInfo) instead.</p>\n\n        </div>\n</div></div></div><div id='method-updateCursorAnchorInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-updateCursorAnchorInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-updateCursorAnchorInfo' class='name expandable'>updateCursorAnchorInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report positional change of the text insertion point and/or characters in the composition\n string. ...</div><div class='long'><p>Report positional change of the text insertion point and/or characters in the composition\n string.</p>\n</div></div></div><div id='method-updateExtractedText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-updateExtractedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-updateExtractedText' class='name expandable'>updateExtractedText</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-updateSelection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-updateSelection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-updateSelection' class='name expandable'>updateSelection</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report the current selection range. ...</div><div class='long'><p>Report the current selection range.</p>\n\n<p> <p><strong>Editor authors</strong>, you need to call this method whenever\n the cursor moves in your editor. Remember that in addition to doing this, your\n editor needs to always supply current cursor values in\n <a href=\"#!/api/android.view.inputmethod.EditorInfo-property-initialSelStart\" rel=\"android.view.inputmethod.EditorInfo-property-initialSelStart\" class=\"docClass\">android.view.inputmethod.EditorInfo.initialSelStart</a> and <a href=\"#!/api/android.view.inputmethod.EditorInfo-property-initialSelEnd\" rel=\"android.view.inputmethod.EditorInfo-property-initialSelEnd\" class=\"docClass\">android.view.inputmethod.EditorInfo.initialSelEnd</a> every\n time android.view.View.onCreateInputConnection(EditorInfo) is\n called, which happens whenever the keyboard shows up or the focus changes\n to a text field, among other cases.</p></p>\n</div></div></div><div id='method-viewClicked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inputmethod.InputMethodManager'>android.view.inputmethod.InputMethodManager</span><br/><a href='source/InputMethodManager.html#android-view-inputmethod-InputMethodManager-method-viewClicked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inputmethod.InputMethodManager-method-viewClicked' class='name expandable'>viewClicked</a>( <span class='pre'>view</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Notify the event when the user tapped or clicked the text view. ...</div><div class='long'><p>Notify the event when the user tapped or clicked the text view.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The semantics of this method can never be defined well for composite View\n             that works as a giant \"Canvas\", which can host its own UI hierarchy and sub focus\n             state. android.webkit.WebView is a good example. Application / IME\n             developers should not rely on this method.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>View which is being clicked.\n@see InputMethodService#onViewClicked(boolean)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});