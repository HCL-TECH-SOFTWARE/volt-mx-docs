Ext.data.JsonP.android_net_wifi_aware_WifiAwareSession({"tagname":"class","name":"android.net.wifi.aware.WifiAwareSession","autodetected":{},"files":[{"filename":"WifiAwareSession.js","href":"WifiAwareSession.html#android-net-wifi-aware-WifiAwareSession"}],"extends":"java.lang.Object","members":[{"name":"close","tagname":"method","owner":"android.net.wifi.aware.WifiAwareSession","id":"method-close","meta":{}},{"name":"createNetworkSpecifierOpen","tagname":"method","owner":"android.net.wifi.aware.WifiAwareSession","id":"method-createNetworkSpecifierOpen","meta":{}},{"name":"createNetworkSpecifierPassphrase","tagname":"method","owner":"android.net.wifi.aware.WifiAwareSession","id":"method-createNetworkSpecifierPassphrase","meta":{}},{"name":"publish","tagname":"method","owner":"android.net.wifi.aware.WifiAwareSession","id":"method-publish","meta":{}},{"name":"subscribe","tagname":"method","owner":"android.net.wifi.aware.WifiAwareSession","id":"method-subscribe","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.wifi.aware.WifiAwareSession","short_doc":"implements java.lang.AutoCloseable\n\nThis class represents a Wi-Fi Aware session - an attachment to the Wi-Fi Aware se...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.wifi.aware.WifiAwareSession</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WifiAwareSession.html#android-net-wifi-aware-WifiAwareSession' target='_blank'>WifiAwareSession.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>This class represents a Wi-Fi Aware session - an attachment to the Wi-Fi Aware service through\n which the app can execute discovery operations.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.WifiAwareSession'>android.net.wifi.aware.WifiAwareSession</span><br/><a href='source/WifiAwareSession.html#android-net-wifi-aware-WifiAwareSession-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.WifiAwareSession-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Destroy the Wi-Fi Aware service session and, if no other applications are attached to Aware,\n also disable Aware. ...</div><div class='long'><p>Destroy the Wi-Fi Aware service session and, if no other applications are attached to Aware,\n also disable Aware. This method destroys all outstanding operations - i.e. all publish and\n subscribes are terminated, and any outstanding data-links are shut-down. However, it is\n good practice to destroy these discovery sessions and connections explicitly before a\n session-wide destroy.\n <p>\n An application may re-attach after a destroy using\n Handler) .</p>\n</div></div></div><div id='method-createNetworkSpecifierOpen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.WifiAwareSession'>android.net.wifi.aware.WifiAwareSession</span><br/><a href='source/WifiAwareSession.html#android-net-wifi-aware-WifiAwareSession-method-createNetworkSpecifierOpen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.WifiAwareSession-method-createNetworkSpecifierOpen' class='name expandable'>createNetworkSpecifierOpen</a>( <span class='pre'>role, peer</span> ) : Object {android.net.NetworkSpecifier}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an unencrypted WiFi Aware conn...</div><div class='long'><p>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an unencrypted WiFi Aware connection (link) to the specified peer. The\n android.net.NetworkRequest.Builder.addTransportType(int) should be set to\n android.net.NetworkCapabilities.TRANSPORT_WIFI_AWARE.\n <p>\n     This API is targeted for applications which can obtain the peer MAC address using OOB\n     (out-of-band) discovery. Aware discovery does not provide the MAC address of the peer -\n     when using Aware discovery use the alternative network specifier method -\n     android.net.wifi.aware.WifiAwareNetworkSpecifier.Builder.\n <p>\n To set up an encrypted link use the\n byte[], String) API.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>role</span> : Number<div class='sub-desc'><p>The role of this device:\n              WifiAwareManager.WIFI_AWARE_DATA_PATH_ROLE_INITIATOR or\n              WifiAwareManager.WIFI_AWARE_DATA_PATH_ROLE_RESPONDER</p>\n</div></li><li><span class='pre'>peer</span> : Object {byte[]}<div class='sub-desc'><p>The MAC address of the peer's Aware discovery interface. On a RESPONDER this\n              value is used to gate the acceptance of a connection request from only that\n              peer.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkSpecifier}</span><div class='sub-desc'><p>A NetworkSpecifier to be used to construct\n android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) to pass to\n android.net.ConnectivityManager.NetworkCallback)\n [or other varieties of that API].</p>\n</div></li></ul></div></div></div><div id='method-createNetworkSpecifierPassphrase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.WifiAwareSession'>android.net.wifi.aware.WifiAwareSession</span><br/><a href='source/WifiAwareSession.html#android-net-wifi-aware-WifiAwareSession-method-createNetworkSpecifierPassphrase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.WifiAwareSession-method-createNetworkSpecifierPassphrase' class='name expandable'>createNetworkSpecifierPassphrase</a>( <span class='pre'>role, peer, passphrase</span> ) : Object {android.net.NetworkSpecifier}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an encrypted WiFi Aware connec...</div><div class='long'><p>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an encrypted WiFi Aware connection (link) to the specified peer. The\n android.net.NetworkRequest.Builder.addTransportType(int) should be set to\n android.net.NetworkCapabilities.TRANSPORT_WIFI_AWARE.\n <p>\n     This API is targeted for applications which can obtain the peer MAC address using OOB\n     (out-of-band) discovery. Aware discovery does not provide the MAC address of the peer -\n     when using Aware discovery use the alternative network specifier method -\n     android.net.wifi.aware.WifiAwareNetworkSpecifier.Builder.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>role</span> : Number<div class='sub-desc'><p>The role of this device:\n              WifiAwareManager.WIFI_AWARE_DATA_PATH_ROLE_INITIATOR or\n              WifiAwareManager.WIFI_AWARE_DATA_PATH_ROLE_RESPONDER</p>\n</div></li><li><span class='pre'>peer</span> : Object {byte[]}<div class='sub-desc'><p>The MAC address of the peer's Aware discovery interface. On a RESPONDER this\n              value is used to gate the acceptance of a connection request from only that\n              peer.</p>\n</div></li><li><span class='pre'>passphrase</span> : String<div class='sub-desc'><p>The passphrase to be used to encrypt the link. The PMK is generated from\n                   the passphrase. Use byte[]) to\n                   specify an open (unencrypted) link.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkSpecifier}</span><div class='sub-desc'><p>A NetworkSpecifier to be used to construct\n android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) to pass to\n android.net.ConnectivityManager.NetworkCallback)\n [or other varieties of that API].</p>\n</div></li></ul></div></div></div><div id='method-publish' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.WifiAwareSession'>android.net.wifi.aware.WifiAwareSession</span><br/><a href='source/WifiAwareSession.html#android-net-wifi-aware-WifiAwareSession-method-publish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.WifiAwareSession-method-publish' class='name expandable'>publish</a>( <span class='pre'>publishConfig, callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Issue a request to the Aware service to create a new Aware publish discovery session, using\n the specified {@code pub...</div><div class='long'><p>Issue a request to the Aware service to create a new Aware publish discovery session, using\n the specified {@code publishConfig} configuration. The results of the publish operation\n are routed to the callbacks of <a href=\"#!/api/android.net.wifi.aware.DiscoverySessionCallback\" rel=\"android.net.wifi.aware.DiscoverySessionCallback\" class=\"docClass\">android.net.wifi.aware.DiscoverySessionCallback</a>:\n <ul>\n     <li>\n     Publishandroid.net.wifi.aware.DiscoverySession)\n     is called when the publish session is created and provides a handle to the session.\n     Further operations on the publish session can be executed on that object.\n     <li>android.net.wifi.aware.DiscoverySessionCallback.onSessionConfigFailed() is called if the\n     publish operation failed.\n </li></li></ul>\n <p>\n Other results of the publish session operations will also be routed to callbacks\n on the {@code callback} object. The resulting publish session can be modified using\n android.net.wifi.aware.PublishDiscoverySession.updatePublish(PublishConfig).\n <p>\n      An application must use the android.net.wifi.aware.DiscoverySession.close() to\n      terminate the publish discovery session once it isn't needed. This will free\n      resources as well terminate any on-air transmissions.\n <p>The application must have the android.Manifest.permission.ACCESS_FINE_LOCATION\n permission to start a publish discovery session.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>publishConfig</span> : Object {PublishConfig}<div class='sub-desc'><p>The PublishConfig specifying the\n            configuration of the requested publish session.</p>\n</div></li><li><span class='pre'>callback</span> : Object {DiscoverySessionCallback}<div class='sub-desc'><p>A DiscoverySessionCallback derived object to be used for\n                 session event callbacks.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>The Handler on whose thread to execute the callbacks of the {@code\n callback} object. If a null is provided then the application's main thread will be used.</p>\n</div></li></ul></div></div></div><div id='method-subscribe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.WifiAwareSession'>android.net.wifi.aware.WifiAwareSession</span><br/><a href='source/WifiAwareSession.html#android-net-wifi-aware-WifiAwareSession-method-subscribe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.WifiAwareSession-method-subscribe' class='name expandable'>subscribe</a>( <span class='pre'>subscribeConfig, callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Issue a request to the Aware service to create a new Aware subscribe discovery session, using\n the specified {@code s...</div><div class='long'><p>Issue a request to the Aware service to create a new Aware subscribe discovery session, using\n the specified {@code subscribeConfig} configuration. The results of the subscribe\n operation are routed to the callbacks of <a href=\"#!/api/android.net.wifi.aware.DiscoverySessionCallback\" rel=\"android.net.wifi.aware.DiscoverySessionCallback\" class=\"docClass\">android.net.wifi.aware.DiscoverySessionCallback</a>:\n <ul>\n     <li>\n  Subscribeandroid.net.wifi.aware.DiscoverySession)\n     is called when the subscribe session is created and provides a handle to the session.\n     Further operations on the subscribe session can be executed on that object.\n     <li>android.net.wifi.aware.DiscoverySessionCallback.onSessionConfigFailed() is called if the\n     subscribe operation failed.\n </li></li></ul>\n <p>\n Other results of the subscribe session operations will also be routed to callbacks\n on the {@code callback} object. The resulting subscribe session can be modified using\n android.net.wifi.aware.SubscribeDiscoverySession.updateSubscribe(SubscribeConfig).\n <p>\n      An application must use the android.net.wifi.aware.DiscoverySession.close() to\n      terminate the subscribe discovery session once it isn't needed. This will free\n      resources as well terminate any on-air transmissions.\n <p>The application must have the android.Manifest.permission.ACCESS_FINE_LOCATION\n permission to start a subscribe discovery session.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>subscribeConfig</span> : Object {SubscribeConfig}<div class='sub-desc'><p>The SubscribeConfig specifying the\n            configuration of the requested subscribe session.</p>\n</div></li><li><span class='pre'>callback</span> : Object {DiscoverySessionCallback}<div class='sub-desc'><p>A DiscoverySessionCallback derived object to be used for\n                 session event callbacks.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>The Handler on whose thread to execute the callbacks of the {@code\n callback} object. If a null is provided then the application's main thread will be used.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});