Ext.data.JsonP.android_net_wifi_aware_DiscoverySession({"tagname":"class","name":"android.net.wifi.aware.DiscoverySession","autodetected":{},"files":[{"filename":"DiscoverySession.js","href":"DiscoverySession.html#android-net-wifi-aware-DiscoverySession"}],"extends":"java.lang.Object","members":[{"name":"close","tagname":"method","owner":"android.net.wifi.aware.DiscoverySession","id":"method-close","meta":{}},{"name":"createNetworkSpecifierOpen","tagname":"method","owner":"android.net.wifi.aware.DiscoverySession","id":"method-createNetworkSpecifierOpen","meta":{}},{"name":"createNetworkSpecifierPassphrase","tagname":"method","owner":"android.net.wifi.aware.DiscoverySession","id":"method-createNetworkSpecifierPassphrase","meta":{}},{"name":"sendMessage","tagname":"method","owner":"android.net.wifi.aware.DiscoverySession","id":"method-sendMessage","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.wifi.aware.DiscoverySession","short_doc":"implements java.lang.AutoCloseable\n\nA class representing a single publish or subscribe Aware session. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.net.wifi.aware.PublishDiscoverySession","android.net.wifi.aware.SubscribeDiscoverySession"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.wifi.aware.DiscoverySession</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.net.wifi.aware.PublishDiscoverySession' rel='android.net.wifi.aware.PublishDiscoverySession' class='docClass'>android.net.wifi.aware.PublishDiscoverySession</a></div><div class='dependency'><a href='#!/api/android.net.wifi.aware.SubscribeDiscoverySession' rel='android.net.wifi.aware.SubscribeDiscoverySession' class='docClass'>android.net.wifi.aware.SubscribeDiscoverySession</a></div><h4>Files</h4><div class='dependency'><a href='source/DiscoverySession.html#android-net-wifi-aware-DiscoverySession' target='_blank'>DiscoverySession.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>A class representing a single publish or subscribe Aware session. This object\n will not be created directly - only its child classes are available:\n <a href=\"#!/api/android.net.wifi.aware.PublishDiscoverySession\" rel=\"android.net.wifi.aware.PublishDiscoverySession\" class=\"docClass\">android.net.wifi.aware.PublishDiscoverySession</a> and <a href=\"#!/api/android.net.wifi.aware.SubscribeDiscoverySession\" rel=\"android.net.wifi.aware.SubscribeDiscoverySession\" class=\"docClass\">android.net.wifi.aware.SubscribeDiscoverySession</a>. This\n class provides functionality common to both publish and subscribe discovery sessions:\n <ul>\n      <li>Sending messages: int, byte[]) method.\n      <li>Creating a network-specifier when requesting a Aware connection using\n      android.net.wifi.aware.WifiAwareNetworkSpecifier.Builder.\n </li></li></ul>\n <p>\n The <a href=\"#!/api/android.net.wifi.aware.DiscoverySession-method-close\" rel=\"android.net.wifi.aware.DiscoverySession-method-close\" class=\"docClass\">close</a>() method must be called to destroy discovery sessions once they are\n no longer needed.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.DiscoverySession'>android.net.wifi.aware.DiscoverySession</span><br/><a href='source/DiscoverySession.html#android-net-wifi-aware-DiscoverySession-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.DiscoverySession-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Destroy the publish or subscribe session - free any resources, and stop\n transmitting packets on-air (for an active s...</div><div class='long'><p>Destroy the publish or subscribe session - free any resources, and stop\n transmitting packets on-air (for an active session) or listening for\n matches (for a passive session). The session may not be used for any\n additional operations after its destruction.\n <p>\n     This operation must be done on a session which is no longer needed. Otherwise system\n     resources will continue to be utilized until the application exits. The only\n     exception is a session for which we received a termination callback,\n     android.net.wifi.aware.DiscoverySessionCallback.onSessionTerminated().</p>\n</div></div></div><div id='method-createNetworkSpecifierOpen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.DiscoverySession'>android.net.wifi.aware.DiscoverySession</span><br/><a href='source/DiscoverySession.html#android-net-wifi-aware-DiscoverySession-method-createNetworkSpecifierOpen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.DiscoverySession-method-createNetworkSpecifierOpen' class='name expandable'>createNetworkSpecifierOpen</a>( <span class='pre'>peerHandle, peerHandle</span> ) : Object {android.net.NetworkSpecifier}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an unencrypted WiFi Aware conn...</div><div class='long'><p>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an unencrypted WiFi Aware connection (link) to the specified peer. The\n android.net.NetworkRequest.Builder.addTransportType(int) should be set to\n android.net.NetworkCapabilities.TRANSPORT_WIFI_AWARE.\n <p>\n This method should be used when setting up a connection with a peer discovered through Aware\n discovery or communication (in such scenarios the MAC address of the peer is shielded by\n an opaque peer ID handle). If an Aware connection is needed to a peer discovered using other\n OOB (out-of-band) mechanism then use the alternative\n byte[]) method - which uses the\n peer's MAC address.\n <p>\n Note: per the Wi-Fi Aware specification the roles are fixed - a Subscriber is an INITIATOR\n and a Publisher is a RESPONDER.\n <p>\n To set up an encrypted link use the\n String) API.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>peerHandle</span> : Object {PeerHandle}<div class='sub-desc'><p>The peer's handle obtained through\n byte[], java.util.List)\n                   or\n                   byte[]).\n                   On a RESPONDER this value is used to gate the acceptance of a connection\n                   request from only that peer.</p>\n</div></li><li><span class='pre'>peerHandle</span> : Object<div class='sub-desc'><p>The peer's handle obtained through\n byte[], java.util.List)\n                   or\n                   byte[]).\n                   On a RESPONDER this value is used to gate the acceptance of a connection\n                   request from only that peer.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkSpecifier}</span><div class='sub-desc'><p>A NetworkSpecifier to be used to construct\n android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) to pass to\n android.net.ConnectivityManager.NetworkCallback)\n [or other varieties of that API].</p>\n</div></li></ul></div></div></div><div id='method-createNetworkSpecifierPassphrase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.DiscoverySession'>android.net.wifi.aware.DiscoverySession</span><br/><a href='source/DiscoverySession.html#android-net-wifi-aware-DiscoverySession-method-createNetworkSpecifierPassphrase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.DiscoverySession-method-createNetworkSpecifierPassphrase' class='name expandable'>createNetworkSpecifierPassphrase</a>( <span class='pre'>peerHandle, passphrase, passphrase</span> ) : Object {android.net.NetworkSpecifier}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an encrypted WiFi Aware connec...</div><div class='long'><p>Create a android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) for\n an encrypted WiFi Aware connection (link) to the specified peer. The\n android.net.NetworkRequest.Builder.addTransportType(int) should be set to\n android.net.NetworkCapabilities.TRANSPORT_WIFI_AWARE.\n <p>\n This method should be used when setting up a connection with a peer discovered through Aware\n discovery or communication (in such scenarios the MAC address of the peer is shielded by\n an opaque peer ID handle). If an Aware connection is needed to a peer discovered using other\n OOB (out-of-band) mechanism then use the alternative\n byte[], String) method -\n which uses the peer's MAC address.\n <p>\n Note: per the Wi-Fi Aware specification the roles are fixed - a Subscriber is an INITIATOR\n and a Publisher is a RESPONDER.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>peerHandle</span> : Object {PeerHandle}<div class='sub-desc'><p>The peer's handle obtained through\n byte[], java.util.List) or\n byte[]). On a RESPONDER this value is used to gate the acceptance of a connection request\n                   from only that peer.</p>\n</div></li><li><span class='pre'>passphrase</span> : String<div class='sub-desc'><p>The passphrase to be used to encrypt the link. The PMK is generated from\n                   the passphrase. Use the\n                   createNetworkSpecifierOpen(PeerHandle) API to\n                   specify an open (unencrypted) link.</p>\n</div></li><li><span class='pre'>passphrase</span> : Object<div class='sub-desc'><p>The passphrase to be used to encrypt the link. The PMK is generated from\n                   the passphrase. Use the\n                   createNetworkSpecifierOpen(PeerHandle) API to\n                   specify an open (unencrypted) link.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkSpecifier}</span><div class='sub-desc'><p>A NetworkSpecifier to be used to construct\n android.net.NetworkRequest.Builder.setNetworkSpecifier(NetworkSpecifier) to pass to\n android.net.ConnectivityManager.NetworkCallback)\n [or other varieties of that API].</p>\n</div></li></ul></div></div></div><div id='method-sendMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.aware.DiscoverySession'>android.net.wifi.aware.DiscoverySession</span><br/><a href='source/DiscoverySession.html#android-net-wifi-aware-DiscoverySession-method-sendMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.aware.DiscoverySession-method-sendMessage' class='name expandable'>sendMessage</a>( <span class='pre'>peerHandle, messageId, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends a message to the specified destination. ...</div><div class='long'><p>Sends a message to the specified destination. Aware messages are transmitted in the context\n of a discovery session - executed subsequent to a publish/subscribe\n byte[], java.util.List) event.\n <p>\n     Aware messages are not guaranteed delivery. Callbacks on\n     <a href=\"#!/api/android.net.wifi.aware.DiscoverySessionCallback\" rel=\"android.net.wifi.aware.DiscoverySessionCallback\" class=\"docClass\">android.net.wifi.aware.DiscoverySessionCallback</a> indicate message was transmitted successfully,\n     android.net.wifi.aware.DiscoverySessionCallback.onMessageSendSucceeded(int), or transmission\n     failed (possibly after several retries) -\n     android.net.wifi.aware.DiscoverySessionCallback.onMessageSendFailed(int).\n <p>\n The peer will get a callback indicating a message was received using\n byte[]).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>peerHandle</span> : Object {PeerHandle}<div class='sub-desc'><p>The peer's handle for the message. Must be a result of an\n byte[], java.util.List) or\n byte[]) events.</p>\n</div></li><li><span class='pre'>messageId</span> : Number<div class='sub-desc'><p>An arbitrary integer used by the caller to identify the message. The same\n            integer ID will be returned in the callbacks indicating message send success or\n            failure. The {@code messageId} is not used internally by the Aware service - it\n                  can be arbitrary and non-unique.</p>\n</div></li><li><span class='pre'>message</span> : Object {byte[]}<div class='sub-desc'><p>The message to be transmitted.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});