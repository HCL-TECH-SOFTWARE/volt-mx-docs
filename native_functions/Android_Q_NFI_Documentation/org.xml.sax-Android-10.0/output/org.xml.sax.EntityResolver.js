Ext.data.JsonP.org_xml_sax_EntityResolver({"tagname":"class","name":"org.xml.sax.EntityResolver","autodetected":{},"files":[{"filename":"EntityResolver.js","href":"EntityResolver.html#org-xml-sax-EntityResolver"}],"since":"SAX 1.0","author":[{"tagname":"author","name":"David Megginson","email":null}],"members":[{"name":"resolveEntity","tagname":"method","owner":"org.xml.sax.EntityResolver","id":"method-resolveEntity","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-org.xml.sax.EntityResolver","short_doc":"Basic interface for resolving entities. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/EntityResolver.html#org-xml-sax-EntityResolver' target='_blank'>EntityResolver.js</a></div></pre><div class='doc-contents'><p>Basic interface for resolving entities.</p>\n\n<p> <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n for further information.\n </blockquote></p>\n\n<p> <p>If a SAX application needs to implement customized handling\n for external entities, it must implement this interface and\n register an instance with the SAX driver using the\n <a href=\"#!/api/org.xml.sax.XMLReader-method-setEntityResolver\" rel=\"org.xml.sax.XMLReader-method-setEntityResolver\" class=\"docClass\">setEntityResolver</a>\n method.</p></p>\n\n<p> <p>The XML reader will then allow the application to intercept any\n external entities (including the external DTD subset and external\n parameter entities, if any) before including them.</p></p>\n\n<p> <p>Many SAX applications will not need to implement this interface,\n but it will be especially useful for applications that build\n XML documents from databases or other specialised input sources,\n or for applications that use URI types other than URLs.</p></p>\n\n<p> <p>The following resolver would provide the application\n with a special character stream for the entity with the system\n identifier \"http://www.myhost.com/today\":</p></p>\n\n<pre> import <a href=\"#!/api/org.xml.sax.EntityResolver\" rel=\"org.xml.sax.EntityResolver\" class=\"docClass\">org.xml.sax.EntityResolver</a>;\n import <a href=\"#!/api/org.xml.sax.InputSource\" rel=\"org.xml.sax.InputSource\" class=\"docClass\">org.xml.sax.InputSource</a>;\n\n public class MyResolver implements EntityResolver {\n   public InputSource resolveEntity (String publicId, String systemId)\n   {\n     if (systemId.equals(\"http://www.myhost.com/today\")) {\n              // return a special input source\n       MyReader reader = new MyReader();\n       return new InputSource(reader);\n     } else {\n              // use the default behaviour\n       return null;\n     }\n   }\n }\n </pre>\n\n\n<p> <p>The application can also use this interface to redirect system\n identifiers to local URIs or to look up replacements in a catalog\n (possibly by using the public identifier).</p></p>\n\n<p> @version 2.0.1 (sax2r2)\n @see <a href=\"#!/api/org.xml.sax.XMLReader-method-setEntityResolver\" rel=\"org.xml.sax.XMLReader-method-setEntityResolver\" class=\"docClass\">org.xml.sax.XMLReader.setEntityResolver</a>\n @see <a href=\"#!/api/org.xml.sax.InputSource\" rel=\"org.xml.sax.InputSource\" class=\"docClass\">org.xml.sax.InputSource</a></p>\n        <p>Available since: <b>SAX 1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-resolveEntity' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xml.sax.EntityResolver'>org.xml.sax.EntityResolver</span><br/><a href='source/EntityResolver.html#org-xml-sax-EntityResolver-method-resolveEntity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xml.sax.EntityResolver-method-resolveEntity' class='name expandable'>resolveEntity</a>( <span class='pre'>publicId, systemId</span> ) : Object {org.xml.sax.InputSource}<span class=\"signature\"></span></div><div class='description'><div class='short'>Allow the application to resolve external entities. ...</div><div class='long'><p>Allow the application to resolve external entities.</p>\n\n<p> <p>The parser will call this method before opening any external\n entity except the top-level document entity.  Such entities include\n the external DTD subset and external parameter entities referenced\n within the DTD (in either case, only if the parser reads external\n parameter entities), and external general entities referenced\n within the document element (if the parser reads external general\n entities).  The application may request that the parser locate\n the entity itself, that it use an alternative URI, or that it\n use data provided by the application (as a character or byte\n input stream).</p></p>\n\n<p> <p>Application writers can use this method to redirect external\n system identifiers to secure and/or local URIs, to look up\n public identifiers in a catalogue, or to read an entity from a\n database or other input source (including, for example, a dialog\n box).  Neither XML nor SAX specifies a preferred policy for using\n public or system IDs to resolve resources.  However, SAX specifies\n how to interpret any InputSource returned by this method, and that\n if none is returned, then the system ID will be dereferenced as\n a URL.  </p></p>\n\n<p> <p>If the system identifier is a URL, the SAX parser must\n resolve it fully before reporting it to the application.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>publicId</span> : String<div class='sub-desc'><p>The public identifier of the external entity\n        being referenced, or null if none was supplied.</p>\n</div></li><li><span class='pre'>systemId</span> : String<div class='sub-desc'><p>The system identifier of the external entity\n        being referenced.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {org.xml.sax.InputSource}</span><div class='sub-desc'><p>An InputSource object describing the new input source,\n         or null to request that the parser open a regular\n         URI connection to the system identifier.\n@exception <a href=\"#!/api/org.xml.sax.SAXException\" rel=\"org.xml.sax.SAXException\" class=\"docClass\">org.xml.sax.SAXException</a> Any SAX exception, possibly\n            wrapping another exception.\n@exception java.io.IOException A Java-specific IO exception,\n            possibly the result of creating a new InputStream\n            or Reader for the InputSource.\n@see <a href=\"#!/api/org.xml.sax.InputSource\" rel=\"org.xml.sax.InputSource\" class=\"docClass\">org.xml.sax.InputSource</a></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});