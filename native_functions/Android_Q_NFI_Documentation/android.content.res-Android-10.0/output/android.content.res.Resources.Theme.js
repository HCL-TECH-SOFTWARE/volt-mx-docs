Ext.data.JsonP.android_content_res_Resources_Theme({"tagname":"class","name":"android.content.res.Resources.Theme","autodetected":{},"files":[{"filename":"Theme.js","href":"Theme.html#android-content-res-Resources-Theme"}],"extends":"java.lang.Object","members":[{"name":"applyStyle","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-applyStyle","meta":{}},{"name":"dump","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-dump","meta":{}},{"name":"getAttributeResolutionStack","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-getAttributeResolutionStack","meta":{}},{"name":"getChangingConfigurations","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-getChangingConfigurations","meta":{}},{"name":"getDrawable","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-getDrawable","meta":{}},{"name":"getExplicitStyle","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-getExplicitStyle","meta":{}},{"name":"getResources","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-getResources","meta":{}},{"name":"obtainStyledAttributes","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-obtainStyledAttributes","meta":{}},{"name":"rebase","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-rebase","meta":{}},{"name":"resolveAttribute","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-resolveAttribute","meta":{}},{"name":"setTo","tagname":"method","owner":"android.content.res.Resources.Theme","id":"method-setTo","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.res.Resources.Theme","short_doc":"This class holds the current attribute values for a particular theme. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.res.Resources.Theme</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Theme.html#android-content-res-Resources-Theme' target='_blank'>Theme.js</a></div></pre><div class='doc-contents'><p>This class holds the current attribute values for a particular theme.\n In other words, a Theme is a set of values for resource attributes;\n these are used in conjunction with <a href=\"#!/api/android.content.res.TypedArray\" rel=\"android.content.res.TypedArray\" class=\"docClass\">android.content.res.TypedArray</a>\n to resolve the final value for an attribute.</p>\n\n<p> <p>The Theme's attributes come into play in two ways: (1) a styled\n attribute can explicit reference a value in the theme through the\n \"?themeAttribute\" syntax; (2) if no value has been defined for a\n particular styled attribute, as a last resort we will try to find that\n attribute's value in the Theme.</p>\n\n<p> <p>You will normally use the <a href=\"#!/api/android.content.res.Resources.Theme-method-obtainStyledAttributes\" rel=\"android.content.res.Resources.Theme-method-obtainStyledAttributes\" class=\"docClass\">obtainStyledAttributes</a> APIs to\n retrieve XML attributes with style and theme information applied.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-applyStyle' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-applyStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-applyStyle' class='name expandable'>applyStyle</a>( <span class='pre'>resId, force</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Place new attribute values into the theme. ...</div><div class='long'><p>Place new attribute values into the theme.  The style resource\n specified by <var>resid</var> will be retrieved from this Theme's\n resources, its values placed into the Theme object.</p>\n\n<p> <p>The semantics of this function depends on the <var>force</var>\n argument:  If false, only values that are not already defined in\n the theme will be copied from the system resource; otherwise, if\n any of the style's attributes are already defined in the theme, the\n current values in the theme will be overwritten.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resId</span> : Number<div class='sub-desc'><p>The resource ID of a style resource from which to\n              obtain attribute values.</p>\n</div></li><li><span class='pre'>force</span> : Boolean<div class='sub-desc'><p>If true, values in the style resource will always be\n              used in the theme; otherwise, they will only be used\n              if not already defined in the theme.</p>\n</div></li></ul></div></div></div><div id='method-dump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-dump' class='name expandable'>dump</a>( <span class='pre'>priority, tag, prefix</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Print contents of this theme out to the log. ...</div><div class='long'><p>Print contents of this theme out to the log.  For debugging only.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>priority</span> : Number<div class='sub-desc'><p>The log priority to use.</p>\n</div></li><li><span class='pre'>tag</span> : String<div class='sub-desc'><p>The log tag to use.</p>\n</div></li><li><span class='pre'>prefix</span> : String<div class='sub-desc'><p>Text to prefix each line printed.</p>\n</div></li></ul></div></div></div><div id='method-getAttributeResolutionStack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-getAttributeResolutionStack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-getAttributeResolutionStack' class='name expandable'>getAttributeResolutionStack</a>( <span class='pre'>defStyleAttr, defStyleRes, explicitStyleRes</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the ordered list of resource ID that are considered when resolving attribute\n values when making an equivalen...</div><div class='long'><p>Returns the ordered list of resource ID that are considered when resolving attribute\n values when making an equivalent call to\n int[], int, int) . The list will include\n a set of explicit styles ({@code explicitStyleRes} and it will include the default styles\n ({@code defStyleAttr} and {@code defStyleRes}).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>defStyleAttr</span> : Number<div class='sub-desc'><p>An attribute in the current theme that contains a\n                     reference to a style resource that supplies\n                     defaults values for the TypedArray.  Can be\n                     0 to not look for defaults.</p>\n</div></li><li><span class='pre'>defStyleRes</span> : Number<div class='sub-desc'><p>A resource identifier of a style resource that\n                    supplies default values for the TypedArray,\n                    used only if defStyleAttr is 0 or can not be found\n                    in the theme.  Can be 0 to not look for defaults.</p>\n</div></li><li><span class='pre'>explicitStyleRes</span> : Number<div class='sub-desc'><p>A resource identifier of an explicit style resource.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>ordered list of resource ID that are considered when resolving attribute values.</p>\n</div></li></ul></div></div></div><div id='method-getChangingConfigurations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-getChangingConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-getChangingConfigurations' class='name expandable'>getChangingConfigurations</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a bit mask of configuration changes that will impact this\n theme (and thus require completely reloading it). ...</div><div class='long'><p>Returns a bit mask of configuration changes that will impact this\n theme (and thus require completely reloading it).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a bit mask of configuration changes, as defined by\n         ActivityInfo\n@see ActivityInfo</p>\n</div></li></ul></div></div></div><div id='method-getDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-getDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-getDrawable' class='name expandable'>getDrawable</a>( <span class='pre'>id</span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a drawable object associated with a particular resource ID\n and styled for the Theme. ...</div><div class='long'><p>Return a drawable object associated with a particular resource ID\n and styled for the Theme.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The desired resource identifier, as generated by the aapt\n           tool. This integer encodes the package, type, and resource\n           entry. The value 0 is an invalid identifier.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>Drawable An object that can be used to draw this resource.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NotFoundException Throws NotFoundException if the given ID\n         does not exist.</p>\n</div></li></ul></div></div></div><div id='method-getExplicitStyle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-getExplicitStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-getExplicitStyle' class='name expandable'>getExplicitStyle</a>( <span class='pre'>set</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the resource ID for the style specified using {@code style=\"...\"} in the\n AttributeSet's backing XML element ...</div><div class='long'><p>Returns the resource ID for the style specified using {@code style=\"...\"} in the\n AttributeSet's backing XML element or <a href=\"#!/api/android.content.res.Resources-property-ID_NULL\" rel=\"android.content.res.Resources-property-ID_NULL\" class=\"docClass\">android.content.res.Resources.ID_NULL</a> otherwise if not\n specified or otherwise not applicable.\n <p>\n Each android.view.View can have an explicit style specified in the layout file.\n This style is used first during the android.view.View attribute resolution, then\n if an attribute is not defined there the resource system looks at default style and theme\n as fallbacks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>set</span> : Object {AttributeSet}<div class='sub-desc'><p>The base set of attribute values.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The resource ID for the style specified using {@code style=\"...\"} in the\n      AttributeSet's backing XML element or Resources.ID_NULL otherwise\n      if not specified or otherwise not applicable.</p>\n</div></li></ul></div></div></div><div id='method-getResources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-getResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-getResources' class='name expandable'>getResources</a>( <span class='pre'></span> ) : Object {android.content.res.Resources}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the resources to which this theme belongs. ...</div><div class='long'><p>Returns the resources to which this theme belongs.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.res.Resources}</span><div class='sub-desc'><p>Resources to which this theme belongs.</p>\n</div></li></ul></div></div></div><div id='method-obtainStyledAttributes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-obtainStyledAttributes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-obtainStyledAttributes' class='name expandable'>obtainStyledAttributes</a>( <span class='pre'>set, attrs, defStyleAttr, defStyleRes</span> ) : Object {android.content.res.TypedArray}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a TypedArray holding the attribute values in\n set\n that are listed in attrs. ...</div><div class='long'><p>Return a TypedArray holding the attribute values in\n <var>set</var>\n that are listed in <var>attrs</var>.  In addition, if the given\n AttributeSet specifies a style class (through the \"style\" attribute),\n that style will be applied on top of the base attributes it defines.</p>\n\n<p> <p>Be sure to call android.content.res.TypedArray.recycle() when you are done\n with the array.</p>\n\n<p> <p>When determining the final value of a particular attribute, there\n are four inputs that come into play:</p></p>\n\n<p> <ol>\n     <li> Any attribute values in the given AttributeSet.\n     <li> The style resource specified in the AttributeSet (named\n     \"style\").\n     <li> The default style specified by <var>defStyleAttr</var> and\n     <var>defStyleRes</var>\n     <li> The base values in this theme.\n </li></li></li></li></ol></p>\n\n<p> <p>Each of these inputs is considered in-order, with the first listed\n taking precedence over the following ones.  In other words, if in the\n AttributeSet you have supplied <code>&lt;Button\n textColor=\"#ff000000\"&gt;</code>, then the button's text will\n <em>always</em> be black, regardless of what is specified in any of\n the styles.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>set</span> : Object {AttributeSet}<div class='sub-desc'><p>The base set of attribute values.  May be null.</p>\n</div></li><li><span class='pre'>attrs</span> : Object {int[]}<div class='sub-desc'><p>The desired attributes to be retrieved. These attribute IDs must be sorted\n              in ascending order.</p>\n</div></li><li><span class='pre'>defStyleAttr</span> : Number<div class='sub-desc'><p>An attribute in the current theme that contains a\n                     reference to a style resource that supplies\n                     defaults values for the TypedArray.  Can be\n                     0 to not look for defaults.</p>\n</div></li><li><span class='pre'>defStyleRes</span> : Number<div class='sub-desc'><p>A resource identifier of a style resource that\n                    supplies default values for the TypedArray,\n                    used only if defStyleAttr is 0 or can not be found\n                    in the theme.  Can be 0 to not look for defaults.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.res.TypedArray}</span><div class='sub-desc'><p>Returns a TypedArray holding an array of the attribute values.\n Be sure to call TypedArray.recycle()\n when done with it.\n@see Resources#obtainAttributes\n@see <a href=\"#!/api/android.content.res.Resources.Theme-method-obtainStyledAttributes\" rel=\"android.content.res.Resources.Theme-method-obtainStyledAttributes\" class=\"docClass\">obtainStyledAttributes</a>(int[])\n@see <a href=\"#!/api/android.content.res.Resources.Theme-method-obtainStyledAttributes\" rel=\"android.content.res.Resources.Theme-method-obtainStyledAttributes\" class=\"docClass\">obtainStyledAttributes</a>(int, int[])</p>\n</div></li></ul></div></div></div><div id='method-rebase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-rebase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-rebase' class='name expandable'>rebase</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Rebases the theme against the parent Resource object's current\n configuration by re-applying the styles passed to\n bo...</div><div class='long'><p>Rebases the theme against the parent Resource object's current\n configuration by re-applying the styles passed to\n boolean).</p>\n</div></div></div><div id='method-resolveAttribute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-resolveAttribute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-resolveAttribute' class='name expandable'>resolveAttribute</a>( <span class='pre'>resid, outValue, resolveRefs</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the value of an attribute in the Theme. ...</div><div class='long'><p>Retrieve the value of an attribute in the Theme.  The contents of\n <var>outValue</var> are ultimately filled in by\n <a href=\"#!/api/android.content.res.Resources-method-getValue\" rel=\"android.content.res.Resources-method-getValue\" class=\"docClass\">android.content.res.Resources.getValue</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resid</span> : Number<div class='sub-desc'><p>The resource identifier of the desired theme\n              attribute.</p>\n</div></li><li><span class='pre'>outValue</span> : Object {TypedValue}<div class='sub-desc'><p>Filled in with the ultimate resource value supplied\n                 by the attribute.</p>\n</div></li><li><span class='pre'>resolveRefs</span> : Boolean<div class='sub-desc'><p>If true, resource references will be walked; if\n                    false, <var>outValue</var> may be a\n                    TYPE_REFERENCE.  In either case, it will never\n                    be a TYPE_ATTRIBUTE.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Returns true if the attribute was found and\n         <var>outValue</var> is valid, else false.</p>\n</div></li></ul></div></div></div><div id='method-setTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.Resources.Theme'>android.content.res.Resources.Theme</span><br/><a href='source/Theme.html#android-content-res-Resources-Theme-method-setTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.Resources.Theme-method-setTo' class='name expandable'>setTo</a>( <span class='pre'>other</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set this theme to hold the same contents as the theme\n other. ...</div><div class='long'><p>Set this theme to hold the same contents as the theme\n <var>other</var>.  If both of these themes are from the same\n Resources object, they will be identical after this function\n returns.  If they are from different Resources, only the resources\n they have in common will be set in this theme.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {Resources.Theme}<div class='sub-desc'><p>The existing Theme to copy from.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});