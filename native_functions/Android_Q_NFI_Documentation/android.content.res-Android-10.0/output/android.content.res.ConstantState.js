Ext.data.JsonP.android_content_res_ConstantState({"tagname":"class","name":"android.content.res.ConstantState","autodetected":{},"files":[{"filename":"ConstantState.js","href":"ConstantState.html#android-content-res-ConstantState"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"getChangingConfigurations","tagname":"method","owner":"android.content.res.ConstantState","id":"method-getChangingConfigurations","meta":{}},{"name":"newInstance","tagname":"method","owner":"android.content.res.ConstantState","id":"method-newInstance","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.res.ConstantState","short_doc":"A cache class that can provide new instances of a particular resource which may change\n depending on the current andr...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.res.ConstantState</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ConstantState.html#android-content-res-ConstantState' target='_blank'>ConstantState.js</a></div></pre><div class='doc-contents'><p>A cache class that can provide new instances of a particular resource which may change\n depending on the current <a href=\"#!/api/android.content.res.Resources.Theme\" rel=\"android.content.res.Resources.Theme\" class=\"docClass\">android.content.res.Resources.Theme</a> or <a href=\"#!/api/android.content.res.Configuration\" rel=\"android.content.res.Configuration\" class=\"docClass\">android.content.res.Configuration</a>.\n <p>\n A constant state should be able to return a bitmask of changing configurations, which\n identifies the type of configuration changes that may invalidate this resource. These\n configuration changes can be obtained from android.util.TypedValue. Entities such as\n android.animation.Animator also provide a changing configuration method to include\n their dependencies (e.g. An AnimatorSet's changing configuration is the union of the\n changing configurations of each Animator in the set)</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getChangingConfigurations' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.ConstantState'>android.content.res.ConstantState</span><br/><a href='source/ConstantState.html#android-content-res-ConstantState-method-getChangingConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.ConstantState-method-getChangingConfigurations' class='name expandable'>getChangingConfigurations</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a bit mask of configuration changes that will impact\n this resource (and thus require completely reloading it). ...</div><div class='long'><p>Return a bit mask of configuration changes that will impact\n this resource (and thus require completely reloading it).</p>\n</div></div></div><div id='method-newInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.res.ConstantState'>android.content.res.ConstantState</span><br/><a href='source/ConstantState.html#android-content-res-ConstantState-method-newInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.res.ConstantState-method-newInstance' class='name expandable'>newInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new instance from its constant state. ...</div><div class='long'><p>Create a new instance from its constant state.  This must be\n implemented for resources that can have a theme applied.</p>\n</div></div></div></div></div></div></div>","meta":{}});