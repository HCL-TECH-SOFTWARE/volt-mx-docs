Ext.data.JsonP.android_transition_Transition({"tagname":"class","name":"android.transition.Transition","autodetected":{},"files":[{"filename":"Transition.js","href":"Transition.html#android-transition-Transition"}],"extends":"java.lang.Object","members":[{"name":"MATCH_ID","tagname":"property","owner":"android.transition.Transition","id":"property-MATCH_ID","meta":{}},{"name":"MATCH_INSTANCE","tagname":"property","owner":"android.transition.Transition","id":"property-MATCH_INSTANCE","meta":{}},{"name":"MATCH_ITEM_ID","tagname":"property","owner":"android.transition.Transition","id":"property-MATCH_ITEM_ID","meta":{}},{"name":"MATCH_NAME","tagname":"property","owner":"android.transition.Transition","id":"property-MATCH_NAME","meta":{}},{"name":"addListener","tagname":"method","owner":"android.transition.Transition","id":"method-addListener","meta":{}},{"name":"addTarget","tagname":"method","owner":"android.transition.Transition","id":"method-addTarget","meta":{}},{"name":"canRemoveViews","tagname":"method","owner":"android.transition.Transition","id":"method-canRemoveViews","meta":{}},{"name":"captureEndValues","tagname":"method","owner":"android.transition.Transition","id":"method-captureEndValues","meta":{}},{"name":"captureStartValues","tagname":"method","owner":"android.transition.Transition","id":"method-captureStartValues","meta":{}},{"name":"clone","tagname":"method","owner":"android.transition.Transition","id":"method-clone","meta":{}},{"name":"createAnimator","tagname":"method","owner":"android.transition.Transition","id":"method-createAnimator","meta":{}},{"name":"excludeChildren","tagname":"method","owner":"android.transition.Transition","id":"method-excludeChildren","meta":{}},{"name":"excludeTarget","tagname":"method","owner":"android.transition.Transition","id":"method-excludeTarget","meta":{}},{"name":"getDuration","tagname":"method","owner":"android.transition.Transition","id":"method-getDuration","meta":{}},{"name":"getEpicenter","tagname":"method","owner":"android.transition.Transition","id":"method-getEpicenter","meta":{}},{"name":"getEpicenterCallback","tagname":"method","owner":"android.transition.Transition","id":"method-getEpicenterCallback","meta":{}},{"name":"getInterpolator","tagname":"method","owner":"android.transition.Transition","id":"method-getInterpolator","meta":{}},{"name":"getName","tagname":"method","owner":"android.transition.Transition","id":"method-getName","meta":{}},{"name":"getPathMotion","tagname":"method","owner":"android.transition.Transition","id":"method-getPathMotion","meta":{}},{"name":"getPropagation","tagname":"method","owner":"android.transition.Transition","id":"method-getPropagation","meta":{}},{"name":"getStartDelay","tagname":"method","owner":"android.transition.Transition","id":"method-getStartDelay","meta":{}},{"name":"getTargetIds","tagname":"method","owner":"android.transition.Transition","id":"method-getTargetIds","meta":{}},{"name":"getTargetNames","tagname":"method","owner":"android.transition.Transition","id":"method-getTargetNames","meta":{}},{"name":"getTargetTypes","tagname":"method","owner":"android.transition.Transition","id":"method-getTargetTypes","meta":{}},{"name":"getTargets","tagname":"method","owner":"android.transition.Transition","id":"method-getTargets","meta":{}},{"name":"getTransitionProperties","tagname":"method","owner":"android.transition.Transition","id":"method-getTransitionProperties","meta":{}},{"name":"getTransitionValues","tagname":"method","owner":"android.transition.Transition","id":"method-getTransitionValues","meta":{}},{"name":"isTransitionRequired","tagname":"method","owner":"android.transition.Transition","id":"method-isTransitionRequired","meta":{}},{"name":"removeListener","tagname":"method","owner":"android.transition.Transition","id":"method-removeListener","meta":{}},{"name":"removeTarget","tagname":"method","owner":"android.transition.Transition","id":"method-removeTarget","meta":{}},{"name":"setDuration","tagname":"method","owner":"android.transition.Transition","id":"method-setDuration","meta":{}},{"name":"setEpicenterCallback","tagname":"method","owner":"android.transition.Transition","id":"method-setEpicenterCallback","meta":{}},{"name":"setInterpolator","tagname":"method","owner":"android.transition.Transition","id":"method-setInterpolator","meta":{}},{"name":"setMatchOrder","tagname":"method","owner":"android.transition.Transition","id":"method-setMatchOrder","meta":{}},{"name":"setPathMotion","tagname":"method","owner":"android.transition.Transition","id":"method-setPathMotion","meta":{}},{"name":"setPropagation","tagname":"method","owner":"android.transition.Transition","id":"method-setPropagation","meta":{}},{"name":"setStartDelay","tagname":"method","owner":"android.transition.Transition","id":"method-setStartDelay","meta":{}},{"name":"toString","tagname":"method","owner":"android.transition.Transition","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.transition.Transition","short_doc":"implements java.lang.Cloneable\n\nA Transition holds information about animations that will be run on its\n targets duri...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.transition.ChangeBounds","android.transition.ChangeClipBounds","android.transition.ChangeImageTransform","android.transition.ChangeScroll","android.transition.ChangeText","android.transition.ChangeTransform","android.transition.Crossfade","android.transition.Recolor","android.transition.Rotate","android.transition.TransitionSet","android.transition.Visibility"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.transition.Transition</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.transition.ChangeBounds' rel='android.transition.ChangeBounds' class='docClass'>android.transition.ChangeBounds</a></div><div class='dependency'><a href='#!/api/android.transition.ChangeClipBounds' rel='android.transition.ChangeClipBounds' class='docClass'>android.transition.ChangeClipBounds</a></div><div class='dependency'><a href='#!/api/android.transition.ChangeImageTransform' rel='android.transition.ChangeImageTransform' class='docClass'>android.transition.ChangeImageTransform</a></div><div class='dependency'><a href='#!/api/android.transition.ChangeScroll' rel='android.transition.ChangeScroll' class='docClass'>android.transition.ChangeScroll</a></div><div class='dependency'><a href='#!/api/android.transition.ChangeText' rel='android.transition.ChangeText' class='docClass'>android.transition.ChangeText</a></div><div class='dependency'><a href='#!/api/android.transition.ChangeTransform' rel='android.transition.ChangeTransform' class='docClass'>android.transition.ChangeTransform</a></div><div class='dependency'><a href='#!/api/android.transition.Crossfade' rel='android.transition.Crossfade' class='docClass'>android.transition.Crossfade</a></div><div class='dependency'><a href='#!/api/android.transition.Recolor' rel='android.transition.Recolor' class='docClass'>android.transition.Recolor</a></div><div class='dependency'><a href='#!/api/android.transition.Rotate' rel='android.transition.Rotate' class='docClass'>android.transition.Rotate</a></div><div class='dependency'><a href='#!/api/android.transition.TransitionSet' rel='android.transition.TransitionSet' class='docClass'>android.transition.TransitionSet</a></div><div class='dependency'><a href='#!/api/android.transition.Visibility' rel='android.transition.Visibility' class='docClass'>android.transition.Visibility</a></div><h4>Files</h4><div class='dependency'><a href='source/Transition.html#android-transition-Transition' target='_blank'>Transition.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Cloneable</p>\n\n<p>A Transition holds information about animations that will be run on its\n targets during a scene change. Subclasses of this abstract class may\n choreograph several child transitions (<a href=\"#!/api/android.transition.TransitionSet\" rel=\"android.transition.TransitionSet\" class=\"docClass\">android.transition.TransitionSet</a> or they may\n perform custom animations themselves. Any Transition has two main jobs:\n (1) capture property values, and (2) play animations based on changes to\n captured property values. A custom transition knows what property values\n on View objects are of interest to it, and also knows how to animate\n changes to those values. For example, the <a href=\"#!/api/android.transition.Fade\" rel=\"android.transition.Fade\" class=\"docClass\">android.transition.Fade</a> transition tracks\n changes to visibility-related properties and is able to construct and run\n animations that fade items in or out based on changes to those properties.</p>\n\n<p> <p>Note: Transitions may not work correctly with either SurfaceView\n or TextureView, due to the way that these views are displayed\n on the screen. For SurfaceView, the problem is that the view is updated from\n a non-UI thread, so changes to the view due to transitions (such as moving\n and resizing the view) may be out of sync with the display inside those bounds.\n TextureView is more compatible with transitions in general, but some\n specific transitions (such as <a href=\"#!/api/android.transition.Fade\" rel=\"android.transition.Fade\" class=\"docClass\">android.transition.Fade</a>) may not be compatible\n with TextureView because they rely on ViewOverlay functionality,\n which does not currently work with TextureView.</p></p>\n\n<p> <p>Transitions can be declared in XML resource files inside the <code>res/transition</code>\n directory. Transition resources consist of a tag name for one of the Transition\n subclasses along with attributes to define some of the attributes of that transition.\n For example, here is a minimal resource file that declares a <a href=\"#!/api/android.transition.ChangeBounds\" rel=\"android.transition.ChangeBounds\" class=\"docClass\">android.transition.ChangeBounds</a> transition:</p>\n\n<p> {@sample development/samples/ApiDemos/res/transition/changebounds.xml ChangeBounds}</p>\n\n<p> <p>This TransitionSet contains <a href=\"#!/api/android.transition.Explode\" rel=\"android.transition.Explode\" class=\"docClass\">android.transition.Explode</a> for visibility,\n <a href=\"#!/api/android.transition.ChangeBounds\" rel=\"android.transition.ChangeBounds\" class=\"docClass\">android.transition.ChangeBounds</a>, <a href=\"#!/api/android.transition.ChangeTransform\" rel=\"android.transition.ChangeTransform\" class=\"docClass\">android.transition.ChangeTransform</a>,\n and <a href=\"#!/api/android.transition.ChangeClipBounds\" rel=\"android.transition.ChangeClipBounds\" class=\"docClass\">android.transition.ChangeClipBounds</a> and\n <a href=\"#!/api/android.transition.ChangeImageTransform\" rel=\"android.transition.ChangeImageTransform\" class=\"docClass\">android.transition.ChangeImageTransform</a>:</p></p>\n\n<p> {@sample development/samples/ApiDemos/res/transition/explode_move_together.xml MultipleTransform}</p>\n\n<p> <p>Custom transition classes may be instantiated with a <code>transition</code> tag:</p>\n <pre>&lt;transition class=\"my.app.transition.CustomTransition\"/></pre>\n <p>Custom transition classes loaded from XML should have a public constructor taking\n a android.content.Context and android.util.AttributeSet.</p></p>\n\n<p> <p>Note that attributes for the transition are not required, just as they are\n optional when declared in code; Transitions created from XML resources will use\n the same defaults as their code-created equivalents. Here is a slightly more\n elaborate example which declares a <a href=\"#!/api/android.transition.TransitionSet\" rel=\"android.transition.TransitionSet\" class=\"docClass\">android.transition.TransitionSet</a> transition with\n <a href=\"#!/api/android.transition.ChangeBounds\" rel=\"android.transition.ChangeBounds\" class=\"docClass\">android.transition.ChangeBounds</a> and <a href=\"#!/api/android.transition.Fade\" rel=\"android.transition.Fade\" class=\"docClass\">android.transition.Fade</a> child transitions:</p></p>\n\n<p> {@sample\n development/samples/ApiDemos/res/transition/changebounds_fadeout_sequential.xml TransitionSet}</p>\n\n<p> <p>In this example, the transitionOrdering attribute is used on the TransitionSet\n object to change from the default <a href=\"#!/api/android.transition.TransitionSet-property-ORDERING_TOGETHER\" rel=\"android.transition.TransitionSet-property-ORDERING_TOGETHER\" class=\"docClass\">android.transition.TransitionSet.ORDERING_TOGETHER</a> behavior\n to be <a href=\"#!/api/android.transition.TransitionSet-property-ORDERING_SEQUENTIAL\" rel=\"android.transition.TransitionSet-property-ORDERING_SEQUENTIAL\" class=\"docClass\">android.transition.TransitionSet.ORDERING_SEQUENTIAL</a> instead. Also, the <a href=\"#!/api/android.transition.Fade\" rel=\"android.transition.Fade\" class=\"docClass\">android.transition.Fade</a>\n transition uses a fadingMode of <a href=\"#!/api/android.transition.Fade-property-OUT\" rel=\"android.transition.Fade-property-OUT\" class=\"docClass\">android.transition.Fade.OUT</a> instead of the default\n out-in behavior. Finally, note the use of the <code>targets</code> sub-tag, which\n takes a set of target tags, each\n of which lists a specific <code>targetId</code>, <code>targetClass</code>,\n <code>targetName</code>, <code>excludeId</code>, <code>excludeClass</code>, or\n <code>excludeName</code>, which this transition acts upon.\n Use of targets is optional, but can be used to either limit the time spent checking\n attributes on unchanging views, or limiting the types of animations run on specific views.\n In this case, we know that only the <code>grayscaleContainer</code> will be\n disappearing, so we choose to limit the <a href=\"#!/api/android.transition.Fade\" rel=\"android.transition.Fade\" class=\"docClass\">android.transition.Fade</a> transition to only that view.</p></p>\n\n<p> Further information on XML resource descriptions for transitions can be found for\n android.R.styleable.Transition, android.R.styleable.TransitionSet,\n android.R.styleable.TransitionTarget, android.R.styleable.Fade,\n android.R.styleable.Slide, and android.R.styleable.ChangeTransform.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-MATCH_ID' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-property-MATCH_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-property-MATCH_ID' class='name expandable'>MATCH_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>With setMatchOrder(int...), chooses to match by\nandroid.view.View.getId(). ...</div><div class='long'><p>With setMatchOrder(int...), chooses to match by\nandroid.view.View.getId(). Negative IDs will not be matched.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-MATCH_INSTANCE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-property-MATCH_INSTANCE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-property-MATCH_INSTANCE' class='name expandable'>MATCH_INSTANCE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>With setMatchOrder(int...), chooses to match by View instance. ...</div><div class='long'><p>With setMatchOrder(int...), chooses to match by View instance.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-MATCH_ITEM_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-property-MATCH_ITEM_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-property-MATCH_ITEM_ID' class='name expandable'>MATCH_ITEM_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>With setMatchOrder(int...), chooses to match by the android.widget.Adapter\nitem id. ...</div><div class='long'><p>With setMatchOrder(int...), chooses to match by the android.widget.Adapter\nitem id. When android.widget.Adapter.hasStableIds() returns false, no match\nwill be made for items.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-MATCH_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-property-MATCH_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-property-MATCH_NAME' class='name expandable'>MATCH_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>With setMatchOrder(int...), chooses to match by\nandroid.view.View.getTransitionName(). ...</div><div class='long'><p>With setMatchOrder(int...), chooses to match by\nandroid.view.View.getTransitionName(). Null names will not be matched.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-addListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-addListener' class='name expandable'>addListener</a>( <span class='pre'>listener</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a listener to the set of listeners that are sent events through the\n life of an animation, such as start, repeat...</div><div class='long'><p>Adds a listener to the set of listeners that are sent events through the\n life of an animation, such as start, repeat, and end.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {Transition.TransitionListener}<div class='sub-desc'><p>the listener to be added to the current set of listeners\n for this animation.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>This transition object.</p>\n</div></li></ul></div></div></div><div id='method-addTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-addTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-addTarget' class='name expandable'>addTarget</a>( <span class='pre'>target, target</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the target view instances that this Transition is interested in\n animating. ...</div><div class='long'><p>Sets the target view instances that this Transition is interested in\n animating. By default, there are no targets, and a Transition will\n listen for changes on every view in the hierarchy below the sceneRoot\n of the Scene being transitioned into. Setting targets constrains\n the Transition to only listen for, and act on, these views.\n All other views will be ignored.</p>\n\n<p> <p>The target list is like the targetId\n list except this list specifies the actual View instances, not the ids\n of the views. This is an important distinction when scene changes involve\n view hierarchies which have been inflated separately; different views may\n share the same id but not actually be the same instance. If the transition\n should treat those views as the same, then <a href=\"#!/api/android.transition.Transition-method-addTarget\" rel=\"android.transition.Transition-method-addTarget\" class=\"docClass\">addTarget</a>(int) should be used\n instead of <a href=\"#!/api/android.transition.Transition-method-addTarget\" rel=\"android.transition.Transition-method-addTarget\" class=\"docClass\">addTarget</a>(View). If, on the other hand, scene changes involve\n changes all within the same view hierarchy, among views which do not\n necessarily have ids set on them, then the target list of views may be more\n convenient.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Object {View}<div class='sub-desc'><p>A View on which the Transition will act, must be non-null.</p>\n</div></li><li><span class='pre'>target</span> : Object<div class='sub-desc'><p>A View on which the Transition will act, must be non-null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>The Transition to which the target is added.\n Returning the same object makes it easier to chain calls during\n construction, such as\n <code>transitionSet.addTransitions(new Fade()).addTarget(someView);</code></p>\n</div></li></ul></div></div></div><div id='method-canRemoveViews' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-canRemoveViews' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-canRemoveViews' class='name expandable'>canRemoveViews</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-captureEndValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-captureEndValues' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-captureEndValues' class='name expandable'>captureEndValues</a>( <span class='pre'>transitionValues</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Captures the values in the end scene for the properties that this\n transition monitors. ...</div><div class='long'><p>Captures the values in the end scene for the properties that this\n transition monitors. These values are then passed as the endValues\n structure in a later call to\n android.transition.TransitionValues, android.transition.TransitionValues).\n The main concern for an implementation is what the\n properties are that the transition cares about and what the values are\n for all of those properties. The start and end values will be compared\n later during the\n android.transition.TransitionValues, android.transition.TransitionValues)\n method to determine what, if any, animations, should be run.</p>\n\n<p> <p>Subclasses must implement this method. The method should only be called by the\n transition system; it is not intended to be called from external classes.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transitionValues</span> : Object {TransitionValues}<div class='sub-desc'><p>The holder for any values that the Transition\n wishes to store. Values are stored in the <code>values</code> field\n of this TransitionValues object and are keyed from\n a String value. For example, to store a view's rotation value,\n a transition might call\n <code>transitionValues.values.put(\"appname:transitionname:rotation\",\n view.getRotation())</code>. The target view will already be stored in\n the transitionValues structure when this method is called.\n@see <a href=\"#!/api/android.transition.Transition-method-captureStartValues\" rel=\"android.transition.Transition-method-captureStartValues\" class=\"docClass\">captureStartValues</a>(TransitionValues)\n@see <a href=\"#!/api/android.transition.Transition-method-createAnimator\" rel=\"android.transition.Transition-method-createAnimator\" class=\"docClass\">createAnimator</a>(ViewGroup, TransitionValues, TransitionValues)</p>\n</div></li></ul></div></div></div><div id='method-captureStartValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-captureStartValues' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-captureStartValues' class='name expandable'>captureStartValues</a>( <span class='pre'>transitionValues</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Captures the values in the start scene for the properties that this\n transition monitors. ...</div><div class='long'><p>Captures the values in the start scene for the properties that this\n transition monitors. These values are then passed as the startValues\n structure in a later call to\n android.transition.TransitionValues, android.transition.TransitionValues).\n The main concern for an implementation is what the\n properties are that the transition cares about and what the values are\n for all of those properties. The start and end values will be compared\n later during the\n android.transition.TransitionValues, android.transition.TransitionValues)\n method to determine what, if any, animations, should be run.</p>\n\n<p> <p>Subclasses must implement this method. The method should only be called by the\n transition system; it is not intended to be called from external classes.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transitionValues</span> : Object {TransitionValues}<div class='sub-desc'><p>The holder for any values that the Transition\n wishes to store. Values are stored in the <code>values</code> field\n of this TransitionValues object and are keyed from\n a String value. For example, to store a view's rotation value,\n a transition might call\n <code>transitionValues.values.put(\"appname:transitionname:rotation\",\n view.getRotation())</code>. The target view will already be stored in\n the transitionValues structure when this method is called.\n@see <a href=\"#!/api/android.transition.Transition-method-captureEndValues\" rel=\"android.transition.Transition-method-captureEndValues\" class=\"docClass\">captureEndValues</a>(TransitionValues)\n@see <a href=\"#!/api/android.transition.Transition-method-createAnimator\" rel=\"android.transition.Transition-method-createAnimator\" class=\"docClass\">createAnimator</a>(ViewGroup, TransitionValues, TransitionValues)</p>\n</div></li></ul></div></div></div><div id='method-clone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-createAnimator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-createAnimator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-createAnimator' class='name expandable'>createAnimator</a>( <span class='pre'>sceneRoot, startValues, endValues</span> ) : Object {android.animation.Animator}<span class=\"signature\"></span></div><div class='description'><div class='short'>This method creates an animation that will be run for this transition\n given the information in the startValues and e...</div><div class='long'><p>This method creates an animation that will be run for this transition\n given the information in the startValues and endValues structures captured\n earlier for the start and end scenes. Subclasses of Transition should override\n this method. The method should only be called by the transition system; it is\n not intended to be called from external classes.</p>\n\n<p> <p>This method is called by the transition's parent (all the way up to the\n topmost Transition in the hierarchy) with the sceneRoot and start/end\n values that the transition may need to set up initial target values\n and construct an appropriate animation. For example, if an overall\n Transition is a <a href=\"#!/api/android.transition.TransitionSet\" rel=\"android.transition.TransitionSet\" class=\"docClass\">android.transition.TransitionSet</a> consisting of several\n child transitions in sequence, then some of the child transitions may\n want to set initial values on target views prior to the overall\n Transition commencing, to put them in an appropriate state for the\n delay between that start and the child Transition start time. For\n example, a transition that fades an item in may wish to set the starting\n alpha value to 0, to avoid it blinking in prior to the transition\n actually starting the animation. This is necessary because the scene\n change that triggers the Transition will automatically set the end-scene\n on all target views, so a Transition that wants to animate from a\n different value should set that value prior to returning from this method.</p></p>\n\n<p> <p>Additionally, a Transition can perform logic to determine whether\n the transition needs to run on the given target and start/end values.\n For example, a transition that resizes objects on the screen may wish\n to avoid running for views which are not present in either the start\n or end scenes.</p></p>\n\n<p> <p>If there is an animator created and returned from this method, the\n transition mechanism will apply any applicable duration, startDelay,\n and interpolator to that animation and start it. A return value of\n <code>null</code> indicates that no animation should run. The default\n implementation returns null.</p></p>\n\n<p> <p>The method is called for every applicable target object, which is\n stored in the <a href=\"#!/api/android.transition.TransitionValues-property-view\" rel=\"android.transition.TransitionValues-property-view\" class=\"docClass\">android.transition.TransitionValues.view</a> field.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sceneRoot</span> : Object {ViewGroup}<div class='sub-desc'><p>The root of the transition hierarchy.</p>\n</div></li><li><span class='pre'>startValues</span> : Object {TransitionValues}<div class='sub-desc'><p>The values for a specific target in the start scene.</p>\n</div></li><li><span class='pre'>endValues</span> : Object {TransitionValues}<div class='sub-desc'><p>The values for the target in the end scene.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.animation.Animator}</span><div class='sub-desc'><p>A Animator to be started at the appropriate time in the\n overall transition for this scene change. A null value means no animation\n should be run.</p>\n</div></li></ul></div></div></div><div id='method-excludeChildren' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-excludeChildren' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-excludeChildren' class='name expandable'>excludeChildren</a>( <span class='pre'>type, exclude, type, exclude</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to add the given type to the list of types whose children should\n be excluded from this transition. ...</div><div class='long'><p>Whether to add the given type to the list of types whose children should\n be excluded from this transition. The <code>exclude</code> parameter\n specifies whether the target type should be added to or removed from\n the excluded list.</p>\n\n<p> <p>Excluding targets is a general mechanism for allowing transitions to run on\n a view hierarchy while skipping target views that should not be part of\n the transition. For example, you may want to avoid animating children\n of a specific ListView or Spinner. Views can be excluded either by their\n id, or by their instance reference, or by the Class of that view\n (eg, Spinner).</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Object {java.lang.Class}<div class='sub-desc'><p>The type to ignore when running this transition.</p>\n</div></li><li><span class='pre'>exclude</span> : Boolean<div class='sub-desc'><p>Whether to add the target type to or remove it from the\n current list of excluded target types.\n@see <a href=\"#!/api/android.transition.Transition-method-excludeChildren\" rel=\"android.transition.Transition-method-excludeChildren\" class=\"docClass\">excludeChildren</a>(View, boolean)</p>\n</div></li><li><span class='pre'>type</span> : Object<div class='sub-desc'><p>The type to ignore when running this transition.</p>\n</div></li><li><span class='pre'>exclude</span> : Object<div class='sub-desc'><p>Whether to add the target type to or remove it from the\n current list of excluded target types.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>This transition object.</p>\n</div></li></ul></div></div></div><div id='method-excludeTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-excludeTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-excludeTarget' class='name expandable'>excludeTarget</a>( <span class='pre'>type, exclude, type, exclude</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to add the given type to the list of types to exclude from this\n transition. ...</div><div class='long'><p>Whether to add the given type to the list of types to exclude from this\n transition. The <code>exclude</code> parameter specifies whether the target\n type should be added to or removed from the excluded list.</p>\n\n<p> <p>Excluding targets is a general mechanism for allowing transitions to run on\n a view hierarchy while skipping target views that should not be part of\n the transition. For example, you may want to avoid animating children\n of a specific ListView or Spinner. Views can be excluded either by their\n id, or by their instance reference, or by the Class of that view\n (eg, Spinner).</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Object {java.lang.Class}<div class='sub-desc'><p>The type to ignore when running this transition.</p>\n</div></li><li><span class='pre'>exclude</span> : Boolean<div class='sub-desc'><p>Whether to add the target type to or remove it from the\n current list of excluded target types.\n@see <a href=\"#!/api/android.transition.Transition-method-excludeTarget\" rel=\"android.transition.Transition-method-excludeTarget\" class=\"docClass\">excludeTarget</a>(View, boolean)</p>\n</div></li><li><span class='pre'>type</span> : Object<div class='sub-desc'><p>The type to ignore when running this transition.</p>\n</div></li><li><span class='pre'>exclude</span> : Object<div class='sub-desc'><p>Whether to add the target type to or remove it from the\n current list of excluded target types.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>This transition object.</p>\n</div></li></ul></div></div></div><div id='method-getDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getDuration' class='name expandable'>getDuration</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the duration set on this transition. ...</div><div class='long'><p>Returns the duration set on this transition. If no duration has been set,\n the returned value will be negative, indicating that resulting animators will\n retain their own durations.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The duration set on this transition, in milliseconds, if one has been\n set, otherwise returns a negative number.</p>\n</div></li></ul></div></div></div><div id='method-getEpicenter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getEpicenter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getEpicenter' class='name expandable'>getEpicenter</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the epicenter as specified by the\n android.transition.Transition.EpicenterCallback or null if no callback exi...</div><div class='long'><p>Returns the epicenter as specified by the\n <a href=\"#!/api/android.transition.Transition.EpicenterCallback\" rel=\"android.transition.Transition.EpicenterCallback\" class=\"docClass\">android.transition.Transition.EpicenterCallback</a> or null if no callback exists.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>the epicenter as specified by the\n <a href=\"#!/api/android.transition.Transition.EpicenterCallback\" rel=\"android.transition.Transition.EpicenterCallback\" class=\"docClass\">android.transition.Transition.EpicenterCallback</a> or null if no callback exists.\n@see <a href=\"#!/api/android.transition.Transition-method-setEpicenterCallback\" rel=\"android.transition.Transition-method-setEpicenterCallback\" class=\"docClass\">setEpicenterCallback</a>(<a href=\"#!/api/android.transition.Transition.EpicenterCallback\" rel=\"android.transition.Transition.EpicenterCallback\" class=\"docClass\">android.transition.Transition.EpicenterCallback</a>)</p>\n</div></li></ul></div></div></div><div id='method-getEpicenterCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getEpicenterCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getEpicenterCallback' class='name expandable'>getEpicenterCallback</a>( <span class='pre'></span> ) : Object {android.transition.Transition.EpicenterCallback}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the callback used to find the epicenter of the Transition. ...</div><div class='long'><p>Returns the callback used to find the epicenter of the Transition.\n Transitions like <a href=\"#!/api/android.transition.Explode\" rel=\"android.transition.Explode\" class=\"docClass\">android.transition.Explode</a> use a point or Rect to orient\n the direction of travel. This is called the epicenter of the Transition and is\n typically centered on a touched View. The\n <a href=\"#!/api/android.transition.Transition.EpicenterCallback\" rel=\"android.transition.Transition.EpicenterCallback\" class=\"docClass\">android.transition.Transition.EpicenterCallback</a> allows a Transition to\n dynamically retrieve the epicenter during a Transition.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition.EpicenterCallback}</span><div class='sub-desc'><p>the callback used to find the epicenter of the Transition.</p>\n</div></li></ul></div></div></div><div id='method-getInterpolator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getInterpolator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getInterpolator' class='name expandable'>getInterpolator</a>( <span class='pre'></span> ) : Object {android.animation.TimeInterpolator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the interpolator set on this transition. ...</div><div class='long'><p>Returns the interpolator set on this transition. If no interpolator has been set,\n the returned value will be null, indicating that resulting animators will\n retain their own interpolators.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.animation.TimeInterpolator}</span><div class='sub-desc'><p>The interpolator set on this transition, if one has been set, otherwise\n returns null.</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of this Transition. ...</div><div class='long'><p>Returns the name of this Transition. This name is used internally to distinguish\n between different transitions to determine when interrupting transitions overlap.\n For example, a ChangeBounds running on the same target view as another ChangeBounds\n should determine whether the old transition is animating to different end values\n and should be canceled in favor of the new transition.</p>\n\n<p> <p>By default, a Transition's name is simply the value of Class.getName(),\n but subclasses are free to override and return something different.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The name of this transition.</p>\n</div></li></ul></div></div></div><div id='method-getPathMotion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getPathMotion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getPathMotion' class='name expandable'>getPathMotion</a>( <span class='pre'></span> ) : Object {android.transition.PathMotion}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the algorithm object used to interpolate along two dimensions. ...</div><div class='long'><p>Returns the algorithm object used to interpolate along two dimensions. This is typically\n used to determine the View motion between two points.</p>\n\n<p> <p>\n     When describing in XML, use a nested XML tag for the path motion. It can be one of\n     the built-in tags <code>arcMotion</code> or <code>patternPathMotion</code> or it can\n     be a custom PathMotion using <code>pathMotion</code> with the <code>class</code>\n     attributed with the fully-described class name. For example:</p>\n <pre>{@code\n <changeBounds>\n     <pathMotion class=\"my.app.transition.MyPathMotion\"/>\n </pathMotion></changeBounds>}\n </pre>\n <p>or</p>\n <pre>{@code\n <changeBounds>\n   <arcMotion android:minimumHorizontalAngle=\"15\"\n              android:minimumVerticalAngle=\"0\"\n              android:maximumAngle=\"90\"/>\n </arcMotion></changeBounds>}\n </pre></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.PathMotion}</span><div class='sub-desc'><p>The algorithm object used to interpolate along two dimensions.\n@see <a href=\"#!/api/android.transition.ArcMotion\" rel=\"android.transition.ArcMotion\" class=\"docClass\">android.transition.ArcMotion</a>\n@see PatternPathMotion\n@see <a href=\"#!/api/android.transition.PathMotion\" rel=\"android.transition.PathMotion\" class=\"docClass\">android.transition.PathMotion</a></p>\n</div></li></ul></div></div></div><div id='method-getPropagation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getPropagation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getPropagation' class='name expandable'>getPropagation</a>( <span class='pre'></span> ) : Object {android.transition.TransitionPropagation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the android.transition.TransitionPropagation used to calculate Animator start\n delays. ...</div><div class='long'><p>Returns the <a href=\"#!/api/android.transition.TransitionPropagation\" rel=\"android.transition.TransitionPropagation\" class=\"docClass\">android.transition.TransitionPropagation</a> used to calculate Animator start\n delays.\n When a Transition affects several Views like <a href=\"#!/api/android.transition.Explode\" rel=\"android.transition.Explode\" class=\"docClass\">android.transition.Explode</a> or\n <a href=\"#!/api/android.transition.Slide\" rel=\"android.transition.Slide\" class=\"docClass\">android.transition.Slide</a>, there may be a desire to have a \"wave-front\" effect\n such that the Animator start delay depends on position of the View. The\n TransitionPropagation specifies how the start delays are calculated.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.TransitionPropagation}</span><div class='sub-desc'><p>the <a href=\"#!/api/android.transition.TransitionPropagation\" rel=\"android.transition.TransitionPropagation\" class=\"docClass\">android.transition.TransitionPropagation</a> used to calculate Animator start\n delays. This is null by default.</p>\n</div></li></ul></div></div></div><div id='method-getStartDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getStartDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getStartDelay' class='name expandable'>getStartDelay</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the startDelay set on this transition. ...</div><div class='long'><p>Returns the startDelay set on this transition. If no startDelay has been set,\n the returned value will be negative, indicating that resulting animators will\n retain their own startDelays.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The startDelay set on this transition, in milliseconds, if one has\n been set, otherwise returns a negative number.</p>\n</div></li></ul></div></div></div><div id='method-getTargetIds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getTargetIds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getTargetIds' class='name expandable'>getTargetIds</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of target IDs that this transition limits itself to\n tracking and animating. ...</div><div class='long'><p>Returns the list of target IDs that this transition limits itself to\n tracking and animating. If the list is null or empty for\n <a href=\"#!/api/android.transition.Transition-method-getTargetIds\" rel=\"android.transition.Transition-method-getTargetIds\" class=\"docClass\">getTargetIds</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargets\" rel=\"android.transition.Transition-method-getTargets\" class=\"docClass\">getTargets</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargetNames\" rel=\"android.transition.Transition-method-getTargetNames\" class=\"docClass\">getTargetNames</a>(), and\n <a href=\"#!/api/android.transition.Transition-method-getTargetTypes\" rel=\"android.transition.Transition-method-getTargetTypes\" class=\"docClass\">getTargetTypes</a>() then this transition is\n not limited to specific views, and will handle changes to any views\n in the hierarchy of a scene change.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the list of target IDs</p>\n</div></li></ul></div></div></div><div id='method-getTargetNames' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getTargetNames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getTargetNames' class='name expandable'>getTargetNames</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of target transitionNames that this transition limits itself to\n tracking and animating. ...</div><div class='long'><p>Returns the list of target transitionNames that this transition limits itself to\n tracking and animating. If the list is null or empty for\n <a href=\"#!/api/android.transition.Transition-method-getTargetIds\" rel=\"android.transition.Transition-method-getTargetIds\" class=\"docClass\">getTargetIds</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargets\" rel=\"android.transition.Transition-method-getTargets\" class=\"docClass\">getTargets</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargetNames\" rel=\"android.transition.Transition-method-getTargetNames\" class=\"docClass\">getTargetNames</a>(), and\n <a href=\"#!/api/android.transition.Transition-method-getTargetTypes\" rel=\"android.transition.Transition-method-getTargetTypes\" class=\"docClass\">getTargetTypes</a>() then this transition is\n not limited to specific views, and will handle changes to any views\n in the hierarchy of a scene change.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the list of target transitionNames</p>\n</div></li></ul></div></div></div><div id='method-getTargetTypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getTargetTypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getTargetTypes' class='name expandable'>getTargetTypes</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of target transitionNames that this transition limits itself to\n tracking and animating. ...</div><div class='long'><p>Returns the list of target transitionNames that this transition limits itself to\n tracking and animating. If the list is null or empty for\n <a href=\"#!/api/android.transition.Transition-method-getTargetIds\" rel=\"android.transition.Transition-method-getTargetIds\" class=\"docClass\">getTargetIds</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargets\" rel=\"android.transition.Transition-method-getTargets\" class=\"docClass\">getTargets</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargetNames\" rel=\"android.transition.Transition-method-getTargetNames\" class=\"docClass\">getTargetNames</a>(), and\n <a href=\"#!/api/android.transition.Transition-method-getTargetTypes\" rel=\"android.transition.Transition-method-getTargetTypes\" class=\"docClass\">getTargetTypes</a>() then this transition is\n not limited to specific views, and will handle changes to any views\n in the hierarchy of a scene change.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the list of target Types</p>\n</div></li></ul></div></div></div><div id='method-getTargets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getTargets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getTargets' class='name expandable'>getTargets</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of target views that this transition limits itself to\n tracking and animating. ...</div><div class='long'><p>Returns the list of target views that this transition limits itself to\n tracking and animating. If the list is null or empty for\n <a href=\"#!/api/android.transition.Transition-method-getTargetIds\" rel=\"android.transition.Transition-method-getTargetIds\" class=\"docClass\">getTargetIds</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargets\" rel=\"android.transition.Transition-method-getTargets\" class=\"docClass\">getTargets</a>(), <a href=\"#!/api/android.transition.Transition-method-getTargetNames\" rel=\"android.transition.Transition-method-getTargetNames\" class=\"docClass\">getTargetNames</a>(), and\n <a href=\"#!/api/android.transition.Transition-method-getTargetTypes\" rel=\"android.transition.Transition-method-getTargetTypes\" class=\"docClass\">getTargetTypes</a>() then this transition is\n not limited to specific views, and will handle changes to any views\n in the hierarchy of a scene change.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the list of target views</p>\n</div></li></ul></div></div></div><div id='method-getTransitionProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getTransitionProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getTransitionProperties' class='name expandable'>getTransitionProperties</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the set of property names used stored in the android.transition.TransitionValues\n object passed into captureS...</div><div class='long'><p>Returns the set of property names used stored in the <a href=\"#!/api/android.transition.TransitionValues\" rel=\"android.transition.TransitionValues\" class=\"docClass\">android.transition.TransitionValues</a>\n object passed into <a href=\"#!/api/android.transition.Transition-method-captureStartValues\" rel=\"android.transition.Transition-method-captureStartValues\" class=\"docClass\">captureStartValues</a>(TransitionValues) that\n this transition cares about for the purposes of canceling overlapping animations.\n When any transition is started on a given scene root, all transitions\n currently running on that same scene root are checked to see whether the\n properties on which they based their animations agree with the end values of\n the same properties in the new transition. If the end values are not equal,\n then the old animation is canceled since the new transition will start a new\n animation to these new values. If the values are equal, the old animation is\n allowed to continue and no new animation is started for that transition.</p>\n\n<p> <p>A transition does not need to override this method. However, not doing so\n will mean that the cancellation logic outlined in the previous paragraph\n will be skipped for that transition, possibly leading to artifacts as\n old transitions and new transitions on the same targets run in parallel,\n animating views toward potentially different end values.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>An array of property names as described in the class documentation for\n TransitionValues. The default implementation returns <code>null</code>.</p>\n</div></li></ul></div></div></div><div id='method-getTransitionValues' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-getTransitionValues' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-getTransitionValues' class='name expandable'>getTransitionValues</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method can be called by transitions to get the TransitionValues for\n any particular view during the transition-p...</div><div class='long'><p>This method can be called by transitions to get the TransitionValues for\n any particular view during the transition-playing process. This might be\n necessary, for example, to query the before/after state of related views\n for a given transition.</p>\n</div></div></div><div id='method-isTransitionRequired' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-isTransitionRequired' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-isTransitionRequired' class='name expandable'>isTransitionRequired</a>( <span class='pre'>startValues, endValues</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether or not the transition should create an Animator, based on the values\n captured during captureStartVal...</div><div class='long'><p>Returns whether or not the transition should create an Animator, based on the values\n captured during <a href=\"#!/api/android.transition.Transition-method-captureStartValues\" rel=\"android.transition.Transition-method-captureStartValues\" class=\"docClass\">captureStartValues</a>(TransitionValues) and\n <a href=\"#!/api/android.transition.Transition-method-captureEndValues\" rel=\"android.transition.Transition-method-captureEndValues\" class=\"docClass\">captureEndValues</a>(TransitionValues). The default implementation compares the\n property values returned from <a href=\"#!/api/android.transition.Transition-method-getTransitionProperties\" rel=\"android.transition.Transition-method-getTransitionProperties\" class=\"docClass\">getTransitionProperties</a>(), or all property values if\n {@code getTransitionProperties()} returns null. Subclasses may override this method to\n provide logic more specific to the transition implementation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startValues</span> : Object {TransitionValues}<div class='sub-desc'><p>the values from captureStartValues, This may be {@code null} if the\n                    View did not exist in the start state.</p>\n</div></li><li><span class='pre'>endValues</span> : Object {TransitionValues}<div class='sub-desc'><p>the values from captureEndValues. This may be {@code null} if the View\n                  did not exist in the end state.</p>\n</div></li></ul></div></div></div><div id='method-removeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-removeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-removeListener' class='name expandable'>removeListener</a>( <span class='pre'>listener</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a listener from the set listening to this animation. ...</div><div class='long'><p>Removes a listener from the set listening to this animation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {Transition.TransitionListener}<div class='sub-desc'><p>the listener to be removed from the current set of\n listeners for this transition.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>This transition object.</p>\n</div></li></ul></div></div></div><div id='method-removeTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-removeTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-removeTarget' class='name expandable'>removeTarget</a>( <span class='pre'>target</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the given target from the list of targets that this Transition\n is interested in animating. ...</div><div class='long'><p>Removes the given target from the list of targets that this Transition\n is interested in animating.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Object {java.lang.Class}<div class='sub-desc'><p>The type of the target view, must be non-null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>Transition The Transition from which the target is removed.\n Returning the same object makes it easier to chain calls during\n construction, such as\n <code>transitionSet.addTransitions(new Fade()).removeTarget(someType);</code></p>\n</div></li></ul></div></div></div><div id='method-setDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-setDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-setDuration' class='name expandable'>setDuration</a>( <span class='pre'>duration</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the duration of this transition. ...</div><div class='long'><p>Sets the duration of this transition. By default, there is no duration\n (indicated by a negative number), which means that the Animator created by\n the transition will have its own specified duration. If the duration of a\n Transition is set, that duration will override the Animator duration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>duration</span> : Number<div class='sub-desc'><p>The length of the animation, in milliseconds.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>This transition object.\n@attr ref android.R.styleable#Transition_duration</p>\n</div></li></ul></div></div></div><div id='method-setEpicenterCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-setEpicenterCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-setEpicenterCallback' class='name expandable'>setEpicenterCallback</a>( <span class='pre'>epicenterCallback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the callback to use to find the epicenter of a Transition. ...</div><div class='long'><p>Sets the callback to use to find the epicenter of a Transition. A null value indicates\n that there is no epicenter in the Transition and onGetEpicenter() will return null.\n Transitions like <a href=\"#!/api/android.transition.Explode\" rel=\"android.transition.Explode\" class=\"docClass\">android.transition.Explode</a> use a point or Rect to orient\n the direction of travel. This is called the epicenter of the Transition and is\n typically centered on a touched View. The\n <a href=\"#!/api/android.transition.Transition.EpicenterCallback\" rel=\"android.transition.Transition.EpicenterCallback\" class=\"docClass\">android.transition.Transition.EpicenterCallback</a> allows a Transition to\n dynamically retrieve the epicenter during a Transition.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>epicenterCallback</span> : Object {Transition.EpicenterCallback}<div class='sub-desc'><p>The callback to use to find the epicenter of the Transition.</p>\n</div></li></ul></div></div></div><div id='method-setInterpolator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-setInterpolator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-setInterpolator' class='name expandable'>setInterpolator</a>( <span class='pre'>interpolator</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the interpolator of this transition. ...</div><div class='long'><p>Sets the interpolator of this transition. By default, the interpolator\n is null, which means that the Animator created by the transition\n will have its own specified interpolator. If the interpolator of a\n Transition is set, that interpolator will override the Animator interpolator.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interpolator</span> : Object {TimeInterpolator}<div class='sub-desc'><p>The time interpolator used by the transition</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>This transition object.\n@attr ref android.R.styleable#Transition_interpolator</p>\n</div></li></ul></div></div></div><div id='method-setMatchOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-setMatchOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-setMatchOrder' class='name expandable'>setMatchOrder</a>( <span class='pre'>matches</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the order in which Transition matches View start and end values. ...</div><div class='long'><p>Sets the order in which Transition matches View start and end values.\n <p>\n The default behavior is to match first by android.view.View.getTransitionName(),\n then by View instance, then by android.view.View.getId() and finally\n by its item ID if it is in a direct child of ListView. The caller can\n choose to have only some or all of the values of <a href=\"#!/api/android.transition.Transition-property-MATCH_INSTANCE\" rel=\"android.transition.Transition-property-MATCH_INSTANCE\" class=\"docClass\">MATCH_INSTANCE</a>,\n <a href=\"#!/api/android.transition.Transition-property-MATCH_NAME\" rel=\"android.transition.Transition-property-MATCH_NAME\" class=\"docClass\">MATCH_NAME</a>, <a href=\"#!/api/android.transition.Transition-property-MATCH_ITEM_ID\" rel=\"android.transition.Transition-property-MATCH_ITEM_ID\" class=\"docClass\">MATCH_ITEM_ID</a>, and <a href=\"#!/api/android.transition.Transition-property-MATCH_ID\" rel=\"android.transition.Transition-property-MATCH_ID\" class=\"docClass\">MATCH_ID</a>. Only\n the match algorithms supplied will be used to determine whether Views are the\n the same in both the start and end Scene. Views that do not match will be considered\n as entering or leaving the Scene.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>matches</span> : Object {int[]}<div class='sub-desc'><p>A list of zero or more of <a href=\"#!/api/android.transition.Transition-property-MATCH_INSTANCE\" rel=\"android.transition.Transition-property-MATCH_INSTANCE\" class=\"docClass\">MATCH_INSTANCE</a>,\n                <a href=\"#!/api/android.transition.Transition-property-MATCH_NAME\" rel=\"android.transition.Transition-property-MATCH_NAME\" class=\"docClass\">MATCH_NAME</a>, <a href=\"#!/api/android.transition.Transition-property-MATCH_ITEM_ID\" rel=\"android.transition.Transition-property-MATCH_ITEM_ID\" class=\"docClass\">MATCH_ITEM_ID</a>, and <a href=\"#!/api/android.transition.Transition-property-MATCH_ID\" rel=\"android.transition.Transition-property-MATCH_ID\" class=\"docClass\">MATCH_ID</a>.\n                If none are provided, then the default match order will be set.</p>\n</div></li></ul></div></div></div><div id='method-setPathMotion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-setPathMotion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-setPathMotion' class='name expandable'>setPathMotion</a>( <span class='pre'>pathMotion</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the algorithm used to calculate two-dimensional interpolation. ...</div><div class='long'><p>Sets the algorithm used to calculate two-dimensional interpolation.\n <p>\n     Transitions such as <a href=\"#!/api/android.transition.ChangeBounds\" rel=\"android.transition.ChangeBounds\" class=\"docClass\">android.transition.ChangeBounds</a> move Views, typically\n     in a straight path between the start and end positions. Applications that desire to\n     have these motions move in a curve can change how Views interpolate in two dimensions\n     by extending PathMotion and implementing\n     float, float, float).\n </p>\n <p>\n     When describing in XML, use a nested XML tag for the path motion. It can be one of\n     the built-in tags <code>arcMotion</code> or <code>patternPathMotion</code> or it can\n     be a custom PathMotion using <code>pathMotion</code> with the <code>class</code>\n     attributed with the fully-described class name. For example:</p></p>\n\n<pre> {@code\n <changeBounds>\n     <pathMotion class=\"my.app.transition.MyPathMotion\"/>\n </pathMotion></changeBounds>\n }\n </pre>\n\n\n<p> <p>or</p></p>\n\n<pre> {@code\n <changeBounds>\n   <arcMotion android:minimumHorizontalAngle=\"15\"\n     android:minimumVerticalAngle=\"0\" android:maximumAngle=\"90\"/>\n </arcMotion></changeBounds>\n }\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pathMotion</span> : Object {PathMotion}<div class='sub-desc'><p>Algorithm object to use for determining how to interpolate in two\n                   dimensions. If null, a straight-path algorithm will be used.\n@see <a href=\"#!/api/android.transition.ArcMotion\" rel=\"android.transition.ArcMotion\" class=\"docClass\">android.transition.ArcMotion</a>\n@see PatternPathMotion\n@see <a href=\"#!/api/android.transition.PathMotion\" rel=\"android.transition.PathMotion\" class=\"docClass\">android.transition.PathMotion</a></p>\n</div></li></ul></div></div></div><div id='method-setPropagation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-setPropagation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-setPropagation' class='name expandable'>setPropagation</a>( <span class='pre'>transitionPropagation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the method for determining Animator start delays. ...</div><div class='long'><p>Sets the method for determining Animator start delays.\n When a Transition affects several Views like <a href=\"#!/api/android.transition.Explode\" rel=\"android.transition.Explode\" class=\"docClass\">android.transition.Explode</a> or\n <a href=\"#!/api/android.transition.Slide\" rel=\"android.transition.Slide\" class=\"docClass\">android.transition.Slide</a>, there may be a desire to have a \"wave-front\" effect\n such that the Animator start delay depends on position of the View. The\n TransitionPropagation specifies how the start delays are calculated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transitionPropagation</span> : Object {TransitionPropagation}<div class='sub-desc'><p>The class used to determine the start delay of\n                              Animators created by this Transition. A null value\n                              indicates that no delay should be used.</p>\n</div></li></ul></div></div></div><div id='method-setStartDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-setStartDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-setStartDelay' class='name expandable'>setStartDelay</a>( <span class='pre'>startDelay</span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the startDelay of this transition. ...</div><div class='long'><p>Sets the startDelay of this transition. By default, there is no delay\n (indicated by a negative number), which means that the Animator created by\n the transition will have its own specified startDelay. If the delay of a\n Transition is set, that delay will override the Animator delay.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startDelay</span> : Number<div class='sub-desc'><p>The length of the delay, in milliseconds.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>This transition object.\n@attr ref android.R.styleable#Transition_startDelay</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.Transition'>android.transition.Transition</span><br/><a href='source/Transition.html#android-transition-Transition-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.Transition-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});