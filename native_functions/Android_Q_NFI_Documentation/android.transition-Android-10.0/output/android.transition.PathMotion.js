Ext.data.JsonP.android_transition_PathMotion({"tagname":"class","name":"android.transition.PathMotion","autodetected":{},"files":[{"filename":"PathMotion.js","href":"PathMotion.html#android-transition-PathMotion"}],"extends":"java.lang.Object","members":[{"name":"getPath","tagname":"method","owner":"android.transition.PathMotion","id":"method-getPath","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.transition.PathMotion","short_doc":"This base class can be extended to provide motion along a Path to Transitions. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.transition.ArcMotion","android.transition.PatternPathMotion"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.transition.PathMotion</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.transition.ArcMotion' rel='android.transition.ArcMotion' class='docClass'>android.transition.ArcMotion</a></div><div class='dependency'><a href='#!/api/android.transition.PatternPathMotion' rel='android.transition.PatternPathMotion' class='docClass'>android.transition.PatternPathMotion</a></div><h4>Files</h4><div class='dependency'><a href='source/PathMotion.html#android-transition-PathMotion' target='_blank'>PathMotion.js</a></div></pre><div class='doc-contents'><p>This base class can be extended to provide motion along a Path to Transitions.</p>\n\n<p> <p>\n Transitions such as <a href=\"#!/api/android.transition.ChangeBounds\" rel=\"android.transition.ChangeBounds\" class=\"docClass\">android.transition.ChangeBounds</a> move Views, typically\n in a straight path between the start and end positions. Applications that desire to\n have these motions move in a curve can change how Views interpolate in two dimensions\n by extending PathMotion and implementing float, float, float).\n </p>\n <p>This may be used in XML as an element inside a transition.</p></p>\n\n<pre> {@code\n <changeBounds>\n     <pathMotion class=\"my.app.transition.MyPathMotion\"/>\n </pathMotion></changeBounds>\n }\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getPath' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.transition.PathMotion'>android.transition.PathMotion</span><br/><a href='source/PathMotion.html#android-transition-PathMotion-method-getPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.transition.PathMotion-method-getPath' class='name expandable'>getPath</a>( <span class='pre'>startX, startY, endX, endY</span> ) : Object {android.graphics.Path}<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide a Path to interpolate between two points (startX, startY) and\n (endX, endY). ...</div><div class='long'><p>Provide a Path to interpolate between two points <code>(startX, startY)</code> and\n <code>(endX, endY)</code>. This allows controlled curved motion along two dimensions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startX</span> : Number<div class='sub-desc'><p>The x coordinate of the starting point.</p>\n</div></li><li><span class='pre'>startY</span> : Number<div class='sub-desc'><p>The y coordinate of the starting point.</p>\n</div></li><li><span class='pre'>endX</span> : Number<div class='sub-desc'><p>The x coordinate of the ending point.</p>\n</div></li><li><span class='pre'>endY</span> : Number<div class='sub-desc'><p>The y coordinate of the ending point.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Path}</span><div class='sub-desc'><p>A Path along which the points should be interpolated. The returned Path\n must start at point <code>(startX, startY)</code>, typically using\n float) and end at <code>(endX, endY)</code>.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});