Ext.data.JsonP.android_hardware_camera2_utils_CloseableLock({"tagname":"class","name":"android.hardware.camera2.utils.CloseableLock","autodetected":{},"files":[{"filename":"CloseableLock.js","href":"CloseableLock.html#android-hardware-camera2-utils-CloseableLock"}],"extends":"java.lang.Object","members":[{"name":"acquireExclusiveLock","tagname":"method","owner":"android.hardware.camera2.utils.CloseableLock","id":"method-acquireExclusiveLock","meta":{}},{"name":"acquireLock","tagname":"method","owner":"android.hardware.camera2.utils.CloseableLock","id":"method-acquireLock","meta":{}},{"name":"close","tagname":"method","owner":"android.hardware.camera2.utils.CloseableLock","id":"method-close","meta":{}},{"name":"releaseLock","tagname":"method","owner":"android.hardware.camera2.utils.CloseableLock","id":"method-releaseLock","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.utils.CloseableLock","short_doc":"implements java.lang.AutoCloseable\n\nImplement a shared/exclusive lock that can be closed. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.utils.CloseableLock</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CloseableLock.html#android-hardware-camera2-utils-CloseableLock' target='_blank'>CloseableLock.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>Implement a shared/exclusive lock that can be closed.</p>\n\n<p> <p>A shared lock can be acquired if any other shared locks are also acquired. An\n exclusive lock acquire will block until all shared locks have been released.</p></p>\n\n<p> <p>Locks are re-entrant; trying to acquire another lock (of the same type)\n while a lock is already held will immediately succeed.</p></p>\n\n<p> <p>Acquiring to acquire a shared lock while holding an exclusive lock or vice versa is not\n supported; attempting it will throw an IllegalStateException.</p></p>\n\n<p> <p>If the lock is closed, all future and current acquires will immediately return {@code null}.\n </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acquireExclusiveLock' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.CloseableLock'>android.hardware.camera2.utils.CloseableLock</span><br/><a href='source/CloseableLock.html#android-hardware-camera2-utils-CloseableLock-method-acquireExclusiveLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.CloseableLock-method-acquireExclusiveLock' class='name expandable'>acquireExclusiveLock</a>( <span class='pre'></span> ) : Object {android.hardware.camera2.utils.CloseableLock.ScopedLock}<span class=\"signature\"></span></div><div class='description'><div class='short'>Try to acquire the lock exclusively, blocking until all other threads release their locks. ...</div><div class='long'><p>Try to acquire the lock exclusively, blocking until all other threads release their locks.</p>\n\n<p> <p>If the lock has already been closed, or being closed before this operation returns,\n the call will immediately return {@code false}.</p></p>\n\n<p> <p>If any other threads are holding a lock, this thread will block until all\n other locks are released.</p></p>\n\n<p> <p>This lock is re-entrant; acquiring more than one exclusive lock per thread is supported,\n and must be matched by an equal number of <a href=\"#!/api/android.hardware.camera2.utils.CloseableLock-method-releaseLock\" rel=\"android.hardware.camera2.utils.CloseableLock-method-releaseLock\" class=\"docClass\">releaseLock</a> calls.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.utils.CloseableLock.ScopedLock}</span><div class='sub-desc'><p>{@code ScopedLock} instance if the lock was acquired, or {@code null} if the lock\n         was already closed.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          if an attempt is made to acquire an exclusive lock while already holding a lock</p>\n</div></li></ul></div></div></div><div id='method-acquireLock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.CloseableLock'>android.hardware.camera2.utils.CloseableLock</span><br/><a href='source/CloseableLock.html#android-hardware-camera2-utils-CloseableLock-method-acquireLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.CloseableLock-method-acquireLock' class='name expandable'>acquireLock</a>( <span class='pre'></span> ) : Object {android.hardware.camera2.utils.CloseableLock.ScopedLock}<span class=\"signature\"></span></div><div class='description'><div class='short'>Try to acquire the lock non-exclusively, blocking until the operation completes. ...</div><div class='long'><p>Try to acquire the lock non-exclusively, blocking until the operation completes.</p>\n\n<p> <p>If the lock has already been closed, or being closed before this operation returns,\n the call will immediately return {@code false}.</p></p>\n\n<p> <p>If other threads hold a non-exclusive lock (and the lock is not yet closed),\n this operation will return immediately. If another thread holds an exclusive lock,\n this thread will block until the exclusive lock has been released.</p></p>\n\n<p> <p>This lock is re-entrant; acquiring more than one non-exclusive lock per thread is\n supported, and must be matched by an equal number of <a href=\"#!/api/android.hardware.camera2.utils.CloseableLock-method-releaseLock\" rel=\"android.hardware.camera2.utils.CloseableLock-method-releaseLock\" class=\"docClass\">releaseLock</a> calls.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.utils.CloseableLock.ScopedLock}</span><div class='sub-desc'><p>{@code ScopedLock} instance if the lock was acquired, or {@code null} if the lock\n         was already closed.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this thread is already holding an exclusive lock</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.CloseableLock'>android.hardware.camera2.utils.CloseableLock</span><br/><a href='source/CloseableLock.html#android-hardware-camera2-utils-CloseableLock-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.CloseableLock-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Acquires the lock exclusively (blocking), marks it as closed, then releases the lock. ...</div><div class='long'><p>Acquires the lock exclusively (blocking), marks it as closed, then releases the lock.</p>\n\n<p> <p>Marking a lock as closed will fail all further acquisition attempts;\n it will also immediately unblock all other threads currently trying to acquire a lock.</p></p>\n\n<p> <p>This operation is idempotent; calling it more than once has no effect.</p></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          if an attempt is made to {@code close} while this thread has a lock acquired</p>\n</div></li></ul></div></div></div><div id='method-releaseLock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.CloseableLock'>android.hardware.camera2.utils.CloseableLock</span><br/><a href='source/CloseableLock.html#android-hardware-camera2-utils-CloseableLock-method-releaseLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.CloseableLock-method-releaseLock' class='name expandable'>releaseLock</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Release a single lock that was acquired. ...</div><div class='long'><p>Release a single lock that was acquired.</p>\n\n<p> <p>Any other thread that is blocked and trying to acquire a lock will get a chance\n to acquire the lock.</p></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if no locks were acquired, or if the lock was already closed</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});