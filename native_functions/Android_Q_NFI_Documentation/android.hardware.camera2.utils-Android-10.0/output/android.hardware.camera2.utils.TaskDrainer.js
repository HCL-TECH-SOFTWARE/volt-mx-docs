Ext.data.JsonP.android_hardware_camera2_utils_TaskDrainer({"tagname":"class","name":"android.hardware.camera2.utils.TaskDrainer","autodetected":{},"files":[{"filename":"TaskDrainer.js","href":"TaskDrainer.html#android-hardware-camera2-utils-TaskDrainer"}],"extends":"java.lang.Object","params":[{"tagname":"params","doc":"<p><T>\n          a type for the key that will represent tracked tasks;\n          must implement {@code Object#equals}</T></p>\n"}],"members":[{"name":"beginDrain","tagname":"method","owner":"android.hardware.camera2.utils.TaskDrainer","id":"method-beginDrain","meta":{}},{"name":"taskFinished","tagname":"method","owner":"android.hardware.camera2.utils.TaskDrainer","id":"method-taskFinished","meta":{}},{"name":"taskStarted","tagname":"method","owner":"android.hardware.camera2.utils.TaskDrainer","id":"method-taskStarted","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.utils.TaskDrainer","short_doc":"Keep track of multiple concurrent tasks starting and finishing by their key;\n allow draining existing tasks and figur...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.utils.TaskDrainer</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/TaskDrainer.html#android-hardware-camera2-utils-TaskDrainer' target='_blank'>TaskDrainer.js</a></div></pre><div class='doc-contents'><p>Keep track of multiple concurrent tasks starting and finishing by their key;\n allow draining existing tasks and figuring out when all tasks have finished\n (and new ones won't begin).</p>\n\n<p> <p>The initial state is to allow all tasks to be started and finished. A task may only be started\n once, after which it must be finished before starting again. Likewise, a task may only be\n finished once, after which it must be started before finishing again. It is okay to finish a\n task before starting it due to different threads handling starting and finishing.</p></p>\n\n<p> <p>When draining begins, no more new tasks can be started. This guarantees that at some\n point when all the tasks are finished there will be no more collective new tasks,\n at which point the <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" rel=\"android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" class=\"docClass\">android.hardware.camera2.utils.TaskDrainer.DrainListener.onDrained</a> callback will be invoked.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><T>\n          a type for the key that will represent tracked tasks;\n          must implement {@code Object#equals}</T></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-beginDrain' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.TaskDrainer'>android.hardware.camera2.utils.TaskDrainer</span><br/><a href='source/TaskDrainer.html#android-hardware-camera2-utils-TaskDrainer-method-beginDrain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.TaskDrainer-method-beginDrain' class='name expandable'>beginDrain</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Do not allow any more tasks to be started; once all existing started tasks are finished,\n fire the android.hardware.c...</div><div class='long'><p>Do not allow any more tasks to be started; once all existing started tasks are finished,\n fire the <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" rel=\"android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" class=\"docClass\">android.hardware.camera2.utils.TaskDrainer.DrainListener.onDrained</a> callback asynchronously.</p>\n\n<p> <p>This operation is idempotent; calling it more than once has no effect.</p></p>\n</div></div></div><div id='method-taskFinished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.TaskDrainer'>android.hardware.camera2.utils.TaskDrainer</span><br/><a href='source/TaskDrainer.html#android-hardware-camera2-utils-TaskDrainer-method-taskFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.TaskDrainer-method-taskFinished' class='name expandable'>taskFinished</a>( <span class='pre'>task</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Mark an asynchronous task as having finished. ...</div><div class='long'><p>Mark an asynchronous task as having finished.</p>\n\n<p> <p>A task cannot be finished more than once without first having started.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>task</span> : Object {Object}<div class='sub-desc'><p>a key to identify a task\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer-method-taskStarted\" rel=\"android.hardware.camera2.utils.TaskDrainer-method-taskStarted\" class=\"docClass\">taskStarted</a>\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer-method-beginDrain\" rel=\"android.hardware.camera2.utils.TaskDrainer-method-beginDrain\" class=\"docClass\">beginDrain</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If attempting to finish a task which is already finished (and not started),</p>\n</div></li></ul></div></div></div><div id='method-taskStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.TaskDrainer'>android.hardware.camera2.utils.TaskDrainer</span><br/><a href='source/TaskDrainer.html#android-hardware-camera2-utils-TaskDrainer-method-taskStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.TaskDrainer-method-taskStarted' class='name expandable'>taskStarted</a>( <span class='pre'>task</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Mark an asynchronous task as having started. ...</div><div class='long'><p>Mark an asynchronous task as having started.</p>\n\n<p> <p>A task cannot be started more than once without first having finished. Once\n draining begins with <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer-method-beginDrain\" rel=\"android.hardware.camera2.utils.TaskDrainer-method-beginDrain\" class=\"docClass\">beginDrain</a>, no new tasks can be started.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>task</span> : Object {Object}<div class='sub-desc'><p>a key to identify a task\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer-method-taskFinished\" rel=\"android.hardware.camera2.utils.TaskDrainer-method-taskFinished\" class=\"docClass\">taskFinished</a>\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer-method-beginDrain\" rel=\"android.hardware.camera2.utils.TaskDrainer-method-beginDrain\" class=\"docClass\">beginDrain</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If attempting to start a task which is already started (and not finished),\n          or if attempting to start a task after draining has begun.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});