Ext.data.JsonP.android_hardware_camera2_utils_TaskSingleDrainer({"tagname":"class","name":"android.hardware.camera2.utils.TaskSingleDrainer","autodetected":{},"files":[{"filename":"TaskSingleDrainer.js","href":"TaskSingleDrainer.html#android-hardware-camera2-utils-TaskSingleDrainer"}],"extends":"java.lang.Object","members":[{"name":"beginDrain","tagname":"method","owner":"android.hardware.camera2.utils.TaskSingleDrainer","id":"method-beginDrain","meta":{}},{"name":"taskFinished","tagname":"method","owner":"android.hardware.camera2.utils.TaskSingleDrainer","id":"method-taskFinished","meta":{}},{"name":"taskStarted","tagname":"method","owner":"android.hardware.camera2.utils.TaskSingleDrainer","id":"method-taskStarted","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.utils.TaskSingleDrainer","short_doc":"Keep track of a single concurrent task starting and finishing;\n allow draining the existing task and figuring out whe...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.utils.TaskSingleDrainer</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/TaskSingleDrainer.html#android-hardware-camera2-utils-TaskSingleDrainer' target='_blank'>TaskSingleDrainer.js</a></div></pre><div class='doc-contents'><p>Keep track of a single concurrent task starting and finishing;\n allow draining the existing task and figuring out when the task has finished\n (and won't restart).</p>\n\n<p> <p>The initial state is to allow all tasks to be started and finished. A task may only be started\n once, after which it must be finished before starting again. Likewise, finishing a task\n that hasn't been started is also not allowed.</p></p>\n\n<p> <p>When draining begins, the task cannot be started again. This guarantees that at some\n point the task will be finished forever, at which point the <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" rel=\"android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" class=\"docClass\">android.hardware.camera2.utils.TaskDrainer.DrainListener.onDrained</a>\n callback will be invoked.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-beginDrain' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.TaskSingleDrainer'>android.hardware.camera2.utils.TaskSingleDrainer</span><br/><a href='source/TaskSingleDrainer.html#android-hardware-camera2-utils-TaskSingleDrainer-method-beginDrain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-beginDrain' class='name expandable'>beginDrain</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Do not allow any more task re-starts; once the existing task is finished,\n fire the android.hardware.camera2.utils.Ta...</div><div class='long'><p>Do not allow any more task re-starts; once the existing task is finished,\n fire the <a href=\"#!/api/android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" rel=\"android.hardware.camera2.utils.TaskDrainer.DrainListener-method-onDrained\" class=\"docClass\">android.hardware.camera2.utils.TaskDrainer.DrainListener.onDrained</a> callback asynchronously.</p>\n\n<p> <p>This operation is idempotent; calling it more than once has no effect.</p></p>\n</div></div></div><div id='method-taskFinished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.TaskSingleDrainer'>android.hardware.camera2.utils.TaskSingleDrainer</span><br/><a href='source/TaskSingleDrainer.html#android-hardware-camera2-utils-TaskSingleDrainer-method-taskFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-taskFinished' class='name expandable'>taskFinished</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Mark this asynchronous task as having finished. ...</div><div class='long'><p>Mark this asynchronous task as having finished.</p>\n\n<p> <p>The task cannot be finished if it hasn't started. Once finished, a task\n cannot be finished again (unless it's started again).</p>\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-taskStarted\" rel=\"android.hardware.camera2.utils.TaskSingleDrainer-method-taskStarted\" class=\"docClass\">taskStarted</a>\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-beginDrain\" rel=\"android.hardware.camera2.utils.TaskSingleDrainer-method-beginDrain\" class=\"docClass\">beginDrain</a></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If attempting to start a task which is already finished (and not re-started),</p>\n</div></li></ul></div></div></div><div id='method-taskStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.TaskSingleDrainer'>android.hardware.camera2.utils.TaskSingleDrainer</span><br/><a href='source/TaskSingleDrainer.html#android-hardware-camera2-utils-TaskSingleDrainer-method-taskStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-taskStarted' class='name expandable'>taskStarted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Mark this asynchronous task as having started. ...</div><div class='long'><p>Mark this asynchronous task as having started.</p>\n\n<p> <p>The task cannot be started more than once without first having finished. Once\n draining begins with <a href=\"#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-beginDrain\" rel=\"android.hardware.camera2.utils.TaskSingleDrainer-method-beginDrain\" class=\"docClass\">beginDrain</a>, no new tasks can be started.</p>\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-taskFinished\" rel=\"android.hardware.camera2.utils.TaskSingleDrainer-method-taskFinished\" class=\"docClass\">taskFinished</a>\n@see <a href=\"#!/api/android.hardware.camera2.utils.TaskSingleDrainer-method-beginDrain\" rel=\"android.hardware.camera2.utils.TaskSingleDrainer-method-beginDrain\" class=\"docClass\">beginDrain</a></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If attempting to start a task which is already started (and not finished),\n          or if attempting to start a task after draining has begun.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});