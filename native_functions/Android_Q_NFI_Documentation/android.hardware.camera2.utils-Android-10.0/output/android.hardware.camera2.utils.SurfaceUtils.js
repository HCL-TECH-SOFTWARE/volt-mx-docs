Ext.data.JsonP.android_hardware_camera2_utils_SurfaceUtils({"tagname":"class","name":"android.hardware.camera2.utils.SurfaceUtils","autodetected":{},"files":[{"filename":"SurfaceUtils.js","href":"SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils"}],"extends":"java.lang.Object","members":[{"name":"checkConstrainedHighSpeedSurfaces","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-checkConstrainedHighSpeedSurfaces","meta":{}},{"name":"getSurfaceDataspace","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-getSurfaceDataspace","meta":{}},{"name":"getSurfaceFormat","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-getSurfaceFormat","meta":{}},{"name":"getSurfaceId","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-getSurfaceId","meta":{}},{"name":"getSurfaceSize","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-getSurfaceSize","meta":{}},{"name":"isFlexibleConsumer","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-isFlexibleConsumer","meta":{}},{"name":"isSurfaceForHwVideoEncoder","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-isSurfaceForHwVideoEncoder","meta":{}},{"name":"isSurfaceForPreview","tagname":"method","owner":"android.hardware.camera2.utils.SurfaceUtils","id":"method-isSurfaceForPreview","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.utils.SurfaceUtils","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.utils.SurfaceUtils</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils' target='_blank'>SurfaceUtils.js</a></div></pre><div class='doc-contents'><p>Various Surface utilities.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-checkConstrainedHighSpeedSurfaces' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-checkConstrainedHighSpeedSurfaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-checkConstrainedHighSpeedSurfaces' class='name expandable'>checkConstrainedHighSpeedSurfaces</a>( <span class='pre'>surfaces, fpsRange, config</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Verify that that the surfaces are valid for high-speed recording mode,\n and that the FPS range is supported ...</div><div class='long'><p>Verify that that the surfaces are valid for high-speed recording mode,\n and that the FPS range is supported</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surfaces</span> : Object {java.util.Collection}<div class='sub-desc'><p>the surfaces to verify as valid in terms of size and format</p>\n</div></li><li><span class='pre'>fpsRange</span> : Object {android.util.Range}<div class='sub-desc'><p>the target high-speed FPS range to validate</p>\n</div></li><li><span class='pre'>config</span> : Object {StreamConfigurationMap}<div class='sub-desc'><p>The stream configuration map for the device in question</p>\n</div></li></ul></div></div></div><div id='method-getSurfaceDataspace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-getSurfaceDataspace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-getSurfaceDataspace' class='name expandable'>getSurfaceDataspace</a>( <span class='pre'>surface</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the Surface dataspace. ...</div><div class='long'><p>Get the Surface dataspace.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>The surface to be queried for dataspace.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>dataspace of the surface.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the surface is already abandoned.</p>\n</div></li></ul></div></div></div><div id='method-getSurfaceFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-getSurfaceFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-getSurfaceFormat' class='name expandable'>getSurfaceFormat</a>( <span class='pre'>surface</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the Surface format. ...</div><div class='long'><p>Get the Surface format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>The surface to be queried for format.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>format of the surface.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the surface is already abandoned.</p>\n</div></li></ul></div></div></div><div id='method-getSurfaceId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-getSurfaceId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-getSurfaceId' class='name expandable'>getSurfaceId</a>( <span class='pre'>surface</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the native object id of a surface. ...</div><div class='long'><p>Get the native object id of a surface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>The surface to be checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the native object id of the surface, 0 if surface is not backed by a native object.</p>\n</div></li></ul></div></div></div><div id='method-getSurfaceSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-getSurfaceSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-getSurfaceSize' class='name expandable'>getSurfaceSize</a>( <span class='pre'>surface</span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the Surface size. ...</div><div class='long'><p>Get the Surface size.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>The surface to be queried for size.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>Size of the surface.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the surface is already abandoned.</p>\n</div></li></ul></div></div></div><div id='method-isFlexibleConsumer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-isFlexibleConsumer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-isFlexibleConsumer' class='name expandable'>isFlexibleConsumer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true is the consumer is one of the consumers that can accept\n producer overrides of the default dimensions and...</div><div class='long'><p>Return true is the consumer is one of the consumers that can accept\n producer overrides of the default dimensions and format.</p>\n</div></div></div><div id='method-isSurfaceForHwVideoEncoder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-isSurfaceForHwVideoEncoder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-isSurfaceForHwVideoEncoder' class='name expandable'>isSurfaceForHwVideoEncoder</a>( <span class='pre'>surface</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if the surface is for hardware video encoder consumer based on consumer end point\n Gralloc usage flags. ...</div><div class='long'><p>Check if the surface is for hardware video encoder consumer based on consumer end point\n Gralloc usage flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>The surface to be checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the surface is for hardware video encoder consumer, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isSurfaceForPreview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.utils.SurfaceUtils'>android.hardware.camera2.utils.SurfaceUtils</span><br/><a href='source/SurfaceUtils.html#android-hardware-camera2-utils-SurfaceUtils-method-isSurfaceForPreview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.utils.SurfaceUtils-method-isSurfaceForPreview' class='name expandable'>isSurfaceForPreview</a>( <span class='pre'>surface</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if a surface is for preview consumer based on consumer end point Gralloc usage flags. ...</div><div class='long'><p>Check if a surface is for preview consumer based on consumer end point Gralloc usage flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>The surface to be checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the surface is for preview consumer, false otherwise.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});