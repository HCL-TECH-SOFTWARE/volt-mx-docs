Ext.data.JsonP.android_view_animation_LayoutAnimationController({"tagname":"class","name":"android.view.animation.LayoutAnimationController","autodetected":{},"files":[{"filename":"LayoutAnimationController.js","href":"LayoutAnimationController.html#android-view-animation-LayoutAnimationController"}],"extends":"java.lang.Object","members":[{"name":"ORDER_NORMAL","tagname":"property","owner":"android.view.animation.LayoutAnimationController","id":"property-ORDER_NORMAL","meta":{}},{"name":"ORDER_RANDOM","tagname":"property","owner":"android.view.animation.LayoutAnimationController","id":"property-ORDER_RANDOM","meta":{}},{"name":"ORDER_REVERSE","tagname":"property","owner":"android.view.animation.LayoutAnimationController","id":"property-ORDER_REVERSE","meta":{}},{"name":"getAnimation","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-getAnimation","meta":{}},{"name":"getAnimationForView","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-getAnimationForView","meta":{}},{"name":"getDelay","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-getDelay","meta":{}},{"name":"getInterpolator","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-getInterpolator","meta":{}},{"name":"getOrder","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-getOrder","meta":{}},{"name":"isDone","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-isDone","meta":{}},{"name":"setAnimation","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-setAnimation","meta":{}},{"name":"setDelay","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-setDelay","meta":{}},{"name":"setInterpolator","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-setInterpolator","meta":{}},{"name":"setOrder","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-setOrder","meta":{}},{"name":"start","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-start","meta":{}},{"name":"willOverlap","tagname":"method","owner":"android.view.animation.LayoutAnimationController","id":"method-willOverlap","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.animation.LayoutAnimationController","short_doc":"A layout animation controller is used to animated a layout's, or a view\n group's, children. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.view.animation.GridLayoutAnimationController"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.view.animation.LayoutAnimationController</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.view.animation.GridLayoutAnimationController' rel='android.view.animation.GridLayoutAnimationController' class='docClass'>android.view.animation.GridLayoutAnimationController</a></div><h4>Files</h4><div class='dependency'><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController' target='_blank'>LayoutAnimationController.js</a></div></pre><div class='doc-contents'><p>A layout animation controller is used to animated a layout's, or a view\n group's, children. Each child uses the same animation but for every one of\n them, the animation starts at a different time. A layout animation controller\n is used by android.view.ViewGroup to compute the delay by which each\n child's animation start must be offset. The delay is computed by using\n characteristics of each child, like its index in the view group.</p>\n\n<p> This standard implementation computes the delay by multiplying a fixed\n amount of miliseconds by the index of the child in its parent view group.\n Subclasses are supposed to override\n getDelayForView(android.view.View) to implement a different way\n of computing the delay. For instance, a\n <a href=\"#!/api/android.view.animation.GridLayoutAnimationController\" rel=\"android.view.animation.GridLayoutAnimationController\" class=\"docClass\">android.view.animation.GridLayoutAnimationController</a> will compute the\n delay based on the column and row indices of the child in its parent view\n group.</p>\n\n<p> Information used to compute the animation delay of each child are stored\n in an instance of\n android.view.animation.LayoutAnimationController.AnimationParameters,\n itself stored in the android.view.ViewGroup.LayoutParams of the view.</p>\n\n<p> @attr ref android.R.styleable#LayoutAnimation_delay\n @attr ref android.R.styleable#LayoutAnimation_animationOrder\n @attr ref android.R.styleable#LayoutAnimation_interpolator\n @attr ref android.R.styleable#LayoutAnimation_animation</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ORDER_NORMAL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-property-ORDER_NORMAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-property-ORDER_NORMAL' class='name expandable'>ORDER_NORMAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Distributes the animation delays in the order in which view were added\nto their view group. ...</div><div class='long'><p>Distributes the animation delays in the order in which view were added\nto their view group.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-ORDER_RANDOM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-property-ORDER_RANDOM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-property-ORDER_RANDOM' class='name expandable'>ORDER_RANDOM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Randomly distributes the animation delays. ...</div><div class='long'><p>Randomly distributes the animation delays.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-ORDER_REVERSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-property-ORDER_REVERSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-property-ORDER_REVERSE' class='name expandable'>ORDER_REVERSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Distributes the animation delays in the reverse order in which view were\nadded to their view group. ...</div><div class='long'><p>Distributes the animation delays in the reverse order in which view were\nadded to their view group.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getAnimation' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-getAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-getAnimation' class='name expandable'>getAnimation</a>( <span class='pre'></span> ) : Object {android.view.animation.Animation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the animation applied to each child of the view group on which\n this controller is set. ...</div><div class='long'><p>Returns the animation applied to each child of the view group on which\n this controller is set.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.animation.Animation}</span><div class='sub-desc'><p>an <a href=\"#!/api/android.view.animation.Animation\" rel=\"android.view.animation.Animation\" class=\"docClass\">android.view.animation.Animation</a> instance\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-setAnimation\" rel=\"android.view.animation.LayoutAnimationController-method-setAnimation\" class=\"docClass\">setAnimation</a>(android.content.Context, int)\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-setAnimation\" rel=\"android.view.animation.LayoutAnimationController-method-setAnimation\" class=\"docClass\">setAnimation</a>(Animation)</p>\n</div></li></ul></div></div></div><div id='method-getAnimationForView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-getAnimationForView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-getAnimationForView' class='name expandable'>getAnimationForView</a>( <span class='pre'>view</span> ) : Object {android.view.animation.Animation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the animation to be applied to the specified view. ...</div><div class='long'><p>Returns the animation to be applied to the specified view. The returned\n animation is delayed by an offset computed according to the information\n provided by\n android.view.animation.LayoutAnimationController.AnimationParameters.\n This method is called by view groups to obtain the animation to set on\n a specific child.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>the view to animate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.animation.Animation}</span><div class='sub-desc'><p>an animation delayed by the number of milliseconds returned by\n         getDelayForView(android.view.View)\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-getDelay\" rel=\"android.view.animation.LayoutAnimationController-method-getDelay\" class=\"docClass\">getDelay</a>()\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-setDelay\" rel=\"android.view.animation.LayoutAnimationController-method-setDelay\" class=\"docClass\">setDelay</a>(float)\n@see #getDelayForView(android.view.View)</p>\n</div></li></ul></div></div></div><div id='method-getDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-getDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-getDelay' class='name expandable'>getDelay</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the delay by which the children's animation are offset. ...</div><div class='long'><p>Returns the delay by which the children's animation are offset. The\n delay is expressed as a fraction of the animation duration.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a fraction of the animation duration\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-setDelay\" rel=\"android.view.animation.LayoutAnimationController-method-setDelay\" class=\"docClass\">setDelay</a>(float)</p>\n</div></li></ul></div></div></div><div id='method-getInterpolator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-getInterpolator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-getInterpolator' class='name expandable'>getInterpolator</a>( <span class='pre'></span> ) : Object {android.view.animation.Interpolator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the interpolator used to interpolate the delays between the\n children. ...</div><div class='long'><p>Returns the interpolator used to interpolate the delays between the\n children.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.animation.Interpolator}</span><div class='sub-desc'><p>an <a href=\"#!/api/android.view.animation.Interpolator\" rel=\"android.view.animation.Interpolator\" class=\"docClass\">android.view.animation.Interpolator</a></p>\n</div></li></ul></div></div></div><div id='method-getOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-getOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-getOrder' class='name expandable'>getOrder</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the order used to compute the delay of each child's animation. ...</div><div class='long'><p>Returns the order used to compute the delay of each child's animation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>one of <a href=\"#!/api/android.view.animation.LayoutAnimationController-property-ORDER_NORMAL\" rel=\"android.view.animation.LayoutAnimationController-property-ORDER_NORMAL\" class=\"docClass\">ORDER_NORMAL</a>, <a href=\"#!/api/android.view.animation.LayoutAnimationController-property-ORDER_REVERSE\" rel=\"android.view.animation.LayoutAnimationController-property-ORDER_REVERSE\" class=\"docClass\">ORDER_REVERSE</a> or\n         <a href=\"#!/api/android.view.animation.LayoutAnimationController-property-ORDER_RANDOM\" rel=\"android.view.animation.LayoutAnimationController-property-ORDER_RANDOM\" class=\"docClass\">ORDER_RANDOM</a>\n@attr ref android.R.styleable#LayoutAnimation_animationOrder</p>\n</div></li></ul></div></div></div><div id='method-isDone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-isDone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-isDone' class='name expandable'>isDone</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the layout animation is over or not. ...</div><div class='long'><p>Indicates whether the layout animation is over or not. A layout animation\n is considered done when the animation with the longest delay is done.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if all of the children's animations are over, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-setAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-setAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-setAnimation' class='name expandable'>setAnimation</a>( <span class='pre'>animation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the animation to be run on each child of the view group on which\n this layout animation controller is . ...</div><div class='long'><p>Sets the animation to be run on each child of the view group on which\n this layout animation controller is .</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>animation</span> : Object {Animation}<div class='sub-desc'><p>the animation to run on each child of the view group\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-setAnimation\" rel=\"android.view.animation.LayoutAnimationController-method-setAnimation\" class=\"docClass\">setAnimation</a>(android.content.Context, int)\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-getAnimation\" rel=\"android.view.animation.LayoutAnimationController-method-getAnimation\" class=\"docClass\">getAnimation</a>()\n@attr ref android.R.styleable#LayoutAnimation_animation</p>\n</div></li></ul></div></div></div><div id='method-setDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-setDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-setDelay' class='name expandable'>setDelay</a>( <span class='pre'>delay</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the delay, as a fraction of the animation duration, by which the\n children's animations are offset. ...</div><div class='long'><p>Sets the delay, as a fraction of the animation duration, by which the\n children's animations are offset. The general formula is:</p>\n\n<pre> child animation delay = child index * delay * animation duration\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delay</span> : Number<div class='sub-desc'><p>a fraction of the animation duration\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-getDelay\" rel=\"android.view.animation.LayoutAnimationController-method-getDelay\" class=\"docClass\">getDelay</a>()</p>\n</div></li></ul></div></div></div><div id='method-setInterpolator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-setInterpolator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-setInterpolator' class='name expandable'>setInterpolator</a>( <span class='pre'>interpolator</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the interpolator used to interpolate the delays between the\n children. ...</div><div class='long'><p>Sets the interpolator used to interpolate the delays between the\n children.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>interpolator</span> : Object {Interpolator}<div class='sub-desc'><p>the interpolator\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-getInterpolator\" rel=\"android.view.animation.LayoutAnimationController-method-getInterpolator\" class=\"docClass\">getInterpolator</a>()\n@see <a href=\"#!/api/android.view.animation.LayoutAnimationController-method-setInterpolator\" rel=\"android.view.animation.LayoutAnimationController-method-setInterpolator\" class=\"docClass\">setInterpolator</a>(Interpolator)\n@attr ref android.R.styleable#LayoutAnimation_interpolator</p>\n</div></li></ul></div></div></div><div id='method-setOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-setOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-setOrder' class='name expandable'>setOrder</a>( <span class='pre'>order</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the order used to compute the delay of each child's animation. ...</div><div class='long'><p>Sets the order used to compute the delay of each child's animation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>order</span> : Number<div class='sub-desc'><p>one of <a href=\"#!/api/android.view.animation.LayoutAnimationController-property-ORDER_NORMAL\" rel=\"android.view.animation.LayoutAnimationController-property-ORDER_NORMAL\" class=\"docClass\">ORDER_NORMAL</a>, <a href=\"#!/api/android.view.animation.LayoutAnimationController-property-ORDER_REVERSE\" rel=\"android.view.animation.LayoutAnimationController-property-ORDER_REVERSE\" class=\"docClass\">ORDER_REVERSE</a> or\n        <a href=\"#!/api/android.view.animation.LayoutAnimationController-property-ORDER_RANDOM\" rel=\"android.view.animation.LayoutAnimationController-property-ORDER_RANDOM\" class=\"docClass\">ORDER_RANDOM</a>\n@attr ref android.R.styleable#LayoutAnimation_animationOrder</p>\n</div></li></ul></div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-start' class='name expandable'>start</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts the animation. ...</div><div class='long'><p>Starts the animation.</p>\n</div></div></div><div id='method-willOverlap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.LayoutAnimationController'>android.view.animation.LayoutAnimationController</span><br/><a href='source/LayoutAnimationController.html#android-view-animation-LayoutAnimationController-method-willOverlap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.LayoutAnimationController-method-willOverlap' class='name expandable'>willOverlap</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether two children's animations will overlap. ...</div><div class='long'><p>Indicates whether two children's animations will overlap. Animations\n overlap when the delay is lower than 100% (or 1.0).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if animations will overlap, false otherwise</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});