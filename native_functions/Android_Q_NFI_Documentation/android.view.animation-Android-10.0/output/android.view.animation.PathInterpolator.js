Ext.data.JsonP.android_view_animation_PathInterpolator({"tagname":"class","name":"android.view.animation.PathInterpolator","autodetected":{},"files":[{"filename":"PathInterpolator.js","href":"PathInterpolator.html#android-view-animation-PathInterpolator"}],"extends":"android.view.animation.BaseInterpolator","members":[{"name":"getInterpolation","tagname":"method","owner":"android.view.animation.PathInterpolator","id":"method-getInterpolation","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.animation.PathInterpolator","short_doc":"implements com.android.internal.view.animation.NativeInterpolatorFactory\n\nAn interpolator that can traverse a Path th...","classIcon":"icon-class","superclasses":["java.lang.Object","android.view.animation.BaseInterpolator"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.view.animation.BaseInterpolator' rel='android.view.animation.BaseInterpolator' class='docClass'>android.view.animation.BaseInterpolator</a><div class='subclass '><strong>android.view.animation.PathInterpolator</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/PathInterpolator.html#android-view-animation-PathInterpolator' target='_blank'>PathInterpolator.js</a></div></pre><div class='doc-contents'><p>implements com.android.internal.view.animation.NativeInterpolatorFactory</p>\n\n<p>An interpolator that can traverse a Path that extends from <code>Point</code>\n <code>(0, 0)</code> to <code>(1, 1)</code>. The x coordinate along the <code>Path</code>\n is the input value and the output is the y coordinate of the line at that point.\n This means that the Path must conform to a function <code>y = f(x)</code>.</p>\n\n<p> <p>The <code>Path</code> must not have gaps in the x direction and must not\n loop back on itself such that there can be two points sharing the same x coordinate.\n It is alright to have a disjoint line in the vertical direction:</p>\n <p><blockquote></blockquote></p>\n\n<pre>     Path path = new Path();\n     path.lineTo(0.25f, 0.25f);\n     path.moveTo(0.25f, 0.5f);\n     path.lineTo(1f, 1f);\n </pre>\n\n\n<p></p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getInterpolation' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.animation.PathInterpolator'>android.view.animation.PathInterpolator</span><br/><a href='source/PathInterpolator.html#android-view-animation-PathInterpolator-method-getInterpolation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.animation.PathInterpolator-method-getInterpolation' class='name expandable'>getInterpolation</a>( <span class='pre'>t</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Using the line in the Path in this interpolator that can be described as\n y = f(x), finds the y coordinate of the lin...</div><div class='long'><p>Using the line in the Path in this interpolator that can be described as\n <code>y = f(x)</code>, finds the y coordinate of the line given <code>t</code>\n as the x coordinate. Values less than 0 will always return 0 and values greater\n than 1 will always return 1.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>t</span> : Number<div class='sub-desc'><p>Treated as the x coordinate along the line.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The y coordinate of the Path along the line where x = <code>t</code>.\n@see Interpolator#getInterpolation(float)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});