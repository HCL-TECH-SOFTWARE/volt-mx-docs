Ext.data.JsonP.com_android_ex_photo_PhotoViewPager_OnInterceptTouchListener({"tagname":"class","name":"com.android.ex.photo.PhotoViewPager.OnInterceptTouchListener","autodetected":{},"files":[{"filename":"OnInterceptTouchListener.js","href":"OnInterceptTouchListener.html#com-android-ex-photo-PhotoViewPager-OnInterceptTouchListener"}],"members":[{"name":"onTouchIntercept","tagname":"method","owner":"com.android.ex.photo.PhotoViewPager.OnInterceptTouchListener","id":"method-onTouchIntercept","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.ex.photo.PhotoViewPager.OnInterceptTouchListener","short_doc":"Provides an ability to intercept touch events. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnInterceptTouchListener.html#com-android-ex-photo-PhotoViewPager-OnInterceptTouchListener' target='_blank'>OnInterceptTouchListener.js</a></div></pre><div class='doc-contents'><p>Provides an ability to intercept touch events.\n <p>\n ViewPager intercepts all touch events and we need to be able to override this\n behavior. Instead, we could perform a similar function by declaring a custom\n android.view.ViewGroup to contain the pager and intercept touch events at a higher\n level.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onTouchIntercept' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.photo.PhotoViewPager.OnInterceptTouchListener'>com.android.ex.photo.PhotoViewPager.OnInterceptTouchListener</span><br/><a href='source/OnInterceptTouchListener.html#com-android-ex-photo-PhotoViewPager-OnInterceptTouchListener-method-onTouchIntercept' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.photo.PhotoViewPager.OnInterceptTouchListener-method-onTouchIntercept' class='name expandable'>onTouchIntercept</a>( <span class='pre'>origX, origY</span> ) : Object {com.android.ex.photo.PhotoViewPager.InterceptType}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a touch intercept is about to occur. ...</div><div class='long'><p>Called when a touch intercept is about to occur.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>origX</span> : Number<div class='sub-desc'><p>the raw x coordinate of the initial touch</p>\n</div></li><li><span class='pre'>origY</span> : Number<div class='sub-desc'><p>the raw y coordinate of the initial touch</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.ex.photo.PhotoViewPager.InterceptType}</span><div class='sub-desc'><p>Which type of touch, if any, should should be intercepted.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});