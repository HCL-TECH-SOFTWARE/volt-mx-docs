Ext.data.JsonP.com_android_ike_ikev2_ChildSessionStateMachine({"tagname":"class","name":"com.android.ike.ikev2.ChildSessionStateMachine","autodetected":{},"files":[{"filename":"ChildSessionStateMachine.js","href":"ChildSessionStateMachine.html#com-android-ike-ikev2-ChildSessionStateMachine"}],"extends":"com.android.internal.util.StateMachine","members":[{"name":"handleFirstChildExchange","tagname":"method","owner":"com.android.ike.ikev2.ChildSessionStateMachine","id":"method-handleFirstChildExchange","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.ike.ikev2.ChildSessionStateMachine","short_doc":"ChildSessionStateMachine tracks states and manages exchanges of this Child Session. ...","classIcon":"icon-class","superclasses":["com.android.internal.util.StateMachine"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>com.android.internal.util.StateMachine<div class='subclass '><strong>com.android.ike.ikev2.ChildSessionStateMachine</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ChildSessionStateMachine.html#com-android-ike-ikev2-ChildSessionStateMachine' target='_blank'>ChildSessionStateMachine.js</a></div></pre><div class='doc-contents'><p>ChildSessionStateMachine tracks states and manages exchanges of this Child Session.</p>\n\n<p> <p>ChildSessionStateMachine has two types of states. One type are states where there is no\n ongoing procedure affecting Child Session (non-procedure state), including Initial, Closed, Idle\n and Receiving. All other states are \"procedure\" states which are named as follows:</p>\n\n<pre> State Name = [Procedure Type] + [Exchange Initiator] + [Exchange Type].\n - An IKE procedure consists of one or two IKE exchanges:\n      Procedure Type = {CreateChild | DeleteChild | Info | RekeyChild | SimulRekeyChild}.\n - Exchange Initiator indicates whether local or remote peer is the exchange initiator:\n      Exchange Initiator = {Local | Remote}\n - Exchange type defines the function of this exchange.\n      Exchange Type = {Create | Delete}\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-handleFirstChildExchange' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ike.ikev2.ChildSessionStateMachine'>com.android.ike.ikev2.ChildSessionStateMachine</span><br/><a href='source/ChildSessionStateMachine.html#com-android-ike-ikev2-ChildSessionStateMachine-method-handleFirstChildExchange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ike.ikev2.ChildSessionStateMachine-method-handleFirstChildExchange' class='name expandable'>handleFirstChildExchange</a>( <span class='pre'>reqPayloads, respPayloads, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Receive requesting and responding payloads for negotiating first Child SA. ...</div><div class='long'><p>Receive requesting and responding payloads for negotiating first Child SA.</p>\n\n<p> <p>This method is called synchronously from IkeStateMachine. It proxies the synchronous call\n as an asynchronous job to the ChildStateMachine handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>reqPayloads</span> : Object {java.util.List}<div class='sub-desc'><p>SA negotiation related payloads in IKE_AUTH request.</p>\n</div></li><li><span class='pre'>respPayloads</span> : Object {java.util.List}<div class='sub-desc'><p>SA negotiation related payloads in IKE_AUTH response.</p>\n</div></li><li><span class='pre'>callback</span> : Object {IkeSessionStateMachine.IChildSessionCallback}<div class='sub-desc'><p>callback for notifying IkeSessionStateMachine the negotiation result.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});