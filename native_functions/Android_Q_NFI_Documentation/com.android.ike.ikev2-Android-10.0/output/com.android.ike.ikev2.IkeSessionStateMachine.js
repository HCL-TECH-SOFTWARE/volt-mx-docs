Ext.data.JsonP.com_android_ike_ikev2_IkeSessionStateMachine({"tagname":"class","name":"com.android.ike.ikev2.IkeSessionStateMachine","autodetected":{},"files":[{"filename":"IkeSessionStateMachine.js","href":"IkeSessionStateMachine.html#com-android-ike-ikev2-IkeSessionStateMachine"}],"extends":"com.android.internal.util.StateMachine","members":[{"name":"receiveIkePacket","tagname":"method","owner":"com.android.ike.ikev2.IkeSessionStateMachine","id":"method-receiveIkePacket","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.ike.ikev2.IkeSessionStateMachine","short_doc":"IkeSessionStateMachine tracks states and manages exchanges of this IKE session. ...","classIcon":"icon-class","superclasses":["com.android.internal.util.StateMachine"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>com.android.internal.util.StateMachine<div class='subclass '><strong>com.android.ike.ikev2.IkeSessionStateMachine</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/IkeSessionStateMachine.html#com-android-ike-ikev2-IkeSessionStateMachine' target='_blank'>IkeSessionStateMachine.js</a></div></pre><div class='doc-contents'><p>IkeSessionStateMachine tracks states and manages exchanges of this IKE session.</p>\n\n<p> <p>IkeSessionStateMachine has two types of states. One type are states where there is no ongoing\n procedure affecting IKE session (non-procedure state), including Initial, Closed, Idle and\n Receiving. All other states are \"procedure\" states which are named as follows:</p>\n\n<pre> State Name = [Procedure Type] + [Exchange Initiator] + [Exchange Type].\n - An IKE procedure consists of one or two IKE exchanges:\n      Procedure Type = {CreateIke | DeleteIke | Info | RekeyIke | SimulRekeyIke}.\n - Exchange Initiator indicates whether local or remote peer is the exchange initiator:\n      Exchange Initiator = {Local | Remote}\n - Exchange type defines the function of this exchange. To make it more descriptive, we separate\n      Delete Exchange from generic Informational Exchange:\n      Exchange Type = {IkeInit | IkeAuth | Create | Delete | Info}\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-receiveIkePacket' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ike.ikev2.IkeSessionStateMachine'>com.android.ike.ikev2.IkeSessionStateMachine</span><br/><a href='source/IkeSessionStateMachine.html#com-android-ike-ikev2-IkeSessionStateMachine-method-receiveIkePacket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ike.ikev2.IkeSessionStateMachine-method-receiveIkePacket' class='name expandable'>receiveIkePacket</a>( <span class='pre'>ikeHeader, ikePacketBytes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Receive IKE packet from remote server. ...</div><div class='long'><p>Receive IKE packet from remote server.</p>\n\n<p> <p>This method is called synchronously from IkeSocket. It proxies the synchronous call as an\n asynchronous job to the IkeSessionStateMachine handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ikeHeader</span> : Object {IkeHeader}<div class='sub-desc'><p>the decoded IKE header.</p>\n</div></li><li><span class='pre'>ikePacketBytes</span> : Object {byte[]}<div class='sub-desc'><p>the byte array of the entire received IKE packet.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});