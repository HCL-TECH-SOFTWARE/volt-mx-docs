Ext.data.JsonP.com_android_car_setupwizardlib_util_CarHelperRegistry({"tagname":"class","name":"com.android.car.setupwizardlib.util.CarHelperRegistry","autodetected":{},"files":[{"filename":"CarHelperRegistry.js","href":"CarHelperRegistry.html#com-android-car-setupwizardlib-util-CarHelperRegistry"}],"extends":"java.lang.Object","members":[{"name":"getOrCreateWithAppContext","tagname":"method","owner":"com.android.car.setupwizardlib.util.CarHelperRegistry","id":"method-getOrCreateWithAppContext","meta":{}},{"name":"putHelper","tagname":"method","owner":"com.android.car.setupwizardlib.util.CarHelperRegistry","id":"method-putHelper","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.car.setupwizardlib.util.CarHelperRegistry","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.car.setupwizardlib.util.CarHelperRegistry</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CarHelperRegistry.html#com-android-car-setupwizardlib-util-CarHelperRegistry' target='_blank'>CarHelperRegistry.js</a></div></pre><div class='doc-contents'><p>A registry of singleton-like helpers, which can be injected by the application for testing.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getOrCreateWithAppContext' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.car.setupwizardlib.util.CarHelperRegistry'>com.android.car.setupwizardlib.util.CarHelperRegistry</span><br/><a href='source/CarHelperRegistry.html#com-android-car-setupwizardlib-util-CarHelperRegistry-method-getOrCreateWithAppContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.car.setupwizardlib.util.CarHelperRegistry-method-getOrCreateWithAppContext' class='name expandable'>getOrCreateWithAppContext</a>( <span class='pre'>context, cls, creator, </span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the helper from the registry if it exists, or create and put one into the registry if it\n does not exist. ...</div><div class='long'><p>Get the helper from the registry if it exists, or create and put one into the registry if it\n does not exist.</p>\n\n<p> <p>Since helpers are singleton-like, the context passed to the creator is always the\n application context so it doesn't leak local contexts pass their lifecycles.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The context to create the helper with. This can be any context as this method\n     will call Context.getApplicationContext() to ensure the application context is\n     used.</p>\n</div></li><li><span class='pre'>cls</span> : Object {java.lang.Class}<div class='sub-desc'><p>The helper class.</p>\n</div></li><li><span class='pre'>creator</span> : Object {com.android.car.setupwizardlib.util.CarHelperRegistry.HelperCreator}<div class='sub-desc'><p>The method to create the helper. Typically if the helper has a constructor\n     that takes a context, this creator will be {@code MyHelper::new}.</p>\n</div></li><li><span class='pre'></span> : Object<div class='sub-desc'><p><H> The helper class.</H></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>The helper in the registry, either existing or newly registered.</p>\n</div></li></ul></div></div></div><div id='method-putHelper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.car.setupwizardlib.util.CarHelperRegistry'>com.android.car.setupwizardlib.util.CarHelperRegistry</span><br/><a href='source/CarHelperRegistry.html#com-android-car-setupwizardlib-util-CarHelperRegistry-method-putHelper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.car.setupwizardlib.util.CarHelperRegistry-method-putHelper' class='name expandable'>putHelper</a>( <span class='pre'>cls, helper, </span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Put a helper for the given {@code cls} into the registry. ...</div><div class='long'><p>Put a helper for the given {@code cls} into the registry. Outside of this class, this should\n only be used to inject helper for testing purposes. Singletons should use Class, com.android.car.setupwizardlib.util.CarHelperRegistry.HelperCreator) to create the instance which will</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : Object {java.lang.Class}<div class='sub-desc'><p>The helper class.</p>\n</div></li><li><span class='pre'>helper</span> : Object {Object}<div class='sub-desc'><p>The helper instance to add to the registry.</p>\n</div></li><li><span class='pre'></span> : Object<div class='sub-desc'><p><H> The helper class.</H></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});