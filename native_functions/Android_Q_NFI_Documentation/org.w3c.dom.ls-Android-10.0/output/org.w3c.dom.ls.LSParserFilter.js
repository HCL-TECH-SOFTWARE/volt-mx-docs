Ext.data.JsonP.org_w3c_dom_ls_LSParserFilter({"tagname":"class","name":"org.w3c.dom.ls.LSParserFilter","autodetected":{},"files":[{"filename":"LSParserFilter.js","href":"LSParserFilter.html#org-w3c-dom-ls-LSParserFilter"}],"members":[{"name":"FILTER_ACCEPT","tagname":"property","owner":"org.w3c.dom.ls.LSParserFilter","id":"property-FILTER_ACCEPT","meta":{}},{"name":"FILTER_INTERRUPT","tagname":"property","owner":"org.w3c.dom.ls.LSParserFilter","id":"property-FILTER_INTERRUPT","meta":{}},{"name":"FILTER_REJECT","tagname":"property","owner":"org.w3c.dom.ls.LSParserFilter","id":"property-FILTER_REJECT","meta":{}},{"name":"FILTER_SKIP","tagname":"property","owner":"org.w3c.dom.ls.LSParserFilter","id":"property-FILTER_SKIP","meta":{}},{"name":"acceptNode","tagname":"method","owner":"org.w3c.dom.ls.LSParserFilter","id":"method-acceptNode","meta":{}},{"name":"getWhatToShow","tagname":"method","owner":"org.w3c.dom.ls.LSParserFilter","id":"method-getWhatToShow","meta":{}},{"name":"startElement","tagname":"method","owner":"org.w3c.dom.ls.LSParserFilter","id":"method-startElement","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-org.w3c.dom.ls.LSParserFilter","short_doc":"LSParserFilters provide applications the ability to examine\n nodes as they are being constructed while parsing. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter' target='_blank'>LSParserFilter.js</a></div></pre><div class='doc-contents'><p><code>LSParserFilter</code>s provide applications the ability to examine\n nodes as they are being constructed while parsing. As each node is\n examined, it may be modified or removed, or the entire parse may be\n terminated early.\n <p> At the time any of the filter methods are called by the parser, the\n owner Document and DOMImplementation objects exist and are accessible.\n The document element is never passed to the <code>LSParserFilter</code>\n methods, i.e. it is not possible to filter out the document element.\n <code>Document</code>, <code>DocumentType</code>, <code>Notation</code>,\n <code>Entity</code>, and <code>Attr</code> nodes are never passed to the\n <code>acceptNode</code> method on the filter. The child nodes of an\n <code>EntityReference</code> node are passed to the filter if the\n parameter \"<a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-entities'>\n entities</a>\" is set to <code>false</code>. Note that, as described by the parameter \"<a href='http://www.w3.org/TR/DOM-Level-3-Core/core.html#parameter-entities'>\n entities</a>\", unexpanded entity reference nodes are never discarded and are always\n passed to the filter.\n <p> All validity checking while parsing a document occurs on the source\n document as it appears on the input stream, not on the DOM document as it\n is built in memory. With filters, the document in memory may be a subset\n of the document on the stream, and its validity may have been affected by\n the filtering.\n <p> All default attributes must be present on elements when the elements\n are passed to the filter methods. All other default content must be\n passed to the filter methods.\n <p> DOM applications must not raise exceptions in a filter. The effect of\n throwing exceptions from a filter is DOM implementation dependent.\n <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407'>Document Object Model (DOM) Level 3 Load\nand Save Specification</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-FILTER_ACCEPT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.ls.LSParserFilter'>org.w3c.dom.ls.LSParserFilter</span><br/><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter-property-FILTER_ACCEPT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.ls.LSParserFilter-property-FILTER_ACCEPT' class='name expandable'>FILTER_ACCEPT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Accept the node. ...</div><div class='long'><p>Accept the node.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-FILTER_INTERRUPT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.ls.LSParserFilter'>org.w3c.dom.ls.LSParserFilter</span><br/><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter-property-FILTER_INTERRUPT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.ls.LSParserFilter-property-FILTER_INTERRUPT' class='name expandable'>FILTER_INTERRUPT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Interrupt the normal processing of the document. ...</div><div class='long'><p>Interrupt the normal processing of the document.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-FILTER_REJECT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.ls.LSParserFilter'>org.w3c.dom.ls.LSParserFilter</span><br/><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter-property-FILTER_REJECT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.ls.LSParserFilter-property-FILTER_REJECT' class='name expandable'>FILTER_REJECT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reject the node and its children. ...</div><div class='long'><p>Reject the node and its children.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-FILTER_SKIP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.ls.LSParserFilter'>org.w3c.dom.ls.LSParserFilter</span><br/><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter-property-FILTER_SKIP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.ls.LSParserFilter-property-FILTER_SKIP' class='name expandable'>FILTER_SKIP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Skip this single node. ...</div><div class='long'><p>Skip this single node. The children of this node will still be\nconsidered.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acceptNode' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.ls.LSParserFilter'>org.w3c.dom.ls.LSParserFilter</span><br/><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter-method-acceptNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.ls.LSParserFilter-method-acceptNode' class='name expandable'>acceptNode</a>( <span class='pre'>nodeArg</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will be called by the parser at the completion of the\n parsing of each node. ...</div><div class='long'><p>This method will be called by the parser at the completion of the\n parsing of each node. The node and all of its descendants will exist\n and be complete. The parent node will also exist, although it may be\n incomplete, i.e. it may have additional children that have not yet\n been parsed. Attribute nodes are never passed to this function.\n <br>From within this method, the new node may be freely modified -\n children may be added or removed, text nodes modified, etc. The state\n of the rest of the document outside this node is not defined, and the\n affect of any attempt to navigate to, or to modify any other part of\n the document is undefined.\n <br>For validating parsers, the checks are made on the original\n document, before any modification by the filter. No validity checks\n are made on any document modifications made by the filter.\n <br>If this new node is rejected, the parser might reuse the new node\n and any of its descendants.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nodeArg</span> : Object {Node}<div class='sub-desc'><p>The newly constructed element. At the time this method\n   is called, the element is complete - it has all of its children\n   (and their children, recursively) and attributes, and is attached\n   as a child to its parent.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><ul>\n <li> <code>FILTER_ACCEPT</code> if this <code>Node</code> should\n   be included in the DOM document being built.\n </li>\n <li>\n   <code>FILTER_REJECT</code> if the <code>Node</code> and all of its\n   children should be rejected.\n </li>\n <li> <code>FILTER_SKIP</code> if the\n   <code>Node</code> should be skipped and the <code>Node</code>\n   should be replaced by all the children of the <code>Node</code>.\n </li>\n <li>\n   <code>FILTER_INTERRUPT</code> if the filter wants to stop the\n   processing of the document. Interrupting the processing of the\n   document does no longer guarantee that the resulting DOM tree is\n   XML well-formed. The <code>Node</code> is accepted and will be the\n   last completely parsed node.\n </li>\n </ul>\n\n</div></li></ul></div></div></div><div id='method-getWhatToShow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.ls.LSParserFilter'>org.w3c.dom.ls.LSParserFilter</span><br/><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter-method-getWhatToShow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.ls.LSParserFilter-method-getWhatToShow' class='name expandable'>getWhatToShow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells the LSParser what types of nodes to show to the\n method LSParserFilter.acceptNode. ...</div><div class='long'><p>Tells the <code>LSParser</code> what types of nodes to show to the\n method <code>LSParserFilter.acceptNode</code>. If a node is not shown\n to the filter using this attribute, it is automatically included in\n the DOM document being built. See <code>NodeFilter</code> for\n definition of the constants. The constants <code>SHOW_ATTRIBUTE</code>\n , <code>SHOW_DOCUMENT</code>, <code>SHOW_DOCUMENT_TYPE</code>,\n <code>SHOW_NOTATION</code>, <code>SHOW_ENTITY</code>, and\n <code>SHOW_DOCUMENT_FRAGMENT</code> are meaningless here. Those nodes\n will never be passed to <code>LSParserFilter.acceptNode</code>.\n <br> The constants used here are defined in [<a href='http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113'>DOM Level 2 Traversal and      Range</a>]\n .</p>\n</div></div></div><div id='method-startElement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.ls.LSParserFilter'>org.w3c.dom.ls.LSParserFilter</span><br/><a href='source/LSParserFilter.html#org-w3c-dom-ls-LSParserFilter-method-startElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.ls.LSParserFilter-method-startElement' class='name expandable'>startElement</a>( <span class='pre'>elementArg</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>The parser will call this method after each Element start\n tag has been scanned, but before the remainder of the\n Ele...</div><div class='long'><p>The parser will call this method after each <code>Element</code> start\n tag has been scanned, but before the remainder of the\n <code>Element</code> is processed. The intent is to allow the\n element, including any children, to be efficiently skipped. Note that\n only element nodes are passed to the <code>startElement</code>\n function.\n <br>The element node passed to <code>startElement</code> for filtering\n will include all of the Element's attributes, but none of the\n children nodes. The Element may not yet be in place in the document\n being constructed (it may not have a parent node.)\n <br>A <code>startElement</code> filter function may access or change\n the attributes for the Element. Changing Namespace declarations will\n have no effect on namespace resolution by the parser.\n <br>For efficiency, the Element node passed to the filter may not be\n the same one as is actually placed in the tree if the node is\n accepted. And the actual node (node object identity) may be reused\n during the process of reading in and filtering a document.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elementArg</span> : Object {Element}<div class='sub-desc'><p>The newly encountered element. At the time this\n   method is called, the element is incomplete - it will have its\n   attributes, but no children.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><ul>\n <li> <code>FILTER_ACCEPT</code> if the <code>Element</code> should\n   be included in the DOM document being built.\n </li>\n <li>\n   <code>FILTER_REJECT</code> if the <code>Element</code> and all of\n   its children should be rejected.\n </li>\n <li> <code>FILTER_SKIP</code> if the\n   <code>Element</code> should be skipped. All of its children are\n   inserted in place of the skipped <code>Element</code> node.\n </li>\n <li>\n   <code>FILTER_INTERRUPT</code> if the filter wants to stop the\n   processing of the document. Interrupting the processing of the\n   document does no longer guarantee that the resulting DOM tree is\n   XML well-formed. The <code>Element</code> is rejected.\n </li>\n </ul>\n\n\n<p> Returning\n   any other values will result in unspecified behavior.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});