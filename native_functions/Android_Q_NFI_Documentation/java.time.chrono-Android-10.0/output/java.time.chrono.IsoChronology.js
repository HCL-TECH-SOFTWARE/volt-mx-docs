Ext.data.JsonP.java_time_chrono_IsoChronology({"tagname":"class","name":"java.time.chrono.IsoChronology","autodetected":{},"files":[{"filename":"IsoChronology.js","href":"IsoChronology.html#java-time-chrono-IsoChronology"}],"extends":"java.time.chrono.AbstractChronology","since":"1.8","members":[{"name":"INSTANCE","tagname":"property","owner":"java.time.chrono.IsoChronology","id":"property-INSTANCE","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.time.chrono.AbstractChronology","id":"method-compareTo","meta":{}},{"name":"date","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-date","meta":{}},{"name":"dateEpochDay","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-dateEpochDay","meta":{}},{"name":"dateNow","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-dateNow","meta":{}},{"name":"dateYearDay","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-dateYearDay","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.chrono.AbstractChronology","id":"method-equals","meta":{}},{"name":"eraOf","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-eraOf","meta":{}},{"name":"eras","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-eras","meta":{}},{"name":"getCalendarType","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-getCalendarType","meta":{}},{"name":"getId","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-getId","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.chrono.AbstractChronology","id":"method-hashCode","meta":{}},{"name":"isLeapYear","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-isLeapYear","meta":{}},{"name":"localDateTime","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-localDateTime","meta":{}},{"name":"period","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-period","meta":{}},{"name":"prolepticYear","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-prolepticYear","meta":{}},{"name":"range","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-range","meta":{}},{"name":"resolveDate","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-resolveDate","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.chrono.AbstractChronology","id":"method-toString","meta":{}},{"name":"zonedDateTime","tagname":"method","owner":"java.time.chrono.IsoChronology","id":"method-zonedDateTime","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.chrono.IsoChronology","short_doc":"implements java.io.Serializable\n\nThe ISO calendar system. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.time.chrono.AbstractChronology"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.time.chrono.AbstractChronology' rel='java.time.chrono.AbstractChronology' class='docClass'>java.time.chrono.AbstractChronology</a><div class='subclass '><strong>java.time.chrono.IsoChronology</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/IsoChronology.html#java-time-chrono-IsoChronology' target='_blank'>IsoChronology.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p>The ISO calendar system.\n <p>\n This chronology defines the rules of the ISO calendar system.\n This calendar system is based on the ISO-8601 standard, which is the\n <i>de facto</i> world calendar.\n <p>\n The fields are defined as follows:\n <ul>\n <li>era - There are two eras, 'Current Era' (CE) and 'Before Current Era' (BCE).\n <li>year-of-era - The year-of-era is the same as the proleptic-year for the current CE era.\n  For the BCE era before the ISO epoch the year increases from 1 upwards as time goes backwards.\n <li>proleptic-year - The proleptic year is the same as the year-of-era for the\n  current era. For the previous era, years have zero, then negative values.\n <li>month-of-year - There are 12 months in an ISO year, numbered from 1 to 12.\n <li>day-of-month - There are between 28 and 31 days in each of the ISO month, numbered from 1 to 31.\n  Months 4, 6, 9 and 11 have 30 days, Months 1, 3, 5, 7, 8, 10 and 12 have 31 days.\n  Month 2 has 28 days, or 29 in a leap year.\n <li>day-of-year - There are 365 days in a standard ISO year and 366 in a leap year.\n  The days are numbered from 1 to 365 or 1 to 366.\n <li>leap-year - Leap years occur every 4 years, except where the year is divisble by 100 and not divisble by 400.\n </li></li></li></li></li></li></li></ul></p>\n\n<p> @implSpec\n This class is immutable and thread-safe.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-INSTANCE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-property-INSTANCE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-property-INSTANCE' class='name expandable'>INSTANCE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Singleton instance of the ISO chronology. ...</div><div class='long'><p>Singleton instance of the ISO chronology.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-compareTo' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.time.chrono.AbstractChronology' rel='java.time.chrono.AbstractChronology' class='defined-in docClass'>java.time.chrono.AbstractChronology</a><br/><a href='source/AbstractChronology.html#java-time-chrono-AbstractChronology-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.AbstractChronology-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>other, other</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this chronology to another chronology. ...</div><div class='long'><p>Compares this chronology to another chronology.\n <p>\n The comparison order first by the chronology ID string, then by any\n additional information specific to the subclass.\n It is \"consistent with equals\", as defined by Comparable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {Chronology}<div class='sub-desc'><p>the other chronology to compare to, not null</p>\n</div></li><li><span class='pre'>other</span> : Object<div class='sub-desc'><p>the other chronology to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul></div></div></div><div id='method-date' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-date' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-date' class='name expandable'>date</a>( <span class='pre'>temporal</span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an ISO local date from another date-time object. ...</div><div class='long'><p>Obtains an ISO local date from another date-time object.\n <p>\n This is equivalent to LocalDate.from(TemporalAccessor).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the date-time object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the ISO local date, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date</p>\n</div></li></ul></div></div></div><div id='method-dateEpochDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-dateEpochDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-dateEpochDay' class='name expandable'>dateEpochDay</a>( <span class='pre'>epochDay</span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an ISO local date from the epoch-day. ...</div><div class='long'><p>Obtains an ISO local date from the epoch-day.\n <p>\n This is equivalent to LocalDate.ofEpochDay(long).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>epochDay</span> : Number<div class='sub-desc'><p>the epoch day</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the ISO local date, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date</p>\n</div></li></ul></div></div></div><div id='method-dateNow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-dateNow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-dateNow' class='name expandable'>dateNow</a>( <span class='pre'>clock</span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains the current ISO local date from the specified clock. ...</div><div class='long'><p>Obtains the current ISO local date from the specified clock.\n <p>\n This will query the specified clock to obtain the current date - today.\n Using this method allows the use of an alternate clock for testing.\n The alternate clock may be introduced using dependency injection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clock</span> : Object {Clock}<div class='sub-desc'><p>the clock to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the current ISO local date, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date</p>\n</div></li></ul></div></div></div><div id='method-dateYearDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-dateYearDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-dateYearDay' class='name expandable'>dateYearDay</a>( <span class='pre'>prolepticYear, dayOfYear</span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an ISO local date from the proleptic-year and day-of-year fields. ...</div><div class='long'><p>Obtains an ISO local date from the proleptic-year and day-of-year fields.\n <p>\n This is equivalent to int).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prolepticYear</span> : Number<div class='sub-desc'><p>the ISO proleptic-year</p>\n</div></li><li><span class='pre'>dayOfYear</span> : Number<div class='sub-desc'><p>the ISO day-of-year</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the ISO local date, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.time.chrono.AbstractChronology' rel='java.time.chrono.AbstractChronology' class='defined-in docClass'>java.time.chrono.AbstractChronology</a><br/><a href='source/AbstractChronology.html#java-time-chrono-AbstractChronology-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.AbstractChronology-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj, obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this chronology is equal to another chronology. ...</div><div class='long'><p>Checks if this chronology is equal to another chronology.\n <p>\n The comparison is based on the entire state of the object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li><li><span class='pre'>obj</span> : Object<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other chronology</p>\n</div></li></ul></div></div></div><div id='method-eraOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-eraOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-eraOf' class='name expandable'>eraOf</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-eras' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-eras' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-eras' class='name expandable'>eras</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getCalendarType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-getCalendarType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-getCalendarType' class='name expandable'>getCalendarType</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the calendar type of the underlying calendar system - 'iso8601'. ...</div><div class='long'><p>Gets the calendar type of the underlying calendar system - 'iso8601'.\n <p>\n The calendar type is an identifier defined by the\n <em>Unicode Locale Data Markup Language (LDML)</em> specification.\n It can be used to lookup the {@code Chronology} using java.time.chrono.Chronology.of(String).\n It can also be used as part of a locale, accessible via\n Locale.getUnicodeLocaleType(String) with the key 'ca'.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the calendar system type - 'iso8601'\n@see <a href=\"#!/api/java.time.chrono.IsoChronology-method-getId\" rel=\"java.time.chrono.IsoChronology-method-getId\" class=\"docClass\">getId</a>()</p>\n</div></li></ul></div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the ID of the chronology - 'ISO'. ...</div><div class='long'><p>Gets the ID of the chronology - 'ISO'.\n <p>\n The ID uniquely identifies the {@code Chronology}.\n It can be used to lookup the {@code Chronology} using java.time.chrono.Chronology.of(String).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the chronology ID - 'ISO'\n@see <a href=\"#!/api/java.time.chrono.IsoChronology-method-getCalendarType\" rel=\"java.time.chrono.IsoChronology-method-getCalendarType\" class=\"docClass\">getCalendarType</a>()</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.time.chrono.AbstractChronology' rel='java.time.chrono.AbstractChronology' class='defined-in docClass'>java.time.chrono.AbstractChronology</a><br/><a href='source/AbstractChronology.html#java-time-chrono-AbstractChronology-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.AbstractChronology-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this chronology. ...</div><div class='long'><p>A hash code for this chronology.\n <p>\n The hash code should be based on the entire state of the object.\n@implSpec This implementation is based on the chronology ID and class.\n Subclasses should add any additional state that they store.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isLeapYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-isLeapYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-isLeapYear' class='name expandable'>isLeapYear</a>( <span class='pre'>prolepticYear</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the year is a leap year, according to the ISO proleptic\n calendar system rules. ...</div><div class='long'><p>Checks if the year is a leap year, according to the ISO proleptic\n calendar system rules.\n <p>\n This method applies the current rules for leap years across the whole time-line.\n In general, a year is a leap year if it is divisible by four without\n remainder. However, years divisible by 100, are not leap years, with\n the exception of years divisible by 400 which are.\n <p>\n For example, 1904 is a leap year it is divisible by 4.\n 1900 was not a leap year as it is divisible by 100, however 2000 was a\n leap year as it is divisible by 400.\n <p>\n The calculation is proleptic - applying the same rules into the far future and far past.\n This is historically inaccurate, but is correct for the ISO-8601 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prolepticYear</span> : Number<div class='sub-desc'><p>the ISO proleptic year to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the year is leap, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-localDateTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-localDateTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-localDateTime' class='name expandable'>localDateTime</a>( <span class='pre'>temporal</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an ISO local date-time from another date-time object. ...</div><div class='long'><p>Obtains an ISO local date-time from another date-time object.\n <p>\n This is equivalent to LocalDateTime.from(TemporalAccessor).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the date-time object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the ISO local date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date-time</p>\n</div></li></ul></div></div></div><div id='method-period' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-period' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-period' class='name expandable'>period</a>( <span class='pre'>years, months, days</span> ) : Object {java.time.Period}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a period for this chronology based on years, months and days. ...</div><div class='long'><p>Obtains a period for this chronology based on years, months and days.\n <p>\n This returns a period tied to the ISO chronology using the specified\n years, months and days. See Period for further details.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>years</span> : Number<div class='sub-desc'><p>the number of years, may be negative</p>\n</div></li><li><span class='pre'>months</span> : Number<div class='sub-desc'><p>the number of years, may be negative</p>\n</div></li><li><span class='pre'>days</span> : Number<div class='sub-desc'><p>the number of years, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Period}</span><div class='sub-desc'><p>the period in terms of this chronology, not null</p>\n</div></li></ul></div></div></div><div id='method-prolepticYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-prolepticYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-prolepticYear' class='name expandable'>prolepticYear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-range' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-range' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-range' class='name expandable'>range</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-resolveDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-resolveDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-resolveDate' class='name expandable'>resolveDate</a>( <span class='pre'>fieldValues, resolverStyle</span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Resolves parsed {@code ChronoField} values into a date during parsing. ...</div><div class='long'><p>Resolves parsed {@code ChronoField} values into a date during parsing.\n <p>\n Most {@code TemporalField} implementations are resolved using the\n resolve method on the field. By contrast, the {@code ChronoField} class\n defines fields that only have meaning relative to the chronology.\n As such, {@code ChronoField} date fields are resolved here in the\n context of a specific chronology.\n <p>\n {@code ChronoField} instances on the ISO calendar system are resolved\n as follows.\n <ul>\n <li>{@code EPOCH_DAY} - If present, this is converted to a {@code LocalDate}\n  and all other date fields are then cross-checked against the date.\n <li>{@code PROLEPTIC_MONTH} - If present, then it is split into the\n  {@code YEAR} and {@code MONTH_OF_YEAR}. If the mode is strict or smart\n  then the field is validated.\n <li>{@code YEAR_OF_ERA} and {@code ERA} - If both are present, then they\n  are combined to form a {@code YEAR}. In lenient mode, the {@code YEAR_OF_ERA}\n  range is not validated, in smart and strict mode it is. The {@code ERA} is\n  validated for range in all three modes. If only the {@code YEAR_OF_ERA} is\n  present, and the mode is smart or lenient, then the current era (CE/AD)\n  is assumed. In strict mode, no era is assumed and the {@code YEAR_OF_ERA} is\n  left untouched. If only the {@code ERA} is present, then it is left untouched.\n <li>{@code YEAR}, {@code MONTH_OF_YEAR} and {@code DAY_OF_MONTH} -\n  If all three are present, then they are combined to form a {@code LocalDate}.\n  In all three modes, the {@code YEAR} is validated. If the mode is smart or strict,\n  then the month and day are validated, with the day validated from 1 to 31.\n  If the mode is lenient, then the date is combined in a manner equivalent to\n  creating a date on the first of January in the requested year, then adding\n  the difference in months, then the difference in days.\n  If the mode is smart, and the day-of-month is greater than the maximum for\n  the year-month, then the day-of-month is adjusted to the last day-of-month.\n  If the mode is strict, then the three fields must form a valid date.\n <li>{@code YEAR} and {@code DAY_OF_YEAR} -\n  If both are present, then they are combined to form a {@code LocalDate}.\n  In all three modes, the {@code YEAR} is validated.\n  If the mode is lenient, then the date is combined in a manner equivalent to\n  creating a date on the first of January in the requested year, then adding\n  the difference in days.\n  If the mode is smart or strict, then the two fields must form a valid date.\n <li>{@code YEAR}, {@code MONTH_OF_YEAR}, {@code ALIGNED_WEEK_OF_MONTH} and\n  {@code ALIGNED_DAY_OF_WEEK_IN_MONTH} -\n  If all four are present, then they are combined to form a {@code LocalDate}.\n  In all three modes, the {@code YEAR} is validated.\n  If the mode is lenient, then the date is combined in a manner equivalent to\n  creating a date on the first of January in the requested year, then adding\n  the difference in months, then the difference in weeks, then in days.\n  If the mode is smart or strict, then the all four fields are validated to\n  their outer ranges. The date is then combined in a manner equivalent to\n  creating a date on the first day of the requested year and month, then adding\n  the amount in weeks and days to reach their values. If the mode is strict,\n  the date is additionally validated to check that the day and week adjustment\n  did not change the month.\n <li>{@code YEAR}, {@code MONTH_OF_YEAR}, {@code ALIGNED_WEEK_OF_MONTH} and\n  {@code DAY_OF_WEEK} - If all four are present, then they are combined to\n  form a {@code LocalDate}. The approach is the same as described above for\n  years, months and weeks in {@code ALIGNED_DAY_OF_WEEK_IN_MONTH}.\n  The day-of-week is adjusted as the next or same matching day-of-week once\n  the years, months and weeks have been handled.\n <li>{@code YEAR}, {@code ALIGNED_WEEK_OF_YEAR} and {@code ALIGNED_DAY_OF_WEEK_IN_YEAR} -\n  If all three are present, then they are combined to form a {@code LocalDate}.\n  In all three modes, the {@code YEAR} is validated.\n  If the mode is lenient, then the date is combined in a manner equivalent to\n  creating a date on the first of January in the requested year, then adding\n  the difference in weeks, then in days.\n  If the mode is smart or strict, then the all three fields are validated to\n  their outer ranges. The date is then combined in a manner equivalent to\n  creating a date on the first day of the requested year, then adding\n  the amount in weeks and days to reach their values. If the mode is strict,\n  the date is additionally validated to check that the day and week adjustment\n  did not change the year.\n <li>{@code YEAR}, {@code ALIGNED_WEEK_OF_YEAR} and {@code DAY_OF_WEEK} -\n  If all three are present, then they are combined to form a {@code LocalDate}.\n  The approach is the same as described above for years and weeks in\n  {@code ALIGNED_DAY_OF_WEEK_IN_YEAR}. The day-of-week is adjusted as the\n  next or same matching day-of-week once the years and weeks have been handled.\n </li></li></li></li></li></li></li></li></li></ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldValues</span> : Object {java.util.Map}<div class='sub-desc'><p>the map of fields to values, which can be updated, not null</p>\n</div></li><li><span class='pre'>resolverStyle</span> : Object {ResolverStyle}<div class='sub-desc'><p>the requested type of resolve, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the resolved date, null if insufficient information to create a date</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the date cannot be resolved, typically\n  because of a conflict in the input data</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.time.chrono.AbstractChronology-method-resolveDate\" rel=\"java.time.chrono.AbstractChronology-method-resolveDate\" class=\"docClass\">java.time.chrono.AbstractChronology.resolveDate</a></p></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.time.chrono.AbstractChronology' rel='java.time.chrono.AbstractChronology' class='defined-in docClass'>java.time.chrono.AbstractChronology</a><br/><a href='source/AbstractChronology.html#java-time-chrono-AbstractChronology-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.AbstractChronology-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this chronology as a {@code String}, using the chronology ID. ...</div><div class='long'><p>Outputs this chronology as a {@code String}, using the chronology ID.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this chronology, not null</p>\n</div></li></ul></div></div></div><div id='method-zonedDateTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.IsoChronology'>java.time.chrono.IsoChronology</span><br/><a href='source/IsoChronology.html#java-time-chrono-IsoChronology-method-zonedDateTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.IsoChronology-method-zonedDateTime' class='name expandable'>zonedDateTime</a>( <span class='pre'>instant, zone</span> ) : Object {java.time.ZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an ISO zoned date-time in this chronology from an {@code Instant}. ...</div><div class='long'><p>Obtains an ISO zoned date-time in this chronology from an {@code Instant}.\n <p>\n This is equivalent to ZoneId).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instant</span> : Object {Instant}<div class='sub-desc'><p>the instant to create the date-time from, not null</p>\n</div></li><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZonedDateTime}</span><div class='sub-desc'><p>the zoned date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});