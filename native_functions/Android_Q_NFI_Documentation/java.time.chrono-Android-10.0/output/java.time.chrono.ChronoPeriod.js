Ext.data.JsonP.java_time_chrono_ChronoPeriod({"tagname":"class","name":"java.time.chrono.ChronoPeriod","autodetected":{},"files":[{"filename":"ChronoPeriod.js","href":"ChronoPeriod.html#java-time-chrono-ChronoPeriod"}],"since":"1.8","members":[{"name":"addTo","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-addTo","meta":{}},{"name":"between","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-between","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-equals","meta":{}},{"name":"get","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-get","meta":{}},{"name":"getChronology","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-getChronology","meta":{}},{"name":"getUnits","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-getUnits","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-hashCode","meta":{}},{"name":"isNegative","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-isNegative","meta":{}},{"name":"isZero","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-isZero","meta":{}},{"name":"minus","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-minus","meta":{}},{"name":"multipliedBy","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-multipliedBy","meta":{}},{"name":"negated","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-negated","meta":{}},{"name":"normalized","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-normalized","meta":{}},{"name":"plus","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-plus","meta":{}},{"name":"subtractFrom","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-subtractFrom","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.chrono.ChronoPeriod","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.chrono.ChronoPeriod","short_doc":"implements java.time.temporal.TemporalAmount\n\n A date-based amount of time, such as '3 years, 4 months and 5 days' in...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod' target='_blank'>ChronoPeriod.js</a></div></pre><div class='doc-contents'><p>implements java.time.temporal.TemporalAmount</p>\n\n<p> A date-based amount of time, such as '3 years, 4 months and 5 days' in an\n arbitrary chronology, intended for advanced globalization use cases.\n <p>\n This interface models a date-based amount of time in a calendar system.\n While most calendar systems use years, months and days, some do not.\n Therefore, this interface operates solely in terms of a set of supported\n units that are defined by the {@code Chronology}.\n The set of supported units is fixed for a given chronology.\n The amount of a supported unit may be set to zero.\n <p>\n The period is modeled as a directed amount of time, meaning that individual\n parts of the period may be negative.</p>\n\n<p> @implSpec\n This interface must be implemented with care to ensure other classes operate correctly.\n All implementations that can be instantiated must be final, immutable and thread-safe.\n Subclasses should be Serializable wherever possible.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addTo' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-addTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-addTo' class='name expandable'>addTo</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds this period to the specified temporal object. ...</div><div class='long'><p>Adds this period to the specified temporal object.\n <p>\n This returns a temporal object of the same observable type as the input\n with this period added.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.plus(TemporalAmount).</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   dateTime = thisPeriod.addTo(dateTime);\n   dateTime = dateTime.plus(thisPeriod);\n </pre>\n\n\n<p> <p>\n The specified temporal must have the same chronology as this period.\n This returns a temporal with the non-zero supported units added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the temporal object to adjust, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>an object of the same type with the adjustment made, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to add</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-between' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-between' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-between' class='name expandable'>between</a>( <span class='pre'>startDateInclusive, endDateExclusive</span> ) : Object {java.time.chrono.ChronoPeriod}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code ChronoPeriod} consisting of amount of time between two dates. ...</div><div class='long'><p>Obtains a {@code ChronoPeriod} consisting of amount of time between two dates.\n <p>\n The start date is included, but the end date is not.\n The period is calculated using java.time.chrono.ChronoLocalDate.until(java.time.chrono.ChronoLocalDate).\n As such, the calculation is chronology specific.\n <p>\n The chronology of the first date is used.\n The chronology of the second date is ignored, with the date being converted\n to the target chronology system before the calculation starts.\n <p>\n The result of this method can be a negative period if the end is before the start.\n In most cases, the positive/negative sign will be the same in each of the supported fields.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startDateInclusive</span> : Object {ChronoLocalDate}<div class='sub-desc'><p>the start date, inclusive, specifying the chronology of the calculation, not null</p>\n</div></li><li><span class='pre'>endDateExclusive</span> : Object {ChronoLocalDate}<div class='sub-desc'><p>the end date, exclusive, in any chronology, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoPeriod}</span><div class='sub-desc'><p>the period between this date and the end date, not null\n@see ChronoLocalDate#until(ChronoLocalDate)</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this period is equal to another period, including the chronology. ...</div><div class='long'><p>Checks if this period is equal to another period, including the chronology.\n <p>\n Compares this period with another ensuring that the type, each amount and\n the chronology are the same.\n Note that this means that a period of \"15 Months\" is not equal to a period\n of \"1 Year and 3 Months\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other period</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-get' class='name expandable'>get</a>( <span class='pre'>unit</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the requested unit. ...</div><div class='long'><p>Gets the value of the requested unit.\n <p>\n The supported units are chronology specific.\n They will typically be YEARS,\n MONTHS and DAYS.\n Requesting an unsupported unit will throw an exception.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the {@code TemporalUnit} for which to return the value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the long value of the unit</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li></ul></div></div></div><div id='method-getChronology' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-getChronology' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-getChronology' class='name expandable'>getChronology</a>( <span class='pre'></span> ) : Object {java.time.chrono.Chronology}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the chronology that defines the meaning of the supported units. ...</div><div class='long'><p>Gets the chronology that defines the meaning of the supported units.\n <p>\n The period is defined by the chronology.\n It controls the supported units and restricts addition/subtraction\n to {@code ChronoLocalDate} instances of the same chronology.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.Chronology}</span><div class='sub-desc'><p>the chronology defining the period, not null</p>\n</div></li></ul></div></div></div><div id='method-getUnits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-getUnits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-getUnits' class='name expandable'>getUnits</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the set of units supported by this period. ...</div><div class='long'><p>Gets the set of units supported by this period.\n <p>\n The supported units are chronology specific.\n They will typically be YEARS,\n MONTHS and DAYS.\n They are returned in order from largest to smallest.\n <p>\n This set can be used in conjunction with <a href=\"#!/api/java.time.chrono.ChronoPeriod-method-get\" rel=\"java.time.chrono.ChronoPeriod-method-get\" class=\"docClass\">get</a>(TemporalUnit)\n to access the entire state of the period.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a list containing the supported units, not null</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this period. ...</div><div class='long'><p>A hash code for this period.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isNegative' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-isNegative' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-isNegative' class='name expandable'>isNegative</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if any of the supported units of this period are negative. ...</div><div class='long'><p>Checks if any of the supported units of this period are negative.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if any unit of this period is negative</p>\n</div></li></ul></div></div></div><div id='method-isZero' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-isZero' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-isZero' class='name expandable'>isZero</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if all the supported units of this period are zero. ...</div><div class='long'><p>Checks if all the supported units of this period are zero.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this period is zero-length</p>\n</div></li></ul></div></div></div><div id='method-minus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-minus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-minus' class='name expandable'>minus</a>( <span class='pre'>amountToSubtract</span> ) : Object {java.time.chrono.ChronoPeriod}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this period with the specified period subtracted. ...</div><div class='long'><p>Returns a copy of this period with the specified period subtracted.\n <p>\n If the specified amount is a {@code ChronoPeriod} then it must have\n the same chronology as this period. Implementations may choose to\n accept or reject other {@code TemporalAmount} implementations.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToSubtract</span> : Object {TemporalAmount}<div class='sub-desc'><p>the period to subtract, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoPeriod}</span><div class='sub-desc'><p>a {@code ChronoPeriod} based on this period with the requested period subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-multipliedBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-multipliedBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-multipliedBy' class='name expandable'>multipliedBy</a>( <span class='pre'>scalar</span> ) : Object {java.time.chrono.ChronoPeriod}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new instance with each amount in this period in this period\n multiplied by the specified scalar. ...</div><div class='long'><p>Returns a new instance with each amount in this period in this period\n multiplied by the specified scalar.\n <p>\n This returns a period with each supported unit individually multiplied.\n For example, a period of \"2 years, -3 months and 4 days\" multiplied by\n 3 will return \"6 years, -9 months and 12 days\".\n No normalization is performed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>scalar</span> : Number<div class='sub-desc'><p>the scalar to multiply by, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoPeriod}</span><div class='sub-desc'><p>a {@code ChronoPeriod} based on this period with the amounts multiplied\n  by the scalar, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-negated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-negated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-negated' class='name expandable'>negated</a>( <span class='pre'></span> ) : Object {java.time.chrono.ChronoPeriod}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new instance with each amount in this period negated. ...</div><div class='long'><p>Returns a new instance with each amount in this period negated.\n <p>\n This returns a period with each supported unit individually negated.\n For example, a period of \"2 years, -3 months and 4 days\" will be\n negated to \"-2 years, 3 months and -4 days\".\n No normalization is performed.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoPeriod}</span><div class='sub-desc'><p>a {@code ChronoPeriod} based on this period with the amounts negated, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs, which only happens if\n  one of the units has the value {@code Long.MIN_VALUE}</p>\n</div></li></ul></div></div></div><div id='method-normalized' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-normalized' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-normalized' class='name expandable'>normalized</a>( <span class='pre'></span> ) : Object {java.time.chrono.ChronoPeriod}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this period with the amounts of each unit normalized. ...</div><div class='long'><p>Returns a copy of this period with the amounts of each unit normalized.\n <p>\n The process of normalization is specific to each calendar system.\n For example, in the ISO calendar system, the years and months are\n normalized but the days are not, such that \"15 months\" would be\n normalized to \"1 year and 3 months\".\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoPeriod}</span><div class='sub-desc'><p>a {@code ChronoPeriod} based on this period with the amounts of each\n  unit normalized, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-plus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-plus' class='name expandable'>plus</a>( <span class='pre'>amountToAdd</span> ) : Object {java.time.chrono.ChronoPeriod}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this period with the specified period added. ...</div><div class='long'><p>Returns a copy of this period with the specified period added.\n <p>\n If the specified amount is a {@code ChronoPeriod} then it must have\n the same chronology as this period. Implementations may choose to\n accept or reject other {@code TemporalAmount} implementations.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToAdd</span> : Object {TemporalAmount}<div class='sub-desc'><p>the period to add, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoPeriod}</span><div class='sub-desc'><p>a {@code ChronoPeriod} based on this period with the requested period added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-subtractFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-subtractFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-subtractFrom' class='name expandable'>subtractFrom</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Subtracts this period from the specified temporal object. ...</div><div class='long'><p>Subtracts this period from the specified temporal object.\n <p>\n This returns a temporal object of the same observable type as the input\n with this period subtracted.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.minus(TemporalAmount).</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   dateTime = thisPeriod.subtractFrom(dateTime);\n   dateTime = dateTime.minus(thisPeriod);\n </pre>\n\n\n<p> <p>\n The specified temporal must have the same chronology as this period.\n This returns a temporal with the non-zero supported units subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the temporal object to adjust, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>an object of the same type with the adjustment made, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to subtract</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoPeriod'>java.time.chrono.ChronoPeriod</span><br/><a href='source/ChronoPeriod.html#java-time-chrono-ChronoPeriod-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoPeriod-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this period as a {@code String}. ...</div><div class='long'><p>Outputs this period as a {@code String}.\n <p>\n The output will include the period amounts and chronology.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this period, not null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});