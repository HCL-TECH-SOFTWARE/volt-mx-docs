Ext.data.JsonP.java_time_chrono_Chronology({"tagname":"class","name":"java.time.chrono.Chronology","autodetected":{},"files":[{"filename":"Chronology.js","href":"Chronology.html#java-time-chrono-Chronology"}],"since":"1.8","members":[{"name":"compareTo","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-compareTo","meta":{}},{"name":"date","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-date","meta":{}},{"name":"dateEpochDay","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-dateEpochDay","meta":{}},{"name":"dateNow","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-dateNow","meta":{}},{"name":"dateYearDay","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-dateYearDay","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-equals","meta":{}},{"name":"eraOf","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-eraOf","meta":{}},{"name":"eras","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-eras","meta":{}},{"name":"from","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-from","meta":{}},{"name":"getAvailableChronologies","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-getAvailableChronologies","meta":{}},{"name":"getCalendarType","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-getCalendarType","meta":{}},{"name":"getDisplayName","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-getDisplayName","meta":{}},{"name":"getId","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-getId","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-hashCode","meta":{}},{"name":"isLeapYear","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-isLeapYear","meta":{}},{"name":"localDateTime","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-localDateTime","meta":{}},{"name":"of","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-of","meta":{}},{"name":"ofLocale","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-ofLocale","meta":{}},{"name":"period","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-period","meta":{}},{"name":"prolepticYear","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-prolepticYear","meta":{}},{"name":"range","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-range","meta":{}},{"name":"resolveDate","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-resolveDate","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-toString","meta":{}},{"name":"zonedDateTime","tagname":"method","owner":"java.time.chrono.Chronology","id":"method-zonedDateTime","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.chrono.Chronology","short_doc":"implements java.lang.Comparable\n\n A calendar system, used to organize and identify dates. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Chronology.html#java-time-chrono-Chronology' target='_blank'>Chronology.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Comparable</p>\n\n<p> A calendar system, used to organize and identify dates.\n <p>\n The main date and time API is built on the ISO calendar system.\n The chronology operates behind the scenes to represent the general concept of a calendar system.\n For example, the Japanese, Minguo, Thai Buddhist and others.\n <p>\n Most other calendar systems also operate on the shared concepts of year, month and day,\n linked to the cycles of the Earth around the Sun, and the Moon around the Earth.\n These shared concepts are defined by ChronoField and are available\n for use by any {@code Chronology} implementation:</p>\n\n<pre>   LocalDate isoDate = ...\n   ThaiBuddhistDate thaiDate = ...\n   int isoYear = isoDate.get(ChronoField.YEAR);\n   int thaiYear = thaiDate.get(ChronoField.YEAR);\n </pre>\n\n\n<p> As shown, although the date objects are in different calendar systems, represented by different\n {@code Chronology} instances, both can be queried using the same constant on {@code ChronoField}.\n For a full discussion of the implications of this, see <a href=\"#!/api/java.time.chrono.ChronoLocalDate\" rel=\"java.time.chrono.ChronoLocalDate\" class=\"docClass\">java.time.chrono.ChronoLocalDate</a>.\n In general, the advice is to use the known ISO-based {@code LocalDate}, rather than\n {@code ChronoLocalDate}.\n <p>\n While a {@code Chronology} object typically uses {@code ChronoField} and is based on\n an era, year-of-era, month-of-year, day-of-month model of a date, this is not required.\n A {@code Chronology} instance may represent a totally different kind of calendar system,\n such as the Mayan.\n <p>\n In practical terms, the {@code Chronology} instance also acts as a factory.\n The <a href=\"#!/api/java.time.chrono.Chronology-method-of\" rel=\"java.time.chrono.Chronology-method-of\" class=\"docClass\">of</a>(String) method allows an instance to be looked up by identifier,\n while the <a href=\"#!/api/java.time.chrono.Chronology-method-ofLocale\" rel=\"java.time.chrono.Chronology-method-ofLocale\" class=\"docClass\">ofLocale</a>(Locale) method allows lookup by locale.\n <p>\n The {@code Chronology} instance provides a set of methods to create {@code ChronoLocalDate} instances.\n The date classes are used to manipulate specific dates.\n <ul>\n <li> dateNow()\n <li> dateNow(clock)\n <li> dateNow(zone)\n <li> int, int) date(yearProleptic, month, day)\n <li> int, int, int) date(era, yearOfEra, month, day)\n <li> int) dateYearDay(yearProleptic, dayOfYear)\n <li> int, int) dateYearDay(era, yearOfEra, dayOfYear)\n <li> date(TemporalAccessor)\n </li></li></li></li></li></li></li></li></ul></p>\n\n<p> <h3 id=\"addcalendars\">Adding New Calendars</h3>\n The set of available chronologies can be extended by applications.\n Adding a new calendar system requires the writing of an implementation of\n {@code Chronology}, {@code ChronoLocalDate} and {@code Era}.\n The majority of the logic specific to the calendar system will be in the\n {@code ChronoLocalDate} implementation.\n The {@code Chronology} implementation acts as a factory.\n <p>\n To permit the discovery of additional chronologies, the ServiceLoader\n is used. A file must be added to the {@code META-INF/services} directory with the\n name '<a href=\"#!/api/java.time.chrono.Chronology\" rel=\"java.time.chrono.Chronology\" class=\"docClass\">java.time.chrono.Chronology</a>' listing the implementation classes.\n See the ServiceLoader for more details on service loading.\n For lookup by id or calendarType, the system provided calendars are found\n first followed by application provided calendars.\n <p>\n Each chronology must define a chronology ID that is unique within the system.\n If the chronology represents a calendar system defined by the\n CLDR specification then the calendar type is the concatenation of the\n CLDR type and, if applicable, the CLDR variant,</p>\n\n<p> @implSpec\n This interface must be implemented with care to ensure other classes operate correctly.\n All implementations that can be instantiated must be final, immutable and thread-safe.\n Subclasses should be Serializable wherever possible.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-compareTo' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>other</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this chronology to another chronology. ...</div><div class='long'><p>Compares this chronology to another chronology.\n <p>\n The comparison order first by the chronology ID string, then by any\n additional information specific to the subclass.\n It is \"consistent with equals\", as defined by Comparable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {Chronology}<div class='sub-desc'><p>the other chronology to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul></div></div></div><div id='method-date' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-date' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-date' class='name expandable'>date</a>( <span class='pre'>temporal</span> ) : Object {java.time.chrono.ChronoLocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a local date in this chronology from another temporal object. ...</div><div class='long'><p>Obtains a local date in this chronology from another temporal object.\n <p>\n This obtains a date in this chronology based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code ChronoLocalDate}.\n <p>\n The conversion typically uses the EPOCH_DAY\n field, which is standardized across calendar systems.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code aChronology::date}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDate}</span><div class='sub-desc'><p>the local date in this chronology, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date\n@see ChronoLocalDate#from(TemporalAccessor)</p>\n</div></li></ul></div></div></div><div id='method-dateEpochDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-dateEpochDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-dateEpochDay' class='name expandable'>dateEpochDay</a>( <span class='pre'>epochDay</span> ) : Object {java.time.chrono.ChronoLocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a local date in this chronology from the epoch-day. ...</div><div class='long'><p>Obtains a local date in this chronology from the epoch-day.\n <p>\n The definition of EPOCH_DAY is the same\n for all calendar systems, thus it can be used for conversion.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>epochDay</span> : Number<div class='sub-desc'><p>the epoch day</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDate}</span><div class='sub-desc'><p>the local date in this chronology, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date</p>\n</div></li></ul></div></div></div><div id='method-dateNow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-dateNow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-dateNow' class='name expandable'>dateNow</a>( <span class='pre'>clock, clock</span> ) : Object {java.time.chrono.ChronoLocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains the current local date in this chronology from the specified clock. ...</div><div class='long'><p>Obtains the current local date in this chronology from the specified clock.\n <p>\n This will query the specified clock to obtain the current date - today.\n Using this method allows the use of an alternate clock for testing.\n The alternate clock may be introduced using dependency injection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clock</span> : Object {Clock}<div class='sub-desc'><p>the clock to use, not null</p>\n</div></li><li><span class='pre'>clock</span> : Object<div class='sub-desc'><p>the clock to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDate}</span><div class='sub-desc'><p>the current local date, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date</p>\n</div></li></ul></div></div></div><div id='method-dateYearDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-dateYearDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-dateYearDay' class='name expandable'>dateYearDay</a>( <span class='pre'>prolepticYear, dayOfYear</span> ) : Object {java.time.chrono.ChronoLocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a local date in this chronology from the proleptic-year and\n day-of-year fields. ...</div><div class='long'><p>Obtains a local date in this chronology from the proleptic-year and\n day-of-year fields.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prolepticYear</span> : Number<div class='sub-desc'><p>the chronology proleptic-year</p>\n</div></li><li><span class='pre'>dayOfYear</span> : Number<div class='sub-desc'><p>the chronology day-of-year</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDate}</span><div class='sub-desc'><p>the local date in this chronology, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this chronology is equal to another chronology. ...</div><div class='long'><p>Checks if this chronology is equal to another chronology.\n <p>\n The comparison is based on the entire state of the object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other chronology</p>\n</div></li></ul></div></div></div><div id='method-eraOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-eraOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-eraOf' class='name expandable'>eraOf</a>( <span class='pre'>eraValue</span> ) : Object {java.time.chrono.Era}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates the chronology era object from the numeric value. ...</div><div class='long'><p>Creates the chronology era object from the numeric value.\n <p>\n The era is, conceptually, the largest division of the time-line.\n Most calendar systems have a single epoch dividing the time-line into two eras.\n However, some have multiple eras, such as one for the reign of each leader.\n The exact meaning is determined by the chronology according to the following constraints.\n <p>\n The era in use at 1970-01-01 must have the value 1.\n Later eras must have sequentially higher values.\n Earlier eras must have sequentially lower values.\n Each chronology must refer to an enum or similar singleton to provide the era values.\n <p>\n This method returns the singleton era of the correct type for the specified era value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eraValue</span> : Number<div class='sub-desc'><p>the era value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.Era}</span><div class='sub-desc'><p>the calendar system era, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the era</p>\n</div></li></ul></div></div></div><div id='method-eras' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-eras' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-eras' class='name expandable'>eras</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the list of eras for the chronology. ...</div><div class='long'><p>Gets the list of eras for the chronology.\n <p>\n Most calendar systems have an era, within which the year has meaning.\n If the calendar system does not support the concept of eras, an empty\n list must be returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the list of eras for the chronology, may be immutable, not null</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-from' class='name expandable'>from</a>( <span class='pre'>temporal</span> ) : Object {java.time.chrono.Chronology}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code Chronology} from a temporal object. ...</div><div class='long'><p>Obtains an instance of {@code Chronology} from a temporal object.\n <p>\n This obtains a chronology based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code Chronology}.\n <p>\n The conversion will obtain the chronology using TemporalQueries.chronology().\n If the specified temporal object does not have a chronology, <a href=\"#!/api/java.time.chrono.IsoChronology\" rel=\"java.time.chrono.IsoChronology\" class=\"docClass\">java.time.chrono.IsoChronology</a> is returned.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code Chronology::from}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.Chronology}</span><div class='sub-desc'><p>the chronology, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to an {@code Chronology}</p>\n</div></li></ul></div></div></div><div id='method-getAvailableChronologies' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-getAvailableChronologies' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-getAvailableChronologies' class='name expandable'>getAvailableChronologies</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the available chronologies. ...</div><div class='long'><p>Returns the available chronologies.\n <p>\n Each returned {@code Chronology} is available for use in the system.\n The set of chronologies includes the system chronologies and\n any chronologies provided by the application via ServiceLoader\n configuration.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>the independent, modifiable set of the available chronology IDs, not null</p>\n</div></li></ul></div></div></div><div id='method-getCalendarType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-getCalendarType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-getCalendarType' class='name expandable'>getCalendarType</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the calendar type of the calendar system. ...</div><div class='long'><p>Gets the calendar type of the calendar system.\n <p>\n The calendar type is an identifier defined by the CLDR and\n <em>Unicode Locale Data Markup Language (LDML)</em> specifications\n to uniquely identification a calendar.\n The {@code getCalendarType} is the concatenation of the CLDR calendar type\n and the variant, if applicable, is appended separated by \"-\".\n The calendar type is used to lookup the {@code Chronology} using <a href=\"#!/api/java.time.chrono.Chronology-method-of\" rel=\"java.time.chrono.Chronology-method-of\" class=\"docClass\">of</a>(String).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the calendar system type, null if the calendar is not defined by CLDR/LDML\n@see <a href=\"#!/api/java.time.chrono.Chronology-method-getId\" rel=\"java.time.chrono.Chronology-method-getId\" class=\"docClass\">getId</a>()</p>\n</div></li></ul></div></div></div><div id='method-getDisplayName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-getDisplayName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-getDisplayName' class='name expandable'>getDisplayName</a>( <span class='pre'>style, locale, locale</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the textual representation of this chronology. ...</div><div class='long'><p>Gets the textual representation of this chronology.\n <p>\n This returns the textual name used to identify the chronology,\n suitable for presentation to the user.\n The parameters control the style of the returned text and the locale.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>style</span> : Object {TextStyle}<div class='sub-desc'><p>the style of the text required, not null</p>\n</div></li><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the locale to use, not null</p>\n</div></li><li><span class='pre'>locale</span> : Object<div class='sub-desc'><p>the locale to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the text value of the chronology, not null</p>\n</div></li></ul></div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the ID of the chronology. ...</div><div class='long'><p>Gets the ID of the chronology.\n <p>\n The ID uniquely identifies the {@code Chronology}.\n It can be used to lookup the {@code Chronology} using <a href=\"#!/api/java.time.chrono.Chronology-method-of\" rel=\"java.time.chrono.Chronology-method-of\" class=\"docClass\">of</a>(String).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the chronology ID, not null\n@see <a href=\"#!/api/java.time.chrono.Chronology-method-getCalendarType\" rel=\"java.time.chrono.Chronology-method-getCalendarType\" class=\"docClass\">getCalendarType</a>()</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this chronology. ...</div><div class='long'><p>A hash code for this chronology.\n <p>\n The hash code should be based on the entire state of the object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isLeapYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-isLeapYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-isLeapYear' class='name expandable'>isLeapYear</a>( <span class='pre'>prolepticYear</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the specified year is a leap year. ...</div><div class='long'><p>Checks if the specified year is a leap year.\n <p>\n A leap-year is a year of a longer length than normal.\n The exact meaning is determined by the chronology according to the following constraints.\n <ul>\n <li>a leap-year must imply a year-length longer than a non leap-year.\n <li>a chronology that does not support the concept of a year must return false.\n </li></li></ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prolepticYear</span> : Number<div class='sub-desc'><p>the proleptic-year to check, not validated for range</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the year is a leap year</p>\n</div></li></ul></div></div></div><div id='method-localDateTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-localDateTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-localDateTime' class='name expandable'>localDateTime</a>( <span class='pre'>temporal</span> ) : Object {java.time.chrono.ChronoLocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a local date-time in this chronology from another temporal object. ...</div><div class='long'><p>Obtains a local date-time in this chronology from another temporal object.\n <p>\n This obtains a date-time in this chronology based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code ChronoLocalDateTime}.\n <p>\n The conversion extracts and combines the {@code ChronoLocalDate} and the\n {@code LocalTime} from the temporal object.\n Implementations are permitted to perform optimizations such as accessing\n those fields that are equivalent to the relevant objects.\n The result uses this chronology.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code aChronology::localDateTime}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDateTime}</span><div class='sub-desc'><p>the local date-time in this chronology, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to create the date-time\n@see ChronoLocalDateTime#from(TemporalAccessor)</p>\n</div></li></ul></div></div></div><div id='method-of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-of' class='name expandable'>of</a>( <span class='pre'>id</span> ) : Object {java.time.chrono.Chronology}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code Chronology} from a chronology ID or\n calendar system type. ...</div><div class='long'><p>Obtains an instance of {@code Chronology} from a chronology ID or\n calendar system type.\n <p>\n This returns a chronology based on either the ID or the type.\n The chronology ID uniquely identifies the chronology.\n The calendar system type is defined by the\n CLDR specification.\n <p>\n The chronology may be a system chronology or a chronology\n provided by the application via ServiceLoader configuration.\n <p>\n Since some calendars can be customized, the ID or type typically refers\n to the default customization. For example, the Gregorian calendar can have multiple\n cutover dates from the Julian, but the lookup only provides the default cutover date.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>the chronology ID or calendar system type, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.Chronology}</span><div class='sub-desc'><p>the chronology with the identifier requested, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the chronology cannot be found</p>\n</div></li></ul></div></div></div><div id='method-ofLocale' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-ofLocale' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-ofLocale' class='name expandable'>ofLocale</a>( <span class='pre'>locale</span> ) : Object {java.time.chrono.Chronology}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code Chronology} from a locale. ...</div><div class='long'><p>Obtains an instance of {@code Chronology} from a locale.\n <p>\n This returns a {@code Chronology} based on the specified locale,\n typically returning {@code IsoChronology}. Other calendar systems\n are only returned if they are explicitly selected within the locale.\n <p>\n The Locale class provide access to a range of information useful\n for localizing an application. This includes the language and region,\n such as \"en-GB\" for English as used in Great Britain.\n <p>\n The {@code Locale} class also supports an extension mechanism that\n can be used to identify a calendar system. The mechanism is a form\n of key-value pairs, where the calendar system has the key \"ca\".\n For example, the locale \"en-JP-u-ca-japanese\" represents the English\n language as used in Japan with the Japanese calendar system.\n <p>\n This method finds the desired calendar system by in a manner equivalent\n to passing \"ca\" to Locale.getUnicodeLocaleType(String).\n If the \"ca\" key is not present, then {@code IsoChronology} is returned.\n <p>\n Note that the behavior of this method differs from the older\n java.util.Calendar.getInstance(Locale) method.\n If that method receives a locale of \"th_TH\" it will return {@code BuddhistCalendar}.\n By contrast, this method will return {@code IsoChronology}.\n Passing the locale \"th-TH-u-ca-buddhist\" into either method will\n result in the Thai Buddhist calendar system and is therefore the\n recommended approach going forward for Thai calendar system localization.\n <p>\n A similar, but simpler, situation occurs for the Japanese calendar system.\n The locale \"jp_JP_JP\" has previously been used to access the calendar.\n However, unlike the Thai locale, \"ja_JP_JP\" is automatically converted by\n {@code Locale} to the modern and recommended form of \"ja-JP-u-ca-japanese\".\n Thus, there is no difference in behavior between this method and\n {@code Calendar#getInstance(Locale)}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the locale to use to obtain the calendar system, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.Chronology}</span><div class='sub-desc'><p>the calendar system associated with the locale, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the locale-specified calendar cannot be found</p>\n</div></li></ul></div></div></div><div id='method-period' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-period' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-period' class='name expandable'>period</a>( <span class='pre'>years, months, days, days</span> ) : Object {java.time.chrono.ChronoPeriod}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a period for this chronology based on years, months and days. ...</div><div class='long'><p>Obtains a period for this chronology based on years, months and days.\n <p>\n This returns a period tied to this chronology using the specified\n years, months and days.  All supplied chronologies use periods\n based on years, months and days, however the {@code ChronoPeriod} API\n allows the period to be represented using other units.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>years</span> : Number<div class='sub-desc'><p>the number of years, may be negative</p>\n</div></li><li><span class='pre'>months</span> : Number<div class='sub-desc'><p>the number of years, may be negative</p>\n</div></li><li><span class='pre'>days</span> : Number<div class='sub-desc'><p>the number of years, may be negative</p>\n</div></li><li><span class='pre'>days</span> : Object<div class='sub-desc'><p>the number of years, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoPeriod}</span><div class='sub-desc'><p>the period in terms of this chronology, not null</p>\n</div></li></ul></div></div></div><div id='method-prolepticYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-prolepticYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-prolepticYear' class='name expandable'>prolepticYear</a>( <span class='pre'>era, yearOfEra</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the proleptic-year given the era and year-of-era. ...</div><div class='long'><p>Calculates the proleptic-year given the era and year-of-era.\n <p>\n This combines the era and year-of-era into the single proleptic-year field.\n <p>\n If the chronology makes active use of eras, such as {@code JapaneseChronology}\n then the year-of-era will be validated against the era.\n For other chronologies, validation is optional.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>era</span> : Object {Era}<div class='sub-desc'><p>the era of the correct type for the chronology, not null</p>\n</div></li><li><span class='pre'>yearOfEra</span> : Number<div class='sub-desc'><p>the chronology year-of-era</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the proleptic-year</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to a proleptic-year,\n  such as if the year is invalid for the era</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the {@code era} is not of the correct type for the chronology</p>\n</div></li></ul></div></div></div><div id='method-range' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-range' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-range' class='name expandable'>range</a>( <span class='pre'>field</span> ) : Object {java.time.temporal.ValueRange}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the range of valid values for the specified field. ...</div><div class='long'><p>Gets the range of valid values for the specified field.\n <p>\n All fields can be expressed as a {@code long} integer.\n This method returns an object that describes the valid range for that value.\n <p>\n Note that the result only describes the minimum and maximum valid values\n and it is important not to read too much into them. For example, there\n could be values within the range that are invalid for the field.\n <p>\n This method will return a result whether or not the chronology supports the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {ChronoField}<div class='sub-desc'><p>the field to get the range for, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.ValueRange}</span><div class='sub-desc'><p>the range of valid values for the field, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the range for the field cannot be obtained</p>\n</div></li></ul></div></div></div><div id='method-resolveDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-resolveDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-resolveDate' class='name expandable'>resolveDate</a>( <span class='pre'>fieldValues, resolverStyle</span> ) : Object {java.time.chrono.ChronoLocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Resolves parsed {@code ChronoField} values into a date during parsing. ...</div><div class='long'><p>Resolves parsed {@code ChronoField} values into a date during parsing.\n <p>\n Most {@code TemporalField} implementations are resolved using the\n resolve method on the field. By contrast, the {@code ChronoField} class\n defines fields that only have meaning relative to the chronology.\n As such, {@code ChronoField} date fields are resolved here in the\n context of a specific chronology.\n <p>\n The default implementation, which explains typical resolve behaviour,\n is provided in <a href=\"#!/api/java.time.chrono.AbstractChronology\" rel=\"java.time.chrono.AbstractChronology\" class=\"docClass\">java.time.chrono.AbstractChronology</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fieldValues</span> : Object {java.util.Map}<div class='sub-desc'><p>the map of fields to values, which can be updated, not null</p>\n</div></li><li><span class='pre'>resolverStyle</span> : Object {ResolverStyle}<div class='sub-desc'><p>the requested type of resolve, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDate}</span><div class='sub-desc'><p>the resolved date, null if insufficient information to create a date</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the date cannot be resolved, typically\n  because of a conflict in the input data</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this chronology as a {@code String}. ...</div><div class='long'><p>Outputs this chronology as a {@code String}.\n <p>\n The format should include the entire state of the object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this chronology, not null</p>\n</div></li></ul></div></div></div><div id='method-zonedDateTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.Chronology'>java.time.chrono.Chronology</span><br/><a href='source/Chronology.html#java-time-chrono-Chronology-method-zonedDateTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.Chronology-method-zonedDateTime' class='name expandable'>zonedDateTime</a>( <span class='pre'>instant, zone</span> ) : Object {java.time.chrono.ChronoZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code ChronoZonedDateTime} in this chronology from an {@code Instant}. ...</div><div class='long'><p>Obtains a {@code ChronoZonedDateTime} in this chronology from an {@code Instant}.\n <p>\n This obtains a zoned date-time with the same instant as that specified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instant</span> : Object {Instant}<div class='sub-desc'><p>the instant to create the date-time from, not null</p>\n</div></li><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoZonedDateTime}</span><div class='sub-desc'><p>the zoned date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});