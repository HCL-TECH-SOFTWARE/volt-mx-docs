Ext.data.JsonP.java_time_chrono_ChronoZonedDateTime({"tagname":"class","name":"java.time.chrono.ChronoZonedDateTime","autodetected":{},"files":[{"filename":"ChronoZonedDateTime.js","href":"ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime"}],"params":[{"tagname":"params","doc":"<p><D> the concrete type for the date of this date-time</D></p>\n"}],"since":"1.8","members":[{"name":"compareTo","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-compareTo","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-equals","meta":{}},{"name":"format","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-format","meta":{}},{"name":"from","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-from","meta":{}},{"name":"get","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-get","meta":{}},{"name":"getChronology","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-getChronology","meta":{}},{"name":"getLong","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-getLong","meta":{}},{"name":"getOffset","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-getOffset","meta":{}},{"name":"getZone","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-getZone","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-hashCode","meta":{}},{"name":"isAfter","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-isAfter","meta":{}},{"name":"isBefore","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-isBefore","meta":{}},{"name":"isEqual","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-isEqual","meta":{}},{"name":"isSupported","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-isSupported","meta":{}},{"name":"minus","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-minus","meta":{}},{"name":"plus","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-plus","meta":{}},{"name":"query","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-query","meta":{}},{"name":"range","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-range","meta":{}},{"name":"timeLineOrder","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-timeLineOrder","meta":{}},{"name":"toEpochSecond","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-toEpochSecond","meta":{}},{"name":"toInstant","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-toInstant","meta":{}},{"name":"toLocalDate","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-toLocalDate","meta":{}},{"name":"toLocalDateTime","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-toLocalDateTime","meta":{}},{"name":"toLocalTime","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-toLocalTime","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-toString","meta":{}},{"name":"with","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-with","meta":{}},{"name":"withEarlierOffsetAtOverlap","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-withEarlierOffsetAtOverlap","meta":{}},{"name":"withLaterOffsetAtOverlap","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-withLaterOffsetAtOverlap","meta":{}},{"name":"withZoneSameInstant","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-withZoneSameInstant","meta":{}},{"name":"withZoneSameLocal","tagname":"method","owner":"java.time.chrono.ChronoZonedDateTime","id":"method-withZoneSameLocal","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.chrono.ChronoZonedDateTime","short_doc":"implements java.time.temporal.Temporal\n\n implements java.lang.Comparable\n\n A date-time with a time-zone in an arbitra...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime' target='_blank'>ChronoZonedDateTime.js</a></div></pre><div class='doc-contents'><p>implements java.time.temporal.Temporal</p>\n\n<p> implements java.lang.Comparable</p>\n\n<p> A date-time with a time-zone in an arbitrary chronology,\n intended for advanced globalization use cases.\n <p>\n <b>Most applications should declare method signatures, fields and variables\n as ZonedDateTime, not this interface.</b>\n <p>\n A {@code ChronoZonedDateTime} is the abstract representation of an offset date-time\n where the {@code Chronology chronology}, or calendar system, is pluggable.\n The date-time is defined in terms of fields expressed by TemporalField,\n where most common implementations are defined in ChronoField.\n The chronology defines how the calendar system operates and the meaning of\n the standard fields.</p>\n\n<p> <h3>When to use this interface</h3>\n The design of the API encourages the use of {@code ZonedDateTime} rather than this\n interface, even in the case where the application needs to deal with multiple\n calendar systems. The rationale for this is explored in detail in <a href=\"#!/api/java.time.chrono.ChronoLocalDate\" rel=\"java.time.chrono.ChronoLocalDate\" class=\"docClass\">java.time.chrono.ChronoLocalDate</a>.\n <p>\n Ensure that the discussion in {@code ChronoLocalDate} has been read and understood\n before using this interface.</p>\n\n<p> @implSpec\n This interface must be implemented with care to ensure other classes operate correctly.\n All implementations that can be instantiated must be final, immutable and thread-safe.\n Subclasses should be Serializable wherever possible.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><D> the concrete type for the date of this date-time</D></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-compareTo' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>other</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this date-time to another date-time, including the chronology. ...</div><div class='long'><p>Compares this date-time to another date-time, including the chronology.\n <p>\n The comparison is based first on the instant, then on the local date-time,\n then on the zone ID, then on the chronology.\n It is \"consistent with equals\", as defined by Comparable.\n <p>\n If all the date-time objects being compared are in the same chronology, then the\n additional chronology stage is not required.\n <p>\n This default implementation performs the comparison defined above.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoZonedDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this date-time is equal to another date-time. ...</div><div class='long'><p>Checks if this date-time is equal to another date-time.\n <p>\n The comparison is based on the offset date-time and the zone.\n To compare for the same instant on the time-line, use <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-compareTo\" rel=\"java.time.chrono.ChronoZonedDateTime-method-compareTo\" class=\"docClass\">compareTo</a>.\n Only objects of type {@code ChronoZonedDateTime} are compared, other types return false.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other date-time</p>\n</div></li></ul></div></div></div><div id='method-format' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-format' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-format' class='name expandable'>format</a>( <span class='pre'>formatter</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats this date-time using the specified formatter. ...</div><div class='long'><p>Formats this date-time using the specified formatter.\n <p>\n This date-time will be passed to the formatter to produce a string.\n <p>\n The default implementation must behave as follows:</p>\n\n<pre>  return formatter.format(this);\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the formatted date-time string, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if an error occurs during printing</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-from' class='name expandable'>from</a>( <span class='pre'>temporal</span> ) : Object {java.time.chrono.ChronoZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code ChronoZonedDateTime} from a temporal object. ...</div><div class='long'><p>Obtains an instance of {@code ChronoZonedDateTime} from a temporal object.\n <p>\n This creates a zoned date-time based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code ChronoZonedDateTime}.\n <p>\n The conversion extracts and combines the chronology, date, time and zone\n from the temporal object. The behavior is equivalent to using\n java.time.chrono.Chronology.zonedDateTime(TemporalAccessor) with the extracted chronology.\n Implementations are permitted to perform optimizations such as accessing\n those fields that are equivalent to the relevant objects.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code ChronoZonedDateTime::from}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoZonedDateTime}</span><div class='sub-desc'><p>the date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to a {@code ChronoZonedDateTime}\n@see Chronology#zonedDateTime(TemporalAccessor)</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-get' class='name expandable'>get</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getChronology' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-getChronology' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-getChronology' class='name expandable'>getChronology</a>( <span class='pre'></span> ) : Object {java.time.chrono.Chronology}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the chronology of this date-time. ...</div><div class='long'><p>Gets the chronology of this date-time.\n <p>\n The {@code Chronology} represents the calendar system in use.\n The era and other fields in ChronoField are defined by the chronology.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.Chronology}</span><div class='sub-desc'><p>the chronology, not null</p>\n</div></li></ul></div></div></div><div id='method-getLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-getLong' class='name expandable'>getLong</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-getOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-getOffset' class='name expandable'>getOffset</a>( <span class='pre'></span> ) : Object {java.time.ZoneOffset}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the zone offset, such as '+01:00'. ...</div><div class='long'><p>Gets the zone offset, such as '+01:00'.\n <p>\n This is the offset of the local date-time from UTC/Greenwich.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneOffset}</span><div class='sub-desc'><p>the zone offset, not null</p>\n</div></li></ul></div></div></div><div id='method-getZone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-getZone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-getZone' class='name expandable'>getZone</a>( <span class='pre'></span> ) : Object {java.time.ZoneId}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the zone ID, such as 'Europe/Paris'. ...</div><div class='long'><p>Gets the zone ID, such as 'Europe/Paris'.\n <p>\n This returns the stored time-zone id used to determine the time-zone rules.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneId}</span><div class='sub-desc'><p>the zone ID, not null</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this date-time. ...</div><div class='long'><p>A hash code for this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-isAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-isAfter' class='name expandable'>isAfter</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the instant of this date-time is after that of the specified date-time. ...</div><div class='long'><p>Checks if the instant of this date-time is after that of the specified date-time.\n <p>\n This method differs from the comparison in <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-compareTo\" rel=\"java.time.chrono.ChronoZonedDateTime-method-compareTo\" class=\"docClass\">compareTo</a> in that it\n only compares the instant of the date-time. This is equivalent to using\n {@code dateTime1.toInstant().isAfter(dateTime2.toInstant());}.\n <p>\n This default implementation performs the comparison based on the epoch-second\n and nano-of-second.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoZonedDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is after the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-isBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-isBefore' class='name expandable'>isBefore</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the instant of this date-time is before that of the specified date-time. ...</div><div class='long'><p>Checks if the instant of this date-time is before that of the specified date-time.\n <p>\n This method differs from the comparison in <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-compareTo\" rel=\"java.time.chrono.ChronoZonedDateTime-method-compareTo\" class=\"docClass\">compareTo</a> in that it\n only compares the instant of the date-time. This is equivalent to using\n {@code dateTime1.toInstant().isBefore(dateTime2.toInstant());}.\n <p>\n This default implementation performs the comparison based on the epoch-second\n and nano-of-second.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoZonedDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this point is before the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isEqual' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-isEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-isEqual' class='name expandable'>isEqual</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the instant of this date-time is equal to that of the specified date-time. ...</div><div class='long'><p>Checks if the instant of this date-time is equal to that of the specified date-time.\n <p>\n This method differs from the comparison in <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-compareTo\" rel=\"java.time.chrono.ChronoZonedDateTime-method-compareTo\" class=\"docClass\">compareTo</a> and <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-equals\" rel=\"java.time.chrono.ChronoZonedDateTime-method-equals\" class=\"docClass\">equals</a>\n in that it only compares the instant of the date-time. This is equivalent to using\n {@code dateTime1.toInstant().equals(dateTime2.toInstant());}.\n <p>\n This default implementation performs the comparison based on the epoch-second\n and nano-of-second.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoZonedDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the instant equals the instant of the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-isSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-isSupported' class='name expandable'>isSupported</a>( <span class='pre'>unit</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the specified unit is supported. ...</div><div class='long'><p>Checks if the specified unit is supported.\n <p>\n This checks if the specified unit can be added to or subtracted from this date-time.\n If false, then calling the TemporalUnit) and\n TemporalUnit) minus methods will throw an exception.\n <p>\n The set of supported units is defined by the chronology and normally includes\n all {@code ChronoUnit} units except {@code FOREVER}.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.isSupportedBy(Temporal)}\n passing {@code this} as the argument.\n Whether the unit is supported is determined by the unit.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the unit can be added/subtracted, false if not</p>\n</div></li></ul></div></div></div><div id='method-minus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-minus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-minus' class='name expandable'>minus</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-plus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-plus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-plus' class='name expandable'>plus</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-query' class='name expandable'>query</a>( <span class='pre'>query, query</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Queries this date-time using the specified query. ...</div><div class='long'><p>Queries this date-time using the specified query.\n <p>\n This queries this date-time using the specified query strategy object.\n The {@code TemporalQuery} object defines the logic to be used to\n obtain the result. Read the documentation of the query to understand\n what the result of this method will be.\n <p>\n The result of this method is obtained by invoking the\n TemporalQuery.queryFrom(TemporalAccessor) method on the\n specified query passing {@code this} as the argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : Object {java.time.temporal.TemporalQuery}<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li><li><span class='pre'>query</span> : Object<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the query result, null may be returned (defined by the query)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to query (defined by the query)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs (defined by the query)</p>\n</div></li></ul></div></div></div><div id='method-range' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-range' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-range' class='name expandable'>range</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-timeLineOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-timeLineOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-timeLineOrder' class='name expandable'>timeLineOrder</a>( <span class='pre'></span> ) : Object {java.util.Comparator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets a comparator that compares {@code ChronoZonedDateTime} in\n time-line order ignoring the chronology. ...</div><div class='long'><p>Gets a comparator that compares {@code ChronoZonedDateTime} in\n time-line order ignoring the chronology.\n <p>\n This comparator differs from the comparison in <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-compareTo\" rel=\"java.time.chrono.ChronoZonedDateTime-method-compareTo\" class=\"docClass\">compareTo</a> in that it\n only compares the underlying instant and not the chronology.\n This allows dates in different calendar systems to be compared based\n on the position of the date-time on the instant time-line.\n The underlying comparison is equivalent to comparing the epoch-second and nano-of-second.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Comparator}</span><div class='sub-desc'><p>a comparator that compares in time-line order ignoring the chronology\n@see <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-isAfter\" rel=\"java.time.chrono.ChronoZonedDateTime-method-isAfter\" class=\"docClass\">isAfter</a>\n@see <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-isBefore\" rel=\"java.time.chrono.ChronoZonedDateTime-method-isBefore\" class=\"docClass\">isBefore</a>\n@see <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-isEqual\" rel=\"java.time.chrono.ChronoZonedDateTime-method-isEqual\" class=\"docClass\">isEqual</a></p>\n</div></li></ul></div></div></div><div id='method-toEpochSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-toEpochSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-toEpochSecond' class='name expandable'>toEpochSecond</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this date-time to the number of seconds from the epoch\n of 1970-01-01T00:00:00Z. ...</div><div class='long'><p>Converts this date-time to the number of seconds from the epoch\n of 1970-01-01T00:00:00Z.\n <p>\n This uses the {@linkplain <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-toLocalDateTime\" rel=\"java.time.chrono.ChronoZonedDateTime-method-toLocalDateTime\" class=\"docClass\">toLocalDateTime</a>() local date-time} and\n {@linkplain <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-getOffset\" rel=\"java.time.chrono.ChronoZonedDateTime-method-getOffset\" class=\"docClass\">getOffset</a>() offset} to calculate the epoch-second value,\n which is the number of elapsed seconds from 1970-01-01T00:00:00Z.\n Instants on the time-line after the epoch are positive, earlier are negative.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of seconds from the epoch of 1970-01-01T00:00:00Z</p>\n</div></li></ul></div></div></div><div id='method-toInstant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-toInstant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-toInstant' class='name expandable'>toInstant</a>( <span class='pre'></span> ) : Object {java.time.Instant}<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this date-time to an {@code Instant}. ...</div><div class='long'><p>Converts this date-time to an {@code Instant}.\n <p>\n This returns an {@code Instant} representing the same point on the\n time-line as this date-time. The calculation combines the\n {@linkplain <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-toLocalDateTime\" rel=\"java.time.chrono.ChronoZonedDateTime-method-toLocalDateTime\" class=\"docClass\">toLocalDateTime</a>() local date-time} and\n {@linkplain <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-getOffset\" rel=\"java.time.chrono.ChronoZonedDateTime-method-getOffset\" class=\"docClass\">getOffset</a>() offset}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Instant}</span><div class='sub-desc'><p>an {@code Instant} representing the same instant, not null</p>\n</div></li></ul></div></div></div><div id='method-toLocalDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-toLocalDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-toLocalDate' class='name expandable'>toLocalDate</a>( <span class='pre'></span> ) : Object {java.time.chrono.ChronoLocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the local date part of this date-time. ...</div><div class='long'><p>Gets the local date part of this date-time.\n <p>\n This returns a local date with the same year, month and day\n as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDate}</span><div class='sub-desc'><p>the date part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toLocalDateTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-toLocalDateTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-toLocalDateTime' class='name expandable'>toLocalDateTime</a>( <span class='pre'></span> ) : Object {java.time.chrono.ChronoLocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the local date-time part of this date-time. ...</div><div class='long'><p>Gets the local date-time part of this date-time.\n <p>\n This returns a local date with the same year, month and day\n as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoLocalDateTime}</span><div class='sub-desc'><p>the local date-time part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toLocalTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-toLocalTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-toLocalTime' class='name expandable'>toLocalTime</a>( <span class='pre'></span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the local time part of this date-time. ...</div><div class='long'><p>Gets the local time part of this date-time.\n <p>\n This returns a local time with the same hour, minute, second and\n nanosecond as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the time part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this date-time as a {@code String}. ...</div><div class='long'><p>Outputs this date-time as a {@code String}.\n <p>\n The output will include the full zoned date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-with' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-with' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-with' class='name expandable'>with</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-withEarlierOffsetAtOverlap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-withEarlierOffsetAtOverlap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-withEarlierOffsetAtOverlap' class='name expandable'>withEarlierOffsetAtOverlap</a>( <span class='pre'></span> ) : Object {java.time.chrono.ChronoZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time changing the zone offset to the\n earlier of the two valid offsets at a local time-li...</div><div class='long'><p>Returns a copy of this date-time changing the zone offset to the\n earlier of the two valid offsets at a local time-line overlap.\n <p>\n This method only has any effect when the local time-line overlaps, such as\n at an autumn daylight savings cutover. In this scenario, there are two\n valid offsets for the local date-time. Calling this method will return\n a zoned date-time with the earlier of the two selected.\n <p>\n If this method is called when it is not an overlap, {@code this}\n is returned.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoZonedDateTime}</span><div class='sub-desc'><p>a {@code ChronoZonedDateTime} based on this date-time with the earlier offset, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if no rules can be found for the zone</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if no rules are valid for this date-time</p>\n</div></li></ul></div></div></div><div id='method-withLaterOffsetAtOverlap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-withLaterOffsetAtOverlap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-withLaterOffsetAtOverlap' class='name expandable'>withLaterOffsetAtOverlap</a>( <span class='pre'></span> ) : Object {java.time.chrono.ChronoZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time changing the zone offset to the\n later of the two valid offsets at a local time-line...</div><div class='long'><p>Returns a copy of this date-time changing the zone offset to the\n later of the two valid offsets at a local time-line overlap.\n <p>\n This method only has any effect when the local time-line overlaps, such as\n at an autumn daylight savings cutover. In this scenario, there are two\n valid offsets for the local date-time. Calling this method will return\n a zoned date-time with the later of the two selected.\n <p>\n If this method is called when it is not an overlap, {@code this}\n is returned.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoZonedDateTime}</span><div class='sub-desc'><p>a {@code ChronoZonedDateTime} based on this date-time with the later offset, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if no rules can be found for the zone</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if no rules are valid for this date-time</p>\n</div></li></ul></div></div></div><div id='method-withZoneSameInstant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-withZoneSameInstant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-withZoneSameInstant' class='name expandable'>withZoneSameInstant</a>( <span class='pre'>zone</span> ) : Object {java.time.chrono.ChronoZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with a different time-zone,\n retaining the instant. ...</div><div class='long'><p>Returns a copy of this date-time with a different time-zone,\n retaining the instant.\n <p>\n This method changes the time-zone and retains the instant.\n This normally results in a change to the local date-time.\n <p>\n This method is based on retaining the same instant, thus gaps and overlaps\n in the local time-line have no effect on the result.\n <p>\n To change the offset while keeping the local time,\n use <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-withZoneSameLocal\" rel=\"java.time.chrono.ChronoZonedDateTime-method-withZoneSameLocal\" class=\"docClass\">withZoneSameLocal</a>(ZoneId).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone to change to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoZonedDateTime}</span><div class='sub-desc'><p>a {@code ChronoZonedDateTime} based on this date-time with the requested zone, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-withZoneSameLocal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.chrono.ChronoZonedDateTime'>java.time.chrono.ChronoZonedDateTime</span><br/><a href='source/ChronoZonedDateTime.html#java-time-chrono-ChronoZonedDateTime-method-withZoneSameLocal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.chrono.ChronoZonedDateTime-method-withZoneSameLocal' class='name expandable'>withZoneSameLocal</a>( <span class='pre'>zone</span> ) : Object {java.time.chrono.ChronoZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with a different time-zone,\n retaining the local date-time if possible. ...</div><div class='long'><p>Returns a copy of this date-time with a different time-zone,\n retaining the local date-time if possible.\n <p>\n This method changes the time-zone and retains the local date-time.\n The local date-time is only changed if it is invalid for the new zone.\n <p>\n To change the zone and adjust the local date-time,\n use <a href=\"#!/api/java.time.chrono.ChronoZonedDateTime-method-withZoneSameInstant\" rel=\"java.time.chrono.ChronoZonedDateTime-method-withZoneSameInstant\" class=\"docClass\">withZoneSameInstant</a>(ZoneId).\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone to change to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.chrono.ChronoZonedDateTime}</span><div class='sub-desc'><p>a {@code ChronoZonedDateTime} based on this date-time with the requested zone, not null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});