Ext.data.JsonP.android_perftests_utils_ManualBenchmarkState({"tagname":"class","name":"android.perftests.utils.ManualBenchmarkState","autodetected":{},"files":[{"filename":"ManualBenchmarkState.js","href":"ManualBenchmarkState.html#android-perftests-utils-ManualBenchmarkState"}],"extends":"java.lang.Object","members":[{"name":"keepRunning","tagname":"method","owner":"android.perftests.utils.ManualBenchmarkState","id":"method-keepRunning","meta":{}},{"name":"sendFullStatusReport","tagname":"method","owner":"android.perftests.utils.ManualBenchmarkState","id":"method-sendFullStatusReport","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.perftests.utils.ManualBenchmarkState","short_doc":"Provides a benchmark framework. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.perftests.utils.ManualBenchmarkState</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ManualBenchmarkState.html#android-perftests-utils-ManualBenchmarkState' target='_blank'>ManualBenchmarkState.js</a></div></pre><div class='doc-contents'><p>Provides a benchmark framework.</p>\n\n<p> This differs from BenchmarkState in that rather than the class measuring the the elapsed time,\n the test passes in the elapsed time.</p>\n\n<p> Example usage:</p>\n\n<p> public void sampleMethod() {\n     ManualBenchmarkState state = new ManualBenchmarkState();</p>\n\n<pre><code> int[] src = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };\n long elapsedTime = 0;\n while (state.keepRunning(elapsedTime)) {\n     long startTime = System.nanoTime();\n     int[] dest = new int[src.length];\n     System.arraycopy(src, 0, dest, 0, src.length);\n     elapsedTime = System.nanoTime() - startTime;\n }\n System.out.println(state.summaryLine());\n</code></pre>\n\n<p> }</p>\n\n<p> Or use the PerfManualStatusReporter TestRule.</p>\n\n<p> Make sure that the overhead of checking the clock does not noticeably affect the results.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-keepRunning' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.perftests.utils.ManualBenchmarkState'>android.perftests.utils.ManualBenchmarkState</span><br/><a href='source/ManualBenchmarkState.html#android-perftests-utils-ManualBenchmarkState-method-keepRunning' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.perftests.utils.ManualBenchmarkState-method-keepRunning' class='name expandable'>keepRunning</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Judges whether the benchmark needs more samples. ...</div><div class='long'><p>Judges whether the benchmark needs more samples.</p>\n\n<p> For the usage, see class comment.</p>\n</div></div></div><div id='method-sendFullStatusReport' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.perftests.utils.ManualBenchmarkState'>android.perftests.utils.ManualBenchmarkState</span><br/><a href='source/ManualBenchmarkState.html#android-perftests-utils-ManualBenchmarkState-method-sendFullStatusReport' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.perftests.utils.ManualBenchmarkState-method-sendFullStatusReport' class='name expandable'>sendFullStatusReport</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});