Ext.data.JsonP.android_database_sqlite_SQLiteConnection({"tagname":"class","name":"android.database.sqlite.SQLiteConnection","autodetected":{},"files":[{"filename":"SQLiteConnection.js","href":"SQLiteConnection.html#android-database-sqlite-SQLiteConnection"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"dump","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-dump","meta":{}},{"name":"execute","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-execute","meta":{}},{"name":"executeForBlobFileDescriptor","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-executeForBlobFileDescriptor","meta":{}},{"name":"executeForChangedRowCount","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-executeForChangedRowCount","meta":{}},{"name":"executeForCursorWindow","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-executeForCursorWindow","meta":{}},{"name":"executeForLastInsertedRowId","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-executeForLastInsertedRowId","meta":{}},{"name":"executeForLong","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-executeForLong","meta":{}},{"name":"executeForString","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-executeForString","meta":{}},{"name":"getConnectionId","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-getConnectionId","meta":{}},{"name":"isPrimaryConnection","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-isPrimaryConnection","meta":{}},{"name":"onCancel","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-onCancel","meta":{}},{"name":"prepare","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-prepare","meta":{}},{"name":"toString","tagname":"method","owner":"android.database.sqlite.SQLiteConnection","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.database.sqlite.SQLiteConnection","short_doc":"implements android.os.CancellationSignal.OnCancelListener\n\nRepresents a SQLite database connection. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.database.sqlite.SQLiteConnection</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection' target='_blank'>SQLiteConnection.js</a></div></pre><div class='doc-contents'><p>implements android.os.CancellationSignal.OnCancelListener</p>\n\n<p>Represents a SQLite database connection.\n Each connection wraps an instance of a native <code>sqlite3</code> object.\n <p>\n When database connection pooling is enabled, there can be multiple active\n connections to the same database.  Otherwise there is typically only one\n connection per database.\n </p><p>\n When the SQLite WAL feature is enabled, multiple readers and one writer\n can concurrently access the database.  Without WAL, readers and writers\n are mutually exclusive.\n </p></p>\n\n<p> <h2>Ownership and concurrency guarantees</h2>\n <p>\n Connection objects are not thread-safe.  They are acquired as needed to\n perform a database operation and are then returned to the pool.  At any\n given time, a connection is either owned and used by a <a href=\"#!/api/android.database.sqlite.SQLiteSession\" rel=\"android.database.sqlite.SQLiteSession\" class=\"docClass\">android.database.sqlite.SQLiteSession</a>\n object or the <a href=\"#!/api/android.database.sqlite.SQLiteConnectionPool\" rel=\"android.database.sqlite.SQLiteConnectionPool\" class=\"docClass\">android.database.sqlite.SQLiteConnectionPool</a>.  Those classes are\n responsible for serializing operations to guard against concurrent\n use of a connection.\n </p><p>\n The guarantee of having a single owner allows this class to be implemented\n without locks and greatly simplifies resource management.\n </p></p>\n\n<p> <h2>Encapsulation guarantees</h2>\n <p>\n The connection object object owns <em>all</em> of the SQLite related native\n objects that are associated with the connection.  What's more, there are\n no other objects in the system that are capable of obtaining handles to\n those native objects.  Consequently, when the connection is closed, we do\n not have to worry about what other components might have references to\n its associated SQLite state -- there are none.\n </p><p>\n Encapsulation is what ensures that the connection object's\n lifecycle does not become a tortured mess of finalizers and reference\n queues.\n </p></p>\n\n<p> <h2>Reentrance</h2>\n <p>\n This class must tolerate reentrant execution of SQLite operations because\n triggers may call custom SQLite functions that perform additional queries.\n </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dump' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-dump' class='name expandable'>dump</a>( <span class='pre'>printer, verbose</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dumps debugging information about this connection. ...</div><div class='long'><p>Dumps debugging information about this connection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>printer</span> : Object {Printer}<div class='sub-desc'><p>The printer to receive the dump, not null.</p>\n</div></li><li><span class='pre'>verbose</span> : Boolean<div class='sub-desc'><p>True to dump more verbose information.</p>\n</div></li></ul></div></div></div><div id='method-execute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-execute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-execute' class='name expandable'>execute</a>( <span class='pre'>sql, bindArgs, cancellationSignal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a statement that does not return a result. ...</div><div class='long'><p>Executes a statement that does not return a result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to execute.</p>\n</div></li><li><span class='pre'>bindArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The arguments to bind, or null if none.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error\n or invalid number of bind arguments.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the operation was canceled.</p>\n</div></li></ul></div></div></div><div id='method-executeForBlobFileDescriptor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-executeForBlobFileDescriptor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-executeForBlobFileDescriptor' class='name expandable'>executeForBlobFileDescriptor</a>( <span class='pre'>sql, bindArgs, cancellationSignal</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a statement that returns a single BLOB result as a\n file descriptor to a shared memory region. ...</div><div class='long'><p>Executes a statement that returns a single BLOB result as a\n file descriptor to a shared memory region.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to execute.</p>\n</div></li><li><span class='pre'>bindArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The arguments to bind, or null if none.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>The file descriptor for a shared memory region that contains\n the value of the first column in the first row of the result set as a BLOB,\n or null if none.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error\n or invalid number of bind arguments.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the operation was canceled.</p>\n</div></li></ul></div></div></div><div id='method-executeForChangedRowCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-executeForChangedRowCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-executeForChangedRowCount' class='name expandable'>executeForChangedRowCount</a>( <span class='pre'>sql, bindArgs, cancellationSignal</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a statement that returns a count of the number of rows\n that were changed. ...</div><div class='long'><p>Executes a statement that returns a count of the number of rows\n that were changed.  Use for UPDATE or DELETE SQL statements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to execute.</p>\n</div></li><li><span class='pre'>bindArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The arguments to bind, or null if none.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of rows that were changed.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error\n or invalid number of bind arguments.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the operation was canceled.</p>\n</div></li></ul></div></div></div><div id='method-executeForCursorWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-executeForCursorWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-executeForCursorWindow' class='name expandable'>executeForCursorWindow</a>( <span class='pre'>sql, bindArgs, window, startPos, requiredPos, countAllRows, cancellationSignal</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a statement and populates the specified CursorWindow\n with a range of results. ...</div><div class='long'><p>Executes a statement and populates the specified CursorWindow\n with a range of results.  Returns the number of rows that were counted\n during query execution.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to execute.</p>\n</div></li><li><span class='pre'>bindArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The arguments to bind, or null if none.</p>\n</div></li><li><span class='pre'>window</span> : Object {CursorWindow}<div class='sub-desc'><p>The cursor window to clear and fill.</p>\n</div></li><li><span class='pre'>startPos</span> : Number<div class='sub-desc'><p>The start position for filling the window.</p>\n</div></li><li><span class='pre'>requiredPos</span> : Number<div class='sub-desc'><p>The position of a row that MUST be in the window.\n If it won't fit, then the query should discard part of what it filled\n so that it does.  Must be greater than or equal to <code>startPos</code>.</p>\n</div></li><li><span class='pre'>countAllRows</span> : Boolean<div class='sub-desc'><p>True to count all rows that the query would return\n regagless of whether they fit in the window.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of rows that were counted during query execution.  Might\n not be all rows in the result set unless <code>countAllRows</code> is true.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error\n or invalid number of bind arguments.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the operation was canceled.</p>\n</div></li></ul></div></div></div><div id='method-executeForLastInsertedRowId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-executeForLastInsertedRowId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-executeForLastInsertedRowId' class='name expandable'>executeForLastInsertedRowId</a>( <span class='pre'>sql, bindArgs, cancellationSignal</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a statement that returns the row id of the last row inserted\n by the statement. ...</div><div class='long'><p>Executes a statement that returns the row id of the last row inserted\n by the statement.  Use for INSERT SQL statements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to execute.</p>\n</div></li><li><span class='pre'>bindArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The arguments to bind, or null if none.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The row id of the last row that was inserted, or 0 if none.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error\n or invalid number of bind arguments.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the operation was canceled.</p>\n</div></li></ul></div></div></div><div id='method-executeForLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-executeForLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-executeForLong' class='name expandable'>executeForLong</a>( <span class='pre'>sql, bindArgs, cancellationSignal</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a statement that returns a single long result. ...</div><div class='long'><p>Executes a statement that returns a single <code>long</code> result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to execute.</p>\n</div></li><li><span class='pre'>bindArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The arguments to bind, or null if none.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The value of the first column in the first row of the result set\n as a <code>long</code>, or zero if none.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error\n or invalid number of bind arguments.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the operation was canceled.</p>\n</div></li></ul></div></div></div><div id='method-executeForString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-executeForString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-executeForString' class='name expandable'>executeForString</a>( <span class='pre'>sql, bindArgs, cancellationSignal</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes a statement that returns a single String result. ...</div><div class='long'><p>Executes a statement that returns a single String result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to execute.</p>\n</div></li><li><span class='pre'>bindArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The arguments to bind, or null if none.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The value of the first column in the first row of the result set\n as a <code>String</code>, or null if none.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error\n or invalid number of bind arguments.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the operation was canceled.</p>\n</div></li></ul></div></div></div><div id='method-getConnectionId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-getConnectionId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-getConnectionId' class='name expandable'>getConnectionId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the unique id of this connection. ...</div><div class='long'><p>Gets the unique id of this connection.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The connection id.</p>\n</div></li></ul></div></div></div><div id='method-isPrimaryConnection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-isPrimaryConnection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-isPrimaryConnection' class='name expandable'>isPrimaryConnection</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this is the primary database connection. ...</div><div class='long'><p>Returns true if this is the primary database connection.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this is the primary database connection.</p>\n</div></li></ul></div></div></div><div id='method-onCancel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-onCancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-onCancel' class='name expandable'>onCancel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-prepare' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-prepare' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-prepare' class='name expandable'>prepare</a>( <span class='pre'>sql, outStatementInfo</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepares a statement for execution but does not bind its parameters or execute it. ...</div><div class='long'><p>Prepares a statement for execution but does not bind its parameters or execute it.\n <p>\n This method can be used to check for syntax errors during compilation\n prior to execution of the statement.  If the {@code outStatementInfo} argument\n is not null, the provided <a href=\"#!/api/android.database.sqlite.SQLiteStatementInfo\" rel=\"android.database.sqlite.SQLiteStatementInfo\" class=\"docClass\">android.database.sqlite.SQLiteStatementInfo</a> object is populated\n with information about the statement.\n </p><p>\n A prepared statement makes no reference to the arguments that may eventually\n be bound to it, consequently it it possible to cache certain prepared statements\n such as SELECT or INSERT/UPDATE statements.  If the statement is cacheable,\n then it will be stored in the cache for later.\n </p><p>\n To take advantage of this behavior as an optimization, the connection pool\n provides a method to acquire a connection that already has a given SQL statement\n in its prepared statement cache so that it is ready for execution.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>The SQL statement to prepare.</p>\n</div></li><li><span class='pre'>outStatementInfo</span> : Object {SQLiteStatementInfo}<div class='sub-desc'><p>The SQLiteStatementInfo object to populate\n with information about the statement, or null if none.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if an error occurs, such as a syntax error.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteConnection'>android.database.sqlite.SQLiteConnection</span><br/><a href='source/SQLiteConnection.html#android-database-sqlite-SQLiteConnection-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteConnection-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});