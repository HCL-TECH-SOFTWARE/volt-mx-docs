Ext.data.JsonP.android_database_sqlite_SQLiteQueryBuilder({"tagname":"class","name":"android.database.sqlite.SQLiteQueryBuilder","autodetected":{},"files":[{"filename":"SQLiteQueryBuilder.js","href":"SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder"}],"extends":"java.lang.Object","members":[{"name":"appendColumns","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-appendColumns","meta":{}},{"name":"appendWhere","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-appendWhere","meta":{}},{"name":"appendWhereEscapeString","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-appendWhereEscapeString","meta":{}},{"name":"appendWhereStandalone","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-appendWhereStandalone","meta":{}},{"name":"buildDelete","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-buildDelete","meta":{}},{"name":"buildQuery","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-buildQuery","meta":{"deprecated":{"text":"<p>This method's signature is misleading since no SQL parameter\n substitution is carried out.  The selection arguments parameter does not get\n used at all.  To avoid confusion, call\n String, String, String, String, String) instead.</p>\n"}}},{"name":"buildQueryString","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-buildQueryString","meta":{}},{"name":"buildUnionQuery","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-buildUnionQuery","meta":{}},{"name":"buildUnionSubQuery","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-buildUnionSubQuery","meta":{"deprecated":{"text":"<p>This method's signature is misleading since no SQL parameter\n substitution is carried out.  The selection arguments parameter does not get\n used at all.  To avoid confusion, call\n <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildUnionSubQuery\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-buildUnionSubQuery\" class=\"docClass\">buildUnionSubQuery</a>\n instead.</p>\n"}}},{"name":"buildUpdate","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-buildUpdate","meta":{}},{"name":"computeProjection","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-computeProjection","meta":{}},{"name":"computeWhere","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-computeWhere","meta":{}},{"name":"delete","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-delete","meta":{}},{"name":"getCursorFactory","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-getCursorFactory","meta":{}},{"name":"getProjectionMap","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-getProjectionMap","meta":{}},{"name":"getTables","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-getTables","meta":{}},{"name":"isDistinct","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-isDistinct","meta":{}},{"name":"isProjectionAggregationAllowed","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-isProjectionAggregationAllowed","meta":{}},{"name":"isStrict","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-isStrict","meta":{}},{"name":"query","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-query","meta":{}},{"name":"setCursorFactory","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-setCursorFactory","meta":{}},{"name":"setDistinct","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-setDistinct","meta":{}},{"name":"setProjectionAggregationAllowed","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-setProjectionAggregationAllowed","meta":{}},{"name":"setProjectionMap","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-setProjectionMap","meta":{}},{"name":"setStrict","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-setStrict","meta":{}},{"name":"setTables","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-setTables","meta":{}},{"name":"update","tagname":"method","owner":"android.database.sqlite.SQLiteQueryBuilder","id":"method-update","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.database.sqlite.SQLiteQueryBuilder","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.database.sqlite.SQLiteQueryBuilder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder' target='_blank'>SQLiteQueryBuilder.js</a></div></pre><div class='doc-contents'><p>This is a convenience class that helps build SQL queries to be sent to\n <a href=\"#!/api/android.database.sqlite.SQLiteDatabase\" rel=\"android.database.sqlite.SQLiteDatabase\" class=\"docClass\">android.database.sqlite.SQLiteDatabase</a> objects.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-appendColumns' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-appendColumns' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-appendColumns' class='name expandable'>appendColumns</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add the names that are non-null in columns to s, separating\n them with commas. ...</div><div class='long'><p>Add the names that are non-null in columns to s, separating\n them with commas.</p>\n</div></div></div><div id='method-appendWhere' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-appendWhere' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-appendWhere' class='name expandable'>appendWhere</a>( <span class='pre'>inWhere</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Append a chunk to the {@code WHERE} clause of the query. ...</div><div class='long'><p>Append a chunk to the {@code WHERE} clause of the query. All chunks appended are surrounded\n by parenthesis and {@code AND}ed with the selection passed to <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-query\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-query\" class=\"docClass\">query</a>. The final\n {@code WHERE} clause looks like:\n <p>\n WHERE (&lt;append chunk 1>&lt;append chunk2>) AND (&lt;query() selection parameter>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inWhere</span> : Object {CharSequence}<div class='sub-desc'><p>the chunk of text to append to the {@code WHERE} clause.</p>\n</div></li></ul></div></div></div><div id='method-appendWhereEscapeString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-appendWhereEscapeString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-appendWhereEscapeString' class='name expandable'>appendWhereEscapeString</a>( <span class='pre'>inWhere</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Append a chunk to the {@code WHERE} clause of the query. ...</div><div class='long'><p>Append a chunk to the {@code WHERE} clause of the query. All chunks appended are surrounded\n by parenthesis and ANDed with the selection passed to <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-query\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-query\" class=\"docClass\">query</a>. The final\n {@code WHERE} clause looks like:\n <p>\n WHERE (&lt;append chunk 1>&lt;append chunk2>) AND (&lt;query() selection parameter>)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inWhere</span> : String<div class='sub-desc'><p>the chunk of text to append to the {@code WHERE} clause. it will be escaped\n to avoid SQL injection attacks</p>\n</div></li></ul></div></div></div><div id='method-appendWhereStandalone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-appendWhereStandalone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-appendWhereStandalone' class='name expandable'>appendWhereStandalone</a>( <span class='pre'>inWhere</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a standalone chunk to the {@code WHERE} clause of this query. ...</div><div class='long'><p>Add a standalone chunk to the {@code WHERE} clause of this query.\n <p>\n This method differs from <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-appendWhere\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-appendWhere\" class=\"docClass\">appendWhere</a>(CharSequence) in that it\n automatically appends {@code AND} to any existing {@code WHERE} clause\n already under construction before appending the given standalone\n expression wrapped in parentheses.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inWhere</span> : Object {CharSequence}<div class='sub-desc'><p>the standalone expression to append to the {@code WHERE}\n            clause. It will be wrapped in parentheses when it's appended.</p>\n</div></li></ul></div></div></div><div id='method-buildDelete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-buildDelete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildDelete' class='name expandable'>buildDelete</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-buildQuery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-buildQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildQuery' class='name expandable'>buildQuery</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method's signature is misleading since no SQL parameter\n substitution is carried out.  The selection arguments parameter does not get\n used at all.  To avoid confusion, call\n String, String, String, String, String) instead.</p>\n\n        </div>\n</div></div></div><div id='method-buildQueryString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-buildQueryString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildQueryString' class='name expandable'>buildQueryString</a>( <span class='pre'>distinct, tables, columns, where, groupBy, having, orderBy, limit</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Build an SQL query string from the given clauses. ...</div><div class='long'><p>Build an SQL query string from the given clauses.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>distinct</span> : Boolean<div class='sub-desc'><p>true if you want each row to be unique, false otherwise.</p>\n</div></li><li><span class='pre'>tables</span> : String<div class='sub-desc'><p>The table names to compile the query against.</p>\n</div></li><li><span class='pre'>columns</span> : Object {java.lang.String[]}<div class='sub-desc'><p>A list of which columns to return. Passing null will\n            return all columns, which is discouraged to prevent reading\n            data from storage that isn't going to be used.</p>\n</div></li><li><span class='pre'>where</span> : String<div class='sub-desc'><p>A filter declaring which rows to return, formatted as an SQL\n            {@code WHERE} clause (excluding the {@code WHERE} itself). Passing {@code null} will\n            return all rows for the given URL.</p>\n</div></li><li><span class='pre'>groupBy</span> : String<div class='sub-desc'><p>A filter declaring how to group rows, formatted as an SQL\n            {@code GROUP BY} clause (excluding the {@code GROUP BY} itself). Passing {@code null}\n            will cause the rows to not be grouped.</p>\n</div></li><li><span class='pre'>having</span> : String<div class='sub-desc'><p>A filter declare which row groups to include in the cursor,\n            if row grouping is being used, formatted as an SQL {@code HAVING}\n            clause (excluding the {@code HAVING} itself). Passing null will cause\n            all row groups to be included, and is required when row\n            grouping is not being used.</p>\n</div></li><li><span class='pre'>orderBy</span> : String<div class='sub-desc'><p>How to order the rows, formatted as an SQL {@code ORDER BY} clause\n            (excluding the {@code ORDER BY} itself). Passing null will use the\n            default sort order, which may be unordered.</p>\n</div></li><li><span class='pre'>limit</span> : String<div class='sub-desc'><p>Limits the number of rows returned by the query,\n            formatted as {@code LIMIT} clause. Passing null denotes no {@code LIMIT} clause.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the SQL query string</p>\n</div></li></ul></div></div></div><div id='method-buildUnionQuery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-buildUnionQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildUnionQuery' class='name expandable'>buildUnionQuery</a>( <span class='pre'>subQueries, sortOrder, limit</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Given a set of subqueries, all of which are {@code SELECT} statements,\n construct a query that returns the union of w...</div><div class='long'><p>Given a set of subqueries, all of which are {@code SELECT} statements,\n construct a query that returns the union of what those\n subqueries return.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>subQueries</span> : Object {java.lang.String[]}<div class='sub-desc'><p>an array of SQL {@code SELECT} statements, all of\n   which must have the same columns as the same positions in\n   their results</p>\n</div></li><li><span class='pre'>sortOrder</span> : String<div class='sub-desc'><p>How to order the rows, formatted as an SQL\n   {@code ORDER BY} clause (excluding the {@code ORDER BY} itself).  Passing\n   null will use the default sort order, which may be unordered.</p>\n</div></li><li><span class='pre'>limit</span> : String<div class='sub-desc'><p>The limit clause, which applies to the entire union result set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the resulting SQL {@code SELECT} statement</p>\n</div></li></ul></div></div></div><div id='method-buildUnionSubQuery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-buildUnionSubQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildUnionSubQuery' class='name expandable'>buildUnionSubQuery</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method's signature is misleading since no SQL parameter\n substitution is carried out.  The selection arguments parameter does not get\n used at all.  To avoid confusion, call\n <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildUnionSubQuery\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-buildUnionSubQuery\" class=\"docClass\">buildUnionSubQuery</a>\n instead.</p>\n\n        </div>\n</div></div></div><div id='method-buildUpdate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-buildUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-buildUpdate' class='name expandable'>buildUpdate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-computeProjection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-computeProjection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-computeProjection' class='name expandable'>computeProjection</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-computeWhere' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-computeWhere' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-computeWhere' class='name expandable'>computeWhere</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-delete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-delete' class='name expandable'>delete</a>( <span class='pre'>db, selection, selectionArgs</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform a delete by combining all current settings and the\n information passed into this method. ...</div><div class='long'><p>Perform a delete by combining all current settings and the\n information passed into this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>the database to delete on</p>\n</div></li><li><span class='pre'>selection</span> : String<div class='sub-desc'><p>A filter declaring which rows to return,\n   formatted as an SQL {@code WHERE} clause (excluding the {@code WHERE}\n   itself). Passing null will return all rows for the given URL.</p>\n</div></li><li><span class='pre'>selectionArgs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>You may include ?s in selection, which\n   will be replaced by the values from selectionArgs, in order\n   that they appear in the selection. The values will be bound\n   as Strings.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of rows deleted</p>\n</div></li></ul></div></div></div><div id='method-getCursorFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-getCursorFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-getCursorFactory' class='name expandable'>getCursorFactory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the cursor factory to be used for the query, as last configured by\n setCursorFactory(android.database.sqlite.SQL...</div><div class='long'><p>Gets the cursor factory to be used for the query, as last configured by\n setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory).</p>\n</div></div></div><div id='method-getProjectionMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-getProjectionMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-getProjectionMap' class='name expandable'>getProjectionMap</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the projection map for the query, as last configured by\n setProjectionMap(Map). ...</div><div class='long'><p>Gets the projection map for the query, as last configured by\n <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setProjectionMap\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-setProjectionMap\" class=\"docClass\">setProjectionMap</a>(Map).</p>\n</div></div></div><div id='method-getTables' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-getTables' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-getTables' class='name expandable'>getTables</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of tables being queried ...</div><div class='long'><p>Returns the list of tables being queried</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the list of tables being queried</p>\n</div></li></ul></div></div></div><div id='method-isDistinct' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-isDistinct' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-isDistinct' class='name expandable'>isDistinct</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get if the query is marked as {@code DISTINCT}, as last configured by\n setDistinct(boolean). ...</div><div class='long'><p>Get if the query is marked as {@code DISTINCT}, as last configured by\n <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setDistinct\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-setDistinct\" class=\"docClass\">setDistinct</a>(boolean).</p>\n</div></div></div><div id='method-isProjectionAggregationAllowed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-isProjectionAggregationAllowed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-isProjectionAggregationAllowed' class='name expandable'>isProjectionAggregationAllowed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-isStrict' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-isStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-isStrict' class='name expandable'>isStrict</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get if the query is marked as strict, as last configured by\n setStrict(boolean). ...</div><div class='long'><p>Get if the query is marked as strict, as last configured by\n <a href=\"#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setStrict\" rel=\"android.database.sqlite.SQLiteQueryBuilder-method-setStrict\" class=\"docClass\">setStrict</a>(boolean).</p>\n</div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-query' class='name expandable'>query</a>( <span class='pre'>db, projectionIn, selection, selectionArgs, groupBy, having, sortOrder, limit, cancellationSignal</span> ) : Object {android.database.Cursor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform a query by combining all current settings and the\n information passed into this method. ...</div><div class='long'><p>Perform a query by combining all current settings and the\n information passed into this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>the database to query on</p>\n</div></li><li><span class='pre'>projectionIn</span> : Object {java.lang.String[]}<div class='sub-desc'><p>A list of which columns to return. Passing\n   null will return all columns, which is discouraged to prevent\n   reading data from storage that isn't going to be used.</p>\n</div></li><li><span class='pre'>selection</span> : String<div class='sub-desc'><p>A filter declaring which rows to return,\n   formatted as an SQL {@code WHERE} clause (excluding the {@code WHERE}\n   itself). Passing null will return all rows for the given URL.</p>\n</div></li><li><span class='pre'>selectionArgs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>You may include ?s in selection, which\n   will be replaced by the values from selectionArgs, in order\n   that they appear in the selection. The values will be bound\n   as Strings.</p>\n</div></li><li><span class='pre'>groupBy</span> : String<div class='sub-desc'><p>A filter declaring how to group rows, formatted\n   as an SQL {@code GROUP BY} clause (excluding the {@code GROUP BY}\n   itself). Passing null will cause the rows to not be grouped.</p>\n</div></li><li><span class='pre'>having</span> : String<div class='sub-desc'><p>A filter declare which row groups to include in\n   the cursor, if row grouping is being used, formatted as an\n   SQL {@code HAVING} clause (excluding the {@code HAVING} itself).  Passing\n   null will cause all row groups to be included, and is\n   required when row grouping is not being used.</p>\n</div></li><li><span class='pre'>sortOrder</span> : String<div class='sub-desc'><p>How to order the rows, formatted as an SQL\n   {@code ORDER BY} clause (excluding the {@code ORDER BY} itself). Passing null\n   will use the default sort order, which may be unordered.</p>\n</div></li><li><span class='pre'>limit</span> : String<div class='sub-desc'><p>Limits the number of rows returned by the query,\n   formatted as {@code LIMIT} clause. Passing null denotes no {@code LIMIT} clause.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none.\n If the operation is canceled, then OperationCanceledException will be thrown\n when the query is executed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.database.Cursor}</span><div class='sub-desc'><p>a cursor over the result set\n@see android.content.ContentResolver#query(android.net.Uri, String[],\n      String, String[], String)</p>\n</div></li></ul></div></div></div><div id='method-setCursorFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-setCursorFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setCursorFactory' class='name expandable'>setCursorFactory</a>( <span class='pre'>factory</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the cursor factory to be used for the query. ...</div><div class='long'><p>Sets the cursor factory to be used for the query.  You can use\n one factory for all queries on a database but it is normally\n easier to specify the factory when doing this query.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>factory</span> : Object {SQLiteDatabase.CursorFactory}<div class='sub-desc'><p>the factory to use.</p>\n</div></li></ul></div></div></div><div id='method-setDistinct' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-setDistinct' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setDistinct' class='name expandable'>setDistinct</a>( <span class='pre'>distinct</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Mark the query as {@code DISTINCT}. ...</div><div class='long'><p>Mark the query as {@code DISTINCT}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>distinct</span> : Boolean<div class='sub-desc'><p>if true the query is {@code DISTINCT}, otherwise it isn't</p>\n</div></li></ul></div></div></div><div id='method-setProjectionAggregationAllowed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-setProjectionAggregationAllowed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setProjectionAggregationAllowed' class='name expandable'>setProjectionAggregationAllowed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-setProjectionMap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-setProjectionMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setProjectionMap' class='name expandable'>setProjectionMap</a>( <span class='pre'>columnMap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the projection map for the query. ...</div><div class='long'><p>Sets the projection map for the query.  The projection map maps\n from column names that the caller passes into query to database\n column names. This is useful for renaming columns as well as\n disambiguating column names when doing joins. For example you\n could map \"name\" to \"people.name\".  If a projection map is set\n it must contain all column names the user may request, even if\n the key and value are the same.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>columnMap</span> : Object {java.util.Map}<div class='sub-desc'><p>maps from the user column names to the database column names</p>\n</div></li></ul></div></div></div><div id='method-setStrict' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-setStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setStrict' class='name expandable'>setStrict</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>When set, the selection is verified against malicious arguments. ...</div><div class='long'><p>When set, the selection is verified against malicious arguments.\n When using this class to create a statement using\n String, String[], String, String, String, String, String),\n non-numeric limits will raise an exception. If a projection map is specified, fields\n not in that map will be ignored.\n If this class is used to execute the statement directly using\n String[], String, String[], String, String, String)\n or\n String[], String, String[], String, String, String, String),\n additionally also parenthesis escaping selection are caught.</p>\n\n<p> To summarize: To get maximum protection against malicious third party apps (for example\n content provider consumers), make sure to do the following:\n <ul>\n <li>Set this value to true</li>\n <li>Use a projection map</li>\n <li>Use one of the query overloads instead of getting the statement as a sql string</li>\n </ul>\n By default, this value is false.</p>\n</div></div></div><div id='method-setTables' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-setTables' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-setTables' class='name expandable'>setTables</a>( <span class='pre'>inTables</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the list of tables to query. ...</div><div class='long'><p>Sets the list of tables to query. Multiple tables can be specified to perform a join.\n For example:\n   setTables(\"foo, bar\")\n   setTables(\"foo LEFT OUTER JOIN bar ON (foo.id = bar.foo_id)\")</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inTables</span> : String<div class='sub-desc'><p>the list of tables to query on</p>\n</div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteQueryBuilder'>android.database.sqlite.SQLiteQueryBuilder</span><br/><a href='source/SQLiteQueryBuilder.html#android-database-sqlite-SQLiteQueryBuilder-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteQueryBuilder-method-update' class='name expandable'>update</a>( <span class='pre'>db, selection, selectionArgs</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform an update by combining all current settings and the\n information passed into this method. ...</div><div class='long'><p>Perform an update by combining all current settings and the\n information passed into this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>the database to update on</p>\n</div></li><li><span class='pre'>selection</span> : Object {ContentValues}<div class='sub-desc'><p>A filter declaring which rows to return,\n   formatted as an SQL {@code WHERE} clause (excluding the {@code WHERE}\n   itself). Passing null will return all rows for the given URL.</p>\n</div></li><li><span class='pre'>selectionArgs</span> : String<div class='sub-desc'><p>You may include ?s in selection, which\n   will be replaced by the values from selectionArgs, in order\n   that they appear in the selection. The values will be bound\n   as Strings.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of rows updated</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});