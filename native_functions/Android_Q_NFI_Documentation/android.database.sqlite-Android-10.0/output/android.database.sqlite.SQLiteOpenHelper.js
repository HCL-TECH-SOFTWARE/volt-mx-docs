Ext.data.JsonP.android_database_sqlite_SQLiteOpenHelper({"tagname":"class","name":"android.database.sqlite.SQLiteOpenHelper","autodetected":{},"files":[{"filename":"SQLiteOpenHelper.js","href":"SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper"}],"extends":"java.lang.Object","members":[{"name":"close","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-close","meta":{}},{"name":"getDatabaseName","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-getDatabaseName","meta":{}},{"name":"getReadableDatabase","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-getReadableDatabase","meta":{}},{"name":"getWritableDatabase","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-getWritableDatabase","meta":{}},{"name":"onConfigure","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-onConfigure","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-onCreate","meta":{}},{"name":"onDowngrade","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-onDowngrade","meta":{}},{"name":"onOpen","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-onOpen","meta":{}},{"name":"onUpgrade","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-onUpgrade","meta":{}},{"name":"setIdleConnectionTimeout","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-setIdleConnectionTimeout","meta":{"deprecated":{"text":"<p>DO NOT USE this method. See the javadoc of\n SQLiteDatabase.OpenParams.Builder.setIdleConnectionTimeout(long)\n for the details.</p>\n"}}},{"name":"setLookasideConfig","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-setLookasideConfig","meta":{}},{"name":"setOpenParams","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-setOpenParams","meta":{}},{"name":"setWriteAheadLoggingEnabled","tagname":"method","owner":"android.database.sqlite.SQLiteOpenHelper","id":"method-setWriteAheadLoggingEnabled","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.database.sqlite.SQLiteOpenHelper","short_doc":"implements java.lang.AutoCloseable\n\nA helper class to manage database creation and version management. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.database.sqlite.SQLiteOpenHelper</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper' target='_blank'>SQLiteOpenHelper.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>A helper class to manage database creation and version management.</p>\n\n<p> <p>You create a subclass implementing <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onCreate\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onCreate\" class=\"docClass\">onCreate</a>, <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" class=\"docClass\">onUpgrade</a> and\n optionally <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onOpen\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onOpen\" class=\"docClass\">onOpen</a>, and this class takes care of opening the database\n if it exists, creating it if it does not, and upgrading it as necessary.\n Transactions are used to make sure the database is always in a sensible state.</p>\n\n<p> <p>This class makes it easy for android.content.ContentProvider\n implementations to defer opening and upgrading the database until first use,\n to avoid blocking application startup with long-running database upgrades.</p>\n\n<p> <p>For an example, see the NotePadProvider class in the NotePad sample application,\n in the <em>samples/</em> directory of the SDK.</p></p>\n\n<p> <p class=\"note\"><strong>Note:</strong> this class assumes\n monotonically increasing version numbers for upgrades.</p></p>\n\n<p> <p class=\"note\"><strong>Note:</strong> the AutoCloseable interface was\n first added in the android.os.Build.VERSION_CODES.Q release.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close any open database object. ...</div><div class='long'><p>Close any open database object.</p>\n</div></div></div><div id='method-getDatabaseName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-getDatabaseName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-getDatabaseName' class='name expandable'>getDatabaseName</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the name of the SQLite database being opened, as given to\n the constructor. ...</div><div class='long'><p>Return the name of the SQLite database being opened, as given to\n the constructor.</p>\n</div></div></div><div id='method-getReadableDatabase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-getReadableDatabase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-getReadableDatabase' class='name expandable'>getReadableDatabase</a>( <span class='pre'></span> ) : Object {android.database.sqlite.SQLiteDatabase}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create and/or open a database. ...</div><div class='long'><p>Create and/or open a database.  This will be the same object returned by\n <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" class=\"docClass\">getWritableDatabase</a> unless some problem, such as a full disk,\n requires the database to be opened read-only.  In that case, a read-only\n database object will be returned.  If the problem is fixed, a future call\n to <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" class=\"docClass\">getWritableDatabase</a> may succeed, in which case the read-only\n database object will be closed and the read/write object will be returned\n in the future.</p>\n\n<p> <p class=\"caution\">Like <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" class=\"docClass\">getWritableDatabase</a>, this method may\n take a long time to return, so you should not call it from the\n application main thread, including from\n ContentProvider.onCreate().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.database.sqlite.SQLiteDatabase}</span><div class='sub-desc'><p>a database object valid until <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase\" class=\"docClass\">getWritableDatabase</a>\n     or <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-close\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-close\" class=\"docClass\">close</a> is called.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if the database cannot be opened</p>\n</div></li></ul></div></div></div><div id='method-getWritableDatabase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-getWritableDatabase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-getWritableDatabase' class='name expandable'>getWritableDatabase</a>( <span class='pre'></span> ) : Object {android.database.sqlite.SQLiteDatabase}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create and/or open a database that will be used for reading and writing. ...</div><div class='long'><p>Create and/or open a database that will be used for reading and writing.\n The first time this is called, the database will be opened and\n <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onCreate\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onCreate\" class=\"docClass\">onCreate</a>, <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" class=\"docClass\">onUpgrade</a> and/or <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onOpen\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onOpen\" class=\"docClass\">onOpen</a> will be\n called.</p>\n\n<p> <p>Once opened successfully, the database is cached, so you can\n call this method every time you need to write to the database.\n (Make sure to call <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-close\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-close\" class=\"docClass\">close</a> when you no longer need the database.)\n Errors such as bad permissions or a full disk may cause this method\n to fail, but future attempts may succeed if the problem is fixed.</p></p>\n\n<p> <p class=\"caution\">Database upgrade may take a long time, you\n should not call this method from the application main thread, including\n from ContentProvider.onCreate().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.database.sqlite.SQLiteDatabase}</span><div class='sub-desc'><p>a read/write database object valid until <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-close\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-close\" class=\"docClass\">close</a> is called</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SQLiteException if the database cannot be opened for writing</p>\n</div></li></ul></div></div></div><div id='method-onConfigure' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-onConfigure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-onConfigure' class='name expandable'>onConfigure</a>( <span class='pre'>db</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the database connection is being configured, to enable features such as\n write-ahead logging or foreign k...</div><div class='long'><p>Called when the database connection is being configured, to enable features such as\n write-ahead logging or foreign key support.\n <p>\n This method is called before <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onCreate\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onCreate\" class=\"docClass\">onCreate</a>, <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" class=\"docClass\">onUpgrade</a>, <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onDowngrade\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onDowngrade\" class=\"docClass\">onDowngrade</a>, or\n <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onOpen\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onOpen\" class=\"docClass\">onOpen</a> are called. It should not modify the database except to configure the\n database connection as required.\n </p>\n <p>\n This method should only call methods that configure the parameters of the database\n connection, such as <a href=\"#!/api/android.database.sqlite.SQLiteDatabase-method-enableWriteAheadLogging\" rel=\"android.database.sqlite.SQLiteDatabase-method-enableWriteAheadLogging\" class=\"docClass\">android.database.sqlite.SQLiteDatabase.enableWriteAheadLogging</a>\n <a href=\"#!/api/android.database.sqlite.SQLiteDatabase-method-setForeignKeyConstraintsEnabled\" rel=\"android.database.sqlite.SQLiteDatabase-method-setForeignKeyConstraintsEnabled\" class=\"docClass\">android.database.sqlite.SQLiteDatabase.setForeignKeyConstraintsEnabled</a>, <a href=\"#!/api/android.database.sqlite.SQLiteDatabase-method-setLocale\" rel=\"android.database.sqlite.SQLiteDatabase-method-setLocale\" class=\"docClass\">android.database.sqlite.SQLiteDatabase.setLocale</a>,\n <a href=\"#!/api/android.database.sqlite.SQLiteDatabase-method-setMaximumSize\" rel=\"android.database.sqlite.SQLiteDatabase-method-setMaximumSize\" class=\"docClass\">android.database.sqlite.SQLiteDatabase.setMaximumSize</a>, or executing PRAGMA statements.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>The database.</p>\n</div></li></ul></div></div></div><div id='method-onCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'>db</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the database is created for the first time. ...</div><div class='long'><p>Called when the database is created for the first time. This is where the\n creation of tables and the initial population of the tables should happen.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>The database.</p>\n</div></li></ul></div></div></div><div id='method-onDowngrade' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-onDowngrade' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-onDowngrade' class='name expandable'>onDowngrade</a>( <span class='pre'>db, oldVersion, newVersion</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the database needs to be downgraded. ...</div><div class='long'><p>Called when the database needs to be downgraded. This is strictly similar to\n <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onUpgrade\" class=\"docClass\">onUpgrade</a> method, but is called whenever current version is newer than requested one.\n However, this method is not abstract, so it is not mandatory for a customer to\n implement it. If not overridden, default implementation will reject downgrade and\n throws SQLiteException</p>\n\n<p> <p>\n This method executes within a transaction.  If an exception is thrown, all changes\n will automatically be rolled back.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>The database.</p>\n</div></li><li><span class='pre'>oldVersion</span> : Number<div class='sub-desc'><p>The old database version.</p>\n</div></li><li><span class='pre'>newVersion</span> : Number<div class='sub-desc'><p>The new database version.</p>\n</div></li></ul></div></div></div><div id='method-onOpen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-onOpen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-onOpen' class='name expandable'>onOpen</a>( <span class='pre'>db</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the database has been opened. ...</div><div class='long'><p>Called when the database has been opened.  The implementation\n should check <a href=\"#!/api/android.database.sqlite.SQLiteDatabase-method-isReadOnly\" rel=\"android.database.sqlite.SQLiteDatabase-method-isReadOnly\" class=\"docClass\">android.database.sqlite.SQLiteDatabase.isReadOnly</a> before updating the\n database.\n <p>\n This method is called after the database connection has been configured\n and after the database schema has been created, upgraded or downgraded as necessary.\n If the database connection must be configured in some way before the schema\n is created, upgraded, or downgraded, do it in <a href=\"#!/api/android.database.sqlite.SQLiteOpenHelper-method-onConfigure\" rel=\"android.database.sqlite.SQLiteOpenHelper-method-onConfigure\" class=\"docClass\">onConfigure</a> instead.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>The database.</p>\n</div></li></ul></div></div></div><div id='method-onUpgrade' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-onUpgrade' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-onUpgrade' class='name expandable'>onUpgrade</a>( <span class='pre'>db, oldVersion, newVersion</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the database needs to be upgraded. ...</div><div class='long'><p>Called when the database needs to be upgraded. The implementation\n should use this method to drop tables, add tables, or do anything else it\n needs to upgrade to the new schema version.</p>\n\n<p> <p>\n The SQLite ALTER TABLE documentation can be found\n <a href=\"http://sqlite.org/lang_altertable.html\">here</a>. If you add new columns\n you can use ALTER TABLE to insert them into a live table. If you rename or remove columns\n you can use ALTER TABLE to rename the old table, then create the new table and then\n populate the new table with the contents of the old table.\n </p><p>\n This method executes within a transaction.  If an exception is thrown, all changes\n will automatically be rolled back.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>db</span> : Object {SQLiteDatabase}<div class='sub-desc'><p>The database.</p>\n</div></li><li><span class='pre'>oldVersion</span> : Number<div class='sub-desc'><p>The old database version.</p>\n</div></li><li><span class='pre'>newVersion</span> : Number<div class='sub-desc'><p>The new database version.</p>\n</div></li></ul></div></div></div><div id='method-setIdleConnectionTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-setIdleConnectionTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-setIdleConnectionTimeout' class='name expandable'>setIdleConnectionTimeout</a>( <span class='pre'>idleConnectionTimeoutMs</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the maximum number of milliseconds that SQLite connection is allowed to be idle\n before it is closed and removed...</div><div class='long'><p>Sets the maximum number of milliseconds that SQLite connection is allowed to be idle\n before it is closed and removed from the pool.</p>\n\n<p> <p>This method should be called from the constructor of the subclass,\n before opening the database</p>\n\n<p> <p><b>DO NOT USE</b> this method.\n This feature has negative side effects that are very hard to foresee.\n See the javadoc of\n android.database.sqlite.SQLiteDatabase.OpenParams.Builder.setIdleConnectionTimeout(long)\n for the details.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>DO NOT USE this method. See the javadoc of\n SQLiteDatabase.OpenParams.Builder.setIdleConnectionTimeout(long)\n for the details.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>idleConnectionTimeoutMs</span> : Number<div class='sub-desc'><p>timeout in milliseconds. Use Long.MAX_VALUE value\n to allow unlimited idle connections.\n@see SQLiteDatabase.OpenParams.Builder#setIdleConnectionTimeout(long)</p>\n</div></li></ul></div></div></div><div id='method-setLookasideConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-setLookasideConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-setLookasideConfig' class='name expandable'>setLookasideConfig</a>( <span class='pre'>slotSize, slotCount</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Configures lookaside memory allocator\n\n This method should be called from the constructor of the subclass,\n before op...</div><div class='long'><p>Configures <a href=\"https://sqlite.org/malloc.html#lookaside\">lookaside memory allocator</a></p>\n\n<p> <p>This method should be called from the constructor of the subclass,\n before opening the database, since lookaside memory configuration can only be changed\n when no connection is using it</p>\n\n<p> <p>SQLite default settings will be used, if this method isn't called.\n Use {@code setLookasideConfig(0,0)} to disable lookaside</p>\n\n<p> <p><strong>Note:</strong> Provided slotSize/slotCount configuration is just a recommendation.\n The system may choose different values depending on a device, e.g. lookaside allocations\n can be disabled on low-RAM devices</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>slotSize</span> : Number<div class='sub-desc'><p>The size in bytes of each lookaside slot.</p>\n</div></li><li><span class='pre'>slotCount</span> : Number<div class='sub-desc'><p>The total number of lookaside memory slots per database connection.</p>\n</div></li></ul></div></div></div><div id='method-setOpenParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-setOpenParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-setOpenParams' class='name expandable'>setOpenParams</a>( <span class='pre'>openParams</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets configuration parameters that are used for opening android.database.sqlite.SQLiteDatabase. ...</div><div class='long'><p>Sets configuration parameters that are used for opening <a href=\"#!/api/android.database.sqlite.SQLiteDatabase\" rel=\"android.database.sqlite.SQLiteDatabase\" class=\"docClass\">android.database.sqlite.SQLiteDatabase</a>.\n <p>Please note that <a href=\"#!/api/android.database.sqlite.SQLiteDatabase-property-CREATE_IF_NECESSARY\" rel=\"android.database.sqlite.SQLiteDatabase-property-CREATE_IF_NECESSARY\" class=\"docClass\">android.database.sqlite.SQLiteDatabase.CREATE_IF_NECESSARY</a> flag will always be set when\n opening the database</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>openParams</span> : Object {SQLiteDatabase.OpenParams}<div class='sub-desc'><p>configuration parameters that are used for opening SQLiteDatabase.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the database is already open</p>\n</div></li></ul></div></div></div><div id='method-setWriteAheadLoggingEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.database.sqlite.SQLiteOpenHelper'>android.database.sqlite.SQLiteOpenHelper</span><br/><a href='source/SQLiteOpenHelper.html#android-database-sqlite-SQLiteOpenHelper-method-setWriteAheadLoggingEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.database.sqlite.SQLiteOpenHelper-method-setWriteAheadLoggingEnabled' class='name expandable'>setWriteAheadLoggingEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enables or disables the use of write-ahead logging for the database. ...</div><div class='long'><p>Enables or disables the use of write-ahead logging for the database.</p>\n\n<p> Write-ahead logging cannot be used with read-only databases so the value of\n this flag is ignored if the database is opened read-only.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>True if write-ahead logging should be enabled, false if it\n should be disabled.\n@see SQLiteDatabase#enableWriteAheadLogging()</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});