Ext.data.JsonP.java_nio_CharBuffer({"tagname":"class","name":"java.nio.CharBuffer","autodetected":{},"files":[{"filename":"CharBuffer.js","href":"CharBuffer.html#java-nio-CharBuffer"}],"extends":"java.nio.Buffer","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"allocate","tagname":"method","owner":"java.nio.CharBuffer","id":"method-allocate","meta":{}},{"name":"append","tagname":"method","owner":"java.nio.CharBuffer","id":"method-append","meta":{}},{"name":"array","tagname":"method","owner":"java.nio.CharBuffer","id":"method-array","meta":{}},{"name":"arrayOffset","tagname":"method","owner":"java.nio.CharBuffer","id":"method-arrayOffset","meta":{}},{"name":"asReadOnlyBuffer","tagname":"method","owner":"java.nio.CharBuffer","id":"method-asReadOnlyBuffer","meta":{}},{"name":"capacity","tagname":"method","owner":"java.nio.Buffer","id":"method-capacity","meta":{}},{"name":"charAt","tagname":"method","owner":"java.nio.CharBuffer","id":"method-charAt","meta":{}},{"name":"chars","tagname":"method","owner":"java.nio.CharBuffer","id":"method-chars","meta":{}},{"name":"clear","tagname":"method","owner":"java.nio.CharBuffer","id":"method-clear","meta":{}},{"name":"compact","tagname":"method","owner":"java.nio.CharBuffer","id":"method-compact","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.nio.CharBuffer","id":"method-compareTo","meta":{}},{"name":"duplicate","tagname":"method","owner":"java.nio.CharBuffer","id":"method-duplicate","meta":{}},{"name":"equals","tagname":"method","owner":"java.nio.CharBuffer","id":"method-equals","meta":{}},{"name":"flip","tagname":"method","owner":"java.nio.CharBuffer","id":"method-flip","meta":{}},{"name":"get","tagname":"method","owner":"java.nio.CharBuffer","id":"method-get","meta":{}},{"name":"hasArray","tagname":"method","owner":"java.nio.CharBuffer","id":"method-hasArray","meta":{}},{"name":"hasRemaining","tagname":"method","owner":"java.nio.Buffer","id":"method-hasRemaining","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.nio.CharBuffer","id":"method-hashCode","meta":{}},{"name":"isDirect","tagname":"method","owner":"java.nio.CharBuffer","id":"method-isDirect","meta":{}},{"name":"isReadOnly","tagname":"method","owner":"java.nio.Buffer","id":"method-isReadOnly","meta":{}},{"name":"length","tagname":"method","owner":"java.nio.CharBuffer","id":"method-length","meta":{}},{"name":"limit","tagname":"method","owner":"java.nio.CharBuffer","id":"method-limit","meta":{}},{"name":"mark","tagname":"method","owner":"java.nio.CharBuffer","id":"method-mark","meta":{}},{"name":"order","tagname":"method","owner":"java.nio.CharBuffer","id":"method-order","meta":{}},{"name":"position","tagname":"method","owner":"java.nio.CharBuffer","id":"method-position","meta":{}},{"name":"put","tagname":"method","owner":"java.nio.CharBuffer","id":"method-put","meta":{}},{"name":"read","tagname":"method","owner":"java.nio.CharBuffer","id":"method-read","meta":{}},{"name":"remaining","tagname":"method","owner":"java.nio.Buffer","id":"method-remaining","meta":{}},{"name":"reset","tagname":"method","owner":"java.nio.CharBuffer","id":"method-reset","meta":{}},{"name":"rewind","tagname":"method","owner":"java.nio.CharBuffer","id":"method-rewind","meta":{}},{"name":"slice","tagname":"method","owner":"java.nio.CharBuffer","id":"method-slice","meta":{}},{"name":"subSequence","tagname":"method","owner":"java.nio.CharBuffer","id":"method-subSequence","meta":{}},{"name":"toString","tagname":"method","owner":"java.nio.CharBuffer","id":"method-toString","meta":{}},{"name":"wrap","tagname":"method","owner":"java.nio.CharBuffer","id":"method-wrap","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.CharBuffer","short_doc":"implements java.lang.Comparable\n\n implements java.lang.Appendable\n\n implements java.lang.CharSequence\n\n implements ja...","classIcon":"icon-class","superclasses":["java.lang.Object","java.nio.Buffer"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.nio.Buffer' rel='java.nio.Buffer' class='docClass'>java.nio.Buffer</a><div class='subclass '><strong>java.nio.CharBuffer</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/CharBuffer.html#java-nio-CharBuffer' target='_blank'>CharBuffer.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Comparable</p>\n\n<p> implements java.lang.Appendable</p>\n\n<p> implements java.lang.CharSequence</p>\n\n<p> implements java.lang.Readable</p>\n\n<p>A char buffer.</p>\n\n<p> <p> This class defines four categories of operations upon\n char buffers:</p>\n\n<p> <ul></ul></p>\n\n<p>   <li><p> Absolute and relative <i>get</i> and\n   <i>put</i> methods that read and write\n   single chars; </p></li></p>\n\n<p>   <li><p> Relative <i>bulk get</i>\n   methods that transfer contiguous sequences of chars from this buffer\n   into an array; and</p></li></p>\n\n<p>   <li><p> Relative <i>bulk put</i>\n   methods that transfer contiguous sequences of chars from a\n   char array,&#32;a&#32;string, or some other char\n   buffer into this buffer;&#32;and </p></li></p>\n\n<p>   <li><p> Methods for <a href=\"#!/api/java.nio.CharBuffer-method-compact\" rel=\"java.nio.CharBuffer-method-compact\" class=\"docClass\">compacting</a>, <a href=\"#!/api/java.nio.CharBuffer-method-duplicate\" rel=\"java.nio.CharBuffer-method-duplicate\" class=\"docClass\">duplicating</a>, and <a href=\"#!/api/java.nio.CharBuffer-method-slice\" rel=\"java.nio.CharBuffer-method-slice\" class=\"docClass\">slicing</a>\n   a char buffer.  </p></li></p>\n\n<p> </p>\n\n<p> <p> Char buffers can be created either by <a href=\"#!/api/java.nio.CharBuffer-method-allocate\" rel=\"java.nio.CharBuffer-method-allocate\" class=\"docClass\">&lt;i&gt;allocation&lt;/i&gt;</a>, which allocates space for the buffer's</p>\n\n<p> content, by <i>wrapping</i> an existing\n char array or&#32;string into a buffer, or by creating a\n <a href=\"ByteBuffer.html#views\"><i>view</i></a> of an existing byte buffer.</p>\n\n<p> <p> Like a byte buffer, a char buffer is either <a\n href=\"ByteBuffer.html#direct\"><i>direct</i> or <i>non-direct</i></a>.  A\n char buffer created via the <tt>wrap</tt> methods of this class will\n be non-direct.  A char buffer created as a view of a byte buffer will\n be direct if, and only if, the byte buffer itself is direct.  Whether or not\n a char buffer is direct may be determined by invoking the <a href=\"#!/api/java.nio.CharBuffer-method-isDirect\" rel=\"java.nio.CharBuffer-method-isDirect\" class=\"docClass\">isDirect</a> method.  </p></p>\n\n<p> <p> This class implements the CharSequence interface so that\n character buffers may be used wherever character sequences are accepted, for\n example in the regular-expression package <tt>java.util.regex</tt>.\n </p></p>\n\n<p> <p> Methods in this class that do not otherwise have a value to return are\n specified to return the buffer upon which they are invoked.  This allows\n method invocations to be chained.</p>\n\n<p> The sequence of statements</p>\n\n<p> <blockquote></blockquote></p>\n\n<pre> cb.put(\"text/\");\n cb.put(subtype);\n cb.put(\"; charset=\");\n cb.put(enc);</pre>\n\n\n<p></p>\n\n<p> can, for example, be replaced by the single statement</p>\n\n<p> <blockquote></blockquote></p>\n\n<pre> cb.put(\"text/\").put(subtype).put(\"; charset=\").put(enc);</pre>\n\n\n<p></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-allocate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-allocate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-allocate' class='name expandable'>allocate</a>( <span class='pre'>capacity</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Allocates a new char buffer. ...</div><div class='long'><p>Allocates a new char buffer.</p>\n\n<p> <p> The new buffer's position will be zero, its limit will be its\n capacity, its mark will be undefined, and each of its elements will be\n initialized to zero.  It will have a <a href=\"#!/api/java.nio.CharBuffer-method-array\" rel=\"java.nio.CharBuffer-method-array\" class=\"docClass\">backing array</a>,\n and its <a href=\"#!/api/java.nio.CharBuffer-method-arrayOffset\" rel=\"java.nio.CharBuffer-method-arrayOffset\" class=\"docClass\">array offset</a> will be zero.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>capacity</span> : Number<div class='sub-desc'><p>The new buffer's capacity, in chars</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>The new char buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the <tt>capacity</tt> is a negative integer</p>\n</div></li></ul></div></div></div><div id='method-append' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-append' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-append' class='name expandable'>append</a>( <span class='pre'>c</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the specified char  to this\n buffer&nbsp;&nbsp;(optional operation). ...</div><div class='long'><p>Appends the specified char  to this\n buffer&nbsp;&nbsp;<i>(optional operation)</i>.</p>\n\n<p> <p> An invocation of this method of the form <tt>dst.append(c)</tt>\n behaves in exactly the same way as the invocation</p>\n\n<pre>     dst.put(c) </pre>\n\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : String<div class='sub-desc'><p>The 16-bit char to append</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>This buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BufferOverflowException\n          If there is insufficient space in this buffer</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ReadOnlyBufferException\n          If this buffer is read-only</p>\n</div></li></ul></div></div></div><div id='method-array' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-array' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-array' class='name expandable'>array</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the char array that backs this\n buffer&nbsp;&nbsp;(optional operation). ...</div><div class='long'><p>Returns the char array that backs this\n buffer&nbsp;&nbsp;<i>(optional operation)</i>.</p>\n\n<p> <p> Modifications to this buffer's content will cause the returned\n array's content to be modified, and vice versa.</p>\n\n<p> <p> Invoke the <a href=\"#!/api/java.nio.CharBuffer-method-hasArray\" rel=\"java.nio.CharBuffer-method-hasArray\" class=\"docClass\">hasArray</a> method before invoking this\n method in order to ensure that this buffer has an accessible backing\n array.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The array that backs this buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ReadOnlyBufferException\n          If this buffer is backed by an array but is read-only</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          If this buffer is not backed by an accessible array</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-array\" rel=\"java.nio.Buffer-method-array\" class=\"docClass\">java.nio.Buffer.array</a></p></div></div></div><div id='method-arrayOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-arrayOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-arrayOffset' class='name expandable'>arrayOffset</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the offset within this buffer's backing array of the first\n element of the buffer&nbsp;&nbsp;(optional operat...</div><div class='long'><p>Returns the offset within this buffer's backing array of the first\n element of the buffer&nbsp;&nbsp;<i>(optional operation)</i>.</p>\n\n<p> <p> If this buffer is backed by an array then buffer position <i>p</i>\n corresponds to array index <i>p</i>&nbsp;+&nbsp;<tt>arrayOffset()</tt>.</p>\n\n<p> <p> Invoke the <a href=\"#!/api/java.nio.CharBuffer-method-hasArray\" rel=\"java.nio.CharBuffer-method-hasArray\" class=\"docClass\">hasArray</a> method before invoking this\n method in order to ensure that this buffer has an accessible backing\n array.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The offset within this buffer's array\n          of the first element of the buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ReadOnlyBufferException\n          If this buffer is backed by an array but is read-only</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          If this buffer is not backed by an accessible array</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-arrayOffset\" rel=\"java.nio.Buffer-method-arrayOffset\" class=\"docClass\">java.nio.Buffer.arrayOffset</a></p></div></div></div><div id='method-asReadOnlyBuffer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-asReadOnlyBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-asReadOnlyBuffer' class='name expandable'>asReadOnlyBuffer</a>( <span class='pre'></span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new, read-only char buffer that shares this buffer's\n content. ...</div><div class='long'><p>Creates a new, read-only char buffer that shares this buffer's\n content.</p>\n\n<p> <p> The content of the new buffer will be that of this buffer.  Changes\n to this buffer's content will be visible in the new buffer; the new\n buffer itself, however, will be read-only and will not allow the shared\n content to be modified.  The two buffers' position, limit, and mark\n values will be independent.</p>\n\n<p> <p> The new buffer's capacity, limit, position, and mark values will be\n identical to those of this buffer.</p>\n\n<p> <p> If this buffer is itself read-only then this method behaves in\n exactly the same way as the <a href=\"#!/api/java.nio.CharBuffer-method-duplicate\" rel=\"java.nio.CharBuffer-method-duplicate\" class=\"docClass\">duplicate</a> method.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>The new, read-only char buffer</p>\n</div></li></ul></div></div></div><div id='method-capacity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.nio.Buffer' rel='java.nio.Buffer' class='defined-in docClass'>java.nio.Buffer</a><br/><a href='source/Buffer.html#java-nio-Buffer-method-capacity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.Buffer-method-capacity' class='name expandable'>capacity</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this buffer's capacity. ...</div><div class='long'><p>Returns this buffer's capacity.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The capacity of this buffer</p>\n</div></li></ul></div></div></div><div id='method-charAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-charAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-charAt' class='name expandable'>charAt</a>( <span class='pre'>index</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads the character at the given index relative to the current\n position. ...</div><div class='long'><p>Reads the character at the given index relative to the current\n position.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index of the character to be read, relative to the position;\n         must be non-negative and smaller than <tt>remaining()</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The character at index\n          <tt>position()&nbsp;+&nbsp;index</tt></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IndexOutOfBoundsException\n          If the preconditions on <tt>index</tt> do not hold</p>\n</div></li></ul></div></div></div><div id='method-chars' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-chars' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-chars' class='name expandable'>chars</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-clear\" rel=\"java.nio.Buffer-method-clear\" class=\"docClass\">java.nio.Buffer.clear</a></p></div></div></div><div id='method-compact' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-compact' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-compact' class='name expandable'>compact</a>( <span class='pre'></span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Compacts this buffer&nbsp;&nbsp;(optional operation). ...</div><div class='long'><p>Compacts this buffer&nbsp;&nbsp;<i>(optional operation)</i>.</p>\n\n<p> <p> The chars between the buffer's current position and its limit,\n if any, are copied to the beginning of the buffer.  That is, the\n char at index <i>p</i>&nbsp;=&nbsp;<tt>position()</tt> is copied\n to index zero, the char at index <i>p</i>&nbsp;+&nbsp;1 is copied\n to index one, and so forth until the char at index\n <tt>limit()</tt>&nbsp;-&nbsp;1 is copied to index\n <i>n</i>&nbsp;=&nbsp;<tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>&nbsp;-&nbsp;<i>p</i>.\n The buffer's position is then set to <i>n+1</i> and its limit is set to\n its capacity.  The mark, if defined, is discarded.</p>\n\n<p> <p> The buffer's position is set to the number of chars copied,\n rather than to zero, so that an invocation of this method can be\n followed immediately by an invocation of another relative <i>put</i>\n method. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>This buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ReadOnlyBufferException\n          If this buffer is read-only</p>\n</div></li></ul></div></div></div><div id='method-compareTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this buffer to another. ...</div><div class='long'><p>Compares this buffer to another.</p>\n\n<p> <p> Two char buffers are compared by comparing their sequences of\n remaining elements lexicographically, without regard to the starting\n position of each sequence within its corresponding buffer.</p>\n\n<p> Pairs of {@code char} elements are compared as if by invoking\n Character.compare(char,char).</p>\n\n<p> <p> A char buffer is not comparable to any other type of object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A negative integer, zero, or a positive integer as this buffer\n          is less than, equal to, or greater than the given buffer</p>\n</div></li></ul></div></div></div><div id='method-duplicate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-duplicate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-duplicate' class='name expandable'>duplicate</a>( <span class='pre'></span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new char buffer that shares this buffer's content. ...</div><div class='long'><p>Creates a new char buffer that shares this buffer's content.</p>\n\n<p> <p> The content of the new buffer will be that of this buffer.  Changes\n to this buffer's content will be visible in the new buffer, and vice\n versa; the two buffers' position, limit, and mark values will be\n independent.</p>\n\n<p> <p> The new buffer's capacity, limit, position, and mark values will be\n identical to those of this buffer.  The new buffer will be direct if,\n and only if, this buffer is direct, and it will be read-only if, and\n only if, this buffer is read-only.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>The new char buffer</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-equals' class='name expandable'>equals</a>( <span class='pre'>ob</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this buffer is equal to another object. ...</div><div class='long'><p>Tells whether or not this buffer is equal to another object.</p>\n\n<p> <p> Two char buffers are equal if, and only if,</p>\n\n<p> <ol></ol></p>\n\n<p>   <li><p> They have the same element type,  </p></li></p>\n\n<p>   <li><p> They have the same number of remaining elements, and\n   </p></li></p>\n\n<p>   <li><p> The two sequences of remaining elements, considered\n   independently of their starting positions, are pointwise equal.</p>\n\n<p>   </p></li></p>\n\n<p> </p>\n\n<p> <p> A char buffer is not equal to any other type of object.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ob</span> : Object {Object}<div class='sub-desc'><p>The object to which this buffer is to be compared</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this buffer is equal to the\n           given object</p>\n</div></li></ul></div></div></div><div id='method-flip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-flip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-flip' class='name expandable'>flip</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-flip\" rel=\"java.nio.Buffer-method-flip\" class=\"docClass\">java.nio.Buffer.flip</a></p></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-get' class='name expandable'>get</a>( <span class='pre'>dst</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Relative bulk get method. ...</div><div class='long'><p>Relative bulk <i>get</i> method.</p>\n\n<p> <p> This method transfers chars from this buffer into the given\n destination array.  An invocation of this method of the form\n <tt>src.get(a)</tt> behaves in exactly the same way as the invocation</p>\n\n<pre>     src.get(a, 0, a.length) </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dst</span> : Object {char[]}<div class='sub-desc'><p>The destination array</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>This buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BufferUnderflowException\n          If there are fewer than <tt>length</tt> chars\n          remaining in this buffer</p>\n</div></li></ul></div></div></div><div id='method-hasArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-hasArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-hasArray' class='name expandable'>hasArray</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this buffer is backed by an accessible char\n array. ...</div><div class='long'><p>Tells whether or not this buffer is backed by an accessible char\n array.</p>\n\n<p> <p> If this method returns <tt>true</tt> then the array\n and arrayOffset methods may safely be invoked.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this buffer\n          is backed by an array and is not read-only</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-hasArray\" rel=\"java.nio.Buffer-method-hasArray\" class=\"docClass\">java.nio.Buffer.hasArray</a></p></div></div></div><div id='method-hasRemaining' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.nio.Buffer' rel='java.nio.Buffer' class='defined-in docClass'>java.nio.Buffer</a><br/><a href='source/Buffer.html#java-nio-Buffer-method-hasRemaining' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.Buffer-method-hasRemaining' class='name expandable'>hasRemaining</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether there are any elements between the current position and\n the limit. ...</div><div class='long'><p>Tells whether there are any elements between the current position and\n the limit.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, there is at least one element\n          remaining in this buffer</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current hash code of this buffer. ...</div><div class='long'><p>Returns the current hash code of this buffer.</p>\n\n<p> <p> The hash code of a char buffer depends only upon its remaining\n elements; that is, upon the elements from <tt>position()</tt> up to, and\n including, the element at <tt>limit()</tt>&nbsp;-&nbsp;<tt>1</tt>.</p>\n\n<p> <p> Because buffer hash codes are content-dependent, it is inadvisable\n to use buffers as keys in hash maps or similar data structures unless it\n is known that their contents will not change.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The current hash code of this buffer</p>\n</div></li></ul></div></div></div><div id='method-isDirect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-isDirect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-isDirect' class='name expandable'>isDirect</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this char buffer is direct. ...</div><div class='long'><p>Tells whether or not this char buffer is direct.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this buffer is direct</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-isDirect\" rel=\"java.nio.Buffer-method-isDirect\" class=\"docClass\">java.nio.Buffer.isDirect</a></p></div></div></div><div id='method-isReadOnly' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.nio.Buffer' rel='java.nio.Buffer' class='defined-in docClass'>java.nio.Buffer</a><br/><a href='source/Buffer.html#java-nio-Buffer-method-isReadOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.Buffer-method-isReadOnly' class='name expandable'>isReadOnly</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this buffer is read-only. ...</div><div class='long'><p>Tells whether or not this buffer is read-only.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this buffer is read-only</p>\n</div></li></ul></div></div></div><div id='method-length' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-length' class='name expandable'>length</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the length of this character buffer. ...</div><div class='long'><p>Returns the length of this character buffer.</p>\n\n<p> <p> When viewed as a character sequence, the length of a character\n buffer is simply the number of characters between the position\n (inclusive) and the limit (exclusive); that is, it is equivalent to\n <tt>remaining()</tt>. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The length of this character buffer</p>\n</div></li></ul></div></div></div><div id='method-limit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-limit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-limit' class='name expandable'>limit</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-limit\" rel=\"java.nio.Buffer-method-limit\" class=\"docClass\">java.nio.Buffer.limit</a></p></div></div></div><div id='method-mark' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-mark' class='name expandable'>mark</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-mark\" rel=\"java.nio.Buffer-method-mark\" class=\"docClass\">java.nio.Buffer.mark</a></p></div></div></div><div id='method-order' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-order' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-order' class='name expandable'>order</a>( <span class='pre'></span> ) : Object {java.nio.ByteOrder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves this buffer's byte order. ...</div><div class='long'><p>Retrieves this buffer's byte order.</p>\n\n<p> <p> The byte order of a char buffer created by allocation or by\n wrapping an existing <tt>char</tt> array is the <a href=\"#!/api/java.nio.ByteOrder-method-nativeOrder\" rel=\"java.nio.ByteOrder-method-nativeOrder\" class=\"docClass\">native order</a> of the underlying\n hardware.  The byte order of a char buffer created as a <a\n href=\"ByteBuffer.html#views\">view</a> of a byte buffer is that of the\n byte buffer at the moment that the view is created.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.ByteOrder}</span><div class='sub-desc'><p>This buffer's byte order</p>\n</div></li></ul></div></div></div><div id='method-position' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-position' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-position' class='name expandable'>position</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-position\" rel=\"java.nio.Buffer-method-position\" class=\"docClass\">java.nio.Buffer.position</a></p></div></div></div><div id='method-put' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-put' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-put' class='name expandable'>put</a>( <span class='pre'>src</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Relative bulk put method&nbsp;&nbsp;(optional operation). ...</div><div class='long'><p>Relative bulk <i>put</i> method&nbsp;&nbsp;<i>(optional operation)</i>.</p>\n\n<p> <p> This method transfers the entire content of the given source string\n into this buffer.  An invocation of this method of the form\n <tt>dst.put(s)</tt> behaves in exactly the same way as the invocation</p>\n\n<pre>     dst.put(s, 0, s.length()) </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>src</span> : String<div class='sub-desc'><p>The source string</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>This buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BufferOverflowException\n          If there is insufficient space in this buffer</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ReadOnlyBufferException\n          If this buffer is read-only</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-read' class='name expandable'>read</a>( <span class='pre'>target</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to read characters into the specified character buffer. ...</div><div class='long'><p>Attempts to read characters into the specified character buffer.\n The buffer is used as a repository of characters as-is: the only\n changes made are the results of a put operation. No flipping or\n rewinding of the buffer is performed.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Object {CharBuffer}<div class='sub-desc'><p>the buffer to read characters into</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of characters added to the buffer, or\n         -1 if this source of characters is at its end</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if target is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ReadOnlyBufferException if target is a read only buffer</p>\n</div></li></ul></div></div></div><div id='method-remaining' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.nio.Buffer' rel='java.nio.Buffer' class='defined-in docClass'>java.nio.Buffer</a><br/><a href='source/Buffer.html#java-nio-Buffer-method-remaining' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.Buffer-method-remaining' class='name expandable'>remaining</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of elements between the current position and the\n limit. ...</div><div class='long'><p>Returns the number of elements between the current position and the\n limit.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of elements remaining in this buffer</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-reset\" rel=\"java.nio.Buffer-method-reset\" class=\"docClass\">java.nio.Buffer.reset</a></p></div></div></div><div id='method-rewind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-rewind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-rewind' class='name expandable'>rewind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.nio.Buffer-method-rewind\" rel=\"java.nio.Buffer-method-rewind\" class=\"docClass\">java.nio.Buffer.rewind</a></p></div></div></div><div id='method-slice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-slice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-slice' class='name expandable'>slice</a>( <span class='pre'></span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new char buffer whose content is a shared subsequence of\n this buffer's content. ...</div><div class='long'><p>Creates a new char buffer whose content is a shared subsequence of\n this buffer's content.</p>\n\n<p> <p> The content of the new buffer will start at this buffer's current\n position.  Changes to this buffer's content will be visible in the new\n buffer, and vice versa; the two buffers' position, limit, and mark\n values will be independent.</p>\n\n<p> <p> The new buffer's position will be zero, its capacity and its limit\n will be the number of chars remaining in this buffer, and its mark\n will be undefined.  The new buffer will be direct if, and only if, this\n buffer is direct, and it will be read-only if, and only if, this buffer\n is read-only.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>The new char buffer</p>\n</div></li></ul></div></div></div><div id='method-subSequence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-subSequence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-subSequence' class='name expandable'>subSequence</a>( <span class='pre'>start, end</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new character buffer that represents the specified subsequence\n of this buffer, relative to the current pos...</div><div class='long'><p>Creates a new character buffer that represents the specified subsequence\n of this buffer, relative to the current position.</p>\n\n<p> <p> The new buffer will share this buffer's content; that is, if the\n content of this buffer is mutable then modifications to one buffer will\n cause the other to be modified.  The new buffer's capacity will be that\n of this buffer, its position will be\n <tt>position()</tt>&nbsp;+&nbsp;<tt>start</tt>, and its limit will be\n <tt>position()</tt>&nbsp;+&nbsp;<tt>end</tt>.  The new buffer will be\n direct if, and only if, this buffer is direct, and it will be read-only\n if, and only if, this buffer is read-only.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>The index, relative to the current position, of the first\n         character in the subsequence; must be non-negative and no larger\n         than <tt>remaining()</tt></p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>The index, relative to the current position, of the character\n         following the last character in the subsequence; must be no\n         smaller than <tt>start</tt> and no larger than\n         <tt>remaining()</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>The new character buffer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IndexOutOfBoundsException\n          If the preconditions on <tt>start</tt> and <tt>end</tt>\n          do not hold</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string containing the characters in this buffer. ...</div><div class='long'><p>Returns a string containing the characters in this buffer.</p>\n\n<p> <p> The first character of the resulting string will be the character at\n this buffer's position, while the last character will be the character\n at index <tt>limit()</tt>&nbsp;-&nbsp;1.  Invoking this method does not\n change the buffer's position. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The specified string</p>\n</div></li></ul></div></div></div><div id='method-wrap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.CharBuffer'>java.nio.CharBuffer</span><br/><a href='source/CharBuffer.html#java-nio-CharBuffer-method-wrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.CharBuffer-method-wrap' class='name expandable'>wrap</a>( <span class='pre'>csq</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Wraps a character sequence into a buffer. ...</div><div class='long'><p>Wraps a character sequence into a buffer.</p>\n\n<p> <p> The content of the new, read-only buffer will be the content of the\n given character sequence.  The new buffer's capacity and limit will be\n <tt>csq.length()</tt>, its position will be zero, and its mark will be\n undefined.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>csq</span> : Object {CharSequence}<div class='sub-desc'><p>The character sequence from which the new character buffer is to\n         be created</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>The new character buffer</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});