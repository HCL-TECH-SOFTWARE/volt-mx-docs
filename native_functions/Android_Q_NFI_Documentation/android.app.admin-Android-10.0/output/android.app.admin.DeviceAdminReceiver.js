Ext.data.JsonP.android_app_admin_DeviceAdminReceiver({"tagname":"class","name":"android.app.admin.DeviceAdminReceiver","autodetected":{},"files":[{"filename":"DeviceAdminReceiver.js","href":"DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver"}],"extends":"android.content.BroadcastReceiver","members":[{"name":"ACTION_CHOOSE_PRIVATE_KEY_ALIAS","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_CHOOSE_PRIVATE_KEY_ALIAS","meta":{}},{"name":"ACTION_DEVICE_ADMIN_DISABLED","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_DEVICE_ADMIN_DISABLED","meta":{}},{"name":"ACTION_DEVICE_ADMIN_DISABLE_REQUESTED","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED","meta":{}},{"name":"ACTION_DEVICE_ADMIN_ENABLED","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_DEVICE_ADMIN_ENABLED","meta":{}},{"name":"ACTION_LOCK_TASK_ENTERING","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_LOCK_TASK_ENTERING","meta":{}},{"name":"ACTION_LOCK_TASK_EXITING","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_LOCK_TASK_EXITING","meta":{}},{"name":"ACTION_NETWORK_LOGS_AVAILABLE","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_NETWORK_LOGS_AVAILABLE","meta":{}},{"name":"ACTION_PASSWORD_CHANGED","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_PASSWORD_CHANGED","meta":{}},{"name":"ACTION_PASSWORD_EXPIRING","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_PASSWORD_EXPIRING","meta":{}},{"name":"ACTION_PASSWORD_FAILED","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_PASSWORD_FAILED","meta":{}},{"name":"ACTION_PASSWORD_SUCCEEDED","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_PASSWORD_SUCCEEDED","meta":{}},{"name":"ACTION_PROFILE_PROVISIONING_COMPLETE","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-ACTION_PROFILE_PROVISIONING_COMPLETE","meta":{}},{"name":"BUGREPORT_FAILURE_FAILED_COMPLETING","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-BUGREPORT_FAILURE_FAILED_COMPLETING","meta":{}},{"name":"BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE","meta":{}},{"name":"DEVICE_ADMIN_META_DATA","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-DEVICE_ADMIN_META_DATA","meta":{}},{"name":"EXTRA_DISABLE_WARNING","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-EXTRA_DISABLE_WARNING","meta":{}},{"name":"EXTRA_LOCK_TASK_PACKAGE","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-EXTRA_LOCK_TASK_PACKAGE","meta":{}},{"name":"EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE","tagname":"property","owner":"android.app.admin.DeviceAdminReceiver","id":"property-EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE","meta":{}},{"name":"getManager","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-getManager","meta":{}},{"name":"getWho","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-getWho","meta":{}},{"name":"onBugreportFailed","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onBugreportFailed","meta":{}},{"name":"onBugreportShared","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onBugreportShared","meta":{}},{"name":"onBugreportSharingDeclined","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onBugreportSharingDeclined","meta":{}},{"name":"onChoosePrivateKeyAlias","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onChoosePrivateKeyAlias","meta":{}},{"name":"onDisableRequested","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onDisableRequested","meta":{}},{"name":"onDisabled","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onDisabled","meta":{}},{"name":"onEnabled","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onEnabled","meta":{}},{"name":"onLockTaskModeEntering","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onLockTaskModeEntering","meta":{}},{"name":"onLockTaskModeExiting","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onLockTaskModeExiting","meta":{}},{"name":"onNetworkLogsAvailable","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onNetworkLogsAvailable","meta":{}},{"name":"onPasswordChanged","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onPasswordChanged","meta":{}},{"name":"onPasswordExpiring","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onPasswordExpiring","meta":{}},{"name":"onPasswordFailed","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onPasswordFailed","meta":{}},{"name":"onPasswordSucceeded","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onPasswordSucceeded","meta":{}},{"name":"onProfileProvisioningComplete","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onProfileProvisioningComplete","meta":{}},{"name":"onReadyForUserInitialization","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onReadyForUserInitialization","meta":{"deprecated":{"text":"<p>Do not use</p>\n"}}},{"name":"onReceive","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onReceive","meta":{}},{"name":"onSecurityLogsAvailable","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onSecurityLogsAvailable","meta":{}},{"name":"onSystemUpdatePending","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onSystemUpdatePending","meta":{}},{"name":"onTransferAffiliatedProfileOwnershipComplete","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onTransferAffiliatedProfileOwnershipComplete","meta":{}},{"name":"onTransferOwnershipComplete","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onTransferOwnershipComplete","meta":{}},{"name":"onUserAdded","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onUserAdded","meta":{}},{"name":"onUserRemoved","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onUserRemoved","meta":{}},{"name":"onUserStarted","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onUserStarted","meta":{}},{"name":"onUserStopped","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onUserStopped","meta":{}},{"name":"onUserSwitched","tagname":"method","owner":"android.app.admin.DeviceAdminReceiver","id":"method-onUserSwitched","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.admin.DeviceAdminReceiver","short_doc":"Base class for implementing a device administration component. ...","classIcon":"icon-class","superclasses":["android.content.BroadcastReceiver"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.content.BroadcastReceiver<div class='subclass '><strong>android.app.admin.DeviceAdminReceiver</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver' target='_blank'>DeviceAdminReceiver.js</a></div></pre><div class='doc-contents'><p>Base class for implementing a device administration component.  This\n class provides a convenience for interpreting the raw intent actions\n that are sent by the system.</p>\n\n<p> <p>The callback methods, like the base\n Intent) BroadcastReceiver.onReceive()\n method, happen on the main thread of the process.  Thus long running\n operations must be done on another thread.  Note that because a receiver\n is done once returning from its receive function, such long-running operations\n should probably be done in a Service.</p>\n\n<p> <p>When publishing your DeviceAdmin subclass as a receiver, it must\n handle <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_ENABLED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_ENABLED\" class=\"docClass\">ACTION_DEVICE_ADMIN_ENABLED</a> and require the\n android.Manifest.permission.BIND_DEVICE_ADMIN permission.  A typical\n manifest entry would look like:</p></p>\n\n<p> {@sample development/samples/ApiDemos/AndroidManifest.xml device_admin_declaration}</p>\n\n<p> <p>The meta-data referenced here provides addition information specific\n to the device administrator, as parsed by the <a href=\"#!/api/android.app.admin.DeviceAdminInfo\" rel=\"android.app.admin.DeviceAdminInfo\" class=\"docClass\">android.app.admin.DeviceAdminInfo</a> class.\n A typical file would be:</p></p>\n\n<p> {@sample development/samples/ApiDemos/res/xml/device_admin_sample.xml meta_data}</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about device administration, read the\n <a href=\"{@docRoot}guide/topics/admin/device-admin.html\">Device Administration</a>\n developer guide.</p>\n </div></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_CHOOSE_PRIVATE_KEY_ALIAS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_CHOOSE_PRIVATE_KEY_ALIAS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_CHOOSE_PRIVATE_KEY_ALIAS' class='name expandable'>ACTION_CHOOSE_PRIVATE_KEY_ALIAS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast action: notify that some app is attempting to choose a KeyChain key. ...</div><div class='long'><p>Broadcast action: notify that some app is attempting to choose a KeyChain key.\n@see DeviceAdminReceiver#onChoosePrivateKeyAlias\n@see DelegatedAdminReceiver#onChoosePrivateKeyAlias</p>\n<p>Defaults to: <code>&quot;android.app.action.CHOOSE_PRIVATE_KEY_ALIAS&quot;</code></p></div></div></div><div id='property-ACTION_DEVICE_ADMIN_DISABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLED' class='name expandable'>ACTION_DEVICE_ADMIN_DISABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent to a device administrator when the user has disabled\nit. ...</div><div class='long'><p>Action sent to a device administrator when the user has disabled\nit.  Upon return, the application no longer has access to the\nprotected device policy manager APIs.  You will generally\nhandle this in Intent).  Note\nthat this action will be\nsent the receiver regardless of whether it is explicitly listed in\nits intent filter.</p>\n<p>Defaults to: <code>&quot;android.app.action.DEVICE_ADMIN_DISABLED&quot;</code></p></div></div></div><div id='property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED' class='name expandable'>ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent to a device administrator when the user has requested to\ndisable it, but before this has actually been done. ...</div><div class='long'><p>Action sent to a device administrator when the user has requested to\ndisable it, but before this has actually been done.  This gives you\na chance to supply a message to the user about the impact of\ndisabling your admin, by setting the extra field\n<a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-EXTRA_DISABLE_WARNING\" rel=\"android.app.admin.DeviceAdminReceiver-property-EXTRA_DISABLE_WARNING\" class=\"docClass\">EXTRA_DISABLE_WARNING</a> in the result Intent.  If not set,\nno warning will be displayed.  If set, the given text will be shown\nto the user before they disable your admin.</p>\n<p>Defaults to: <code>&quot;android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED&quot;</code></p></div></div></div><div id='property-ACTION_DEVICE_ADMIN_ENABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_ENABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_ENABLED' class='name expandable'>ACTION_DEVICE_ADMIN_ENABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This is the primary action that a device administrator must implement to be\nallowed to manage a device. ...</div><div class='long'><p>This is the primary action that a device administrator must implement to be\nallowed to manage a device.  This will be set to the receiver\nwhen the user enables it for administration.  You will generally\nhandle this in Intent).  To be\nsupported, the receiver must also require the\nandroid.Manifest.permission.BIND_DEVICE_ADMIN permission so\nthat other applications can not abuse it.</p>\n<p>Defaults to: <code>&quot;android.app.action.DEVICE_ADMIN_ENABLED&quot;</code></p></div></div></div><div id='property-ACTION_LOCK_TASK_ENTERING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_LOCK_TASK_ENTERING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_LOCK_TASK_ENTERING' class='name expandable'>ACTION_LOCK_TASK_ENTERING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent to a device administrator to notify that the device is entering\nlock task mode. ...</div><div class='long'><p>Action sent to a device administrator to notify that the device is entering\nlock task mode.  The extra <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-EXTRA_LOCK_TASK_PACKAGE\" rel=\"android.app.admin.DeviceAdminReceiver-property-EXTRA_LOCK_TASK_PACKAGE\" class=\"docClass\">EXTRA_LOCK_TASK_PACKAGE</a>\nwill describe the package using lock task mode.</p>\n\n<p><p>The calling device admin must be the device owner or profile\nowner to receive this broadcast.</p>\n\n<p>@see DevicePolicyManager#isLockTaskPermitted(String)</p>\n<p>Defaults to: <code>&quot;android.app.action.LOCK_TASK_ENTERING&quot;</code></p></div></div></div><div id='property-ACTION_LOCK_TASK_EXITING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_LOCK_TASK_EXITING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_LOCK_TASK_EXITING' class='name expandable'>ACTION_LOCK_TASK_EXITING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent to a device administrator to notify that the device is exiting\nlock task mode. ...</div><div class='long'><p>Action sent to a device administrator to notify that the device is exiting\nlock task mode.</p>\n\n<p><p>The calling device admin must be the device owner or profile\nowner to receive this broadcast.</p>\n\n<p>@see DevicePolicyManager#isLockTaskPermitted(String)</p>\n<p>Defaults to: <code>&quot;android.app.action.LOCK_TASK_EXITING&quot;</code></p></div></div></div><div id='property-ACTION_NETWORK_LOGS_AVAILABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_NETWORK_LOGS_AVAILABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_NETWORK_LOGS_AVAILABLE' class='name expandable'>ACTION_NETWORK_LOGS_AVAILABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast action: notify that a new batch of network logs is ready to be collected. ...</div><div class='long'><p>Broadcast action: notify that a new batch of network logs is ready to be collected.\n@see DeviceAdminReceiver#onNetworkLogsAvailable\n@see DelegatedAdminReceiver#onNetworkLogsAvailable</p>\n<p>Defaults to: <code>&quot;android.app.action.NETWORK_LOGS_AVAILABLE&quot;</code></p></div></div></div><div id='property-ACTION_PASSWORD_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_PASSWORD_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_CHANGED' class='name expandable'>ACTION_PASSWORD_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent to a device administrator when the user has changed the password of their device\nor profile challenge. ...</div><div class='long'><p>Action sent to a device administrator when the user has changed the password of their device\nor profile challenge.  You can at this point check the characteristics\nof the new password with android.app.admin.DevicePolicyManager.isActivePasswordSufficient().\nYou will generally\nhandle this in Intent, UserHandle).</p>\n\n<p><p>The calling device admin must have requested\n<a href=\"#!/api/android.app.admin.DeviceAdminInfo-property-USES_POLICY_LIMIT_PASSWORD\" rel=\"android.app.admin.DeviceAdminInfo-property-USES_POLICY_LIMIT_PASSWORD\" class=\"docClass\">android.app.admin.DeviceAdminInfo.USES_POLICY_LIMIT_PASSWORD</a> to receive\nthis broadcast.</p>\n<p>Defaults to: <code>&quot;android.app.action.ACTION_PASSWORD_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_PASSWORD_EXPIRING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_PASSWORD_EXPIRING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_EXPIRING' class='name expandable'>ACTION_PASSWORD_EXPIRING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action periodically sent to a device administrator when the device or profile challenge\npassword is expiring. ...</div><div class='long'><p>Action periodically sent to a device administrator when the device or profile challenge\npassword is expiring.  You will generally\nhandle this in Intent, UserHandle).</p>\n\n<p><p>The calling device admin must have requested\n<a href=\"#!/api/android.app.admin.DeviceAdminInfo-property-USES_POLICY_EXPIRE_PASSWORD\" rel=\"android.app.admin.DeviceAdminInfo-property-USES_POLICY_EXPIRE_PASSWORD\" class=\"docClass\">android.app.admin.DeviceAdminInfo.USES_POLICY_EXPIRE_PASSWORD</a> to receive\nthis broadcast.</p>\n<p>Defaults to: <code>&quot;android.app.action.ACTION_PASSWORD_EXPIRING&quot;</code></p></div></div></div><div id='property-ACTION_PASSWORD_FAILED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_PASSWORD_FAILED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_FAILED' class='name expandable'>ACTION_PASSWORD_FAILED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent to a device administrator when the user has entered an incorrect device\nor profile challenge password. ...</div><div class='long'><p>Action sent to a device administrator when the user has entered an incorrect device\nor profile challenge password.  You can at this point check the\nnumber of failed password attempts there have been with\nandroid.app.admin.DevicePolicyManager.getCurrentFailedPasswordAttempts().  You will generally\nhandle this in Intent, UserHandle).</p>\n\n<p><p>The calling device admin must have requested\n<a href=\"#!/api/android.app.admin.DeviceAdminInfo-property-USES_POLICY_WATCH_LOGIN\" rel=\"android.app.admin.DeviceAdminInfo-property-USES_POLICY_WATCH_LOGIN\" class=\"docClass\">android.app.admin.DeviceAdminInfo.USES_POLICY_WATCH_LOGIN</a> to receive\nthis broadcast.</p>\n<p>Defaults to: <code>&quot;android.app.action.ACTION_PASSWORD_FAILED&quot;</code></p></div></div></div><div id='property-ACTION_PASSWORD_SUCCEEDED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_PASSWORD_SUCCEEDED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_SUCCEEDED' class='name expandable'>ACTION_PASSWORD_SUCCEEDED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent to a device administrator when the user has successfully entered their device\nor profile challenge passwo...</div><div class='long'><p>Action sent to a device administrator when the user has successfully entered their device\nor profile challenge password, after failing one or more times.  You will generally\nhandle this in Intent, UserHandle).</p>\n\n<p><p>The calling device admin must have requested\n<a href=\"#!/api/android.app.admin.DeviceAdminInfo-property-USES_POLICY_WATCH_LOGIN\" rel=\"android.app.admin.DeviceAdminInfo-property-USES_POLICY_WATCH_LOGIN\" class=\"docClass\">android.app.admin.DeviceAdminInfo.USES_POLICY_WATCH_LOGIN</a> to receive\nthis broadcast.</p>\n<p>Defaults to: <code>&quot;android.app.action.ACTION_PASSWORD_SUCCEEDED&quot;</code></p></div></div></div><div id='property-ACTION_PROFILE_PROVISIONING_COMPLETE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-ACTION_PROFILE_PROVISIONING_COMPLETE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PROFILE_PROVISIONING_COMPLETE' class='name expandable'>ACTION_PROFILE_PROVISIONING_COMPLETE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile\nor managed device has com...</div><div class='long'><p>Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile\nor managed device has completed successfully.</p>\n\n<p><p>The broadcast is limited to the profile that will be managed by the application that\nrequested provisioning. In the device owner case the profile is the primary user.\nThe broadcast will also be limited to the <a href=\"#!/api/android.app.admin.DeviceAdminReceiver\" rel=\"android.app.admin.DeviceAdminReceiver\" class=\"docClass\">android.app.admin.DeviceAdminReceiver</a> component\nspecified in the original intent or NFC bump that started the provisioning process\n(see <a href=\"#!/api/android.app.admin.DevicePolicyManager-property-ACTION_PROVISION_MANAGED_PROFILE\" rel=\"android.app.admin.DevicePolicyManager-property-ACTION_PROVISION_MANAGED_PROFILE\" class=\"docClass\">android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE</a>).</p>\n\n<p><p>A device admin application which listens to this intent can find out if the device was\nprovisioned for the device owner or profile owner case by calling respectively\n<a href=\"#!/api/android.app.admin.DevicePolicyManager-method-isDeviceOwnerApp\" rel=\"android.app.admin.DevicePolicyManager-method-isDeviceOwnerApp\" class=\"docClass\">android.app.admin.DevicePolicyManager.isDeviceOwnerApp</a> and\n<a href=\"#!/api/android.app.admin.DevicePolicyManager-method-isProfileOwnerApp\" rel=\"android.app.admin.DevicePolicyManager-method-isProfileOwnerApp\" class=\"docClass\">android.app.admin.DevicePolicyManager.isProfileOwnerApp</a>. You will generally handle\nthis in <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onProfileProvisioningComplete\" rel=\"android.app.admin.DeviceAdminReceiver-method-onProfileProvisioningComplete\" class=\"docClass\">onProfileProvisioningComplete</a>.</p>\n\n<p>@see DevicePolicyManager#ACTION_PROVISIONING_SUCCESSFUL</p>\n<p>Defaults to: <code>&quot;android.app.action.PROFILE_PROVISIONING_COMPLETE&quot;</code></p></div></div></div><div id='property-BUGREPORT_FAILURE_FAILED_COMPLETING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-BUGREPORT_FAILURE_FAILED_COMPLETING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-BUGREPORT_FAILURE_FAILED_COMPLETING' class='name expandable'>BUGREPORT_FAILURE_FAILED_COMPLETING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bugreport completion process failed. ...</div><div class='long'><p>Bugreport completion process failed.</p>\n\n<p><p>If this error code is received, the requesting of bugreport can be retried.\n@see DevicePolicyManager#requestBugreport</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE' class='name expandable'>BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bugreport has been created, but is no longer available for collection. ...</div><div class='long'><p>Bugreport has been created, but is no longer available for collection.</p>\n\n<p><p>This error likely occurs because the user of the device hasn't consented to share\nthe bugreport for a long period after its creation.</p>\n\n<p><p>If this error code is received, the requesting of bugreport can be retried.\n@see DevicePolicyManager#requestBugreport</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-DEVICE_ADMIN_META_DATA' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-DEVICE_ADMIN_META_DATA' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-DEVICE_ADMIN_META_DATA' class='name expandable'>DEVICE_ADMIN_META_DATA</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Name under which a DevicePolicy component publishes information\nabout itself. ...</div><div class='long'><p>Name under which a DevicePolicy component publishes information\nabout itself.  This meta-data must reference an XML resource containing\na device-admin tag.</p>\n<p>Defaults to: <code>&quot;android.app.device_admin&quot;</code></p></div></div></div><div id='property-EXTRA_DISABLE_WARNING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-EXTRA_DISABLE_WARNING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-EXTRA_DISABLE_WARNING' class='name expandable'>EXTRA_DISABLE_WARNING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A CharSequence that can be shown to the user informing them of the\nimpact of disabling your admin. ...</div><div class='long'><p>A CharSequence that can be shown to the user informing them of the\nimpact of disabling your admin.</p>\n\n<p>@see <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED\" class=\"docClass\">ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</a></p>\n<p>Defaults to: <code>&quot;android.app.extra.DISABLE_WARNING&quot;</code></p></div></div></div><div id='property-EXTRA_LOCK_TASK_PACKAGE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-EXTRA_LOCK_TASK_PACKAGE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-EXTRA_LOCK_TASK_PACKAGE' class='name expandable'>EXTRA_LOCK_TASK_PACKAGE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string containing the name of the package entering lock task mode. ...</div><div class='long'><p>A string containing the name of the package entering lock task mode.</p>\n\n<p>@see <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_LOCK_TASK_ENTERING\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_LOCK_TASK_ENTERING\" class=\"docClass\">ACTION_LOCK_TASK_ENTERING</a></p>\n<p>Defaults to: <code>&quot;android.app.extra.LOCK_TASK_PACKAGE&quot;</code></p></div></div></div><div id='property-EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-property-EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-property-EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE' class='name expandable'>EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A android.os.Parcelable extra of type android.os.PersistableBundle that\nallows a mobile device management application...</div><div class='long'><p>A android.os.Parcelable extra of type android.os.PersistableBundle that\nallows a mobile device management application to pass data to the management application\ninstance after owner transfer.</p>\n\n<p><p>If the transfer is successful, the new owner receives the data in\nPersistableBundle).\nThe bundle is not changed during the ownership transfer.</p>\n\n<p>@see DevicePolicyManager#transferOwnership(ComponentName, ComponentName, PersistableBundle)</p>\n<p>Defaults to: <code>&quot;android.app.extra.TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getManager' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-getManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-getManager' class='name expandable'>getManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the DevicePolicyManager interface for this administrator to work\n with the system. ...</div><div class='long'><p>Retrieve the DevicePolicyManager interface for this administrator to work\n with the system.</p>\n</div></div></div><div id='method-getWho' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-getWho' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-getWho' class='name expandable'>getWho</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the ComponentName describing who this device administrator is, for\n use in android.app.admin.DevicePolicyMan...</div><div class='long'><p>Retrieve the ComponentName describing who this device administrator is, for\n use in <a href=\"#!/api/android.app.admin.DevicePolicyManager\" rel=\"android.app.admin.DevicePolicyManager\" class=\"docClass\">android.app.admin.DevicePolicyManager</a> APIs that require the administrator to\n identify itself.</p>\n</div></div></div><div id='method-onBugreportFailed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onBugreportFailed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onBugreportFailed' class='name expandable'>onBugreportFailed</a>( <span class='pre'>context, intent, failureCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the bugreport collection flow has failed. ...</div><div class='long'><p>Called when the bugreport collection flow has failed.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>failureCode</span> : Number<div class='sub-desc'><p>int containing failure code. One of\n <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-BUGREPORT_FAILURE_FAILED_COMPLETING\" rel=\"android.app.admin.DeviceAdminReceiver-property-BUGREPORT_FAILURE_FAILED_COMPLETING\" class=\"docClass\">BUGREPORT_FAILURE_FAILED_COMPLETING</a>\n or <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE\" rel=\"android.app.admin.DeviceAdminReceiver-property-BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE\" class=\"docClass\">BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE</a>\n@see DevicePolicyManager#requestBugreport</p>\n</div></li></ul></div></div></div><div id='method-onBugreportShared' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onBugreportShared' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onBugreportShared' class='name expandable'>onBugreportShared</a>( <span class='pre'>context, intent, bugreportHash</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the bugreport has been shared with the device administrator app. ...</div><div class='long'><p>Called when the bugreport has been shared with the device administrator app.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>. Contains the URI of\n the bugreport file (with MIME type \"application/vnd.android.bugreport\"), that can be accessed\n by calling Intent.getData()</p>\n</div></li><li><span class='pre'>bugreportHash</span> : String<div class='sub-desc'><p>SHA-256 hash of the bugreport file.\n@see DevicePolicyManager#requestBugreport</p>\n</div></li></ul></div></div></div><div id='method-onBugreportSharingDeclined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onBugreportSharingDeclined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onBugreportSharingDeclined' class='name expandable'>onBugreportSharingDeclined</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when sharing a bugreport has been cancelled by the user of the device. ...</div><div class='long'><p>Called when sharing a bugreport has been cancelled by the user of the device.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.\n@see DevicePolicyManager#requestBugreport</p>\n</div></li></ul></div></div></div><div id='method-onChoosePrivateKeyAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onChoosePrivateKeyAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onChoosePrivateKeyAlias' class='name expandable'>onChoosePrivateKeyAlias</a>( <span class='pre'>context, intent, uid, uri, alias</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows this receiver to select the alias for a private key and certificate pair for\n authentication. ...</div><div class='long'><p>Allows this receiver to select the alias for a private key and certificate pair for\n authentication. If this method returns null, the default android.app.Activity will be\n shown that lets the user pick a private key and certificate pair.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>The uid of the app asking for the private key and certificate pair.</p>\n</div></li><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The URI to authenticate, may be null.</p>\n</div></li><li><span class='pre'>alias</span> : String<div class='sub-desc'><p>The alias preselected by the client, or null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The private key alias to return and grant access to.\n@see KeyChain#choosePrivateKeyAlias</p>\n</div></li></ul></div></div></div><div id='method-onDisableRequested' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onDisableRequested' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onDisableRequested' class='name expandable'>onDisableRequested</a>( <span class='pre'>context, intent</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the user has asked to disable the administrator, as a result of\n receiving ACTION_DEVICE_ADMIN_DISABLE_RE...</div><div class='long'><p>Called when the user has asked to disable the administrator, as a result of\n receiving <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLE_REQUESTED\" class=\"docClass\">ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</a>, giving you\n a chance to present a warning message to them.  The message is returned\n as the result; if null is returned (the default implementation), no\n message will be displayed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>Return the warning message to display to the user before\n being disabled; if null is returned, no message is displayed.</p>\n</div></li></ul></div></div></div><div id='method-onDisabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onDisabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onDisabled' class='name expandable'>onDisabled</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called prior to the administrator being disabled, as a result of\n receiving ACTION_DEVICE_ADMIN_DISABLED. ...</div><div class='long'><p>Called prior to the administrator being disabled, as a result of\n receiving <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_DISABLED\" class=\"docClass\">ACTION_DEVICE_ADMIN_DISABLED</a>.  Upon return, you\n can no longer use the protected parts of the <a href=\"#!/api/android.app.admin.DevicePolicyManager\" rel=\"android.app.admin.DevicePolicyManager\" class=\"docClass\">android.app.admin.DevicePolicyManager</a>\n API.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li></ul></div></div></div><div id='method-onEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onEnabled' class='name expandable'>onEnabled</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called after the administrator is first enabled, as a result of\n receiving ACTION_DEVICE_ADMIN_ENABLED. ...</div><div class='long'><p>Called after the administrator is first enabled, as a result of\n receiving <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_ENABLED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_DEVICE_ADMIN_ENABLED\" class=\"docClass\">ACTION_DEVICE_ADMIN_ENABLED</a>.  At this point you\n can use <a href=\"#!/api/android.app.admin.DevicePolicyManager\" rel=\"android.app.admin.DevicePolicyManager\" class=\"docClass\">android.app.admin.DevicePolicyManager</a> to set your desired policies.</p>\n\n<p> <p> If the admin is activated by a device owner, then the intent\n may contain private extras that are relevant to user setup.\n {@see DevicePolicyManager#createAndManageUser(ComponentName, String, ComponentName,\n      PersistableBundle, int)}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li></ul></div></div></div><div id='method-onLockTaskModeEntering' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onLockTaskModeEntering' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onLockTaskModeEntering' class='name expandable'>onLockTaskModeEntering</a>( <span class='pre'>context, intent, pkg</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a device is entering lock task mode. ...</div><div class='long'><p>Called when a device is entering lock task mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>pkg</span> : String<div class='sub-desc'><p>The authorized package using lock task mode.</p>\n</div></li></ul></div></div></div><div id='method-onLockTaskModeExiting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onLockTaskModeExiting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onLockTaskModeExiting' class='name expandable'>onLockTaskModeExiting</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a device is exiting lock task mode. ...</div><div class='long'><p>Called when a device is exiting lock task mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li></ul></div></div></div><div id='method-onNetworkLogsAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onNetworkLogsAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onNetworkLogsAvailable' class='name expandable'>onNetworkLogsAvailable</a>( <span class='pre'>context, intent, batchToken, networkLogsCount</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called each time a new batch of network logs can be retrieved. ...</div><div class='long'><p>Called each time a new batch of network logs can be retrieved. This callback method will only\n ever be called when network logging is enabled. The logs can only be retrieved while network\n logging is enabled.</p>\n\n<p> <p>If a secondary user or profile is created, this callback won't be received until all users\n become affiliated again (even if network logging is enabled). It will also no longer be\n possible to retrieve the network logs batch with the most recent {@code batchToken} provided\n by this callback. See <a href=\"#!/api/android.app.admin.DevicePolicyManager-method-setAffiliationIds\" rel=\"android.app.admin.DevicePolicyManager-method-setAffiliationIds\" class=\"docClass\">android.app.admin.DevicePolicyManager.setAffiliationIds</a>.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>batchToken</span> : Number<div class='sub-desc'><p>The token representing the current batch of network logs.</p>\n</div></li><li><span class='pre'>networkLogsCount</span> : Number<div class='sub-desc'><p>The total count of events in the current batch of network logs.\n@see DevicePolicyManager#retrieveNetworkLogs</p>\n</div></li></ul></div></div></div><div id='method-onPasswordChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onPasswordChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onPasswordChanged' class='name expandable'>onPasswordChanged</a>( <span class='pre'>context, intent, user</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called after the user has changed their device or profile challenge password, as a result of\n receiving ACTION_PASSWO...</div><div class='long'><p>Called after the user has changed their device or profile challenge password, as a result of\n receiving <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_CHANGED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_CHANGED\" class=\"docClass\">ACTION_PASSWORD_CHANGED</a>.  At this point you\n can use android.app.admin.DevicePolicyManager.getPasswordQuality(android.content.ComponentName)\n to retrieve the active password characteristics.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The user or profile for whom the password changed. To see whether this\n        user is the current profile or a parent user, check for equality with\n        Process.myUserHandle.</p>\n</div></li></ul></div></div></div><div id='method-onPasswordExpiring' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onPasswordExpiring' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onPasswordExpiring' class='name expandable'>onPasswordExpiring</a>( <span class='pre'>context, intent, user</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called periodically when the device or profile challenge password is about to expire\n or has expired. ...</div><div class='long'><p>Called periodically when the device or profile challenge password is about to expire\n or has expired.  It will typically be called at these times: on device boot, once per day\n before the password expires, and at the time when the password expires.</p>\n\n<p> <p>If the password is not updated by the user, this method will continue to be called\n once per day until the password is changed or the device admin disables password expiration.</p>\n\n<p> <p>The admin will typically post a notification requesting the user to change their password\n in response to this call. The actual password expiration time can be obtained by calling\n }</p>\n\n<p> <p>The admin should be sure to take down any notifications it posted in response to this call\n when it receives {@link android.app.admin.DeviceAdminReceiver#onPasswordChanged(Context, Intent, UserHandle) .</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The user or profile for whom the password is expiring. To see whether this\n        user is the current profile or a parent user, check for equality with\n        Process.myUserHandle.</p>\n</div></li></ul></div></div></div><div id='method-onPasswordFailed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onPasswordFailed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onPasswordFailed' class='name expandable'>onPasswordFailed</a>( <span class='pre'>context, intent, user</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called after the user has failed at entering their device or profile challenge password,\n as a result of receiving AC...</div><div class='long'><p>Called after the user has failed at entering their device or profile challenge password,\n as a result of receiving <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_FAILED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_FAILED\" class=\"docClass\">ACTION_PASSWORD_FAILED</a>.  At this point you can use\n android.app.admin.DevicePolicyManager.getCurrentFailedPasswordAttempts() to retrieve the number of\n failed password attempts.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The user or profile for whom the password check failed. To see whether this\n        user is the current profile or a parent user, check for equality with\n        Process.myUserHandle.</p>\n</div></li></ul></div></div></div><div id='method-onPasswordSucceeded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onPasswordSucceeded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onPasswordSucceeded' class='name expandable'>onPasswordSucceeded</a>( <span class='pre'>context, intent, user</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called after the user has succeeded at entering their device or profile challenge password,\n as a result of receiving...</div><div class='long'><p>Called after the user has succeeded at entering their device or profile challenge password,\n as a result of receiving <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_SUCCEEDED\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_PASSWORD_SUCCEEDED\" class=\"docClass\">ACTION_PASSWORD_SUCCEEDED</a>.  This will\n only be received the first time they succeed after having previously\n failed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>The user of profile for whom the password check succeeded.  To see whether this\n        user is the current profile or a parent user, check for equality with\n        Process.myUserHandle.</p>\n</div></li></ul></div></div></div><div id='method-onProfileProvisioningComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onProfileProvisioningComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onProfileProvisioningComplete' class='name expandable'>onProfileProvisioningComplete</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when provisioning of a managed profile or managed device has completed successfully. ...</div><div class='long'><p>Called when provisioning of a managed profile or managed device has completed successfully.</p>\n\n<p> <p> As a prerequisite for the execution of this callback the <a href=\"#!/api/android.app.admin.DeviceAdminReceiver\" rel=\"android.app.admin.DeviceAdminReceiver\" class=\"docClass\">android.app.admin.DeviceAdminReceiver</a> has\n to declare an intent filter for <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_PROFILE_PROVISIONING_COMPLETE\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_PROFILE_PROVISIONING_COMPLETE\" class=\"docClass\">ACTION_PROFILE_PROVISIONING_COMPLETE</a>.\n Its component must also be specified in the <a href=\"#!/api/android.app.admin.DevicePolicyManager-property-EXTRA_DEVICE_ADMIN\" rel=\"android.app.admin.DevicePolicyManager-property-EXTRA_DEVICE_ADMIN\" class=\"docClass\">android.app.admin.DevicePolicyManager.EXTRA_DEVICE_ADMIN</a>\n of the <a href=\"#!/api/android.app.admin.DevicePolicyManager-property-ACTION_PROVISION_MANAGED_PROFILE\" rel=\"android.app.admin.DevicePolicyManager-property-ACTION_PROVISION_MANAGED_PROFILE\" class=\"docClass\">android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE</a> intent that started the\n managed provisioning.</p>\n\n<p> <p>When provisioning of a managed profile is complete, the managed profile is hidden until\n the profile owner calls admin).\n Typically a profile owner will enable the profile when it has finished any additional setup\n such as adding an account by using the AccountManager and calling APIs to bring the\n profile into the desired state.</p>\n\n<p> <p> Note that provisioning completes without waiting for any server interactions, so the\n profile owner needs to wait for data to be available if required (e.g. Android device IDs or\n other data that is set as a result of server interactions).</p>\n\n<p> <p>From version android.os.Build.VERSION_CODES.O, when managed provisioning has\n completed, along with this callback the activity intent\n <a href=\"#!/api/android.app.admin.DevicePolicyManager-property-ACTION_PROVISIONING_SUCCESSFUL\" rel=\"android.app.admin.DevicePolicyManager-property-ACTION_PROVISIONING_SUCCESSFUL\" class=\"docClass\">android.app.admin.DevicePolicyManager.ACTION_PROVISIONING_SUCCESSFUL</a> will also be sent to the same\n application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li></ul></div></div></div><div id='method-onReadyForUserInitialization' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onReadyForUserInitialization' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onReadyForUserInitialization' class='name expandable'>onReadyForUserInitialization</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called during provisioning of a managed device to allow the device initializer to perform\n user setup steps. ...</div><div class='long'><p>Called during provisioning of a managed device to allow the device initializer to perform\n user setup steps.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Do not use</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li></ul></div></div></div><div id='method-onReceive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onReceive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive' class='name expandable'>onReceive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Intercept standard device administrator broadcasts. ...</div><div class='long'><p>Intercept standard device administrator broadcasts.  Implementations\n should not override this method; it is better to implement the\n convenience callbacks for each action.</p>\n</div></div></div><div id='method-onSecurityLogsAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onSecurityLogsAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onSecurityLogsAvailable' class='name expandable'>onSecurityLogsAvailable</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a new batch of security logs can be retrieved. ...</div><div class='long'><p>Called when a new batch of security logs can be retrieved.</p>\n\n<p> <p>If a secondary user or profile is created, this callback won't be received until all users\n become affiliated again (even if security logging is enabled).\n See <a href=\"#!/api/android.app.admin.DevicePolicyManager-method-setAffiliationIds\" rel=\"android.app.admin.DevicePolicyManager-method-setAffiliationIds\" class=\"docClass\">android.app.admin.DevicePolicyManager.setAffiliationIds</a></p>\n\n<p> <p>This callback will be re-triggered if the logs are not retrieved.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.\n@see DevicePolicyManager#retrieveSecurityLogs(ComponentName)</p>\n</div></li></ul></div></div></div><div id='method-onSystemUpdatePending' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onSystemUpdatePending' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onSystemUpdatePending' class='name expandable'>onSystemUpdatePending</a>( <span class='pre'>context, intent, receivedTime</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the information about a pending system update is available. ...</div><div class='long'><p>Called when the information about a pending system update is available.</p>\n\n<p> <p>Allows the receiver to be notified when information about a pending system update is\n available from the system update service. The same pending system update can trigger multiple\n calls to this method, so it is necessary to examine the incoming parameters for details about\n the update.</p>\n\n<p> <p>This callback is only applicable to device owners and profile owners.</p>\n\n<p> <p>To get further information about a pending system update (for example, whether or not the\n update is a security patch), the device owner or profile owner can call\n <a href=\"#!/api/android.app.admin.DevicePolicyManager-method-getPendingSystemUpdate\" rel=\"android.app.admin.DevicePolicyManager-method-getPendingSystemUpdate\" class=\"docClass\">android.app.admin.DevicePolicyManager.getPendingSystemUpdate</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>receivedTime</span> : Number<div class='sub-desc'><p>The time as given by System.currentTimeMillis() indicating when\n        the current pending update was first available. -1 if no pending update is available.\n@see DevicePolicyManager#getPendingSystemUpdate</p>\n</div></li></ul></div></div></div><div id='method-onTransferAffiliatedProfileOwnershipComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onTransferAffiliatedProfileOwnershipComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onTransferAffiliatedProfileOwnershipComplete' class='name expandable'>onTransferAffiliatedProfileOwnershipComplete</a>( <span class='pre'>context, user</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called on the device owner when the ownership of one of its affiliated profiles is\n transferred. ...</div><div class='long'><p>Called on the device owner when the ownership of one of its affiliated profiles is\n transferred.</p>\n\n<p> <p>This can be used when transferring both device and profile ownership when using\n work profile on a fully managed device. The process would look like this:\n <ol>\n <li>Transfer profile ownership</li>\n <li>The device owner gets notified with this callback</li>\n <li>Transfer device ownership</li>\n <li>Both profile and device ownerships have been transferred</li>\n </ol></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>the running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a></p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>the UserHandle of the affiliated user\n@see DevicePolicyManager#transferOwnership(ComponentName, ComponentName, PersistableBundle)</p>\n</div></li></ul></div></div></div><div id='method-onTransferOwnershipComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onTransferOwnershipComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onTransferOwnershipComplete' class='name expandable'>onTransferOwnershipComplete</a>( <span class='pre'>context, bundle</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called on the newly assigned owner (either device owner or profile owner) when the ownership\n transfer has completed ...</div><div class='long'><p>Called on the newly assigned owner (either device owner or profile owner) when the ownership\n transfer has completed successfully.</p>\n\n<p> <p> The {@code bundle} parameter allows the original owner to pass data\n to the new one.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>the running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a></p>\n</div></li><li><span class='pre'>bundle</span> : Object {PersistableBundle}<div class='sub-desc'><p>the data to be passed to the new owner</p>\n</div></li></ul></div></div></div><div id='method-onUserAdded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onUserAdded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onUserAdded' class='name expandable'>onUserAdded</a>( <span class='pre'>context, intent, newUser</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a user or profile is created. ...</div><div class='long'><p>Called when a user or profile is created.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>newUser</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the user that has just been added.</p>\n</div></li></ul></div></div></div><div id='method-onUserRemoved' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onUserRemoved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onUserRemoved' class='name expandable'>onUserRemoved</a>( <span class='pre'>context, intent, removedUser</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a user or profile is removed. ...</div><div class='long'><p>Called when a user or profile is removed.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>removedUser</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the user that has just been removed.</p>\n</div></li></ul></div></div></div><div id='method-onUserStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onUserStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onUserStarted' class='name expandable'>onUserStarted</a>( <span class='pre'>context, intent, startedUser</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a user or profile is started. ...</div><div class='long'><p>Called when a user or profile is started.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>startedUser</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the user that has just been started.</p>\n</div></li></ul></div></div></div><div id='method-onUserStopped' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onUserStopped' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onUserStopped' class='name expandable'>onUserStopped</a>( <span class='pre'>context, intent, stoppedUser</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a user or profile is stopped. ...</div><div class='long'><p>Called when a user or profile is stopped.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>stoppedUser</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the user that has just been stopped.</p>\n</div></li></ul></div></div></div><div id='method-onUserSwitched' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminReceiver'>android.app.admin.DeviceAdminReceiver</span><br/><a href='source/DeviceAdminReceiver.html#android-app-admin-DeviceAdminReceiver-method-onUserSwitched' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminReceiver-method-onUserSwitched' class='name expandable'>onUserSwitched</a>( <span class='pre'>context, intent, switchedUser</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a user or profile is switched to. ...</div><div class='long'><p>Called when a user or profile is switched to.</p>\n\n<p> <p>This callback is only applicable to device owners.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-method-onReceive\" rel=\"android.app.admin.DeviceAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>switchedUser</span> : Object {UserHandle}<div class='sub-desc'><p>The UserHandle of the user that has just been switched to.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});