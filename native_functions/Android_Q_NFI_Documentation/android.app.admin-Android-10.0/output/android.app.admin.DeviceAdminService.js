Ext.data.JsonP.android_app_admin_DeviceAdminService({"tagname":"class","name":"android.app.admin.DeviceAdminService","autodetected":{},"files":[{"filename":"DeviceAdminService.js","href":"DeviceAdminService.html#android-app-admin-DeviceAdminService"}],"extends":"android.app.Service","members":[{"name":"onBind","tagname":"method","owner":"android.app.admin.DeviceAdminService","id":"method-onBind","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.admin.DeviceAdminService","short_doc":"Base class for a service that device owner/profile owners can optionally have. ...","classIcon":"icon-class","superclasses":["android.app.Service"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.app.Service<div class='subclass '><strong>android.app.admin.DeviceAdminService</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DeviceAdminService.html#android-app-admin-DeviceAdminService' target='_blank'>DeviceAdminService.js</a></div></pre><div class='doc-contents'><p>Base class for a service that device owner/profile owners can optionally have.</p>\n\n<p> <p>The system searches for it with an intent filter with the\n <a href=\"#!/api/android.app.admin.DevicePolicyManager-property-ACTION_DEVICE_ADMIN_SERVICE\" rel=\"android.app.admin.DevicePolicyManager-property-ACTION_DEVICE_ADMIN_SERVICE\" class=\"docClass\">android.app.admin.DevicePolicyManager.ACTION_DEVICE_ADMIN_SERVICE</a> action, and tries to keep a bound\n connection as long as the hosting user is running, so that the device/profile owner is always\n considered to be in the foreground.  This is useful to receive implicit broadcasts that\n can no longer be received by manifest receivers by apps targeting Android version\n android.os.Build.VERSION_CODES.O.  Device/profile owners can use a runtime-registered\n broadcast receiver instead, and have a <a href=\"#!/api/android.app.admin.DeviceAdminService\" rel=\"android.app.admin.DeviceAdminService\" class=\"docClass\">android.app.admin.DeviceAdminService</a> so that the process is always\n running.</p>\n\n<p> <p>Device/profile owners can use\n int, int)\n to disable/enable its own service.  For example, when a device/profile owner no longer needs\n to be in the foreground, it can (and should) disable its service.</p>\n\n<p> <p>The service must be protected with the permission\n android.Manifest.permission.BIND_DEVICE_ADMIN.  Otherwise the system would ignore it.</p>\n\n<p> <p>When the owner process crashes, the service will be re-bound automatically after a\n back-off.</p>\n\n<p> <p>Note the process may still be killed if the system is under heavy memory pressure, in which\n case the process will be re-started later.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onBind' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DeviceAdminService'>android.app.admin.DeviceAdminService</span><br/><a href='source/DeviceAdminService.html#android-app-admin-DeviceAdminService-method-onBind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DeviceAdminService-method-onBind' class='name expandable'>onBind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});