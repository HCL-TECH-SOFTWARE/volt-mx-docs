Ext.data.JsonP.android_app_admin_DelegatedAdminReceiver({"tagname":"class","name":"android.app.admin.DelegatedAdminReceiver","autodetected":{},"files":[{"filename":"DelegatedAdminReceiver.js","href":"DelegatedAdminReceiver.html#android-app-admin-DelegatedAdminReceiver"}],"extends":"android.content.BroadcastReceiver","members":[{"name":"onChoosePrivateKeyAlias","tagname":"method","owner":"android.app.admin.DelegatedAdminReceiver","id":"method-onChoosePrivateKeyAlias","meta":{}},{"name":"onNetworkLogsAvailable","tagname":"method","owner":"android.app.admin.DelegatedAdminReceiver","id":"method-onNetworkLogsAvailable","meta":{}},{"name":"onReceive","tagname":"method","owner":"android.app.admin.DelegatedAdminReceiver","id":"method-onReceive","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.admin.DelegatedAdminReceiver","short_doc":"Base class for delegated apps to handle callbacks related to their delegated capabilities. ...","classIcon":"icon-class","superclasses":["android.content.BroadcastReceiver"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.content.BroadcastReceiver<div class='subclass '><strong>android.app.admin.DelegatedAdminReceiver</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DelegatedAdminReceiver.html#android-app-admin-DelegatedAdminReceiver' target='_blank'>DelegatedAdminReceiver.js</a></div></pre><div class='doc-contents'><p>Base class for delegated apps to handle callbacks related to their delegated capabilities.</p>\n\n<p> <p>Delegated apps are apps that receive additional capabilities from the profile owner or\n device owner apps. Some of these capabilities involve the framework calling into the apps.\n To receive these callbacks, delegated apps should subclass this class and override the\n appropriate methods here. The subclassed receiver needs to be published in the app's\n manifest, with appropriate intent filters to mark which callbacks the receiver is interested\n in. An app can have multiple receivers as long as they listen for disjoint set of callbacks.\n For the manifest definitions, it must be protected by the\n android.Manifest.permission.BIND_DEVICE_ADMIN permission to ensure only\n the system can trigger these callbacks.</p>\n\n<p> <p>The callback methods happen on the main thread of the process.  Thus long running\n operations must be done on another thread.  Note that because a receiver\n is done once returning from its onReceive function, such long-running operations\n should probably be done in a Service.</p>\n\n<p> @see DevicePolicyManager#setDelegatedScopes\n @see DeviceAdminReceiver</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onChoosePrivateKeyAlias' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DelegatedAdminReceiver'>android.app.admin.DelegatedAdminReceiver</span><br/><a href='source/DelegatedAdminReceiver.html#android-app-admin-DelegatedAdminReceiver-method-onChoosePrivateKeyAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DelegatedAdminReceiver-method-onChoosePrivateKeyAlias' class='name expandable'>onChoosePrivateKeyAlias</a>( <span class='pre'>context, intent, uid, uri, alias</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows this receiver to select the alias for a private key and certificate pair for\n authentication. ...</div><div class='long'><p>Allows this receiver to select the alias for a private key and certificate pair for\n authentication.  If this method returns null, the default android.app.Activity will\n be shown that lets the user pick a private key and certificate pair.</p>\n\n<p> <p> This callback is only applicable if the delegated app has\n <a href=\"#!/api/android.app.admin.DevicePolicyManager-property-DELEGATION_CERT_SELECTION\" rel=\"android.app.admin.DevicePolicyManager-property-DELEGATION_CERT_SELECTION\" class=\"docClass\">android.app.admin.DevicePolicyManager.DELEGATION_CERT_SELECTION</a> capability. Additionally, it must\n declare an intent filter for <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_CHOOSE_PRIVATE_KEY_ALIAS\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_CHOOSE_PRIVATE_KEY_ALIAS\" class=\"docClass\">android.app.admin.DeviceAdminReceiver.ACTION_CHOOSE_PRIVATE_KEY_ALIAS</a>\n in the receiver's manifest in order to receive this callback. The default implementation\n simply throws UnsupportedOperationException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DelegatedAdminReceiver-method-onReceive\" rel=\"android.app.admin.DelegatedAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DelegatedAdminReceiver-method-onReceive\" rel=\"android.app.admin.DelegatedAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>The uid of the app asking for the private key and certificate pair.</p>\n</div></li><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The URI to authenticate, may be null.</p>\n</div></li><li><span class='pre'>alias</span> : String<div class='sub-desc'><p>The alias preselected by the client, or null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The private key alias to return and grant access to.\n@see KeyChain#choosePrivateKeyAlias</p>\n</div></li></ul></div></div></div><div id='method-onNetworkLogsAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DelegatedAdminReceiver'>android.app.admin.DelegatedAdminReceiver</span><br/><a href='source/DelegatedAdminReceiver.html#android-app-admin-DelegatedAdminReceiver-method-onNetworkLogsAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DelegatedAdminReceiver-method-onNetworkLogsAvailable' class='name expandable'>onNetworkLogsAvailable</a>( <span class='pre'>context, intent, batchToken, networkLogsCount</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called each time a new batch of network logs can be retrieved. ...</div><div class='long'><p>Called each time a new batch of network logs can be retrieved. This callback method will only\n ever be called when network logging is enabled. The logs can only be retrieved while network\n logging is enabled.</p>\n\n<p> <p>If a secondary user or profile is created, this callback won't be received until all users\n become affiliated again (even if network logging is enabled). It will also no longer be\n possible to retrieve the network logs batch with the most recent {@code batchToken} provided\n by this callback. See <a href=\"#!/api/android.app.admin.DevicePolicyManager-method-setAffiliationIds\" rel=\"android.app.admin.DevicePolicyManager-method-setAffiliationIds\" class=\"docClass\">android.app.admin.DevicePolicyManager.setAffiliationIds</a>.</p>\n\n<p> <p> This callback is only applicable if the delegated app has\n <a href=\"#!/api/android.app.admin.DevicePolicyManager-property-DELEGATION_NETWORK_LOGGING\" rel=\"android.app.admin.DevicePolicyManager-property-DELEGATION_NETWORK_LOGGING\" class=\"docClass\">android.app.admin.DevicePolicyManager.DELEGATION_NETWORK_LOGGING</a> capability. Additionally, it must\n declare an intent filter for <a href=\"#!/api/android.app.admin.DeviceAdminReceiver-property-ACTION_NETWORK_LOGS_AVAILABLE\" rel=\"android.app.admin.DeviceAdminReceiver-property-ACTION_NETWORK_LOGS_AVAILABLE\" class=\"docClass\">android.app.admin.DeviceAdminReceiver.ACTION_NETWORK_LOGS_AVAILABLE</a> in the\n receiver's manifest in order to receive this callback. The default implementation\n simply throws UnsupportedOperationException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The running context as per <a href=\"#!/api/android.app.admin.DelegatedAdminReceiver-method-onReceive\" rel=\"android.app.admin.DelegatedAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The received intent as per <a href=\"#!/api/android.app.admin.DelegatedAdminReceiver-method-onReceive\" rel=\"android.app.admin.DelegatedAdminReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n</div></li><li><span class='pre'>batchToken</span> : Number<div class='sub-desc'><p>The token representing the current batch of network logs.</p>\n</div></li><li><span class='pre'>networkLogsCount</span> : Number<div class='sub-desc'><p>The total count of events in the current batch of network logs.\n@see DevicePolicyManager#retrieveNetworkLogs</p>\n</div></li></ul></div></div></div><div id='method-onReceive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.admin.DelegatedAdminReceiver'>android.app.admin.DelegatedAdminReceiver</span><br/><a href='source/DelegatedAdminReceiver.html#android-app-admin-DelegatedAdminReceiver-method-onReceive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.admin.DelegatedAdminReceiver-method-onReceive' class='name expandable'>onReceive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Intercept delegated device administrator broadcasts. ...</div><div class='long'><p>Intercept delegated device administrator broadcasts. Implementations should not override\n this method; implement the convenience callbacks for each action instead.</p>\n</div></div></div></div></div></div></div>","meta":{}});