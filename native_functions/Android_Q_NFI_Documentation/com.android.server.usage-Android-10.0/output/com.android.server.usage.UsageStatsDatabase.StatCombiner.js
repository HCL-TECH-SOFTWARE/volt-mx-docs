Ext.data.JsonP.com_android_server_usage_UsageStatsDatabase_StatCombiner({"tagname":"class","name":"com.android.server.usage.UsageStatsDatabase.StatCombiner","autodetected":{},"files":[{"filename":"StatCombiner.js","href":"StatCombiner.html#com-android-server-usage-UsageStatsDatabase-StatCombiner"}],"members":[{"name":"combine","tagname":"method","owner":"com.android.server.usage.UsageStatsDatabase.StatCombiner","id":"method-combine","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.usage.UsageStatsDatabase.StatCombiner","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/StatCombiner.html#com-android-server-usage-UsageStatsDatabase-StatCombiner' target='_blank'>StatCombiner.js</a></div></pre><div class='doc-contents'><p>Figures out what to extract from the given IntervalStats object.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-combine' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.usage.UsageStatsDatabase.StatCombiner'>com.android.server.usage.UsageStatsDatabase.StatCombiner</span><br/><a href='source/StatCombiner.html#com-android-server-usage-UsageStatsDatabase-StatCombiner-method-combine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.usage.UsageStatsDatabase.StatCombiner-method-combine' class='name expandable'>combine</a>( <span class='pre'>stats, mutable, accumulatedResult</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementations should extract interesting from stats and add it\n to the accumulatedResult list. ...</div><div class='long'><p>Implementations should extract interesting from <code>stats</code> and add it\n to the <code>accumulatedResult</code> list.</p>\n\n<p> If the <code>stats</code> object is mutable, <code>mutable</code> will be true,\n which means you should make a copy of the data before adding it to the\n <code>accumulatedResult</code> list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>stats</span> : Object {IntervalStats}<div class='sub-desc'><p>The IntervalStats object selected.</p>\n</div></li><li><span class='pre'>mutable</span> : Boolean<div class='sub-desc'><p>Whether or not the data inside the stats object is mutable.</p>\n</div></li><li><span class='pre'>accumulatedResult</span> : Object {java.util.List}<div class='sub-desc'><p>The list to which to add extracted data.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});