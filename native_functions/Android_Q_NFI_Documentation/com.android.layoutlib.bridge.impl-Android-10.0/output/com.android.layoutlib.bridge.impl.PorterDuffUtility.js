Ext.data.JsonP.com_android_layoutlib_bridge_impl_PorterDuffUtility({"tagname":"class","name":"com.android.layoutlib.bridge.impl.PorterDuffUtility","autodetected":{},"files":[{"filename":"PorterDuffUtility.js","href":"PorterDuffUtility.html#com-android-layoutlib-bridge-impl-PorterDuffUtility"}],"extends":"java.lang.Object","members":[{"name":"getComposite","tagname":"method","owner":"com.android.layoutlib.bridge.impl.PorterDuffUtility","id":"method-getComposite","meta":{}},{"name":"getPorterDuffMode","tagname":"method","owner":"com.android.layoutlib.bridge.impl.PorterDuffUtility","id":"method-getPorterDuffMode","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.layoutlib.bridge.impl.PorterDuffUtility","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.layoutlib.bridge.impl.PorterDuffUtility</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PorterDuffUtility.html#com-android-layoutlib-bridge-impl-PorterDuffUtility' target='_blank'>PorterDuffUtility.js</a></div></pre><div class='doc-contents'><p>Provides various utility methods for PorterDuffColorFilter_Delegate.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getComposite' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.layoutlib.bridge.impl.PorterDuffUtility'>com.android.layoutlib.bridge.impl.PorterDuffUtility</span><br/><a href='source/PorterDuffUtility.html#com-android-layoutlib-bridge-impl-PorterDuffUtility-method-getComposite' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.layoutlib.bridge.impl.PorterDuffUtility-method-getComposite' class='name expandable'>getComposite</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A utility method to get the Composite that represents the filter for the given\n PorterDuff mode and the alpha. ...</div><div class='long'><p>A utility method to get the Composite that represents the filter for the given\n PorterDuff mode and the alpha. Defaults to Mode.SRC_OVER for invalid modes.</p>\n</div></div></div><div id='method-getPorterDuffMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.layoutlib.bridge.impl.PorterDuffUtility'>com.android.layoutlib.bridge.impl.PorterDuffUtility</span><br/><a href='source/PorterDuffUtility.html#com-android-layoutlib-bridge-impl-PorterDuffUtility-method-getPorterDuffMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.layoutlib.bridge.impl.PorterDuffUtility-method-getPorterDuffMode' class='name expandable'>getPorterDuffMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convert the porterDuffMode from the framework to its corresponding enum. ...</div><div class='long'><p>Convert the porterDuffMode from the framework to its corresponding enum. This defaults to\n Mode.SRC_OVER for invalid modes.</p>\n</div></div></div></div></div></div></div>","meta":{}});