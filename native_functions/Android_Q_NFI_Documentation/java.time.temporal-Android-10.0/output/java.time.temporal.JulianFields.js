Ext.data.JsonP.java_time_temporal_JulianFields({"tagname":"class","name":"java.time.temporal.JulianFields","autodetected":{},"files":[{"filename":"JulianFields.js","href":"JulianFields.html#java-time-temporal-JulianFields"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"JULIAN_DAY","tagname":"property","owner":"java.time.temporal.JulianFields","id":"property-JULIAN_DAY","meta":{}},{"name":"MODIFIED_JULIAN_DAY","tagname":"property","owner":"java.time.temporal.JulianFields","id":"property-MODIFIED_JULIAN_DAY","meta":{}},{"name":"RATA_DIE","tagname":"property","owner":"java.time.temporal.JulianFields","id":"property-RATA_DIE","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.temporal.JulianFields","short_doc":"A set of date fields that provide access to Julian Days. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.temporal.JulianFields</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/JulianFields.html#java-time-temporal-JulianFields' target='_blank'>JulianFields.js</a></div></pre><div class='doc-contents'><p>A set of date fields that provide access to Julian Days.\n <p>\n The Julian Day is a standard way of expressing date and time commonly used in the scientific community.\n It is expressed as a decimal number of whole days where days start at midday.\n This class represents variations on Julian Days that count whole days from midnight.\n <p>\n The fields are implemented relative to <a href=\"#!/api/java.time.temporal.ChronoField-property-EPOCH_DAY\" rel=\"java.time.temporal.ChronoField-property-EPOCH_DAY\" class=\"docClass\">EPOCH_DAY</a>.\n The fields are supported, and can be queried and set if {@code EPOCH_DAY} is available.\n The fields work with all chronologies.</p>\n\n<p> @implSpec\n This is an immutable and thread-safe class.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-JULIAN_DAY' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.JulianFields'>java.time.temporal.JulianFields</span><br/><a href='source/JulianFields.html#java-time-temporal-JulianFields-property-JULIAN_DAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.JulianFields-property-JULIAN_DAY' class='name expandable'>JULIAN_DAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Julian Day field. ...</div><div class='long'><p>Julian Day field.</p>\n\n<p><p>\nThis is an integer-based version of the Julian Day Number.\nJulian Day is a well-known system that represents the count of whole days since day 0,\nwhich is defined to be January 1, 4713 BCE in the Julian calendar, and -4713-11-24 Gregorian.\nThe field  has \"JulianDay\" as 'name', and 'DAYS' as 'baseUnit'.\nThe field always refers to the local date-time, ignoring the offset or zone.\n<p>\nFor date-times, 'JULIAN_DAY.getFrom()' assumes the same value from\nmidnight until just before the next midnight.\nWhen 'JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered.\n'JULIAN_DAY.adjustInto()' and 'JULIAN_DAY.getFrom()' only apply to {@code Temporal} objects that\ncan be converted into <a href=\"#!/api/java.time.temporal.ChronoField-property-EPOCH_DAY\" rel=\"java.time.temporal.ChronoField-property-EPOCH_DAY\" class=\"docClass\">java.time.temporal.ChronoField.EPOCH_DAY</a>.\nAn <a href=\"#!/api/java.time.temporal.UnsupportedTemporalTypeException\" rel=\"java.time.temporal.UnsupportedTemporalTypeException\" class=\"docClass\">java.time.temporal.UnsupportedTemporalTypeException</a> is thrown for any other type of object.\n<p>\nIn the resolving phase of parsing, a date can be created from a Julian Day field.\nIn {@linkplain ResolverStyle#STRICT strict mode} and {@linkplain ResolverStyle#SMART smart mode}\nthe Julian Day value is validated against the range of valid values.\nIn {@linkplain ResolverStyle#LENIENT lenient mode} no validation occurs.</p>\n\n<p><h3>Astronomical and Scientific Notes</h3>\nThe standard astronomical definition uses a fraction to indicate the time-of-day,\nthus 3.25 would represent the time 18:00, since days start at midday.\nThis implementation uses an integer and days starting at midnight.\nThe integer value for the Julian Day Number is the astronomical Julian Day value at midday\nof the date in question.\nThis amounts to the astronomical Julian Day, rounded to an integer {@code JDN = floor(JD + 0.5)}.</p>\n\n<p><pre> | ISO date          |  Julian Day Number | Astronomical Julian Day |\n | 1970-01-01T00:00  |         2,440,588  |         2,440,587.5     |\n | 1970-01-01T06:00  |         2,440,588  |         2,440,587.75    |\n | 1970-01-01T12:00  |         2,440,588  |         2,440,588.0     |\n | 1970-01-01T18:00  |         2,440,588  |         2,440,588.25    |\n | 1970-01-02T00:00  |         2,440,589  |         2,440,588.5     |\n | 1970-01-02T06:00  |         2,440,589  |         2,440,588.75    |\n | 1970-01-02T12:00  |         2,440,589  |         2,440,589.0     |\n</pre>\n<p>\nJulian Days are sometimes taken to imply Universal Time or UTC, but this\nimplementation always uses the Julian Day number for the local date,\nregardless of the offset or time-zone.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MODIFIED_JULIAN_DAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.JulianFields'>java.time.temporal.JulianFields</span><br/><a href='source/JulianFields.html#java-time-temporal-JulianFields-property-MODIFIED_JULIAN_DAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.JulianFields-property-MODIFIED_JULIAN_DAY' class='name expandable'>MODIFIED_JULIAN_DAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Modified Julian Day field. ...</div><div class='long'><p>Modified Julian Day field.</p>\n\n<p><p>\nThis is an integer-based version of the Modified Julian Day Number.\nModified Julian Day (MJD) is a well-known system that counts days continuously.\nIt is defined relative to astronomical Julian Day as  {@code MJD = JD - 2400000.5}.\nEach Modified Julian Day runs from midnight to midnight.\nThe field always refers to the local date-time, ignoring the offset or zone.\n<p>\nFor date-times, 'MODIFIED_JULIAN_DAY.getFrom()' assumes the same value from\nmidnight until just before the next midnight.\nWhen 'MODIFIED_JULIAN_DAY.adjustInto()' is applied to a date-time, the time of day portion remains unaltered.\n'MODIFIED_JULIAN_DAY.adjustInto()' and 'MODIFIED_JULIAN_DAY.getFrom()' only apply to {@code Temporal} objects\nthat can be converted into <a href=\"#!/api/java.time.temporal.ChronoField-property-EPOCH_DAY\" rel=\"java.time.temporal.ChronoField-property-EPOCH_DAY\" class=\"docClass\">java.time.temporal.ChronoField.EPOCH_DAY</a>.\nAn <a href=\"#!/api/java.time.temporal.UnsupportedTemporalTypeException\" rel=\"java.time.temporal.UnsupportedTemporalTypeException\" class=\"docClass\">java.time.temporal.UnsupportedTemporalTypeException</a> is thrown for any other type of object.\n<p>\nThis implementation is an integer version of MJD with the decimal part rounded to floor.\n<p>\nIn the resolving phase of parsing, a date can be created from a Modified Julian Day field.\nIn {@linkplain ResolverStyle#STRICT strict mode} and {@linkplain ResolverStyle#SMART smart mode}\nthe Modified Julian Day value is validated against the range of valid values.\nIn {@linkplain ResolverStyle#LENIENT lenient mode} no validation occurs.</p>\n\n<p><h3>Astronomical and Scientific Notes</h3>\n<pre> | ISO date          | Modified Julian Day |      Decimal MJD |\n | 1970-01-01T00:00  |             40,587  |       40,587.0   |\n | 1970-01-01T06:00  |             40,587  |       40,587.25  |\n | 1970-01-01T12:00  |             40,587  |       40,587.5   |\n | 1970-01-01T18:00  |             40,587  |       40,587.75  |\n | 1970-01-02T00:00  |             40,588  |       40,588.0   |\n | 1970-01-02T06:00  |             40,588  |       40,588.25  |\n | 1970-01-02T12:00  |             40,588  |       40,588.5   |\n</pre></p>\n\n<p>Modified Julian Days are sometimes taken to imply Universal Time or UTC, but this\nimplementation always uses the Modified Julian Day for the local date,\nregardless of the offset or time-zone.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-RATA_DIE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.JulianFields'>java.time.temporal.JulianFields</span><br/><a href='source/JulianFields.html#java-time-temporal-JulianFields-property-RATA_DIE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.JulianFields-property-RATA_DIE' class='name expandable'>RATA_DIE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Rata Die field. ...</div><div class='long'><p>Rata Die field.</p>\n\n<p><p>\nRata Die counts whole days continuously starting day 1 at midnight at the beginning of 0001-01-01 (ISO).\nThe field always refers to the local date-time, ignoring the offset or zone.\n<p>\nFor date-times, 'RATA_DIE.getFrom()' assumes the same value from\nmidnight until just before the next midnight.\nWhen 'RATA_DIE.adjustInto()' is applied to a date-time, the time of day portion remains unaltered.\n'RATA_DIE.adjustInto()' and 'RATA_DIE.getFrom()' only apply to {@code Temporal} objects\nthat can be converted into <a href=\"#!/api/java.time.temporal.ChronoField-property-EPOCH_DAY\" rel=\"java.time.temporal.ChronoField-property-EPOCH_DAY\" class=\"docClass\">java.time.temporal.ChronoField.EPOCH_DAY</a>.\nAn <a href=\"#!/api/java.time.temporal.UnsupportedTemporalTypeException\" rel=\"java.time.temporal.UnsupportedTemporalTypeException\" class=\"docClass\">java.time.temporal.UnsupportedTemporalTypeException</a> is thrown for any other type of object.\n<p>\nIn the resolving phase of parsing, a date can be created from a Rata Die field.\nIn {@linkplain ResolverStyle#STRICT strict mode} and {@linkplain ResolverStyle#SMART smart mode}\nthe Rata Die value is validated against the range of valid values.\nIn {@linkplain ResolverStyle#LENIENT lenient mode} no validation occurs.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div></div></div>","meta":{}});