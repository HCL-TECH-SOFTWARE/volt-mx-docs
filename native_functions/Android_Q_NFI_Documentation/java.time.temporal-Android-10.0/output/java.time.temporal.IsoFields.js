Ext.data.JsonP.java_time_temporal_IsoFields({"tagname":"class","name":"java.time.temporal.IsoFields","autodetected":{},"files":[{"filename":"IsoFields.js","href":"IsoFields.html#java-time-temporal-IsoFields"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"DAY_OF_QUARTER","tagname":"property","owner":"java.time.temporal.IsoFields","id":"property-DAY_OF_QUARTER","meta":{}},{"name":"QUARTER_OF_YEAR","tagname":"property","owner":"java.time.temporal.IsoFields","id":"property-QUARTER_OF_YEAR","meta":{}},{"name":"QUARTER_YEARS","tagname":"property","owner":"java.time.temporal.IsoFields","id":"property-QUARTER_YEARS","meta":{}},{"name":"WEEK_BASED_YEAR","tagname":"property","owner":"java.time.temporal.IsoFields","id":"property-WEEK_BASED_YEAR","meta":{}},{"name":"WEEK_BASED_YEARS","tagname":"property","owner":"java.time.temporal.IsoFields","id":"property-WEEK_BASED_YEARS","meta":{}},{"name":"WEEK_OF_WEEK_BASED_YEAR","tagname":"property","owner":"java.time.temporal.IsoFields","id":"property-WEEK_OF_WEEK_BASED_YEAR","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.temporal.IsoFields","short_doc":"Fields and units specific to the ISO-8601 calendar system,\n including quarter-of-year and week-based-year. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.temporal.IsoFields</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/IsoFields.html#java-time-temporal-IsoFields' target='_blank'>IsoFields.js</a></div></pre><div class='doc-contents'><p>Fields and units specific to the ISO-8601 calendar system,\n including quarter-of-year and week-based-year.\n <p>\n This class defines fields and units that are specific to the ISO calendar system.</p>\n\n<p> <h3>Quarter of year</h3>\n The ISO-8601 standard is based on the standard civic 12 month year.\n This is commonly divided into four quarters, often abbreviated as Q1, Q2, Q3 and Q4.\n <p>\n January, February and March are in Q1.\n April, May and June are in Q2.\n July, August and September are in Q3.\n October, November and December are in Q4.\n <p>\n The complete date is expressed using three fields:\n <ul>\n <li><a href=\"#!/api/java.time.temporal.IsoFields-property-DAY_OF_QUARTER\" rel=\"java.time.temporal.IsoFields-property-DAY_OF_QUARTER\" class=\"docClass\">DAY_OF_QUARTER</a> - the day within the quarter, from 1 to 90, 91 or 92\n <li><a href=\"#!/api/java.time.temporal.IsoFields-property-QUARTER_OF_YEAR\" rel=\"java.time.temporal.IsoFields-property-QUARTER_OF_YEAR\" class=\"docClass\">QUARTER_OF_YEAR</a> - the week within the week-based-year\n <li><a href=\"#!/api/java.time.temporal.ChronoField-property-YEAR\" rel=\"java.time.temporal.ChronoField-property-YEAR\" class=\"docClass\">YEAR</a> - the standard ISO year\n </li></li></li></ul></p>\n\n<p> <h3>Week based years</h3>\n The ISO-8601 standard was originally intended as a data interchange format,\n defining a string format for dates and times. However, it also defines an\n alternate way of expressing the date, based on the concept of week-based-year.\n <p>\n The date is expressed using three fields:\n <ul>\n <li><a href=\"#!/api/java.time.temporal.ChronoField-property-DAY_OF_WEEK\" rel=\"java.time.temporal.ChronoField-property-DAY_OF_WEEK\" class=\"docClass\">DAY_OF_WEEK</a> - the standard field defining the\n  day-of-week from Monday (1) to Sunday (7)\n <li><a href=\"#!/api/java.time.temporal.IsoFields-property-WEEK_OF_WEEK_BASED_YEAR\" rel=\"java.time.temporal.IsoFields-property-WEEK_OF_WEEK_BASED_YEAR\" class=\"docClass\">WEEK_OF_WEEK_BASED_YEAR</a> - the week within the week-based-year\n <li><a href=\"#!/api/java.time.temporal.IsoFields-property-WEEK_BASED_YEAR\" rel=\"java.time.temporal.IsoFields-property-WEEK_BASED_YEAR\" class=\"docClass\">WEEK_BASED_YEAR</a> - the week-based-year\n </li></li></li></ul>\n The week-based-year itself is defined relative to the standard ISO proleptic year.\n It differs from the standard year in that it always starts on a Monday.\n <p>\n The first week of a week-based-year is the first Monday-based week of the standard\n ISO year that has at least 4 days in the new year.\n <ul>\n <li>If January 1st is Monday then week 1 starts on January 1st\n <li>If January 1st is Tuesday then week 1 starts on December 31st of the previous standard year\n <li>If January 1st is Wednesday then week 1 starts on December 30th of the previous standard year\n <li>If January 1st is Thursday then week 1 starts on December 29th of the previous standard year\n <li>If January 1st is Friday then week 1 starts on January 4th\n <li>If January 1st is Saturday then week 1 starts on January 3rd\n <li>If January 1st is Sunday then week 1 starts on January 2nd\n </li></li></li></li></li></li></li></ul>\n There are 52 weeks in most week-based years, however on occasion there are 53 weeks.\n <p>\n For example:</p>\n\n<p> <table cellpadding=\"0\" cellspacing=\"3\" border=\"0\" style=\"text-align: left; width: 50%;\">\n <caption>Examples of Week based Years</caption>\n <tr><th>Date</th><th>Day-of-week</th><th>Field values</th></tr>\n <tr><th>2008-12-28</th><td>Sunday</td><td>Week 52 of week-based-year 2008</td></tr>\n <tr><th>2008-12-29</th><td>Monday</td><td>Week 1 of week-based-year 2009</td></tr>\n <tr><th>2008-12-31</th><td>Wednesday</td><td>Week 1 of week-based-year 2009</td></tr>\n <tr><th>2009-01-01</th><td>Thursday</td><td>Week 1 of week-based-year 2009</td></tr>\n <tr><th>2009-01-04</th><td>Sunday</td><td>Week 1 of week-based-year 2009</td></tr>\n <tr><th>2009-01-05</th><td>Monday</td><td>Week 2 of week-based-year 2009</td></tr>\n </table></p>\n\n<p> @implSpec\n <p>\n This class is immutable and thread-safe.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DAY_OF_QUARTER' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.IsoFields'>java.time.temporal.IsoFields</span><br/><a href='source/IsoFields.html#java-time-temporal-IsoFields-property-DAY_OF_QUARTER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.IsoFields-property-DAY_OF_QUARTER' class='name expandable'>DAY_OF_QUARTER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The field that represents the day-of-quarter. ...</div><div class='long'><p>The field that represents the day-of-quarter.</p>\n\n<p><p>\nThis field allows the day-of-quarter value to be queried and set.\nThe day-of-quarter has values from 1 to 90 in Q1 of a standard year, from 1 to 91\nin Q1 of a leap year, from 1 to 91 in Q2 and from 1 to 92 in Q3 and Q4.\n<p>\nThe day-of-quarter can only be calculated if the day-of-year, month-of-year and year\nare available.\n<p>\nWhen setting this field, the value is allowed to be partially lenient, taking any\nvalue from 1 to 92. If the quarter has less than 92 days, then day 92, and\npotentially day 91, is in the following quarter.\n<p>\nIn the resolving phase of parsing, a date can be created from a year,\nquarter-of-year and day-of-quarter.\n<p>\nIn {@linkplain ResolverStyle#STRICT strict mode}, all three fields are\nvalidated against their range of valid values. The day-of-quarter field\nis validated from 1 to 90, 91 or 92 depending on the year and quarter.\n<p>\nIn {@linkplain ResolverStyle#SMART smart mode}, all three fields are\nvalidated against their range of valid values. The day-of-quarter field is\nvalidated between 1 and 92, ignoring the actual range based on the year and quarter.\nIf the day-of-quarter exceeds the actual range by one day, then the resulting date\nis one day later. If the day-of-quarter exceeds the actual range by two days,\nthen the resulting date is two days later.\n<p>\nIn {@linkplain ResolverStyle#LENIENT lenient mode}, only the year is validated\nagainst the range of valid values. The resulting date is calculated equivalent to\nthe following three stage approach. First, create a date on the first of January\nin the requested year. Then take the quarter-of-year, subtract one, and add the\namount in quarters to the date. Finally, take the day-of-quarter, subtract one,\nand add the amount in days to the date.\n<p>\nThis unit is an immutable and thread-safe singleton.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-QUARTER_OF_YEAR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.IsoFields'>java.time.temporal.IsoFields</span><br/><a href='source/IsoFields.html#java-time-temporal-IsoFields-property-QUARTER_OF_YEAR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.IsoFields-property-QUARTER_OF_YEAR' class='name expandable'>QUARTER_OF_YEAR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The field that represents the quarter-of-year. ...</div><div class='long'><p>The field that represents the quarter-of-year.</p>\n\n<p><p>\nThis field allows the quarter-of-year value to be queried and set.\nThe quarter-of-year has values from 1 to 4.\n<p>\nThe quarter-of-year can only be calculated if the month-of-year is available.\n<p>\nIn the resolving phase of parsing, a date can be created from a year,\nquarter-of-year and day-of-quarter.\nSee <a href=\"#!/api/java.time.temporal.IsoFields-property-DAY_OF_QUARTER\" rel=\"java.time.temporal.IsoFields-property-DAY_OF_QUARTER\" class=\"docClass\">DAY_OF_QUARTER</a> for details.\n<p>\nThis unit is an immutable and thread-safe singleton.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-QUARTER_YEARS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.IsoFields'>java.time.temporal.IsoFields</span><br/><a href='source/IsoFields.html#java-time-temporal-IsoFields-property-QUARTER_YEARS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.IsoFields-property-QUARTER_YEARS' class='name expandable'>QUARTER_YEARS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unit that represents the concept of a quarter-year. ...</div><div class='long'><p>Unit that represents the concept of a quarter-year.\nFor the ISO calendar system, it is equal to 3 months.\nThe estimated duration of a quarter-year is one quarter of {@code 365.2425 Days}.</p>\n\n<p><p>\nThis unit is an immutable and thread-safe singleton.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-WEEK_BASED_YEAR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.IsoFields'>java.time.temporal.IsoFields</span><br/><a href='source/IsoFields.html#java-time-temporal-IsoFields-property-WEEK_BASED_YEAR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.IsoFields-property-WEEK_BASED_YEAR' class='name expandable'>WEEK_BASED_YEAR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The field that represents the week-based-year. ...</div><div class='long'><p>The field that represents the week-based-year.</p>\n\n<p><p>\nThis field allows the week-based-year value to be queried and set.\n<p>\nThe field has a range that matches LocalDate.MAX and LocalDate.MIN.\n<p>\nIn the resolving phase of parsing, a date can be created from a\nweek-based-year, week-of-week-based-year and day-of-week.\nSee <a href=\"#!/api/java.time.temporal.IsoFields-property-WEEK_OF_WEEK_BASED_YEAR\" rel=\"java.time.temporal.IsoFields-property-WEEK_OF_WEEK_BASED_YEAR\" class=\"docClass\">WEEK_OF_WEEK_BASED_YEAR</a> for details.\n<p>\nThis unit is an immutable and thread-safe singleton.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-WEEK_BASED_YEARS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.IsoFields'>java.time.temporal.IsoFields</span><br/><a href='source/IsoFields.html#java-time-temporal-IsoFields-property-WEEK_BASED_YEARS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.IsoFields-property-WEEK_BASED_YEARS' class='name expandable'>WEEK_BASED_YEARS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The unit that represents week-based-years for the purpose of addition and subtraction. ...</div><div class='long'><p>The unit that represents week-based-years for the purpose of addition and subtraction.</p>\n\n<p><p>\nThis allows a number of week-based-years to be added to, or subtracted from, a date.\nThe unit is equal to either 52 or 53 weeks.\nThe estimated duration of a week-based-year is the same as that of a standard ISO\nyear at {@code 365.2425 Days}.\n<p>\nThe rules for addition add the number of week-based-years to the existing value\nfor the week-based-year field. If the resulting week-based-year only has 52 weeks,\nthen the date will be in week 1 of the following week-based-year.\n<p>\nThis unit is an immutable and thread-safe singleton.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-WEEK_OF_WEEK_BASED_YEAR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.IsoFields'>java.time.temporal.IsoFields</span><br/><a href='source/IsoFields.html#java-time-temporal-IsoFields-property-WEEK_OF_WEEK_BASED_YEAR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.IsoFields-property-WEEK_OF_WEEK_BASED_YEAR' class='name expandable'>WEEK_OF_WEEK_BASED_YEAR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The field that represents the week-of-week-based-year. ...</div><div class='long'><p>The field that represents the week-of-week-based-year.</p>\n\n<p><p>\nThis field allows the week of the week-based-year value to be queried and set.\nThe week-of-week-based-year has values from 1 to 52, or 53 if the\nweek-based-year has 53 weeks.\n<p>\nIn the resolving phase of parsing, a date can be created from a\nweek-based-year, week-of-week-based-year and day-of-week.\n<p>\nIn {@linkplain ResolverStyle#STRICT strict mode}, all three fields are\nvalidated against their range of valid values. The week-of-week-based-year\nfield is validated from 1 to 52 or 53 depending on the week-based-year.\n<p>\nIn {@linkplain ResolverStyle#SMART smart mode}, all three fields are\nvalidated against their range of valid values. The week-of-week-based-year\nfield is validated between 1 and 53, ignoring the week-based-year.\nIf the week-of-week-based-year is 53, but the week-based-year only has\n52 weeks, then the resulting date is in week 1 of the following week-based-year.\n<p>\nIn {@linkplain ResolverStyle#LENIENT lenient mode}, only the week-based-year\nis validated against the range of valid values. If the day-of-week is outside\nthe range 1 to 7, then the resulting date is adjusted by a suitable number of\nweeks to reduce the day-of-week to the range 1 to 7. If the week-of-week-based-year\nvalue is outside the range 1 to 52, then any excess weeks are added or subtracted\nfrom the resulting date.\n<p>\nThis unit is an immutable and thread-safe singleton.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div></div></div>","meta":{}});