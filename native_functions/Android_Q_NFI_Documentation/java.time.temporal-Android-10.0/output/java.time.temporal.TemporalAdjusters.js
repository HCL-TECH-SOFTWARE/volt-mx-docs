Ext.data.JsonP.java_time_temporal_TemporalAdjusters({"tagname":"class","name":"java.time.temporal.TemporalAdjusters","autodetected":{},"files":[{"filename":"TemporalAdjusters.js","href":"TemporalAdjusters.html#java-time-temporal-TemporalAdjusters"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"dayOfWeekInMonth","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-dayOfWeekInMonth","meta":{}},{"name":"firstDayOfMonth","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-firstDayOfMonth","meta":{}},{"name":"firstDayOfNextMonth","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-firstDayOfNextMonth","meta":{}},{"name":"firstDayOfNextYear","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-firstDayOfNextYear","meta":{}},{"name":"firstDayOfYear","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-firstDayOfYear","meta":{}},{"name":"firstInMonth","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-firstInMonth","meta":{}},{"name":"lastDayOfMonth","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-lastDayOfMonth","meta":{}},{"name":"lastDayOfYear","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-lastDayOfYear","meta":{}},{"name":"lastInMonth","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-lastInMonth","meta":{}},{"name":"next","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-next","meta":{}},{"name":"nextOrSame","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-nextOrSame","meta":{}},{"name":"ofDateAdjuster","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-ofDateAdjuster","meta":{}},{"name":"previous","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-previous","meta":{}},{"name":"previousOrSame","tagname":"method","owner":"java.time.temporal.TemporalAdjusters","id":"method-previousOrSame","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.temporal.TemporalAdjusters","short_doc":"Common and useful TemporalAdjusters. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.temporal.TemporalAdjusters</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters' target='_blank'>TemporalAdjusters.js</a></div></pre><div class='doc-contents'><p>Common and useful TemporalAdjusters.\n <p>\n Adjusters are a key tool for modifying temporal objects.\n They exist to externalize the process of adjustment, permitting different\n approaches, as per the strategy design pattern.\n Examples might be an adjuster that sets the date avoiding weekends, or one that\n sets the date to the last day of the month.\n <p>\n There are two equivalent ways of using a {@code TemporalAdjuster}.\n The first is to invoke the method on the interface directly.\n The second is to use java.time.temporal.Temporal.with(java.time.temporal.TemporalAdjuster):</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   temporal = thisAdjuster.adjustInto(temporal);\n   temporal = temporal.with(thisAdjuster);\n </pre>\n\n\n<p> It is recommended to use the second approach, {@code with(TemporalAdjuster)},\n as it is a lot clearer to read in code.\n <p>\n This class contains a standard set of adjusters, available as static methods.\n These include:\n <ul>\n <li>finding the first or last day of the month\n <li>finding the first day of next month\n <li>finding the first or last day of the year\n <li>finding the first day of next year\n <li>finding the first or last day-of-week within a month, such as \"first Wednesday in June\"\n <li>finding the next or previous day-of-week, such as \"next Thursday\"\n </li></li></li></li></li></li></ul></p>\n\n<p> @implSpec\n All the implementations supplied by the static methods are immutable.</p>\n\n<p> @see TemporalAdjuster</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dayOfWeekInMonth' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-dayOfWeekInMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-dayOfWeekInMonth' class='name expandable'>dayOfWeekInMonth</a>( <span class='pre'>ordinal, dayOfWeek</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the day-of-week in month adjuster, which returns a new date\n in the same month with the ordinal day-of-week. ...</div><div class='long'><p>Returns the day-of-week in month adjuster, which returns a new date\n in the same month with the ordinal day-of-week.\n This is used for expressions like the 'second Tuesday in March'.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-12-15 for (1,TUESDAY) will return 2011-12-06.<br>\n The input 2011-12-15 for (2,TUESDAY) will return 2011-12-13.<br>\n The input 2011-12-15 for (3,TUESDAY) will return 2011-12-20.<br>\n The input 2011-12-15 for (4,TUESDAY) will return 2011-12-27.<br>\n The input 2011-12-15 for (5,TUESDAY) will return 2012-01-03.<br>\n The input 2011-12-15 for (-1,TUESDAY) will return 2011-12-27 (last in month).<br>\n The input 2011-12-15 for (-4,TUESDAY) will return 2011-12-06 (3 weeks before last in month).<br>\n The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month).<br>\n The input 2011-12-15 for (0,TUESDAY) will return 2011-11-29 (last in previous month).<br>\n <p>\n For a positive or zero ordinal, the algorithm is equivalent to finding the first\n day-of-week that matches within the month and then adding a number of weeks to it.\n For a negative ordinal, the algorithm is equivalent to finding the last\n day-of-week that matches within the month and then subtracting a number of weeks to it.\n The ordinal number of weeks is not validated and is interpreted leniently\n according to this algorithm. This definition means that an ordinal of zero finds\n the last matching day-of-week in the previous month.\n <p>\n The behavior is suitable for use with most calendar systems.\n It uses the {@code DAY_OF_WEEK} and {@code DAY_OF_MONTH} fields\n and the {@code DAYS} unit, and assumes a seven day week.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ordinal</span> : Number<div class='sub-desc'><p>the week within the month, unbounded but typically from -5 to 5</p>\n</div></li><li><span class='pre'>dayOfWeek</span> : Object {DayOfWeek}<div class='sub-desc'><p>the day-of-week, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the day-of-week in month adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-firstDayOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-firstDayOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-firstDayOfMonth' class='name expandable'>firstDayOfMonth</a>( <span class='pre'></span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the \"first day of month\" adjuster, which returns a new date set to\n the first day of the current month. ...</div><div class='long'><p>Returns the \"first day of month\" adjuster, which returns a new date set to\n the first day of the current month.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 will return 2011-01-01.<br>\n The input 2011-02-15 will return 2011-02-01.\n <p>\n The behavior is suitable for use with most calendar systems.\n It is equivalent to:</p>\n\n<pre>  temporal.with(DAY_OF_MONTH, 1);\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the first day-of-month adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-firstDayOfNextMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-firstDayOfNextMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-firstDayOfNextMonth' class='name expandable'>firstDayOfNextMonth</a>( <span class='pre'></span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the \"first day of next month\" adjuster, which returns a new date set to\n the first day of the next month. ...</div><div class='long'><p>Returns the \"first day of next month\" adjuster, which returns a new date set to\n the first day of the next month.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 will return 2011-02-01.<br>\n The input 2011-02-15 will return 2011-03-01.\n <p>\n The behavior is suitable for use with most calendar systems.\n It is equivalent to:</p>\n\n<pre>  temporal.with(DAY_OF_MONTH, 1).plus(1, MONTHS);\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the first day of next month adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-firstDayOfNextYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-firstDayOfNextYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-firstDayOfNextYear' class='name expandable'>firstDayOfNextYear</a>( <span class='pre'></span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the \"first day of next year\" adjuster, which returns a new date set to\n the first day of the next year. ...</div><div class='long'><p>Returns the \"first day of next year\" adjuster, which returns a new date set to\n the first day of the next year.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 will return 2012-01-01.\n <p>\n The behavior is suitable for use with most calendar systems.\n It is equivalent to:</p>\n\n<pre>  temporal.with(DAY_OF_YEAR, 1).plus(1, YEARS);\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the first day of next month adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-firstDayOfYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-firstDayOfYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-firstDayOfYear' class='name expandable'>firstDayOfYear</a>( <span class='pre'></span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the \"first day of year\" adjuster, which returns a new date set to\n the first day of the current year. ...</div><div class='long'><p>Returns the \"first day of year\" adjuster, which returns a new date set to\n the first day of the current year.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 will return 2011-01-01.<br>\n The input 2011-02-15 will return 2011-01-01.<br>\n <p>\n The behavior is suitable for use with most calendar systems.\n It is equivalent to:</p>\n\n<pre>  temporal.with(DAY_OF_YEAR, 1);\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the first day-of-year adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-firstInMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-firstInMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-firstInMonth' class='name expandable'>firstInMonth</a>( <span class='pre'>dayOfWeek</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the first in month adjuster, which returns a new date\n in the same month with the first matching day-of-week. ...</div><div class='long'><p>Returns the first in month adjuster, which returns a new date\n in the same month with the first matching day-of-week.\n This is used for expressions like 'first Tuesday in March'.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-12-15 for (MONDAY) will return 2011-12-05.<br>\n The input 2011-12-15 for (FRIDAY) will return 2011-12-02.<br>\n <p>\n The behavior is suitable for use with most calendar systems.\n It uses the {@code DAY_OF_WEEK} and {@code DAY_OF_MONTH} fields\n and the {@code DAYS} unit, and assumes a seven day week.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfWeek</span> : Object {DayOfWeek}<div class='sub-desc'><p>the day-of-week, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the first in month adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-lastDayOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-lastDayOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-lastDayOfMonth' class='name expandable'>lastDayOfMonth</a>( <span class='pre'></span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the \"last day of month\" adjuster, which returns a new date set to\n the last day of the current month. ...</div><div class='long'><p>Returns the \"last day of month\" adjuster, which returns a new date set to\n the last day of the current month.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 will return 2011-01-31.<br>\n The input 2011-02-15 will return 2011-02-28.<br>\n The input 2012-02-15 will return 2012-02-29 (leap year).<br>\n The input 2011-04-15 will return 2011-04-30.\n <p>\n The behavior is suitable for use with most calendar systems.\n It is equivalent to:</p>\n\n<pre>  long lastDay = temporal.range(DAY_OF_MONTH).getMaximum();\n  temporal.with(DAY_OF_MONTH, lastDay);\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the last day-of-month adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-lastDayOfYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-lastDayOfYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-lastDayOfYear' class='name expandable'>lastDayOfYear</a>( <span class='pre'></span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the \"last day of year\" adjuster, which returns a new date set to\n the last day of the current year. ...</div><div class='long'><p>Returns the \"last day of year\" adjuster, which returns a new date set to\n the last day of the current year.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 will return 2011-12-31.<br>\n The input 2011-02-15 will return 2011-12-31.<br>\n <p>\n The behavior is suitable for use with most calendar systems.\n It is equivalent to:</p>\n\n<pre>  long lastDay = temporal.range(DAY_OF_YEAR).getMaximum();\n  temporal.with(DAY_OF_YEAR, lastDay);\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the last day-of-year adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-lastInMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-lastInMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-lastInMonth' class='name expandable'>lastInMonth</a>( <span class='pre'>dayOfWeek</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the last in month adjuster, which returns a new date\n in the same month with the last matching day-of-week. ...</div><div class='long'><p>Returns the last in month adjuster, which returns a new date\n in the same month with the last matching day-of-week.\n This is used for expressions like 'last Tuesday in March'.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-12-15 for (MONDAY) will return 2011-12-26.<br>\n The input 2011-12-15 for (FRIDAY) will return 2011-12-30.<br>\n <p>\n The behavior is suitable for use with most calendar systems.\n It uses the {@code DAY_OF_WEEK} and {@code DAY_OF_MONTH} fields\n and the {@code DAYS} unit, and assumes a seven day week.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfWeek</span> : Object {DayOfWeek}<div class='sub-desc'><p>the day-of-week, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the first in month adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-next' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-next' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-next' class='name expandable'>next</a>( <span class='pre'>dayOfWeek</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the next day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified day-of-week a...</div><div class='long'><p>Returns the next day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified day-of-week after the date being adjusted.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).<br>\n The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).<br>\n The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).\n <p>\n The behavior is suitable for use with most calendar systems.\n It uses the {@code DAY_OF_WEEK} field and the {@code DAYS} unit,\n and assumes a seven day week.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfWeek</span> : Object {DayOfWeek}<div class='sub-desc'><p>the day-of-week to move the date to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the next day-of-week adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-nextOrSame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-nextOrSame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-nextOrSame' class='name expandable'>nextOrSame</a>( <span class='pre'>dayOfWeek</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the next-or-same day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified day-o...</div><div class='long'><p>Returns the next-or-same day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified day-of-week after the date being adjusted\n unless it is already on that day in which case the same object is returned.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).<br>\n The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).<br>\n The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).\n <p>\n The behavior is suitable for use with most calendar systems.\n It uses the {@code DAY_OF_WEEK} field and the {@code DAYS} unit,\n and assumes a seven day week.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfWeek</span> : Object {DayOfWeek}<div class='sub-desc'><p>the day-of-week to check for or move the date to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the next-or-same day-of-week adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-ofDateAdjuster' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-ofDateAdjuster' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-ofDateAdjuster' class='name expandable'>ofDateAdjuster</a>( <span class='pre'>dateBasedAdjuster</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code TemporalAdjuster} that wraps a date adjuster. ...</div><div class='long'><p>Obtains a {@code TemporalAdjuster} that wraps a date adjuster.\n <p>\n The {@code TemporalAdjuster} is based on the low level {@code Temporal} interface.\n This method allows an adjustment from {@code LocalDate} to {@code LocalDate}\n to be wrapped to match the temporal-based interface.\n This is provided for convenience to make user-written adjusters simpler.\n <p>\n In general, user-written adjusters should be static constants:\n <pre>{@code\n  static TemporalAdjuster TWO_DAYS_LATER =\n       TemporalAdjusters.ofDateAdjuster(date -> date.plusDays(2));\n }</pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dateBasedAdjuster</span> : Object {java.util.function.UnaryOperator}<div class='sub-desc'><p>the date-based adjuster, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the temporal adjuster wrapping on the date adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-previous' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-previous' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-previous' class='name expandable'>previous</a>( <span class='pre'>dayOfWeek</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the previous day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified day-of-we...</div><div class='long'><p>Returns the previous day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified day-of-week before the date being adjusted.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).<br>\n The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).<br>\n The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).\n <p>\n The behavior is suitable for use with most calendar systems.\n It uses the {@code DAY_OF_WEEK} field and the {@code DAYS} unit,\n and assumes a seven day week.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfWeek</span> : Object {DayOfWeek}<div class='sub-desc'><p>the day-of-week to move the date to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the previous day-of-week adjuster, not null</p>\n</div></li></ul></div></div></div><div id='method-previousOrSame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.temporal.TemporalAdjusters'>java.time.temporal.TemporalAdjusters</span><br/><a href='source/TemporalAdjusters.html#java-time-temporal-TemporalAdjusters-method-previousOrSame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.temporal.TemporalAdjusters-method-previousOrSame' class='name expandable'>previousOrSame</a>( <span class='pre'>dayOfWeek</span> ) : Object {java.time.temporal.TemporalAdjuster}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the previous-or-same day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified d...</div><div class='long'><p>Returns the previous-or-same day-of-week adjuster, which adjusts the date to the\n first occurrence of the specified day-of-week before the date being adjusted\n unless it is already on that day in which case the same object is returned.\n <p>\n The ISO calendar system behaves as follows:<br>\n The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).<br>\n The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).<br>\n The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).\n <p>\n The behavior is suitable for use with most calendar systems.\n It uses the {@code DAY_OF_WEEK} field and the {@code DAYS} unit,\n and assumes a seven day week.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfWeek</span> : Object {DayOfWeek}<div class='sub-desc'><p>the day-of-week to check for or move the date to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.TemporalAdjuster}</span><div class='sub-desc'><p>the previous-or-same day-of-week adjuster, not null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});