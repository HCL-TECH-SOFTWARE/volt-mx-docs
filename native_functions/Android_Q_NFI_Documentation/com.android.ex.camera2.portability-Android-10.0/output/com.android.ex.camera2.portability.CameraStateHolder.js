Ext.data.JsonP.com_android_ex_camera2_portability_CameraStateHolder({"tagname":"class","name":"com.android.ex.camera2.portability.CameraStateHolder","autodetected":{},"files":[{"filename":"CameraStateHolder.js","href":"CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder"}],"extends":"java.lang.Object","members":[{"name":"getState","tagname":"method","owner":"com.android.ex.camera2.portability.CameraStateHolder","id":"method-getState","meta":{}},{"name":"invalidate","tagname":"method","owner":"com.android.ex.camera2.portability.CameraStateHolder","id":"method-invalidate","meta":{}},{"name":"isInvalid","tagname":"method","owner":"com.android.ex.camera2.portability.CameraStateHolder","id":"method-isInvalid","meta":{}},{"name":"setState","tagname":"method","owner":"com.android.ex.camera2.portability.CameraStateHolder","id":"method-setState","meta":{}},{"name":"waitForStates","tagname":"method","owner":"com.android.ex.camera2.portability.CameraStateHolder","id":"method-waitForStates","meta":{}},{"name":"waitToAvoidStates","tagname":"method","owner":"com.android.ex.camera2.portability.CameraStateHolder","id":"method-waitToAvoidStates","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.ex.camera2.portability.CameraStateHolder","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.ex.camera2.portability.CameraStateHolder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder' target='_blank'>CameraStateHolder.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getState' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.portability.CameraStateHolder'>com.android.ex.camera2.portability.CameraStateHolder</span><br/><a href='source/CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.portability.CameraStateHolder-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtain the current state. ...</div><div class='long'><p>Obtain the current state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The current state.</p>\n</div></li></ul></div></div></div><div id='method-invalidate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.portability.CameraStateHolder'>com.android.ex.camera2.portability.CameraStateHolder</span><br/><a href='source/CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder-method-invalidate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.portability.CameraStateHolder-method-invalidate' class='name expandable'>invalidate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the state to be invalid. ...</div><div class='long'><p>Change the state to be invalid. Once invalidated, the state will be invalid forever.</p>\n</div></div></div><div id='method-isInvalid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.portability.CameraStateHolder'>com.android.ex.camera2.portability.CameraStateHolder</span><br/><a href='source/CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder-method-isInvalid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.portability.CameraStateHolder-method-isInvalid' class='name expandable'>isInvalid</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether the state is invalid. ...</div><div class='long'><p>Whether the state is invalid.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the state is invalid.</p>\n</div></li></ul></div></div></div><div id='method-setState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.portability.CameraStateHolder'>com.android.ex.camera2.portability.CameraStateHolder</span><br/><a href='source/CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder-method-setState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.portability.CameraStateHolder-method-setState' class='name expandable'>setState</a>( <span class='pre'>state</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change to a new state. ...</div><div class='long'><p>Change to a new state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>state</span> : Number<div class='sub-desc'><p>The new state.</p>\n</div></li></ul></div></div></div><div id='method-waitForStates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.portability.CameraStateHolder'>com.android.ex.camera2.portability.CameraStateHolder</span><br/><a href='source/CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder-method-waitForStates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.portability.CameraStateHolder-method-waitForStates' class='name expandable'>waitForStates</a>( <span class='pre'>states</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Block the current thread until the state becomes one of the\n specified. ...</div><div class='long'><p>Block the current thread until the state becomes one of the\n specified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>states</span> : Number<div class='sub-desc'><p>Expected states.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false} if the wait is interrupted or timeout limit is\n         reached.</p>\n</div></li></ul></div></div></div><div id='method-waitToAvoidStates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.portability.CameraStateHolder'>com.android.ex.camera2.portability.CameraStateHolder</span><br/><a href='source/CameraStateHolder.html#com-android-ex-camera2-portability-CameraStateHolder-method-waitToAvoidStates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.portability.CameraStateHolder-method-waitToAvoidStates' class='name expandable'>waitToAvoidStates</a>( <span class='pre'>states</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Block the current thread until the state becomes NOT one of the\n specified. ...</div><div class='long'><p>Block the current thread until the state becomes NOT one of the\n specified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>states</span> : Number<div class='sub-desc'><p>States to avoid.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false} if the wait is interrupted or timeout limit is\n         reached.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});