Ext.data.JsonP.android_opengl_Matrix({"tagname":"class","name":"android.opengl.Matrix","autodetected":{},"files":[{"filename":"Matrix.js","href":"Matrix.html#android-opengl-Matrix"}],"extends":"java.lang.Object","members":[{"name":"frustumM","tagname":"method","owner":"android.opengl.Matrix","id":"method-frustumM","meta":{}},{"name":"invertM","tagname":"method","owner":"android.opengl.Matrix","id":"method-invertM","meta":{}},{"name":"length","tagname":"method","owner":"android.opengl.Matrix","id":"method-length","meta":{}},{"name":"multiplyMM","tagname":"method","owner":"android.opengl.Matrix","id":"method-multiplyMM","meta":{}},{"name":"multiplyMV","tagname":"method","owner":"android.opengl.Matrix","id":"method-multiplyMV","meta":{}},{"name":"orthoM","tagname":"method","owner":"android.opengl.Matrix","id":"method-orthoM","meta":{}},{"name":"perspectiveM","tagname":"method","owner":"android.opengl.Matrix","id":"method-perspectiveM","meta":{}},{"name":"rotateM","tagname":"method","owner":"android.opengl.Matrix","id":"method-rotateM","meta":{}},{"name":"scaleM","tagname":"method","owner":"android.opengl.Matrix","id":"method-scaleM","meta":{}},{"name":"setIdentityM","tagname":"method","owner":"android.opengl.Matrix","id":"method-setIdentityM","meta":{}},{"name":"setLookAtM","tagname":"method","owner":"android.opengl.Matrix","id":"method-setLookAtM","meta":{}},{"name":"setRotateEulerM","tagname":"method","owner":"android.opengl.Matrix","id":"method-setRotateEulerM","meta":{}},{"name":"setRotateM","tagname":"method","owner":"android.opengl.Matrix","id":"method-setRotateM","meta":{}},{"name":"translateM","tagname":"method","owner":"android.opengl.Matrix","id":"method-translateM","meta":{}},{"name":"transposeM","tagname":"method","owner":"android.opengl.Matrix","id":"method-transposeM","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.opengl.Matrix","short_doc":"Matrix math utilities. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.opengl.Matrix</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Matrix.html#android-opengl-Matrix' target='_blank'>Matrix.js</a></div></pre><div class='doc-contents'><p>Matrix math utilities. These methods operate on OpenGL ES format\n matrices and vectors stored in float arrays.\n <p>\n Matrices are 4 x 4 column-vector matrices stored in column-major\n order:</p>\n\n<pre>  m[offset +  0] m[offset +  4] m[offset +  8] m[offset + 12]\n  m[offset +  1] m[offset +  5] m[offset +  9] m[offset + 13]\n  m[offset +  2] m[offset +  6] m[offset + 10] m[offset + 14]\n  m[offset +  3] m[offset +  7] m[offset + 11] m[offset + 15]</pre>\n\n\n<p> Vectors are 4 x 1 column vectors stored in order:</p>\n\n<pre> v[offset + 0]\n v[offset + 1]\n v[offset + 2]\n v[offset + 3]</pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-frustumM' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-frustumM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-frustumM' class='name expandable'>frustumM</a>( <span class='pre'>m, offset, left, right, bottom, top, near, far</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines a projection matrix in terms of six clip planes. ...</div><div class='long'><p>Defines a projection matrix in terms of six clip planes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>the float array that holds the output perspective matrix</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the offset into float array m where the perspective\n        matrix data is written</p>\n</div></li><li><span class='pre'>left</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>near</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>far</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-invertM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-invertM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-invertM' class='name expandable'>invertM</a>( <span class='pre'>mInv, mInvOffset, m, mOffset</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Inverts a 4 x 4 matrix. ...</div><div class='long'><p>Inverts a 4 x 4 matrix.\n <p>\n mInv and m must not overlap.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mInv</span> : Object {float[]}<div class='sub-desc'><p>the array that holds the output inverted matrix</p>\n</div></li><li><span class='pre'>mInvOffset</span> : Number<div class='sub-desc'><p>an offset into mInv where the inverted matrix is\n        stored.</p>\n</div></li><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>the input array</p>\n</div></li><li><span class='pre'>mOffset</span> : Number<div class='sub-desc'><p>an offset into m where the input matrix is stored.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the matrix could be inverted, false if it could not.</p>\n</div></li></ul></div></div></div><div id='method-length' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-length' class='name expandable'>length</a>( <span class='pre'>x, y, z</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Computes the length of a vector. ...</div><div class='long'><p>Computes the length of a vector.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>x coordinate of a vector</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>y coordinate of a vector</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>z coordinate of a vector</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the length of a vector</p>\n</div></li></ul></div></div></div><div id='method-multiplyMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-multiplyMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-multiplyMM' class='name expandable'>multiplyMM</a>( <span class='pre'>result, resultOffset, lhs, lhsOffset, rhs, rhsOffset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Multiplies two 4x4 matrices together and stores the result in a third 4x4\n matrix. ...</div><div class='long'><p>Multiplies two 4x4 matrices together and stores the result in a third 4x4\n matrix. In matrix notation: result = lhs x rhs. Due to the way\n matrix multiplication works, the result matrix will have the same\n effect as first multiplying by the rhs matrix, then multiplying by\n the lhs matrix. This is the opposite of what you might expect.\n <p>\n The same float array may be passed for result, lhs, and/or rhs. However,\n the result element values are undefined if the result elements overlap\n either the lhs or rhs elements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>result</span> : Object {float[]}<div class='sub-desc'><p>The float array that holds the result.</p>\n</div></li><li><span class='pre'>resultOffset</span> : Number<div class='sub-desc'><p>The offset into the result array where the result is\n        stored.</p>\n</div></li><li><span class='pre'>lhs</span> : Object {float[]}<div class='sub-desc'><p>The float array that holds the left-hand-side matrix.</p>\n</div></li><li><span class='pre'>lhsOffset</span> : Number<div class='sub-desc'><p>The offset into the lhs array where the lhs is stored</p>\n</div></li><li><span class='pre'>rhs</span> : Object {float[]}<div class='sub-desc'><p>The float array that holds the right-hand-side matrix.</p>\n</div></li><li><span class='pre'>rhsOffset</span> : Number<div class='sub-desc'><p>The offset into the rhs array where the rhs is stored.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if result, lhs, or rhs are null, or if\n resultOffset + 16 > result.length or lhsOffset + 16 > lhs.length or\n rhsOffset + 16 > rhs.length.</p>\n</div></li></ul></div></div></div><div id='method-multiplyMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-multiplyMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-multiplyMV' class='name expandable'>multiplyMV</a>( <span class='pre'>resultVec, resultVecOffset, lhsMat, lhsMatOffset, rhsVec, rhsVecOffset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Multiplies a 4 element vector by a 4x4 matrix and stores the result in a\n 4-element column vector. ...</div><div class='long'><p>Multiplies a 4 element vector by a 4x4 matrix and stores the result in a\n 4-element column vector. In matrix notation: result = lhs x rhs\n <p>\n The same float array may be passed for resultVec, lhsMat, and/or rhsVec.\n However, the resultVec element values are undefined if the resultVec\n elements overlap either the lhsMat or rhsVec elements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resultVec</span> : Object {float[]}<div class='sub-desc'><p>The float array that holds the result vector.</p>\n</div></li><li><span class='pre'>resultVecOffset</span> : Number<div class='sub-desc'><p>The offset into the result array where the result\n        vector is stored.</p>\n</div></li><li><span class='pre'>lhsMat</span> : Object {float[]}<div class='sub-desc'><p>The float array that holds the left-hand-side matrix.</p>\n</div></li><li><span class='pre'>lhsMatOffset</span> : Number<div class='sub-desc'><p>The offset into the lhs array where the lhs is stored</p>\n</div></li><li><span class='pre'>rhsVec</span> : Object {float[]}<div class='sub-desc'><p>The float array that holds the right-hand-side vector.</p>\n</div></li><li><span class='pre'>rhsVecOffset</span> : Number<div class='sub-desc'><p>The offset into the rhs vector where the rhs vector\n        is stored.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if resultVec, lhsMat,\n or rhsVec are null, or if resultVecOffset + 4 > resultVec.length\n or lhsMatOffset + 16 > lhsMat.length or\n rhsVecOffset + 4 > rhsVec.length.</p>\n</div></li></ul></div></div></div><div id='method-orthoM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-orthoM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-orthoM' class='name expandable'>orthoM</a>( <span class='pre'>m, mOffset, left, right, bottom, top, near, far</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Computes an orthographic projection matrix. ...</div><div class='long'><p>Computes an orthographic projection matrix.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>returns the result</p>\n</div></li><li><span class='pre'>mOffset</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>left</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>near</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>far</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-perspectiveM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-perspectiveM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-perspectiveM' class='name expandable'>perspectiveM</a>( <span class='pre'>m, offset, fovy, aspect, zNear, zFar</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines a projection matrix in terms of a field of view angle, an\n aspect ratio, and z clip planes. ...</div><div class='long'><p>Defines a projection matrix in terms of a field of view angle, an\n aspect ratio, and z clip planes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>the float array that holds the perspective matrix</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the offset into float array m where the perspective\n        matrix data is written</p>\n</div></li><li><span class='pre'>fovy</span> : Number<div class='sub-desc'><p>field of view in y direction, in degrees</p>\n</div></li><li><span class='pre'>aspect</span> : Number<div class='sub-desc'><p>width to height aspect ratio of the viewport</p>\n</div></li><li><span class='pre'>zNear</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>zFar</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-rotateM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-rotateM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-rotateM' class='name expandable'>rotateM</a>( <span class='pre'>m, mOffset, a, x, y, z</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Rotates matrix m in place by angle a (in degrees)\n around the axis (x, y, z). ...</div><div class='long'><p>Rotates matrix m in place by angle a (in degrees)\n around the axis (x, y, z).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>source matrix</p>\n</div></li><li><span class='pre'>mOffset</span> : Number<div class='sub-desc'><p>index into m where the matrix starts</p>\n</div></li><li><span class='pre'>a</span> : Number<div class='sub-desc'><p>angle to rotate in degrees</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>X axis component</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>Y axis component</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>Z axis component</p>\n</div></li></ul></div></div></div><div id='method-scaleM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-scaleM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-scaleM' class='name expandable'>scaleM</a>( <span class='pre'>m, mOffset, x, y, z</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Scales matrix m in place by sx, sy, and sz. ...</div><div class='long'><p>Scales matrix m in place by sx, sy, and sz.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>matrix to scale</p>\n</div></li><li><span class='pre'>mOffset</span> : Number<div class='sub-desc'><p>index into m where the matrix starts</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>scale factor x</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>scale factor y</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>scale factor z</p>\n</div></li></ul></div></div></div><div id='method-setIdentityM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-setIdentityM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-setIdentityM' class='name expandable'>setIdentityM</a>( <span class='pre'>sm, smOffset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets matrix m to the identity matrix. ...</div><div class='long'><p>Sets matrix m to the identity matrix.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sm</span> : Object {float[]}<div class='sub-desc'><p>returns the result</p>\n</div></li><li><span class='pre'>smOffset</span> : Number<div class='sub-desc'><p>index into sm where the result matrix starts</p>\n</div></li></ul></div></div></div><div id='method-setLookAtM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-setLookAtM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-setLookAtM' class='name expandable'>setLookAtM</a>( <span class='pre'>rm, rmOffset, eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines a viewing transformation in terms of an eye point, a center of\n view, and an up vector. ...</div><div class='long'><p>Defines a viewing transformation in terms of an eye point, a center of\n view, and an up vector.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rm</span> : Object {float[]}<div class='sub-desc'><p>returns the result</p>\n</div></li><li><span class='pre'>rmOffset</span> : Number<div class='sub-desc'><p>index into rm where the result matrix starts</p>\n</div></li><li><span class='pre'>eyeX</span> : Number<div class='sub-desc'><p>eye point X</p>\n</div></li><li><span class='pre'>eyeY</span> : Number<div class='sub-desc'><p>eye point Y</p>\n</div></li><li><span class='pre'>eyeZ</span> : Number<div class='sub-desc'><p>eye point Z</p>\n</div></li><li><span class='pre'>centerX</span> : Number<div class='sub-desc'><p>center of view X</p>\n</div></li><li><span class='pre'>centerY</span> : Number<div class='sub-desc'><p>center of view Y</p>\n</div></li><li><span class='pre'>centerZ</span> : Number<div class='sub-desc'><p>center of view Z</p>\n</div></li><li><span class='pre'>upX</span> : Number<div class='sub-desc'><p>up vector X</p>\n</div></li><li><span class='pre'>upY</span> : Number<div class='sub-desc'><p>up vector Y</p>\n</div></li><li><span class='pre'>upZ</span> : Number<div class='sub-desc'><p>up vector Z</p>\n</div></li></ul></div></div></div><div id='method-setRotateEulerM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-setRotateEulerM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-setRotateEulerM' class='name expandable'>setRotateEulerM</a>( <span class='pre'>rm, rmOffset, x, y, z</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts Euler angles to a rotation matrix. ...</div><div class='long'><p>Converts Euler angles to a rotation matrix.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rm</span> : Object {float[]}<div class='sub-desc'><p>returns the result</p>\n</div></li><li><span class='pre'>rmOffset</span> : Number<div class='sub-desc'><p>index into rm where the result matrix starts</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>angle of rotation, in degrees</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>angle of rotation, in degrees</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>angle of rotation, in degrees</p>\n</div></li></ul></div></div></div><div id='method-setRotateM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-setRotateM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-setRotateM' class='name expandable'>setRotateM</a>( <span class='pre'>rm, rmOffset, a, x, y, z</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a matrix for rotation by angle a (in degrees)\n around the axis (x, y, z). ...</div><div class='long'><p>Creates a matrix for rotation by angle a (in degrees)\n around the axis (x, y, z).\n <p>\n An optimized path will be used for rotation about a major axis\n (e.g. x=1.0f y=0.0f z=0.0f).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rm</span> : Object {float[]}<div class='sub-desc'><p>returns the result</p>\n</div></li><li><span class='pre'>rmOffset</span> : Number<div class='sub-desc'><p>index into rm where the result matrix starts</p>\n</div></li><li><span class='pre'>a</span> : Number<div class='sub-desc'><p>angle to rotate in degrees</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>X axis component</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>Y axis component</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>Z axis component</p>\n</div></li></ul></div></div></div><div id='method-translateM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-translateM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-translateM' class='name expandable'>translateM</a>( <span class='pre'>m, mOffset, x, y, z</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Translates matrix m by x, y, and z in place. ...</div><div class='long'><p>Translates matrix m by x, y, and z in place.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>matrix</p>\n</div></li><li><span class='pre'>mOffset</span> : Number<div class='sub-desc'><p>index into m where the matrix starts</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>translation factor x</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>translation factor y</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>translation factor z</p>\n</div></li></ul></div></div></div><div id='method-transposeM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.Matrix'>android.opengl.Matrix</span><br/><a href='source/Matrix.html#android-opengl-Matrix-method-transposeM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.Matrix-method-transposeM' class='name expandable'>transposeM</a>( <span class='pre'>mTrans, mTransOffset, m, mOffset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Transposes a 4 x 4 matrix. ...</div><div class='long'><p>Transposes a 4 x 4 matrix.\n <p>\n mTrans and m must not overlap.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mTrans</span> : Object {float[]}<div class='sub-desc'><p>the array that holds the output transposed matrix</p>\n</div></li><li><span class='pre'>mTransOffset</span> : Number<div class='sub-desc'><p>an offset into mTrans where the transposed matrix is\n        stored.</p>\n</div></li><li><span class='pre'>m</span> : Object {float[]}<div class='sub-desc'><p>the input array</p>\n</div></li><li><span class='pre'>mOffset</span> : Number<div class='sub-desc'><p>an offset into m where the input matrix is stored.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});