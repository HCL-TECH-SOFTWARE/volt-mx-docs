Ext.data.JsonP.android_opengl_GLU({"tagname":"class","name":"android.opengl.GLU","autodetected":{},"files":[{"filename":"GLU.js","href":"GLU.html#android-opengl-GLU"}],"extends":"java.lang.Object","members":[{"name":"gluErrorString","tagname":"method","owner":"android.opengl.GLU","id":"method-gluErrorString","meta":{}},{"name":"gluLookAt","tagname":"method","owner":"android.opengl.GLU","id":"method-gluLookAt","meta":{}},{"name":"gluOrtho2D","tagname":"method","owner":"android.opengl.GLU","id":"method-gluOrtho2D","meta":{}},{"name":"gluPerspective","tagname":"method","owner":"android.opengl.GLU","id":"method-gluPerspective","meta":{}},{"name":"gluProject","tagname":"method","owner":"android.opengl.GLU","id":"method-gluProject","meta":{}},{"name":"gluUnProject","tagname":"method","owner":"android.opengl.GLU","id":"method-gluUnProject","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.opengl.GLU","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.opengl.GLU</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/GLU.html#android-opengl-GLU' target='_blank'>GLU.js</a></div></pre><div class='doc-contents'><p>A set of GL utilities inspired by the OpenGL Utility Toolkit.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-gluErrorString' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.GLU'>android.opengl.GLU</span><br/><a href='source/GLU.html#android-opengl-GLU-method-gluErrorString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.GLU-method-gluErrorString' class='name expandable'>gluErrorString</a>( <span class='pre'>error</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return an error string from a GL or GLU error code. ...</div><div class='long'><p>Return an error string from a GL or GLU error code.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Number<div class='sub-desc'><ul>\n<li>a GL or GLU error code.</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the error string for the input error code, or NULL if the input\n         was not a valid GL or GLU error code.</p>\n</div></li></ul></div></div></div><div id='method-gluLookAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.GLU'>android.opengl.GLU</span><br/><a href='source/GLU.html#android-opengl-GLU-method-gluLookAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.GLU-method-gluLookAt' class='name expandable'>gluLookAt</a>( <span class='pre'>gl, eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Define a viewing transformation in terms of an eye point, a center of\n view, and an up vector. ...</div><div class='long'><p>Define a viewing transformation in terms of an eye point, a center of\n view, and an up vector.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>gl</span> : Object {GL10}<div class='sub-desc'><p>a GL10 interface</p>\n</div></li><li><span class='pre'>eyeX</span> : Number<div class='sub-desc'><p>eye point X</p>\n</div></li><li><span class='pre'>eyeY</span> : Number<div class='sub-desc'><p>eye point Y</p>\n</div></li><li><span class='pre'>eyeZ</span> : Number<div class='sub-desc'><p>eye point Z</p>\n</div></li><li><span class='pre'>centerX</span> : Number<div class='sub-desc'><p>center of view X</p>\n</div></li><li><span class='pre'>centerY</span> : Number<div class='sub-desc'><p>center of view Y</p>\n</div></li><li><span class='pre'>centerZ</span> : Number<div class='sub-desc'><p>center of view Z</p>\n</div></li><li><span class='pre'>upX</span> : Number<div class='sub-desc'><p>up vector X</p>\n</div></li><li><span class='pre'>upY</span> : Number<div class='sub-desc'><p>up vector Y</p>\n</div></li><li><span class='pre'>upZ</span> : Number<div class='sub-desc'><p>up vector Z</p>\n</div></li></ul></div></div></div><div id='method-gluOrtho2D' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.GLU'>android.opengl.GLU</span><br/><a href='source/GLU.html#android-opengl-GLU-method-gluOrtho2D' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.GLU-method-gluOrtho2D' class='name expandable'>gluOrtho2D</a>( <span class='pre'>gl, left, right, bottom, top</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set up a 2D orthographic projection matrix ...</div><div class='long'><p>Set up a 2D orthographic projection matrix</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>gl</span> : Object {GL10}<div class='sub-desc'>\n</div></li><li><span class='pre'>left</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-gluPerspective' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.GLU'>android.opengl.GLU</span><br/><a href='source/GLU.html#android-opengl-GLU-method-gluPerspective' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.GLU-method-gluPerspective' class='name expandable'>gluPerspective</a>( <span class='pre'>gl, fovy, aspect, zNear, zFar</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set up a perspective projection matrix ...</div><div class='long'><p>Set up a perspective projection matrix</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>gl</span> : Object {GL10}<div class='sub-desc'><p>a GL10 interface</p>\n</div></li><li><span class='pre'>fovy</span> : Number<div class='sub-desc'><p>specifies the field of view angle, in degrees, in the Y\n        direction.</p>\n</div></li><li><span class='pre'>aspect</span> : Number<div class='sub-desc'><p>specifies the aspect ration that determins the field of\n        view in the x direction. The aspect ratio is the ratio of x\n        (width) to y (height).</p>\n</div></li><li><span class='pre'>zNear</span> : Number<div class='sub-desc'><p>specifies the distance from the viewer to the near clipping\n        plane (always positive).</p>\n</div></li><li><span class='pre'>zFar</span> : Number<div class='sub-desc'><p>specifies the distance from the viewer to the far clipping\n        plane (always positive).</p>\n</div></li></ul></div></div></div><div id='method-gluProject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.GLU'>android.opengl.GLU</span><br/><a href='source/GLU.html#android-opengl-GLU-method-gluProject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.GLU-method-gluProject' class='name expandable'>gluProject</a>( <span class='pre'>objX, objY, objZ, model, modelOffset, project, projectOffset, view, viewOffset, win, winOffset</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Map object coordinates into window coordinates. ...</div><div class='long'><p>Map object coordinates into window coordinates. gluProject transforms the\n specified object coordinates into window coordinates using model, proj,\n and view. The result is stored in win.\n <p>\n Note that you can use the OES_matrix_get extension, if present, to get\n the current modelView and projection matrices.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>objX</span> : Number<div class='sub-desc'><p>object coordinates X</p>\n</div></li><li><span class='pre'>objY</span> : Number<div class='sub-desc'><p>object coordinates Y</p>\n</div></li><li><span class='pre'>objZ</span> : Number<div class='sub-desc'><p>object coordinates Z</p>\n</div></li><li><span class='pre'>model</span> : Object {float[]}<div class='sub-desc'><p>the current modelview matrix</p>\n</div></li><li><span class='pre'>modelOffset</span> : Number<div class='sub-desc'><p>the offset into the model array where the modelview\n        maxtrix data starts.</p>\n</div></li><li><span class='pre'>project</span> : Object {float[]}<div class='sub-desc'><p>the current projection matrix</p>\n</div></li><li><span class='pre'>projectOffset</span> : Number<div class='sub-desc'><p>the offset into the project array where the project\n        matrix data starts.</p>\n</div></li><li><span class='pre'>view</span> : Object {int[]}<div class='sub-desc'><p>the current view, {x, y, width, height}</p>\n</div></li><li><span class='pre'>viewOffset</span> : Number<div class='sub-desc'><p>the offset into the view array where the view vector\n        data starts.</p>\n</div></li><li><span class='pre'>win</span> : Object {float[]}<div class='sub-desc'><p>the output vector {winX, winY, winZ}, that returns the\n        computed window coordinates.</p>\n</div></li><li><span class='pre'>winOffset</span> : Number<div class='sub-desc'><p>the offset into the win array where the win vector data\n        starts.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A return value of GL_TRUE indicates success, a return value of\n         GL_FALSE indicates failure.</p>\n</div></li></ul></div></div></div><div id='method-gluUnProject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.opengl.GLU'>android.opengl.GLU</span><br/><a href='source/GLU.html#android-opengl-GLU-method-gluUnProject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.opengl.GLU-method-gluUnProject' class='name expandable'>gluUnProject</a>( <span class='pre'>winX, winY, winZ, model, modelOffset, project, projectOffset, view, viewOffset, obj, objOffset</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Map window coordinates to object coordinates. ...</div><div class='long'><p>Map window coordinates to object coordinates. gluUnProject maps the\n specified window coordinates into object coordinates using model, proj,\n and view. The result is stored in obj.\n <p>\n Note that you can use the OES_matrix_get extension, if present, to get\n the current modelView and projection matrices.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>winX</span> : Number<div class='sub-desc'><p>window coordinates X</p>\n</div></li><li><span class='pre'>winY</span> : Number<div class='sub-desc'><p>window coordinates Y</p>\n</div></li><li><span class='pre'>winZ</span> : Number<div class='sub-desc'><p>window coordinates Z</p>\n</div></li><li><span class='pre'>model</span> : Object {float[]}<div class='sub-desc'><p>the current modelview matrix</p>\n</div></li><li><span class='pre'>modelOffset</span> : Number<div class='sub-desc'><p>the offset into the model array where the modelview\n        maxtrix data starts.</p>\n</div></li><li><span class='pre'>project</span> : Object {float[]}<div class='sub-desc'><p>the current projection matrix</p>\n</div></li><li><span class='pre'>projectOffset</span> : Number<div class='sub-desc'><p>the offset into the project array where the project\n        matrix data starts.</p>\n</div></li><li><span class='pre'>view</span> : Object {int[]}<div class='sub-desc'><p>the current view, {x, y, width, height}</p>\n</div></li><li><span class='pre'>viewOffset</span> : Number<div class='sub-desc'><p>the offset into the view array where the view vector\n        data starts.</p>\n</div></li><li><span class='pre'>obj</span> : Object {float[]}<div class='sub-desc'><p>the output vector {objX, objY, objZ, objW}, that returns the\n        computed homogeneous object coordinates.</p>\n</div></li><li><span class='pre'>objOffset</span> : Number<div class='sub-desc'><p>the offset into the obj array where the obj vector data\n        starts.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A return value of GL10.GL_TRUE indicates success, a return value\n         of GL10.GL_FALSE indicates failure.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});