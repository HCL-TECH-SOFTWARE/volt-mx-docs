Ext.data.JsonP.com_android_ex_camera2_blocking_BlockingCameraManager_BlockingOpenException({"tagname":"class","name":"com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException","autodetected":{},"files":[{"filename":"BlockingOpenException.js","href":"BlockingOpenException.html#com-android-ex-camera2-blocking-BlockingCameraManager-BlockingOpenException"}],"extends":"java.lang.Exception","members":[{"name":"ERROR_DISCONNECTED","tagname":"property","owner":"com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException","id":"property-ERROR_DISCONNECTED","meta":{}},{"name":"getCode","tagname":"method","owner":"com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException","id":"method-getCode","meta":{}},{"name":"wasDisconnected","tagname":"method","owner":"com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException","id":"method-wasDisconnected","meta":{}},{"name":"wasError","tagname":"method","owner":"com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException","id":"method-wasError","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException","classIcon":"icon-class","superclasses":["java.lang.Exception"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Exception<div class='subclass '><strong>com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BlockingOpenException.html#com-android-ex-camera2-blocking-BlockingCameraManager-BlockingOpenException' target='_blank'>BlockingOpenException.js</a></div></pre><div class='doc-contents'><p>Exception thrown by openCamera if the open fails asynchronously.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ERROR_DISCONNECTED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException'>com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException</span><br/><a href='source/BlockingOpenException.html#com-android-ex-camera2-blocking-BlockingCameraManager-BlockingOpenException-property-ERROR_DISCONNECTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException-property-ERROR_DISCONNECTED' class='name expandable'>ERROR_DISCONNECTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getCode' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException'>com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException</span><br/><a href='source/BlockingOpenException.html#com-android-ex-camera2-blocking-BlockingCameraManager-BlockingOpenException-method-getCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException-method-getCode' class='name expandable'>getCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the error code ERROR_DISCONNECTED if disconnected, or one of\n {@code CameraDevice.StateCallback#ERROR_*} if t...</div><div class='long'><p>Returns the error code ERROR_DISCONNECTED if disconnected, or one of\n {@code CameraDevice.StateCallback#ERROR_*} if there was another error.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int Disconnect/error code</p>\n</div></li></ul></div></div></div><div id='method-wasDisconnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException'>com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException</span><br/><a href='source/BlockingOpenException.html#com-android-ex-camera2-blocking-BlockingCameraManager-BlockingOpenException-method-wasDisconnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException-method-wasDisconnected' class='name expandable'>wasDisconnected</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-wasError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException'>com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException</span><br/><a href='source/BlockingOpenException.html#com-android-ex-camera2-blocking-BlockingCameraManager-BlockingOpenException-method-wasError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.ex.camera2.blocking.BlockingCameraManager.BlockingOpenException-method-wasError' class='name expandable'>wasError</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});