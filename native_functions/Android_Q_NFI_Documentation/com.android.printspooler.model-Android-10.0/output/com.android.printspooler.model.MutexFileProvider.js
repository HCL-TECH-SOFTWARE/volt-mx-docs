Ext.data.JsonP.com_android_printspooler_model_MutexFileProvider({"tagname":"class","name":"com.android.printspooler.model.MutexFileProvider","autodetected":{},"files":[{"filename":"MutexFileProvider.js","href":"MutexFileProvider.html#com-android-printspooler-model-MutexFileProvider"}],"extends":"java.lang.Object","members":[{"name":"acquireFile","tagname":"method","owner":"com.android.printspooler.model.MutexFileProvider","id":"method-acquireFile","meta":{}},{"name":"releaseFile","tagname":"method","owner":"com.android.printspooler.model.MutexFileProvider","id":"method-releaseFile","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.printspooler.model.MutexFileProvider","short_doc":"This class provides a shared file to several threads. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.printspooler.model.MutexFileProvider</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MutexFileProvider.html#com-android-printspooler-model-MutexFileProvider' target='_blank'>MutexFileProvider.js</a></div></pre><div class='doc-contents'><p>This class provides a shared file to several threads. Only one thread\n at a time can use the file. To acquire the file a thread has to\n request it in a blocking call to <a href=\"#!/api/com.android.printspooler.model.MutexFileProvider-method-acquireFile\" rel=\"com.android.printspooler.model.MutexFileProvider-method-acquireFile\" class=\"docClass\">acquireFile</a>(OnReleaseRequestCallback).\n The provided callback is optional and is used to notify the owning thread\n when another one wants to acquire the file. In case a release is requested\n the thread owning the file must release it as soon as possible. If no\n callback is provided a thread that acquires the file must release it\n as soon as possible, i.e. even if callback was provided the thread cannot\n have the file for less time.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acquireFile' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.printspooler.model.MutexFileProvider'>com.android.printspooler.model.MutexFileProvider</span><br/><a href='source/MutexFileProvider.html#com-android-printspooler-model-MutexFileProvider-method-acquireFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.printspooler.model.MutexFileProvider-method-acquireFile' class='name expandable'>acquireFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-releaseFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.printspooler.model.MutexFileProvider'>com.android.printspooler.model.MutexFileProvider</span><br/><a href='source/MutexFileProvider.html#com-android-printspooler-model-MutexFileProvider-method-releaseFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.printspooler.model.MutexFileProvider-method-releaseFile' class='name expandable'>releaseFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});