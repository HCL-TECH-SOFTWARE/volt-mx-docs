Ext.data.JsonP.com_android_systemui_recents_model_RecentsTaskLoadPlan({"tagname":"class","name":"com.android.systemui.recents.model.RecentsTaskLoadPlan","autodetected":{},"files":[{"filename":"RecentsTaskLoadPlan.js","href":"RecentsTaskLoadPlan.html#com-android-systemui-recents-model-RecentsTaskLoadPlan"}],"extends":"java.lang.Object","members":[{"name":"executePlan","tagname":"method","owner":"com.android.systemui.recents.model.RecentsTaskLoadPlan","id":"method-executePlan","meta":{}},{"name":"getTaskStack","tagname":"method","owner":"com.android.systemui.recents.model.RecentsTaskLoadPlan","id":"method-getTaskStack","meta":{}},{"name":"hasTasks","tagname":"method","owner":"com.android.systemui.recents.model.RecentsTaskLoadPlan","id":"method-hasTasks","meta":{}},{"name":"preloadPlan","tagname":"method","owner":"com.android.systemui.recents.model.RecentsTaskLoadPlan","id":"method-preloadPlan","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.systemui.recents.model.RecentsTaskLoadPlan","short_doc":"This class stores the loading state as it goes through multiple stages of loading:\n   1) preloadRawTasks() will load ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.systemui.recents.model.RecentsTaskLoadPlan</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RecentsTaskLoadPlan.html#com-android-systemui-recents-model-RecentsTaskLoadPlan' target='_blank'>RecentsTaskLoadPlan.js</a></div></pre><div class='doc-contents'><p>This class stores the loading state as it goes through multiple stages of loading:\n   1) preloadRawTasks() will load the raw set of recents tasks from the system\n   2) preloadPlan() will construct a new task stack with all metadata and only icons and\n      thumbnails that are currently in the cache\n   3) executePlan() will actually load and fill in the icons and thumbnails according to the load\n      options specified, such that we can transition into the Recents activity seamlessly</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-executePlan' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.systemui.recents.model.RecentsTaskLoadPlan'>com.android.systemui.recents.model.RecentsTaskLoadPlan</span><br/><a href='source/RecentsTaskLoadPlan.html#com-android-systemui-recents-model-RecentsTaskLoadPlan-method-executePlan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.systemui.recents.model.RecentsTaskLoadPlan-method-executePlan' class='name expandable'>executePlan</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to apply the actual loading based on the specified conditions. ...</div><div class='long'><p>Called to apply the actual loading based on the specified conditions.</p>\n\n<p> Note: Do not lock, since this can be calling back to the loader, which separately also drives\n this call (callers should synchronize on the loader before making this call).</p>\n</div></div></div><div id='method-getTaskStack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.systemui.recents.model.RecentsTaskLoadPlan'>com.android.systemui.recents.model.RecentsTaskLoadPlan</span><br/><a href='source/RecentsTaskLoadPlan.html#com-android-systemui-recents-model-RecentsTaskLoadPlan-method-getTaskStack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.systemui.recents.model.RecentsTaskLoadPlan-method-getTaskStack' class='name expandable'>getTaskStack</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the TaskStack from the preloaded list of recent tasks. ...</div><div class='long'><p>Returns the TaskStack from the preloaded list of recent tasks.</p>\n</div></div></div><div id='method-hasTasks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.systemui.recents.model.RecentsTaskLoadPlan'>com.android.systemui.recents.model.RecentsTaskLoadPlan</span><br/><a href='source/RecentsTaskLoadPlan.html#com-android-systemui-recents-model-RecentsTaskLoadPlan-method-hasTasks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.systemui.recents.model.RecentsTaskLoadPlan-method-hasTasks' class='name expandable'>hasTasks</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether there are any tasks in any stacks. ...</div><div class='long'><p>Returns whether there are any tasks in any stacks.</p>\n</div></div></div><div id='method-preloadPlan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.systemui.recents.model.RecentsTaskLoadPlan'>com.android.systemui.recents.model.RecentsTaskLoadPlan</span><br/><a href='source/RecentsTaskLoadPlan.html#com-android-systemui-recents-model-RecentsTaskLoadPlan-method-preloadPlan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.systemui.recents.model.RecentsTaskLoadPlan-method-preloadPlan' class='name expandable'>preloadPlan</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Preloads the list of recent tasks from the system. ...</div><div class='long'><p>Preloads the list of recent tasks from the system. After this call, the TaskStack will\n have a list of all the recent tasks with their metadata, not including icons or\n thumbnails which were not cached and have to be loaded.</p>\n\n<p> The tasks will be ordered by:\n - least-recent to most-recent stack tasks</p>\n\n<p> Note: Do not lock, since this can be calling back to the loader, which separately also drives\n this call (callers should synchronize on the loader before making this call).</p>\n</div></div></div></div></div></div></div>","meta":{}});