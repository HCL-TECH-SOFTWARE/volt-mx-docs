Ext.data.JsonP.android_filterfw_core_NativeAllocatorTag({"tagname":"class","name":"android.filterfw.core.NativeAllocatorTag","autodetected":{},"files":[{"filename":"NativeAllocatorTag.js","href":"NativeAllocatorTag.html#android-filterfw-core-NativeAllocatorTag"}],"extends":"java.lang.Object","hide":true,"members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.filterfw.core.NativeAllocatorTag","short_doc":"This class is simply a place-holder type used to identify calls coming\n from the native layer. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.filterfw.core.NativeAllocatorTag</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/NativeAllocatorTag.html#android-filterfw-core-NativeAllocatorTag' target='_blank'>NativeAllocatorTag.js</a></div></pre><div class='doc-contents'><p>This class is simply a place-holder type used to identify calls coming\n from the native layer. This way method signatures can be selected\n that are to be accessed from the native layer only.</p>\n</div><div class='members'></div></div>","meta":{}});