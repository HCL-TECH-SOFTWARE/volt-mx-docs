Ext.data.JsonP.com_android_internal_telephony_TelephonyCapabilities({"tagname":"class","name":"com.android.internal.telephony.TelephonyCapabilities","autodetected":{},"files":[{"filename":"TelephonyCapabilities.js","href":"TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities"}],"extends":"java.lang.Object","members":[{"name":"canDistinguishDialingAndConnected","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-canDistinguishDialingAndConnected","meta":{}},{"name":"getDeviceIdLabel","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-getDeviceIdLabel","meta":{}},{"name":"supportsAdn","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsAdn","meta":{}},{"name":"supportsAnswerAndHold","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsAnswerAndHold","meta":{}},{"name":"supportsConferenceCallManagement","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsConferenceCallManagement","meta":{}},{"name":"supportsEcm","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsEcm","meta":{}},{"name":"supportsHoldAndUnhold","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsHoldAndUnhold","meta":{}},{"name":"supportsNetworkSelection","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsNetworkSelection","meta":{}},{"name":"supportsOtasp","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsOtasp","meta":{}},{"name":"supportsVoiceMessageCount","tagname":"method","owner":"com.android.internal.telephony.TelephonyCapabilities","id":"method-supportsVoiceMessageCount","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.telephony.TelephonyCapabilities","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.internal.telephony.TelephonyCapabilities</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities' target='_blank'>TelephonyCapabilities.js</a></div></pre><div class='doc-contents'><p>Utilities that check if the phone supports specified capabilities.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-canDistinguishDialingAndConnected' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-canDistinguishDialingAndConnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-canDistinguishDialingAndConnected' class='name expandable'>canDistinguishDialingAndConnected</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the device can distinguish the phone's dialing state\n (Call.State.DIALING/ALERTING) and connected sta...</div><div class='long'><p>Returns true if the device can distinguish the phone's dialing state\n (Call.State.DIALING/ALERTING) and connected state (Call.State.ACTIVE).</p>\n\n<p> Currently this returns true for GSM phones as we cannot know when a CDMA\n phone has transitioned from dialing/active to connected.</p>\n</div></div></div><div id='method-getDeviceIdLabel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-getDeviceIdLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-getDeviceIdLabel' class='name expandable'>getDeviceIdLabel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a resource ID for a label to use when displaying the\n \"device id\" of the current device. ...</div><div class='long'><p>Returns a resource ID for a label to use when displaying the\n \"device id\" of the current device.  (This is currently used as the\n title of the \"device id\" dialog.)</p>\n\n<p> This is specific to the device's telephony technology: the device\n id is called \"IMEI\" on GSM phones and \"MEID\" on CDMA phones.</p>\n</div></div></div><div id='method-supportsAdn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsAdn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsAdn' class='name expandable'>supportsAdn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if phones with the given phone type support ADN\n (Abbreviated Dialing Numbers). ...</div><div class='long'><p>Return true if phones with the given phone type support ADN\n (Abbreviated Dialing Numbers).</p>\n\n<p> Currently this returns true when the phone type is GSM\n (<a href=\"#!/api/com.android.internal.telephony.PhoneConstants-property-PHONE_TYPE_GSM\" rel=\"com.android.internal.telephony.PhoneConstants-property-PHONE_TYPE_GSM\" class=\"docClass\">com.android.internal.telephony.PhoneConstants.PHONE_TYPE_GSM</a>).</p>\n\n<p> This is using int for an argument for letting apps outside\n Phone process access to it, while other methods in this class is\n using Phone object.</p>\n\n<p> TODO: Theoretically phones other than GSM may have the ADN capability.\n Consider having better check here, or have better capability as part\n of public API, with which the argument should be replaced with\n something more appropriate.</p>\n</div></div></div><div id='method-supportsAnswerAndHold' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsAnswerAndHold' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsAnswerAndHold' class='name expandable'>supportsAnswerAndHold</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the current phone supports distinct \"Answer &amp; Hold\"\n and \"Answer &amp; End\" behaviors in the call-...</div><div class='long'><p>Return true if the current phone supports distinct \"Answer &amp; Hold\"\n and \"Answer &amp; End\" behaviors in the call-waiting scenario.  If so,\n the in-call UI may provide separate buttons or menu items for these\n two actions.</p>\n\n<p> Currently this is assumed to be true on GSM phones and false\n otherwise.  (In particular, CDMA has no concept of explicitly\n managing the background call, or \"putting a call on hold.\")</p>\n\n<p> TODO: It might be better to expose this capability in a more\n generic form, like maybe \"supportsExplicitMultipleLineManagement()\"\n rather than focusing specifically on call-waiting behavior.</p>\n</div></div></div><div id='method-supportsConferenceCallManagement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsConferenceCallManagement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsConferenceCallManagement' class='name expandable'>supportsConferenceCallManagement</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the current phone supports the ability to explicitly\n manage the state of a conference call (i.e. ...</div><div class='long'><p>Return true if the current phone supports the ability to explicitly\n manage the state of a conference call (i.e. view the participants,\n and hangup or separate individual callers.)</p>\n\n<p> The in-call screen's \"Manage conference\" UI is available only on\n devices that support this feature.</p>\n\n<p> Currently this is assumed to be true on GSM phones and false otherwise.</p>\n</div></div></div><div id='method-supportsEcm' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsEcm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsEcm' class='name expandable'>supportsEcm</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the current phone supports ECM (\"Emergency Callback\n Mode\"), which is a feature where the device goes ...</div><div class='long'><p>Return true if the current phone supports ECM (\"Emergency Callback\n Mode\"), which is a feature where the device goes into a special\n state for a short period of time after making an outgoing emergency\n call.</p>\n\n<p> (On current devices, that state lasts 5 minutes.  It prevents data\n usage by other apps, to avoid conflicts with any possible incoming\n calls.  It also puts up a notification in the status bar, showing a\n countdown while ECM is active, and allowing the user to exit ECM.)</p>\n\n<p> Currently this is assumed to be true for CDMA phones, and false\n otherwise.</p>\n</div></div></div><div id='method-supportsHoldAndUnhold' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsHoldAndUnhold' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsHoldAndUnhold' class='name expandable'>supportsHoldAndUnhold</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the current phone supports explicit \"Hold\" and\n \"Unhold\" actions for an active call. ...</div><div class='long'><p>Return true if the current phone supports explicit \"Hold\" and\n \"Unhold\" actions for an active call.  (If so, the in-call UI will\n provide onscreen \"Hold\" / \"Unhold\" buttons.)</p>\n\n<p> Currently this is assumed to be true on GSM phones and false\n otherwise.  (In particular, CDMA has no concept of \"putting a call\n on hold.\")</p>\n</div></div></div><div id='method-supportsNetworkSelection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsNetworkSelection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsNetworkSelection' class='name expandable'>supportsNetworkSelection</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if this phone allows the user to select which\n network to use. ...</div><div class='long'><p>Return true if this phone allows the user to select which\n network to use.</p>\n\n<p> Currently this is assumed to be true only on GSM phones.</p>\n\n<p> TODO: Should CDMA phones allow this as well?</p>\n</div></div></div><div id='method-supportsOtasp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsOtasp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsOtasp' class='name expandable'>supportsOtasp</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the current phone supports Over The Air Service\n Provisioning (OTASP)\n\n Currently this is assumed to b...</div><div class='long'><p>Return true if the current phone supports Over The Air Service\n Provisioning (OTASP)</p>\n\n<p> Currently this is assumed to be true for CDMA phones, and false\n otherwise.</p>\n\n<p> TODO: Watch out: this is also highly carrier-specific, since the\n OTASP procedure is different from one carrier to the next, <em>and</em> the\n different carriers may want very different onscreen UI as well.\n The procedure may even be different for different devices with the\n same carrier.</p>\n\n<p> So we eventually will need a much more flexible, pluggable design.\n This method here is just a placeholder to reduce hardcoded\n \"if (CDMA)\" checks sprinkled throughout the phone app.</p>\n</div></div></div><div id='method-supportsVoiceMessageCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.telephony.TelephonyCapabilities'>com.android.internal.telephony.TelephonyCapabilities</span><br/><a href='source/TelephonyCapabilities.html#com-android-internal-telephony-TelephonyCapabilities-method-supportsVoiceMessageCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.telephony.TelephonyCapabilities-method-supportsVoiceMessageCount' class='name expandable'>supportsVoiceMessageCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the current phone supports voice message count. ...</div><div class='long'><p>Return true if the current phone supports voice message count.\n and the count is available\n Both CDMA and GSM phones support voice message count</p>\n</div></div></div></div></div></div></div>","meta":{}});