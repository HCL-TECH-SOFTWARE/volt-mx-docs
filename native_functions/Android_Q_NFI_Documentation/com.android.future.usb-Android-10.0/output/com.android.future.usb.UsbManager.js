Ext.data.JsonP.com_android_future_usb_UsbManager({"tagname":"class","name":"com.android.future.usb.UsbManager","autodetected":{},"files":[{"filename":"UsbManager.js","href":"UsbManager.html#com-android-future-usb-UsbManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_USB_ACCESSORY_ATTACHED","tagname":"property","owner":"com.android.future.usb.UsbManager","id":"property-ACTION_USB_ACCESSORY_ATTACHED","meta":{}},{"name":"ACTION_USB_ACCESSORY_DETACHED","tagname":"property","owner":"com.android.future.usb.UsbManager","id":"property-ACTION_USB_ACCESSORY_DETACHED","meta":{}},{"name":"EXTRA_PERMISSION_GRANTED","tagname":"property","owner":"com.android.future.usb.UsbManager","id":"property-EXTRA_PERMISSION_GRANTED","meta":{}},{"name":"getAccessory","tagname":"method","owner":"com.android.future.usb.UsbManager","id":"method-getAccessory","meta":{}},{"name":"getAccessoryList","tagname":"method","owner":"com.android.future.usb.UsbManager","id":"method-getAccessoryList","meta":{}},{"name":"getInstance","tagname":"method","owner":"com.android.future.usb.UsbManager","id":"method-getInstance","meta":{}},{"name":"hasPermission","tagname":"method","owner":"com.android.future.usb.UsbManager","id":"method-hasPermission","meta":{}},{"name":"openAccessory","tagname":"method","owner":"com.android.future.usb.UsbManager","id":"method-openAccessory","meta":{}},{"name":"requestPermission","tagname":"method","owner":"com.android.future.usb.UsbManager","id":"method-requestPermission","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.future.usb.UsbManager","short_doc":"This is a wrapper class for the USB Manager to support USB accessories. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.future.usb.UsbManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UsbManager.html#com-android-future-usb-UsbManager' target='_blank'>UsbManager.js</a></div></pre><div class='doc-contents'><p>This is a wrapper class for the USB Manager to support USB accessories.</p>\n\n<p> <p>You can obtain an instance of this class by calling <a href=\"#!/api/com.android.future.usb.UsbManager-method-getInstance\" rel=\"com.android.future.usb.UsbManager-method-getInstance\" class=\"docClass\">getInstance</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_USB_ACCESSORY_ATTACHED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-property-ACTION_USB_ACCESSORY_ATTACHED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-property-ACTION_USB_ACCESSORY_ATTACHED' class='name expandable'>ACTION_USB_ACCESSORY_ATTACHED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action:  A broadcast for USB accessory attached event. ...</div><div class='long'><p>Broadcast Action:  A broadcast for USB accessory attached event.</p>\n\n<p>This intent is sent when a USB accessory is attached.\nCall getAccessory(android.content.Intent) to retrieve the\ncom.google.android.usb.UsbAccessory for the attached accessory.</p>\n<p>Defaults to: <code>&quot;android.hardware.usb.action.USB_ACCESSORY_ATTACHED&quot;</code></p></div></div></div><div id='property-ACTION_USB_ACCESSORY_DETACHED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-property-ACTION_USB_ACCESSORY_DETACHED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-property-ACTION_USB_ACCESSORY_DETACHED' class='name expandable'>ACTION_USB_ACCESSORY_DETACHED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action:  A broadcast for USB accessory detached event. ...</div><div class='long'><p>Broadcast Action:  A broadcast for USB accessory detached event.</p>\n\n<p>This intent is sent when a USB accessory is detached.\nCall getAccessory(android.content.Intent) to retrieve the\ncom.google.android.usb.UsbAccessory for the attached accessory that was detached.</p>\n<p>Defaults to: <code>&quot;android.hardware.usb.action.USB_ACCESSORY_DETACHED&quot;</code></p></div></div></div><div id='property-EXTRA_PERMISSION_GRANTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-property-EXTRA_PERMISSION_GRANTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-property-EXTRA_PERMISSION_GRANTED' class='name expandable'>EXTRA_PERMISSION_GRANTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Name of extra added to the android.app.PendingIntent\npassed into {requestPermission} or {requestPermission}\ncontainin...</div><div class='long'><p>Name of extra added to the android.app.PendingIntent\npassed into {<a href=\"#!/api/com.android.future.usb.UsbManager-method-requestPermission\" rel=\"com.android.future.usb.UsbManager-method-requestPermission\" class=\"docClass\">requestPermission</a>} or {<a href=\"#!/api/com.android.future.usb.UsbManager-method-requestPermission\" rel=\"com.android.future.usb.UsbManager-method-requestPermission\" class=\"docClass\">requestPermission</a>}\ncontaining a boolean value indicating whether the user granted permission or not.</p>\n<p>Defaults to: <code>&quot;permission&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getAccessory' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-method-getAccessory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-method-getAccessory' class='name expandable'>getAccessory</a>( <span class='pre'></span> ) : Object {com.android.future.usb.UsbAccessory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the com.google.android.usb.UsbAccessory for\n a ACTION_USB_ACCESSORY_ATTACHED or ACTION_USB_ACCESSORY_ATTACHED...</div><div class='long'><p>Returns the com.google.android.usb.UsbAccessory for\n a <a href=\"#!/api/com.android.future.usb.UsbManager-property-ACTION_USB_ACCESSORY_ATTACHED\" rel=\"com.android.future.usb.UsbManager-property-ACTION_USB_ACCESSORY_ATTACHED\" class=\"docClass\">ACTION_USB_ACCESSORY_ATTACHED</a> or <a href=\"#!/api/com.android.future.usb.UsbManager-property-ACTION_USB_ACCESSORY_ATTACHED\" rel=\"com.android.future.usb.UsbManager-property-ACTION_USB_ACCESSORY_ATTACHED\" class=\"docClass\">ACTION_USB_ACCESSORY_ATTACHED</a>\n broadcast Intent. This can also be used to retrieve the accessory from the result\n of a call to {<a href=\"#!/api/com.android.future.usb.UsbManager-method-requestPermission\" rel=\"com.android.future.usb.UsbManager-method-requestPermission\" class=\"docClass\">requestPermission</a>}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.future.usb.UsbAccessory}</span><div class='sub-desc'><p>UsbAccessory for the intent.</p>\n</div></li></ul></div></div></div><div id='method-getAccessoryList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-method-getAccessoryList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-method-getAccessoryList' class='name expandable'>getAccessoryList</a>( <span class='pre'></span> ) : Object {com.android.future.usb.UsbAccessory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a list of currently attached USB accessories. ...</div><div class='long'><p>Returns a list of currently attached USB accessories.\n (in the current implementation there can be at most one)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.future.usb.UsbAccessory}</span><div class='sub-desc'><p>list of USB accessories, or null if none are attached.</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>context</span> ) : Object {com.android.future.usb.UsbManager}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new instance of this class. ...</div><div class='long'><p>Returns a new instance of this class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>the caller's android.content.Context</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.future.usb.UsbManager}</span><div class='sub-desc'><p>UsbManager instance.</p>\n</div></li></ul></div></div></div><div id='method-hasPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-method-hasPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-method-hasPermission' class='name expandable'>hasPermission</a>( <span class='pre'>accessory</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the caller has permission to access the accessory. ...</div><div class='long'><p>Returns true if the caller has permission to access the accessory.\n Permission might have been granted temporarily via\n <a href=\"#!/api/com.android.future.usb.UsbManager-method-requestPermission\" rel=\"com.android.future.usb.UsbManager-method-requestPermission\" class=\"docClass\">requestPermission</a> or\n by the user choosing the caller as the default application for the accessory.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accessory</span> : Object {UsbAccessory}<div class='sub-desc'><p>to check permissions for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if caller has permission</p>\n</div></li></ul></div></div></div><div id='method-openAccessory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-method-openAccessory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-method-openAccessory' class='name expandable'>openAccessory</a>( <span class='pre'>accessory</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens a file descriptor for reading and writing data to the USB accessory. ...</div><div class='long'><p>Opens a file descriptor for reading and writing data to the USB accessory.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accessory</span> : Object {UsbAccessory}<div class='sub-desc'><p>the USB accessory to open</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>file descriptor, or null if the accessor could not be opened.</p>\n</div></li></ul></div></div></div><div id='method-requestPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.future.usb.UsbManager'>com.android.future.usb.UsbManager</span><br/><a href='source/UsbManager.html#com-android-future-usb-UsbManager-method-requestPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.future.usb.UsbManager-method-requestPermission' class='name expandable'>requestPermission</a>( <span class='pre'>accessory, pi</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Requests temporary permission for the given package to access the accessory. ...</div><div class='long'><p>Requests temporary permission for the given package to access the accessory.\n This may result in a system dialog being displayed to the user\n if permission had not already been granted.\n Success or failure is returned via the android.app.PendingIntent pi.\n The boolean extra <a href=\"#!/api/com.android.future.usb.UsbManager-property-EXTRA_PERMISSION_GRANTED\" rel=\"com.android.future.usb.UsbManager-property-EXTRA_PERMISSION_GRANTED\" class=\"docClass\">EXTRA_PERMISSION_GRANTED</a> will be attached to the\n PendingIntent to indicate success or failure.\n If successful, this grants the caller permission to access the device only\n until the device is disconnected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accessory</span> : Object {UsbAccessory}<div class='sub-desc'><p>to request permissions for</p>\n</div></li><li><span class='pre'>pi</span> : Object {PendingIntent}<div class='sub-desc'><p>PendingIntent for returning result</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});