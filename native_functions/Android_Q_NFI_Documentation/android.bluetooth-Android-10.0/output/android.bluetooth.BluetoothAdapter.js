Ext.data.JsonP.android_bluetooth_BluetoothAdapter({"tagname":"class","name":"android.bluetooth.BluetoothAdapter","autodetected":{},"files":[{"filename":"BluetoothAdapter.js","href":"BluetoothAdapter.html#android-bluetooth-BluetoothAdapter"}],"extends":"java.lang.Object","members":[{"name":"ACTION_CONNECTION_STATE_CHANGED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_CONNECTION_STATE_CHANGED","meta":{}},{"name":"ACTION_DISCOVERY_FINISHED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_DISCOVERY_FINISHED","meta":{}},{"name":"ACTION_DISCOVERY_STARTED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_DISCOVERY_STARTED","meta":{}},{"name":"ACTION_LOCAL_NAME_CHANGED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_LOCAL_NAME_CHANGED","meta":{}},{"name":"ACTION_REQUEST_DISCOVERABLE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_REQUEST_DISCOVERABLE","meta":{}},{"name":"ACTION_REQUEST_ENABLE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_REQUEST_ENABLE","meta":{}},{"name":"ACTION_SCAN_MODE_CHANGED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_SCAN_MODE_CHANGED","meta":{}},{"name":"ACTION_STATE_CHANGED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ACTION_STATE_CHANGED","meta":{}},{"name":"ERROR","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-ERROR","meta":{}},{"name":"EXTRA_CONNECTION_STATE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_CONNECTION_STATE","meta":{}},{"name":"EXTRA_DISCOVERABLE_DURATION","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_DISCOVERABLE_DURATION","meta":{}},{"name":"EXTRA_LOCAL_NAME","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_LOCAL_NAME","meta":{}},{"name":"EXTRA_PREVIOUS_CONNECTION_STATE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_PREVIOUS_CONNECTION_STATE","meta":{}},{"name":"EXTRA_PREVIOUS_SCAN_MODE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_PREVIOUS_SCAN_MODE","meta":{}},{"name":"EXTRA_PREVIOUS_STATE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_PREVIOUS_STATE","meta":{}},{"name":"EXTRA_SCAN_MODE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_SCAN_MODE","meta":{}},{"name":"EXTRA_STATE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-EXTRA_STATE","meta":{}},{"name":"SCAN_MODE_CONNECTABLE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-SCAN_MODE_CONNECTABLE","meta":{}},{"name":"SCAN_MODE_CONNECTABLE_DISCOVERABLE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-SCAN_MODE_CONNECTABLE_DISCOVERABLE","meta":{}},{"name":"SCAN_MODE_NONE","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-SCAN_MODE_NONE","meta":{}},{"name":"STATE_CONNECTED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_CONNECTED","meta":{}},{"name":"STATE_CONNECTING","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_CONNECTING","meta":{}},{"name":"STATE_DISCONNECTED","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_DISCONNECTED","meta":{}},{"name":"STATE_DISCONNECTING","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_DISCONNECTING","meta":{}},{"name":"STATE_OFF","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_OFF","meta":{}},{"name":"STATE_ON","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_ON","meta":{}},{"name":"STATE_TURNING_OFF","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_TURNING_OFF","meta":{}},{"name":"STATE_TURNING_ON","tagname":"property","owner":"android.bluetooth.BluetoothAdapter","id":"property-STATE_TURNING_ON","meta":{}},{"name":"cancelDiscovery","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-cancelDiscovery","meta":{}},{"name":"checkBluetoothAddress","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-checkBluetoothAddress","meta":{}},{"name":"closeProfileProxy","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-closeProfileProxy","meta":{}},{"name":"enable","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-enable","meta":{}},{"name":"getAddress","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getAddress","meta":{}},{"name":"getBluetoothLeAdvertiser","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getBluetoothLeAdvertiser","meta":{}},{"name":"getBluetoothLeScanner","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getBluetoothLeScanner","meta":{}},{"name":"getBondedDevices","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getBondedDevices","meta":{}},{"name":"getDefaultAdapter","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getDefaultAdapter","meta":{}},{"name":"getLeMaximumAdvertisingDataLength","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getLeMaximumAdvertisingDataLength","meta":{}},{"name":"getName","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getName","meta":{}},{"name":"getProfileConnectionState","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getProfileConnectionState","meta":{}},{"name":"getProfileProxy","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getProfileProxy","meta":{}},{"name":"getRemoteDevice","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getRemoteDevice","meta":{}},{"name":"getScanMode","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getScanMode","meta":{}},{"name":"getState","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-getState","meta":{}},{"name":"isDiscovering","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isDiscovering","meta":{}},{"name":"isEnabled","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isEnabled","meta":{}},{"name":"isLe2MPhySupported","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isLe2MPhySupported","meta":{}},{"name":"isLeCodedPhySupported","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isLeCodedPhySupported","meta":{}},{"name":"isLeExtendedAdvertisingSupported","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isLeExtendedAdvertisingSupported","meta":{}},{"name":"isLePeriodicAdvertisingSupported","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isLePeriodicAdvertisingSupported","meta":{}},{"name":"isMultipleAdvertisementSupported","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isMultipleAdvertisementSupported","meta":{}},{"name":"isOffloadedFilteringSupported","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isOffloadedFilteringSupported","meta":{}},{"name":"isOffloadedScanBatchingSupported","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-isOffloadedScanBatchingSupported","meta":{}},{"name":"listenUsingInsecureL2capChannel","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-listenUsingInsecureL2capChannel","meta":{}},{"name":"listenUsingInsecureRfcommWithServiceRecord","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-listenUsingInsecureRfcommWithServiceRecord","meta":{}},{"name":"listenUsingL2capChannel","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-listenUsingL2capChannel","meta":{}},{"name":"listenUsingRfcommWithServiceRecord","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-listenUsingRfcommWithServiceRecord","meta":{}},{"name":"setName","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-setName","meta":{}},{"name":"startDiscovery","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-startDiscovery","meta":{}},{"name":"startLeScan","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-startLeScan","meta":{"deprecated":{"text":"<p>use ScanSettings, ScanCallback)\n instead.</p>\n"}}},{"name":"stopLeScan","tagname":"method","owner":"android.bluetooth.BluetoothAdapter","id":"method-stopLeScan","meta":{"deprecated":{"text":"<p>Use BluetoothLeScanner.stopScan(ScanCallback) instead.</p>\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-android.bluetooth.BluetoothAdapter","short_doc":"Represents the local device Bluetooth adapter. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.bluetooth.BluetoothAdapter</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter' target='_blank'>BluetoothAdapter.js</a></div></pre><div class='doc-contents'><p>Represents the local device Bluetooth adapter. The <a href=\"#!/api/android.bluetooth.BluetoothAdapter\" rel=\"android.bluetooth.BluetoothAdapter\" class=\"docClass\">android.bluetooth.BluetoothAdapter</a>\n lets you perform fundamental Bluetooth tasks, such as initiate\n device discovery, query a list of bonded (paired) devices,\n instantiate a <a href=\"#!/api/android.bluetooth.BluetoothDevice\" rel=\"android.bluetooth.BluetoothDevice\" class=\"docClass\">android.bluetooth.BluetoothDevice</a> using a known MAC address, and create\n a <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a> to listen for connection requests from other\n devices, and start a scan for Bluetooth LE devices.</p>\n\n<p> <p>To get a <a href=\"#!/api/android.bluetooth.BluetoothAdapter\" rel=\"android.bluetooth.BluetoothAdapter\" class=\"docClass\">android.bluetooth.BluetoothAdapter</a> representing the local Bluetooth\n adapter, call the <a href=\"#!/api/android.bluetooth.BluetoothManager-method-getAdapter\" rel=\"android.bluetooth.BluetoothManager-method-getAdapter\" class=\"docClass\">android.bluetooth.BluetoothManager.getAdapter</a> function on <a href=\"#!/api/android.bluetooth.BluetoothManager\" rel=\"android.bluetooth.BluetoothManager\" class=\"docClass\">android.bluetooth.BluetoothManager</a>.\n On JELLY_BEAN_MR1 and below you will need to use the static <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-getDefaultAdapter\" rel=\"android.bluetooth.BluetoothAdapter-method-getDefaultAdapter\" class=\"docClass\">getDefaultAdapter</a>\n method instead.\n </p><p>\n Fundamentally, this is your starting point for all\n Bluetooth actions. Once you have the local adapter, you can get a set of\n <a href=\"#!/api/android.bluetooth.BluetoothDevice\" rel=\"android.bluetooth.BluetoothDevice\" class=\"docClass\">android.bluetooth.BluetoothDevice</a> objects representing all paired devices with\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-getBondedDevices\" rel=\"android.bluetooth.BluetoothAdapter-method-getBondedDevices\" class=\"docClass\">getBondedDevices</a>(); start device discovery with\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-startDiscovery\" rel=\"android.bluetooth.BluetoothAdapter-method-startDiscovery\" class=\"docClass\">startDiscovery</a>(); or create a <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a> to\n listen for incoming RFComm connection requests with UUID); listen for incoming L2CAP Connection-oriented\n Channels (CoC) connection requests with listenUsingL2capChannel(); or start a scan for\n Bluetooth LE devices with <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-startLeScan\" rel=\"android.bluetooth.BluetoothAdapter-method-startLeScan\" class=\"docClass\">startLeScan</a>(LeScanCallback callback).\n </p>\n <p>This class is thread safe.</p>\n <p class=\"note\"><strong>Note:</strong>\n Most methods require the android.Manifest.permission.BLUETOOTH\n permission and some also require the\n android.Manifest.permission.BLUETOOTH_ADMIN permission.\n </p>\n <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>\n For more information about using Bluetooth, read the <a href=\n \"{@docRoot}guide/topics/connectivity/bluetooth.html\">Bluetooth</a> developer\n guide.\n </p>\n </div></p>\n\n<p> {@see BluetoothDevice}\n {@see BluetoothServerSocket}</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_CONNECTION_STATE_CHANGED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_CONNECTION_STATE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_CONNECTION_STATE_CHANGED' class='name expandable'>ACTION_CONNECTION_STATE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Intent used to broadcast the change in connection state of the local\nBluetooth adapter to a profile of the remote dev...</div><div class='long'><p>Intent used to broadcast the change in connection state of the local\nBluetooth adapter to a profile of the remote device. When the adapter is\nnot connected to any profiles of any remote devices and it attempts a\nconnection to a profile this intent will be sent. Once connected, this intent\nwill not be sent for any more connection attempts to any profiles of any\nremote device. When the adapter disconnects from the last profile its\nconnected to of any remote device, this intent will be sent.</p>\n\n<p><p> This intent is useful for applications that are only concerned about\nwhether the local adapter is connected to any profile of any device and\nare not really concerned about which profile. For example, an application\nwhich displays an icon to display whether Bluetooth is connected or not\ncan use this intent.</p>\n\n<p><p>This intent will have 3 extras:\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_CONNECTION_STATE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_CONNECTION_STATE\" class=\"docClass\">EXTRA_CONNECTION_STATE</a> - The current connection state.\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_CONNECTION_STATE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_CONNECTION_STATE\" class=\"docClass\">EXTRA_PREVIOUS_CONNECTION_STATE</a>- The previous connection state.\n<a href=\"#!/api/android.bluetooth.BluetoothDevice-property-EXTRA_DEVICE\" rel=\"android.bluetooth.BluetoothDevice-property-EXTRA_DEVICE\" class=\"docClass\">android.bluetooth.BluetoothDevice.EXTRA_DEVICE</a> - The remote device.</p>\n\n<p><a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_CONNECTION_STATE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_CONNECTION_STATE\" class=\"docClass\">EXTRA_CONNECTION_STATE</a> or <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_CONNECTION_STATE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_CONNECTION_STATE\" class=\"docClass\">EXTRA_PREVIOUS_CONNECTION_STATE</a>\ncan be any of <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_DISCONNECTED\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_DISCONNECTED\" class=\"docClass\">STATE_DISCONNECTED</a>, <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_CONNECTING\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_CONNECTING\" class=\"docClass\">STATE_CONNECTING</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_CONNECTED\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_CONNECTED\" class=\"docClass\">STATE_CONNECTED</a>, <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_DISCONNECTING\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_DISCONNECTING\" class=\"docClass\">STATE_DISCONNECTING</a>.</p>\n\n<p><p>Requires android.Manifest.permission.BLUETOOTH to receive.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.CONNECTION_STATE_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_DISCOVERY_FINISHED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_DISCOVERY_FINISHED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_FINISHED' class='name expandable'>ACTION_DISCOVERY_FINISHED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: The local Bluetooth adapter has finished the device\ndiscovery process. ...</div><div class='long'><p>Broadcast Action: The local Bluetooth adapter has finished the device\ndiscovery process.</p>\n\n<p><p>Requires android.Manifest.permission.BLUETOOTH to receive.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.DISCOVERY_FINISHED&quot;</code></p></div></div></div><div id='property-ACTION_DISCOVERY_STARTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_DISCOVERY_STARTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_STARTED' class='name expandable'>ACTION_DISCOVERY_STARTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: The local Bluetooth adapter has started the remote\ndevice discovery process. ...</div><div class='long'><p>Broadcast Action: The local Bluetooth adapter has started the remote\ndevice discovery process.</p>\n\n<p><p>This usually involves an inquiry scan of about 12 seconds, followed\nby a page scan of each new device to retrieve its Bluetooth name.\n<p>Register for <a href=\"#!/api/android.bluetooth.BluetoothDevice-property-ACTION_FOUND\" rel=\"android.bluetooth.BluetoothDevice-property-ACTION_FOUND\" class=\"docClass\">android.bluetooth.BluetoothDevice.ACTION_FOUND</a> to be notified as\nremote Bluetooth devices are found.\n<p>Device discovery is a heavyweight procedure. New connections to\nremote Bluetooth devices should not be attempted while discovery is in\nprogress, and existing connections will experience limited bandwidth\nand high latency. Use <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-cancelDiscovery\" rel=\"android.bluetooth.BluetoothAdapter-method-cancelDiscovery\" class=\"docClass\">cancelDiscovery</a>() to cancel an ongoing\ndiscovery.\n<p>Requires android.Manifest.permission.BLUETOOTH to receive.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.DISCOVERY_STARTED&quot;</code></p></div></div></div><div id='property-ACTION_LOCAL_NAME_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_LOCAL_NAME_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_LOCAL_NAME_CHANGED' class='name expandable'>ACTION_LOCAL_NAME_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: The local Bluetooth adapter has changed its friendly\nBluetooth name. ...</div><div class='long'><p>Broadcast Action: The local Bluetooth adapter has changed its friendly\nBluetooth name.</p>\n\n<p><p>This name is visible to remote Bluetooth devices.\n<p>Always contains the extra field <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_LOCAL_NAME\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_LOCAL_NAME\" class=\"docClass\">EXTRA_LOCAL_NAME</a> containing\nthe name.\n<p>Requires android.Manifest.permission.BLUETOOTH to receive.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.LOCAL_NAME_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_REQUEST_DISCOVERABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_REQUEST_DISCOVERABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_REQUEST_DISCOVERABLE' class='name expandable'>ACTION_REQUEST_DISCOVERABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: Show a system activity that requests discoverable mode. ...</div><div class='long'><p>Activity Action: Show a system activity that requests discoverable mode.\nThis activity will also request the user to turn on Bluetooth if it\nis not currently enabled.</p>\n\n<p><p>Discoverable mode is equivalent to <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" class=\"docClass\">SCAN_MODE_CONNECTABLE_DISCOVERABLE</a>. It allows remote devices to see\nthis Bluetooth adapter when they perform a discovery.\n<p>For privacy, Android is not discoverable by default.\n<p>The sender of this Intent can optionally use extra field <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_DISCOVERABLE_DURATION\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_DISCOVERABLE_DURATION\" class=\"docClass\">EXTRA_DISCOVERABLE_DURATION</a> to request the duration of\ndiscoverability. Currently the default duration is 120 seconds, and\nmaximum duration is capped at 300 seconds for each request.\n<p>Notification of the result of this activity is posted using the\nandroid.app.Activity.onActivityResult callback. The\n<code>resultCode</code>\nwill be the duration (in seconds) of discoverability or\nandroid.app.Activity.RESULT_CANCELED if the user rejected\ndiscoverability or an error has occurred.\n<p>Applications can also listen for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED\" class=\"docClass\">ACTION_SCAN_MODE_CHANGED</a>\nfor global notification whenever the scan mode changes. For example, an\napplication can be notified when the device has ended discoverability.\n<p>Requires android.Manifest.permission.BLUETOOTH</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.REQUEST_DISCOVERABLE&quot;</code></p></div></div></div><div id='property-ACTION_REQUEST_ENABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_REQUEST_ENABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_REQUEST_ENABLE' class='name expandable'>ACTION_REQUEST_ENABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: Show a system activity that allows the user to turn on\nBluetooth. ...</div><div class='long'><p>Activity Action: Show a system activity that allows the user to turn on\nBluetooth.</p>\n\n<p><p>This system activity will return once Bluetooth has completed turning\non, or the user has decided not to turn Bluetooth on.\n<p>Notification of the result of this activity is posted using the\nandroid.app.Activity.onActivityResult callback. The\n<code>resultCode</code>\nwill be android.app.Activity.RESULT_OK if Bluetooth has been\nturned on or android.app.Activity.RESULT_CANCELED if the user\nhas rejected the request or an error has occurred.\n<p>Applications can also listen for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a>\nfor global notification whenever Bluetooth is turned on or off.\n<p>Requires android.Manifest.permission.BLUETOOTH</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.REQUEST_ENABLE&quot;</code></p></div></div></div><div id='property-ACTION_SCAN_MODE_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED' class='name expandable'>ACTION_SCAN_MODE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: Indicates the Bluetooth scan mode of the local Adapter\nhas changed. ...</div><div class='long'><p>Broadcast Action: Indicates the Bluetooth scan mode of the local Adapter\nhas changed.</p>\n\n<p><p>Always contains the extra fields <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_SCAN_MODE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_SCAN_MODE\" class=\"docClass\">EXTRA_SCAN_MODE</a> and <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_SCAN_MODE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_SCAN_MODE\" class=\"docClass\">EXTRA_PREVIOUS_SCAN_MODE</a> containing the new and old scan modes\nrespectively.\n<p>Requires android.Manifest.permission.BLUETOOTH</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.SCAN_MODE_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_STATE_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ACTION_STATE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED' class='name expandable'>ACTION_STATE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: The state of the local Bluetooth adapter has been\nchanged. ...</div><div class='long'><p>Broadcast Action: The state of the local Bluetooth adapter has been\nchanged.</p>\n\n<p><p>For example, Bluetooth has been turned on or off.\n<p>Always contains the extra fields <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_STATE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_STATE\" class=\"docClass\">EXTRA_STATE</a> and <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_STATE\" rel=\"android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_STATE\" class=\"docClass\">EXTRA_PREVIOUS_STATE</a> containing the new and old states\nrespectively.\n<p>Requires android.Manifest.permission.BLUETOOTH to receive.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.action.STATE_CHANGED&quot;</code></p></div></div></div><div id='property-ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-ERROR' class='name expandable'>ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Sentinel error value for this class. ...</div><div class='long'><p>Sentinel error value for this class. Guaranteed to not equal any other\ninteger constant in this class. Provided as a convenience for functions\nthat require a sentinel error value, for example:</p>\n\n<p><p><code>Intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,\nBluetoothAdapter.ERROR)</code></p>\n<p>Defaults to: <code>&quot;-2147483648&quot;</code></p></div></div></div><div id='property-EXTRA_CONNECTION_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_CONNECTION_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_CONNECTION_STATE' class='name expandable'>EXTRA_CONNECTION_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra used by ACTION_CONNECTION_STATE_CHANGED\n\nThis extra represents the current connection state. ...</div><div class='long'><p>Extra used by <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_CONNECTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_CONNECTION_STATE_CHANGED\" class=\"docClass\">ACTION_CONNECTION_STATE_CHANGED</a></p>\n\n<p>This extra represents the current connection state.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.CONNECTION_STATE&quot;</code></p></div></div></div><div id='property-EXTRA_DISCOVERABLE_DURATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_DISCOVERABLE_DURATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_DISCOVERABLE_DURATION' class='name expandable'>EXTRA_DISCOVERABLE_DURATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as an optional int extra field in ACTION_REQUEST_DISCOVERABLE intents to request a specific duration\nfor discove...</div><div class='long'><p>Used as an optional int extra field in <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_REQUEST_DISCOVERABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_REQUEST_DISCOVERABLE\" class=\"docClass\">ACTION_REQUEST_DISCOVERABLE</a> intents to request a specific duration\nfor discoverability in seconds. The current default is 120 seconds, and\nrequests over 300 seconds will be capped. These values could change.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.DISCOVERABLE_DURATION&quot;</code></p></div></div></div><div id='property-EXTRA_LOCAL_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_LOCAL_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_LOCAL_NAME' class='name expandable'>EXTRA_LOCAL_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as a String extra field in ACTION_LOCAL_NAME_CHANGED\nintents to request the local Bluetooth name. ...</div><div class='long'><p>Used as a String extra field in <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_LOCAL_NAME_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_LOCAL_NAME_CHANGED\" class=\"docClass\">ACTION_LOCAL_NAME_CHANGED</a>\nintents to request the local Bluetooth name.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.LOCAL_NAME&quot;</code></p></div></div></div><div id='property-EXTRA_PREVIOUS_CONNECTION_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_PREVIOUS_CONNECTION_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_CONNECTION_STATE' class='name expandable'>EXTRA_PREVIOUS_CONNECTION_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra used by ACTION_CONNECTION_STATE_CHANGED\n\nThis extra represents the previous connection state. ...</div><div class='long'><p>Extra used by <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_CONNECTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_CONNECTION_STATE_CHANGED\" class=\"docClass\">ACTION_CONNECTION_STATE_CHANGED</a></p>\n\n<p>This extra represents the previous connection state.</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.PREVIOUS_CONNECTION_STATE&quot;</code></p></div></div></div><div id='property-EXTRA_PREVIOUS_SCAN_MODE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_PREVIOUS_SCAN_MODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_SCAN_MODE' class='name expandable'>EXTRA_PREVIOUS_SCAN_MODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as an int extra field in ACTION_SCAN_MODE_CHANGED\nintents to request the previous scan mode. ...</div><div class='long'><p>Used as an int extra field in <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED\" class=\"docClass\">ACTION_SCAN_MODE_CHANGED</a>\nintents to request the previous scan mode. Possible values are:\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" class=\"docClass\">SCAN_MODE_NONE</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE\" class=\"docClass\">SCAN_MODE_CONNECTABLE</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" class=\"docClass\">SCAN_MODE_CONNECTABLE_DISCOVERABLE</a>,</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.PREVIOUS_SCAN_MODE&quot;</code></p></div></div></div><div id='property-EXTRA_PREVIOUS_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_PREVIOUS_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_PREVIOUS_STATE' class='name expandable'>EXTRA_PREVIOUS_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as an int extra field in ACTION_STATE_CHANGED\nintents to request the previous power state. ...</div><div class='long'><p>Used as an int extra field in <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a>\nintents to request the previous power state. Possible values are:\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_OFF\" class=\"docClass\">STATE_OFF</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" class=\"docClass\">STATE_TURNING_ON</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_TURNING_OFF\" class=\"docClass\">STATE_TURNING_OFF</a></p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.PREVIOUS_STATE&quot;</code></p></div></div></div><div id='property-EXTRA_SCAN_MODE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_SCAN_MODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_SCAN_MODE' class='name expandable'>EXTRA_SCAN_MODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as an int extra field in ACTION_SCAN_MODE_CHANGED\nintents to request the current scan mode. ...</div><div class='long'><p>Used as an int extra field in <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_SCAN_MODE_CHANGED\" class=\"docClass\">ACTION_SCAN_MODE_CHANGED</a>\nintents to request the current scan mode. Possible values are:\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" class=\"docClass\">SCAN_MODE_NONE</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE\" class=\"docClass\">SCAN_MODE_CONNECTABLE</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" class=\"docClass\">SCAN_MODE_CONNECTABLE_DISCOVERABLE</a>,</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.SCAN_MODE&quot;</code></p></div></div></div><div id='property-EXTRA_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-EXTRA_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-EXTRA_STATE' class='name expandable'>EXTRA_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as an int extra field in ACTION_STATE_CHANGED\nintents to request the current power state. ...</div><div class='long'><p>Used as an int extra field in <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a>\nintents to request the current power state. Possible values are:\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_OFF\" class=\"docClass\">STATE_OFF</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" class=\"docClass\">STATE_TURNING_ON</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>,\n<a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_TURNING_OFF\" class=\"docClass\">STATE_TURNING_OFF</a>,</p>\n<p>Defaults to: <code>&quot;android.bluetooth.adapter.extra.STATE&quot;</code></p></div></div></div><div id='property-SCAN_MODE_CONNECTABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-SCAN_MODE_CONNECTABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE' class='name expandable'>SCAN_MODE_CONNECTABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that inquiry scan is disabled, but page scan is enabled on the\nlocal Bluetooth adapter. ...</div><div class='long'><p>Indicates that inquiry scan is disabled, but page scan is enabled on the\nlocal Bluetooth adapter. Therefore this device is not discoverable from\nremote Bluetooth devices, but is connectable from remote devices that\nhave previously discovered this device.</p>\n<p>Defaults to: <code>&quot;21&quot;</code></p></div></div></div><div id='property-SCAN_MODE_CONNECTABLE_DISCOVERABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE' class='name expandable'>SCAN_MODE_CONNECTABLE_DISCOVERABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that both inquiry scan and page scan are enabled on the local\nBluetooth adapter. ...</div><div class='long'><p>Indicates that both inquiry scan and page scan are enabled on the local\nBluetooth adapter. Therefore this device is both discoverable and\nconnectable from remote Bluetooth devices.</p>\n<p>Defaults to: <code>&quot;23&quot;</code></p></div></div></div><div id='property-SCAN_MODE_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-SCAN_MODE_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE' class='name expandable'>SCAN_MODE_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that both inquiry scan and page scan are disabled on the local\nBluetooth adapter. ...</div><div class='long'><p>Indicates that both inquiry scan and page scan are disabled on the local\nBluetooth adapter. Therefore this device is neither discoverable\nnor connectable from remote Bluetooth devices.</p>\n<p>Defaults to: <code>&quot;20&quot;</code></p></div></div></div><div id='property-STATE_CONNECTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_CONNECTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_CONNECTED' class='name expandable'>STATE_CONNECTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The profile is in connected state ...</div><div class='long'><p>The profile is in connected state</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-STATE_CONNECTING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_CONNECTING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_CONNECTING' class='name expandable'>STATE_CONNECTING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The profile is in connecting state ...</div><div class='long'><p>The profile is in connecting state</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-STATE_DISCONNECTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_DISCONNECTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_DISCONNECTED' class='name expandable'>STATE_DISCONNECTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The profile is in disconnected state ...</div><div class='long'><p>The profile is in disconnected state</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-STATE_DISCONNECTING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_DISCONNECTING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_DISCONNECTING' class='name expandable'>STATE_DISCONNECTING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The profile is in disconnecting state ...</div><div class='long'><p>The profile is in disconnecting state</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-STATE_OFF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_OFF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_OFF' class='name expandable'>STATE_OFF</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates the local Bluetooth adapter is off. ...</div><div class='long'><p>Indicates the local Bluetooth adapter is off.</p>\n<p>Defaults to: <code>&quot;10&quot;</code></p></div></div></div><div id='property-STATE_ON' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_ON' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON' class='name expandable'>STATE_ON</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates the local Bluetooth adapter is on, and ready for use. ...</div><div class='long'><p>Indicates the local Bluetooth adapter is on, and ready for use.</p>\n<p>Defaults to: <code>&quot;12&quot;</code></p></div></div></div><div id='property-STATE_TURNING_OFF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_TURNING_OFF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_OFF' class='name expandable'>STATE_TURNING_OFF</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates the local Bluetooth adapter is turning off. ...</div><div class='long'><p>Indicates the local Bluetooth adapter is turning off. Local clients\nshould immediately attempt graceful disconnection of any remote links.</p>\n<p>Defaults to: <code>&quot;13&quot;</code></p></div></div></div><div id='property-STATE_TURNING_ON' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-property-STATE_TURNING_ON' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON' class='name expandable'>STATE_TURNING_ON</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates the local Bluetooth adapter is turning on. ...</div><div class='long'><p>Indicates the local Bluetooth adapter is turning on. However local\nclients should wait for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a> before attempting to\nuse the adapter.</p>\n<p>Defaults to: <code>&quot;11&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-cancelDiscovery' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-cancelDiscovery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-cancelDiscovery' class='name expandable'>cancelDiscovery</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancel the current device discovery process. ...</div><div class='long'><p>Cancel the current device discovery process.\n <p>Because discovery is a heavyweight procedure for the Bluetooth\n adapter, this method should always be called before attempting to connect\n to a remote device with android.bluetooth.BluetoothSocket.connect(). Discovery is not managed by\n the  Activity, but is run as a system service, so an application should\n always call cancel discovery even if it did not directly request a\n discovery, just to be sure.\n <p>If Bluetooth state is not <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>, this API\n will return false. After turning on Bluetooth,\n wait for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a> with <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>\n to get the updated value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false on error</p>\n</div></li></ul></div></div></div><div id='method-checkBluetoothAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-checkBluetoothAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-checkBluetoothAddress' class='name expandable'>checkBluetoothAddress</a>( <span class='pre'>address</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Validate a String Bluetooth address, such as \"00:43:A8:23:10:F0\"\n Alphabetic characters must be uppercase to be valid. ...</div><div class='long'><p>Validate a String Bluetooth address, such as \"00:43:A8:23:10:F0\"\n <p>Alphabetic characters must be uppercase to be valid.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>address</span> : String<div class='sub-desc'><p>Bluetooth address as string</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the address is valid, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-closeProfileProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-closeProfileProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-closeProfileProxy' class='name expandable'>closeProfileProxy</a>( <span class='pre'>profile, proxy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close the connection of the profile proxy to the Service. ...</div><div class='long'><p>Close the connection of the profile proxy to the Service.</p>\n\n<p> <p> Clients should call this when they are no longer using\n the proxy obtained from <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-getProfileProxy\" rel=\"android.bluetooth.BluetoothAdapter-method-getProfileProxy\" class=\"docClass\">getProfileProxy</a>.\n Profile can be one of  <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-HEADSET\" rel=\"android.bluetooth.BluetoothProfile-property-HEADSET\" class=\"docClass\">android.bluetooth.BluetoothProfile.HEADSET</a> or <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-A2DP\" rel=\"android.bluetooth.BluetoothProfile-property-A2DP\" class=\"docClass\">android.bluetooth.BluetoothProfile.A2DP</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>profile</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>proxy</span> : Object {BluetoothProfile}<div class='sub-desc'><p>Profile proxy object</p>\n</div></li></ul></div></div></div><div id='method-enable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-enable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-enable' class='name expandable'>enable</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Turn on the local Bluetooth adapter&mdash;do not use without explicit\n user action to turn on Bluetooth. ...</div><div class='long'><p>Turn on the local Bluetooth adapter&mdash;do not use without explicit\n user action to turn on Bluetooth.\n <p>This powers on the underlying Bluetooth hardware, and starts all\n Bluetooth system services.\n <p class=\"caution\"><strong>Bluetooth should never be enabled without\n direct user consent</strong>. If you want to turn on Bluetooth in order\n to create a wireless connection, you should use the <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_REQUEST_ENABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_REQUEST_ENABLE\" class=\"docClass\">ACTION_REQUEST_ENABLE</a> Intent, which will raise a dialog that requests\n user permission to turn on Bluetooth. The <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-enable\" rel=\"android.bluetooth.BluetoothAdapter-method-enable\" class=\"docClass\">enable</a>() method is\n provided only for applications that include a user interface for changing\n system settings, such as a \"power manager\" app.</p>\n <p>This is an asynchronous call: it will return immediately, and\n clients should listen for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a>\n to be notified of subsequent adapter state changes. If this call returns\n true, then the adapter state will immediately transition from <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_OFF\" class=\"docClass\">STATE_OFF</a> to <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" class=\"docClass\">STATE_TURNING_ON</a>, and some time\n later transition to either <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_OFF\" class=\"docClass\">STATE_OFF</a> or <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>. If this call returns false then there was an\n immediate problem that will prevent the adapter from being turned on -\n such as Airplane mode, or the adapter is already turned on.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true to indicate adapter startup has begun, or false on immediate error</p>\n</div></li></ul></div></div></div><div id='method-getAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getAddress' class='name expandable'>getAddress</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the hardware address of the local Bluetooth adapter. ...</div><div class='long'><p>Returns the hardware address of the local Bluetooth adapter.\n <p>For example, \"00:11:22:AA:BB:CC\".</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Bluetooth hardware address as string</p>\n</div></li></ul></div></div></div><div id='method-getBluetoothLeAdvertiser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getBluetoothLeAdvertiser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getBluetoothLeAdvertiser' class='name expandable'>getBluetoothLeAdvertiser</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a BluetoothLeAdvertiser object for Bluetooth LE Advertising operations. ...</div><div class='long'><p>Returns a BluetoothLeAdvertiser object for Bluetooth LE Advertising operations.\n Will return null if Bluetooth is turned off or if Bluetooth LE Advertising is not\n supported on this device.\n <p>\n Use <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-isMultipleAdvertisementSupported\" rel=\"android.bluetooth.BluetoothAdapter-method-isMultipleAdvertisementSupported\" class=\"docClass\">isMultipleAdvertisementSupported</a>() to check whether LE Advertising is supported\n on this device before calling this method.</p>\n</div></div></div><div id='method-getBluetoothLeScanner' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getBluetoothLeScanner' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getBluetoothLeScanner' class='name expandable'>getBluetoothLeScanner</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a BluetoothLeScanner object for Bluetooth LE scan operations. ...</div><div class='long'><p>Returns a BluetoothLeScanner object for Bluetooth LE scan operations.</p>\n</div></div></div><div id='method-getBondedDevices' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getBondedDevices' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getBondedDevices' class='name expandable'>getBondedDevices</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the set of android.bluetooth.BluetoothDevice objects that are bonded\n (paired) to the local adapter. ...</div><div class='long'><p>Return the set of <a href=\"#!/api/android.bluetooth.BluetoothDevice\" rel=\"android.bluetooth.BluetoothDevice\" class=\"docClass\">android.bluetooth.BluetoothDevice</a> objects that are bonded\n (paired) to the local adapter.\n <p>If Bluetooth state is not <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>, this API\n will return an empty set. After turning on Bluetooth,\n wait for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a> with <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>\n to get the updated value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>unmodifiable set of BluetoothDevice, or null on error</p>\n</div></li></ul></div></div></div><div id='method-getDefaultAdapter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getDefaultAdapter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getDefaultAdapter' class='name expandable'>getDefaultAdapter</a>( <span class='pre'></span> ) : Object {android.bluetooth.BluetoothAdapter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a handle to the default local Bluetooth adapter. ...</div><div class='long'><p>Get a handle to the default local Bluetooth adapter.\n <p>Currently Android only supports one Bluetooth adapter, but the API\n could be extended to support more. This will always return the default\n adapter.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.bluetooth.BluetoothAdapter}</span><div class='sub-desc'><p>the default local adapter, or null if Bluetooth is not supported on this hardware\n platform</p>\n</div></li></ul></div></div></div><div id='method-getLeMaximumAdvertisingDataLength' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getLeMaximumAdvertisingDataLength' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getLeMaximumAdvertisingDataLength' class='name expandable'>getLeMaximumAdvertisingDataLength</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the maximum LE advertising data length in bytes,\n if LE Extended Advertising feature is supported, 0 otherwise. ...</div><div class='long'><p>Return the maximum LE advertising data length in bytes,\n if LE Extended Advertising feature is supported, 0 otherwise.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum LE advertising data length.</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the friendly Bluetooth name of the local Bluetooth adapter. ...</div><div class='long'><p>Get the friendly Bluetooth name of the local Bluetooth adapter.\n <p>This name is visible to remote Bluetooth devices.\n <p>Requires android.Manifest.permission.BLUETOOTH</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the Bluetooth name, or null on error</p>\n</div></li></ul></div></div></div><div id='method-getProfileConnectionState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getProfileConnectionState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getProfileConnectionState' class='name expandable'>getProfileConnectionState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current connection state of a profile. ...</div><div class='long'><p>Get the current connection state of a profile.\n This function can be used to check whether the local Bluetooth adapter\n is connected to any remote device for a specific profile.\n Profile can be one of <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-HEADSET\" rel=\"android.bluetooth.BluetoothProfile-property-HEADSET\" class=\"docClass\">android.bluetooth.BluetoothProfile.HEADSET</a>, <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-A2DP\" rel=\"android.bluetooth.BluetoothProfile-property-A2DP\" class=\"docClass\">android.bluetooth.BluetoothProfile.A2DP</a>.</p>\n\n<p> <p> Return value can be one of\n <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-STATE_DISCONNECTED\" rel=\"android.bluetooth.BluetoothProfile-property-STATE_DISCONNECTED\" class=\"docClass\">android.bluetooth.BluetoothProfile.STATE_DISCONNECTED</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-STATE_CONNECTING\" rel=\"android.bluetooth.BluetoothProfile-property-STATE_CONNECTING\" class=\"docClass\">android.bluetooth.BluetoothProfile.STATE_CONNECTING</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-STATE_CONNECTED\" rel=\"android.bluetooth.BluetoothProfile-property-STATE_CONNECTED\" class=\"docClass\">android.bluetooth.BluetoothProfile.STATE_CONNECTED</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-STATE_DISCONNECTING\" rel=\"android.bluetooth.BluetoothProfile-property-STATE_DISCONNECTING\" class=\"docClass\">android.bluetooth.BluetoothProfile.STATE_DISCONNECTING</a></p>\n</div></div></div><div id='method-getProfileProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getProfileProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getProfileProxy' class='name expandable'>getProfileProxy</a>( <span class='pre'>context, listener, profile</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the profile proxy object associated with the profile. ...</div><div class='long'><p>Get the profile proxy object associated with the profile.</p>\n\n<p> <p>Profile can be one of <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-HEADSET\" rel=\"android.bluetooth.BluetoothProfile-property-HEADSET\" class=\"docClass\">android.bluetooth.BluetoothProfile.HEADSET</a>, <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-A2DP\" rel=\"android.bluetooth.BluetoothProfile-property-A2DP\" class=\"docClass\">android.bluetooth.BluetoothProfile.A2DP</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-GATT\" rel=\"android.bluetooth.BluetoothProfile-property-GATT\" class=\"docClass\">android.bluetooth.BluetoothProfile.GATT</a>, <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-HEARING_AID\" rel=\"android.bluetooth.BluetoothProfile-property-HEARING_AID\" class=\"docClass\">android.bluetooth.BluetoothProfile.HEARING_AID</a>, or <a href=\"#!/api/android.bluetooth.BluetoothProfile-property-GATT_SERVER\" rel=\"android.bluetooth.BluetoothProfile-property-GATT_SERVER\" class=\"docClass\">android.bluetooth.BluetoothProfile.GATT_SERVER</a>. Clients must implement android.bluetooth.BluetoothProfile.ServiceListener to get notified of the connection status and to get the\n proxy object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>Context of the application</p>\n</div></li><li><span class='pre'>listener</span> : Object {BluetoothProfile.ServiceListener}<div class='sub-desc'><p>The service Listener for connection callbacks.</p>\n</div></li><li><span class='pre'>profile</span> : Number<div class='sub-desc'><p>The Bluetooth profile; either BluetoothProfile.HEADSET,\n BluetoothProfile.A2DP, BluetoothProfile.GATT, BluetoothProfile.HEARING_AID or BluetoothProfile.GATT_SERVER.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false on error</p>\n</div></li></ul></div></div></div><div id='method-getRemoteDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getRemoteDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getRemoteDevice' class='name expandable'>getRemoteDevice</a>( <span class='pre'>address</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a android.bluetooth.BluetoothDevice object for the given Bluetooth hardware\n address. ...</div><div class='long'><p>Get a <a href=\"#!/api/android.bluetooth.BluetoothDevice\" rel=\"android.bluetooth.BluetoothDevice\" class=\"docClass\">android.bluetooth.BluetoothDevice</a> object for the given Bluetooth hardware\n address.\n <p>Valid Bluetooth hardware addresses must be 6 bytes. This method\n expects the address in network byte order (MSB first).\n <p>A <a href=\"#!/api/android.bluetooth.BluetoothDevice\" rel=\"android.bluetooth.BluetoothDevice\" class=\"docClass\">android.bluetooth.BluetoothDevice</a> will always be returned for a valid\n hardware address, even if this adapter has never seen that device.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>address</span> : Object {byte[]}<div class='sub-desc'><p>Bluetooth MAC address (6 bytes)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if address is invalid</p>\n</div></li></ul></div></div></div><div id='method-getScanMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getScanMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getScanMode' class='name expandable'>getScanMode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current Bluetooth scan mode of the local Bluetooth adapter. ...</div><div class='long'><p>Get the current Bluetooth scan mode of the local Bluetooth adapter.\n <p>The Bluetooth scan mode determines if the local adapter is\n connectable and/or discoverable from remote Bluetooth devices.\n <p>Possible values are:\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" class=\"docClass\">SCAN_MODE_NONE</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE\" class=\"docClass\">SCAN_MODE_CONNECTABLE</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_CONNECTABLE_DISCOVERABLE\" class=\"docClass\">SCAN_MODE_CONNECTABLE_DISCOVERABLE</a>.\n <p>If Bluetooth state is not <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>, this API\n will return <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" rel=\"android.bluetooth.BluetoothAdapter-property-SCAN_MODE_NONE\" class=\"docClass\">SCAN_MODE_NONE</a>. After turning on Bluetooth,\n wait for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a> with <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>\n to get the updated value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>scan mode</p>\n</div></li></ul></div></div></div><div id='method-getState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current state of the local Bluetooth adapter. ...</div><div class='long'><p>Get the current state of the local Bluetooth adapter.\n <p>Possible return values are\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_OFF\" class=\"docClass\">STATE_OFF</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_TURNING_ON\" class=\"docClass\">STATE_TURNING_ON</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>,\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_TURNING_OFF\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_TURNING_OFF\" class=\"docClass\">STATE_TURNING_OFF</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>current state of Bluetooth adapter</p>\n</div></li></ul></div></div></div><div id='method-isDiscovering' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isDiscovering' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isDiscovering' class='name expandable'>isDiscovering</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the local Bluetooth adapter is currently in the device\n discovery process. ...</div><div class='long'><p>Return true if the local Bluetooth adapter is currently in the device\n discovery process.\n <p>Device discovery is a heavyweight procedure. New connections to\n remote Bluetooth devices should not be attempted while discovery is in\n progress, and existing connections will experience limited bandwidth\n and high latency. Use <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-cancelDiscovery\" rel=\"android.bluetooth.BluetoothAdapter-method-cancelDiscovery\" class=\"docClass\">cancelDiscovery</a>() to cancel an ongoing\n discovery.\n <p>Applications can also register for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_STARTED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_STARTED\" class=\"docClass\">ACTION_DISCOVERY_STARTED</a>\n or <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_FINISHED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_FINISHED\" class=\"docClass\">ACTION_DISCOVERY_FINISHED</a> to be notified when discovery\n starts or completes.\n <p>If Bluetooth state is not <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>, this API\n will return false. After turning on Bluetooth,\n wait for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a> with <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>\n to get the updated value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if discovering</p>\n</div></li></ul></div></div></div><div id='method-isEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isEnabled' class='name expandable'>isEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if Bluetooth is currently enabled and ready for use. ...</div><div class='long'><p>Return true if Bluetooth is currently enabled and ready for use.\n <p>Equivalent to:\n <code>getBluetoothState() == STATE_ON</code></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the local adapter is turned on</p>\n</div></li></ul></div></div></div><div id='method-isLe2MPhySupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isLe2MPhySupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isLe2MPhySupported' class='name expandable'>isLe2MPhySupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if LE 2M PHY feature is supported. ...</div><div class='long'><p>Return true if LE 2M PHY feature is supported.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if chipset supports LE 2M PHY feature</p>\n</div></li></ul></div></div></div><div id='method-isLeCodedPhySupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isLeCodedPhySupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isLeCodedPhySupported' class='name expandable'>isLeCodedPhySupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if LE Coded PHY feature is supported. ...</div><div class='long'><p>Return true if LE Coded PHY feature is supported.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if chipset supports LE Coded PHY feature</p>\n</div></li></ul></div></div></div><div id='method-isLeExtendedAdvertisingSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isLeExtendedAdvertisingSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isLeExtendedAdvertisingSupported' class='name expandable'>isLeExtendedAdvertisingSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if LE Extended Advertising feature is supported. ...</div><div class='long'><p>Return true if LE Extended Advertising feature is supported.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if chipset supports LE Extended Advertising feature</p>\n</div></li></ul></div></div></div><div id='method-isLePeriodicAdvertisingSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isLePeriodicAdvertisingSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isLePeriodicAdvertisingSupported' class='name expandable'>isLePeriodicAdvertisingSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if LE Periodic Advertising feature is supported. ...</div><div class='long'><p>Return true if LE Periodic Advertising feature is supported.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if chipset supports LE Periodic Advertising feature</p>\n</div></li></ul></div></div></div><div id='method-isMultipleAdvertisementSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isMultipleAdvertisementSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isMultipleAdvertisementSupported' class='name expandable'>isMultipleAdvertisementSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the multi advertisement is supported by the chipset ...</div><div class='long'><p>Return true if the multi advertisement is supported by the chipset</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if Multiple Advertisement feature is supported</p>\n</div></li></ul></div></div></div><div id='method-isOffloadedFilteringSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isOffloadedFilteringSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isOffloadedFilteringSupported' class='name expandable'>isOffloadedFilteringSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if offloaded filters are supported ...</div><div class='long'><p>Return true if offloaded filters are supported</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if chipset supports on-chip filtering</p>\n</div></li></ul></div></div></div><div id='method-isOffloadedScanBatchingSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-isOffloadedScanBatchingSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-isOffloadedScanBatchingSupported' class='name expandable'>isOffloadedScanBatchingSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if offloaded scan batching is supported ...</div><div class='long'><p>Return true if offloaded scan batching is supported</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if chipset supports on-chip scan batching</p>\n</div></li></ul></div></div></div><div id='method-listenUsingInsecureL2capChannel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-listenUsingInsecureL2capChannel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-listenUsingInsecureL2capChannel' class='name expandable'>listenUsingInsecureL2capChannel</a>( <span class='pre'></span> ) : Object {android.bluetooth.BluetoothServerSocket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an insecure L2CAP Connection-oriented Channel (CoC) android.bluetooth.BluetoothServerSocket and\n assign a dyna...</div><div class='long'><p>Create an insecure L2CAP Connection-oriented Channel (CoC) <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a> and\n assign a dynamic PSM value. This socket can be used to listen for incoming connections. The\n supported Bluetooth transport is LE only.\n <p>The link key is not required to be authenticated, i.e the communication may be vulnerable\n to man-in-the-middle attacks. Use <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-listenUsingL2capChannel\" rel=\"android.bluetooth.BluetoothAdapter-method-listenUsingL2capChannel\" class=\"docClass\">listenUsingL2capChannel</a>, if an encrypted and\n authenticated communication channel is desired.\n <p>Use <a href=\"#!/api/android.bluetooth.BluetoothServerSocket-method-accept\" rel=\"android.bluetooth.BluetoothServerSocket-method-accept\" class=\"docClass\">android.bluetooth.BluetoothServerSocket.accept</a> to retrieve incoming connections from a listening\n <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a>.\n <p>The system will assign a dynamic protocol/service multiplexer (PSM) value. This PSM value\n can be read from the android.bluetooth.BluetoothServerSocket.getPsm() and this value will be released\n when this server socket is closed, Bluetooth is turned off, or the application exits\n unexpectedly.\n <p>The mechanism of disclosing the assigned dynamic PSM value to the initiating peer is\n defined and performed by the application.\n <p>Use android.bluetooth.BluetoothDevice.createInsecureL2capChannel(int) to connect to this server\n socket from another Android device that is given the PSM value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.bluetooth.BluetoothServerSocket}</span><div class='sub-desc'><p>an L2CAP CoC BluetoothServerSocket</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException on error, for example Bluetooth not available, or insufficient\n permissions, or unable to start this CoC</p>\n</div></li></ul></div></div></div><div id='method-listenUsingInsecureRfcommWithServiceRecord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-listenUsingInsecureRfcommWithServiceRecord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-listenUsingInsecureRfcommWithServiceRecord' class='name expandable'>listenUsingInsecureRfcommWithServiceRecord</a>( <span class='pre'>name, uuid</span> ) : Object {android.bluetooth.BluetoothServerSocket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a listening, insecure RFCOMM Bluetooth socket with Service Record. ...</div><div class='long'><p>Create a listening, insecure RFCOMM Bluetooth socket with Service Record.\n <p>The link key is not required to be authenticated, i.e the communication may be\n vulnerable to Man In the Middle attacks. For Bluetooth 2.1 devices,\n the link will be encrypted, as encryption is mandartory.\n For legacy devices (pre Bluetooth 2.1 devices) the link will not\n be encrypted. Use <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-listenUsingRfcommWithServiceRecord\" rel=\"android.bluetooth.BluetoothAdapter-method-listenUsingRfcommWithServiceRecord\" class=\"docClass\">listenUsingRfcommWithServiceRecord</a>, if an\n encrypted and authenticated communication channel is desired.\n <p>Use <a href=\"#!/api/android.bluetooth.BluetoothServerSocket-method-accept\" rel=\"android.bluetooth.BluetoothServerSocket-method-accept\" class=\"docClass\">android.bluetooth.BluetoothServerSocket.accept</a> to retrieve incoming\n connections from a listening <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a>.\n <p>The system will assign an unused RFCOMM channel to listen on.\n <p>The system will also register a Service Discovery\n Protocol (SDP) record with the local SDP server containing the specified\n UUID, service name, and auto-assigned channel. Remote Bluetooth devices\n can use the same UUID to query our SDP server and discover which channel\n to connect to. This SDP record will be removed when this socket is\n closed, or if this application closes unexpectedly.\n <p>Use <a href=\"#!/api/android.bluetooth.BluetoothDevice-method-createRfcommSocketToServiceRecord\" rel=\"android.bluetooth.BluetoothDevice-method-createRfcommSocketToServiceRecord\" class=\"docClass\">android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord</a> to\n connect to this socket from another device using the same UUID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>service name for SDP record</p>\n</div></li><li><span class='pre'>uuid</span> : Object {UUID}<div class='sub-desc'><p>uuid for SDP record</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.bluetooth.BluetoothServerSocket}</span><div class='sub-desc'><p>a listening RFCOMM BluetoothServerSocket</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException on error, for example Bluetooth not available, or insufficient\n permissions, or channel in use.</p>\n</div></li></ul></div></div></div><div id='method-listenUsingL2capChannel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-listenUsingL2capChannel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-listenUsingL2capChannel' class='name expandable'>listenUsingL2capChannel</a>( <span class='pre'></span> ) : Object {android.bluetooth.BluetoothServerSocket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a secure L2CAP Connection-oriented Channel (CoC) android.bluetooth.BluetoothServerSocket and\n assign a dynamic...</div><div class='long'><p>Create a secure L2CAP Connection-oriented Channel (CoC) <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a> and\n assign a dynamic protocol/service multiplexer (PSM) value. This socket can be used to listen\n for incoming connections. The supported Bluetooth transport is LE only.\n <p>A remote device connecting to this socket will be authenticated and communication on this\n socket will be encrypted.\n <p>Use <a href=\"#!/api/android.bluetooth.BluetoothServerSocket-method-accept\" rel=\"android.bluetooth.BluetoothServerSocket-method-accept\" class=\"docClass\">android.bluetooth.BluetoothServerSocket.accept</a> to retrieve incoming connections from a listening\n <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a>.\n <p>The system will assign a dynamic PSM value. This PSM value can be read from the android.bluetooth.BluetoothServerSocket.getPsm() and this value will be released when this server socket is\n closed, Bluetooth is turned off, or the application exits unexpectedly.\n <p>The mechanism of disclosing the assigned dynamic PSM value to the initiating peer is\n defined and performed by the application.\n <p>Use android.bluetooth.BluetoothDevice.createL2capChannel(int) to connect to this server\n socket from another Android device that is given the PSM value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.bluetooth.BluetoothServerSocket}</span><div class='sub-desc'><p>an L2CAP CoC BluetoothServerSocket</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException on error, for example Bluetooth not available, or insufficient\n permissions, or unable to start this CoC</p>\n</div></li></ul></div></div></div><div id='method-listenUsingRfcommWithServiceRecord' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-listenUsingRfcommWithServiceRecord' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-listenUsingRfcommWithServiceRecord' class='name expandable'>listenUsingRfcommWithServiceRecord</a>( <span class='pre'>name, uuid</span> ) : Object {android.bluetooth.BluetoothServerSocket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a listening, secure RFCOMM Bluetooth socket with Service Record. ...</div><div class='long'><p>Create a listening, secure RFCOMM Bluetooth socket with Service Record.\n <p>A remote device connecting to this socket will be authenticated and\n communication on this socket will be encrypted.\n <p>Use <a href=\"#!/api/android.bluetooth.BluetoothServerSocket-method-accept\" rel=\"android.bluetooth.BluetoothServerSocket-method-accept\" class=\"docClass\">android.bluetooth.BluetoothServerSocket.accept</a> to retrieve incoming\n connections from a listening <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a>.\n <p>The system will assign an unused RFCOMM channel to listen on.\n <p>The system will also register a Service Discovery\n Protocol (SDP) record with the local SDP server containing the specified\n UUID, service name, and auto-assigned channel. Remote Bluetooth devices\n can use the same UUID to query our SDP server and discover which channel\n to connect to. This SDP record will be removed when this socket is\n closed, or if this application closes unexpectedly.\n <p>Use <a href=\"#!/api/android.bluetooth.BluetoothDevice-method-createRfcommSocketToServiceRecord\" rel=\"android.bluetooth.BluetoothDevice-method-createRfcommSocketToServiceRecord\" class=\"docClass\">android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord</a> to\n connect to this socket from another device using the same UUID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>service name for SDP record</p>\n</div></li><li><span class='pre'>uuid</span> : Object {UUID}<div class='sub-desc'><p>uuid for SDP record</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.bluetooth.BluetoothServerSocket}</span><div class='sub-desc'><p>a listening RFCOMM BluetoothServerSocket</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException on error, for example Bluetooth not available, or insufficient\n permissions, or channel in use.</p>\n</div></li></ul></div></div></div><div id='method-setName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-setName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-setName' class='name expandable'>setName</a>( <span class='pre'>name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the friendly Bluetooth name of the local Bluetooth adapter. ...</div><div class='long'><p>Set the friendly Bluetooth name of the local Bluetooth adapter.\n <p>This name is visible to remote Bluetooth devices.\n <p>Valid Bluetooth names are a maximum of 248 bytes using UTF-8\n encoding, although many remote devices can only display the first\n 40 characters, and some may be limited to just 20.\n <p>If Bluetooth state is not <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>, this API\n will return false. After turning on Bluetooth,\n wait for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a> with <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>\n to get the updated value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>a valid Bluetooth name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the name was set, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-startDiscovery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-startDiscovery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-startDiscovery' class='name expandable'>startDiscovery</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start the remote device discovery process. ...</div><div class='long'><p>Start the remote device discovery process.\n <p>The discovery process usually involves an inquiry scan of about 12\n seconds, followed by a page scan of each new device to retrieve its\n Bluetooth name.\n <p>This is an asynchronous call, it will return immediately. Register\n for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_STARTED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_STARTED\" class=\"docClass\">ACTION_DISCOVERY_STARTED</a> and <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_FINISHED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_DISCOVERY_FINISHED\" class=\"docClass\">ACTION_DISCOVERY_FINISHED</a> intents to determine exactly when the\n discovery starts and completes. Register for <a href=\"#!/api/android.bluetooth.BluetoothDevice-property-ACTION_FOUND\" rel=\"android.bluetooth.BluetoothDevice-property-ACTION_FOUND\" class=\"docClass\">android.bluetooth.BluetoothDevice.ACTION_FOUND</a> to be notified as remote Bluetooth devices\n are found.\n <p>Device discovery is a heavyweight procedure. New connections to\n remote Bluetooth devices should not be attempted while discovery is in\n progress, and existing connections will experience limited bandwidth\n and high latency. Use <a href=\"#!/api/android.bluetooth.BluetoothAdapter-method-cancelDiscovery\" rel=\"android.bluetooth.BluetoothAdapter-method-cancelDiscovery\" class=\"docClass\">cancelDiscovery</a>() to cancel an ongoing\n discovery. Discovery is not managed by the Activity,\n but is run as a system service, so an application should always call\n cancelDiscovery() even if it\n did not directly request a discovery, just to be sure.\n <p>Device discovery will only find remote devices that are currently\n <i>discoverable</i> (inquiry scan enabled). Many Bluetooth devices are\n not discoverable by default, and need to be entered into a special mode.\n <p>If Bluetooth state is not <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>, this API\n will return false. After turning on Bluetooth,\n wait for <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" rel=\"android.bluetooth.BluetoothAdapter-property-ACTION_STATE_CHANGED\" class=\"docClass\">ACTION_STATE_CHANGED</a> with <a href=\"#!/api/android.bluetooth.BluetoothAdapter-property-STATE_ON\" rel=\"android.bluetooth.BluetoothAdapter-property-STATE_ON\" class=\"docClass\">STATE_ON</a>\n to get the updated value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false on error</p>\n</div></li></ul></div></div></div><div id='method-startLeScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-startLeScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-startLeScan' class='name expandable'>startLeScan</a>( <span class='pre'>serviceUuids, callback</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Starts a scan for Bluetooth LE devices, looking for devices that\n advertise given services. ...</div><div class='long'><p>Starts a scan for Bluetooth LE devices, looking for devices that\n advertise given services.</p>\n\n<p> <p>Devices which advertise all specified services are reported using the\n <a href=\"#!/api/android.bluetooth.BluetoothAdapter.LeScanCallback-method-onLeScan\" rel=\"android.bluetooth.BluetoothAdapter.LeScanCallback-method-onLeScan\" class=\"docClass\">android.bluetooth.BluetoothAdapter.LeScanCallback.onLeScan</a> callback.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>use ScanSettings, ScanCallback)\n instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>serviceUuids</span> : Object {java.util.UUID[]}<div class='sub-desc'><p>Array of services to look for</p>\n</div></li><li><span class='pre'>callback</span> : Object {BluetoothAdapter.LeScanCallback}<div class='sub-desc'><p>the callback LE scan results are delivered</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true, if the scan was started successfully</p>\n</div></li></ul></div></div></div><div id='method-stopLeScan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothAdapter'>android.bluetooth.BluetoothAdapter</span><br/><a href='source/BluetoothAdapter.html#android-bluetooth-BluetoothAdapter-method-stopLeScan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothAdapter-method-stopLeScan' class='name expandable'>stopLeScan</a>( <span class='pre'>callback</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Stops an ongoing Bluetooth LE device scan. ...</div><div class='long'><p>Stops an ongoing Bluetooth LE device scan.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use BluetoothLeScanner.stopScan(ScanCallback) instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {BluetoothAdapter.LeScanCallback}<div class='sub-desc'><p>used to identify which scan to stop must be the same handle used to start the\n scan</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});