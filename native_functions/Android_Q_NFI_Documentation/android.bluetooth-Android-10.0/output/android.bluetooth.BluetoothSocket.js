Ext.data.JsonP.android_bluetooth_BluetoothSocket({"tagname":"class","name":"android.bluetooth.BluetoothSocket","autodetected":{},"files":[{"filename":"BluetoothSocket.js","href":"BluetoothSocket.html#android-bluetooth-BluetoothSocket"}],"extends":"java.lang.Object","members":[{"name":"TYPE_L2CAP","tagname":"property","owner":"android.bluetooth.BluetoothSocket","id":"property-TYPE_L2CAP","meta":{}},{"name":"TYPE_RFCOMM","tagname":"property","owner":"android.bluetooth.BluetoothSocket","id":"property-TYPE_RFCOMM","meta":{}},{"name":"TYPE_SCO","tagname":"property","owner":"android.bluetooth.BluetoothSocket","id":"property-TYPE_SCO","meta":{}},{"name":"close","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-close","meta":{}},{"name":"connect","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-connect","meta":{}},{"name":"getConnectionType","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-getConnectionType","meta":{}},{"name":"getInputStream","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-getInputStream","meta":{}},{"name":"getMaxReceivePacketSize","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-getMaxReceivePacketSize","meta":{}},{"name":"getMaxTransmitPacketSize","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-getMaxTransmitPacketSize","meta":{}},{"name":"getOutputStream","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-getOutputStream","meta":{}},{"name":"getRemoteDevice","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-getRemoteDevice","meta":{}},{"name":"isConnected","tagname":"method","owner":"android.bluetooth.BluetoothSocket","id":"method-isConnected","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.bluetooth.BluetoothSocket","short_doc":"implements java.io.Closeable\n\nA connected or connecting Bluetooth socket. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.bluetooth.BluetoothSocket</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket' target='_blank'>BluetoothSocket.js</a></div></pre><div class='doc-contents'><p>implements java.io.Closeable</p>\n\n<p>A connected or connecting Bluetooth socket.</p>\n\n<p> <p>The interface for Bluetooth Sockets is similar to that of TCP sockets:\n java.net.Socket and java.net.ServerSocket. On the server\n side, use a <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a> to create a listening server\n socket. When a connection is accepted by the <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a>,\n it will return a new <a href=\"#!/api/android.bluetooth.BluetoothSocket\" rel=\"android.bluetooth.BluetoothSocket\" class=\"docClass\">android.bluetooth.BluetoothSocket</a> to manage the connection.\n On the client side, use a single <a href=\"#!/api/android.bluetooth.BluetoothSocket\" rel=\"android.bluetooth.BluetoothSocket\" class=\"docClass\">android.bluetooth.BluetoothSocket</a> to both initiate\n an outgoing connection and to manage the connection.</p>\n\n<p> <p>The most common type of Bluetooth socket is RFCOMM, which is the type\n supported by the Android APIs. RFCOMM is a connection-oriented, streaming\n transport over Bluetooth. It is also known as the Serial Port Profile (SPP).</p>\n\n<p> <p>To create a <a href=\"#!/api/android.bluetooth.BluetoothSocket\" rel=\"android.bluetooth.BluetoothSocket\" class=\"docClass\">android.bluetooth.BluetoothSocket</a> for connecting to a known device, use\n <a href=\"#!/api/android.bluetooth.BluetoothDevice-method-createRfcommSocketToServiceRecord\" rel=\"android.bluetooth.BluetoothDevice-method-createRfcommSocketToServiceRecord\" class=\"docClass\">android.bluetooth.BluetoothDevice.createRfcommSocketToServiceRecord()</a>.\n Then call <a href=\"#!/api/android.bluetooth.BluetoothSocket-method-connect\" rel=\"android.bluetooth.BluetoothSocket-method-connect\" class=\"docClass\">connect</a>() to attempt a connection to the remote device.\n This call will block until a connection is established or the connection\n fails.</p>\n\n<p> <p>To create a <a href=\"#!/api/android.bluetooth.BluetoothSocket\" rel=\"android.bluetooth.BluetoothSocket\" class=\"docClass\">android.bluetooth.BluetoothSocket</a> as a server (or \"host\"), see the\n <a href=\"#!/api/android.bluetooth.BluetoothServerSocket\" rel=\"android.bluetooth.BluetoothServerSocket\" class=\"docClass\">android.bluetooth.BluetoothServerSocket</a> documentation.</p>\n\n<p> <p>Once the socket is connected, whether initiated as a client or accepted\n as a server, open the IO streams by calling <a href=\"#!/api/android.bluetooth.BluetoothSocket-method-getInputStream\" rel=\"android.bluetooth.BluetoothSocket-method-getInputStream\" class=\"docClass\">getInputStream</a> and\n <a href=\"#!/api/android.bluetooth.BluetoothSocket-method-getOutputStream\" rel=\"android.bluetooth.BluetoothSocket-method-getOutputStream\" class=\"docClass\">getOutputStream</a> in order to retrieve java.io.InputStream\n and java.io.OutputStream objects, respectively, which are\n automatically connected to the socket.</p>\n\n<p> <p><a href=\"#!/api/android.bluetooth.BluetoothSocket\" rel=\"android.bluetooth.BluetoothSocket\" class=\"docClass\">android.bluetooth.BluetoothSocket</a> is thread\n safe. In particular, <a href=\"#!/api/android.bluetooth.BluetoothSocket-method-close\" rel=\"android.bluetooth.BluetoothSocket-method-close\" class=\"docClass\">close</a> will always immediately abort ongoing\n operations and close the socket.</p>\n\n<p> <p class=\"note\"><strong>Note:</strong>\n Requires the android.Manifest.permission.BLUETOOTH permission.</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about using Bluetooth, read the\n <a href=\"{@docRoot}guide/topics/connectivity/bluetooth.html\">Bluetooth</a> developer guide.</p>\n </div></p>\n\n<p> {@see BluetoothServerSocket}\n {@see java.io.InputStream}\n {@see java.io.OutputStream}</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-TYPE_L2CAP' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-property-TYPE_L2CAP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-property-TYPE_L2CAP' class='name expandable'>TYPE_L2CAP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>L2CAP socket ...</div><div class='long'><p>L2CAP socket</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-TYPE_RFCOMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-property-TYPE_RFCOMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-property-TYPE_RFCOMM' class='name expandable'>TYPE_RFCOMM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>RFCOMM socket ...</div><div class='long'><p>RFCOMM socket</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-TYPE_SCO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-property-TYPE_SCO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-property-TYPE_SCO' class='name expandable'>TYPE_SCO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>SCO socket ...</div><div class='long'><p>SCO socket</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-connect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-connect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-connect' class='name expandable'>connect</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempt to connect to a remote device. ...</div><div class='long'><p>Attempt to connect to a remote device.\n <p>This method will block until a connection is made or the connection\n fails. If this method returns without an exception then this socket\n is now connected.\n <p>Creating new connections to\n remote Bluetooth devices should not be attempted while device discovery\n is in progress. Device discovery is a heavyweight procedure on the\n Bluetooth adapter and will significantly slow a device connection.\n Use android.bluetooth.BluetoothAdapter.cancelDiscovery() to cancel an ongoing\n discovery. Discovery is not managed by the Activity,\n but is run as a system service, so an application should always call\n android.bluetooth.BluetoothAdapter.cancelDiscovery() even if it\n did not directly request a discovery, just to be sure.\n <p><a href=\"#!/api/android.bluetooth.BluetoothSocket-method-close\" rel=\"android.bluetooth.BluetoothSocket-method-close\" class=\"docClass\">close</a> can be used to abort this call from another thread.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException on error, for example connection failure</p>\n</div></li></ul></div></div></div><div id='method-getConnectionType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-getConnectionType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-getConnectionType' class='name expandable'>getConnectionType</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the type of the underlying connection. ...</div><div class='long'><p>Get the type of the underlying connection.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>one of <a href=\"#!/api/android.bluetooth.BluetoothSocket-property-TYPE_RFCOMM\" rel=\"android.bluetooth.BluetoothSocket-property-TYPE_RFCOMM\" class=\"docClass\">TYPE_RFCOMM</a>, <a href=\"#!/api/android.bluetooth.BluetoothSocket-property-TYPE_SCO\" rel=\"android.bluetooth.BluetoothSocket-property-TYPE_SCO\" class=\"docClass\">TYPE_SCO</a> or <a href=\"#!/api/android.bluetooth.BluetoothSocket-property-TYPE_L2CAP\" rel=\"android.bluetooth.BluetoothSocket-property-TYPE_L2CAP\" class=\"docClass\">TYPE_L2CAP</a></p>\n</div></li></ul></div></div></div><div id='method-getInputStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-getInputStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-getInputStream' class='name expandable'>getInputStream</a>( <span class='pre'></span> ) : Object {java.io.InputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the input stream associated with this socket. ...</div><div class='long'><p>Get the input stream associated with this socket.\n <p>The input stream will be returned even if the socket is not yet\n connected, but operations on that stream will throw IOException until\n the associated socket is connected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.InputStream}</span><div class='sub-desc'><p>InputStream</p>\n</div></li></ul></div></div></div><div id='method-getMaxReceivePacketSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-getMaxReceivePacketSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-getMaxReceivePacketSize' class='name expandable'>getMaxReceivePacketSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the maximum supported Receive packet size for the underlying transport. ...</div><div class='long'><p>Get the maximum supported Receive packet size for the underlying transport.\n Use this to optimize the reads done on the input stream, as any call to read\n will return a maximum of this amount of bytes - or for some transports a\n multiple of this value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum supported Receive packet size for the underlying transport.</p>\n</div></li></ul></div></div></div><div id='method-getMaxTransmitPacketSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-getMaxTransmitPacketSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-getMaxTransmitPacketSize' class='name expandable'>getMaxTransmitPacketSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the maximum supported Transmit packet size for the underlying transport. ...</div><div class='long'><p>Get the maximum supported Transmit packet size for the underlying transport.\n Use this to optimize the writes done to the output socket, to avoid sending\n half full packets.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum supported Transmit packet size for the underlying transport.</p>\n</div></li></ul></div></div></div><div id='method-getOutputStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-getOutputStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-getOutputStream' class='name expandable'>getOutputStream</a>( <span class='pre'></span> ) : Object {java.io.OutputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the output stream associated with this socket. ...</div><div class='long'><p>Get the output stream associated with this socket.\n <p>The output stream will be returned even if the socket is not yet\n connected, but operations on that stream will throw IOException until\n the associated socket is connected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.OutputStream}</span><div class='sub-desc'><p>OutputStream</p>\n</div></li></ul></div></div></div><div id='method-getRemoteDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-getRemoteDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-getRemoteDevice' class='name expandable'>getRemoteDevice</a>( <span class='pre'></span> ) : Object {android.bluetooth.BluetoothDevice}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the remote device this socket is connecting, or connected, to. ...</div><div class='long'><p>Get the remote device this socket is connecting, or connected, to.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.bluetooth.BluetoothDevice}</span><div class='sub-desc'><p>remote device</p>\n</div></li></ul></div></div></div><div id='method-isConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.bluetooth.BluetoothSocket'>android.bluetooth.BluetoothSocket</span><br/><a href='source/BluetoothSocket.html#android-bluetooth-BluetoothSocket-method-isConnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.bluetooth.BluetoothSocket-method-isConnected' class='name expandable'>isConnected</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the connection status of this socket, ie, whether there is an active connection with\n remote device. ...</div><div class='long'><p>Get the connection status of this socket, ie, whether there is an active connection with\n remote device.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if connected false if not connected</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});