Ext.data.JsonP.javax_xml_transform_ErrorListener({"tagname":"class","name":"javax.xml.transform.ErrorListener","autodetected":{},"files":[{"filename":"ErrorListener.js","href":"ErrorListener.html#javax-xml-transform-ErrorListener"}],"members":[{"name":"error","tagname":"method","owner":"javax.xml.transform.ErrorListener","id":"method-error","meta":{}},{"name":"fatalError","tagname":"method","owner":"javax.xml.transform.ErrorListener","id":"method-fatalError","meta":{}},{"name":"warning","tagname":"method","owner":"javax.xml.transform.ErrorListener","id":"method-warning","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.xml.transform.ErrorListener","short_doc":"To provide customized error handling, implement this interface and\n use the setErrorListener method to register an in...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ErrorListener.html#javax-xml-transform-ErrorListener' target='_blank'>ErrorListener.js</a></div></pre><div class='doc-contents'><p>To provide customized error handling, implement this interface and\n use the <code>setErrorListener</code> method to register an instance of the\n implementation with the <a href=\"#!/api/javax.xml.transform.Transformer\" rel=\"javax.xml.transform.Transformer\" class=\"docClass\">javax.xml.transform.Transformer</a>.  The\n <code>Transformer</code> then reports all errors and warnings through this\n interface.</p>\n\n\n<p> <p>If an application does <em>not</em> register its own custom\n <code>ErrorListener</code>, the default <code>ErrorListener</code>\n is used which reports all warnings and errors to <code>System.err</code>\n and does not throw any <code>Exception</code>s.\n Applications are <em>strongly</em> encouraged to register and use\n <code>ErrorListener</code>s that insure proper behavior for warnings and\n errors.</p></p>\n\n<p> <p>For transformation errors, a <code>Transformer</code> must use this\n interface instead of throwing an <code>Exception</code>: it is up to the\n application to decide whether to throw an <code>Exception</code> for\n different types of errors and warnings.  Note however that the\n <code>Transformer</code> is not required to continue with the transformation\n after a call to <a href=\"#!/api/javax.xml.transform.ErrorListener-method-fatalError\" rel=\"javax.xml.transform.ErrorListener-method-fatalError\" class=\"docClass\">fatalError</a>(TransformerException exception).</p></p>\n\n<p> <p><code>Transformer</code>s may use this mechanism to report XML parsing\n errors as well as transformation errors.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-error' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.ErrorListener'>javax.xml.transform.ErrorListener</span><br/><a href='source/ErrorListener.html#javax-xml-transform-ErrorListener-method-error' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.ErrorListener-method-error' class='name expandable'>error</a>( <span class='pre'>exception</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Receive notification of a recoverable error. ...</div><div class='long'><p>Receive notification of a recoverable error.</p>\n\n<p> <p>The transformer must continue to try and provide normal transformation\n after invoking this method.  It should still be possible for the\n application to process the document through to the end if no other errors\n are encountered.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>exception</span> : Object {TransformerException}<div class='sub-desc'><p>The error information encapsulated in a\n                  transformer exception.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><a href=\"#!/api/javax.xml.transform.TransformerException\" rel=\"javax.xml.transform.TransformerException\" class=\"docClass\">javax.xml.transform.TransformerException</a> if the application\n chooses to discontinue the transformation.\n@see <a href=\"#!/api/javax.xml.transform.TransformerException\" rel=\"javax.xml.transform.TransformerException\" class=\"docClass\">javax.xml.transform.TransformerException</a></p>\n</div></li></ul></div></div></div><div id='method-fatalError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.ErrorListener'>javax.xml.transform.ErrorListener</span><br/><a href='source/ErrorListener.html#javax-xml-transform-ErrorListener-method-fatalError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.ErrorListener-method-fatalError' class='name expandable'>fatalError</a>( <span class='pre'>exception</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Receive notification of a non-recoverable error. ...</div><div class='long'><p>Receive notification of a non-recoverable error.</p>\n\n\n<p> <p>The <code>Transformer</code> must continue to try and provide normal\n transformation after invoking this method.  It should still be possible for the\n application to process the document through to the end if no other errors\n are encountered, but there is no guarantee that the output will be\n useable.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>exception</span> : Object {TransformerException}<div class='sub-desc'><p>The error information encapsulated in a\n    <code>TransformerException</code>.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><a href=\"#!/api/javax.xml.transform.TransformerException\" rel=\"javax.xml.transform.TransformerException\" class=\"docClass\">javax.xml.transform.TransformerException</a> if the application\n chooses to discontinue the transformation.\n@see <a href=\"#!/api/javax.xml.transform.TransformerException\" rel=\"javax.xml.transform.TransformerException\" class=\"docClass\">javax.xml.transform.TransformerException</a></p>\n</div></li></ul></div></div></div><div id='method-warning' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.ErrorListener'>javax.xml.transform.ErrorListener</span><br/><a href='source/ErrorListener.html#javax-xml-transform-ErrorListener-method-warning' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.ErrorListener-method-warning' class='name expandable'>warning</a>( <span class='pre'>exception</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Receive notification of a warning. ...</div><div class='long'><p>Receive notification of a warning.</p>\n\n<p> <p><a href=\"#!/api/javax.xml.transform.Transformer\" rel=\"javax.xml.transform.Transformer\" class=\"docClass\">javax.xml.transform.Transformer</a> can use this method to report\n conditions that are not errors or fatal errors.  The default behavior\n is to take no action.</p></p>\n\n<p> <p>After invoking this method, the Transformer must continue with\n the transformation. It should still be possible for the\n application to process the document through to the end.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>exception</span> : Object {TransformerException}<div class='sub-desc'><p>The warning information encapsulated in a\n                  transformer exception.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><a href=\"#!/api/javax.xml.transform.TransformerException\" rel=\"javax.xml.transform.TransformerException\" class=\"docClass\">javax.xml.transform.TransformerException</a> if the application\n chooses to discontinue the transformation.\n@see <a href=\"#!/api/javax.xml.transform.TransformerException\" rel=\"javax.xml.transform.TransformerException\" class=\"docClass\">javax.xml.transform.TransformerException</a></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});