Ext.data.JsonP.javax_xml_transform_Transformer({"tagname":"class","name":"javax.xml.transform.Transformer","autodetected":{},"files":[{"filename":"Transformer.js","href":"Transformer.html#javax-xml-transform-Transformer"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"","email":"a href=\"Jeff.Suttor@Sun.com\""}],"members":[{"name":"clearParameters","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-clearParameters","meta":{}},{"name":"getErrorListener","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-getErrorListener","meta":{}},{"name":"getOutputProperties","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-getOutputProperties","meta":{}},{"name":"getOutputProperty","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-getOutputProperty","meta":{}},{"name":"getParameter","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-getParameter","meta":{}},{"name":"getURIResolver","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-getURIResolver","meta":{}},{"name":"reset","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-reset","meta":{}},{"name":"setErrorListener","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-setErrorListener","meta":{}},{"name":"setOutputProperties","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-setOutputProperties","meta":{}},{"name":"setOutputProperty","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-setOutputProperty","meta":{}},{"name":"setParameter","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-setParameter","meta":{}},{"name":"setURIResolver","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-setURIResolver","meta":{}},{"name":"transform","tagname":"method","owner":"javax.xml.transform.Transformer","id":"method-transform","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.xml.transform.Transformer","short_doc":"An instance of this abstract class can transform a\n source tree into a result tree. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.xml.transform.Transformer</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Transformer.html#javax-xml-transform-Transformer' target='_blank'>Transformer.js</a></div></pre><div class='doc-contents'><p>An instance of this abstract class can transform a\n source tree into a result tree.</p>\n\n<p> <p>An instance of this class can be obtained with the\n <a href=\"#!/api/javax.xml.transform.TransformerFactory-method-newTransformer\" rel=\"javax.xml.transform.TransformerFactory-method-newTransformer\" class=\"docClass\">javax.xml.transform.TransformerFactory.newTransformer</a>\n method. This instance may then be used to process XML from a\n variety of sources and write the transformation output to a\n variety of sinks.</p></p>\n\n<p> <p>An object of this class may not be used in multiple threads\n running concurrently.  Different Transformers may be used\n concurrently by different threads.</p></p>\n\n<p> <p>A <code>Transformer</code> may be used multiple times.  Parameters and\n output properties are preserved across transformations.</p></p>\n\n<p> Jeff Suttor\n @version $Revision: 570103 $, $Date: 2007-08-27 06:24:55 -0700 (Mon, 27 Aug 2007) $</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clearParameters' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-clearParameters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-clearParameters' class='name expandable'>clearParameters</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clear all parameters set with setParameter. ...</div><div class='long'><p>Clear all parameters set with setParameter.</p>\n</div></div></div><div id='method-getErrorListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-getErrorListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-getErrorListener' class='name expandable'>getErrorListener</a>( <span class='pre'></span> ) : Object {javax.xml.transform.ErrorListener}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the error event handler in effect for the transformation. ...</div><div class='long'><p>Get the error event handler in effect for the transformation.\n Implementations must provide a default error listener.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.xml.transform.ErrorListener}</span><div class='sub-desc'><p>The current error handler, which should never be null.</p>\n</div></li></ul></div></div></div><div id='method-getOutputProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-getOutputProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-getOutputProperties' class='name expandable'>getOutputProperties</a>( <span class='pre'></span> ) : Object {java.util.Properties}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a copy of the output properties for the transformation. ...</div><div class='long'><p>Get a copy of the output properties for the transformation.</p>\n\n\n<p> <p>The properties returned should contain properties set by the user,\n and properties set by the stylesheet, and these properties\n are \"defaulted\" by default properties specified by\n <a href=\"http://www.w3.org/TR/xslt#output\">section 16 of the\n XSL Transformations (XSLT) W3C Recommendation</a>.  The properties that\n were specifically set by the user or the stylesheet should be in the base\n Properties list, while the XSLT default properties that were not\n specifically set should be the default Properties list.  Thus,\n getOutputProperties().getProperty(String key) will obtain any\n property in that was set by <a href=\"#!/api/javax.xml.transform.Transformer-method-setOutputProperty\" rel=\"javax.xml.transform.Transformer-method-setOutputProperty\" class=\"docClass\">setOutputProperty</a>,\n <a href=\"#!/api/javax.xml.transform.Transformer-method-setOutputProperties\" rel=\"javax.xml.transform.Transformer-method-setOutputProperties\" class=\"docClass\">setOutputProperties</a>, in the stylesheet, <em>or</em> the default\n properties, while\n getOutputProperties().get(String key) will only retrieve properties\n that were explicitly set by <a href=\"#!/api/javax.xml.transform.Transformer-method-setOutputProperty\" rel=\"javax.xml.transform.Transformer-method-setOutputProperty\" class=\"docClass\">setOutputProperty</a>,\n <a href=\"#!/api/javax.xml.transform.Transformer-method-setOutputProperties\" rel=\"javax.xml.transform.Transformer-method-setOutputProperties\" class=\"docClass\">setOutputProperties</a>, or in the stylesheet.</p></p>\n\n<p> <p>Note that mutation of the Properties object returned will not\n effect the properties that the transformer contains.</p></p>\n\n<p> <p>If any of the argument keys are not recognized and are not\n namespace qualified, the property will be ignored and not returned.\n In other words the behavior is not orthogonal with\n <a href=\"#!/api/javax.xml.transform.Transformer-method-setOutputProperties\" rel=\"javax.xml.transform.Transformer-method-setOutputProperties\" class=\"docClass\">setOutputProperties</a>.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Properties}</span><div class='sub-desc'><p>A copy of the set of output properties in effect for\n   the next transformation.\n@see <a href=\"#!/api/javax.xml.transform.OutputKeys\" rel=\"javax.xml.transform.OutputKeys\" class=\"docClass\">javax.xml.transform.OutputKeys</a>\n@see java.util.Properties\n@see <a href=\"http://www.w3.org/TR/xslt#output\">\n   XSL Transformations (XSLT) Version 1.0</a></p>\n</div></li></ul></div></div></div><div id='method-getOutputProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-getOutputProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-getOutputProperty' class='name expandable'>getOutputProperty</a>( <span class='pre'>name</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get an output property that is in effect for the\n transformer. ...</div><div class='long'><p>Get an output property that is in effect for the\n transformer.  The property specified may be a property\n that was set with setOutputProperty, or it may be a\n property specified in the stylesheet.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>A non-null String that specifies an output\n property name, which may be namespace qualified.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The string value of the output property, or null\n if no property was found.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the property is not supported.\n@see <a href=\"#!/api/javax.xml.transform.OutputKeys\" rel=\"javax.xml.transform.OutputKeys\" class=\"docClass\">javax.xml.transform.OutputKeys</a></p>\n</div></li></ul></div></div></div><div id='method-getParameter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-getParameter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-getParameter' class='name expandable'>getParameter</a>( <span class='pre'>name</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a parameter that was explicitly set with setParameter. ...</div><div class='long'><p>Get a parameter that was explicitly set with setParameter.</p>\n\n<p> <p>This method does not return a default parameter value, which\n cannot be determined until the node context is evaluated during\n the transformation process.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>of <code>Object</code> to get</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>A parameter that has been set with setParameter.</p>\n</div></li></ul></div></div></div><div id='method-getURIResolver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-getURIResolver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-getURIResolver' class='name expandable'>getURIResolver</a>( <span class='pre'></span> ) : Object {javax.xml.transform.URIResolver}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get an object that will be used to resolve URIs used in\n document(). ...</div><div class='long'><p>Get an object that will be used to resolve URIs used in\n document().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.xml.transform.URIResolver}</span><div class='sub-desc'><p>An object that implements the URIResolver interface,\n or null.</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reset this Transformer to its original configuration. ...</div><div class='long'><p>Reset this <code>Transformer</code> to its original configuration.</p>\n\n\n<p> <p><code>Transformer</code> is reset to the same state as when it was created with\n javax.xml.transform.TransformerFactory.newTransformer(),\n source) or\n javax.xml.transform.Templates.newTransformer().\n <code>reset()</code> is designed to allow the reuse of existing <code>Transformer</code>s\n thus saving resources associated with the creation of new <code>Transformer</code>s.</p></p>\n\n<p> <p>The reset <code>Transformer</code> is not guaranteed to have the same <a href=\"#!/api/javax.xml.transform.URIResolver\" rel=\"javax.xml.transform.URIResolver\" class=\"docClass\">javax.xml.transform.URIResolver</a>\n or <a href=\"#!/api/javax.xml.transform.ErrorListener\" rel=\"javax.xml.transform.ErrorListener\" class=\"docClass\">javax.xml.transform.ErrorListener</a> <code>Object</code>s, e.g. obj).\n It is guaranteed to have a functionally equal <code>URIResolver</code>\n and <code>ErrorListener</code>.</p></p>\n        <p>Available since: <b>1.5</b></p>\n</div></div></div><div id='method-setErrorListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-setErrorListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-setErrorListener' class='name expandable'>setErrorListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the error event listener in effect for the transformation. ...</div><div class='long'><p>Set the error event listener in effect for the transformation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {ErrorListener}<div class='sub-desc'><p>The new error listener.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if listener is null.</p>\n</div></li></ul></div></div></div><div id='method-setOutputProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-setOutputProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-setOutputProperties' class='name expandable'>setOutputProperties</a>( <span class='pre'>oformat</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the output properties for the transformation. ...</div><div class='long'><p>Set the output properties for the transformation.  These\n properties will override properties set in the Templates\n with xsl:output.</p>\n\n<p> <p>If argument to this function is null, any properties\n previously set are removed, and the value will revert to the value\n defined in the templates object.</p></p>\n\n<p> <p>Pass a qualified property key name as a two-part string, the namespace\n URI enclosed in curly braces ({}), followed by the local name. If the\n name has a null URL, the String only contain the local name. An\n application can safely check for a non-null URI by testing to see if the\n first character of the name is a '{' character.</p>\n <p>For example, if a URI and local name were obtained from an element\n defined with &lt;xyz:foo\n xmlns:xyz=\"http://xyz.foo.com/yada/baz.html\"/&gt;,\n then the qualified name would be \"{http://xyz.foo.com/yada/baz.html}foo\".\n Note that no prefix is used.</p>\n An <code>IllegalArgumentException</code> is thrown  if any of the\n argument keys are not recognized and are not namespace qualified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>oformat</span> : Object {Properties}<div class='sub-desc'><p>A set of output properties that will be\n used to override any of the same properties in affect\n for the transformation.\n@see <a href=\"#!/api/javax.xml.transform.OutputKeys\" rel=\"javax.xml.transform.OutputKeys\" class=\"docClass\">javax.xml.transform.OutputKeys</a>\n@see java.util.Properties</p>\n</div></li></ul></div></div></div><div id='method-setOutputProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-setOutputProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-setOutputProperty' class='name expandable'>setOutputProperty</a>( <span class='pre'>name, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set an output property that will be in effect for the\n transformation. ...</div><div class='long'><p>Set an output property that will be in effect for the\n transformation.</p>\n\n<p> <p>Pass a qualified property name as a two-part string, the namespace URI\n enclosed in curly braces ({}), followed by the local name. If the\n name has a null URL, the String only contain the local name. An\n application can safely check for a non-null URI by testing to see if the\n first character of the name is a '{' character.</p>\n <p>For example, if a URI and local name were obtained from an element\n defined with &lt;xyz:foo\n xmlns:xyz=\"http://xyz.foo.com/yada/baz.html\"/&gt;,\n then the qualified name would be \"{http://xyz.foo.com/yada/baz.html}foo\".\n Note that no prefix is used.</p></p>\n\n<p> <p>The Properties object that was passed to <a href=\"#!/api/javax.xml.transform.Transformer-method-setOutputProperties\" rel=\"javax.xml.transform.Transformer-method-setOutputProperties\" class=\"docClass\">setOutputProperties</a>\n won't be effected by calling this method.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>A non-null String that specifies an output\n property name, which may be namespace qualified.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>The non-null string value of the output property.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the property is not supported, and is\n not qualified with a namespace.\n@see <a href=\"#!/api/javax.xml.transform.OutputKeys\" rel=\"javax.xml.transform.OutputKeys\" class=\"docClass\">javax.xml.transform.OutputKeys</a></p>\n</div></li></ul></div></div></div><div id='method-setParameter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-setParameter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-setParameter' class='name expandable'>setParameter</a>( <span class='pre'>name, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a parameter for the transformation. ...</div><div class='long'><p>Add a parameter for the transformation.</p>\n\n<p> <p>Pass a qualified name as a two-part string, the namespace URI\n enclosed in curly braces ({}), followed by the local name. If the\n name has a null URL, the String only contain the local name. An\n application can safely check for a non-null URI by testing to see if the\n first character of the name is a '{' character.</p>\n <p>For example, if a URI and local name were obtained from an element\n defined with &lt;xyz:foo\n xmlns:xyz=\"http://xyz.foo.com/yada/baz.html\"/&gt;,\n then the qualified name would be \"{http://xyz.foo.com/yada/baz.html}foo\".\n Note that no prefix is used.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the parameter, which may begin with a\n namespace URI in curly braces ({}).</p>\n</div></li><li><span class='pre'>value</span> : Object {Object}<div class='sub-desc'><p>The value object.  This can be any valid Java object. It is\n up to the processor to provide the proper object coercion or to simply\n pass the object on for use in an extension.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException If value is null.</p>\n</div></li></ul></div></div></div><div id='method-setURIResolver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-setURIResolver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-setURIResolver' class='name expandable'>setURIResolver</a>( <span class='pre'>resolver</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set an object that will be used to resolve URIs used in\n document(). ...</div><div class='long'><p>Set an object that will be used to resolve URIs used in\n document().</p>\n\n<p> <p>If the resolver argument is null, the URIResolver value will\n be cleared and the transformer will no longer have a resolver.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resolver</span> : Object {URIResolver}<div class='sub-desc'><p>An object that implements the URIResolver interface,\n or null.</p>\n</div></li></ul></div></div></div><div id='method-transform' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.xml.transform.Transformer'>javax.xml.transform.Transformer</span><br/><a href='source/Transformer.html#javax-xml-transform-Transformer-method-transform' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.xml.transform.Transformer-method-transform' class='name expandable'>transform</a>( <span class='pre'>xmlSource, outputTarget</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Transform the XML Source to a Result. ...</div><div class='long'><p>Transform the XML <code>Source</code> to a <code>Result</code>.\n Specific transformation behavior is determined by the settings of the\n <code>TransformerFactory</code> in effect when the\n <code>Transformer</code> was instantiated and any modifications made to\n the <code>Transformer</code> instance.</p>\n\n\n<p> <p>An empty <code>Source</code> is represented as an empty document\n as constructed by javax.xml.parsers.DocumentBuilder.newDocument().\n The result of transforming an empty <code>Source</code> depends on\n the transformation behavior; it is not always an empty\n <code>Result</code>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xmlSource</span> : Object {Source}<div class='sub-desc'><p>The XML input to transform.</p>\n</div></li><li><span class='pre'>outputTarget</span> : Object {Result}<div class='sub-desc'><p>The <code>Result</code> of transforming the\n   <code>xmlSource</code>.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>TransformerException If an unrecoverable error occurs\n   during the course of the transformation.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});