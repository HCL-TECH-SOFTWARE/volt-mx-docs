Ext.data.JsonP.java_util_concurrent_locks_AbstractQueuedLongSynchronizer_ConditionObject({"tagname":"class","name":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","autodetected":{},"files":[{"filename":"ConditionObject.js","href":"ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject"}],"extends":"java.lang.Object","since":"1.6","members":[{"name":"await","tagname":"method","owner":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","id":"method-await","meta":{}},{"name":"awaitNanos","tagname":"method","owner":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","id":"method-awaitNanos","meta":{}},{"name":"awaitUninterruptibly","tagname":"method","owner":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","id":"method-awaitUninterruptibly","meta":{}},{"name":"awaitUntil","tagname":"method","owner":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","id":"method-awaitUntil","meta":{}},{"name":"signal","tagname":"method","owner":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","id":"method-signal","meta":{}},{"name":"signalAll","tagname":"method","owner":"java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","id":"method-signalAll","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject","short_doc":"implements java.util.concurrent.locks.Condition\n\n implements java.io.Serializable\n\nCondition implementation for a jav...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject' target='_blank'>ConditionObject.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.util.concurrent.locks.Condition\" rel=\"java.util.concurrent.locks.Condition\" class=\"docClass\">java.util.concurrent.locks.Condition</a></p>\n\n<p> implements java.io.Serializable</p>\n\n<p>Condition implementation for a <a href=\"#!/api/java.util.concurrent.locks.AbstractQueuedLongSynchronizer\" rel=\"java.util.concurrent.locks.AbstractQueuedLongSynchronizer\" class=\"docClass\">java.util.concurrent.locks.AbstractQueuedLongSynchronizer</a> serving as the basis of a <a href=\"#!/api/java.util.concurrent.locks.Lock\" rel=\"java.util.concurrent.locks.Lock\" class=\"docClass\">java.util.concurrent.locks.Lock</a> implementation.</p>\n\n<p> <p>Method documentation for this class describes mechanics,\n not behavioral specifications from the point of view of Lock\n and Condition users. Exported versions of this class will in\n general need to be accompanied by documentation describing\n condition semantics that rely on those of the associated\n {@code AbstractQueuedLongSynchronizer}.</p>\n\n<p> <p>This class is Serializable, but all fields are transient,\n so deserialized conditions have no waiters.</p>\n        <p>Available since: <b>1.6</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-await' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject'>java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject</span><br/><a href='source/ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject-method-await' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject-method-await' class='name expandable'>await</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements timed condition wait. ...</div><div class='long'><p>Implements timed condition wait.\n <ol>\n <li>If current thread is interrupted, throw InterruptedException.\n <li>Save lock state returned by getState.\n <li>Invoke release with saved state as argument,\n     throwing IllegalMonitorStateException if it fails.\n <li>Block until signalled, interrupted, or timed out.\n <li>Reacquire by invoking specialized version of\n     acquire with saved state as argument.\n <li>If interrupted while blocked in step 4, throw InterruptedException.\n <li>If timed out while blocked in step 4, return false, else true.\n </li></li></li></li></li></li></li></ol></p>\n</div></div></div><div id='method-awaitNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject'>java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject</span><br/><a href='source/ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject-method-awaitNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject-method-awaitNanos' class='name expandable'>awaitNanos</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements timed condition wait. ...</div><div class='long'><p>Implements timed condition wait.\n <ol>\n <li>If current thread is interrupted, throw InterruptedException.\n <li>Save lock state returned by getState.\n <li>Invoke release with saved state as argument,\n     throwing IllegalMonitorStateException if it fails.\n <li>Block until signalled, interrupted, or timed out.\n <li>Reacquire by invoking specialized version of\n     acquire with saved state as argument.\n <li>If interrupted while blocked in step 4, throw InterruptedException.\n </li></li></li></li></li></li></ol></p>\n</div></div></div><div id='method-awaitUninterruptibly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject'>java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject</span><br/><a href='source/ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject-method-awaitUninterruptibly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject-method-awaitUninterruptibly' class='name expandable'>awaitUninterruptibly</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements uninterruptible condition wait. ...</div><div class='long'><p>Implements uninterruptible condition wait.\n <ol>\n <li>Save lock state returned by getState.\n <li>Invoke release with saved state as argument,\n     throwing IllegalMonitorStateException if it fails.\n <li>Block until signalled.\n <li>Reacquire by invoking specialized version of\n     acquire with saved state as argument.\n </li></li></li></li></ol></p>\n</div></div></div><div id='method-awaitUntil' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject'>java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject</span><br/><a href='source/ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject-method-awaitUntil' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject-method-awaitUntil' class='name expandable'>awaitUntil</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements absolute timed condition wait. ...</div><div class='long'><p>Implements absolute timed condition wait.\n <ol>\n <li>If current thread is interrupted, throw InterruptedException.\n <li>Save lock state returned by getState.\n <li>Invoke release with saved state as argument,\n     throwing IllegalMonitorStateException if it fails.\n <li>Block until signalled, interrupted, or timed out.\n <li>Reacquire by invoking specialized version of\n     acquire with saved state as argument.\n <li>If interrupted while blocked in step 4, throw InterruptedException.\n <li>If timed out while blocked in step 4, return false, else true.\n </li></li></li></li></li></li></li></ol></p>\n</div></div></div><div id='method-signal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject'>java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject</span><br/><a href='source/ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject-method-signal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject-method-signal' class='name expandable'>signal</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves the longest-waiting thread, if one exists, from the\n wait queue for this condition to the wait queue for the\n o...</div><div class='long'><p>Moves the longest-waiting thread, if one exists, from the\n wait queue for this condition to the wait queue for the\n owning lock.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalMonitorStateException if isHeldExclusively\n         returns {@code false}</p>\n</div></li></ul></div></div></div><div id='method-signalAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject'>java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject</span><br/><a href='source/ConditionObject.html#java-util-concurrent-locks-AbstractQueuedLongSynchronizer-ConditionObject-method-signalAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject-method-signalAll' class='name expandable'>signalAll</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all threads from the wait queue for this condition to\n the wait queue for the owning lock. ...</div><div class='long'><p>Moves all threads from the wait queue for this condition to\n the wait queue for the owning lock.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalMonitorStateException if isHeldExclusively\n         returns {@code false}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});