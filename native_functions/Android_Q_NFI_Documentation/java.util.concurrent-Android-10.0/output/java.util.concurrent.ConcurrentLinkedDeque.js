Ext.data.JsonP.java_util_concurrent_ConcurrentLinkedDeque({"tagname":"class","name":"java.util.concurrent.ConcurrentLinkedDeque","autodetected":{},"files":[{"filename":"ConcurrentLinkedDeque.js","href":"ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque"}],"extends":"java.util.AbstractCollection","since":"1.7","author":[{"tagname":"author","name":"Doug Lea","email":null},{"tagname":"author","name":"Martin Buchholz","email":null}],"params":[{"tagname":"params","doc":"<p><E> the type of elements held in this deque</E></p>\n"}],"members":[{"name":"add","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-add","meta":{}},{"name":"addAll","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-addAll","meta":{}},{"name":"addFirst","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-addFirst","meta":{}},{"name":"addLast","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-addLast","meta":{}},{"name":"clear","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-clear","meta":{}},{"name":"contains","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-contains","meta":{}},{"name":"descendingIterator","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-descendingIterator","meta":{}},{"name":"element","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-element","meta":{}},{"name":"getFirst","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-getFirst","meta":{}},{"name":"getLast","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-getLast","meta":{}},{"name":"isEmpty","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-isEmpty","meta":{}},{"name":"iterator","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-iterator","meta":{}},{"name":"offer","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-offer","meta":{}},{"name":"offerFirst","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-offerFirst","meta":{}},{"name":"offerLast","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-offerLast","meta":{}},{"name":"peek","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-peek","meta":{}},{"name":"peekFirst","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-peekFirst","meta":{}},{"name":"peekLast","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-peekLast","meta":{}},{"name":"poll","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-poll","meta":{}},{"name":"pollFirst","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-pollFirst","meta":{}},{"name":"pollLast","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-pollLast","meta":{}},{"name":"pop","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-pop","meta":{}},{"name":"push","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-push","meta":{}},{"name":"remove","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-remove","meta":{}},{"name":"removeFirst","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-removeFirst","meta":{}},{"name":"removeFirstOccurrence","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-removeFirstOccurrence","meta":{}},{"name":"removeLast","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-removeLast","meta":{}},{"name":"removeLastOccurrence","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-removeLastOccurrence","meta":{}},{"name":"size","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-size","meta":{}},{"name":"spliterator","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-spliterator","meta":{}},{"name":"toArray","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-toArray","meta":{}},{"name":"toString","tagname":"method","owner":"java.util.concurrent.ConcurrentLinkedDeque","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.ConcurrentLinkedDeque","short_doc":"implements java.util.Deque\n\n implements java.io.Serializable\n\nAn unbounded concurrent {@linkplain Deque deque} based ...","classIcon":"icon-class","superclasses":["java.util.AbstractCollection"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.util.AbstractCollection<div class='subclass '><strong>java.util.concurrent.ConcurrentLinkedDeque</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque' target='_blank'>ConcurrentLinkedDeque.js</a></div></pre><div class='doc-contents'><p>implements java.util.Deque</p>\n\n<p> implements java.io.Serializable</p>\n\n<p>An unbounded concurrent {@linkplain Deque deque} based on linked nodes.\n Concurrent insertion, removal, and access operations execute safely\n across multiple threads.\n A {@code ConcurrentLinkedDeque} is an appropriate choice when\n many threads will share access to a common collection.\n Like most other concurrent collection implementations, this class\n does not permit the use of {@code null} elements.</p>\n\n<p> <p>Iterators and spliterators are\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n\n<p> <p>Beware that, unlike in most collections, the {@code size} method\n is <em>NOT</em> a constant-time operation. Because of the\n asynchronous nature of these deques, determining the current number\n of elements requires a traversal of the elements, and so may report\n inaccurate results if this collection is modified during traversal.\n Additionally, the bulk operations {@code addAll},\n {@code removeAll}, {@code retainAll}, {@code containsAll},\n {@code equals}, and {@code toArray} are <em>not</em> guaranteed\n to be performed atomically. For example, an iterator operating\n concurrently with an {@code addAll} operation might view only some\n of the added elements.</p>\n\n<p> <p>This class and its iterator implement all of the <em>optional</em>\n methods of the Deque and Iterator interfaces.</p>\n\n<p> <p>Memory consistency effects: As with other concurrent collections,\n actions in a thread prior to placing an object into a\n {@code ConcurrentLinkedDeque}\n <a href=\"package-summary.html#MemoryVisibility\"><i>happen-before</i></a>\n actions subsequent to the access or removal of that element from\n the {@code ConcurrentLinkedDeque} in another thread.</p>\n        <p>Available since: <b>1.7</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><E> the type of elements held in this deque</E></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-add' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-add' class='name expandable'>add</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element at the tail of this deque. ...</div><div class='long'><p>Inserts the specified element at the tail of this deque.\n As the deque is unbounded, this method will never throw\n IllegalStateException or return {@code false}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} (as specified by Collection.add)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-addAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-addAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-addAll' class='name expandable'>addAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends all of the elements in the specified collection to the end of\n this deque, in the order that they are returne...</div><div class='long'><p>Appends all of the elements in the specified collection to the end of\n this deque, in the order that they are returned by the specified\n collection's iterator.  Attempts to {@code addAll} of a deque to\n itself result in {@code IllegalArgumentException}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>the elements to be inserted into this deque</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this deque changed as a result of the call</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified collection or any\n         of its elements are null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the collection is this deque</p>\n</div></li></ul></div></div></div><div id='method-addFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-addFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-addFirst' class='name expandable'>addFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element at the front of this deque. ...</div><div class='long'><p>Inserts the specified element at the front of this deque.\n As the deque is unbounded, this method will never throw\n IllegalStateException.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-addLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-addLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-addLast' class='name expandable'>addLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element at the end of this deque. ...</div><div class='long'><p>Inserts the specified element at the end of this deque.\n As the deque is unbounded, this method will never throw\n IllegalStateException.</p>\n\n<p> <p>This method is equivalent to <a href=\"#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-add\" rel=\"java.util.concurrent.ConcurrentLinkedDeque-method-add\" class=\"docClass\">add</a>.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all of the elements from this deque. ...</div><div class='long'><p>Removes all of the elements from this deque.</p>\n</div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-contains' class='name expandable'>contains</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this deque contains the specified element. ...</div><div class='long'><p>Returns {@code true} if this deque contains the specified element.\n More formally, returns {@code true} if and only if this deque contains\n at least one element {@code e} such that {@code o.equals(e)}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>element whose presence in this deque is to be tested</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this deque contains the specified element</p>\n</div></li></ul></div></div></div><div id='method-descendingIterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-descendingIterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-descendingIterator' class='name expandable'>descendingIterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator over the elements in this deque in reverse\n sequential order. ...</div><div class='long'><p>Returns an iterator over the elements in this deque in reverse\n sequential order.  The elements will be returned in order from\n last (tail) to first (head).</p>\n\n<p> <p>The returned iterator is\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an iterator over the elements in this deque in reverse order</p>\n</div></li></ul></div></div></div><div id='method-element' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-element' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-element' class='name expandable'>element</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-getFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-getFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-getFirst' class='name expandable'>getFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-getLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-getLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-getLast' class='name expandable'>getLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this collection contains no elements. ...</div><div class='long'><p>Returns {@code true} if this collection contains no elements.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this collection contains no elements</p>\n</div></li></ul></div></div></div><div id='method-iterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-iterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-iterator' class='name expandable'>iterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator over the elements in this deque in proper sequence. ...</div><div class='long'><p>Returns an iterator over the elements in this deque in proper sequence.\n The elements will be returned in order from first (head) to last (tail).</p>\n\n<p> <p>The returned iterator is\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an iterator over the elements in this deque in proper sequence</p>\n</div></li></ul></div></div></div><div id='method-offer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-offer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-offer' class='name expandable'>offer</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element at the tail of this deque. ...</div><div class='long'><p>Inserts the specified element at the tail of this deque.\n As the deque is unbounded, this method will never return {@code false}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} (as specified by Queue.offer)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-offerFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-offerFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-offerFirst' class='name expandable'>offerFirst</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element at the front of this deque. ...</div><div class='long'><p>Inserts the specified element at the front of this deque.\n As the deque is unbounded, this method will never return {@code false}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} (as specified by Deque.offerFirst)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-offerLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-offerLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-offerLast' class='name expandable'>offerLast</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element at the end of this deque. ...</div><div class='long'><p>Inserts the specified element at the end of this deque.\n As the deque is unbounded, this method will never return {@code false}.</p>\n\n<p> <p>This method is equivalent to <a href=\"#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-add\" rel=\"java.util.concurrent.ConcurrentLinkedDeque-method-add\" class=\"docClass\">add</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} (as specified by Deque.offerLast)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-peek' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-peek' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-peek' class='name expandable'>peek</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-peekFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-peekFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-peekFirst' class='name expandable'>peekFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-peekLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-peekLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-peekLast' class='name expandable'>peekLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-poll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-poll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-poll' class='name expandable'>poll</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pollFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-pollFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-pollFirst' class='name expandable'>pollFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pollLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-pollLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-pollLast' class='name expandable'>pollLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-pop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-pop' class='name expandable'>pop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-push' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-push' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-push' class='name expandable'>push</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-remove' class='name expandable'>remove</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the first occurrence of the specified element from this deque. ...</div><div class='long'><p>Removes the first occurrence of the specified element from this deque.\n If the deque does not contain the element, it is unchanged.\n More formally, removes the first element {@code e} such that\n {@code o.equals(e)} (if such an element exists).\n Returns {@code true} if this deque contained the specified element\n (or equivalently, if this deque changed as a result of the call).</p>\n\n<p> <p>This method is equivalent to <a href=\"#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-removeFirstOccurrence\" rel=\"java.util.concurrent.ConcurrentLinkedDeque-method-removeFirstOccurrence\" class=\"docClass\">removeFirstOccurrence</a>(Object).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>element to be removed from this deque, if present</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the deque contained the specified element</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-removeFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-removeFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-removeFirst' class='name expandable'>removeFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-removeFirstOccurrence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-removeFirstOccurrence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-removeFirstOccurrence' class='name expandable'>removeFirstOccurrence</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the first occurrence of the specified element from this deque. ...</div><div class='long'><p>Removes the first occurrence of the specified element from this deque.\n If the deque does not contain the element, it is unchanged.\n More formally, removes the first element {@code e} such that\n {@code o.equals(e)} (if such an element exists).\n Returns {@code true} if this deque contained the specified element\n (or equivalently, if this deque changed as a result of the call).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>element to be removed from this deque, if present</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the deque contained the specified element</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-removeLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-removeLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-removeLast' class='name expandable'>removeLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-removeLastOccurrence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-removeLastOccurrence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-removeLastOccurrence' class='name expandable'>removeLastOccurrence</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the last occurrence of the specified element from this deque. ...</div><div class='long'><p>Removes the last occurrence of the specified element from this deque.\n If the deque does not contain the element, it is unchanged.\n More formally, removes the last element {@code e} such that\n {@code o.equals(e)} (if such an element exists).\n Returns {@code true} if this deque contained the specified element\n (or equivalently, if this deque changed as a result of the call).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>element to be removed from this deque, if present</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the deque contained the specified element</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of elements in this deque. ...</div><div class='long'><p>Returns the number of elements in this deque.  If this deque\n contains more than {@code Integer.MAX_VALUE} elements, it\n returns {@code Integer.MAX_VALUE}.</p>\n\n<p> <p>Beware that, unlike in most collections, this method is\n <em>NOT</em> a constant-time operation. Because of the\n asynchronous nature of these deques, determining the current\n number of elements requires traversing them all to count them.\n Additionally, it is possible for the size to change during\n execution of this method, in which case the returned result\n will be inaccurate. Thus, this method is typically not very\n useful in concurrent applications.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of elements in this deque</p>\n</div></li></ul></div></div></div><div id='method-spliterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-spliterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-spliterator' class='name expandable'>spliterator</a>( <span class='pre'></span> ) : Object {java.util.Spliterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Spliterator over the elements in this deque. ...</div><div class='long'><p>Returns a Spliterator over the elements in this deque.</p>\n\n<p> <p>The returned spliterator is\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n\n<p> <p>The {@code Spliterator} reports Spliterator.CONCURRENT,\n Spliterator.ORDERED, and Spliterator.NONNULL.\n@implNote The {@code Spliterator} implements {@code trySplit} to permit limited\n parallelism.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Spliterator}</span><div class='sub-desc'><p>a {@code Spliterator} over the elements in this deque</p>\n</div></li></ul></div></div></div><div id='method-toArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-toArray' class='name expandable'>toArray</a>( <span class='pre'>a</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array containing all of the elements in this deque,\n in proper sequence (from first to last element); the ...</div><div class='long'><p>Returns an array containing all of the elements in this deque,\n in proper sequence (from first to last element); the runtime\n type of the returned array is that of the specified array.  If\n the deque fits in the specified array, it is returned therein.\n Otherwise, a new array is allocated with the runtime type of\n the specified array and the size of this deque.</p>\n\n<p> <p>If this deque fits in the specified array with room to spare\n (i.e., the array has more elements than this deque), the element in\n the array immediately following the end of the deque is set to\n {@code null}.</p>\n\n<p> <p>Like the <a href=\"#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-toArray\" rel=\"java.util.concurrent.ConcurrentLinkedDeque-method-toArray\" class=\"docClass\">toArray</a>() method, this method acts as\n bridge between array-based and collection-based APIs.  Further,\n this method allows precise control over the runtime type of the\n output array, and may, under certain circumstances, be used to\n save allocation costs.</p>\n\n<p> <p>Suppose {@code x} is a deque known to contain only strings.\n The following code can be used to dump the deque into a newly\n allocated array of {@code String}:</p>\n\n<p> <pre> {@code String[] y = x.toArray(new String[0]);}</pre></p>\n\n<p> Note that {@code toArray(new Object[0])} is identical in function to\n {@code toArray()}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>the array into which the elements of the deque are to\n          be stored, if it is big enough; otherwise, a new array of the\n          same runtime type is allocated for this purpose</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>an array containing all of the elements in this deque</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArrayStoreException if the runtime type of the specified array\n         is not a supertype of the runtime type of every element in\n         this deque</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified array is null</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentLinkedDeque'>java.util.concurrent.ConcurrentLinkedDeque</span><br/><a href='source/ConcurrentLinkedDeque.html#java-util-concurrent-ConcurrentLinkedDeque-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentLinkedDeque-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});