Ext.data.JsonP.java_util_concurrent_CopyOnWriteArraySet({"tagname":"class","name":"java.util.concurrent.CopyOnWriteArraySet","autodetected":{},"files":[{"filename":"CopyOnWriteArraySet.js","href":"CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet"}],"extends":"java.util.AbstractSet","since":"1.5","author":[{"tagname":"author","name":"Doug Lea","email":null}],"params":[{"tagname":"params","doc":"<p><E> the type of elements held in this set</E></p>\n"}],"members":[{"name":"add","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-add","meta":{}},{"name":"addAll","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-addAll","meta":{}},{"name":"clear","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-clear","meta":{}},{"name":"contains","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-contains","meta":{}},{"name":"containsAll","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-containsAll","meta":{}},{"name":"equals","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-equals","meta":{}},{"name":"forEach","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-forEach","meta":{}},{"name":"isEmpty","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-isEmpty","meta":{}},{"name":"iterator","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-iterator","meta":{}},{"name":"remove","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-remove","meta":{}},{"name":"removeAll","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-removeAll","meta":{}},{"name":"removeIf","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-removeIf","meta":{}},{"name":"retainAll","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-retainAll","meta":{}},{"name":"size","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-size","meta":{}},{"name":"spliterator","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-spliterator","meta":{}},{"name":"toArray","tagname":"method","owner":"java.util.concurrent.CopyOnWriteArraySet","id":"method-toArray","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.CopyOnWriteArraySet","short_doc":"implements java.io.Serializable\n\nA java.util.Set that uses an internal java.util.concurrent.CopyOnWriteArrayList\n for...","classIcon":"icon-class","superclasses":["java.util.AbstractSet"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.util.AbstractSet<div class='subclass '><strong>java.util.concurrent.CopyOnWriteArraySet</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet' target='_blank'>CopyOnWriteArraySet.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p>A java.util.Set that uses an internal <a href=\"#!/api/java.util.concurrent.CopyOnWriteArrayList\" rel=\"java.util.concurrent.CopyOnWriteArrayList\" class=\"docClass\">java.util.concurrent.CopyOnWriteArrayList</a>\n for all of its operations.  Thus, it shares the same basic properties:\n <ul>\n  <li>It is best suited for applications in which set sizes generally\n       stay small, read-only operations\n       vastly outnumber mutative operations, and you need\n       to prevent interference among threads during traversal.\n  <li>It is thread-safe.\n  <li>Mutative operations ({@code add}, {@code set}, {@code remove}, etc.)\n      are expensive since they usually entail copying the entire underlying\n      array.\n  <li>Iterators do not support the mutative {@code remove} operation.\n  <li>Traversal via iterators is fast and cannot encounter\n      interference from other threads. Iterators rely on\n      unchanging snapshots of the array at the time the iterators were\n      constructed.\n </li></li></li></li></li></ul></p>\n\n<p> <p><b>Sample Usage.</b> The following code sketch uses a\n copy-on-write set to maintain a set of Handler objects that\n perform some action upon state updates.</p>\n\n<p> <pre> {@code\n class Handler { void handle(); ... }</pre></p>\n\n<p> class X {\n   private final CopyOnWriteArraySet<Handler> handlers\n     = new CopyOnWriteArraySet&lt;>();\n   public void addHandler(Handler h) { handlers.add(h); }</Handler></p>\n\n<p>   private long internalState;\n   private synchronized void changeState() { internalState = ...; }</p>\n\n<p>   public void update() {\n     changeState();\n     for (Handler handler : handlers)\n       handler.handle();\n   }\n }}</p>\n\n<p> @see CopyOnWriteArrayList</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><E> the type of elements held in this set</E></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-add' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-add' class='name expandable'>add</a>( <span class='pre'>e</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds the specified element to this set if it is not already present. ...</div><div class='long'><p>Adds the specified element to this set if it is not already present.\n More formally, adds the specified element {@code e} to this set if\n the set contains no element {@code e2} such that\n {@code Objects.equals(e, e2)}.\n If this set already contains the element, the call leaves the set\n unchanged and returns {@code false}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>e</span> : Object {Object}<div class='sub-desc'><p>element to be added to this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set did not already contain the specified\n         element</p>\n</div></li></ul></div></div></div><div id='method-addAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-addAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-addAll' class='name expandable'>addAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds all of the elements in the specified collection to this set if\n they're not already present. ...</div><div class='long'><p>Adds all of the elements in the specified collection to this set if\n they're not already present.  If the specified collection is also a\n set, the {@code addAll} operation effectively modifies this set so\n that its value is the <i>union</i> of the two sets.  The behavior of\n this operation is undefined if the specified collection is modified\n while the operation is in progress.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>collection containing elements to be added to this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set changed as a result of the call</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified collection is null\n@see <a href=\"#!/api/java.util.concurrent.CopyOnWriteArraySet-method-add\" rel=\"java.util.concurrent.CopyOnWriteArraySet-method-add\" class=\"docClass\">add</a>(Object)</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all of the elements from this set. ...</div><div class='long'><p>Removes all of the elements from this set.\n The set will be empty after this call returns.</p>\n</div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-contains' class='name expandable'>contains</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this set contains the specified element. ...</div><div class='long'><p>Returns {@code true} if this set contains the specified element.\n More formally, returns {@code true} if and only if this set\n contains an element {@code e} such that {@code Objects.equals(o, e)}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>element whose presence in this set is to be tested</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set contains the specified element</p>\n</div></li></ul></div></div></div><div id='method-containsAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-containsAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-containsAll' class='name expandable'>containsAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this set contains all of the elements of the\n specified collection. ...</div><div class='long'><p>Returns {@code true} if this set contains all of the elements of the\n specified collection.  If the specified collection is also a set, this\n method returns {@code true} if it is a <i>subset</i> of this set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>collection to be checked for containment in this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set contains all of the elements of the\n         specified collection</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified collection is null\n@see <a href=\"#!/api/java.util.concurrent.CopyOnWriteArraySet-method-contains\" rel=\"java.util.concurrent.CopyOnWriteArraySet-method-contains\" class=\"docClass\">contains</a>(Object)</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-equals' class='name expandable'>equals</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares the specified object with this set for equality. ...</div><div class='long'><p>Compares the specified object with this set for equality.\n Returns {@code true} if the specified object is the same object\n as this object, or if it is also a Set and the elements\n returned by an {@linkplain Set#iterator() iterator} over the\n specified set are the same as the elements returned by an\n iterator over this set.  More formally, the two iterators are\n considered to return the same elements if they return the same\n number of elements and for every element {@code e1} returned by\n the iterator over the specified set, there is an element\n {@code e2} returned by the iterator over this set such that\n {@code Objects.equals(e1, e2)}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>object to be compared for equality with this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the specified object is equal to this set</p>\n</div></li></ul></div></div></div><div id='method-forEach' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-forEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-forEach' class='name expandable'>forEach</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this set contains no elements. ...</div><div class='long'><p>Returns {@code true} if this set contains no elements.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set contains no elements</p>\n</div></li></ul></div></div></div><div id='method-iterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-iterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-iterator' class='name expandable'>iterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator over the elements contained in this set\n in the order in which these elements were added. ...</div><div class='long'><p>Returns an iterator over the elements contained in this set\n in the order in which these elements were added.</p>\n\n<p> <p>The returned iterator provides a snapshot of the state of the set\n when the iterator was constructed. No synchronization is needed while\n traversing the iterator. The iterator does <em>NOT</em> support the\n {@code remove} method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an iterator over the elements in this set</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-remove' class='name expandable'>remove</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the specified element from this set if it is present. ...</div><div class='long'><p>Removes the specified element from this set if it is present.\n More formally, removes an element {@code e} such that\n {@code Objects.equals(o, e)}, if this set contains such an element.\n Returns {@code true} if this set contained the element (or\n equivalently, if this set changed as a result of the call).\n (This set will not contain the element once the call returns.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>object to be removed from this set, if present</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set contained the specified element</p>\n</div></li></ul></div></div></div><div id='method-removeAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-removeAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-removeAll' class='name expandable'>removeAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes from this set all of its elements that are contained in the\n specified collection. ...</div><div class='long'><p>Removes from this set all of its elements that are contained in the\n specified collection.  If the specified collection is also a set,\n this operation effectively modifies this set so that its value is the\n <i>asymmetric set difference</i> of the two sets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>collection containing elements to be removed from this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set changed as a result of the call</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the class of an element of this set\n         is incompatible with the specified collection\n (<a href=\"../Collection.html#optional-restrictions\">optional</a>)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if this set contains a null element and the\n         specified collection does not permit null elements\n (<a href=\"../Collection.html#optional-restrictions\">optional</a>),\n         or if the specified collection is null\n@see <a href=\"#!/api/java.util.concurrent.CopyOnWriteArraySet-method-remove\" rel=\"java.util.concurrent.CopyOnWriteArraySet-method-remove\" class=\"docClass\">remove</a>(Object)</p>\n</div></li></ul></div></div></div><div id='method-removeIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-removeIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-removeIf' class='name expandable'>removeIf</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-retainAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-retainAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-retainAll' class='name expandable'>retainAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Retains only the elements in this set that are contained in the\n specified collection. ...</div><div class='long'><p>Retains only the elements in this set that are contained in the\n specified collection.  In other words, removes from this set all of\n its elements that are not contained in the specified collection.  If\n the specified collection is also a set, this operation effectively\n modifies this set so that its value is the <i>intersection</i> of the\n two sets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>collection containing elements to be retained in this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set changed as a result of the call</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the class of an element of this set\n         is incompatible with the specified collection\n (<a href=\"../Collection.html#optional-restrictions\">optional</a>)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if this set contains a null element and the\n         specified collection does not permit null elements\n (<a href=\"../Collection.html#optional-restrictions\">optional</a>),\n         or if the specified collection is null\n@see <a href=\"#!/api/java.util.concurrent.CopyOnWriteArraySet-method-remove\" rel=\"java.util.concurrent.CopyOnWriteArraySet-method-remove\" class=\"docClass\">remove</a>(Object)</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of elements in this set. ...</div><div class='long'><p>Returns the number of elements in this set.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of elements in this set</p>\n</div></li></ul></div></div></div><div id='method-spliterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-spliterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-spliterator' class='name expandable'>spliterator</a>( <span class='pre'></span> ) : Object {java.util.Spliterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Spliterator over the elements in this set in the order\n in which these elements were added. ...</div><div class='long'><p>Returns a Spliterator over the elements in this set in the order\n in which these elements were added.</p>\n\n<p> <p>The {@code Spliterator} reports Spliterator.IMMUTABLE,\n Spliterator.DISTINCT, Spliterator.SIZED, and\n Spliterator.SUBSIZED.</p>\n\n<p> <p>The spliterator provides a snapshot of the state of the set\n when the spliterator was constructed. No synchronization is needed while\n operating on the spliterator.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Spliterator}</span><div class='sub-desc'><p>a {@code Spliterator} over the elements in this set</p>\n</div></li></ul></div></div></div><div id='method-toArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.CopyOnWriteArraySet'>java.util.concurrent.CopyOnWriteArraySet</span><br/><a href='source/CopyOnWriteArraySet.html#java-util-concurrent-CopyOnWriteArraySet-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.CopyOnWriteArraySet-method-toArray' class='name expandable'>toArray</a>( <span class='pre'>a</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array containing all of the elements in this set; the\n runtime type of the returned array is that of the s...</div><div class='long'><p>Returns an array containing all of the elements in this set; the\n runtime type of the returned array is that of the specified array.\n If the set fits in the specified array, it is returned therein.\n Otherwise, a new array is allocated with the runtime type of the\n specified array and the size of this set.</p>\n\n<p> <p>If this set fits in the specified array with room to spare\n (i.e., the array has more elements than this set), the element in\n the array immediately following the end of the set is set to\n {@code null}.  (This is useful in determining the length of this\n set <i>only</i> if the caller knows that this set does not contain\n any null elements.)</p>\n\n<p> <p>If this set makes any guarantees as to what order its elements\n are returned by its iterator, this method must return the elements\n in the same order.</p>\n\n<p> <p>Like the <a href=\"#!/api/java.util.concurrent.CopyOnWriteArraySet-method-toArray\" rel=\"java.util.concurrent.CopyOnWriteArraySet-method-toArray\" class=\"docClass\">toArray</a>() method, this method acts as bridge between\n array-based and collection-based APIs.  Further, this method allows\n precise control over the runtime type of the output array, and may,\n under certain circumstances, be used to save allocation costs.</p>\n\n<p> <p>Suppose {@code x} is a set known to contain only strings.\n The following code can be used to dump the set into a newly allocated\n array of {@code String}:</p>\n\n<p> <pre> {@code String[] y = x.toArray(new String[0]);}</pre></p>\n\n<p> Note that {@code toArray(new Object[0])} is identical in function to\n {@code toArray()}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>the array into which the elements of this set are to be\n        stored, if it is big enough; otherwise, a new array of the same\n        runtime type is allocated for this purpose.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>an array containing all the elements in this set</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArrayStoreException if the runtime type of the specified array\n         is not a supertype of the runtime type of every element in this\n         set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified array is null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});