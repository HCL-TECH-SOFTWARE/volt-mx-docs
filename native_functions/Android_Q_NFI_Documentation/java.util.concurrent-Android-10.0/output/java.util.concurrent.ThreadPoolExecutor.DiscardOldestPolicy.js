Ext.data.JsonP.java_util_concurrent_ThreadPoolExecutor_DiscardOldestPolicy({"tagname":"class","name":"java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy","autodetected":{},"files":[{"filename":"DiscardOldestPolicy.js","href":"DiscardOldestPolicy.html#java-util-concurrent-ThreadPoolExecutor-DiscardOldestPolicy"}],"extends":"java.lang.Object","members":[{"name":"rejectedExecution","tagname":"method","owner":"java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy","id":"method-rejectedExecution","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy","short_doc":"implements java.util.concurrent.RejectedExecutionHandler\n\nA handler for rejected tasks that discards the oldest unhan...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DiscardOldestPolicy.html#java-util-concurrent-ThreadPoolExecutor-DiscardOldestPolicy' target='_blank'>DiscardOldestPolicy.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.util.concurrent.RejectedExecutionHandler\" rel=\"java.util.concurrent.RejectedExecutionHandler\" class=\"docClass\">java.util.concurrent.RejectedExecutionHandler</a></p>\n\n<p>A handler for rejected tasks that discards the oldest unhandled\n request and then retries {@code execute}, unless the executor\n is shut down, in which case the task is discarded.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-rejectedExecution' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy'>java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy</span><br/><a href='source/DiscardOldestPolicy.html#java-util-concurrent-ThreadPoolExecutor-DiscardOldestPolicy-method-rejectedExecution' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy-method-rejectedExecution' class='name expandable'>rejectedExecution</a>( <span class='pre'>r, e</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains and ignores the next task that the executor\n would otherwise execute, if one is immediately available,\n and t...</div><div class='long'><p>Obtains and ignores the next task that the executor\n would otherwise execute, if one is immediately available,\n and then retries execution of task r, unless the executor\n is shut down, in which case task r is instead discarded.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>r</span> : Object {Runnable}<div class='sub-desc'><p>the runnable task requested to be executed</p>\n</div></li><li><span class='pre'>e</span> : Object {ThreadPoolExecutor}<div class='sub-desc'><p>the executor attempting to execute this task</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});