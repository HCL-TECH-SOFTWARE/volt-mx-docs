Ext.data.JsonP.java_util_concurrent_SynchronousQueue({"tagname":"class","name":"java.util.concurrent.SynchronousQueue","autodetected":{},"files":[{"filename":"SynchronousQueue.js","href":"SynchronousQueue.html#java-util-concurrent-SynchronousQueue"}],"extends":"java.util.AbstractQueue","since":"1.5","author":[{"tagname":"author","name":"Doug Lea and Bill Scherer and Michael Scott","email":null}],"params":[{"tagname":"params","doc":"<p><E> the type of elements held in this queue</E></p>\n"}],"members":[{"name":"clear","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-clear","meta":{}},{"name":"contains","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-contains","meta":{}},{"name":"containsAll","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-containsAll","meta":{}},{"name":"drainTo","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-drainTo","meta":{}},{"name":"isEmpty","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-isEmpty","meta":{}},{"name":"iterator","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-iterator","meta":{}},{"name":"offer","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-offer","meta":{}},{"name":"peek","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-peek","meta":{}},{"name":"poll","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-poll","meta":{}},{"name":"put","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-put","meta":{}},{"name":"remainingCapacity","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-remainingCapacity","meta":{}},{"name":"remove","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-remove","meta":{}},{"name":"removeAll","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-removeAll","meta":{}},{"name":"retainAll","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-retainAll","meta":{}},{"name":"size","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-size","meta":{}},{"name":"spliterator","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-spliterator","meta":{}},{"name":"take","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-take","meta":{}},{"name":"toArray","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-toArray","meta":{}},{"name":"toString","tagname":"method","owner":"java.util.concurrent.SynchronousQueue","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.SynchronousQueue","short_doc":"implements java.util.concurrent.BlockingQueue\n\n implements java.io.Serializable\n\nA {@linkplain java.util.concurrent.B...","classIcon":"icon-class","superclasses":["java.util.AbstractQueue"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.util.AbstractQueue<div class='subclass '><strong>java.util.concurrent.SynchronousQueue</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue' target='_blank'>SynchronousQueue.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.util.concurrent.BlockingQueue\" rel=\"java.util.concurrent.BlockingQueue\" class=\"docClass\">java.util.concurrent.BlockingQueue</a></p>\n\n<p> implements java.io.Serializable</p>\n\n<p>A {@linkplain <a href=\"#!/api/java.util.concurrent.BlockingQueue\" rel=\"java.util.concurrent.BlockingQueue\" class=\"docClass\">java.util.concurrent.BlockingQueue</a> blocking queue} in which each insert\n operation must wait for a corresponding remove operation by another\n thread, and vice versa.  A synchronous queue does not have any\n internal capacity, not even a capacity of one.  You cannot\n {@code peek} at a synchronous queue because an element is only\n present when you try to remove it; you cannot insert an element\n (using any method) unless another thread is trying to remove it;\n you cannot iterate as there is nothing to iterate.  The\n <em>head</em> of the queue is the element that the first queued\n inserting thread is trying to add to the queue; if there is no such\n queued thread then no element is available for removal and\n {@code poll()} will return {@code null}.  For purposes of other\n {@code Collection} methods (for example {@code contains}), a\n {@code SynchronousQueue} acts as an empty collection.  This queue\n does not permit {@code null} elements.</p>\n\n<p> <p>Synchronous queues are similar to rendezvous channels used in\n CSP and Ada. They are well suited for handoff designs, in which an\n object running in one thread must sync up with an object running\n in another thread in order to hand it some information, event, or\n task.</p>\n\n<p> <p>This class supports an optional fairness policy for ordering\n waiting producer and consumer threads.  By default, this ordering\n is not guaranteed. However, a queue constructed with fairness set\n to {@code true} grants threads access in FIFO order.</p>\n\n<p> <p>This class and its iterator implement all of the\n <em>optional</em> methods of the Collection and Iterator interfaces.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><E> the type of elements held in this queue</E></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clear' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Does nothing. ...</div><div class='long'><p>Does nothing.\n A {@code SynchronousQueue} has no internal capacity.</p>\n</div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-contains' class='name expandable'>contains</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns {@code false}. ...</div><div class='long'><p>Always returns {@code false}.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>the element</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false}</p>\n</div></li></ul></div></div></div><div id='method-containsAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-containsAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-containsAll' class='name expandable'>containsAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code false} unless the given collection is empty. ...</div><div class='long'><p>Returns {@code false} unless the given collection is empty.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>the collection</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false} unless given collection is empty</p>\n</div></li></ul></div></div></div><div id='method-drainTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-drainTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-drainTo' class='name expandable'>drainTo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException            {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException          {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException      {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns {@code true}. ...</div><div class='long'><p>Always returns {@code true}.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true}</p>\n</div></li></ul></div></div></div><div id='method-iterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-iterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-iterator' class='name expandable'>iterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an empty iterator in which {@code hasNext} always returns\n {@code false}. ...</div><div class='long'><p>Returns an empty iterator in which {@code hasNext} always returns\n {@code false}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an empty iterator</p>\n</div></li></ul></div></div></div><div id='method-offer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-offer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-offer' class='name expandable'>offer</a>( <span class='pre'>e</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element into this queue, if another thread is\n waiting to receive it. ...</div><div class='long'><p>Inserts the specified element into this queue, if another thread is\n waiting to receive it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>e</span> : Object {Object}<div class='sub-desc'><p>the element to add</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the element was added to this queue, else\n         {@code false}</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-peek' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-peek' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-peek' class='name expandable'>peek</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns {@code null}. ...</div><div class='long'><p>Always returns {@code null}.\n A {@code SynchronousQueue} does not return elements\n unless actively waited on.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>{@code null}</p>\n</div></li></ul></div></div></div><div id='method-poll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-poll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-poll' class='name expandable'>poll</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves and removes the head of this queue, if another thread\n is currently making an element available. ...</div><div class='long'><p>Retrieves and removes the head of this queue, if another thread\n is currently making an element available.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the head of this queue, or {@code null} if no\n         element is available</p>\n</div></li></ul></div></div></div><div id='method-put' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-put' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-put' class='name expandable'>put</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds the specified element to this queue, waiting if necessary for\n another thread to receive it. ...</div><div class='long'><p>Adds the specified element to this queue, waiting if necessary for\n another thread to receive it.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-remainingCapacity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-remainingCapacity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-remainingCapacity' class='name expandable'>remainingCapacity</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns zero. ...</div><div class='long'><p>Always returns zero.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>zero</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-remove' class='name expandable'>remove</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns {@code false}. ...</div><div class='long'><p>Always returns {@code false}.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>the element to remove</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false}</p>\n</div></li></ul></div></div></div><div id='method-removeAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-removeAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-removeAll' class='name expandable'>removeAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns {@code false}. ...</div><div class='long'><p>Always returns {@code false}.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>the collection</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false}</p>\n</div></li></ul></div></div></div><div id='method-retainAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-retainAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-retainAll' class='name expandable'>retainAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns {@code false}. ...</div><div class='long'><p>Always returns {@code false}.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>the collection</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false}</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns zero. ...</div><div class='long'><p>Always returns zero.\n A {@code SynchronousQueue} has no internal capacity.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>zero</p>\n</div></li></ul></div></div></div><div id='method-spliterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-spliterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-spliterator' class='name expandable'>spliterator</a>( <span class='pre'></span> ) : Object {java.util.Spliterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an empty spliterator in which calls to\n java.util.Spliterator.trySplit() always return {@code null}. ...</div><div class='long'><p>Returns an empty spliterator in which calls to\n java.util.Spliterator.trySplit() always return {@code null}.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Spliterator}</span><div class='sub-desc'><p>an empty spliterator</p>\n</div></li></ul></div></div></div><div id='method-take' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-take' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-take' class='name expandable'>take</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves and removes the head of this queue, waiting if necessary\n for another thread to insert it. ...</div><div class='long'><p>Retrieves and removes the head of this queue, waiting if necessary\n for another thread to insert it.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the head of this queue</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-toArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-toArray' class='name expandable'>toArray</a>( <span class='pre'>a</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the zeroth element of the specified array to {@code null}\n (if the array has non-zero length) and returns it. ...</div><div class='long'><p>Sets the zeroth element of the specified array to {@code null}\n (if the array has non-zero length) and returns it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>the array</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the specified array</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified array is null</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.SynchronousQueue'>java.util.concurrent.SynchronousQueue</span><br/><a href='source/SynchronousQueue.html#java-util-concurrent-SynchronousQueue-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.SynchronousQueue-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Always returns {@code \"[]\"}. ...</div><div class='long'><p>Always returns {@code \"[]\"}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>{@code \"[]\"}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});