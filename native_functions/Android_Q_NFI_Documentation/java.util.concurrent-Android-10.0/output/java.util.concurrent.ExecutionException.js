Ext.data.JsonP.java_util_concurrent_ExecutionException({"tagname":"class","name":"java.util.concurrent.ExecutionException","autodetected":{},"files":[{"filename":"ExecutionException.js","href":"ExecutionException.html#java-util-concurrent-ExecutionException"}],"extends":"java.lang.Exception","since":"1.5","author":[{"tagname":"author","name":"Doug Lea","email":null}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.ExecutionException","short_doc":"Exception thrown when attempting to retrieve the result of a task\n that aborted by throwing an exception. ...","classIcon":"icon-class","superclasses":["java.lang.Exception"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Exception<div class='subclass '><strong>java.util.concurrent.ExecutionException</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ExecutionException.html#java-util-concurrent-ExecutionException' target='_blank'>ExecutionException.js</a></div></pre><div class='doc-contents'><p>Exception thrown when attempting to retrieve the result of a task\n that aborted by throwing an exception. This exception can be\n inspected using the getCause() method.</p>\n\n<p> @see Future</p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'></div></div>","meta":{}});