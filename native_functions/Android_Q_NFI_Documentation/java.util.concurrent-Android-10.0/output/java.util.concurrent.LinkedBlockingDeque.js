Ext.data.JsonP.java_util_concurrent_LinkedBlockingDeque({"tagname":"class","name":"java.util.concurrent.LinkedBlockingDeque","autodetected":{},"files":[{"filename":"LinkedBlockingDeque.js","href":"LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque"}],"extends":"java.util.AbstractQueue","since":"1.6","author":[{"tagname":"author","name":"Doug Lea","email":null}],"params":[{"tagname":"params","doc":"<p><E> the type of elements held in this deque</E></p>\n"}],"members":[{"name":"add","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-add","meta":{}},{"name":"addFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-addFirst","meta":{}},{"name":"addLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-addLast","meta":{}},{"name":"clear","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-clear","meta":{}},{"name":"contains","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-contains","meta":{}},{"name":"descendingIterator","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-descendingIterator","meta":{}},{"name":"drainTo","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-drainTo","meta":{}},{"name":"element","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-element","meta":{}},{"name":"getFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-getFirst","meta":{}},{"name":"getLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-getLast","meta":{}},{"name":"iterator","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-iterator","meta":{}},{"name":"offer","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-offer","meta":{}},{"name":"offerFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-offerFirst","meta":{}},{"name":"offerLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-offerLast","meta":{}},{"name":"peek","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-peek","meta":{}},{"name":"peekFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-peekFirst","meta":{}},{"name":"peekLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-peekLast","meta":{}},{"name":"poll","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-poll","meta":{}},{"name":"pollFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-pollFirst","meta":{}},{"name":"pollLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-pollLast","meta":{}},{"name":"pop","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-pop","meta":{}},{"name":"push","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-push","meta":{}},{"name":"put","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-put","meta":{}},{"name":"putFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-putFirst","meta":{}},{"name":"putLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-putLast","meta":{}},{"name":"remainingCapacity","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-remainingCapacity","meta":{}},{"name":"remove","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-remove","meta":{}},{"name":"removeFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-removeFirst","meta":{}},{"name":"removeFirstOccurrence","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-removeFirstOccurrence","meta":{}},{"name":"removeLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-removeLast","meta":{}},{"name":"removeLastOccurrence","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-removeLastOccurrence","meta":{}},{"name":"size","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-size","meta":{}},{"name":"spliterator","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-spliterator","meta":{}},{"name":"take","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-take","meta":{}},{"name":"takeFirst","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-takeFirst","meta":{}},{"name":"takeLast","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-takeLast","meta":{}},{"name":"toArray","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-toArray","meta":{}},{"name":"toString","tagname":"method","owner":"java.util.concurrent.LinkedBlockingDeque","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.LinkedBlockingDeque","short_doc":"implements java.util.concurrent.BlockingDeque\n\n implements java.io.Serializable\n\nAn optionally-bounded {@linkplain ja...","classIcon":"icon-class","superclasses":["java.util.AbstractQueue"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.util.AbstractQueue<div class='subclass '><strong>java.util.concurrent.LinkedBlockingDeque</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque' target='_blank'>LinkedBlockingDeque.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.util.concurrent.BlockingDeque\" rel=\"java.util.concurrent.BlockingDeque\" class=\"docClass\">java.util.concurrent.BlockingDeque</a></p>\n\n<p> implements java.io.Serializable</p>\n\n<p>An optionally-bounded {@linkplain <a href=\"#!/api/java.util.concurrent.BlockingDeque\" rel=\"java.util.concurrent.BlockingDeque\" class=\"docClass\">java.util.concurrent.BlockingDeque</a> blocking deque} based on\n linked nodes.</p>\n\n<p> <p>The optional capacity bound constructor argument serves as a\n way to prevent excessive expansion. The capacity, if unspecified,\n is equal to Integer.MAX_VALUE.  Linked nodes are\n dynamically created upon each insertion unless this would bring the\n deque above capacity.</p>\n\n<p> <p>Most operations run in constant time (ignoring time spent\n blocking).  Exceptions include remove,\n <a href=\"#!/api/java.util.concurrent.LinkedBlockingDeque-method-removeFirstOccurrence\" rel=\"java.util.concurrent.LinkedBlockingDeque-method-removeFirstOccurrence\" class=\"docClass\">removeFirstOccurrence</a>, <a href=\"#!/api/java.util.concurrent.LinkedBlockingDeque-method-removeLastOccurrence\" rel=\"java.util.concurrent.LinkedBlockingDeque-method-removeLastOccurrence\" class=\"docClass\">removeLastOccurrence</a>, <a href=\"#!/api/java.util.concurrent.LinkedBlockingDeque-method-contains\" rel=\"java.util.concurrent.LinkedBlockingDeque-method-contains\" class=\"docClass\">contains</a>, <a href=\"#!/api/java.util.concurrent.LinkedBlockingDeque-method-iterator\" rel=\"java.util.concurrent.LinkedBlockingDeque-method-iterator\" class=\"docClass\">iterator.remove()</a>, and the bulk\n operations, all of which run in linear time.</p>\n\n<p> <p>This class and its iterator implement all of the\n <em>optional</em> methods of the Collection and Iterator interfaces.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><E> the type of elements held in this deque</E></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-add' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-add' class='name expandable'>add</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the specified element at the end of this deque unless it would\n violate capacity restrictions. ...</div><div class='long'><p>Inserts the specified element at the end of this deque unless it would\n violate capacity restrictions.  When using a capacity-restricted deque,\n it is generally preferable to use method offer.</p>\n\n<p> <p>This method is equivalent to <a href=\"#!/api/java.util.concurrent.LinkedBlockingDeque-method-addLast\" rel=\"java.util.concurrent.LinkedBlockingDeque-method-addLast\" class=\"docClass\">addLast</a>.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this deque is full</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-addFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-addFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-addFirst' class='name expandable'>addFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this deque is full</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-addLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-addLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-addLast' class='name expandable'>addLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this deque is full</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException  {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Atomically removes all of the elements from this deque. ...</div><div class='long'><p>Atomically removes all of the elements from this deque.\n The deque will be empty after this call returns.</p>\n</div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-contains' class='name expandable'>contains</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this deque contains the specified element. ...</div><div class='long'><p>Returns {@code true} if this deque contains the specified element.\n More formally, returns {@code true} if and only if this deque contains\n at least one element {@code e} such that {@code o.equals(e)}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>object to be checked for containment in this deque</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this deque contains the specified element</p>\n</div></li></ul></div></div></div><div id='method-descendingIterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-descendingIterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-descendingIterator' class='name expandable'>descendingIterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator over the elements in this deque in reverse\n sequential order. ...</div><div class='long'><p>Returns an iterator over the elements in this deque in reverse\n sequential order.  The elements will be returned in order from\n last (tail) to first (head).</p>\n\n<p> <p>The returned iterator is\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an iterator over the elements in this deque in reverse order</p>\n</div></li></ul></div></div></div><div id='method-drainTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-drainTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-drainTo' class='name expandable'>drainTo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException            {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException          {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException      {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-element' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-element' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-element' class='name expandable'>element</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves, but does not remove, the head of the queue represented by\n this deque. ...</div><div class='long'><p>Retrieves, but does not remove, the head of the queue represented by\n this deque.  This method differs from <a href=\"#!/api/java.util.concurrent.LinkedBlockingDeque-method-peek\" rel=\"java.util.concurrent.LinkedBlockingDeque-method-peek\" class=\"docClass\">peek</a> only in that\n it throws an exception if this deque is empty.</p>\n\n<p> <p>This method is equivalent to getFirst.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the head of the queue represented by this deque</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException if this deque is empty</p>\n</div></li></ul></div></div></div><div id='method-getFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-getFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-getFirst' class='name expandable'>getFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-getLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-getLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-getLast' class='name expandable'>getLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-iterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-iterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-iterator' class='name expandable'>iterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator over the elements in this deque in proper sequence. ...</div><div class='long'><p>Returns an iterator over the elements in this deque in proper sequence.\n The elements will be returned in order from first (head) to last (tail).</p>\n\n<p> <p>The returned iterator is\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an iterator over the elements in this deque in proper sequence</p>\n</div></li></ul></div></div></div><div id='method-offer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-offer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-offer' class='name expandable'>offer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-offerFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-offerFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-offerFirst' class='name expandable'>offerFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-offerLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-offerLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-offerLast' class='name expandable'>offerLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-peek' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-peek' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-peek' class='name expandable'>peek</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-peekFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-peekFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-peekFirst' class='name expandable'>peekFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-peekLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-peekLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-peekLast' class='name expandable'>peekLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-poll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-poll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-poll' class='name expandable'>poll</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pollFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-pollFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-pollFirst' class='name expandable'>pollFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pollLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-pollLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-pollLast' class='name expandable'>pollLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-pop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-pop' class='name expandable'>pop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-push' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-push' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-push' class='name expandable'>push</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this deque is full</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-put' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-put' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-put' class='name expandable'>put</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-putFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-putFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-putFirst' class='name expandable'>putFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-putLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-putLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-putLast' class='name expandable'>putLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InterruptedException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-remainingCapacity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-remainingCapacity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-remainingCapacity' class='name expandable'>remainingCapacity</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of additional elements that this deque can ideally\n (in the absence of memory or resource constrai...</div><div class='long'><p>Returns the number of additional elements that this deque can ideally\n (in the absence of memory or resource constraints) accept without\n blocking. This is always equal to the initial capacity of this deque\n less the current {@code size} of this deque.</p>\n\n<p> <p>Note that you <em>cannot</em> always tell if an attempt to insert\n an element will succeed by inspecting {@code remainingCapacity}\n because it may be the case that another thread is about to\n insert or remove an element.</p>\n</div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-remove' class='name expandable'>remove</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the first occurrence of the specified element from this deque. ...</div><div class='long'><p>Removes the first occurrence of the specified element from this deque.\n If the deque does not contain the element, it is unchanged.\n More formally, removes the first element {@code e} such that\n {@code o.equals(e)} (if such an element exists).\n Returns {@code true} if this deque contained the specified element\n (or equivalently, if this deque changed as a result of the call).</p>\n\n<p> <p>This method is equivalent to\n removeFirstOccurrence.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>element to be removed from this deque, if present</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this deque changed as a result of the call</p>\n</div></li></ul></div></div></div><div id='method-removeFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-removeFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-removeFirst' class='name expandable'>removeFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-removeFirstOccurrence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-removeFirstOccurrence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-removeFirstOccurrence' class='name expandable'>removeFirstOccurrence</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-removeLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-removeLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-removeLast' class='name expandable'>removeLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-removeLastOccurrence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-removeLastOccurrence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-removeLastOccurrence' class='name expandable'>removeLastOccurrence</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of elements in this deque. ...</div><div class='long'><p>Returns the number of elements in this deque.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of elements in this deque</p>\n</div></li></ul></div></div></div><div id='method-spliterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-spliterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-spliterator' class='name expandable'>spliterator</a>( <span class='pre'></span> ) : Object {java.util.Spliterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Spliterator over the elements in this deque. ...</div><div class='long'><p>Returns a Spliterator over the elements in this deque.</p>\n\n<p> <p>The returned spliterator is\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n\n<p> <p>The {@code Spliterator} reports Spliterator.CONCURRENT,\n Spliterator.ORDERED, and Spliterator.NONNULL.\n@implNote The {@code Spliterator} implements {@code trySplit} to permit limited\n parallelism.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Spliterator}</span><div class='sub-desc'><p>a {@code Spliterator} over the elements in this deque</p>\n</div></li></ul></div></div></div><div id='method-take' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-take' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-take' class='name expandable'>take</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-takeFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-takeFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-takeFirst' class='name expandable'>takeFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-takeLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-takeLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-takeLast' class='name expandable'>takeLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-toArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-toArray' class='name expandable'>toArray</a>( <span class='pre'>a</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array containing all of the elements in this deque, in\n proper sequence; the runtime type of the returned ...</div><div class='long'><p>Returns an array containing all of the elements in this deque, in\n proper sequence; the runtime type of the returned array is that of\n the specified array.  If the deque fits in the specified array, it\n is returned therein.  Otherwise, a new array is allocated with the\n runtime type of the specified array and the size of this deque.</p>\n\n<p> <p>If this deque fits in the specified array with room to spare\n (i.e., the array has more elements than this deque), the element in\n the array immediately following the end of the deque is set to\n {@code null}.</p>\n\n<p> <p>Like the <a href=\"#!/api/java.util.concurrent.LinkedBlockingDeque-method-toArray\" rel=\"java.util.concurrent.LinkedBlockingDeque-method-toArray\" class=\"docClass\">toArray</a>() method, this method acts as bridge between\n array-based and collection-based APIs.  Further, this method allows\n precise control over the runtime type of the output array, and may,\n under certain circumstances, be used to save allocation costs.</p>\n\n<p> <p>Suppose {@code x} is a deque known to contain only strings.\n The following code can be used to dump the deque into a newly\n allocated array of {@code String}:</p>\n\n<p> <pre> {@code String[] y = x.toArray(new String[0]);}</pre></p>\n\n<p> Note that {@code toArray(new Object[0])} is identical in function to\n {@code toArray()}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>the array into which the elements of the deque are to\n          be stored, if it is big enough; otherwise, a new array of the\n          same runtime type is allocated for this purpose</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>an array containing all of the elements in this deque</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArrayStoreException if the runtime type of the specified array\n         is not a supertype of the runtime type of every element in\n         this deque</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified array is null</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.LinkedBlockingDeque'>java.util.concurrent.LinkedBlockingDeque</span><br/><a href='source/LinkedBlockingDeque.html#java-util-concurrent-LinkedBlockingDeque-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.LinkedBlockingDeque-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});