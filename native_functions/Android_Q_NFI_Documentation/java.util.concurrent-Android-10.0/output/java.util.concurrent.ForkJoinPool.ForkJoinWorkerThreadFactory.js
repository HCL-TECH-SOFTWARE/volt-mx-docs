Ext.data.JsonP.java_util_concurrent_ForkJoinPool_ForkJoinWorkerThreadFactory({"tagname":"class","name":"java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory","autodetected":{},"files":[{"filename":"ForkJoinWorkerThreadFactory.js","href":"ForkJoinWorkerThreadFactory.html#java-util-concurrent-ForkJoinPool-ForkJoinWorkerThreadFactory"}],"members":[{"name":"newThread","tagname":"method","owner":"java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory","id":"method-newThread","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory","short_doc":"Factory for creating new java.util.concurrent.ForkJoinWorkerThreads. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ForkJoinWorkerThreadFactory.html#java-util-concurrent-ForkJoinPool-ForkJoinWorkerThreadFactory' target='_blank'>ForkJoinWorkerThreadFactory.js</a></div></pre><div class='doc-contents'><p>Factory for creating new <a href=\"#!/api/java.util.concurrent.ForkJoinWorkerThread\" rel=\"java.util.concurrent.ForkJoinWorkerThread\" class=\"docClass\">java.util.concurrent.ForkJoinWorkerThread</a>s.\n A {@code ForkJoinWorkerThreadFactory} must be defined and used\n for {@code ForkJoinWorkerThread} subclasses that extend base\n functionality or initialize threads with different contexts.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-newThread' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory'>java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory</span><br/><a href='source/ForkJoinWorkerThreadFactory.html#java-util-concurrent-ForkJoinPool-ForkJoinWorkerThreadFactory-method-newThread' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ForkJoinPool.ForkJoinWorkerThreadFactory-method-newThread' class='name expandable'>newThread</a>( <span class='pre'>pool</span> ) : Object {java.util.concurrent.ForkJoinWorkerThread}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new worker thread operating in the given pool. ...</div><div class='long'><p>Returns a new worker thread operating in the given pool.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pool</span> : Object {ForkJoinPool}<div class='sub-desc'><p>the pool this thread works in</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.concurrent.ForkJoinWorkerThread}</span><div class='sub-desc'><p>the new worker thread, or {@code null} if the request\n         to create a thread is rejected</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the pool is null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});