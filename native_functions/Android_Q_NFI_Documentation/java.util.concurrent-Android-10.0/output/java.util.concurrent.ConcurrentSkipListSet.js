Ext.data.JsonP.java_util_concurrent_ConcurrentSkipListSet({"tagname":"class","name":"java.util.concurrent.ConcurrentSkipListSet","autodetected":{},"files":[{"filename":"ConcurrentSkipListSet.js","href":"ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet"}],"extends":"java.util.AbstractSet","author":[{"tagname":"author","name":"Doug Lea","email":null}],"params":[{"tagname":"params","doc":"<p><E> the type of elements maintained by this set</E></p>\n"}],"since":"1.6","members":[{"name":"add","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-add","meta":{}},{"name":"ceiling","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-ceiling","meta":{}},{"name":"clear","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-clear","meta":{}},{"name":"clone","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-clone","meta":{}},{"name":"comparator","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-comparator","meta":{}},{"name":"contains","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-contains","meta":{}},{"name":"descendingIterator","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-descendingIterator","meta":{}},{"name":"descendingSet","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-descendingSet","meta":{}},{"name":"equals","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-equals","meta":{}},{"name":"first","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-first","meta":{}},{"name":"floor","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-floor","meta":{}},{"name":"headSet","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-headSet","meta":{}},{"name":"higher","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-higher","meta":{}},{"name":"isEmpty","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-isEmpty","meta":{}},{"name":"iterator","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-iterator","meta":{}},{"name":"last","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-last","meta":{}},{"name":"lower","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-lower","meta":{}},{"name":"pollFirst","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-pollFirst","meta":{}},{"name":"pollLast","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-pollLast","meta":{}},{"name":"remove","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-remove","meta":{}},{"name":"removeAll","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-removeAll","meta":{}},{"name":"size","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-size","meta":{}},{"name":"spliterator","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-spliterator","meta":{}},{"name":"subSet","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-subSet","meta":{}},{"name":"tailSet","tagname":"method","owner":"java.util.concurrent.ConcurrentSkipListSet","id":"method-tailSet","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.ConcurrentSkipListSet","short_doc":"implements java.util.NavigableSet\n\n implements java.lang.Cloneable\n\n implements java.io.Serializable\n\nA scalable conc...","classIcon":"icon-class","superclasses":["java.util.AbstractSet"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.util.AbstractSet<div class='subclass '><strong>java.util.concurrent.ConcurrentSkipListSet</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet' target='_blank'>ConcurrentSkipListSet.js</a></div></pre><div class='doc-contents'><p>implements java.util.NavigableSet</p>\n\n<p> implements java.lang.Cloneable</p>\n\n<p> implements java.io.Serializable</p>\n\n<p>A scalable concurrent NavigableSet implementation based on\n a <a href=\"#!/api/java.util.concurrent.ConcurrentSkipListMap\" rel=\"java.util.concurrent.ConcurrentSkipListMap\" class=\"docClass\">java.util.concurrent.ConcurrentSkipListMap</a>.  The elements of the set are kept\n sorted according to their {@linkplain Comparable natural ordering},\n or by a Comparator provided at set creation time, depending\n on which constructor is used.</p>\n\n<p> <p>This implementation provides expected average <i>log(n)</i> time\n cost for the {@code contains}, {@code add}, and {@code remove}\n operations and their variants.  Insertion, removal, and access\n operations safely execute concurrently by multiple threads.</p>\n\n<p> <p>Iterators and spliterators are\n <a href=\"package-summary.html#Weakly\"><i>weakly consistent</i></a>.</p>\n\n<p> <p>Ascending ordered views and their iterators are faster than\n descending ones.</p>\n\n<p> <p>Beware that, unlike in most collections, the {@code size}\n method is <em>not</em> a constant-time operation. Because of the\n asynchronous nature of these sets, determining the current number\n of elements requires a traversal of the elements, and so may report\n inaccurate results if this collection is modified during traversal.\n Additionally, the bulk operations {@code addAll},\n {@code removeAll}, {@code retainAll}, {@code containsAll},\n {@code equals}, and {@code toArray} are <em>not</em> guaranteed\n to be performed atomically. For example, an iterator operating\n concurrently with an {@code addAll} operation might view only some\n of the added elements.</p>\n\n<p> <p>This class and its iterators implement all of the\n <em>optional</em> methods of the Set and Iterator\n interfaces. Like most other concurrent collection implementations,\n this class does not permit the use of {@code null} elements,\n because {@code null} arguments and return values cannot be reliably\n distinguished from the absence of elements.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><E> the type of elements maintained by this set</E></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-add' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-add' class='name expandable'>add</a>( <span class='pre'>e</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds the specified element to this set if it is not already present. ...</div><div class='long'><p>Adds the specified element to this set if it is not already present.\n More formally, adds the specified element {@code e} to this set if\n the set contains no element {@code e2} such that {@code e.equals(e2)}.\n If this set already contains the element, the call leaves the set\n unchanged and returns {@code false}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>e</span> : Object {Object}<div class='sub-desc'><p>element to be added to this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set did not already contain the\n         specified element</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if {@code e} cannot be compared\n         with the elements currently in this set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-ceiling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-ceiling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-ceiling' class='name expandable'>ceiling</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all of the elements from this set. ...</div><div class='long'><p>Removes all of the elements from this set.</p>\n</div></div></div><div id='method-clone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> ) : Object {java.util.concurrent.ConcurrentSkipListSet}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a shallow copy of this {@code ConcurrentSkipListSet}\n instance. ...</div><div class='long'><p>Returns a shallow copy of this {@code ConcurrentSkipListSet}\n instance. (The elements themselves are not cloned.)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.concurrent.ConcurrentSkipListSet}</span><div class='sub-desc'><p>a shallow copy of this set</p>\n</div></li></ul></div></div></div><div id='method-comparator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-comparator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-comparator' class='name expandable'>comparator</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-contains' class='name expandable'>contains</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this set contains the specified element. ...</div><div class='long'><p>Returns {@code true} if this set contains the specified element.\n More formally, returns {@code true} if and only if this set\n contains an element {@code e} such that {@code o.equals(e)}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>object to be checked for containment in this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set contains the specified element</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the specified element cannot be\n         compared with the elements currently in this set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-descendingIterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-descendingIterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-descendingIterator' class='name expandable'>descendingIterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator over the elements in this set in descending order. ...</div><div class='long'><p>Returns an iterator over the elements in this set in descending order.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an iterator over the elements in this set in descending order</p>\n</div></li></ul></div></div></div><div id='method-descendingSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-descendingSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-descendingSet' class='name expandable'>descendingSet</a>( <span class='pre'></span> ) : Object {java.util.NavigableSet}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a reverse order view of the elements contained in this set. ...</div><div class='long'><p>Returns a reverse order view of the elements contained in this set.\n The descending set is backed by this set, so changes to the set are\n reflected in the descending set, and vice-versa.</p>\n\n<p> <p>The returned set has an ordering equivalent to\n Collections.reverseOrder{@code (comparator())}.\n The expression {@code s.descendingSet().descendingSet()} returns a\n view of {@code s} essentially equivalent to {@code s}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.NavigableSet}</span><div class='sub-desc'><p>a reverse order view of this set</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-equals' class='name expandable'>equals</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares the specified object with this set for equality. ...</div><div class='long'><p>Compares the specified object with this set for equality.  Returns\n {@code true} if the specified object is also a set, the two sets\n have the same size, and every member of the specified set is\n contained in this set (or equivalently, every member of this set is\n contained in the specified set).  This definition ensures that the\n equals method works properly across different implementations of the\n set interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>the object to be compared for equality with this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the specified object is equal to this set</p>\n</div></li></ul></div></div></div><div id='method-first' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-first' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-first' class='name expandable'>first</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>java.util.NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-floor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-floor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-floor' class='name expandable'>floor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-headSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-headSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-headSet' class='name expandable'>headSet</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code toElement} is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-higher' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-higher' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-higher' class='name expandable'>higher</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if this set contains no elements. ...</div><div class='long'><p>Returns {@code true} if this set contains no elements.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set contains no elements</p>\n</div></li></ul></div></div></div><div id='method-iterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-iterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-iterator' class='name expandable'>iterator</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator over the elements in this set in ascending order. ...</div><div class='long'><p>Returns an iterator over the elements in this set in ascending order.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an iterator over the elements in this set in ascending order</p>\n</div></li></ul></div></div></div><div id='method-last' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-last' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-last' class='name expandable'>last</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>java.util.NoSuchElementException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-lower' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-lower' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-lower' class='name expandable'>lower</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-pollFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-pollFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-pollFirst' class='name expandable'>pollFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pollLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-pollLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-pollLast' class='name expandable'>pollLast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-remove' class='name expandable'>remove</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the specified element from this set if it is present. ...</div><div class='long'><p>Removes the specified element from this set if it is present.\n More formally, removes an element {@code e} such that\n {@code o.equals(e)}, if this set contains such an element.\n Returns {@code true} if this set contained the element (or\n equivalently, if this set changed as a result of the call).\n (This set will not contain the element once the call returns.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>object to be removed from this set, if present</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set contained the specified element</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if {@code o} cannot be compared\n         with the elements currently in this set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified element is null</p>\n</div></li></ul></div></div></div><div id='method-removeAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-removeAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-removeAll' class='name expandable'>removeAll</a>( <span class='pre'>c</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes from this set all of its elements that are contained in\n the specified collection. ...</div><div class='long'><p>Removes from this set all of its elements that are contained in\n the specified collection.  If the specified collection is also\n a set, this operation effectively modifies this set so that its\n value is the <i>asymmetric set difference</i> of the two sets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.util.Collection}<div class='sub-desc'><p>collection containing elements to be removed from this set</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this set changed as a result of the call</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the class of an element of this set\n         is incompatible with the specified collection\n (<a href=\"../Collection.html#optional-restrictions\">optional</a>)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the specified collection or any\n         of its elements are null</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of elements in this set. ...</div><div class='long'><p>Returns the number of elements in this set.  If this set\n contains more than {@code Integer.MAX_VALUE} elements, it\n returns {@code Integer.MAX_VALUE}.</p>\n\n<p> <p>Beware that, unlike in most collections, this method is\n <em>NOT</em> a constant-time operation. Because of the\n asynchronous nature of these sets, determining the current\n number of elements requires traversing them all to count them.\n Additionally, it is possible for the size to change during\n execution of this method, in which case the returned result\n will be inaccurate. Thus, this method is typically not very\n useful in concurrent applications.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of elements in this set</p>\n</div></li></ul></div></div></div><div id='method-spliterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-spliterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-spliterator' class='name expandable'>spliterator</a>( <span class='pre'></span> ) : Object {java.util.Spliterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Spliterator over the elements in this set. ...</div><div class='long'><p>Returns a Spliterator over the elements in this set.</p>\n\n<p> <p>The {@code Spliterator} reports Spliterator.CONCURRENT,\n Spliterator.NONNULL, Spliterator.DISTINCT,\n Spliterator.SORTED and Spliterator.ORDERED, with an\n encounter order that is ascending order.  Overriding implementations\n should document the reporting of additional characteristic values.</p>\n\n<p> <p>The spliterator's comparator (see\n java.util.Spliterator.getComparator()) is {@code null} if\n the set's comparator (see <a href=\"#!/api/java.util.concurrent.ConcurrentSkipListSet-method-comparator\" rel=\"java.util.concurrent.ConcurrentSkipListSet-method-comparator\" class=\"docClass\">comparator</a>()) is {@code null}.\n Otherwise, the spliterator's comparator is the same as or imposes the\n same total ordering as the set's comparator.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Spliterator}</span><div class='sub-desc'><p>a {@code Spliterator} over the elements in this set</p>\n</div></li></ul></div></div></div><div id='method-subSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-subSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-subSet' class='name expandable'>subSet</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code fromElement} or\n         {@code toElement} is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-tailSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.ConcurrentSkipListSet'>java.util.concurrent.ConcurrentSkipListSet</span><br/><a href='source/ConcurrentSkipListSet.html#java-util-concurrent-ConcurrentSkipListSet-method-tailSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.ConcurrentSkipListSet-method-tailSet' class='name expandable'>tailSet</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code fromElement} is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException {@inheritDoc}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});