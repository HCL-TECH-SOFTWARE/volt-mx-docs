Ext.data.JsonP.android_hardware_camera2_impl_CallbackProxies({"tagname":"class","name":"android.hardware.camera2.impl.CallbackProxies","autodetected":{},"files":[{"filename":"CallbackProxies.js","href":"CallbackProxies.html#android-hardware-camera2-impl-CallbackProxies"}],"extends":"java.lang.Object","members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.impl.CallbackProxies","short_doc":"Proxy out invocations to the camera2 API callbacks into a Dispatchable. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.impl.CallbackProxies</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CallbackProxies.html#android-hardware-camera2-impl-CallbackProxies' target='_blank'>CallbackProxies.js</a></div></pre><div class='doc-contents'><p>Proxy out invocations to the camera2 API callbacks into a Dispatchable.</p>\n\n<p> <p>Since abstract classes do not support Java's dynamic {@code Proxy}, we have to\n to use our own proxy mechanism.</p></p>\n</div><div class='members'></div></div>","meta":{}});