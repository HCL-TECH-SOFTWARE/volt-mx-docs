Ext.data.JsonP.android_hardware_camera2_impl_SyntheticKey({"tagname":"class","name":"android.hardware.camera2.impl.SyntheticKey","autodetected":{},"files":[{"filename":"SyntheticKey.js","href":"SyntheticKey.html#android-hardware-camera2-impl-SyntheticKey"}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.impl.SyntheticKey","short_doc":"implements java.lang.annotation.Annotation\n\n Denote a static field {@code Key} as being synthetic (i.e. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/SyntheticKey.html#android-hardware-camera2-impl-SyntheticKey' target='_blank'>SyntheticKey.js</a></div></pre><div class='doc-contents'><p>implements java.lang.annotation.Annotation</p>\n\n<p> Denote a static field {@code Key} as being synthetic (i.e. not having a native\n tag one-to-one counterpart).</p>\n\n<p> <p>Keys without this annotated are assumed to always have a native counter-part.</p></p>\n\n<p> <p>In particular a key with a native counter-part will always have it's {@code #getTag}\n method succeed.</p></p>\n</div><div class='members'></div></div>","meta":{}});