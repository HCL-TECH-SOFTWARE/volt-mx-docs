Ext.data.JsonP.android_accounts_AbstractAccountAuthenticator({"tagname":"class","name":"android.accounts.AbstractAccountAuthenticator","autodetected":{},"files":[{"filename":"AbstractAccountAuthenticator.js","href":"AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator"}],"extends":"java.lang.Object","members":[{"name":"KEY_CUSTOM_TOKEN_EXPIRY","tagname":"property","owner":"android.accounts.AbstractAccountAuthenticator","id":"property-KEY_CUSTOM_TOKEN_EXPIRY","meta":{}},{"name":"addAccount","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-addAccount","meta":{}},{"name":"addAccountFromCredentials","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-addAccountFromCredentials","meta":{}},{"name":"confirmCredentials","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-confirmCredentials","meta":{}},{"name":"editProperties","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-editProperties","meta":{}},{"name":"finishSession","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-finishSession","meta":{}},{"name":"getAccountCredentialsForCloning","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-getAccountCredentialsForCloning","meta":{}},{"name":"getAccountRemovalAllowed","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-getAccountRemovalAllowed","meta":{}},{"name":"getAuthToken","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-getAuthToken","meta":{}},{"name":"getAuthTokenLabel","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-getAuthTokenLabel","meta":{}},{"name":"getIBinder","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-getIBinder","meta":{}},{"name":"hasFeatures","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-hasFeatures","meta":{}},{"name":"isCredentialsUpdateSuggested","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-isCredentialsUpdateSuggested","meta":{}},{"name":"startAddAccountSession","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-startAddAccountSession","meta":{}},{"name":"startUpdateCredentialsSession","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-startUpdateCredentialsSession","meta":{}},{"name":"updateCredentials","tagname":"method","owner":"android.accounts.AbstractAccountAuthenticator","id":"method-updateCredentials","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.accounts.AbstractAccountAuthenticator","short_doc":"Abstract base class for creating AccountAuthenticators. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.accounts.AbstractAccountAuthenticator</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator' target='_blank'>AbstractAccountAuthenticator.js</a></div></pre><div class='doc-contents'><p>Abstract base class for creating AccountAuthenticators.\n In order to be an authenticator one must extend this class, provide implementations for the\n abstract methods, and write a service that returns the result of <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-getIBinder\" rel=\"android.accounts.AbstractAccountAuthenticator-method-getIBinder\" class=\"docClass\">getIBinder</a>()\n in the service's android.app.Service.onBind(android.content.Intent) when invoked\n with an intent with action <a href=\"#!/api/android.accounts.AccountManager-property-ACTION_AUTHENTICATOR_INTENT\" rel=\"android.accounts.AccountManager-property-ACTION_AUTHENTICATOR_INTENT\" class=\"docClass\">android.accounts.AccountManager.ACTION_AUTHENTICATOR_INTENT</a>. This service\n must specify the following intent filter and metadata tags in its AndroidManifest.xml file</p>\n\n<pre>   &lt;intent-filter&gt;\n     &lt;action android:name=\"android.accounts.AccountAuthenticator\" /&gt;\n   &lt;/intent-filter&gt;\n   &lt;meta-data android:name=\"android.accounts.AccountAuthenticator\"\n             android:resource=\"@xml/authenticator\" /&gt;\n </pre>\n\n\n<p> The <code>android:resource</code> attribute must point to a resource that looks like:</p>\n\n<pre> &lt;account-authenticator xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:accountType=\"typeOfAuthenticator\"\n    android:icon=\"@drawable/icon\"\n    android:smallIcon=\"@drawable/miniIcon\"\n    android:label=\"@string/label\"\n    android:accountPreferences=\"@xml/account_preferences\"\n /&gt;\n </pre>\n\n\n<p> Replace the icons and labels with your own resources. The <code>android:accountType</code>\n attribute must be a string that uniquely identifies your authenticator and will be the same\n string that user will use when making calls on the <a href=\"#!/api/android.accounts.AccountManager\" rel=\"android.accounts.AccountManager\" class=\"docClass\">android.accounts.AccountManager</a> and it also\n corresponds to <a href=\"#!/api/android.accounts.Account-property-type\" rel=\"android.accounts.Account-property-type\" class=\"docClass\">android.accounts.Account.type</a> for your accounts. One user of the android:icon is the\n \"Account &amp; Sync\" settings page and one user of the android:smallIcon is the Contact Application's\n tab panels.\n <p>\n The preferences attribute points to a PreferenceScreen xml hierarchy that contains\n a list of PreferenceScreens that can be invoked to manage the authenticator. An example is:</p>\n\n<pre> &lt;PreferenceScreen xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n    &lt;PreferenceCategory android:title=\"@string/title_fmt\" /&gt;\n    &lt;PreferenceScreen\n         android:key=\"key1\"\n         android:title=\"@string/key1_action\"\n         android:summary=\"@string/key1_summary\"&gt;\n         &lt;intent\n             android:action=\"key1.ACTION\"\n             android:targetPackage=\"key1.package\"\n             android:targetClass=\"key1.class\" /&gt;\n     &lt;/PreferenceScreen&gt;\n &lt;/PreferenceScreen&gt;\n </pre>\n\n\n<p> <p>\n The standard pattern for implementing any of the abstract methods is the following:\n <ul>\n <li> If the supplied arguments are enough for the authenticator to fully satisfy the request\n then it will do so and return a Bundle that contains the results.\n <li> If the authenticator needs information from the user to satisfy the request then it\n will create an Intent to an activity that will prompt the user for the information\n and then carry out the request. This intent must be returned in a Bundle as key\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">android.accounts.AccountManager.KEY_INTENT</a>.\n <p>\n The activity needs to return the final result when it is complete so the Intent should contain\n the <a href=\"#!/api/android.accounts.AccountAuthenticatorResponse\" rel=\"android.accounts.AccountAuthenticatorResponse\" class=\"docClass\">android.accounts.AccountAuthenticatorResponse</a> as <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_MANAGER_RESPONSE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_MANAGER_RESPONSE\" class=\"docClass\">android.accounts.AccountManager.KEY_ACCOUNT_MANAGER_RESPONSE</a>.\n The activity must then call <a href=\"#!/api/android.accounts.AccountAuthenticatorResponse-method-onResult\" rel=\"android.accounts.AccountAuthenticatorResponse-method-onResult\" class=\"docClass\">android.accounts.AccountAuthenticatorResponse.onResult</a> or\n <a href=\"#!/api/android.accounts.AccountAuthenticatorResponse-method-onError\" rel=\"android.accounts.AccountAuthenticatorResponse-method-onError\" class=\"docClass\">android.accounts.AccountAuthenticatorResponse.onError</a> when it is complete.\n <li> If the authenticator cannot synchronously process the request and return a result then it\n may choose to return null and then use the AccountManagerResponse to send the result\n when it has completed the request.\n </li></p></li></li></ul>\n <p>\n The following descriptions of each of the abstract authenticator methods will not describe the\n possible asynchronous nature of the request handling and will instead just describe the input\n parameters and the expected result.\n <p>\n When writing an activity to satisfy these requests one must pass in the AccountManagerResponse\n and return the result via that response when the activity finishes (or whenever else  the\n activity author deems it is the correct time to respond).\n The <a href=\"#!/api/android.accounts.AccountAuthenticatorActivity\" rel=\"android.accounts.AccountAuthenticatorActivity\" class=\"docClass\">android.accounts.AccountAuthenticatorActivity</a> handles this, so one may wish to extend that when\n writing activities to handle these requests.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-KEY_CUSTOM_TOKEN_EXPIRY' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-property-KEY_CUSTOM_TOKEN_EXPIRY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-property-KEY_CUSTOM_TOKEN_EXPIRY' class='name expandable'>KEY_CUSTOM_TOKEN_EXPIRY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used for the {@code long} expiration time (in millis from the unix epoch) of the\nassociated auth token. ...</div><div class='long'><p>Bundle key used for the {@code long} expiration time (in millis from the unix epoch) of the\nassociated auth token.</p>\n\n<p>@see <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-getAuthToken\" rel=\"android.accounts.AbstractAccountAuthenticator-method-getAuthToken\" class=\"docClass\">getAuthToken</a></p>\n<p>Defaults to: <code>&quot;android.accounts.expiry&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addAccount' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-addAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-addAccount' class='name expandable'>addAccount</a>( <span class='pre'>response, accountType, authTokenType, requiredFeatures, options</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an account of the specified accountType. ...</div><div class='long'><p>Adds an account of the specified accountType.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>the type of account to add, will never be null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>the type of auth token to retrieve after adding the account, may be null</p>\n</div></li><li><span class='pre'>requiredFeatures</span> : Object {java.lang.String[]}<div class='sub-desc'><p>a String array of authenticator-specific features that the added\n account must support, may be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle of authenticator-specific options. It always contains\n AccountManager.KEY_CALLER_PID and AccountManager.KEY_CALLER_UID\n fields which will let authenticator know the identity of the caller.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response. The result\n will contain either:\n <ul>\n <li> AccountManager.KEY_INTENT, or\n <li> AccountManager.KEY_ACCOUNT_NAME and AccountManager.KEY_ACCOUNT_TYPE of\n the account that was added, or\n <li> AccountManager.KEY_ERROR_CODE and AccountManager.KEY_ERROR_MESSAGE to\n indicate an error\n </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n network error</p>\n</div></li></ul></div></div></div><div id='method-addAccountFromCredentials' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-addAccountFromCredentials' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-addAccountFromCredentials' class='name expandable'>addAccountFromCredentials</a>( <span class='pre'>response, account, accountCredentials</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an account based on credentials provided by the authenticator instance of another\n user on the device, who ha...</div><div class='long'><p>Creates an account based on credentials provided by the authenticator instance of another\n user on the device, who has chosen to share the account with this user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account to clone, will never be null</p>\n</div></li><li><span class='pre'>accountCredentials</span> : Object {Bundle}<div class='sub-desc'><p>the Bundle containing the required credentials to create the\n account. Contents of the Bundle are only meaningful to the authenticator. This Bundle is\n provided by Account).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException\n@see <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-getAccountCredentialsForCloning\" rel=\"android.accounts.AbstractAccountAuthenticator-method-getAccountCredentialsForCloning\" class=\"docClass\">getAccountCredentialsForCloning</a>(AccountAuthenticatorResponse, Account)</p>\n</div></li></ul></div></div></div><div id='method-confirmCredentials' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-confirmCredentials' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-confirmCredentials' class='name expandable'>confirmCredentials</a>( <span class='pre'>response, account, options</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks that the user knows the credentials of an account. ...</div><div class='long'><p>Checks that the user knows the credentials of an account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account whose credentials are to be checked, will never be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle of authenticator-specific options, may be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response. The result\n will contain either:\n <ul>\n <li> AccountManager.KEY_INTENT, or\n <li> AccountManager.KEY_BOOLEAN_RESULT, true if the check succeeded, false otherwise\n <li> AccountManager.KEY_ERROR_CODE and AccountManager.KEY_ERROR_MESSAGE to\n indicate an error\n </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n network error</p>\n</div></li></ul></div></div></div><div id='method-editProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-editProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-editProperties' class='name expandable'>editProperties</a>( <span class='pre'>response, accountType</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Bundle that contains the Intent of the activity that can be used to edit the\n properties. ...</div><div class='long'><p>Returns a Bundle that contains the Intent of the activity that can be used to edit the\n properties. In order to indicate success the activity should call response.setResult()\n with a non-null Bundle.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>used to set the result for the request. If the Constants.INTENT_KEY\n   is set in the bundle then this response field is to be used for sending future\n   results if and when the Intent is started.</p>\n</div></li><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>the AccountType whose properties are to be edited.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle containing the result or the Intent to start to continue the request.\n   If this is null then the request is considered to still be active and the result should\n   sent later using response.</p>\n</div></li></ul></div></div></div><div id='method-finishSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-finishSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-finishSession' class='name expandable'>finishSession</a>( <span class='pre'>response, accountType, sessionBundle</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finishes the session started by startAddAccountSession or\n #startUpdateCredentials by installing the account to devic...</div><div class='long'><p>Finishes the session started by <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> or\n #startUpdateCredentials by installing the account to device with\n AccountManager, or updating the local credentials. File I/O may be\n performed in this call.\n <p>\n Note: when overriding this method, <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> and\n <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-startUpdateCredentialsSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a> should be overridden too.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never\n            be null</p>\n</div></li><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>the type of account to authenticate with, will never\n            be null</p>\n</div></li><li><span class='pre'>sessionBundle</span> : Object {Bundle}<div class='sub-desc'><p>a bundle of session data created by\n            <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> used for adding account to\n            device, or by <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-startUpdateCredentialsSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a> used for\n            updating local credentials.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the\n         response. The result will contain either:\n         <ul>\n         <li>AccountManager.KEY_INTENT, or\n         <li>AccountManager.KEY_ACCOUNT_NAME and\n         AccountManager.KEY_ACCOUNT_TYPE of the account that was\n         added or local credentials were updated, and optional\n         AccountManager.KEY_ACCOUNT_STATUS_TOKEN for checking\n         the status of the account later, or\n         <li>AccountManager.KEY_ERROR_CODE and\n         AccountManager.KEY_ERROR_MESSAGE to indicate an error\n         </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n             network error\n@see <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> and <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-startUpdateCredentialsSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a></p>\n</div></li></ul></div></div></div><div id='method-getAccountCredentialsForCloning' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-getAccountCredentialsForCloning' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-getAccountCredentialsForCloning' class='name expandable'>getAccountCredentialsForCloning</a>( <span class='pre'>response, account</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Bundle that contains whatever is required to clone the account on a different\n user. ...</div><div class='long'><p>Returns a Bundle that contains whatever is required to clone the account on a different\n user. The Bundle is passed to the authenticator instance in the target user via\n android.accounts.Account, Bundle).\n The default implementation returns null, indicating that cloning is not supported.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account to clone, will never be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException\n@see <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-addAccountFromCredentials\" rel=\"android.accounts.AbstractAccountAuthenticator-method-addAccountFromCredentials\" class=\"docClass\">addAccountFromCredentials</a>(AccountAuthenticatorResponse, Account, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-getAccountRemovalAllowed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-getAccountRemovalAllowed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-getAccountRemovalAllowed' class='name expandable'>getAccountRemovalAllowed</a>( <span class='pre'>response, account</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the removal of this account is allowed. ...</div><div class='long'><p>Checks if the removal of this account is allowed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account to check, will never be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response. The result\n will contain either:\n <ul>\n <li> AccountManager.KEY_INTENT, or\n <li> AccountManager.KEY_BOOLEAN_RESULT, true if the removal of the account is\n allowed, false otherwise\n <li> AccountManager.KEY_ERROR_CODE and AccountManager.KEY_ERROR_MESSAGE to\n indicate an error\n </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n network error</p>\n</div></li></ul></div></div></div><div id='method-getAuthToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-getAuthToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-getAuthToken' class='name expandable'>getAuthToken</a>( <span class='pre'>response, account, authTokenType, options</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an authtoken for an account. ...</div><div class='long'><p>Gets an authtoken for an account.</p>\n\n<p> If not {@code null}, the resultant Bundle will contain different sets of keys\n depending on whether a token was successfully issued and, if not, whether one\n could be issued via some android.app.Activity.\n <p>\n If a token cannot be provided without some additional activity, the Bundle should contain\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">android.accounts.AccountManager.KEY_INTENT</a> with an associated Intent. On the other hand, if\n there is no such activity, then a Bundle containing\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ERROR_CODE\" rel=\"android.accounts.AccountManager-property-KEY_ERROR_CODE\" class=\"docClass\">android.accounts.AccountManager.KEY_ERROR_CODE</a> and <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ERROR_MESSAGE\" rel=\"android.accounts.AccountManager-property-KEY_ERROR_MESSAGE\" class=\"docClass\">android.accounts.AccountManager.KEY_ERROR_MESSAGE</a> should be\n returned.\n <p>\n If a token can be successfully issued, the implementation should return the\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">android.accounts.AccountManager.KEY_ACCOUNT_NAME</a> and <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">android.accounts.AccountManager.KEY_ACCOUNT_TYPE</a> of the\n account associated with the token as well as the <a href=\"#!/api/android.accounts.AccountManager-property-KEY_AUTHTOKEN\" rel=\"android.accounts.AccountManager-property-KEY_AUTHTOKEN\" class=\"docClass\">android.accounts.AccountManager.KEY_AUTHTOKEN</a>. In\n addition <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator\" rel=\"android.accounts.AbstractAccountAuthenticator\" class=\"docClass\">android.accounts.AbstractAccountAuthenticator</a> implementations that declare themselves\n {@code android:customTokens=true} may also provide a non-negative <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-property-KEY_CUSTOM_TOKEN_EXPIRY\" rel=\"android.accounts.AbstractAccountAuthenticator-property-KEY_CUSTOM_TOKEN_EXPIRY\" class=\"docClass\">KEY_CUSTOM_TOKEN_EXPIRY</a> long value containing the expiration timestamp of the expiration\n time (in millis since the unix epoch), tokens will be cached in memory based on\n application's packageName/signature for however long that was specified.\n <p>\n Implementers should assume that tokens will be cached on the basis of account and\n authTokenType. The system may ignore the contents of the supplied options Bundle when\n determining to re-use a cached token. Furthermore, implementers should assume a supplied\n expiration time will be treated as non-binding advice.\n <p>\n Finally, note that for {@code android:customTokens=false} authenticators, tokens are cached\n indefinitely until some client calls android.accounts.AccountManager.invalidateAuthToken(String,String).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account whose credentials are to be retrieved, will never be null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>the type of auth token to retrieve, will never be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle of authenticator-specific options. It always contains\n AccountManager.KEY_CALLER_PID and AccountManager.KEY_CALLER_UID\n fields which will let authenticator know the identity of the caller.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n network error</p>\n</div></li></ul></div></div></div><div id='method-getAuthTokenLabel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-getAuthTokenLabel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-getAuthTokenLabel' class='name expandable'>getAuthTokenLabel</a>( <span class='pre'>authTokenType</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask the authenticator for a localized label for the given authTokenType. ...</div><div class='long'><p>Ask the authenticator for a localized label for the given authTokenType.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>the authTokenType whose label is to be returned, will never be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the localized label of the auth token type, may be null if the type isn't known</p>\n</div></li></ul></div></div></div><div id='method-getIBinder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-getIBinder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-getIBinder' class='name expandable'>getIBinder</a>( <span class='pre'></span> ) : Object {android.os.IBinder}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.IBinder}</span><div class='sub-desc'><p>the IBinder for the AccountAuthenticator</p>\n</div></li></ul></div></div></div><div id='method-hasFeatures' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-hasFeatures' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-hasFeatures' class='name expandable'>hasFeatures</a>( <span class='pre'>response, account, features</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the account supports all the specified authenticator specific features. ...</div><div class='long'><p>Checks if the account supports all the specified authenticator specific features.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account to check, will never be null</p>\n</div></li><li><span class='pre'>features</span> : Object {java.lang.String[]}<div class='sub-desc'><p>an array of features to check, will never be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response. The result\n will contain either:\n <ul>\n <li> AccountManager.KEY_INTENT, or\n <li> AccountManager.KEY_BOOLEAN_RESULT, true if the account has all the features,\n false otherwise\n <li> AccountManager.KEY_ERROR_CODE and AccountManager.KEY_ERROR_MESSAGE to\n indicate an error\n </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n network error</p>\n</div></li></ul></div></div></div><div id='method-isCredentialsUpdateSuggested' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-isCredentialsUpdateSuggested' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-isCredentialsUpdateSuggested' class='name expandable'>isCredentialsUpdateSuggested</a>( <span class='pre'>response, account, statusToken</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if update of the account credentials is suggested. ...</div><div class='long'><p>Checks if update of the account credentials is suggested.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null.</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account to check, will never be null</p>\n</div></li><li><span class='pre'>statusToken</span> : String<div class='sub-desc'><p>a String of token which can be used to check the status of locally\n            stored credentials and if update of credentials is suggested</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response. The result\n         will contain either:\n         <ul>\n         <li>AccountManager.KEY_BOOLEAN_RESULT, true if update of account's\n         credentials is suggested, false otherwise\n         <li>AccountManager.KEY_ERROR_CODE and\n         AccountManager.KEY_ERROR_MESSAGE to indicate an error\n         </li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n             network error</p>\n</div></li></ul></div></div></div><div id='method-startAddAccountSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-startAddAccountSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-startAddAccountSession' class='name expandable'>startAddAccountSession</a>( <span class='pre'>response, accountType, authTokenType, requiredFeatures, options</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts the add account session to authenticate user to an account of the\n specified accountType. ...</div><div class='long'><p>Starts the add account session to authenticate user to an account of the\n specified accountType. No file I/O should be performed in this call.\n Account should be added to device only when <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-finishSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-finishSession\" class=\"docClass\">finishSession</a> is\n called after this.\n <p>\n Note: when overriding this method, <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-finishSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-finishSession\" class=\"docClass\">finishSession</a> should be\n overridden too.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never\n            be null</p>\n</div></li><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>the type of account to authenticate with, will never\n            be null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>the type of auth token to retrieve after\n            authenticating with the account, may be null</p>\n</div></li><li><span class='pre'>requiredFeatures</span> : Object {java.lang.String[]}<div class='sub-desc'><p>a String array of authenticator-specific features\n            that the account authenticated with must support, may be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle of authenticator-specific options, may be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the\n         response. The result will contain either:\n         <ul>\n         <li>AccountManager.KEY_INTENT, or\n         <li>AccountManager.KEY_ACCOUNT_SESSION_BUNDLE for adding\n         the account to device later, and if account is authenticated,\n         optional AccountManager.KEY_PASSWORD and\n         AccountManager.KEY_ACCOUNT_STATUS_TOKEN for checking the\n         status of the account, or\n         <li>AccountManager.KEY_ERROR_CODE and\n         AccountManager.KEY_ERROR_MESSAGE to indicate an error\n         </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the\n             request due to a network error\n@see <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-finishSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-finishSession\" class=\"docClass\">finishSession</a>(AccountAuthenticatorResponse, String, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-startUpdateCredentialsSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-startUpdateCredentialsSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-startUpdateCredentialsSession' class='name expandable'>startUpdateCredentialsSession</a>( <span class='pre'>response, account, authTokenType, options</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Asks user to re-authenticate for an account but defers updating the\n locally stored credentials. ...</div><div class='long'><p>Asks user to re-authenticate for an account but defers updating the\n locally stored credentials. No file I/O should be performed in this call.\n Local credentials should be updated only when <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-finishSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-finishSession\" class=\"docClass\">finishSession</a> is\n called after this.\n <p>\n Note: when overriding this method, <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-finishSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-finishSession\" class=\"docClass\">finishSession</a> should be\n overridden too.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never\n            be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account whose credentials are to be updated, will\n            never be null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>the type of auth token to retrieve after updating\n            the credentials, may be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle of authenticator-specific options, may be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the\n         response. The result will contain either:\n         <ul>\n         <li>AccountManager.KEY_INTENT, or\n         <li>AccountManager.KEY_ACCOUNT_SESSION_BUNDLE for\n         updating the locally stored credentials later, and if account is\n         re-authenticated, optional AccountManager.KEY_PASSWORD\n         and AccountManager.KEY_ACCOUNT_STATUS_TOKEN for checking\n         the status of the account later, or\n         <li>AccountManager.KEY_ERROR_CODE and\n         AccountManager.KEY_ERROR_MESSAGE to indicate an error\n         </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the\n             request due to a network error\n@see <a href=\"#!/api/android.accounts.AbstractAccountAuthenticator-method-finishSession\" rel=\"android.accounts.AbstractAccountAuthenticator-method-finishSession\" class=\"docClass\">finishSession</a>(AccountAuthenticatorResponse, String, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-updateCredentials' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AbstractAccountAuthenticator'>android.accounts.AbstractAccountAuthenticator</span><br/><a href='source/AbstractAccountAuthenticator.html#android-accounts-AbstractAccountAuthenticator-method-updateCredentials' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AbstractAccountAuthenticator-method-updateCredentials' class='name expandable'>updateCredentials</a>( <span class='pre'>response, account, authTokenType, options</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the locally stored credentials for an account. ...</div><div class='long'><p>Update the locally stored credentials for an account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>response</span> : Object {AccountAuthenticatorResponse}<div class='sub-desc'><p>to send the result back to the AccountManager, will never be null</p>\n</div></li><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account whose credentials are to be updated, will never be null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>the type of auth token to retrieve after updating the credentials,\n may be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle of authenticator-specific options, may be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle result or null if the result is to be returned via the response. The result\n will contain either:\n <ul>\n <li> AccountManager.KEY_INTENT, or\n <li> AccountManager.KEY_ACCOUNT_NAME and AccountManager.KEY_ACCOUNT_TYPE of\n the account whose credentials were updated, or\n <li> AccountManager.KEY_ERROR_CODE and AccountManager.KEY_ERROR_MESSAGE to\n indicate an error\n </li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NetworkErrorException if the authenticator could not honor the request due to a\n network error</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});