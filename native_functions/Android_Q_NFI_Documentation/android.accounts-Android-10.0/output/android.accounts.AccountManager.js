Ext.data.JsonP.android_accounts_AccountManager({"tagname":"class","name":"android.accounts.AccountManager","autodetected":{},"files":[{"filename":"AccountManager.js","href":"AccountManager.html#android-accounts-AccountManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_ACCOUNT_REMOVED","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ACTION_ACCOUNT_REMOVED","meta":{}},{"name":"ACTION_AUTHENTICATOR_INTENT","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ACTION_AUTHENTICATOR_INTENT","meta":{}},{"name":"AUTHENTICATOR_ATTRIBUTES_NAME","tagname":"property","owner":"android.accounts.AccountManager","id":"property-AUTHENTICATOR_ATTRIBUTES_NAME","meta":{}},{"name":"AUTHENTICATOR_META_DATA_NAME","tagname":"property","owner":"android.accounts.AccountManager","id":"property-AUTHENTICATOR_META_DATA_NAME","meta":{}},{"name":"ERROR_CODE_BAD_ARGUMENTS","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_BAD_ARGUMENTS","meta":{}},{"name":"ERROR_CODE_BAD_AUTHENTICATION","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_BAD_AUTHENTICATION","meta":{}},{"name":"ERROR_CODE_BAD_REQUEST","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_BAD_REQUEST","meta":{}},{"name":"ERROR_CODE_CANCELED","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_CANCELED","meta":{}},{"name":"ERROR_CODE_INVALID_RESPONSE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_INVALID_RESPONSE","meta":{}},{"name":"ERROR_CODE_NETWORK_ERROR","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_NETWORK_ERROR","meta":{}},{"name":"ERROR_CODE_REMOTE_EXCEPTION","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_REMOTE_EXCEPTION","meta":{}},{"name":"ERROR_CODE_UNSUPPORTED_OPERATION","tagname":"property","owner":"android.accounts.AccountManager","id":"property-ERROR_CODE_UNSUPPORTED_OPERATION","meta":{}},{"name":"KEY_ACCOUNTS","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ACCOUNTS","meta":{}},{"name":"KEY_ACCOUNT_AUTHENTICATOR_RESPONSE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ACCOUNT_AUTHENTICATOR_RESPONSE","meta":{}},{"name":"KEY_ACCOUNT_MANAGER_RESPONSE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ACCOUNT_MANAGER_RESPONSE","meta":{}},{"name":"KEY_ACCOUNT_NAME","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ACCOUNT_NAME","meta":{}},{"name":"KEY_ACCOUNT_SESSION_BUNDLE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ACCOUNT_SESSION_BUNDLE","meta":{}},{"name":"KEY_ACCOUNT_STATUS_TOKEN","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ACCOUNT_STATUS_TOKEN","meta":{}},{"name":"KEY_ACCOUNT_TYPE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ACCOUNT_TYPE","meta":{}},{"name":"KEY_ANDROID_PACKAGE_NAME","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ANDROID_PACKAGE_NAME","meta":{}},{"name":"KEY_AUTHENTICATOR_TYPES","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_AUTHENTICATOR_TYPES","meta":{}},{"name":"KEY_AUTHTOKEN","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_AUTHTOKEN","meta":{}},{"name":"KEY_AUTH_FAILED_MESSAGE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_AUTH_FAILED_MESSAGE","meta":{}},{"name":"KEY_AUTH_TOKEN_LABEL","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_AUTH_TOKEN_LABEL","meta":{}},{"name":"KEY_BOOLEAN_RESULT","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_BOOLEAN_RESULT","meta":{}},{"name":"KEY_CALLER_PID","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_CALLER_PID","meta":{}},{"name":"KEY_CALLER_UID","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_CALLER_UID","meta":{}},{"name":"KEY_ERROR_CODE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ERROR_CODE","meta":{}},{"name":"KEY_ERROR_MESSAGE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_ERROR_MESSAGE","meta":{}},{"name":"KEY_INTENT","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_INTENT","meta":{}},{"name":"KEY_LAST_AUTHENTICATED_TIME","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_LAST_AUTHENTICATED_TIME","meta":{}},{"name":"KEY_PASSWORD","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_PASSWORD","meta":{}},{"name":"KEY_USERDATA","tagname":"property","owner":"android.accounts.AccountManager","id":"property-KEY_USERDATA","meta":{}},{"name":"LOGIN_ACCOUNTS_CHANGED_ACTION","tagname":"property","owner":"android.accounts.AccountManager","id":"property-LOGIN_ACCOUNTS_CHANGED_ACTION","meta":{"deprecated":{"text":"<p>use <a href=\"#!/api/android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" rel=\"android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" class=\"docClass\">addOnAccountsUpdatedListener</a> to get account updates in runtime.</p>\n"}}},{"name":"PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE","meta":{}},{"name":"PACKAGE_NAME_KEY_LEGACY_VISIBLE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-PACKAGE_NAME_KEY_LEGACY_VISIBLE","meta":{}},{"name":"VISIBILITY_NOT_VISIBLE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-VISIBILITY_NOT_VISIBLE","meta":{}},{"name":"VISIBILITY_UNDEFINED","tagname":"property","owner":"android.accounts.AccountManager","id":"property-VISIBILITY_UNDEFINED","meta":{}},{"name":"VISIBILITY_USER_MANAGED_NOT_VISIBLE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-VISIBILITY_USER_MANAGED_NOT_VISIBLE","meta":{}},{"name":"VISIBILITY_USER_MANAGED_VISIBLE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-VISIBILITY_USER_MANAGED_VISIBLE","meta":{}},{"name":"VISIBILITY_VISIBLE","tagname":"property","owner":"android.accounts.AccountManager","id":"property-VISIBILITY_VISIBLE","meta":{}},{"name":"addAccount","tagname":"method","owner":"android.accounts.AccountManager","id":"method-addAccount","meta":{}},{"name":"addAccountExplicitly","tagname":"method","owner":"android.accounts.AccountManager","id":"method-addAccountExplicitly","meta":{}},{"name":"addOnAccountsUpdatedListener","tagname":"method","owner":"android.accounts.AccountManager","id":"method-addOnAccountsUpdatedListener","meta":{}},{"name":"blockingGetAuthToken","tagname":"method","owner":"android.accounts.AccountManager","id":"method-blockingGetAuthToken","meta":{}},{"name":"clearPassword","tagname":"method","owner":"android.accounts.AccountManager","id":"method-clearPassword","meta":{}},{"name":"confirmCredentials","tagname":"method","owner":"android.accounts.AccountManager","id":"method-confirmCredentials","meta":{}},{"name":"editProperties","tagname":"method","owner":"android.accounts.AccountManager","id":"method-editProperties","meta":{}},{"name":"finishSession","tagname":"method","owner":"android.accounts.AccountManager","id":"method-finishSession","meta":{}},{"name":"get","tagname":"method","owner":"android.accounts.AccountManager","id":"method-get","meta":{}},{"name":"getAccountVisibility","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAccountVisibility","meta":{}},{"name":"getAccounts","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAccounts","meta":{}},{"name":"getAccountsAndVisibilityForPackage","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAccountsAndVisibilityForPackage","meta":{}},{"name":"getAccountsByType","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAccountsByType","meta":{}},{"name":"getAccountsByTypeAndFeatures","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAccountsByTypeAndFeatures","meta":{}},{"name":"getAccountsByTypeForPackage","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAccountsByTypeForPackage","meta":{}},{"name":"getAccountsForPackage","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAccountsForPackage","meta":{}},{"name":"getAuthToken","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAuthToken","meta":{}},{"name":"getAuthTokenByFeatures","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAuthTokenByFeatures","meta":{}},{"name":"getAuthenticatorTypes","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getAuthenticatorTypes","meta":{}},{"name":"getPackagesAndVisibilityForAccount","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getPackagesAndVisibilityForAccount","meta":{}},{"name":"getPassword","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getPassword","meta":{}},{"name":"getPreviousName","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getPreviousName","meta":{}},{"name":"getSharedAccounts","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getSharedAccounts","meta":{}},{"name":"getUserData","tagname":"method","owner":"android.accounts.AccountManager","id":"method-getUserData","meta":{}},{"name":"hasFeatures","tagname":"method","owner":"android.accounts.AccountManager","id":"method-hasFeatures","meta":{}},{"name":"invalidateAuthToken","tagname":"method","owner":"android.accounts.AccountManager","id":"method-invalidateAuthToken","meta":{}},{"name":"isCredentialsUpdateSuggested","tagname":"method","owner":"android.accounts.AccountManager","id":"method-isCredentialsUpdateSuggested","meta":{}},{"name":"newChooseAccountIntent","tagname":"method","owner":"android.accounts.AccountManager","id":"method-newChooseAccountIntent","meta":{}},{"name":"notifyAccountAuthenticated","tagname":"method","owner":"android.accounts.AccountManager","id":"method-notifyAccountAuthenticated","meta":{}},{"name":"peekAuthToken","tagname":"method","owner":"android.accounts.AccountManager","id":"method-peekAuthToken","meta":{}},{"name":"removeAccount","tagname":"method","owner":"android.accounts.AccountManager","id":"method-removeAccount","meta":{}},{"name":"removeAccountExplicitly","tagname":"method","owner":"android.accounts.AccountManager","id":"method-removeAccountExplicitly","meta":{}},{"name":"removeOnAccountsUpdatedListener","tagname":"method","owner":"android.accounts.AccountManager","id":"method-removeOnAccountsUpdatedListener","meta":{}},{"name":"removeSharedAccount","tagname":"method","owner":"android.accounts.AccountManager","id":"method-removeSharedAccount","meta":{}},{"name":"renameAccount","tagname":"method","owner":"android.accounts.AccountManager","id":"method-renameAccount","meta":{}},{"name":"setAccountVisibility","tagname":"method","owner":"android.accounts.AccountManager","id":"method-setAccountVisibility","meta":{}},{"name":"setAuthToken","tagname":"method","owner":"android.accounts.AccountManager","id":"method-setAuthToken","meta":{}},{"name":"setPassword","tagname":"method","owner":"android.accounts.AccountManager","id":"method-setPassword","meta":{}},{"name":"setUserData","tagname":"method","owner":"android.accounts.AccountManager","id":"method-setUserData","meta":{}},{"name":"someUserHasAccount","tagname":"method","owner":"android.accounts.AccountManager","id":"method-someUserHasAccount","meta":{}},{"name":"startAddAccountSession","tagname":"method","owner":"android.accounts.AccountManager","id":"method-startAddAccountSession","meta":{}},{"name":"startUpdateCredentialsSession","tagname":"method","owner":"android.accounts.AccountManager","id":"method-startUpdateCredentialsSession","meta":{}},{"name":"updateCredentials","tagname":"method","owner":"android.accounts.AccountManager","id":"method-updateCredentials","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.accounts.AccountManager","short_doc":"This class provides access to a centralized registry of the user's\n online accounts. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.accounts.AccountManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AccountManager.html#android-accounts-AccountManager' target='_blank'>AccountManager.js</a></div></pre><div class='doc-contents'><p>This class provides access to a centralized registry of the user's\n online accounts.  The user enters credentials (username and password) once\n per account, granting applications access to online resources with\n \"one-click\" approval.</p>\n\n<p> <p>Different online services have different ways of handling accounts and\n authentication, so the account manager uses pluggable <em>authenticator</em>\n modules for different <em>account types</em>.  Authenticators (which may be\n written by third parties) handle the actual details of validating account\n credentials and storing account information.  For example, Google, Facebook,\n and Microsoft Exchange each have their own authenticator.</p>\n\n<p> <p>Many servers support some notion of an <em>authentication token</em>,\n which can be used to authenticate a request to the server without sending\n the user's actual password.  (Auth tokens are normally created with a\n separate request which does include the user's credentials.)  AccountManager\n can generate auth tokens for applications, so the application doesn't need to\n handle passwords directly.  Auth tokens are normally reusable and cached by\n AccountManager, but must be refreshed periodically.  It's the responsibility\n of applications to <em>invalidate</em> auth tokens when they stop working so\n the AccountManager knows it needs to regenerate them.</p>\n\n<p> <p>Applications accessing a server normally go through these steps:</p>\n\n<p> <ul>\n <li>Get an instance of AccountManager using <a href=\"#!/api/android.accounts.AccountManager-method-get\" rel=\"android.accounts.AccountManager-method-get\" class=\"docClass\">get</a>(Context).</li></ul></p>\n\n<p> <li>List the available accounts using <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a> or\n <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByTypeAndFeatures\" rel=\"android.accounts.AccountManager-method-getAccountsByTypeAndFeatures\" class=\"docClass\">getAccountsByTypeAndFeatures</a>.  Normally applications will only\n be interested in accounts with one particular <em>type</em>, which\n identifies the authenticator.  Account <em>features</em> are used to\n identify particular account subtypes and capabilities.  Both the account\n type and features are authenticator-specific strings, and must be known by\n the application in coordination with its preferred authenticators.</li></p>\n\n<p> <li>Select one or more of the available accounts, possibly by asking the\n user for their preference.  If no suitable accounts are available,\n <a href=\"#!/api/android.accounts.AccountManager-method-addAccount\" rel=\"android.accounts.AccountManager-method-addAccount\" class=\"docClass\">addAccount</a> may be called to prompt the user to create an\n account of the appropriate type.</li></p>\n\n<p> <li><b>Important:</b> If the application is using a previously remembered\n account selection, it must make sure the account is still in the list\n of accounts returned by <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a>.  Requesting an auth token\n for an account no longer on the device results in an undefined failure.</li></p>\n\n<p> <li>Request an auth token for the selected account(s) using one of the\n <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a> methods or related helpers.  Refer to the description\n of each method for exact usage and error handling details.</li></p>\n\n<p> <li>Make the request using the auth token.  The form of the auth token,\n the format of the request, and the protocol used are all specific to the\n service you are accessing.  The application may use whatever network and\n protocol libraries are useful.</li></p>\n\n<p> <li><b>Important:</b> If the request fails with an authentication error,\n it could be that a cached auth token is stale and no longer honored by\n the server.  The application must call <a href=\"#!/api/android.accounts.AccountManager-method-invalidateAuthToken\" rel=\"android.accounts.AccountManager-method-invalidateAuthToken\" class=\"docClass\">invalidateAuthToken</a> to remove\n the token from the cache, otherwise requests will continue failing!  After\n invalidating the auth token, immediately go back to the \"Request an auth\n token\" step above.  If the process fails the second time, then it can be\n treated as a \"genuine\" authentication failure and the user notified or other\n appropriate actions taken.\n </li></p>\n\n<p> <p>Some AccountManager methods may need to interact with the user to\n prompt for credentials, present options, or ask the user to add an account.\n The caller may choose whether to allow AccountManager to directly launch the\n necessary user interface and wait for the user, or to return an Intent which\n the caller may use to launch the interface, or (in some cases) to install a\n notification which the user can select at any time to launch the interface.\n To have AccountManager launch the interface directly, the caller must supply\n the current foreground Activity context.</p>\n\n<p> <p>Many AccountManager methods take <a href=\"#!/api/android.accounts.AccountManagerCallback\" rel=\"android.accounts.AccountManagerCallback\" class=\"docClass\">android.accounts.AccountManagerCallback</a> and\n Handler as parameters.  These methods return immediately and\n run asynchronously. If a callback is provided then\n <a href=\"#!/api/android.accounts.AccountManagerCallback-method-run\" rel=\"android.accounts.AccountManagerCallback-method-run\" class=\"docClass\">android.accounts.AccountManagerCallback.run</a> will be invoked on the Handler's\n thread when the request completes, successfully or not.\n The result is retrieved by calling android.accounts.AccountManagerFuture.getResult()\n on the <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> returned by the method (and also passed\n to the callback).  This method waits for the operation to complete (if\n necessary) and either returns the result or throws an exception if an error\n occurred during the operation.  To make the request synchronously, call\n android.accounts.AccountManagerFuture.getResult() immediately on receiving the\n future from the method; no callback need be supplied.</p>\n\n<p> <p>Requests which may block, including\n android.accounts.AccountManagerFuture.getResult(), must never be called on\n the application's main event thread.  These operations throw\n IllegalStateException if they are used on the main thread.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_ACCOUNT_REMOVED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ACTION_ACCOUNT_REMOVED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ACTION_ACCOUNT_REMOVED' class='name expandable'>ACTION_ACCOUNT_REMOVED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action sent as a broadcast Intent by the AccountsService when any account is removed\nor renamed. ...</div><div class='long'><p>Action sent as a broadcast Intent by the AccountsService when any account is removed\nor renamed. Only applications which were able to see the account will receive the intent.\nIntent extra will include the following fields:</p>\n\n<ul>\n<li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> - the name of the removed account\n<li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a> - the type of the account\n</li></li></ul>\n\n<p>Defaults to: <code>&quot;android.accounts.action.ACCOUNT_REMOVED&quot;</code></p></div></div></div><div id='property-ACTION_AUTHENTICATOR_INTENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ACTION_AUTHENTICATOR_INTENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ACTION_AUTHENTICATOR_INTENT' class='name expandable'>ACTION_AUTHENTICATOR_INTENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;android.accounts.AccountAuthenticator&quot;</code></p></div></div></div><div id='property-AUTHENTICATOR_ATTRIBUTES_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-AUTHENTICATOR_ATTRIBUTES_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-AUTHENTICATOR_ATTRIBUTES_NAME' class='name expandable'>AUTHENTICATOR_ATTRIBUTES_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;account-authenticator&quot;</code></p></div></div></div><div id='property-AUTHENTICATOR_META_DATA_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-AUTHENTICATOR_META_DATA_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-AUTHENTICATOR_META_DATA_NAME' class='name expandable'>AUTHENTICATOR_META_DATA_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;android.accounts.AccountAuthenticator&quot;</code></p></div></div></div><div id='property-ERROR_CODE_BAD_ARGUMENTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_BAD_ARGUMENTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_BAD_ARGUMENTS' class='name expandable'>ERROR_CODE_BAD_ARGUMENTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;7&quot;</code></p></div></div></div><div id='property-ERROR_CODE_BAD_AUTHENTICATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_BAD_AUTHENTICATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_BAD_AUTHENTICATION' class='name expandable'>ERROR_CODE_BAD_AUTHENTICATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;9&quot;</code></p></div></div></div><div id='property-ERROR_CODE_BAD_REQUEST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_BAD_REQUEST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_BAD_REQUEST' class='name expandable'>ERROR_CODE_BAD_REQUEST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-ERROR_CODE_CANCELED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_CANCELED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_CANCELED' class='name expandable'>ERROR_CODE_CANCELED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-ERROR_CODE_INVALID_RESPONSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_INVALID_RESPONSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_INVALID_RESPONSE' class='name expandable'>ERROR_CODE_INVALID_RESPONSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-ERROR_CODE_NETWORK_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_NETWORK_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_NETWORK_ERROR' class='name expandable'>ERROR_CODE_NETWORK_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-ERROR_CODE_REMOTE_EXCEPTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_REMOTE_EXCEPTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_REMOTE_EXCEPTION' class='name expandable'>ERROR_CODE_REMOTE_EXCEPTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-ERROR_CODE_UNSUPPORTED_OPERATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-ERROR_CODE_UNSUPPORTED_OPERATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-ERROR_CODE_UNSUPPORTED_OPERATION' class='name expandable'>ERROR_CODE_UNSUPPORTED_OPERATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-KEY_ACCOUNTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ACCOUNTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ACCOUNTS' class='name expandable'>KEY_ACCOUNTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;accounts&quot;</code></p></div></div></div><div id='property-KEY_ACCOUNT_AUTHENTICATOR_RESPONSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ACCOUNT_AUTHENTICATOR_RESPONSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_AUTHENTICATOR_RESPONSE' class='name expandable'>KEY_ACCOUNT_AUTHENTICATOR_RESPONSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;accountAuthenticatorResponse&quot;</code></p></div></div></div><div id='property-KEY_ACCOUNT_MANAGER_RESPONSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ACCOUNT_MANAGER_RESPONSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_MANAGER_RESPONSE' class='name expandable'>KEY_ACCOUNT_MANAGER_RESPONSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;accountManagerResponse&quot;</code></p></div></div></div><div id='property-KEY_ACCOUNT_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ACCOUNT_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME' class='name expandable'>KEY_ACCOUNT_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used for the String account name in results\nfrom methods which return information about a particular account. ...</div><div class='long'><p>Bundle key used for the String account name in results\nfrom methods which return information about a particular account.</p>\n<p>Defaults to: <code>&quot;authAccount&quot;</code></p></div></div></div><div id='property-KEY_ACCOUNT_SESSION_BUNDLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE' class='name expandable'>KEY_ACCOUNT_SESSION_BUNDLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used for a Bundle in result from\nstartAddAccountSession and friends which returns session data\nfor install...</div><div class='long'><p>Bundle key used for a Bundle in result from\n<a href=\"#!/api/android.accounts.AccountManager-method-startAddAccountSession\" rel=\"android.accounts.AccountManager-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> and friends which returns session data\nfor installing an account later.</p>\n<p>Defaults to: <code>&quot;accountSessionBundle&quot;</code></p></div></div></div><div id='property-KEY_ACCOUNT_STATUS_TOKEN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN' class='name expandable'>KEY_ACCOUNT_STATUS_TOKEN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used for the String account status token in result\nfrom startAddAccountSession and friends which returns\ni...</div><div class='long'><p>Bundle key used for the String account status token in result\nfrom <a href=\"#!/api/android.accounts.AccountManager-method-startAddAccountSession\" rel=\"android.accounts.AccountManager-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> and friends which returns\ninformation about a particular account.</p>\n<p>Defaults to: <code>&quot;accountStatusToken&quot;</code></p></div></div></div><div id='property-KEY_ACCOUNT_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ACCOUNT_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE' class='name expandable'>KEY_ACCOUNT_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used for the String account type in results\nfrom methods which return information about a particular account. ...</div><div class='long'><p>Bundle key used for the String account type in results\nfrom methods which return information about a particular account.</p>\n<p>Defaults to: <code>&quot;accountType&quot;</code></p></div></div></div><div id='property-KEY_ANDROID_PACKAGE_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ANDROID_PACKAGE_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ANDROID_PACKAGE_NAME' class='name expandable'>KEY_ANDROID_PACKAGE_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Android package of the caller will be set in the options bundle by the\nandroid.accounts.AccountManager and will b...</div><div class='long'><p>The Android package of the caller will be set in the options bundle by the\n<a href=\"#!/api/android.accounts.AccountManager\" rel=\"android.accounts.AccountManager\" class=\"docClass\">android.accounts.AccountManager</a> and will be passed to the AccountManagerService and\nto the AccountAuthenticators. The uid of the caller will be known by the\nAccountManagerService as well as the AccountAuthenticators so they will be able to\nverify that the package is consistent with the uid (a uid might be shared by many\npackages).</p>\n<p>Defaults to: <code>&quot;androidPackageName&quot;</code></p></div></div></div><div id='property-KEY_AUTHENTICATOR_TYPES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_AUTHENTICATOR_TYPES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_AUTHENTICATOR_TYPES' class='name expandable'>KEY_AUTHENTICATOR_TYPES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;authenticator_types&quot;</code></p></div></div></div><div id='property-KEY_AUTHTOKEN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_AUTHTOKEN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_AUTHTOKEN' class='name expandable'>KEY_AUTHTOKEN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used for the auth token value in results\nfrom getAuthToken and friends. ...</div><div class='long'><p>Bundle key used for the auth token value in results\nfrom <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a> and friends.</p>\n<p>Defaults to: <code>&quot;authtoken&quot;</code></p></div></div></div><div id='property-KEY_AUTH_FAILED_MESSAGE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_AUTH_FAILED_MESSAGE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_AUTH_FAILED_MESSAGE' class='name expandable'>KEY_AUTH_FAILED_MESSAGE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;authFailedMessage&quot;</code></p></div></div></div><div id='property-KEY_AUTH_TOKEN_LABEL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_AUTH_TOKEN_LABEL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_AUTH_TOKEN_LABEL' class='name expandable'>KEY_AUTH_TOKEN_LABEL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;authTokenLabelKey&quot;</code></p></div></div></div><div id='property-KEY_BOOLEAN_RESULT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_BOOLEAN_RESULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_BOOLEAN_RESULT' class='name expandable'>KEY_BOOLEAN_RESULT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;booleanResult&quot;</code></p></div></div></div><div id='property-KEY_CALLER_PID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_CALLER_PID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_CALLER_PID' class='name expandable'>KEY_CALLER_PID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The process id of caller app. ...</div><div class='long'><p>The process id of caller app.</p>\n<p>Defaults to: <code>&quot;callerPid&quot;</code></p></div></div></div><div id='property-KEY_CALLER_UID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_CALLER_UID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_CALLER_UID' class='name expandable'>KEY_CALLER_UID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The UID of caller app. ...</div><div class='long'><p>The UID of caller app.</p>\n<p>Defaults to: <code>&quot;callerUid&quot;</code></p></div></div></div><div id='property-KEY_ERROR_CODE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ERROR_CODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ERROR_CODE' class='name expandable'>KEY_ERROR_CODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;errorCode&quot;</code></p></div></div></div><div id='property-KEY_ERROR_MESSAGE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_ERROR_MESSAGE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_ERROR_MESSAGE' class='name expandable'>KEY_ERROR_MESSAGE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;errorMessage&quot;</code></p></div></div></div><div id='property-KEY_INTENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_INTENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_INTENT' class='name expandable'>KEY_INTENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used for an Intent in results from methods that\nmay require the caller to interact with the user. ...</div><div class='long'><p>Bundle key used for an Intent in results from methods that\nmay require the caller to interact with the user.  The Intent can\nbe used to start the corresponding user interface activity.</p>\n<p>Defaults to: <code>&quot;intent&quot;</code></p></div></div></div><div id='property-KEY_LAST_AUTHENTICATED_TIME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_LAST_AUTHENTICATED_TIME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_LAST_AUTHENTICATED_TIME' class='name expandable'>KEY_LAST_AUTHENTICATED_TIME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used to supply the last time the credentials of the account\nwere authenticated successfully. ...</div><div class='long'><p>Bundle key used to supply the last time the credentials of the account\nwere authenticated successfully. Time is specified in milliseconds since\nepoch. Associated time is updated on successful authentication of account\non adding account, confirming credentials, or updating credentials.</p>\n<p>Defaults to: <code>&quot;lastAuthenticatedTime&quot;</code></p></div></div></div><div id='property-KEY_PASSWORD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_PASSWORD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_PASSWORD' class='name expandable'>KEY_PASSWORD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bundle key used to supply the password directly in options to\nconfirmCredentials, rather than prompting the user with...</div><div class='long'><p>Bundle key used to supply the password directly in options to\n<a href=\"#!/api/android.accounts.AccountManager-method-confirmCredentials\" rel=\"android.accounts.AccountManager-method-confirmCredentials\" class=\"docClass\">confirmCredentials</a>, rather than prompting the user with\nthe standard password prompt.</p>\n<p>Defaults to: <code>&quot;password&quot;</code></p></div></div></div><div id='property-KEY_USERDATA' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-KEY_USERDATA' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-KEY_USERDATA' class='name expandable'>KEY_USERDATA</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;userdata&quot;</code></p></div></div></div><div id='property-LOGIN_ACCOUNTS_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-LOGIN_ACCOUNTS_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-LOGIN_ACCOUNTS_CHANGED_ACTION' class='name expandable'>LOGIN_ACCOUNTS_CHANGED_ACTION</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Action sent as a broadcast Intent by the AccountsService when accounts are added, accounts\nare removed, or an account...</div><div class='long'><p>Action sent as a broadcast Intent by the AccountsService when accounts are added, accounts\nare removed, or an account's credentials (saved password, etc) are changed.</p>\n\n<p>@see <a href=\"#!/api/android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" rel=\"android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" class=\"docClass\">addOnAccountsUpdatedListener</a>\n@see <a href=\"#!/api/android.accounts.AccountManager-property-ACTION_ACCOUNT_REMOVED\" rel=\"android.accounts.AccountManager-property-ACTION_ACCOUNT_REMOVED\" class=\"docClass\">ACTION_ACCOUNT_REMOVED</a></p>\n<p>Defaults to: <code>&quot;android.accounts.LOGIN_ACCOUNTS_CHANGED&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>use <a href=\"#!/api/android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" rel=\"android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" class=\"docClass\">addOnAccountsUpdatedListener</a> to get account updates in runtime.</p>\n\n        </div>\n</div></div></div><div id='property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE' class='name expandable'>PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Key to set default visibility for applications which don't satisfy conditions in\nPACKAGE_NAME_KEY_LEGACY_VISIBLE. ...</div><div class='long'><p>Key to set default visibility for applications which don't satisfy conditions in\n<a href=\"#!/api/android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE\" rel=\"android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE\" class=\"docClass\">PACKAGE_NAME_KEY_LEGACY_VISIBLE</a>. If the value was not set by authenticator\n<a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_NOT_VISIBLE</a> is used.</p>\n<p>Defaults to: <code>&quot;android:accounts:key_legacy_not_visible&quot;</code></p></div></div></div><div id='property-PACKAGE_NAME_KEY_LEGACY_VISIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE' class='name expandable'>PACKAGE_NAME_KEY_LEGACY_VISIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Key to set visibility for applications which satisfy one of the following conditions:\n\n\nTarget API level below androi...</div><div class='long'><p>Key to set visibility for applications which satisfy one of the following conditions:</p>\n\n<ul>\n<li>Target API level below android.os.Build.VERSION_CODES.O and have\ndeprecated android.Manifest.permission.GET_ACCOUNTS permission.\n</li>\n<li> Have android.Manifest.permission.GET_ACCOUNTS_PRIVILEGED permission. </li>\n<li> Have the same signature as authenticator. </li>\n<li> Have android.Manifest.permission.READ_CONTACTS permission and\naccount type may be associated with contacts data - (verified by\nandroid.Manifest.permission.WRITE_CONTACTS permission check for the authenticator).\n</li>\n</ul>\n\n\n<p>See <a href=\"#!/api/android.accounts.AccountManager-method-getAccountVisibility\" rel=\"android.accounts.AccountManager-method-getAccountVisibility\" class=\"docClass\">getAccountVisibility</a>. If the value was not set by authenticator\n<a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_VISIBLE</a> is used.</p>\n<p>Defaults to: <code>&quot;android:accounts:key_legacy_visible&quot;</code></p></div></div></div><div id='property-VISIBILITY_NOT_VISIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-VISIBILITY_NOT_VISIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-VISIBILITY_NOT_VISIBLE' class='name expandable'>VISIBILITY_NOT_VISIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Account is not visible to given application and only authenticator can grant visibility. ...</div><div class='long'><p>Account is not visible to given application and only authenticator can grant visibility.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-VISIBILITY_UNDEFINED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-VISIBILITY_UNDEFINED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-VISIBILITY_UNDEFINED' class='name expandable'>VISIBILITY_UNDEFINED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Account visibility was not set. ...</div><div class='long'><p>Account visibility was not set. Default visibility value will be used.\nSee <a href=\"#!/api/android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE\" rel=\"android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE\" class=\"docClass\">PACKAGE_NAME_KEY_LEGACY_VISIBLE</a>, <a href=\"#!/api/android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE\" rel=\"android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE\" class=\"docClass\">PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE</a></p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-VISIBILITY_USER_MANAGED_NOT_VISIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE' class='name expandable'>VISIBILITY_USER_MANAGED_NOT_VISIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Account is not visible to given application, but user can reveal it, for example, using\nList, String[], String, Strin...</div><div class='long'><p>Account is not visible to given application, but user can reveal it, for example, using\nList, String[], String, String, String[], Bundle)</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-VISIBILITY_USER_MANAGED_VISIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE' class='name expandable'>VISIBILITY_USER_MANAGED_VISIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Account is visible to given application, but user can revoke visibility. ...</div><div class='long'><p>Account is visible to given application, but user can revoke visibility.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-VISIBILITY_VISIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-property-VISIBILITY_VISIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-property-VISIBILITY_VISIBLE' class='name expandable'>VISIBILITY_VISIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Account is always visible to given application and only authenticator can revoke visibility. ...</div><div class='long'><p>Account is always visible to given application and only authenticator can revoke visibility.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addAccount' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-addAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-addAccount' class='name expandable'>addAccount</a>( <span class='pre'>accountType, authTokenType, requiredFeatures, addAccountOptions, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Asks the user to add an account of a specified type. ...</div><div class='long'><p>Asks the user to add an account of a specified type.  The authenticator\n for this account type processes this request with the appropriate user\n interface.  If the user does elect to create a new account, the account\n name is returned.</p>\n\n<p> <p>This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n MANAGE_ACCOUNTS permission is needed for those platforms. See docs for\n this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>The type of account to add; must not be null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The type of auth token (see <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a>)\n     this account will need to be able to generate, null for none</p>\n</div></li><li><span class='pre'>requiredFeatures</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The features (see <a href=\"#!/api/android.accounts.AccountManager-method-hasFeatures\" rel=\"android.accounts.AccountManager-method-hasFeatures\" class=\"docClass\">hasFeatures</a>) this\n     account must have, null for none</p>\n</div></li><li><span class='pre'>addAccountOptions</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options for the request,\n     may be null or empty</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n     authenticator-defined sub-Activity to prompt the user to create an\n     account; used only to call startActivity(); if null, the prompt\n     will not be launched directly, but the necessary Intent\n     will be returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes,\n     null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread,\n     null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle with\n     these fields if activity was specified and an account was created:\n <ul>\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> - the name of the account created\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a> - the type of the account\n </li></li></ul></p>\n\n<p> If no activity was specified, the returned Bundle contains only\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent needed to launch the\n actual account creation process.  If an error occurred,\n AccountManagerFuture.getResult() throws:\n <ul>\n <li> AuthenticatorException if no authenticator was registered for\n      this account type or the authenticator failed to respond\n <li> OperationCanceledException if the operation was canceled for\n      any reason, including the user canceling the creation process or adding accounts\n      (of this type) has been disabled by policy\n <li> IOException if the authenticator experienced an I/O problem\n      creating a new account, usually because of network trouble\n </li></li></li></ul></p>\n</div></li></ul></div></div></div><div id='method-addAccountExplicitly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-addAccountExplicitly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-addAccountExplicitly' class='name expandable'>addAccountExplicitly</a>( <span class='pre'>account, password, extras, visibility</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an account directly to the AccountManager. ...</div><div class='long'><p>Adds an account directly to the AccountManager. Additionally it specifies Account visibility\n for given list of packages.\n <p>\n Normally used by sign-up wizards associated with authenticators, not directly by\n applications.\n <p>\n Calling this method does not update the last authenticated timestamp, referred by\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_LAST_AUTHENTICATED_TIME\" rel=\"android.accounts.AccountManager-property-KEY_LAST_AUTHENTICATED_TIME\" class=\"docClass\">KEY_LAST_AUTHENTICATED_TIME</a>. To update it, call\n <a href=\"#!/api/android.accounts.AccountManager-method-notifyAccountAuthenticated\" rel=\"android.accounts.AccountManager-method-notifyAccountAuthenticated\" class=\"docClass\">notifyAccountAuthenticated</a>(Account) after getting success.\n <p>\n It is safe to call this method from the main thread.\n <p>\n This method requires the caller to have a signature match with the authenticator that owns\n the specified account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The Account to add</p>\n</div></li><li><span class='pre'>password</span> : String<div class='sub-desc'><p>The password to associate with the account, null for none</p>\n</div></li><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>String values to use for the account's userdata, null for none</p>\n</div></li><li><span class='pre'>visibility</span> : Object {java.util.Map}<div class='sub-desc'><p>Map from packageName to visibility values which will be set before account\n        is added. See <a href=\"#!/api/android.accounts.AccountManager-method-getAccountVisibility\" rel=\"android.accounts.AccountManager-method-getAccountVisibility\" class=\"docClass\">getAccountVisibility</a> for possible values.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the account was successfully added, false if the account already exists, the\n         account is null, or another error occurs.</p>\n</div></li></ul></div></div></div><div id='method-addOnAccountsUpdatedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-addOnAccountsUpdatedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-addOnAccountsUpdatedListener' class='name expandable'>addOnAccountsUpdatedListener</a>( <span class='pre'>listener, handler, updateImmediately, accountTypes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an android.accounts.OnAccountsUpdateListener to this instance of the android.accounts.AccountManager. ...</div><div class='long'><p>Adds an <a href=\"#!/api/android.accounts.OnAccountsUpdateListener\" rel=\"android.accounts.OnAccountsUpdateListener\" class=\"docClass\">android.accounts.OnAccountsUpdateListener</a> to this instance of the <a href=\"#!/api/android.accounts.AccountManager\" rel=\"android.accounts.AccountManager\" class=\"docClass\">android.accounts.AccountManager</a>. This\n listener will be notified whenever user or AbstractAcccountAuthenticator made changes to\n accounts of given types related to the caller -\n either list of accounts returned by <a href=\"#!/api/android.accounts.AccountManager-method-getAccounts\" rel=\"android.accounts.AccountManager-method-getAccounts\" class=\"docClass\">getAccounts</a>()\n was changed, or new account was added for which user can grant access to the caller.\n <p>\n As long as this listener is present, the AccountManager instance will not be\n garbage-collected, and neither will the Context used to retrieve it, which may be a\n large Activity instance. To avoid memory leaks, you must remove this listener before then.\n Normally listeners are added in an Activity or Service's Activity.onCreate and\n removed in Activity.onDestroy.\n <p>\n It is safe to call this method from the main thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {OnAccountsUpdateListener}<div class='sub-desc'><p>The listener to send notifications to</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the thread to use for notifications, null for the\n        main thread</p>\n</div></li><li><span class='pre'>updateImmediately</span> : Boolean<div class='sub-desc'><p>If true, the listener will be invoked (on the handler thread) right\n        away with the current account list</p>\n</div></li><li><span class='pre'>accountTypes</span> : Object {java.lang.String[]}<div class='sub-desc'><p>If set, only changes to accounts of given types will be reported.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if listener is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if listener was already added</p>\n</div></li></ul></div></div></div><div id='method-blockingGetAuthToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-blockingGetAuthToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-blockingGetAuthToken' class='name expandable'>blockingGetAuthToken</a>( <span class='pre'>account, authTokenType, notifyAuthFailure</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This convenience helper synchronously gets an auth token with\n String, boolean, android.accounts.AccountManagerCallba...</div><div class='long'><p>This convenience helper synchronously gets an auth token with\n String, boolean, android.accounts.AccountManagerCallback, Handler).</p>\n\n<p> <p>This method may block while a network request completes, and must\n never be made from the main thread.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n USE_CREDENTIALS permission is needed for those platforms. See docs for\n this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to fetch an auth token for</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The auth token type, see <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken()</a></p>\n</div></li><li><span class='pre'>notifyAuthFailure</span> : Boolean<div class='sub-desc'><p>If true, display a notification and return null\n     if authentication fails; if false, prompt and wait for the user to\n     re-enter correct credentials before returning</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>An auth token of the specified type for this account, or null\n     if authentication fails or none can be fetched.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticatorException if the authenticator failed to respond</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>OperationCanceledException if the request was canceled for any\n     reason, including the user canceling a credential request</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>java.io.IOException if the authenticator experienced an I/O problem\n     creating a new auth token, usually because of network trouble</p>\n</div></li></ul></div></div></div><div id='method-clearPassword' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-clearPassword' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-clearPassword' class='name expandable'>clearPassword</a>( <span class='pre'>account</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Forgets a saved password. ...</div><div class='long'><p>Forgets a saved password.  This erases the local copy of the password;\n it does not change the user's account password on the server.\n Has the same effect as setPassword(account, null) but requires fewer\n permissions, and may be used by applications or management interfaces\n to \"sign out\" from an account.</p>\n\n<p> <p>This method only successfully clear the account's password when the\n caller has the same signature as the authenticator that owns the\n specified account. Otherwise, this method will silently fail.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n MANAGE_ACCOUNTS permission is needed for those platforms. See docs for\n this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account whose password to clear</p>\n</div></li></ul></div></div></div><div id='method-confirmCredentials' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-confirmCredentials' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-confirmCredentials' class='name expandable'>confirmCredentials</a>( <span class='pre'>account, options, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Confirms that the user knows the password for an account to make extra\n sure they are the owner of the account. ...</div><div class='long'><p>Confirms that the user knows the password for an account to make extra\n sure they are the owner of the account.  The user-entered password can\n be supplied directly, otherwise the authenticator for this account type\n prompts the user with the appropriate interface.  This method is\n intended for applications which want extra assurance; for example, the\n phone lock screen uses this to let the user unlock the phone with an\n account password if they forget the lock pattern.</p>\n\n<p> <p>If the user-entered password matches a saved password for this\n account, the request is considered valid; otherwise the authenticator\n verifies the password (usually by contacting the server).</p>\n\n<p> <p>This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n MANAGE_ACCOUNTS permission is needed for those platforms. See docs\n for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to confirm password knowledge for</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options for the request;\n     if the <a href=\"#!/api/android.accounts.AccountManager-property-KEY_PASSWORD\" rel=\"android.accounts.AccountManager-property-KEY_PASSWORD\" class=\"docClass\">KEY_PASSWORD</a> string field is present, the\n     authenticator may use it directly rather than prompting the user;\n     may be null or empty</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n     authenticator-defined sub-Activity to prompt the user to enter a\n     password; used only to call startActivity(); if null, the prompt\n     will not be launched directly, but the necessary Intent\n     will be returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes,\n     null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread,\n     null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle\n     with these fields if activity or password was supplied and\n     the account was successfully verified:\n <ul>\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> - the name of the account verified\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a> - the type of the account\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_BOOLEAN_RESULT\" rel=\"android.accounts.AccountManager-property-KEY_BOOLEAN_RESULT\" class=\"docClass\">KEY_BOOLEAN_RESULT</a> - true to indicate success\n </li></li></li></ul></p>\n\n<p> If no activity or password was specified, the returned Bundle contains\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent needed to launch the\n password prompt.</p>\n\n<p> <p>Also the returning Bundle may contain <a href=\"#!/api/android.accounts.AccountManager-property-KEY_LAST_AUTHENTICATED_TIME\" rel=\"android.accounts.AccountManager-property-KEY_LAST_AUTHENTICATED_TIME\" class=\"docClass\">KEY_LAST_AUTHENTICATED_TIME</a> indicating the last time the\n credential was validated/created.</p>\n\n<p> If an error occurred,AccountManagerFuture.getResult() throws:\n <ul>\n <li> AuthenticatorException if the authenticator failed to respond\n <li> OperationCanceledException if the operation was canceled for\n      any reason, including the user canceling the password prompt\n <li> IOException if the authenticator experienced an I/O problem\n      verifying the password, usually because of network trouble\n </li></li></li></ul></p>\n</div></li></ul></div></div></div><div id='method-editProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-editProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-editProperties' class='name expandable'>editProperties</a>( <span class='pre'>accountType, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Offers the user an opportunity to change an authenticator's settings. ...</div><div class='long'><p>Offers the user an opportunity to change an authenticator's settings.\n These properties are for the authenticator in general, not a particular\n account.  Not all authenticators support this method.</p>\n\n<p> <p>This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.</p>\n\n<p> <p>This method requires the caller to have the same signature as the\n authenticator associated with the specified account type.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n MANAGE_ACCOUNTS permission is needed for those platforms. See docs\n for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>The account type associated with the authenticator\n     to adjust</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n     authenticator-defined sub-Activity to adjust authenticator settings;\n     used only to call startActivity(); if null, the settings dialog will\n     not be launched directly, but the necessary Intent will be\n     returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes,\n     null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread,\n     null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle\n     which is empty if properties were edited successfully, or\n     if no activity was specified, contains only <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a>\n     needed to launch the authenticator's settings dialog.\n     If an error occurred, AccountManagerFuture.getResult()\n     throws:\n <ul>\n <li> AuthenticatorException if no authenticator was registered for\n      this account type or the authenticator failed to respond\n <li> OperationCanceledException if the operation was canceled for\n      any reason, including the user canceling the settings dialog\n <li> IOException if the authenticator experienced an I/O problem\n      updating settings, usually because of network trouble\n </li></li></li></ul></p>\n</div></li></ul></div></div></div><div id='method-finishSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-finishSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-finishSession' class='name expandable'>finishSession</a>( <span class='pre'>sessionBundle, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finishes the session started by startAddAccountSession or\n startUpdateCredentialsSession. ...</div><div class='long'><p>Finishes the session started by <a href=\"#!/api/android.accounts.AccountManager-method-startAddAccountSession\" rel=\"android.accounts.AccountManager-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> or\n <a href=\"#!/api/android.accounts.AccountManager-method-startUpdateCredentialsSession\" rel=\"android.accounts.AccountManager-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a>. This will either add the account\n to AccountManager or update the local credentials stored.\n <p>\n This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sessionBundle</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle created by <a href=\"#!/api/android.accounts.AccountManager-method-startAddAccountSession\" rel=\"android.accounts.AccountManager-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> or\n            <a href=\"#!/api/android.accounts.AccountManager-method-startUpdateCredentialsSession\" rel=\"android.accounts.AccountManager-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a></p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n            authenticator-defined sub-Activity to prompt the user to\n            create an account or reauthenticate existing account; used\n            only to call startActivity(); if null, the prompt will not\n            be launched directly, but the necessary Intent will\n            be returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for\n            no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for\n            the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle with\n         these fields if an activity was supplied and an account was added\n         to device or local credentials were updated::\n         <ul>\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> - the name of the account created\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a> - the type of the account\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN\" class=\"docClass\">KEY_ACCOUNT_STATUS_TOKEN</a> - optional, token to check\n         status of the account\n         </li></li></li></ul>\n         If no activity was specified and additional information is needed\n         from user, the returned Bundle may contains only\n         <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent needed to launch the\n         actual account creation process. If an error occurred,\n         AccountManagerFuture.getResult() throws:\n         <ul>\n         <li>AuthenticatorException if no authenticator was\n         registered for this account type or the authenticator failed to\n         respond\n         <li>OperationCanceledException if the operation was\n         canceled for any reason, including the user canceling the\n         creation process or adding accounts (of this type) has been\n         disabled by policy\n         <li>IOException if the authenticator experienced an I/O\n         problem creating a new account, usually because of network\n         trouble\n         </li></li></li></ul>\n@see <a href=\"#!/api/android.accounts.AccountManager-method-startAddAccountSession\" rel=\"android.accounts.AccountManager-method-startAddAccountSession\" class=\"docClass\">startAddAccountSession</a> and <a href=\"#!/api/android.accounts.AccountManager-method-startUpdateCredentialsSession\" rel=\"android.accounts.AccountManager-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a></p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-get' class='name expandable'>get</a>( <span class='pre'>context</span> ) : Object {android.accounts.AccountManager}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an AccountManager instance associated with a Context. ...</div><div class='long'><p>Gets an AccountManager instance associated with a Context.\n The Context will be used as long as the AccountManager is\n active, so make sure to use a Context whose lifetime is\n commensurate with any listeners registered to\n <a href=\"#!/api/android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" rel=\"android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" class=\"docClass\">addOnAccountsUpdatedListener</a> or similar methods.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p>No permission is required to call this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The Context to use when necessary</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManager}</span><div class='sub-desc'><p>An AccountManager instance</p>\n</div></li></ul></div></div></div><div id='method-getAccountVisibility' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAccountVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAccountVisibility' class='name expandable'>getAccountVisibility</a>( <span class='pre'>account, packageName</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get visibility of certain account for given application. ...</div><div class='long'><p>Get visibility of certain account for given application. Possible returned values are:\n <ul>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_VISIBLE\" class=\"docClass\">VISIBILITY_VISIBLE</a></li>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_VISIBLE</a></li>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_NOT_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_NOT_VISIBLE\" class=\"docClass\">VISIBILITY_NOT_VISIBLE</a>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_NOT_VISIBLE</a></li>\n </li></ul></p>\n\n<p> <p>\n This method requires the caller to have a signature match with the authenticator that owns\n the specified account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>Account to get visibility</p>\n</div></li><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>Package name of the application to get account visibility</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int Visibility of given account.</p>\n</div></li></ul></div></div></div><div id='method-getAccounts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAccounts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAccounts' class='name expandable'>getAccounts</a>( <span class='pre'></span> ) : Object {android.accounts.Account}<span class=\"signature\"></span></div><div class='description'><div class='short'>Lists all accounts visible to the caller regardless of type. ...</div><div class='long'><p>Lists all accounts visible to the caller regardless of type. Equivalent to\n getAccountsByType(null). These accounts may be visible because the user granted access to the\n account, or the AbstractAcccountAuthenticator managing the account did so or because the\n client shares a signature with the managing AbstractAccountAuthenticator.</p>\n\n<p> <p>\n It is safe to call this method from the main thread.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.Account}</span><div class='sub-desc'><p>An array of Account, one for each account. Empty (never null) if no accounts\n         have been added.</p>\n</div></li></ul></div></div></div><div id='method-getAccountsAndVisibilityForPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAccountsAndVisibilityForPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAccountsAndVisibilityForPackage' class='name expandable'>getAccountsAndVisibilityForPackage</a>( <span class='pre'>packageName, accountType</span> ) : Object {java.util.Map}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets all accounts of given type and their visibility for specific package. ...</div><div class='long'><p>Gets all accounts of given type and their visibility for specific package. This method\n requires the caller to have a signature match with the authenticator that manages\n accountType. It is a helper method which combines calls to <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a> by\n authenticator and <a href=\"#!/api/android.accounts.AccountManager-method-getAccountVisibility\" rel=\"android.accounts.AccountManager-method-getAccountVisibility\" class=\"docClass\">getAccountVisibility</a> for every returned account.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>Package name</p>\n</div></li><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>Account type</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Map}</span><div class='sub-desc'><p>Map with visibility for all accounts of given type\n See <a href=\"#!/api/android.accounts.AccountManager-method-getAccountVisibility\" rel=\"android.accounts.AccountManager-method-getAccountVisibility\" class=\"docClass\">getAccountVisibility</a> for possible values</p>\n</div></li></ul></div></div></div><div id='method-getAccountsByType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAccountsByType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAccountsByType' class='name expandable'>getAccountsByType</a>( <span class='pre'>type</span> ) : Object {android.accounts.Account}<span class=\"signature\"></span></div><div class='description'><div class='short'>Lists all accounts of particular type visible to the caller. ...</div><div class='long'><p>Lists all accounts of particular type visible to the caller. These accounts may be visible\n because the user granted access to the account, or the AbstractAcccountAuthenticator managing\n the account did so or because the client shares a signature with the managing\n AbstractAccountAuthenticator.</p>\n\n<p> <p>\n The account type is a string token corresponding to the authenticator and useful domain of\n the account. For example, there are types corresponding to Google and Facebook. The exact\n string token to use will be published somewhere associated with the authenticator in\n question.</p>\n\n<p> <p>\n It is safe to call this method from the main thread.</p>\n\n<p> <p>\n Caller targeting API level android.os.Build.VERSION_CODES.O and above, will get list\n of accounts made visible to it by user\n (see List, String[], String,\n String, String[], Bundle)) or AbstractAcccountAuthenticator\n using <a href=\"#!/api/android.accounts.AccountManager-method-setAccountVisibility\" rel=\"android.accounts.AccountManager-method-setAccountVisibility\" class=\"docClass\">setAccountVisibility</a>.\n android.Manifest.permission.GET_ACCOUNTS permission is not used.</p>\n\n<p> <p>\n Caller targeting API level below android.os.Build.VERSION_CODES.O that have not been\n granted the android.Manifest.permission.GET_ACCOUNTS permission, will only see those\n accounts managed by AbstractAccountAuthenticators whose signature matches the client.</p>\n\n<p> <p>\n <b>NOTE:</b> If targeting your app to work on API level\n android.os.Build.VERSION_CODES.LOLLIPOP_MR1 and before,\n android.Manifest.permission.GET_ACCOUNTS permission is\n needed for those platforms, irrespective of uid or signature match. See docs for this\n function in API level android.os.Build.VERSION_CODES.LOLLIPOP_MR1.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type of accounts to return, null to retrieve all accounts</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.Account}</span><div class='sub-desc'><p>An array of Account, one per matching account. Empty (never null) if no\n         accounts of the specified type have been added.</p>\n</div></li></ul></div></div></div><div id='method-getAccountsByTypeAndFeatures' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAccountsByTypeAndFeatures' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAccountsByTypeAndFeatures' class='name expandable'>getAccountsByTypeAndFeatures</a>( <span class='pre'>type, features, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Lists all accounts of a type which have certain features. ...</div><div class='long'><p>Lists all accounts of a type which have certain features. The account type identifies the\n authenticator (see <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a>). Account features are authenticator-specific\n string tokens identifying boolean account properties (see <a href=\"#!/api/android.accounts.AccountManager-method-hasFeatures\" rel=\"android.accounts.AccountManager-method-hasFeatures\" class=\"docClass\">hasFeatures</a>).</p>\n\n<p> <p>\n Unlike <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a>, this method calls the authenticator, which may contact the\n server or do other work to check account features, so the method returns an\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a>.</p>\n\n<p> <p>\n This method may be called from any thread, but the returned <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must\n not be used on the main thread.</p>\n\n<p> <p>\n Caller targeting API level android.os.Build.VERSION_CODES.O and above, will get list\n of accounts made visible to it by user\n (see List, String[], String,\n String, String[], Bundle)) or AbstractAcccountAuthenticator\n using <a href=\"#!/api/android.accounts.AccountManager-method-setAccountVisibility\" rel=\"android.accounts.AccountManager-method-setAccountVisibility\" class=\"docClass\">setAccountVisibility</a>.\n android.Manifest.permission.GET_ACCOUNTS permission is not used.</p>\n\n<p> <p>\n Caller targeting API level below android.os.Build.VERSION_CODES.O that have not been\n granted the android.Manifest.permission.GET_ACCOUNTS permission, will only see those\n accounts managed by AbstractAccountAuthenticators whose signature matches the client.\n <p>\n <b>NOTE:</b> If targeting your app to work on API level\n android.os.Build.VERSION_CODES.LOLLIPOP_MR1 and before,\n android.Manifest.permission.GET_ACCOUNTS permission is\n needed for those platforms, irrespective of uid or signature match. See docs for this\n function in API level android.os.Build.VERSION_CODES.LOLLIPOP_MR1.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type of accounts to return, must not be null</p>\n</div></li><li><span class='pre'>features</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of the account features to require, may be null or empty *</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to an array of Account, one\n         per account of the specified type which matches the requested features.</p>\n</div></li></ul></div></div></div><div id='method-getAccountsByTypeForPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAccountsByTypeForPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAccountsByTypeForPackage' class='name expandable'>getAccountsByTypeForPackage</a>( <span class='pre'>type, packageName</span> ) : Object {android.accounts.Account}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the accounts visible to the specified package in an environment where some apps are\n not authorized to view a...</div><div class='long'><p>Returns the accounts visible to the specified package in an environment where some apps are\n not authorized to view all accounts. This method can only be called by system apps and\n authenticators managing the type.\n Beginning API level android.os.Build.VERSION_CODES.O it also return accounts\n which user can make visible to the application (see <a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_VISIBLE</a>).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type of accounts to return, null to retrieve all accounts</p>\n</div></li><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The package name of the app for which the accounts are to be returned</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.Account}</span><div class='sub-desc'><p>An array of Account, one per matching account. Empty (never null) if no\n         accounts of the specified type can be accessed by the package.</p>\n</div></li></ul></div></div></div><div id='method-getAccountsForPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAccountsForPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAccountsForPackage' class='name expandable'>getAccountsForPackage</a>( <span class='pre'>packageName, uid, uid</span> ) : Object {android.accounts.Account}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>package name of the calling app.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>the uid of the calling app.</p>\n</div></li><li><span class='pre'>uid</span> : Object<div class='sub-desc'><p>the uid of the calling app.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.Account}</span><div class='sub-desc'><p>the accounts that are available to this package and user.</p>\n</div></li></ul></div></div></div><div id='method-getAuthToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAuthToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAuthToken' class='name expandable'>getAuthToken</a>( <span class='pre'>account, authTokenType, options, notifyAuthFailure, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an auth token of the specified type for a particular account,\n optionally raising a notification if the user mus...</div><div class='long'><p>Gets an auth token of the specified type for a particular account,\n optionally raising a notification if the user must enter credentials.\n This method is intended for background tasks and services where the\n user should not be immediately interrupted with a password prompt.</p>\n\n<p> <p>If a previously generated auth token is cached for this account and\n type, then it is returned.  Otherwise, if a saved password is\n available, it is sent to the server to generate a new auth token.\n Otherwise, an Intent is returned which, when started, will\n prompt the user for a password.  If the notifyAuthFailure parameter is\n set, a status bar notification is also created with the same Intent,\n alerting the user that they need to enter a password at some point.</p>\n\n<p> <p>In that case, you may need to wait until the user responds, which\n could take hours or days or forever.  When the user does respond and\n supply a new password, the account manager will broadcast the\n <a href=\"#!/api/android.accounts.AccountManager-property-LOGIN_ACCOUNTS_CHANGED_ACTION\" rel=\"android.accounts.AccountManager-property-LOGIN_ACCOUNTS_CHANGED_ACTION\" class=\"docClass\">LOGIN_ACCOUNTS_CHANGED_ACTION</a> Intent and\n notify <a href=\"#!/api/android.accounts.OnAccountsUpdateListener\" rel=\"android.accounts.OnAccountsUpdateListener\" class=\"docClass\">android.accounts.OnAccountsUpdateListener</a> which applications can\n use to try again.</p>\n\n<p> <p>If notifyAuthFailure is not set, it is the application's\n responsibility to launch the returned Intent at some point.\n Either way, the result from this call will not wait for user action.</p>\n\n<p> <p>Some authenticators have auth token <em>types</em>, whose value\n is authenticator-dependent.  Some services use different token types to\n access different functionality -- for example, Google uses different auth\n tokens to access Gmail and Google Calendar for the same account.</p>\n\n<p> <p>This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n USE_CREDENTIALS permission is needed for those platforms. See docs for\n this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to fetch an auth token for</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The auth token type, an authenticator-dependent\n     string token, must not be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options for the request,\n     may be null or empty</p>\n</div></li><li><span class='pre'>notifyAuthFailure</span> : Boolean<div class='sub-desc'><p>True to add a notification to prompt the\n     user for a password if necessary, false to leave that to the caller</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes,\n     null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread,\n     null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle with\n     at least the following fields on success:\n <ul>\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> - the name of the account you supplied\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a> - the type of the account\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_AUTHTOKEN\" rel=\"android.accounts.AccountManager-property-KEY_AUTHTOKEN\" class=\"docClass\">KEY_AUTHTOKEN</a> - the auth token you wanted\n </li></li></li></ul></p>\n\n<p> (Other authenticator-specific values may be returned.)  If the user\n must enter credentials, the returned Bundle contains only\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent needed to launch a prompt.</p>\n\n<p> If an error occurred, AccountManagerFuture.getResult() throws:\n <ul>\n <li> AuthenticatorException if the authenticator failed to respond\n <li> OperationCanceledException if the operation is canceled for\n      any reason, incluidng the user canceling a credential request\n <li> IOException if the authenticator experienced an I/O problem\n      creating a new auth token, usually because of network trouble\n </li></li></li></ul>\n If the account is no longer present on the device, the return value is\n authenticator-dependent.  The caller should verify the validity of the\n account before requesting an auth token.</p>\n</div></li></ul></div></div></div><div id='method-getAuthTokenByFeatures' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAuthTokenByFeatures' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAuthTokenByFeatures' class='name expandable'>getAuthTokenByFeatures</a>( <span class='pre'>accountType, authTokenType, features, activity, addAccountOptions, getAuthTokenOptions, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>This convenience helper combines the functionality of getAccountsByTypeAndFeatures,\n getAuthToken, and addAccount. ...</div><div class='long'><p>This convenience helper combines the functionality of <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByTypeAndFeatures\" rel=\"android.accounts.AccountManager-method-getAccountsByTypeAndFeatures\" class=\"docClass\">getAccountsByTypeAndFeatures</a>,\n <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a>, and <a href=\"#!/api/android.accounts.AccountManager-method-addAccount\" rel=\"android.accounts.AccountManager-method-addAccount\" class=\"docClass\">addAccount</a>.</p>\n\n<p> <p>\n This method gets a list of the accounts matching specific type and feature set which are\n visible to the caller (see <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a> for details);\n if there is exactly one already visible account, it is used; if there are some\n accounts for which user grant visibility, the user is prompted to pick one; if there are\n none, the user is prompted to add one. Finally, an auth token is acquired for the chosen\n account.</p>\n\n<p> <p>\n This method may be called from any thread, but the returned <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must\n not be used on the main thread.</p>\n\n<p> <p>\n <b>NOTE:</b> If targeting your app to work on API level 22 and before, MANAGE_ACCOUNTS\n permission is needed for those platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>The account type required (see <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a>), must not be\n        null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The desired auth token type (see <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a>), must not be\n        null</p>\n</div></li><li><span class='pre'>features</span> : Object {java.lang.String[]}<div class='sub-desc'><p>Required features for the account (see\n        <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByTypeAndFeatures\" rel=\"android.accounts.AccountManager-method-getAccountsByTypeAndFeatures\" class=\"docClass\">getAccountsByTypeAndFeatures</a>), may be null or empty</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching new sub-Activities to\n        prompt to add an account, select an account, and/or enter a password, as necessary;\n        used only to call startActivity(); should not be null</p>\n</div></li><li><span class='pre'>addAccountOptions</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options to use for adding new accounts; may\n        be null or empty</p>\n</div></li><li><span class='pre'>getAuthTokenOptions</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options to use for getting auth tokens; may\n        be null or empty</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle with at least the\n         following fields:\n         <ul>\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> - the name of the account\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a> - the type of the account\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_AUTHTOKEN\" rel=\"android.accounts.AccountManager-property-KEY_AUTHTOKEN\" class=\"docClass\">KEY_AUTHTOKEN</a> - the auth token you wanted\n         </li></li></li></ul></p>\n\n<pre><code>     If an error occurred, AccountManagerFuture.getResult() throws:\n     &lt;ul&gt;\n     &lt;li&gt;AuthenticatorException if no authenticator was registered for this\n     account type or the authenticator failed to respond\n     &lt;li&gt;OperationCanceledException if the operation was canceled for any reason,\n     including the user canceling any operation\n     &lt;li&gt;IOException if the authenticator experienced an I/O problem updating\n     settings, usually because of network trouble\n     &lt;/ul&gt;\n</code></pre>\n</div></li></ul></div></div></div><div id='method-getAuthenticatorTypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getAuthenticatorTypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getAuthenticatorTypes' class='name expandable'>getAuthenticatorTypes</a>( <span class='pre'></span> ) : Object {android.accounts.AuthenticatorDescription}<span class=\"signature\"></span></div><div class='description'><div class='short'>Lists the currently registered authenticators. ...</div><div class='long'><p>Lists the currently registered authenticators.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p>No permission is required to call this method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AuthenticatorDescription}</span><div class='sub-desc'><p>An array of AuthenticatorDescription for every\n     authenticator known to the AccountManager service.  Empty (never\n     null) if no authenticators are known.</p>\n</div></li></ul></div></div></div><div id='method-getPackagesAndVisibilityForAccount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getPackagesAndVisibilityForAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getPackagesAndVisibilityForAccount' class='name expandable'>getPackagesAndVisibilityForAccount</a>( <span class='pre'>account</span> ) : Object {java.util.Map}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns package names and visibility which were explicitly set for given account. ...</div><div class='long'><p>Returns package names and visibility which were explicitly set for given account.\n <p>\n This method requires the caller to have a signature match with the authenticator that owns\n the specified account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account for which visibility data should be returned</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Map}</span><div class='sub-desc'><p>Map from package names to visibility for given account</p>\n</div></li></ul></div></div></div><div id='method-getPassword' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getPassword' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getPassword' class='name expandable'>getPassword</a>( <span class='pre'>account</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the saved password associated with the account. ...</div><div class='long'><p>Gets the saved password associated with the account. This is intended for authenticators and\n related code; applications should get an auth token instead.</p>\n\n<p> <p>\n It is safe to call this method from the main thread.</p>\n\n<p> <p>\n This method requires the caller to have a signature match with the authenticator that owns\n the specified account.</p>\n\n<p> <p>\n <b>NOTE:</b> If targeting your app to work on API level\n android.os.Build.VERSION_CODES.LOLLIPOP_MR1 and before, AUTHENTICATE_ACCOUNTS\n permission is needed for those platforms. See docs for this function in API level\n android.os.Build.VERSION_CODES.LOLLIPOP_MR1.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to query for a password. Must not be {@code null}.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The account's password, null if none or if the account doesn't exist</p>\n</div></li></ul></div></div></div><div id='method-getPreviousName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getPreviousName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getPreviousName' class='name expandable'>getPreviousName</a>( <span class='pre'>account</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the previous name associated with the account or {@code null}, if\n none. ...</div><div class='long'><p>Gets the previous name associated with the account or {@code null}, if\n none. This is intended so that clients of\n <a href=\"#!/api/android.accounts.OnAccountsUpdateListener\" rel=\"android.accounts.OnAccountsUpdateListener\" class=\"docClass\">android.accounts.OnAccountsUpdateListener</a> can determine if an\n authenticator has renamed an account.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to query for a previous name.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The account's previous name, null if the account has never been\n         renamed.</p>\n</div></li></ul></div></div></div><div id='method-getSharedAccounts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getSharedAccounts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getSharedAccounts' class='name expandable'>getSharedAccounts</a>( <span class='pre'>user, user</span> ) : Object {android.accounts.Account}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'>\n</div></li><li><span class='pre'>user</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.Account}</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getUserData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-getUserData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-getUserData' class='name expandable'>getUserData</a>( <span class='pre'>account</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the user data named by \"key\" associated with the account. ...</div><div class='long'><p>Gets the user data named by \"key\" associated with the account. This is intended for\n authenticators and related code to store arbitrary metadata along with accounts. The meaning\n of the keys and values is up to the authenticator for the account.</p>\n\n<p> <p>\n It is safe to call this method from the main thread.</p>\n\n<p> <p>\n This method requires the caller to have a signature match with the authenticator that owns\n the specified account.</p>\n\n<p> <p>\n <b>NOTE:</b> If targeting your app to work on API level\n android.os.Build.VERSION_CODES.LOLLIPOP_MR1 and before, AUTHENTICATE_ACCOUNTS\n permission is needed for those platforms. See docs for this function in API level\n android.os.Build.VERSION_CODES.LOLLIPOP_MR1.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to query for user data</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The user data, null if the account, key doesn't exist, or the user is locked</p>\n</div></li></ul></div></div></div><div id='method-hasFeatures' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-hasFeatures' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-hasFeatures' class='name expandable'>hasFeatures</a>( <span class='pre'>account, features, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds out whether a particular account has all the specified features. ...</div><div class='long'><p>Finds out whether a particular account has all the specified features. Account features are\n authenticator-specific string tokens identifying boolean account properties. For example,\n features are used to tell whether Google accounts have a particular service (such as Google\n Calendar or Google Talk) enabled. The feature names and their meanings are published\n somewhere associated with the authenticator in question.</p>\n\n<p> <p>\n This method may be called from any thread, but the returned <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must\n not be used on the main thread.</p>\n\n<p> <p>\n If caller target API level is below android.os.Build.VERSION_CODES.O, it is\n required to hold the permission android.Manifest.permission.GET_ACCOUNTS or have a\n signature match with the AbstractAccountAuthenticator that manages the account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The Account to test</p>\n</div></li><li><span class='pre'>features</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of the account features to check</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Boolean, true if the account\n         exists and has all of the specified features.</p>\n</div></li></ul></div></div></div><div id='method-invalidateAuthToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-invalidateAuthToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-invalidateAuthToken' class='name expandable'>invalidateAuthToken</a>( <span class='pre'>accountType, authToken</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an auth token from the AccountManager's cache. ...</div><div class='long'><p>Removes an auth token from the AccountManager's cache.  Does nothing if\n the auth token is not currently in the cache.  Applications must call this\n method when the auth token is found to have expired or otherwise become\n invalid for authenticating requests.  The AccountManager does not validate\n or expire cached auth tokens otherwise.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n MANAGE_ACCOUNTS or USE_CREDENTIALS permission is needed for those\n platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>The account type of the auth token to invalidate, must not be null</p>\n</div></li><li><span class='pre'>authToken</span> : String<div class='sub-desc'><p>The auth token to invalidate, may be null</p>\n</div></li></ul></div></div></div><div id='method-isCredentialsUpdateSuggested' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-isCredentialsUpdateSuggested' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-isCredentialsUpdateSuggested' class='name expandable'>isCredentialsUpdateSuggested</a>( <span class='pre'>account, statusToken, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether updateCredentials or startUpdateCredentialsSession should be\n called with respect to the specified acc...</div><div class='long'><p>Checks whether <a href=\"#!/api/android.accounts.AccountManager-method-updateCredentials\" rel=\"android.accounts.AccountManager-method-updateCredentials\" class=\"docClass\">updateCredentials</a> or <a href=\"#!/api/android.accounts.AccountManager-method-startUpdateCredentialsSession\" rel=\"android.accounts.AccountManager-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a> should be\n called with respect to the specified account.\n <p>\n This method may be called from any thread, but the returned <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must\n not be used on the main thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The Account to be checked whether <a href=\"#!/api/android.accounts.AccountManager-method-updateCredentials\" rel=\"android.accounts.AccountManager-method-updateCredentials\" class=\"docClass\">updateCredentials</a> or\n <a href=\"#!/api/android.accounts.AccountManager-method-startUpdateCredentialsSession\" rel=\"android.accounts.AccountManager-method-startUpdateCredentialsSession\" class=\"docClass\">startUpdateCredentialsSession</a> should be called</p>\n</div></li><li><span class='pre'>statusToken</span> : String<div class='sub-desc'><p>a String of token to check account staus</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Boolean, true if the credentials\n         of the account should be updated.</p>\n</div></li></ul></div></div></div><div id='method-newChooseAccountIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-newChooseAccountIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-newChooseAccountIntent' class='name expandable'>newChooseAccountIntent</a>( <span class='pre'>selectedAccount, allowableAccounts, allowableAccountTypes, descriptionOverrideText, addAccountAuthTokenType, addAccountRequiredFeatures, addAccountOptions</span> ) : Object {android.content.Intent}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an intent to an Activity that prompts the user to choose from a list of\n accounts. ...</div><div class='long'><p>Returns an intent to an Activity that prompts the user to choose from a list of\n accounts.\n The caller will then typically start the activity by calling\n <code>startActivityForResult(intent, ...);</code>.\n <p>\n On success the activity returns a Bundle with the account name and type specified using\n keys <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> and <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a>.\n Chosen account is marked as <a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_VISIBLE</a> to the caller\n (see <a href=\"#!/api/android.accounts.AccountManager-method-setAccountVisibility\" rel=\"android.accounts.AccountManager-method-setAccountVisibility\" class=\"docClass\">setAccountVisibility</a>) and will be returned to it in consequent\n <a href=\"#!/api/android.accounts.AccountManager-method-getAccountsByType\" rel=\"android.accounts.AccountManager-method-getAccountsByType\" class=\"docClass\">getAccountsByType</a>) calls.\n <p>\n The most common case is to call this with one account type, e.g.:\n <p>\n <pre>  newChooseAccountIntent(null, null, new String[]{\"com.google\"}, null, null, null,\n null);</pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>selectedAccount</span> : Object {Account}<div class='sub-desc'><p>if specified, indicates that the Account is the currently\n selected one, according to the caller's definition of selected.</p>\n</div></li><li><span class='pre'>allowableAccounts</span> : Object {java.util.List}<div class='sub-desc'><p>an optional List of accounts that are allowed to be\n shown. If not specified then this field will not limit the displayed accounts.</p>\n</div></li><li><span class='pre'>allowableAccountTypes</span> : Object {java.lang.String[]}<div class='sub-desc'><p>an optional string array of account types. These are used\n both to filter the shown accounts and to filter the list of account types that are shown\n when adding an account. If not specified then this field will not limit the displayed\n account types when adding an account.</p>\n</div></li><li><span class='pre'>descriptionOverrideText</span> : String<div class='sub-desc'><p>if non-null this string is used as the description in the\n accounts chooser screen rather than the default</p>\n</div></li><li><span class='pre'>addAccountAuthTokenType</span> : String<div class='sub-desc'><p>this string is passed as the <a href=\"#!/api/android.accounts.AccountManager-method-addAccount\" rel=\"android.accounts.AccountManager-method-addAccount\" class=\"docClass\">addAccount</a>\n authTokenType parameter</p>\n</div></li><li><span class='pre'>addAccountRequiredFeatures</span> : Object {java.lang.String[]}<div class='sub-desc'><p>this string array is passed as the <a href=\"#!/api/android.accounts.AccountManager-method-addAccount\" rel=\"android.accounts.AccountManager-method-addAccount\" class=\"docClass\">addAccount</a>\n requiredFeatures parameter</p>\n</div></li><li><span class='pre'>addAccountOptions</span> : Object {Bundle}<div class='sub-desc'><p>This Bundle is passed as the <a href=\"#!/api/android.accounts.AccountManager-method-addAccount\" rel=\"android.accounts.AccountManager-method-addAccount\" class=\"docClass\">addAccount</a> options\n parameter</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Intent}</span><div class='sub-desc'><p>an Intent that can be used to launch the ChooseAccount activity flow.</p>\n</div></li></ul></div></div></div><div id='method-notifyAccountAuthenticated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-notifyAccountAuthenticated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-notifyAccountAuthenticated' class='name expandable'>notifyAccountAuthenticated</a>( <span class='pre'>account</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the system that the account has just been authenticated. ...</div><div class='long'><p>Notifies the system that the account has just been authenticated. This\n information may be used by other applications to verify the account. This\n should be called only when the user has entered correct credentials for\n the account.\n <p>\n It is not safe to call this method from the main thread. As such, call it\n from another thread.\n <p>This method requires the caller to have a signature match with the\n authenticator that owns the specified account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The Account to be updated.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean {@code true} if the authentication of the account has been successfully\n         acknowledged. Otherwise {@code false}.</p>\n</div></li></ul></div></div></div><div id='method-peekAuthToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-peekAuthToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-peekAuthToken' class='name expandable'>peekAuthToken</a>( <span class='pre'>account, authTokenType</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an auth token from the AccountManager's cache. ...</div><div class='long'><p>Gets an auth token from the AccountManager's cache.  If no auth\n token is cached for this account, null will be returned -- a new\n auth token will not be generated, and the server will not be contacted.\n Intended for use by the authenticator, not directly by applications.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p>This method requires the caller to have a signature match with the\n authenticator that manages the specified account.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator\n is needed for those platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account for which an auth token is to be fetched. Cannot be {@code null}.</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The type of auth token to fetch. Cannot be {@code null}.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The cached auth token for this account and type, or null if\n     no auth token is cached, the account does not exist, or the user is locked\n@see <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a></p>\n</div></li></ul></div></div></div><div id='method-removeAccount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-removeAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-removeAccount' class='name expandable'>removeAccount</a>( <span class='pre'>account, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an account from the AccountManager. ...</div><div class='long'><p>Removes an account from the AccountManager. Does nothing if the account\n does not exist.  Does not delete the account from the server.\n The authenticator may have its own policies preventing account\n deletion, in which case the account will not be deleted.</p>\n\n<p> <p>This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.</p>\n\n<p> <p>This method requires the caller to have a signature match with the\n authenticator that manages the specified account.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n MANAGE_ACCOUNTS permission is needed for those platforms. See docs for\n this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The Account to remove</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n     authenticator-defined sub-Activity to prompt the user to delete an\n     account; used only to call startActivity(); if null, the prompt\n     will not be launched directly, but the Intent may be\n     returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes,\n     null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread,\n     null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle with\n     <a href=\"#!/api/android.accounts.AccountManager-property-KEY_BOOLEAN_RESULT\" rel=\"android.accounts.AccountManager-property-KEY_BOOLEAN_RESULT\" class=\"docClass\">KEY_BOOLEAN_RESULT</a> if activity was specified and an account\n     was removed or if active. If no activity was specified, the returned\n     Bundle contains only <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent\n     needed to launch the actual account removal process, if authenticator\n     needs the activity launch. If an error occurred,\n     AccountManagerFuture.getResult() throws:\n <ul>\n <li> AuthenticatorException if no authenticator was registered for\n      this account type or the authenticator failed to respond\n <li> OperationCanceledException if the operation was canceled for\n      any reason, including the user canceling the creation process or\n      adding accounts (of this type) has been disabled by policy\n </li></li></ul></p>\n</div></li></ul></div></div></div><div id='method-removeAccountExplicitly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-removeAccountExplicitly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-removeAccountExplicitly' class='name expandable'>removeAccountExplicitly</a>( <span class='pre'>account</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an account directly. ...</div><div class='long'><p>Removes an account directly. Normally used by authenticators, not\n directly by applications. Does not delete the account from the server.\n The authenticator may have its own policies preventing account deletion,\n in which case the account will not be deleted.\n <p>\n It is safe to call this method from the main thread.\n <p>This method requires the caller to have a signature match with the\n authenticator that manages the specified account.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator\n is needed for those platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The Account to delete.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the account was successfully deleted, false if the\n         account did not exist, the account is null, or another error\n         occurs.</p>\n</div></li></ul></div></div></div><div id='method-removeOnAccountsUpdatedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-removeOnAccountsUpdatedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-removeOnAccountsUpdatedListener' class='name expandable'>removeOnAccountsUpdatedListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an android.accounts.OnAccountsUpdateListener previously registered with\n addOnAccountsUpdatedListener. ...</div><div class='long'><p>Removes an <a href=\"#!/api/android.accounts.OnAccountsUpdateListener\" rel=\"android.accounts.OnAccountsUpdateListener\" class=\"docClass\">android.accounts.OnAccountsUpdateListener</a> previously registered with\n <a href=\"#!/api/android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" rel=\"android.accounts.AccountManager-method-addOnAccountsUpdatedListener\" class=\"docClass\">addOnAccountsUpdatedListener</a>.  The listener will no longer\n receive notifications of account changes.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p>No permission is required to call this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {OnAccountsUpdateListener}<div class='sub-desc'><p>The previously added listener to remove</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if listener is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if listener was not already added</p>\n</div></li></ul></div></div></div><div id='method-removeSharedAccount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-removeSharedAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-removeSharedAccount' class='name expandable'>removeSharedAccount</a>( <span class='pre'>account, user, user</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account to remove</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>the user to remove the account from</p>\n</div></li><li><span class='pre'>user</span> : Object<div class='sub-desc'><p>the user to remove the account from</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-renameAccount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-renameAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-renameAccount' class='name expandable'>renameAccount</a>( <span class='pre'>account, newName, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Rename the specified android.accounts.Account. ...</div><div class='long'><p>Rename the specified <a href=\"#!/api/android.accounts.Account\" rel=\"android.accounts.Account\" class=\"docClass\">android.accounts.Account</a>.  This is equivalent to removing\n the existing account and adding a new renamed account with the old\n account's user data.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p>This method requires the caller to have a signature match with the\n authenticator that manages the specified account.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator\n is needed for those platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The Account to rename</p>\n</div></li><li><span class='pre'>newName</span> : String<div class='sub-desc'><p>String name to be associated with the account.</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for\n     no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for\n     the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to the Account\n     after the name change. If successful the account's name will be the\n     specified new name.</p>\n</div></li></ul></div></div></div><div id='method-setAccountVisibility' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-setAccountVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-setAccountVisibility' class='name expandable'>setAccountVisibility</a>( <span class='pre'>account, packageName, visibility</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set visibility value of given account to certain package. ...</div><div class='long'><p>Set visibility value of given account to certain package.\n Package name must match installed application, or be equal to\n <a href=\"#!/api/android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE\" rel=\"android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_VISIBLE\" class=\"docClass\">PACKAGE_NAME_KEY_LEGACY_VISIBLE</a> or <a href=\"#!/api/android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE\" rel=\"android.accounts.AccountManager-property-PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE\" class=\"docClass\">PACKAGE_NAME_KEY_LEGACY_NOT_VISIBLE</a>.\n <p>\n Possible visibility values:\n <ul>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_UNDEFINED\" rel=\"android.accounts.AccountManager-property-VISIBILITY_UNDEFINED\" class=\"docClass\">VISIBILITY_UNDEFINED</a></li>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_VISIBLE\" class=\"docClass\">VISIBILITY_VISIBLE</a></li>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_VISIBLE</a></li>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_NOT_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_NOT_VISIBLE\" class=\"docClass\">VISIBILITY_NOT_VISIBLE</a>\n <li><a href=\"#!/api/android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE\" rel=\"android.accounts.AccountManager-property-VISIBILITY_USER_MANAGED_NOT_VISIBLE\" class=\"docClass\">VISIBILITY_USER_MANAGED_NOT_VISIBLE</a></li>\n </li></ul>\n <p>\n This method requires the caller to have a signature match with the authenticator that owns\n the specified account.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>Account to update visibility</p>\n</div></li><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>Package name of the application to modify account visibility</p>\n</div></li><li><span class='pre'>visibility</span> : Number<div class='sub-desc'><p>New visibility value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True, if visibility value was successfully updated.</p>\n</div></li></ul></div></div></div><div id='method-setAuthToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-setAuthToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-setAuthToken' class='name expandable'>setAuthToken</a>( <span class='pre'>account, authTokenType, authToken</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an auth token to the AccountManager cache for an account. ...</div><div class='long'><p>Adds an auth token to the AccountManager cache for an account.\n If the account does not exist then this call has no effect.\n Replaces any previous auth token for this account and auth token type.\n Intended for use by the authenticator, not directly by applications.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p>This method requires the caller to have a signature match with the\n authenticator that manages the specified account.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator\n is needed for those platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to set an auth token for</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The type of the auth token, see {<a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a>}</p>\n</div></li><li><span class='pre'>authToken</span> : String<div class='sub-desc'><p>The auth token to add to the cache</p>\n</div></li></ul></div></div></div><div id='method-setPassword' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-setPassword' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-setPassword' class='name expandable'>setPassword</a>( <span class='pre'>account, password</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets or forgets a saved password. ...</div><div class='long'><p>Sets or forgets a saved password. This modifies the local copy of the\n password used to automatically authenticate the user; it does not change\n the user's account password on the server. Intended for use by the\n authenticator, not directly by applications.\n <p>Calling this method does not update the last authenticated timestamp,\n referred by <a href=\"#!/api/android.accounts.AccountManager-property-KEY_LAST_AUTHENTICATED_TIME\" rel=\"android.accounts.AccountManager-property-KEY_LAST_AUTHENTICATED_TIME\" class=\"docClass\">KEY_LAST_AUTHENTICATED_TIME</a>. To update it, call\n <a href=\"#!/api/android.accounts.AccountManager-method-notifyAccountAuthenticated\" rel=\"android.accounts.AccountManager-method-notifyAccountAuthenticated\" class=\"docClass\">notifyAccountAuthenticated</a>(Account) after getting success.\n <p>It is safe to call this method from the main thread.\n <p>This method requires the caller to have a signature match with the\n authenticator that manages the specified account.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator\n is needed for those platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account whose password is to be set. Cannot be\n            {@code null}.</p>\n</div></li><li><span class='pre'>password</span> : String<div class='sub-desc'><p>The password to set, null to clear the password</p>\n</div></li></ul></div></div></div><div id='method-setUserData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-setUserData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-setUserData' class='name expandable'>setUserData</a>( <span class='pre'>account, key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets one userdata key for an account. ...</div><div class='long'><p>Sets one userdata key for an account. Intended by use for the\n authenticator to stash state for itself, not directly by applications.\n The meaning of the keys and values is up to the authenticator.</p>\n\n<p> <p>It is safe to call this method from the main thread.</p>\n\n<p> <p>This method requires the caller to have a signature match with the\n authenticator that manages the specified account.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n AUTHENTICATE_ACCOUNTS permission and same UID as account's authenticator\n is needed for those platforms. See docs for this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>Account whose user data is to be set. Must not be {@code null}.</p>\n</div></li><li><span class='pre'>key</span> : String<div class='sub-desc'><p>String user data key to set.  Must not be null</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>String value to set, {@code null} to clear this user data key</p>\n</div></li></ul></div></div></div><div id='method-someUserHasAccount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-someUserHasAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-someUserHasAccount' class='name expandable'>someUserHasAccount</a>( <span class='pre'>account, account</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to check for existence.</p>\n</div></li><li><span class='pre'>account</span> : Object<div class='sub-desc'><p>The account to check for existence.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether any user has this account</p>\n</div></li></ul></div></div></div><div id='method-startAddAccountSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-startAddAccountSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-startAddAccountSession' class='name expandable'>startAddAccountSession</a>( <span class='pre'>accountType, authTokenType, requiredFeatures, options, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Asks the user to authenticate with an account of a specified type. ...</div><div class='long'><p>Asks the user to authenticate with an account of a specified type. The\n authenticator for this account type processes this request with the\n appropriate user interface. If the user does elect to authenticate with a\n new account, a bundle of session data for installing the account later is\n returned with optional account password and account status token.\n <p>\n This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.\n <p>\n <p>\n <b>NOTE:</b> The account will not be installed to the device by calling\n this api alone. <a href=\"#!/api/android.accounts.AccountManager-method-finishSession\" rel=\"android.accounts.AccountManager-method-finishSession\" class=\"docClass\">finishSession</a> should be called after this to install the\n account on device.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accountType</span> : String<div class='sub-desc'><p>The type of account to add; must not be null</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The type of auth token (see <a href=\"#!/api/android.accounts.AccountManager-method-getAuthToken\" rel=\"android.accounts.AccountManager-method-getAuthToken\" class=\"docClass\">getAuthToken</a>)\n            this account will need to be able to generate, null for none</p>\n</div></li><li><span class='pre'>requiredFeatures</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The features (see <a href=\"#!/api/android.accounts.AccountManager-method-hasFeatures\" rel=\"android.accounts.AccountManager-method-hasFeatures\" class=\"docClass\">hasFeatures</a>) this\n            account must have, null for none</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options for the request, may be\n            null or empty</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n            authenticator-defined sub-Activity to prompt the user to\n            create an account; used only to call startActivity(); if null,\n            the prompt will not be launched directly, but the necessary\n            Intent will be returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for\n            no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for\n            the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle with\n         these fields if activity was specified and user was authenticated\n         with an account:\n         <ul>\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE\" class=\"docClass\">KEY_ACCOUNT_SESSION_BUNDLE</a> - encrypted Bundle for\n         adding the the to the device later.\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN\" class=\"docClass\">KEY_ACCOUNT_STATUS_TOKEN</a> - optional, token to check\n         status of the account\n         </li></li></ul>\n         If no activity was specified, the returned Bundle contains only\n         <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent needed to launch the\n         actual account creation process. If authenticator doesn't support\n         this method, the returned Bundle contains only\n         <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE\" class=\"docClass\">KEY_ACCOUNT_SESSION_BUNDLE</a> with encrypted\n         {@code options} needed to add account later. If an error\n         occurred, AccountManagerFuture.getResult() throws:\n         <ul>\n         <li>AuthenticatorException if no authenticator was\n         registered for this account type or the authenticator failed to\n         respond\n         <li>OperationCanceledException if the operation was\n         canceled for any reason, including the user canceling the\n         creation process or adding accounts (of this type) has been\n         disabled by policy\n         <li>IOException if the authenticator experienced an I/O\n         problem creating a new account, usually because of network\n         trouble\n         </li></li></li></ul>\n@see <a href=\"#!/api/android.accounts.AccountManager-method-finishSession\" rel=\"android.accounts.AccountManager-method-finishSession\" class=\"docClass\">finishSession</a></p>\n</div></li></ul></div></div></div><div id='method-startUpdateCredentialsSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-startUpdateCredentialsSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-startUpdateCredentialsSession' class='name expandable'>startUpdateCredentialsSession</a>( <span class='pre'>account, authTokenType, options, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Asks the user to enter a new password for the account but not updating the\n saved credentials for the account until f...</div><div class='long'><p>Asks the user to enter a new password for the account but not updating the\n saved credentials for the account until <a href=\"#!/api/android.accounts.AccountManager-method-finishSession\" rel=\"android.accounts.AccountManager-method-finishSession\" class=\"docClass\">finishSession</a> is called.\n <p>\n This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.\n <p>\n <b>NOTE:</b> The saved credentials for the account alone will not be\n updated by calling this API alone. <a href=\"#!/api/android.accounts.AccountManager-method-finishSession\" rel=\"android.accounts.AccountManager-method-finishSession\" class=\"docClass\">finishSession</a> should be called after\n this to update local credentials</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to update credentials for</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The credentials entered must allow an auth token of\n            this type to be created (but no actual auth token is\n            returned); may be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options for the request; may be\n            null or empty</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n            authenticator-defined sub-Activity to prompt the user to enter\n            a password; used only to call startActivity(); if null, the\n            prompt will not be launched directly, but the necessary\n            Intent will be returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes, null for\n            no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread, null for\n            the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle with\n         these fields if an activity was supplied and user was\n         successfully re-authenticated to the account:\n         <ul>\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_SESSION_BUNDLE\" class=\"docClass\">KEY_ACCOUNT_SESSION_BUNDLE</a> - encrypted Bundle for\n         updating the local credentials on device later.\n         <li><a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_STATUS_TOKEN\" class=\"docClass\">KEY_ACCOUNT_STATUS_TOKEN</a> - optional, token to check\n         status of the account\n         </li></li></ul>\n         If no activity was specified, the returned Bundle contains\n         <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent needed to launch the\n         password prompt. If an error occurred,\n         AccountManagerFuture.getResult() throws:\n         <ul>\n         <li>AuthenticatorException if the authenticator failed to\n         respond\n         <li>OperationCanceledException if the operation was\n         canceled for any reason, including the user canceling the\n         password prompt\n         <li>IOException if the authenticator experienced an I/O\n         problem verifying the password, usually because of network\n         trouble\n         </li></li></li></ul>\n@see <a href=\"#!/api/android.accounts.AccountManager-method-finishSession\" rel=\"android.accounts.AccountManager-method-finishSession\" class=\"docClass\">finishSession</a></p>\n</div></li></ul></div></div></div><div id='method-updateCredentials' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accounts.AccountManager'>android.accounts.AccountManager</span><br/><a href='source/AccountManager.html#android-accounts-AccountManager-method-updateCredentials' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accounts.AccountManager-method-updateCredentials' class='name expandable'>updateCredentials</a>( <span class='pre'>account, authTokenType, options, activity, callback, handler</span> ) : Object {android.accounts.AccountManagerFuture}<span class=\"signature\"></span></div><div class='description'><div class='short'>Asks the user to enter a new password for an account, updating the\n saved credentials for the account. ...</div><div class='long'><p>Asks the user to enter a new password for an account, updating the\n saved credentials for the account.  Normally this happens automatically\n when the server rejects credentials during an auth token fetch, but this\n can be invoked directly to ensure we have the correct credentials stored.</p>\n\n<p> <p>This method may be called from any thread, but the returned\n <a href=\"#!/api/android.accounts.AccountManagerFuture\" rel=\"android.accounts.AccountManagerFuture\" class=\"docClass\">android.accounts.AccountManagerFuture</a> must not be used on the main thread.</p>\n\n<p> <p><b>NOTE:</b> If targeting your app to work on API level 22 and before,\n MANAGE_ACCOUNTS permission is needed for those platforms. See docs for\n this function in API level 22.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>The account to update credentials for</p>\n</div></li><li><span class='pre'>authTokenType</span> : String<div class='sub-desc'><p>The credentials entered must allow an auth token\n     of this type to be created (but no actual auth token is returned);\n     may be null</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Authenticator-specific options for the request;\n     may be null or empty</p>\n</div></li><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity context to use for launching a new\n     authenticator-defined sub-Activity to prompt the user to enter a\n     password; used only to call startActivity(); if null, the prompt\n     will not be launched directly, but the necessary Intent\n     will be returned to the caller instead</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.accounts.AccountManagerCallback}<div class='sub-desc'><p>Callback to invoke when the request completes,\n     null for no callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the callback thread,\n     null for the main thread</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.accounts.AccountManagerFuture}</span><div class='sub-desc'><p>An AccountManagerFuture which resolves to a Bundle\n     with these fields if an activity was supplied and the account\n     credentials were successfully updated:\n <ul>\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_NAME\" class=\"docClass\">KEY_ACCOUNT_NAME</a> - the name of the account\n <li> <a href=\"#!/api/android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" rel=\"android.accounts.AccountManager-property-KEY_ACCOUNT_TYPE\" class=\"docClass\">KEY_ACCOUNT_TYPE</a> - the type of the account\n </li></li></ul></p>\n\n<p> If no activity was specified, the returned Bundle contains\n <a href=\"#!/api/android.accounts.AccountManager-property-KEY_INTENT\" rel=\"android.accounts.AccountManager-property-KEY_INTENT\" class=\"docClass\">KEY_INTENT</a> with the Intent needed to launch the\n password prompt. If an error occurred,\n AccountManagerFuture.getResult() throws:\n <ul>\n <li> AuthenticatorException if the authenticator failed to respond\n <li> OperationCanceledException if the operation was canceled for\n      any reason, including the user canceling the password prompt\n <li> IOException if the authenticator experienced an I/O problem\n      verifying the password, usually because of network trouble\n </li></li></li></ul></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});