Ext.data.JsonP.java_nio_charset_Charset({"tagname":"class","name":"java.nio.charset.Charset","autodetected":{},"files":[{"filename":"Charset.js","href":"Charset.html#java-nio-charset-Charset"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"aliases","tagname":"method","owner":"java.nio.charset.Charset","id":"method-aliases","meta":{}},{"name":"availableCharsets","tagname":"method","owner":"java.nio.charset.Charset","id":"method-availableCharsets","meta":{}},{"name":"canEncode","tagname":"method","owner":"java.nio.charset.Charset","id":"method-canEncode","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.nio.charset.Charset","id":"method-compareTo","meta":{}},{"name":"contains","tagname":"method","owner":"java.nio.charset.Charset","id":"method-contains","meta":{}},{"name":"decode","tagname":"method","owner":"java.nio.charset.Charset","id":"method-decode","meta":{}},{"name":"defaultCharset","tagname":"method","owner":"java.nio.charset.Charset","id":"method-defaultCharset","meta":{}},{"name":"displayName","tagname":"method","owner":"java.nio.charset.Charset","id":"method-displayName","meta":{}},{"name":"encode","tagname":"method","owner":"java.nio.charset.Charset","id":"method-encode","meta":{}},{"name":"equals","tagname":"method","owner":"java.nio.charset.Charset","id":"method-equals","meta":{}},{"name":"forName","tagname":"method","owner":"java.nio.charset.Charset","id":"method-forName","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.nio.charset.Charset","id":"method-hashCode","meta":{}},{"name":"isRegistered","tagname":"method","owner":"java.nio.charset.Charset","id":"method-isRegistered","meta":{}},{"name":"isSupported","tagname":"method","owner":"java.nio.charset.Charset","id":"method-isSupported","meta":{}},{"name":"name","tagname":"method","owner":"java.nio.charset.Charset","id":"method-name","meta":{}},{"name":"newDecoder","tagname":"method","owner":"java.nio.charset.Charset","id":"method-newDecoder","meta":{}},{"name":"newEncoder","tagname":"method","owner":"java.nio.charset.Charset","id":"method-newEncoder","meta":{}},{"name":"toString","tagname":"method","owner":"java.nio.charset.Charset","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.charset.Charset","short_doc":"implements java.lang.Comparable\n\nA named mapping between sequences of sixteen-bit Unicode <a\n href=\"../../lang/Charac...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.charset.Charset</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Charset.html#java-nio-charset-Charset' target='_blank'>Charset.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Comparable</p>\n\n<p>A named mapping between sequences of sixteen-bit Unicode <a\n href=\"../../lang/Character.html#unicode\">code units</a> and sequences of\n bytes.  This class defines methods for creating decoders and encoders and\n for retrieving the various names associated with a charset.  Instances of\n this class are immutable.</p>\n\n<p> <p> This class also defines static methods for testing whether a particular\n charset is supported, for locating charset instances by name, and for\n constructing a map that contains every charset for which support is\n available in the current Java virtual machine.  Support for new charsets can\n be added via the service-provider interface defined in the java.nio.charset.spi.CharsetProvider class.</p>\n\n<p> <p> All of the methods defined in this class are safe for use by multiple\n concurrent threads.</p>\n\n<p> <a name=\"names\"></a><a name=\"charenc\"></a>\n <h2>Charset names</h2></p>\n\n<p> <p> Charsets are named by strings composed of the following characters:</p>\n\n<p> <ul></ul></p>\n\n<p>   <li> The uppercase letters <tt>'A'</tt> through <tt>'Z'</tt>\n        (<tt>'&#92;u0041'</tt>&nbsp;through&nbsp;<tt>'&#92;u005a'</tt>),</li></p>\n\n<p>   <li> The lowercase letters <tt>'a'</tt> through <tt>'z'</tt>\n        (<tt>'&#92;u0061'</tt>&nbsp;through&nbsp;<tt>'&#92;u007a'</tt>),</li></p>\n\n<p>   <li> The digits <tt>'0'</tt> through <tt>'9'</tt>\n        (<tt>'&#92;u0030'</tt>&nbsp;through&nbsp;<tt>'&#92;u0039'</tt>),</li></p>\n\n<p>   <li> The dash character <tt>'-'</tt>\n        (<tt>'&#92;u002d'</tt>,&nbsp;<small>HYPHEN-MINUS</small>),</li></p>\n\n<p>   <li> The plus character <tt>'+'</tt>\n        (<tt>'&#92;u002b'</tt>,&nbsp;<small>PLUS SIGN</small>),</li></p>\n\n<p>   <li> The period character <tt>'.'</tt>\n        (<tt>'&#92;u002e'</tt>,&nbsp;<small>FULL STOP</small>),</li></p>\n\n<p>   <li> The colon character <tt>':'</tt>\n        (<tt>'&#92;u003a'</tt>,&nbsp;<small>COLON</small>), and</li></p>\n\n<p>   <li> The underscore character <tt>'_'</tt>\n        (<tt>'&#92;u005f'</tt>,&nbsp;<small>LOW&nbsp;LINE</small>).</li></p>\n\n<p> </p>\n\n<p> A charset name must begin with either a letter or a digit.  The empty string\n is not a legal charset name.  Charset names are not case-sensitive; that is,\n case is always ignored when comparing charset names.  Charset names\n generally follow the conventions documented in <a\n href=\"http://www.ietf.org/rfc/rfc2278.txt\"><i>RFC&nbsp;2278:&nbsp;IANA Charset\n Registration Procedures</i></a>.</p>\n\n<p> <p> Every charset has a <i>canonical name</i> and may also have one or more\n <i>aliases</i>.  The canonical name is returned by the name method\n of this class.  Canonical names are, by convention, usually in upper case.\n The aliases of a charset are returned by the aliases\n method.</p>\n\n<p> <p><a name=\"hn\">Some charsets have an <i>historical name</i> that is defined for\n compatibility with previous versions of the Java platform.</a>  A charset's\n historical name is either its canonical name or one of its aliases.  The\n historical name is returned by the <tt>getEncoding()</tt> methods of the\n InputStreamReader and OutputStreamWriter classes.</p>\n\n<p> <p><a name=\"iana\"> </a>If a charset listed in the <a\n href=\"http://www.iana.org/assignments/character-sets\"><i>IANA Charset\n Registry</i></a> is supported by an implementation of the Java platform then\n its canonical name must be the name listed in the registry. Many charsets\n are given more than one name in the registry, in which case the registry\n identifies one of the names as <i>MIME-preferred</i>.  If a charset has more\n than one registry name then its canonical name must be the MIME-preferred\n name and the other names in the registry must be valid aliases.  If a\n supported charset is not listed in the IANA registry then its canonical name\n must begin with one of the strings <tt>\"X-\"</tt> or <tt>\"x-\"</tt>.</p>\n\n<p> <p> The IANA charset registry does change over time, and so the canonical\n name and the aliases of a particular charset may also change over time.  To\n ensure compatibility it is recommended that no alias ever be removed from a\n charset, and that if the canonical name of a charset is changed then its\n previous canonical name be made into an alias.</p>\n\n<p> <h2>Standard charsets</h2></p>\n\n<p> <p><a name=\"standard\">Every implementation of the Java platform is required to support the\n following standard charsets.</a>  Consult the release documentation for your\n implementation to see if any other charsets are supported.  The behavior\n of such optional charsets may differ between implementations.</p>\n\n<p> <blockquote><table width=\"80%\" summary=\"Description of standard charsets\">\n <tr><th align=\"left\">Charset</th><th align=\"left\">Description</th></tr>\n <tr><td valign=top><tt>US-ASCII</tt></td>\n     <td>Seven-bit ASCII, a.k.a. <tt>ISO646-US</tt>,\n         a.k.a. the Basic Latin block of the Unicode character set</td></tr>\n <tr><td valign=top><tt>ISO-8859-1&nbsp;&nbsp;</tt></td>\n     <td>ISO Latin Alphabet No. 1, a.k.a. <tt>ISO-LATIN-1</tt></td></tr>\n <tr><td valign=top><tt>UTF-8</tt></td>\n     <td>Eight-bit UCS Transformation Format</td></tr>\n <tr><td valign=top><tt>UTF-16BE</tt></td>\n     <td>Sixteen-bit UCS Transformation Format,\n         big-endian byte&nbsp;order</td></tr>\n <tr><td valign=top><tt>UTF-16LE</tt></td>\n     <td>Sixteen-bit UCS Transformation Format,\n         little-endian byte&nbsp;order</td></tr>\n <tr><td valign=top><tt>UTF-16</tt></td>\n     <td>Sixteen-bit UCS Transformation Format,\n         byte&nbsp;order identified by an optional byte-order mark</td></tr>\n </table></blockquote></p>\n\n<p> <p> The <tt>UTF-8</tt> charset is specified by <a\n href=\"http://www.ietf.org/rfc/rfc2279.txt\"><i>RFC&nbsp;2279</i></a>; the\n transformation format upon which it is based is specified in\n Amendment&nbsp;2 of ISO&nbsp;10646-1 and is also described in the <a\n href=\"http://www.unicode.org/unicode/standard/standard.html\"><i>Unicode\n Standard</i></a>.</p>\n\n<p> <p> The <tt>UTF-16</tt> charsets are specified by <a\n href=\"http://www.ietf.org/rfc/rfc2781.txt\"><i>RFC&nbsp;2781</i></a>; the\n transformation formats upon which they are based are specified in\n Amendment&nbsp;1 of ISO&nbsp;10646-1 and are also described in the <a\n href=\"http://www.unicode.org/unicode/standard/standard.html\"><i>Unicode\n Standard</i></a>.</p>\n\n<p> <p> The <tt>UTF-16</tt> charsets use sixteen-bit quantities and are\n therefore sensitive to byte order.  In these encodings the byte order of a\n stream may be indicated by an initial <i>byte-order mark</i> represented by\n the Unicode character <tt>'&#92;uFEFF'</tt>.  Byte-order marks are handled\n as follows:</p>\n\n<p> <ul></ul></p>\n\n<p>   <li><p> When decoding, the <tt>UTF-16BE</tt> and <tt>UTF-16LE</tt>\n   charsets interpret the initial byte-order marks as a <small>ZERO-WIDTH\n   NON-BREAKING SPACE</small>; when encoding, they do not write\n   byte-order marks. </p></li></p>\n\n<p>   <li><p> When decoding, the <tt>UTF-16</tt> charset interprets the\n   byte-order mark at the beginning of the input stream to indicate the\n   byte-order of the stream but defaults to big-endian if there is no\n   byte-order mark; when encoding, it uses big-endian byte order and writes\n   a big-endian byte-order mark. </p></li></p>\n\n<p> </p>\n\n<p> In any case, byte order marks occurring after the first element of an\n input sequence are not omitted since the same code is used to represent\n <small>ZERO-WIDTH NON-BREAKING SPACE</small>.</p>\n\n<p> <p>Android note: The Android platform default is always UTF-8.</p>\n\n<p> <p>The <a href=\"#!/api/java.nio.charset.StandardCharsets\" rel=\"java.nio.charset.StandardCharsets\" class=\"docClass\">java.nio.charset.StandardCharsets</a> class defines constants for each of the\n standard charsets.</p>\n\n<p> <h2>Terminology</h2></p>\n\n<p> <p> The name of this class is taken from the terms used in\n <a href=\"http://www.ietf.org/rfc/rfc2278.txt\"><i>RFC&nbsp;2278</i></a>.\n In that document a <i>charset</i> is defined as the combination of\n one or more coded character sets and a character-encoding scheme.\n (This definition is confusing; some other software systems define\n <i>charset</i> as a synonym for <i>coded character set</i>.)</p>\n\n<p> <p> A <i>coded character set</i> is a mapping between a set of abstract\n characters and a set of integers.  US-ASCII, ISO&nbsp;8859-1,\n JIS&nbsp;X&nbsp;0201, and Unicode are examples of coded character sets.</p>\n\n<p> <p> Some standards have defined a <i>character set</i> to be simply a\n set of abstract characters without an associated assigned numbering.\n An alphabet is an example of such a character set.  However, the subtle\n distinction between <i>character set</i> and <i>coded character set</i>\n is rarely used in practice; the former has become a short form for the\n latter, including in the Java API specification.</p>\n\n<p> <p> A <i>character-encoding scheme</i> is a mapping between one or more\n coded character sets and a set of octet (eight-bit byte) sequences.\n UTF-8, UTF-16, ISO&nbsp;2022, and EUC are examples of\n character-encoding schemes.  Encoding schemes are often associated with\n a particular coded character set; UTF-8, for example, is used only to\n encode Unicode.  Some schemes, however, are associated with multiple\n coded character sets; EUC, for example, can be used to encode\n characters in a variety of Asian coded character sets.</p>\n\n<p> <p> When a coded character set is used exclusively with a single\n character-encoding scheme then the corresponding charset is usually\n named for the coded character set; otherwise a charset is usually named\n for the encoding scheme and, possibly, the locale of the coded\n character sets that it supports.  Hence <tt>US-ASCII</tt> is both the\n name of a coded character set and of the charset that encodes it, while\n <tt>EUC-JP</tt> is the name of the charset that encodes the\n JIS&nbsp;X&nbsp;0201, JIS&nbsp;X&nbsp;0208, and JIS&nbsp;X&nbsp;0212\n coded character sets for the Japanese language.</p>\n\n<p> <p> The native character encoding of the Java programming language is\n UTF-16.  A charset in the Java platform therefore defines a mapping\n between sequences of sixteen-bit UTF-16 code units (that is, sequences\n of chars) and sequences of bytes. </p></p>\n\n<p> @see CharsetDecoder\n @see CharsetEncoder\n @see java.nio.charset.spi.CharsetProvider\n @see java.lang.Character</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-aliases' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-aliases' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-aliases' class='name expandable'>aliases</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a set containing this charset's aliases. ...</div><div class='long'><p>Returns a set containing this charset's aliases.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>An immutable set of this charset's aliases</p>\n</div></li></ul></div></div></div><div id='method-availableCharsets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-availableCharsets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-availableCharsets' class='name expandable'>availableCharsets</a>( <span class='pre'></span> ) : Object {java.util.SortedMap}<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a sorted map from canonical charset names to charset objects. ...</div><div class='long'><p>Constructs a sorted map from canonical charset names to charset objects.</p>\n\n<p> <p> The map returned by this method will have one entry for each charset\n for which support is available in the current Java virtual machine.  If\n two or more supported charsets have the same canonical name then the\n resulting map will contain just one of them; which one it will contain\n is not specified. </p></p>\n\n<p> <p> The invocation of this method, and the subsequent use of the\n resulting map, may cause time-consuming disk or network I/O operations\n to occur.  This method is provided for applications that need to\n enumerate all of the available charsets, for example to allow user\n charset selection.  This method is not used by the <a href=\"#!/api/java.nio.charset.Charset-method-forName\" rel=\"java.nio.charset.Charset-method-forName\" class=\"docClass\">forName</a> method, which instead employs an efficient incremental lookup\n algorithm.</p>\n\n<p> <p> This method may return different results at different times if new\n charset providers are dynamically made available to the current Java\n virtual machine.  In the absence of such changes, the charsets returned\n by this method are exactly those that can be retrieved via the <a href=\"#!/api/java.nio.charset.Charset-method-forName\" rel=\"java.nio.charset.Charset-method-forName\" class=\"docClass\">forName</a> method.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.SortedMap}</span><div class='sub-desc'><p>An immutable, case-insensitive map from canonical charset names\n         to charset objects</p>\n</div></li></ul></div></div></div><div id='method-canEncode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-canEncode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-canEncode' class='name expandable'>canEncode</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this charset supports encoding. ...</div><div class='long'><p>Tells whether or not this charset supports encoding.</p>\n\n<p> <p> Nearly all charsets support encoding.  The primary exceptions are\n special-purpose <i>auto-detect</i> charsets whose decoders can determine\n which of several possible encoding schemes is in use by examining the\n input byte sequence.  Such charsets do not support encoding because\n there is no way to determine which encoding should be used on output.\n Implementations of such charsets should override this method to return\n <tt>false</tt>. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this charset supports encoding</p>\n</div></li></ul></div></div></div><div id='method-compareTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>that</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this charset to another. ...</div><div class='long'><p>Compares this charset to another.</p>\n\n<p> <p> Charsets are ordered by their canonical names, without regard to\n case. </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>that</span> : Object {Charset}<div class='sub-desc'><p>The charset to which this charset is to be compared</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A negative integer, zero, or a positive integer as this charset\n         is less than, equal to, or greater than the specified charset</p>\n</div></li></ul></div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-contains' class='name expandable'>contains</a>( <span class='pre'>cs</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this charset contains the given charset. ...</div><div class='long'><p>Tells whether or not this charset contains the given charset.</p>\n\n<p> <p> A charset <i>C</i> is said to <i>contain</i> a charset <i>D</i> if,\n and only if, every character representable in <i>D</i> is also\n representable in <i>C</i>.  If this relationship holds then it is\n guaranteed that every string that can be encoded in <i>D</i> can also be\n encoded in <i>C</i> without performing any replacements.</p>\n\n<p> <p> That <i>C</i> contains <i>D</i> does not imply that each character\n representable in <i>C</i> by a particular byte sequence is represented\n in <i>D</i> by the same byte sequence, although sometimes this is the\n case.</p>\n\n<p> <p> Every charset contains itself.</p>\n\n<p> <p> This method computes an approximation of the containment relation:\n If it returns <tt>true</tt> then the given charset is known to be\n contained by this charset; if it returns <tt>false</tt>, however, then\n it is not necessarily the case that the given charset is not contained\n in this charset.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cs</span> : Object {Charset}<div class='sub-desc'><p>The given charset</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if the given charset is contained in this charset</p>\n</div></li></ul></div></div></div><div id='method-decode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-decode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-decode' class='name expandable'>decode</a>( <span class='pre'>bb</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience method that decodes bytes in this charset into Unicode\n characters. ...</div><div class='long'><p>Convenience method that decodes bytes in this charset into Unicode\n characters.</p>\n\n<p> <p> An invocation of this method upon a charset <tt>cs</tt> returns the\n same result as the expression</p>\n\n<pre>     cs.newDecoder()\n       .onMalformedInput(CodingErrorAction.REPLACE)\n       .onUnmappableCharacter(CodingErrorAction.REPLACE)\n       .decode(bb); </pre>\n\n\n<p> except that it is potentially more efficient because it can cache\n decoders between successive invocations.</p>\n\n<p> <p> This method always replaces malformed-input and unmappable-character\n sequences with this charset's default replacement byte array.  In order\n to detect such sequences, use the java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer) method directly.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bb</span> : Object {ByteBuffer}<div class='sub-desc'><p>The byte buffer to be decoded</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>A char buffer containing the decoded characters</p>\n</div></li></ul></div></div></div><div id='method-defaultCharset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-defaultCharset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-defaultCharset' class='name expandable'>defaultCharset</a>( <span class='pre'></span> ) : Object {java.nio.charset.Charset}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the default charset of this Java virtual machine. ...</div><div class='long'><p>Returns the default charset of this Java virtual machine.</p>\n\n<p> <p>Android note: The Android platform default is always UTF-8.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.Charset}</span><div class='sub-desc'><p>A charset object for the default charset</p>\n</div></li></ul></div></div></div><div id='method-displayName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-displayName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-displayName' class='name expandable'>displayName</a>( <span class='pre'>locale</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this charset's human-readable name for the given locale. ...</div><div class='long'><p>Returns this charset's human-readable name for the given locale.</p>\n\n<p> <p> The default implementation of this method simply returns this\n charset's canonical name.  Concrete subclasses of this class may\n override this method in order to provide a localized display name. </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>The locale for which the display name is to be retrieved</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The display name of this charset in the given locale</p>\n</div></li></ul></div></div></div><div id='method-encode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-encode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-encode' class='name expandable'>encode</a>( <span class='pre'>str</span> ) : Object {java.nio.ByteBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience method that encodes a string into bytes in this charset. ...</div><div class='long'><p>Convenience method that encodes a string into bytes in this charset.</p>\n\n<p> <p> An invocation of this method upon a charset <tt>cs</tt> returns the\n same result as the expression</p>\n\n<pre>     cs.encode(CharBuffer.wrap(s)); </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>The string to be encoded</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.ByteBuffer}</span><div class='sub-desc'><p>A byte buffer containing the encoded characters</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this object is equal to another. ...</div><div class='long'><p>Tells whether or not this object is equal to another.</p>\n\n<p> <p> Two charsets are equal if, and only if, they have the same canonical\n names.  A charset is never equal to any other type of object.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this charset is equal to the\n          given object</p>\n</div></li></ul></div></div></div><div id='method-forName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-forName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-forName' class='name expandable'>forName</a>( <span class='pre'>charsetName</span> ) : Object {java.nio.charset.Charset}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a charset object for the named charset. ...</div><div class='long'><p>Returns a charset object for the named charset.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>charsetName</span> : String<div class='sub-desc'><p>The name of the requested charset; may be either\n         a canonical name or an alias</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.Charset}</span><div class='sub-desc'><p>A charset object for the named charset</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalCharsetNameException\n          If the given charset name is illegal</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the given <tt>charsetName</tt> is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedCharsetException\n          If no support for the named charset is available\n          in this instance of the Java virtual machine</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Computes a hashcode for this charset. ...</div><div class='long'><p>Computes a hashcode for this charset.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An integer hashcode</p>\n</div></li></ul></div></div></div><div id='method-isRegistered' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-isRegistered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-isRegistered' class='name expandable'>isRegistered</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this charset is registered in the <a\n href=\"http://www.iana.org/assignments/character-sets\">IANA...</div><div class='long'><p>Tells whether or not this charset is registered in the <a\n href=\"http://www.iana.org/assignments/character-sets\">IANA Charset\n Registry</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this charset is known by its\n          implementor to be registered with the IANA</p>\n</div></li></ul></div></div></div><div id='method-isSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-isSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-isSupported' class='name expandable'>isSupported</a>( <span class='pre'>charsetName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether the named charset is supported. ...</div><div class='long'><p>Tells whether the named charset is supported.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>charsetName</span> : String<div class='sub-desc'><p>The name of the requested charset; may be either\n         a canonical name or an alias</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, support for the named charset\n          is available in the current Java virtual machine</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalCharsetNameException\n         If the given charset name is illegal</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the given <tt>charsetName</tt> is null</p>\n</div></li></ul></div></div></div><div id='method-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-name' class='name expandable'>name</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this charset's canonical name. ...</div><div class='long'><p>Returns this charset's canonical name.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The canonical name of this charset</p>\n</div></li></ul></div></div></div><div id='method-newDecoder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-newDecoder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-newDecoder' class='name expandable'>newDecoder</a>( <span class='pre'></span> ) : Object {java.nio.charset.CharsetDecoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a new decoder for this charset. ...</div><div class='long'><p>Constructs a new decoder for this charset.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetDecoder}</span><div class='sub-desc'><p>A new decoder for this charset</p>\n</div></li></ul></div></div></div><div id='method-newEncoder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-newEncoder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-newEncoder' class='name expandable'>newEncoder</a>( <span class='pre'></span> ) : Object {java.nio.charset.CharsetEncoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a new encoder for this charset. ...</div><div class='long'><p>Constructs a new encoder for this charset.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetEncoder}</span><div class='sub-desc'><p>A new encoder for this charset</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          If this charset does not support encoding</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.Charset'>java.nio.charset.Charset</span><br/><a href='source/Charset.html#java-nio-charset-Charset-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.Charset-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string describing this charset. ...</div><div class='long'><p>Returns a string describing this charset.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A string describing this charset</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});