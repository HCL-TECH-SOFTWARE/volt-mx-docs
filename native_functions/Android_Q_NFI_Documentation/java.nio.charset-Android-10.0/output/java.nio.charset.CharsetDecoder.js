Ext.data.JsonP.java_nio_charset_CharsetDecoder({"tagname":"class","name":"java.nio.charset.CharsetDecoder","autodetected":{},"files":[{"filename":"CharsetDecoder.js","href":"CharsetDecoder.html#java-nio-charset-CharsetDecoder"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"averageCharsPerByte","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-averageCharsPerByte","meta":{}},{"name":"charset","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-charset","meta":{}},{"name":"decode","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-decode","meta":{}},{"name":"detectedCharset","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-detectedCharset","meta":{}},{"name":"flush","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-flush","meta":{}},{"name":"isAutoDetecting","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-isAutoDetecting","meta":{}},{"name":"isCharsetDetected","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-isCharsetDetected","meta":{}},{"name":"malformedInputAction","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-malformedInputAction","meta":{}},{"name":"maxCharsPerByte","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-maxCharsPerByte","meta":{}},{"name":"onMalformedInput","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-onMalformedInput","meta":{}},{"name":"onUnmappableCharacter","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-onUnmappableCharacter","meta":{}},{"name":"replaceWith","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-replaceWith","meta":{}},{"name":"replacement","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-replacement","meta":{}},{"name":"reset","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-reset","meta":{}},{"name":"unmappableCharacterAction","tagname":"method","owner":"java.nio.charset.CharsetDecoder","id":"method-unmappableCharacterAction","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.charset.CharsetDecoder","short_doc":"An engine that can transform a sequence of bytes in a specific charset into a sequence of\n sixteen-bit Unicode charac...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.charset.CharsetDecoder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder' target='_blank'>CharsetDecoder.js</a></div></pre><div class='doc-contents'><p>An engine that can transform a sequence of bytes in a specific charset into a sequence of\n sixteen-bit Unicode characters.</p>\n\n<p> <a name=\"steps\"></a></p>\n\n<p> <p> The input byte sequence is provided in a byte buffer or a series\n of such buffers.  The output character sequence is written to a character buffer\n or a series of such buffers.  A decoder should always be used by making\n the following sequence of method invocations, hereinafter referred to as a\n <i>decoding operation</i>:</p>\n\n<p> <ol></ol></p>\n\n<p>   <li><p> Reset the decoder via the <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-reset\" rel=\"java.nio.charset.CharsetDecoder-method-reset\" class=\"docClass\">reset</a> method, unless it\n   has not been used before; </p></li></p>\n\n<p>   <li><p> Invoke the <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-decode\" rel=\"java.nio.charset.CharsetDecoder-method-decode\" class=\"docClass\">decode</a> method zero or more times, as\n   long as additional input may be available, passing <tt>false</tt> for the\n   <tt>endOfInput</tt> argument and filling the input buffer and flushing the\n   output buffer between invocations; </p></li></p>\n\n<p>   <li><p> Invoke the <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-decode\" rel=\"java.nio.charset.CharsetDecoder-method-decode\" class=\"docClass\">decode</a> method one final time, passing\n   <tt>true</tt> for the <tt>endOfInput</tt> argument; and then </p></li></p>\n\n<p>   <li><p> Invoke the <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-flush\" rel=\"java.nio.charset.CharsetDecoder-method-flush\" class=\"docClass\">flush</a> method so that the decoder can\n   flush any internal state to the output buffer. </p></li></p>\n\n<p> </p>\n\n<p> Each invocation of the <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-decode\" rel=\"java.nio.charset.CharsetDecoder-method-decode\" class=\"docClass\">decode</a> method will decode as many\n bytes as possible from the input buffer, writing the resulting characters\n to the output buffer.  The <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-decode\" rel=\"java.nio.charset.CharsetDecoder-method-decode\" class=\"docClass\">decode</a> method returns when more\n input is required, when there is not enough room in the output buffer, or\n when a decoding error has occurred.  In each case a <a href=\"#!/api/java.nio.charset.CoderResult\" rel=\"java.nio.charset.CoderResult\" class=\"docClass\">java.nio.charset.CoderResult</a>\n object is returned to describe the reason for termination.  An invoker can\n examine this object and fill the input buffer, flush the output buffer, or\n attempt to recover from a decoding error, as appropriate, and try again.</p>\n\n<p> <a name=\"ce\"></a></p>\n\n<p> <p> There are two general types of decoding errors.  If the input byte\n sequence is not legal for this charset then the input is considered <i>malformed</i>.  If\n the input byte sequence is legal but cannot be mapped to a valid\n Unicode character then an <i>unmappable character</i> has been encountered.</p>\n\n<p> <a name=\"cae\"></a></p>\n\n<p> <p> How a decoding error is handled depends upon the action requested for\n that type of error, which is described by an instance of the <a href=\"#!/api/java.nio.charset.CodingErrorAction\" rel=\"java.nio.charset.CodingErrorAction\" class=\"docClass\">java.nio.charset.CodingErrorAction</a> class.  The possible error actions are to {@linkplain\n <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-IGNORE\" rel=\"java.nio.charset.CodingErrorAction-property-IGNORE\" class=\"docClass\">java.nio.charset.CodingErrorAction.IGNORE</a> ignore} the erroneous input, {@linkplain\n <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-REPORT\" rel=\"java.nio.charset.CodingErrorAction-property-REPORT\" class=\"docClass\">java.nio.charset.CodingErrorAction.REPORT</a> report} the error to the invoker via\n the returned <a href=\"#!/api/java.nio.charset.CoderResult\" rel=\"java.nio.charset.CoderResult\" class=\"docClass\">java.nio.charset.CoderResult</a> object, or {@linkplain <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-REPLACE\" rel=\"java.nio.charset.CodingErrorAction-property-REPLACE\" class=\"docClass\">java.nio.charset.CodingErrorAction.REPLACE</a>\n replace} the erroneous input with the current value of the\n replacement string.  The replacement</p>\n\n<p> has the initial value <tt>\"&#92;uFFFD\"</tt>;</p>\n\n<p> its value may be changed via the replaceWith method.</p>\n\n<p> <p> The default action for malformed-input and unmappable-character errors\n is to {@linkplain <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-REPORT\" rel=\"java.nio.charset.CodingErrorAction-property-REPORT\" class=\"docClass\">java.nio.charset.CodingErrorAction.REPORT</a> report} them.  The\n malformed-input error action may be changed via the onMalformedInput method; the\n unmappable-character action may be changed via the onUnmappableCharacter method.</p>\n\n<p> <p> This class is designed to handle many of the details of the decoding\n process, including the implementation of error actions.  A decoder for a\n specific charset, which is a concrete subclass of this class, need only\n implement the abstract decodeLoop method, which\n encapsulates the basic decoding loop.  A subclass that maintains internal\n state should, additionally, override the implFlush and\n implReset methods.</p>\n\n<p> <p> Instances of this class are not safe for use by multiple concurrent\n threads.  </p></p>\n\n<p> @see ByteBuffer\n @see CharBuffer\n @see Charset\n @see CharsetEncoder</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-averageCharsPerByte' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-averageCharsPerByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-averageCharsPerByte' class='name expandable'>averageCharsPerByte</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the average number of characters that will be produced for each\n byte of input. ...</div><div class='long'><p>Returns the average number of characters that will be produced for each\n byte of input.  This heuristic value may be used to estimate the size\n of the output buffer required for a given input sequence.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The average number of characters produced\n          per byte of input</p>\n</div></li></ul></div></div></div><div id='method-charset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-charset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-charset' class='name expandable'>charset</a>( <span class='pre'></span> ) : Object {java.nio.charset.Charset}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the charset that created this decoder. ...</div><div class='long'><p>Returns the charset that created this decoder.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.Charset}</span><div class='sub-desc'><p>This decoder's charset</p>\n</div></li></ul></div></div></div><div id='method-decode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-decode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-decode' class='name expandable'>decode</a>( <span class='pre'>in</span> ) : Object {java.nio.CharBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience method that decodes the remaining content of a single input\n byte buffer into a newly-allocated character...</div><div class='long'><p>Convenience method that decodes the remaining content of a single input\n byte buffer into a newly-allocated character buffer.</p>\n\n<p> <p> This method implements an entire <a href=\"#steps\">decoding\n operation</a>; that is, it resets this decoder, then it decodes the\n bytes in the given byte buffer, and finally it flushes this\n decoder.  This method should therefore not be invoked if a decoding\n operation is already in progress.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>in</span> : Object {ByteBuffer}<div class='sub-desc'><p>The input byte buffer</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.CharBuffer}</span><div class='sub-desc'><p>A newly-allocated character buffer containing the result of the\n         decoding operation.  The buffer's position will be zero and its\n         limit will follow the last character written.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If a decoding operation is already in progress</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>MalformedInputException\n          If the byte sequence starting at the input buffer's current\n          position is not legal for this charset and the current malformed-input action\n          is CodingErrorAction.REPORT</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnmappableCharacterException\n          If the byte sequence starting at the input buffer's current\n          position cannot be mapped to an equivalent character sequence and\n          the current unmappable-character action is CodingErrorAction.REPORT</p>\n</div></li></ul></div></div></div><div id='method-detectedCharset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-detectedCharset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-detectedCharset' class='name expandable'>detectedCharset</a>( <span class='pre'></span> ) : Object {java.nio.charset.Charset}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the charset that was detected by this\n decoder&nbsp;&nbsp;(optional operation). ...</div><div class='long'><p>Retrieves the charset that was detected by this\n decoder&nbsp;&nbsp;<i>(optional operation)</i>.</p>\n\n<p> <p> If this decoder implements an auto-detecting charset then this\n method returns the actual charset once it has been detected.  After that\n point, this method returns the same value for the duration of the\n current decoding operation.  If not enough input bytes have yet been\n read to determine the actual charset then this method throws an IllegalStateException.</p>\n\n<p> <p> The default implementation of this method always throws an UnsupportedOperationException; it should be overridden by\n auto-detecting decoders to return the appropriate value.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.Charset}</span><div class='sub-desc'><p>The charset detected by this auto-detecting decoder,\n          or <tt>null</tt> if the charset has not yet been determined</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If insufficient bytes have been read to determine a charset</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          If this decoder does not implement an auto-detecting charset</p>\n</div></li></ul></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-flush' class='name expandable'>flush</a>( <span class='pre'>out</span> ) : Object {java.nio.charset.CoderResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes this decoder. ...</div><div class='long'><p>Flushes this decoder.</p>\n\n<p> <p> Some decoders maintain internal state and may need to write some\n final characters to the output buffer once the overall input sequence has\n been read.</p>\n\n<p> <p> Any additional output is written to the output buffer beginning at\n its current position.  At most out.remaining()\n characters will be written.  The buffer's position will be advanced\n appropriately, but its mark and limit will not be modified.</p>\n\n<p> <p> If this method completes successfully then it returns <a href=\"#!/api/java.nio.charset.CoderResult-property-UNDERFLOW\" rel=\"java.nio.charset.CoderResult-property-UNDERFLOW\" class=\"docClass\">java.nio.charset.CoderResult.UNDERFLOW</a>.  If there is insufficient room in the output\n buffer then it returns <a href=\"#!/api/java.nio.charset.CoderResult-property-OVERFLOW\" rel=\"java.nio.charset.CoderResult-property-OVERFLOW\" class=\"docClass\">java.nio.charset.CoderResult.OVERFLOW</a>.  If this happens\n then this method must be invoked again, with an output buffer that has\n more room, in order to complete the current <a href=\"#steps\">decoding\n operation</a>.</p>\n\n<p> <p> If this decoder has already been flushed then invoking this method\n has no effect.</p>\n\n<p> <p> This method invokes the implFlush method to\n perform the actual flushing operation.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>out</span> : Object {CharBuffer}<div class='sub-desc'><p>The output character buffer</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CoderResult}</span><div class='sub-desc'><p>A coder-result object, either CoderResult.UNDERFLOW or\n          CoderResult.OVERFLOW</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If the previous step of the current decoding operation was an\n          invocation neither of the <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-flush\" rel=\"java.nio.charset.CharsetDecoder-method-flush\" class=\"docClass\">flush</a> method nor of\n          the three-argument decode method\n          with a value of <tt>true</tt> for the <tt>endOfInput</tt>\n          parameter</p>\n</div></li></ul></div></div></div><div id='method-isAutoDetecting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-isAutoDetecting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-isAutoDetecting' class='name expandable'>isAutoDetecting</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this decoder implements an auto-detecting charset. ...</div><div class='long'><p>Tells whether or not this decoder implements an auto-detecting charset.</p>\n\n<p> <p> The default implementation of this method always returns\n <tt>false</tt>; it should be overridden by auto-detecting decoders to\n return <tt>true</tt>.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this decoder implements an\n          auto-detecting charset</p>\n</div></li></ul></div></div></div><div id='method-isCharsetDetected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-isCharsetDetected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-isCharsetDetected' class='name expandable'>isCharsetDetected</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this decoder has yet detected a\n charset&nbsp;&nbsp;(optional operation). ...</div><div class='long'><p>Tells whether or not this decoder has yet detected a\n charset&nbsp;&nbsp;<i>(optional operation)</i>.</p>\n\n<p> <p> If this decoder implements an auto-detecting charset then at a\n single point during a decoding operation this method may start returning\n <tt>true</tt> to indicate that a specific charset has been detected in\n the input byte sequence.  Once this occurs, the <a href=\"#!/api/java.nio.charset.CharsetDecoder-method-detectedCharset\" rel=\"java.nio.charset.CharsetDecoder-method-detectedCharset\" class=\"docClass\">detectedCharset</a> method may be invoked to retrieve the detected charset.</p>\n\n<p> <p> That this method returns <tt>false</tt> does not imply that no bytes\n have yet been decoded.  Some auto-detecting decoders are capable of\n decoding some, or even all, of an input byte sequence without fixing on\n a particular charset.</p>\n\n<p> <p> The default implementation of this method always throws an UnsupportedOperationException; it should be overridden by\n auto-detecting decoders to return <tt>true</tt> once the input charset\n has been determined.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this decoder has detected a\n          specific charset</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          If this decoder does not implement an auto-detecting charset</p>\n</div></li></ul></div></div></div><div id='method-malformedInputAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-malformedInputAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-malformedInputAction' class='name expandable'>malformedInputAction</a>( <span class='pre'></span> ) : Object {java.nio.charset.CodingErrorAction}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this decoder's current action for malformed-input errors. ...</div><div class='long'><p>Returns this decoder's current action for malformed-input errors.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CodingErrorAction}</span><div class='sub-desc'><p>The current malformed-input action, which is never <tt>null</tt></p>\n</div></li></ul></div></div></div><div id='method-maxCharsPerByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-maxCharsPerByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-maxCharsPerByte' class='name expandable'>maxCharsPerByte</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum number of characters that will be produced for each\n byte of input. ...</div><div class='long'><p>Returns the maximum number of characters that will be produced for each\n byte of input.  This value may be used to compute the worst-case size\n of the output buffer required for a given input sequence.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The maximum number of characters that will be produced per\n          byte of input</p>\n</div></li></ul></div></div></div><div id='method-onMalformedInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-onMalformedInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-onMalformedInput' class='name expandable'>onMalformedInput</a>( <span class='pre'>newAction</span> ) : Object {java.nio.charset.CharsetDecoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes this decoder's action for malformed-input errors. ...</div><div class='long'><p>Changes this decoder's action for malformed-input errors.</p>\n\n<p> <p> This method invokes the implOnMalformedInput method, passing the new action.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newAction</span> : Object {CodingErrorAction}<div class='sub-desc'><p>The new action; must not be <tt>null</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetDecoder}</span><div class='sub-desc'><p>This decoder</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n         If the precondition on the parameter does not hold</p>\n</div></li></ul></div></div></div><div id='method-onUnmappableCharacter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-onUnmappableCharacter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-onUnmappableCharacter' class='name expandable'>onUnmappableCharacter</a>( <span class='pre'>newAction</span> ) : Object {java.nio.charset.CharsetDecoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes this decoder's action for unmappable-character errors. ...</div><div class='long'><p>Changes this decoder's action for unmappable-character errors.</p>\n\n<p> <p> This method invokes the implOnUnmappableCharacter method, passing the new action.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newAction</span> : Object {CodingErrorAction}<div class='sub-desc'><p>The new action; must not be <tt>null</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetDecoder}</span><div class='sub-desc'><p>This decoder</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n         If the precondition on the parameter does not hold</p>\n</div></li></ul></div></div></div><div id='method-replaceWith' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-replaceWith' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-replaceWith' class='name expandable'>replaceWith</a>( <span class='pre'>newReplacement</span> ) : Object {java.nio.charset.CharsetDecoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes this decoder's replacement value. ...</div><div class='long'><p>Changes this decoder's replacement value.</p>\n\n<p> <p> This method invokes the implReplaceWith\n method, passing the new replacement, after checking that the new\n replacement is acceptable.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newReplacement</span> : String<div class='sub-desc'><p>The replacement value</p>\n\n<pre><code>     The new replacement; must not be &lt;tt&gt;null&lt;/tt&gt;\n     and must have non-zero length\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetDecoder}</span><div class='sub-desc'><p>This decoder</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the preconditions on the parameter do not hold</p>\n</div></li></ul></div></div></div><div id='method-replacement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-replacement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-replacement' class='name expandable'>replacement</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this decoder's replacement value. ...</div><div class='long'><p>Returns this decoder's replacement value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>This decoder's current replacement,\n          which is never <tt>null</tt> and is never empty</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> ) : Object {java.nio.charset.CharsetDecoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets this decoder, clearing any internal state. ...</div><div class='long'><p>Resets this decoder, clearing any internal state.</p>\n\n<p> <p> This method resets charset-independent state and also invokes the\n implReset method in order to perform any\n charset-specific reset actions.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetDecoder}</span><div class='sub-desc'><p>This decoder</p>\n</div></li></ul></div></div></div><div id='method-unmappableCharacterAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetDecoder'>java.nio.charset.CharsetDecoder</span><br/><a href='source/CharsetDecoder.html#java-nio-charset-CharsetDecoder-method-unmappableCharacterAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetDecoder-method-unmappableCharacterAction' class='name expandable'>unmappableCharacterAction</a>( <span class='pre'></span> ) : Object {java.nio.charset.CodingErrorAction}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this decoder's current action for unmappable-character errors. ...</div><div class='long'><p>Returns this decoder's current action for unmappable-character errors.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CodingErrorAction}</span><div class='sub-desc'><p>The current unmappable-character action, which is never\n         <tt>null</tt></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});