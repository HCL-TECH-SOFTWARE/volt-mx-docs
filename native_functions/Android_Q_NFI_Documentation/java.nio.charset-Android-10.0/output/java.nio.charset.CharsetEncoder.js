Ext.data.JsonP.java_nio_charset_CharsetEncoder({"tagname":"class","name":"java.nio.charset.CharsetEncoder","autodetected":{},"files":[{"filename":"CharsetEncoder.js","href":"CharsetEncoder.html#java-nio-charset-CharsetEncoder"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"averageBytesPerChar","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-averageBytesPerChar","meta":{}},{"name":"canEncode","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-canEncode","meta":{}},{"name":"charset","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-charset","meta":{}},{"name":"encode","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-encode","meta":{}},{"name":"flush","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-flush","meta":{}},{"name":"isLegalReplacement","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-isLegalReplacement","meta":{}},{"name":"malformedInputAction","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-malformedInputAction","meta":{}},{"name":"maxBytesPerChar","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-maxBytesPerChar","meta":{}},{"name":"onMalformedInput","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-onMalformedInput","meta":{}},{"name":"onUnmappableCharacter","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-onUnmappableCharacter","meta":{}},{"name":"replaceWith","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-replaceWith","meta":{}},{"name":"replacement","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-replacement","meta":{}},{"name":"reset","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-reset","meta":{}},{"name":"unmappableCharacterAction","tagname":"method","owner":"java.nio.charset.CharsetEncoder","id":"method-unmappableCharacterAction","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.charset.CharsetEncoder","short_doc":"An engine that can transform a sequence of sixteen-bit Unicode characters into a sequence of\n bytes in a specific cha...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.charset.CharsetEncoder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder' target='_blank'>CharsetEncoder.js</a></div></pre><div class='doc-contents'><p>An engine that can transform a sequence of sixteen-bit Unicode characters into a sequence of\n bytes in a specific charset.</p>\n\n<p> <a name=\"steps\"></a></p>\n\n<p> <p> The input character sequence is provided in a character buffer or a series\n of such buffers.  The output byte sequence is written to a byte buffer\n or a series of such buffers.  An encoder should always be used by making\n the following sequence of method invocations, hereinafter referred to as an\n <i>encoding operation</i>:</p>\n\n<p> <ol></ol></p>\n\n<p>   <li><p> Reset the encoder via the <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-reset\" rel=\"java.nio.charset.CharsetEncoder-method-reset\" class=\"docClass\">reset</a> method, unless it\n   has not been used before; </p></li></p>\n\n<p>   <li><p> Invoke the <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-encode\" rel=\"java.nio.charset.CharsetEncoder-method-encode\" class=\"docClass\">encode</a> method zero or more times, as\n   long as additional input may be available, passing <tt>false</tt> for the\n   <tt>endOfInput</tt> argument and filling the input buffer and flushing the\n   output buffer between invocations; </p></li></p>\n\n<p>   <li><p> Invoke the <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-encode\" rel=\"java.nio.charset.CharsetEncoder-method-encode\" class=\"docClass\">encode</a> method one final time, passing\n   <tt>true</tt> for the <tt>endOfInput</tt> argument; and then </p></li></p>\n\n<p>   <li><p> Invoke the <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-flush\" rel=\"java.nio.charset.CharsetEncoder-method-flush\" class=\"docClass\">flush</a> method so that the encoder can\n   flush any internal state to the output buffer. </p></li></p>\n\n<p> </p>\n\n<p> Each invocation of the <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-encode\" rel=\"java.nio.charset.CharsetEncoder-method-encode\" class=\"docClass\">encode</a> method will encode as many\n characters as possible from the input buffer, writing the resulting bytes\n to the output buffer.  The <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-encode\" rel=\"java.nio.charset.CharsetEncoder-method-encode\" class=\"docClass\">encode</a> method returns when more\n input is required, when there is not enough room in the output buffer, or\n when an encoding error has occurred.  In each case a <a href=\"#!/api/java.nio.charset.CoderResult\" rel=\"java.nio.charset.CoderResult\" class=\"docClass\">java.nio.charset.CoderResult</a>\n object is returned to describe the reason for termination.  An invoker can\n examine this object and fill the input buffer, flush the output buffer, or\n attempt to recover from an encoding error, as appropriate, and try again.</p>\n\n<p> <a name=\"ce\"></a></p>\n\n<p> <p> There are two general types of encoding errors.  If the input character\n sequence is not a legal sixteen-bit Unicode sequence then the input is considered <i>malformed</i>.  If\n the input character sequence is legal but cannot be mapped to a valid\n byte sequence in the given charset then an <i>unmappable character</i> has been encountered.</p>\n\n<p> <a name=\"cae\"></a></p>\n\n<p> <p> How an encoding error is handled depends upon the action requested for\n that type of error, which is described by an instance of the <a href=\"#!/api/java.nio.charset.CodingErrorAction\" rel=\"java.nio.charset.CodingErrorAction\" class=\"docClass\">java.nio.charset.CodingErrorAction</a> class.  The possible error actions are to {@linkplain\n <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-IGNORE\" rel=\"java.nio.charset.CodingErrorAction-property-IGNORE\" class=\"docClass\">java.nio.charset.CodingErrorAction.IGNORE</a> ignore} the erroneous input, {@linkplain\n <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-REPORT\" rel=\"java.nio.charset.CodingErrorAction-property-REPORT\" class=\"docClass\">java.nio.charset.CodingErrorAction.REPORT</a> report} the error to the invoker via\n the returned <a href=\"#!/api/java.nio.charset.CoderResult\" rel=\"java.nio.charset.CoderResult\" class=\"docClass\">java.nio.charset.CoderResult</a> object, or {@linkplain <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-REPLACE\" rel=\"java.nio.charset.CodingErrorAction-property-REPLACE\" class=\"docClass\">java.nio.charset.CodingErrorAction.REPLACE</a>\n replace} the erroneous input with the current value of the\n replacement byte array.  The replacement</p>\n\n<p> is initially set to the encoder's default replacement, which often\n (but not always) has the initial value&nbsp;<tt>{</tt>&nbsp;<tt>(byte)'?'</tt>&nbsp;<tt>}</tt>;</p>\n\n<p> its value may be changed via the replaceWith method.</p>\n\n<p> <p> The default action for malformed-input and unmappable-character errors\n is to {@linkplain <a href=\"#!/api/java.nio.charset.CodingErrorAction-property-REPORT\" rel=\"java.nio.charset.CodingErrorAction-property-REPORT\" class=\"docClass\">java.nio.charset.CodingErrorAction.REPORT</a> report} them.  The\n malformed-input error action may be changed via the onMalformedInput method; the\n unmappable-character action may be changed via the onUnmappableCharacter method.</p>\n\n<p> <p> This class is designed to handle many of the details of the encoding\n process, including the implementation of error actions.  An encoder for a\n specific charset, which is a concrete subclass of this class, need only\n implement the abstract encodeLoop method, which\n encapsulates the basic encoding loop.  A subclass that maintains internal\n state should, additionally, override the implFlush and\n implReset methods.</p>\n\n<p> <p> Instances of this class are not safe for use by multiple concurrent\n threads.  </p></p>\n\n<p> @see ByteBuffer\n @see CharBuffer\n @see Charset\n @see CharsetDecoder</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-averageBytesPerChar' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-averageBytesPerChar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-averageBytesPerChar' class='name expandable'>averageBytesPerChar</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the average number of bytes that will be produced for each\n character of input. ...</div><div class='long'><p>Returns the average number of bytes that will be produced for each\n character of input.  This heuristic value may be used to estimate the size\n of the output buffer required for a given input sequence.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The average number of bytes produced\n          per character of input</p>\n</div></li></ul></div></div></div><div id='method-canEncode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-canEncode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-canEncode' class='name expandable'>canEncode</a>( <span class='pre'>cs</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this encoder can encode the given character\n sequence. ...</div><div class='long'><p>Tells whether or not this encoder can encode the given character\n sequence.</p>\n\n<p> <p> If this method returns <tt>false</tt> for a particular character\n sequence then more information about why the sequence cannot be encoded\n may be obtained by performing a full <a href=\"#steps\">encoding\n operation</a>.</p>\n\n<p> <p> This method may modify this encoder's state; it should therefore not\n be invoked if an encoding operation is already in progress.</p>\n\n<p> <p> The default implementation of this method is not very efficient; it\n should generally be overridden to improve performance.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cs</span> : Object {CharSequence}<div class='sub-desc'><p>The given character sequence</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this encoder can encode\n          the given character without throwing any exceptions and without\n          performing any replacements</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If an encoding operation is already in progress</p>\n</div></li></ul></div></div></div><div id='method-charset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-charset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-charset' class='name expandable'>charset</a>( <span class='pre'></span> ) : Object {java.nio.charset.Charset}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the charset that created this encoder. ...</div><div class='long'><p>Returns the charset that created this encoder.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.Charset}</span><div class='sub-desc'><p>This encoder's charset</p>\n</div></li></ul></div></div></div><div id='method-encode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-encode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-encode' class='name expandable'>encode</a>( <span class='pre'>in</span> ) : Object {java.nio.ByteBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience method that encodes the remaining content of a single input\n character buffer into a newly-allocated byte...</div><div class='long'><p>Convenience method that encodes the remaining content of a single input\n character buffer into a newly-allocated byte buffer.</p>\n\n<p> <p> This method implements an entire <a href=\"#steps\">encoding\n operation</a>; that is, it resets this encoder, then it encodes the\n characters in the given character buffer, and finally it flushes this\n encoder.  This method should therefore not be invoked if an encoding\n operation is already in progress.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>in</span> : Object {CharBuffer}<div class='sub-desc'><p>The input character buffer</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.ByteBuffer}</span><div class='sub-desc'><p>A newly-allocated byte buffer containing the result of the\n         encoding operation.  The buffer's position will be zero and its\n         limit will follow the last byte written.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If an encoding operation is already in progress</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>MalformedInputException\n          If the character sequence starting at the input buffer's current\n          position is not a legal sixteen-bit Unicode sequence and the current malformed-input action\n          is CodingErrorAction.REPORT</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnmappableCharacterException\n          If the character sequence starting at the input buffer's current\n          position cannot be mapped to an equivalent byte sequence and\n          the current unmappable-character action is CodingErrorAction.REPORT</p>\n</div></li></ul></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-flush' class='name expandable'>flush</a>( <span class='pre'>out</span> ) : Object {java.nio.charset.CoderResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes this encoder. ...</div><div class='long'><p>Flushes this encoder.</p>\n\n<p> <p> Some encoders maintain internal state and may need to write some\n final bytes to the output buffer once the overall input sequence has\n been read.</p>\n\n<p> <p> Any additional output is written to the output buffer beginning at\n its current position.  At most out.remaining()\n bytes will be written.  The buffer's position will be advanced\n appropriately, but its mark and limit will not be modified.</p>\n\n<p> <p> If this method completes successfully then it returns <a href=\"#!/api/java.nio.charset.CoderResult-property-UNDERFLOW\" rel=\"java.nio.charset.CoderResult-property-UNDERFLOW\" class=\"docClass\">java.nio.charset.CoderResult.UNDERFLOW</a>.  If there is insufficient room in the output\n buffer then it returns <a href=\"#!/api/java.nio.charset.CoderResult-property-OVERFLOW\" rel=\"java.nio.charset.CoderResult-property-OVERFLOW\" class=\"docClass\">java.nio.charset.CoderResult.OVERFLOW</a>.  If this happens\n then this method must be invoked again, with an output buffer that has\n more room, in order to complete the current <a href=\"#steps\">encoding\n operation</a>.</p>\n\n<p> <p> If this encoder has already been flushed then invoking this method\n has no effect.</p>\n\n<p> <p> This method invokes the implFlush method to\n perform the actual flushing operation.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>out</span> : Object {ByteBuffer}<div class='sub-desc'><p>The output byte buffer</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CoderResult}</span><div class='sub-desc'><p>A coder-result object, either CoderResult.UNDERFLOW or\n          CoderResult.OVERFLOW</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If the previous step of the current encoding operation was an\n          invocation neither of the <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-flush\" rel=\"java.nio.charset.CharsetEncoder-method-flush\" class=\"docClass\">flush</a> method nor of\n          the three-argument encode method\n          with a value of <tt>true</tt> for the <tt>endOfInput</tt>\n          parameter</p>\n</div></li></ul></div></div></div><div id='method-isLegalReplacement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-isLegalReplacement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-isLegalReplacement' class='name expandable'>isLegalReplacement</a>( <span class='pre'>repl</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not the given byte array is a legal replacement value\n for this encoder. ...</div><div class='long'><p>Tells whether or not the given byte array is a legal replacement value\n for this encoder.</p>\n\n<p> <p> A replacement is legal if, and only if, it is a legal sequence of\n bytes in this encoder's charset; that is, it must be possible to decode\n the replacement into one or more sixteen-bit Unicode characters.</p>\n\n<p> <p> The default implementation of this method is not very efficient; it\n should generally be overridden to improve performance.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>repl</span> : Object {byte[]}<div class='sub-desc'><p>The byte array to be tested</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, the given byte array\n          is a legal replacement value for this encoder</p>\n</div></li></ul></div></div></div><div id='method-malformedInputAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-malformedInputAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-malformedInputAction' class='name expandable'>malformedInputAction</a>( <span class='pre'></span> ) : Object {java.nio.charset.CodingErrorAction}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this encoder's current action for malformed-input errors. ...</div><div class='long'><p>Returns this encoder's current action for malformed-input errors.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CodingErrorAction}</span><div class='sub-desc'><p>The current malformed-input action, which is never <tt>null</tt></p>\n</div></li></ul></div></div></div><div id='method-maxBytesPerChar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-maxBytesPerChar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-maxBytesPerChar' class='name expandable'>maxBytesPerChar</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum number of bytes that will be produced for each\n character of input. ...</div><div class='long'><p>Returns the maximum number of bytes that will be produced for each\n character of input.  This value may be used to compute the worst-case size\n of the output buffer required for a given input sequence.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The maximum number of bytes that will be produced per\n          character of input</p>\n</div></li></ul></div></div></div><div id='method-onMalformedInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-onMalformedInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-onMalformedInput' class='name expandable'>onMalformedInput</a>( <span class='pre'>newAction</span> ) : Object {java.nio.charset.CharsetEncoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes this encoder's action for malformed-input errors. ...</div><div class='long'><p>Changes this encoder's action for malformed-input errors.</p>\n\n<p> <p> This method invokes the implOnMalformedInput method, passing the new action.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newAction</span> : Object {CodingErrorAction}<div class='sub-desc'><p>The new action; must not be <tt>null</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetEncoder}</span><div class='sub-desc'><p>This encoder</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n         If the precondition on the parameter does not hold</p>\n</div></li></ul></div></div></div><div id='method-onUnmappableCharacter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-onUnmappableCharacter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-onUnmappableCharacter' class='name expandable'>onUnmappableCharacter</a>( <span class='pre'>newAction</span> ) : Object {java.nio.charset.CharsetEncoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes this encoder's action for unmappable-character errors. ...</div><div class='long'><p>Changes this encoder's action for unmappable-character errors.</p>\n\n<p> <p> This method invokes the implOnUnmappableCharacter method, passing the new action.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newAction</span> : Object {CodingErrorAction}<div class='sub-desc'><p>The new action; must not be <tt>null</tt></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetEncoder}</span><div class='sub-desc'><p>This encoder</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n         If the precondition on the parameter does not hold</p>\n</div></li></ul></div></div></div><div id='method-replaceWith' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-replaceWith' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-replaceWith' class='name expandable'>replaceWith</a>( <span class='pre'>newReplacement</span> ) : Object {java.nio.charset.CharsetEncoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes this encoder's replacement value. ...</div><div class='long'><p>Changes this encoder's replacement value.</p>\n\n<p> <p> This method invokes the implReplaceWith\n method, passing the new replacement, after checking that the new\n replacement is acceptable.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newReplacement</span> : Object {byte[]}<div class='sub-desc'><p>The replacement value</p>\n\n<pre><code>     The new replacement; must not be &lt;tt&gt;null&lt;/tt&gt;, must have\n     non-zero length, must not be longer than the value returned by\n     the maxBytesPerChar method, and\n     must be <a href=\"#!/api/java.nio.charset.CharsetEncoder-method-isLegalReplacement\" rel=\"java.nio.charset.CharsetEncoder-method-isLegalReplacement\" class=\"docClass\">legal</a>\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetEncoder}</span><div class='sub-desc'><p>This encoder</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the preconditions on the parameter do not hold</p>\n</div></li></ul></div></div></div><div id='method-replacement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-replacement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-replacement' class='name expandable'>replacement</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this encoder's replacement value. ...</div><div class='long'><p>Returns this encoder's replacement value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>This encoder's current replacement,\n          which is never <tt>null</tt> and is never empty</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> ) : Object {java.nio.charset.CharsetEncoder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets this encoder, clearing any internal state. ...</div><div class='long'><p>Resets this encoder, clearing any internal state.</p>\n\n<p> <p> This method resets charset-independent state and also invokes the\n implReset method in order to perform any\n charset-specific reset actions.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CharsetEncoder}</span><div class='sub-desc'><p>This encoder</p>\n</div></li></ul></div></div></div><div id='method-unmappableCharacterAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.charset.CharsetEncoder'>java.nio.charset.CharsetEncoder</span><br/><a href='source/CharsetEncoder.html#java-nio-charset-CharsetEncoder-method-unmappableCharacterAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.charset.CharsetEncoder-method-unmappableCharacterAction' class='name expandable'>unmappableCharacterAction</a>( <span class='pre'></span> ) : Object {java.nio.charset.CodingErrorAction}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this encoder's current action for unmappable-character errors. ...</div><div class='long'><p>Returns this encoder's current action for unmappable-character errors.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.charset.CodingErrorAction}</span><div class='sub-desc'><p>The current unmappable-character action, which is never\n         <tt>null</tt></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});