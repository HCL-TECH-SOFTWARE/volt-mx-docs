Ext.data.JsonP.com_android_bitmap_RequestKey({"tagname":"class","name":"com.android.bitmap.RequestKey","autodetected":{},"files":[{"filename":"RequestKey.js","href":"RequestKey.html#com-android-bitmap-RequestKey"}],"members":[{"name":"createFileDescriptorFactoryAsync","tagname":"method","owner":"com.android.bitmap.RequestKey","id":"method-createFileDescriptorFactoryAsync","meta":{}},{"name":"createInputStream","tagname":"method","owner":"com.android.bitmap.RequestKey","id":"method-createInputStream","meta":{}},{"name":"hasOrientationExif","tagname":"method","owner":"com.android.bitmap.RequestKey","id":"method-hasOrientationExif","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.bitmap.RequestKey","short_doc":"The decode task uses this class to get input to decode. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/RequestKey.html#com-android-bitmap-RequestKey' target='_blank'>RequestKey.js</a></div></pre><div class='doc-contents'><p>The decode task uses this class to get input to decode. You must implement at least one of\n com.android.bitmap.ContiguousFIFOAggregator.Callback) or <a href=\"#!/api/com.android.bitmap.RequestKey-method-createInputStream\" rel=\"com.android.bitmap.RequestKey-method-createInputStream\" class=\"docClass\">createInputStream</a>().\n <a href=\"#!/api/com.android.bitmap.DecodeTask\" rel=\"com.android.bitmap.DecodeTask\" class=\"docClass\">com.android.bitmap.DecodeTask</a> will prioritize\n com.android.bitmap.ContiguousFIFOAggregator.Callback) before falling back to\n <a href=\"#!/api/com.android.bitmap.RequestKey-method-createInputStream\" rel=\"com.android.bitmap.RequestKey-method-createInputStream\" class=\"docClass\">createInputStream</a>().</p>\n\n<p> <p>\n Clients of this interface must also implement equals(Object) and hashCode() as\n this object will be used as a cache key.</p>\n\n<p> <p>\n The following is a high level view of the interactions between RequestKey and the rest of the\n system.</p>\n\n<pre><code>   BasicBitmapDrawable\n       UI Thread\n          ++\n   bind() ||            Background Thread\n          |+--------------------&gt;+\n          || createFDFasync()   ||\n          ||                    || Download from url\n          ||                    || Cache on disk\n          ||                    ||\n          ||                    vv\n          |&lt;--------------------+x\n          ||        FDFcreated()\n          ||\n          ||\n          ||                DecodeTask\n          ||             AsyncTask Thread\n          |+--------------------&gt;+\n          || new().execute()    ||\n          ||                    || Decode from FDF\n          ||                    || or createInputStream()\n          ||                    ||\n          ||                    vv\n          |&lt;--------------------+x\n          ||  onDecodeComplete()\n          vv\n</code></pre>\n\n<p> invalidate() xx</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createFileDescriptorFactoryAsync' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.RequestKey'>com.android.bitmap.RequestKey</span><br/><a href='source/RequestKey.html#com-android-bitmap-RequestKey-method-createFileDescriptorFactoryAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.RequestKey-method-createFileDescriptorFactoryAsync' class='name expandable'>createFileDescriptorFactoryAsync</a>( <span class='pre'>key, callback</span> ) : Object {com.android.bitmap.RequestKey.Cancelable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an com.android.bitmap.RequestKey.FileDescriptorFactory for a local file stored on the device and pass it to\n t...</div><div class='long'><p>Create an <a href=\"#!/api/com.android.bitmap.RequestKey.FileDescriptorFactory\" rel=\"com.android.bitmap.RequestKey.FileDescriptorFactory\" class=\"docClass\">com.android.bitmap.RequestKey.FileDescriptorFactory</a> for a local file stored on the device and pass it to\n the given callback. This method will be called in favor of <a href=\"#!/api/com.android.bitmap.RequestKey-method-createInputStream\" rel=\"com.android.bitmap.RequestKey-method-createInputStream\" class=\"docClass\">createInputStream</a>()},\n which will only be called if null is returned from this method,\n or com.android.bitmap.RequestKey.FileDescriptorFactory) is called\n with a null FileDescriptorFactory.</p>\n\n<p> Clients should implement this method if files are in the local cache folder, or if files must\n be downloaded and cached.</p>\n\n<p> This method must be called from the UI thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Object {RequestKey}<div class='sub-desc'><p>The key to create a FileDescriptorFactory for. This key will be passed to the\n                 callback so it can check whether the key has changed.</p>\n</div></li><li><span class='pre'>callback</span> : Object {RequestKey.Callback}<div class='sub-desc'><p>The callback to notify once the FileDescriptorFactory is created or has failed\n                 to be created.\n                 Do not invoke the callback directly from this method. Instead, create a handler\n                 and post a Runnable.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.bitmap.RequestKey.Cancelable}</span><div class='sub-desc'><p>If the client will attempt to create a FileDescriptorFactory, return a Cancelable\n object to cancel the asynchronous task. If the client wants to create an InputStream instead,\n return null. The callback must be notified if and only if the client returns a Cancelable\n object and not null.</p>\n</div></li></ul></div></div></div><div id='method-createInputStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.RequestKey'>com.android.bitmap.RequestKey</span><br/><a href='source/RequestKey.html#com-android-bitmap-RequestKey-method-createInputStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.RequestKey-method-createInputStream' class='name expandable'>createInputStream</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an InputStream for the source. ...</div><div class='long'><p>Create an InputStream for the source. This method will be called if\n com.android.bitmap.ContiguousFIFOAggregator.Callback) returns null.</p>\n\n<p> Clients should implement this method if files exist in the assets/ folder, or for prototypes\n that open a connection directly on a URL (be warned that this will cause GCs).</p>\n\n<p> This method can be called from any thread.</p>\n</div></div></div><div id='method-hasOrientationExif' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.RequestKey'>com.android.bitmap.RequestKey</span><br/><a href='source/RequestKey.html#com-android-bitmap-RequestKey-method-hasOrientationExif' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.RequestKey-method-hasOrientationExif' class='name expandable'>hasOrientationExif</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the image source may have be oriented in either portrait or landscape, and\n will need to be automatica...</div><div class='long'><p>Return true if the image source may have be oriented in either portrait or landscape, and\n will need to be automatically re-oriented based on accompanying Exif metadata.</p>\n\n<p> This method can be called from any thread.</p>\n</div></div></div></div></div></div></div>","meta":{}});