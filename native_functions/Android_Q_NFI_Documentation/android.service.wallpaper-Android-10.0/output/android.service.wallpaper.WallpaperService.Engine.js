Ext.data.JsonP.android_service_wallpaper_WallpaperService_Engine({"tagname":"class","name":"android.service.wallpaper.WallpaperService.Engine","autodetected":{},"files":[{"filename":"Engine.js","href":"Engine.html#android-service-wallpaper-WallpaperService-Engine"}],"extends":"java.lang.Object","members":[{"name":"getDesiredMinimumHeight","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-getDesiredMinimumHeight","meta":{}},{"name":"getDesiredMinimumWidth","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-getDesiredMinimumWidth","meta":{}},{"name":"getDisplayContext","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-getDisplayContext","meta":{}},{"name":"getSurfaceHolder","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-getSurfaceHolder","meta":{}},{"name":"isPreview","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-isPreview","meta":{}},{"name":"isVisible","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-isVisible","meta":{}},{"name":"notifyColorsChanged","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-notifyColorsChanged","meta":{}},{"name":"onApplyWindowInsets","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onApplyWindowInsets","meta":{}},{"name":"onCommand","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onCommand","meta":{}},{"name":"onComputeColors","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onComputeColors","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onCreate","meta":{}},{"name":"onDesiredSizeChanged","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onDesiredSizeChanged","meta":{}},{"name":"onDestroy","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onDestroy","meta":{}},{"name":"onOffsetsChanged","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onOffsetsChanged","meta":{}},{"name":"onSurfaceChanged","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onSurfaceChanged","meta":{}},{"name":"onSurfaceCreated","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onSurfaceCreated","meta":{}},{"name":"onSurfaceDestroyed","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onSurfaceDestroyed","meta":{}},{"name":"onSurfaceRedrawNeeded","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onSurfaceRedrawNeeded","meta":{}},{"name":"onTouchEvent","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onTouchEvent","meta":{}},{"name":"onVisibilityChanged","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-onVisibilityChanged","meta":{}},{"name":"setFixedSizeAllowed","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-setFixedSizeAllowed","meta":{}},{"name":"setOffsetNotificationsEnabled","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-setOffsetNotificationsEnabled","meta":{}},{"name":"setTouchEventsEnabled","tagname":"method","owner":"android.service.wallpaper.WallpaperService.Engine","id":"method-setTouchEventsEnabled","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.service.wallpaper.WallpaperService.Engine","short_doc":"The actual implementation of a wallpaper. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.service.wallpaper.WallpaperService.Engine</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine' target='_blank'>Engine.js</a></div></pre><div class='doc-contents'><p>The actual implementation of a wallpaper.  A wallpaper service may\n have multiple instances running (for example as a real wallpaper\n and as a preview), each of which is represented by its own Engine\n instance.  You must implement android.service.wallpaper.WallpaperService.onCreateEngine()\n to return your concrete Engine implementation.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getDesiredMinimumHeight' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-getDesiredMinimumHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-getDesiredMinimumHeight' class='name expandable'>getDesiredMinimumHeight</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for WallpaperManager.getDesiredMinimumHeight(), returning the height\n that the system would like this wal...</div><div class='long'><p>Convenience for WallpaperManager.getDesiredMinimumHeight(), returning the height\n that the system would like this wallpaper to run in.</p>\n</div></div></div><div id='method-getDesiredMinimumWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-getDesiredMinimumWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-getDesiredMinimumWidth' class='name expandable'>getDesiredMinimumWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for WallpaperManager.getDesiredMinimumWidth(), returning the width\n that the system would like this wallp...</div><div class='long'><p>Convenience for WallpaperManager.getDesiredMinimumWidth(), returning the width\n that the system would like this wallpaper to run in.</p>\n</div></div></div><div id='method-getDisplayContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-getDisplayContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-getDisplayContext' class='name expandable'>getDisplayContext</a>( <span class='pre'></span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>The Context with resources that match the current display the wallpaper is on. ...</div><div class='long'><p>The Context with resources that match the current display the wallpaper is on.\n For multiple display environment, multiple engines can be created to render on each\n display, but these displays may have different densities. Use this context to get the\n corresponding resources for currently display, avoiding the context of the service.\n <p>\n The display context will never be {@code null} after\n onCreate(SurfaceHolder) has been called.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>A Context for current display.</p>\n</div></li></ul></div></div></div><div id='method-getSurfaceHolder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-getSurfaceHolder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-getSurfaceHolder' class='name expandable'>getSurfaceHolder</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Provides access to the surface in which this wallpaper is drawn. ...</div><div class='long'><p>Provides access to the surface in which this wallpaper is drawn.</p>\n</div></div></div><div id='method-isPreview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-isPreview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-isPreview' class='name expandable'>isPreview</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this engine is running in preview mode -- that is,\n it is being shown to the user before they select ...</div><div class='long'><p>Returns true if this engine is running in preview mode -- that is,\n it is being shown to the user before they select it as the actual\n wallpaper.</p>\n</div></div></div><div id='method-isVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-isVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-isVisible' class='name expandable'>isVisible</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the wallpaper is currently visible to the user,\n this is the last value supplied to\n onVisibilityChang...</div><div class='long'><p>Return whether the wallpaper is currently visible to the user,\n this is the last value supplied to\n <a href=\"#!/api/android.service.wallpaper.WallpaperService.Engine-method-onVisibilityChanged\" rel=\"android.service.wallpaper.WallpaperService.Engine-method-onVisibilityChanged\" class=\"docClass\">onVisibilityChanged</a>(boolean).</p>\n</div></div></div><div id='method-notifyColorsChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-notifyColorsChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-notifyColorsChanged' class='name expandable'>notifyColorsChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the engine that wallpaper colors changed significantly. ...</div><div class='long'><p>Notifies the engine that wallpaper colors changed significantly.\n This will trigger a <a href=\"#!/api/android.service.wallpaper.WallpaperService.Engine-method-onComputeColors\" rel=\"android.service.wallpaper.WallpaperService.Engine-method-onComputeColors\" class=\"docClass\">onComputeColors</a>() call.</p>\n</div></div></div><div id='method-onApplyWindowInsets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onApplyWindowInsets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onApplyWindowInsets' class='name expandable'>onApplyWindowInsets</a>( <span class='pre'>insets</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called with the current insets that are in effect for the wallpaper. ...</div><div class='long'><p>Called with the current insets that are in effect for the wallpaper.\n This gives you the part of the overall wallpaper surface that will\n generally be visible to the user (ignoring position offsets applied to it).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>insets</span> : Object {WindowInsets}<div class='sub-desc'><p>Insets to apply.</p>\n</div></li></ul></div></div></div><div id='method-onCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onCommand' class='name expandable'>onCommand</a>( <span class='pre'>action, x, y, z, extras, resultRequested</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Process a command that was sent to the wallpaper with\n WallpaperManager.sendWallpaperCommand. ...</div><div class='long'><p>Process a command that was sent to the wallpaper with\n WallpaperManager.sendWallpaperCommand.\n The default implementation does nothing, and always returns null\n as the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : String<div class='sub-desc'><p>The name of the command to perform.  This tells you\n what to do and how to interpret the rest of the arguments.</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>Generic integer parameter.</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>Generic integer parameter.</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>Generic integer parameter.</p>\n</div></li><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>Any additional parameters.</p>\n</div></li><li><span class='pre'>resultRequested</span> : Boolean<div class='sub-desc'><p>If true, the caller is requesting that\n a result, appropriate for the command, be returned back.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>If returning a result, create a Bundle and place the\n result data in to it.  Otherwise return null.</p>\n</div></li></ul></div></div></div><div id='method-onComputeColors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onComputeColors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onComputeColors' class='name expandable'>onComputeColors</a>( <span class='pre'></span> ) : Object {android.app.WallpaperColors}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the system when it needs to know what colors the wallpaper is using. ...</div><div class='long'><p>Called by the system when it needs to know what colors the wallpaper is using.\n You might return null if no color information is available at the moment.\n In that case you might want to call <a href=\"#!/api/android.service.wallpaper.WallpaperService.Engine-method-notifyColorsChanged\" rel=\"android.service.wallpaper.WallpaperService.Engine-method-notifyColorsChanged\" class=\"docClass\">notifyColorsChanged</a>() when\n color information becomes available.\n <p>\n The simplest way of creating a android.app.WallpaperColors object is by using\n android.app.WallpaperColors.fromBitmap(Bitmap) or\n android.app.WallpaperColors.fromDrawable(Drawable), but you can also specify\n your main colors by constructing a android.app.WallpaperColors object manually.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.WallpaperColors}</span><div class='sub-desc'><p>Wallpaper colors.</p>\n</div></li></ul></div></div></div><div id='method-onCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called once to initialize the engine. ...</div><div class='long'><p>Called once to initialize the engine.  After returning, the\n engine's surface will be created by the framework.</p>\n</div></div></div><div id='method-onDesiredSizeChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onDesiredSizeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onDesiredSizeChanged' class='name expandable'>onDesiredSizeChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an application has changed the desired virtual size of\n the wallpaper. ...</div><div class='long'><p>Called when an application has changed the desired virtual size of\n the wallpaper.</p>\n</div></div></div><div id='method-onDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onDestroy' class='name expandable'>onDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called right before the engine is going away. ...</div><div class='long'><p>Called right before the engine is going away.  After this the\n surface will be destroyed and this Engine object is no longer\n valid.</p>\n</div></div></div><div id='method-onOffsetsChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onOffsetsChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onOffsetsChanged' class='name expandable'>onOffsetsChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to inform you of the wallpaper's offsets changing\n within its contain, corresponding to the container's\n call ...</div><div class='long'><p>Called to inform you of the wallpaper's offsets changing\n within its contain, corresponding to the container's\n call to float, float)\n WallpaperManager.setWallpaperOffsets().</p>\n</div></div></div><div id='method-onSurfaceChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onSurfaceChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onSurfaceChanged' class='name expandable'>onSurfaceChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for SurfaceHolder.Callback.surfaceChanged(). ...</div><div class='long'><p>Convenience for SurfaceHolder.Callback.surfaceChanged().</p>\n</div></div></div><div id='method-onSurfaceCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onSurfaceCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onSurfaceCreated' class='name expandable'>onSurfaceCreated</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for SurfaceHolder.Callback.surfaceCreated(). ...</div><div class='long'><p>Convenience for SurfaceHolder.Callback.surfaceCreated().</p>\n</div></div></div><div id='method-onSurfaceDestroyed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onSurfaceDestroyed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onSurfaceDestroyed' class='name expandable'>onSurfaceDestroyed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for SurfaceHolder.Callback.surfaceDestroyed(). ...</div><div class='long'><p>Convenience for SurfaceHolder.Callback.surfaceDestroyed().</p>\n</div></div></div><div id='method-onSurfaceRedrawNeeded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onSurfaceRedrawNeeded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onSurfaceRedrawNeeded' class='name expandable'>onSurfaceRedrawNeeded</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for SurfaceHolder.Callback.surfaceRedrawNeeded(). ...</div><div class='long'><p>Convenience for SurfaceHolder.Callback.surfaceRedrawNeeded().</p>\n</div></div></div><div id='method-onTouchEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onTouchEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onTouchEvent' class='name expandable'>onTouchEvent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called as the user performs touch-screen interaction with the\n window that is currently showing this wallpaper. ...</div><div class='long'><p>Called as the user performs touch-screen interaction with the\n window that is currently showing this wallpaper.  Note that the\n events you receive here are driven by the actual application the\n user is interacting with, so if it is slow you will get fewer\n move events.</p>\n</div></div></div><div id='method-onVisibilityChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-onVisibilityChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-onVisibilityChanged' class='name expandable'>onVisibilityChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to inform you of the wallpaper becoming visible or\n hidden. ...</div><div class='long'><p>Called to inform you of the wallpaper becoming visible or\n hidden.  <em>It is very important that a wallpaper only use\n CPU while it is visible.</em>.</p>\n</div></div></div><div id='method-setFixedSizeAllowed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-setFixedSizeAllowed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-setFixedSizeAllowed' class='name expandable'>setFixedSizeAllowed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-setOffsetNotificationsEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-setOffsetNotificationsEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-setOffsetNotificationsEnabled' class='name expandable'>setOffsetNotificationsEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control whether this wallpaper will receive notifications when the wallpaper\n has been scrolled. ...</div><div class='long'><p>Control whether this wallpaper will receive notifications when the wallpaper\n has been scrolled. By default, wallpapers will receive notifications, although\n the default static image wallpapers do not. It is a performance optimization to\n set this to false.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>whether the wallpaper wants to receive offset notifications</p>\n</div></li></ul></div></div></div><div id='method-setTouchEventsEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.wallpaper.WallpaperService.Engine'>android.service.wallpaper.WallpaperService.Engine</span><br/><a href='source/Engine.html#android-service-wallpaper-WallpaperService-Engine-method-setTouchEventsEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.wallpaper.WallpaperService.Engine-method-setTouchEventsEnabled' class='name expandable'>setTouchEventsEnabled</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control whether this wallpaper will receive raw touch events\n from the window manager as the user interacts with the ...</div><div class='long'><p>Control whether this wallpaper will receive raw touch events\n from the window manager as the user interacts with the window\n that is currently displaying the wallpaper.  By default they\n are turned off.  If enabled, the events will be received in\n <a href=\"#!/api/android.service.wallpaper.WallpaperService.Engine-method-onTouchEvent\" rel=\"android.service.wallpaper.WallpaperService.Engine-method-onTouchEvent\" class=\"docClass\">onTouchEvent</a>(MotionEvent).</p>\n</div></div></div></div></div></div></div>","meta":{}});