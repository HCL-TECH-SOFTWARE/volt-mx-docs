Ext.data.JsonP.android_net_SSLSessionCache({"tagname":"class","name":"android.net.SSLSessionCache","autodetected":{},"files":[{"filename":"SSLSessionCache.js","href":"SSLSessionCache.html#android-net-SSLSessionCache"}],"extends":"java.lang.Object","members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.net.SSLSessionCache","short_doc":"File-based cache of established SSL sessions. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.SSLSessionCache</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SSLSessionCache.html#android-net-SSLSessionCache' target='_blank'>SSLSessionCache.js</a></div></pre><div class='doc-contents'><p>File-based cache of established SSL sessions.  When re-establishing a\n connection to the same server, using an SSL session cache can save some time,\n power, and bandwidth by skipping directly to an encrypted stream.\n This is a persistent cache which can span executions of the application.</p>\n\n<p> @see SSLCertificateSocketFactory</p>\n</div><div class='members'></div></div>","meta":{}});