Ext.data.JsonP.android_net_InetAddresses({"tagname":"class","name":"android.net.InetAddresses","autodetected":{},"files":[{"filename":"InetAddresses.js","href":"InetAddresses.html#android-net-InetAddresses"}],"extends":"java.lang.Object","members":[{"name":"isNumericAddress","tagname":"method","owner":"android.net.InetAddresses","id":"method-isNumericAddress","meta":{}},{"name":"parseNumericAddress","tagname":"method","owner":"android.net.InetAddresses","id":"method-parseNumericAddress","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.InetAddresses","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.InetAddresses</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/InetAddresses.html#android-net-InetAddresses' target='_blank'>InetAddresses.js</a></div></pre><div class='doc-contents'><p>Utility methods for InetAddress implementations.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-isNumericAddress' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.InetAddresses'>android.net.InetAddresses</span><br/><a href='source/InetAddresses.html#android-net-InetAddresses-method-isNumericAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.InetAddresses-method-isNumericAddress' class='name expandable'>isNumericAddress</a>( <span class='pre'>address</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks to see if the {@code address} is a numeric address (such as {@code \"192.0.2.1\"} or\n {@code \"2001:db8::1:2\"}). ...</div><div class='long'><p>Checks to see if the {@code address} is a numeric address (such as {@code \"192.0.2.1\"} or\n {@code \"2001:db8::1:2\"}).</p>\n\n<p> <p>A numeric address is either an IPv4 address containing exactly 4 decimal numbers or an\n IPv6 numeric address. IPv4 addresses that consist of either hexadecimal or octal digits or\n do not have exactly 4 numbers are not treated as numeric.</p>\n\n<p> <p>This method will never do a DNS lookup.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>address</span> : String<div class='sub-desc'><p>the address to parse.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the supplied address is numeric, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-parseNumericAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.InetAddresses'>android.net.InetAddresses</span><br/><a href='source/InetAddresses.html#android-net-InetAddresses-method-parseNumericAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.InetAddresses-method-parseNumericAddress' class='name expandable'>parseNumericAddress</a>( <span class='pre'>address</span> ) : Object {java.net.InetAddress}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an InetAddress corresponding to the given numeric address (such\n as {@code \"192.168.0.1\"} or {@code \"2001:486...</div><div class='long'><p>Returns an InetAddress corresponding to the given numeric address (such\n as {@code \"192.168.0.1\"} or {@code \"2001:4860:800d::68\"}).</p>\n\n<p> <p>See <a href=\"#!/api/android.net.InetAddresses-method-isNumericAddress\" rel=\"android.net.InetAddresses-method-isNumericAddress\" class=\"docClass\">isNumericAddress</a>(String) (String)} for a definition as to what constitutes a\n numeric address.</p>\n\n<p> <p>This method will never do a DNS lookup.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>address</span> : String<div class='sub-desc'><p>the address to parse, must be numeric.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.InetAddress}</span><div class='sub-desc'><p>an InetAddress instance corresponding to the address.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if {@code address} is not a numeric address.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});