Ext.data.JsonP.android_net_NetworkInfo({"tagname":"class","name":"android.net.NetworkInfo","autodetected":{},"files":[{"filename":"NetworkInfo.js","href":"NetworkInfo.html#android-net-NetworkInfo"}],"extends":"java.lang.Object","deprecated":{"text":"<p>Callers should instead use the <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes, or switch to use\n             <a href=\"#!/api/android.net.ConnectivityManager-method-getNetworkCapabilities\" rel=\"android.net.ConnectivityManager-method-getNetworkCapabilities\" class=\"docClass\">android.net.ConnectivityManager.getNetworkCapabilities</a> or\n             <a href=\"#!/api/android.net.ConnectivityManager-method-getLinkProperties\" rel=\"android.net.ConnectivityManager-method-getLinkProperties\" class=\"docClass\">android.net.ConnectivityManager.getLinkProperties</a> to get information synchronously. Keep\n             in mind that while callbacks are guaranteed to be called for every event in order,\n             synchronous calls have no such constraints, and as such it is unadvisable to use the\n             synchronous methods inside the callbacks as they will often not offer a view of\n             networking that is consistent (that is: they may return a past or a future state with\n             respect to the event being processed by the callback). Instead, callers are advised\n             to only use the arguments of the callbacks, possibly memorizing the specific bits of\n             information they need to keep from one callback to another.</p>\n"},"members":[{"name":"CREATOR","tagname":"property","owner":"android.net.NetworkInfo","id":"property-CREATOR","meta":{}},{"name":"describeContents","tagname":"method","owner":"android.net.NetworkInfo","id":"method-describeContents","meta":{}},{"name":"getDetailedState","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getDetailedState","meta":{"deprecated":{"text":"<p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes. See\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n"}}},{"name":"getExtraInfo","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getExtraInfo","meta":{"deprecated":{"text":"<p>Use other services e.g. WifiManager to get additional information passed up from\n             the lower networking layers.</p>\n"}}},{"name":"getReason","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getReason","meta":{"deprecated":{"text":"<p>This method does not have a consistent contract that could make it useful\n             to callers.</p>\n"}}},{"name":"getState","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getState","meta":{"deprecated":{"text":"<p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes.\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n"}}},{"name":"getSubtype","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getSubtype","meta":{"deprecated":{"text":"<p>Use android.telephony.TelephonyManager.getDataNetworkType instead.</p>\n"}}},{"name":"getSubtypeName","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getSubtypeName","meta":{"deprecated":{"text":"<p>Use android.telephony.TelephonyManager.getDataNetworkType instead.</p>\n"}}},{"name":"getType","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getType","meta":{"deprecated":{"text":"<p>Callers should switch to checking NetworkCapabilities.hasTransport\n             instead with one of the NetworkCapabilities#TRANSPORT_* constants :\n             <a href=\"#!/api/android.net.NetworkInfo-method-getType\" rel=\"android.net.NetworkInfo-method-getType\" class=\"docClass\">getType</a> and <a href=\"#!/api/android.net.NetworkInfo-method-getTypeName\" rel=\"android.net.NetworkInfo-method-getTypeName\" class=\"docClass\">getTypeName</a> cannot account for networks using\n             multiple transports. Note that generally apps should not care about transport;\n             NetworkCapabilities.NET_CAPABILITY_NOT_METERED and\n             NetworkCapabilities.getLinkDownstreamBandwidthKbps are calls that\n             apps concerned with meteredness or bandwidth should be looking at, as they\n             offer this information with much better accuracy.</p>\n"}}},{"name":"getTypeName","tagname":"method","owner":"android.net.NetworkInfo","id":"method-getTypeName","meta":{"deprecated":{"text":"<p>Callers should switch to checking NetworkCapabilities.hasTransport\n             instead with one of the NetworkCapabilities#TRANSPORT_* constants :\n             <a href=\"#!/api/android.net.NetworkInfo-method-getType\" rel=\"android.net.NetworkInfo-method-getType\" class=\"docClass\">getType</a> and <a href=\"#!/api/android.net.NetworkInfo-method-getTypeName\" rel=\"android.net.NetworkInfo-method-getTypeName\" class=\"docClass\">getTypeName</a> cannot account for networks using\n             multiple transports. Note that generally apps should not care about transport;\n             NetworkCapabilities.NET_CAPABILITY_NOT_METERED and\n             NetworkCapabilities.getLinkDownstreamBandwidthKbps are calls that\n             apps concerned with meteredness or bandwidth should be looking at, as they\n             offer this information with much better accuracy.</p>\n"}}},{"name":"isAvailable","tagname":"method","owner":"android.net.NetworkInfo","id":"method-isAvailable","meta":{"deprecated":{"text":"<p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes.\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n"}}},{"name":"isConnected","tagname":"method","owner":"android.net.NetworkInfo","id":"method-isConnected","meta":{"deprecated":{"text":"<p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes. See\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n"}}},{"name":"isConnectedOrConnecting","tagname":"method","owner":"android.net.NetworkInfo","id":"method-isConnectedOrConnecting","meta":{"deprecated":{"text":"<p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes.\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n"}}},{"name":"isFailover","tagname":"method","owner":"android.net.NetworkInfo","id":"method-isFailover","meta":{"deprecated":{"text":"<p>This field is not populated in recent Android releases,\n             and does not make a lot of sense in a multi-network world.</p>\n"}}},{"name":"isRoaming","tagname":"method","owner":"android.net.NetworkInfo","id":"method-isRoaming","meta":{"deprecated":{"text":"<p>Callers should switch to checking\n             NetworkCapabilities.NET_CAPABILITY_NOT_ROAMING\n             instead, since that handles more complex situations, such as\n             VPNs.</p>\n"}}},{"name":"setRoaming","tagname":"method","owner":"android.net.NetworkInfo","id":"method-setRoaming","meta":{"deprecated":{"text":"<p>Use NetworkCapabilities.NET_CAPABILITY_NOT_ROAMING instead.\n {@hide}</p>\n"}}},{"name":"toString","tagname":"method","owner":"android.net.NetworkInfo","id":"method-toString","meta":{}},{"name":"writeToParcel","tagname":"method","owner":"android.net.NetworkInfo","id":"method-writeToParcel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.NetworkInfo","short_doc":"implements android.os.Parcelable\n\nDescribes the status of a network interface. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.NetworkInfo</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/NetworkInfo.html#android-net-NetworkInfo' target='_blank'>NetworkInfo.js</a></div></pre><div class='doc-contents'><p>implements android.os.Parcelable</p>\n\n<p>Describes the status of a network interface.\n <p>Use android.net.ConnectivityManager.getActiveNetworkInfo() to get an instance that represents\n the current network connection.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Callers should instead use the <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes, or switch to use\n             <a href=\"#!/api/android.net.ConnectivityManager-method-getNetworkCapabilities\" rel=\"android.net.ConnectivityManager-method-getNetworkCapabilities\" class=\"docClass\">android.net.ConnectivityManager.getNetworkCapabilities</a> or\n             <a href=\"#!/api/android.net.ConnectivityManager-method-getLinkProperties\" rel=\"android.net.ConnectivityManager-method-getLinkProperties\" class=\"docClass\">android.net.ConnectivityManager.getLinkProperties</a> to get information synchronously. Keep\n             in mind that while callbacks are guaranteed to be called for every event in order,\n             synchronous calls have no such constraints, and as such it is unadvisable to use the\n             synchronous methods inside the callbacks as they will often not offer a view of\n             networking that is consistent (that is: they may return a past or a future state with\n             respect to the event being processed by the callback). Instead, callers are advised\n             to only use the arguments of the callbacks, possibly memorizing the specific bits of\n             information they need to keep from one callback to another.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CREATOR' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-property-CREATOR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-property-CREATOR' class='name expandable'>CREATOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-describeContents' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-describeContents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-describeContents' class='name expandable'>describeContents</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getDetailedState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getDetailedState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getDetailedState' class='name expandable'>getDetailedState</a>( <span class='pre'></span> ) : Object {android.net.NetworkInfo.DetailedState}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Reports the current fine-grained state of the network. ...</div><div class='long'><p>Reports the current fine-grained state of the network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes. See\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkInfo.DetailedState}</span><div class='sub-desc'><p>the fine-grained state</p>\n</div></li></ul></div></div></div><div id='method-getExtraInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getExtraInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getExtraInfo' class='name expandable'>getExtraInfo</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Report the extra information about the network state, if any was\n provided by the lower networking layers. ...</div><div class='long'><p>Report the extra information about the network state, if any was\n provided by the lower networking layers.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use other services e.g. WifiManager to get additional information passed up from\n             the lower networking layers.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the extra information, or null if not available</p>\n</div></li></ul></div></div></div><div id='method-getReason' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getReason' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getReason' class='name expandable'>getReason</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Report the reason an attempt to establish connectivity failed,\n if one is available. ...</div><div class='long'><p>Report the reason an attempt to establish connectivity failed,\n if one is available.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method does not have a consistent contract that could make it useful\n             to callers.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the reason for failure, or null if not available</p>\n</div></li></ul></div></div></div><div id='method-getState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : Object {android.net.NetworkInfo.State}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Reports the current coarse-grained state of the network. ...</div><div class='long'><p>Reports the current coarse-grained state of the network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes.\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkInfo.State}</span><div class='sub-desc'><p>the coarse-grained state</p>\n</div></li></ul></div></div></div><div id='method-getSubtype' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getSubtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getSubtype' class='name expandable'>getSubtype</a>( <span class='pre'></span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return a network-type-specific integer describing the subtype\n of the network. ...</div><div class='long'><p>Return a network-type-specific integer describing the subtype\n of the network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use android.telephony.TelephonyManager.getDataNetworkType instead.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the network subtype</p>\n</div></li></ul></div></div></div><div id='method-getSubtypeName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getSubtypeName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getSubtypeName' class='name expandable'>getSubtypeName</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return a human-readable name describing the subtype of the network. ...</div><div class='long'><p>Return a human-readable name describing the subtype of the network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use android.telephony.TelephonyManager.getDataNetworkType instead.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of the network subtype</p>\n</div></li></ul></div></div></div><div id='method-getType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getType' class='name expandable'>getType</a>( <span class='pre'></span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Reports the type of network to which the\n info in this {@code NetworkInfo} pertains. ...</div><div class='long'><p>Reports the type of network to which the\n info in this {@code NetworkInfo} pertains.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Callers should switch to checking NetworkCapabilities.hasTransport\n             instead with one of the NetworkCapabilities#TRANSPORT_* constants :\n             <a href=\"#!/api/android.net.NetworkInfo-method-getType\" rel=\"android.net.NetworkInfo-method-getType\" class=\"docClass\">getType</a> and <a href=\"#!/api/android.net.NetworkInfo-method-getTypeName\" rel=\"android.net.NetworkInfo-method-getTypeName\" class=\"docClass\">getTypeName</a> cannot account for networks using\n             multiple transports. Note that generally apps should not care about transport;\n             NetworkCapabilities.NET_CAPABILITY_NOT_METERED and\n             NetworkCapabilities.getLinkDownstreamBandwidthKbps are calls that\n             apps concerned with meteredness or bandwidth should be looking at, as they\n             offer this information with much better accuracy.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>one of ConnectivityManager.TYPE_MOBILE, ConnectivityManager.TYPE_WIFI, ConnectivityManager.TYPE_WIMAX, ConnectivityManager.TYPE_ETHERNET,  ConnectivityManager.TYPE_BLUETOOTH, or other\n types defined by ConnectivityManager.</p>\n</div></li></ul></div></div></div><div id='method-getTypeName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-getTypeName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-getTypeName' class='name expandable'>getTypeName</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return a human-readable name describe the type of the network,\n for example \"WIFI\" or \"MOBILE\". ...</div><div class='long'><p>Return a human-readable name describe the type of the network,\n for example \"WIFI\" or \"MOBILE\".</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Callers should switch to checking NetworkCapabilities.hasTransport\n             instead with one of the NetworkCapabilities#TRANSPORT_* constants :\n             <a href=\"#!/api/android.net.NetworkInfo-method-getType\" rel=\"android.net.NetworkInfo-method-getType\" class=\"docClass\">getType</a> and <a href=\"#!/api/android.net.NetworkInfo-method-getTypeName\" rel=\"android.net.NetworkInfo-method-getTypeName\" class=\"docClass\">getTypeName</a> cannot account for networks using\n             multiple transports. Note that generally apps should not care about transport;\n             NetworkCapabilities.NET_CAPABILITY_NOT_METERED and\n             NetworkCapabilities.getLinkDownstreamBandwidthKbps are calls that\n             apps concerned with meteredness or bandwidth should be looking at, as they\n             offer this information with much better accuracy.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of the network type</p>\n</div></li></ul></div></div></div><div id='method-isAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-isAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-isAvailable' class='name expandable'>isAvailable</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Indicates whether network connectivity is possible. ...</div><div class='long'><p>Indicates whether network connectivity is possible. A network is unavailable\n when a persistent or semi-persistent condition prevents the possibility\n of connecting to that network. Examples include\n <ul>\n <li>The device is out of the coverage area for any network of this type.</li>\n <li>The device is on a network other than the home network (i.e., roaming), and\n data roaming has been disabled.</li>\n <li>The device's radio is turned off, e.g., because airplane mode is enabled.</li>\n </ul>\n Since Android L, this always returns {@code true}, because the system only\n returns info for available networks.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes.\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the network is available, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-isConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-isConnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-isConnected' class='name expandable'>isConnected</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Indicates whether network connectivity exists and it is possible to establish\n connections and pass data. ...</div><div class='long'><p>Indicates whether network connectivity exists and it is possible to establish\n connections and pass data.\n <p>Always call this before attempting to perform data transactions.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes. See\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if network connectivity exists, {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isConnectedOrConnecting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-isConnectedOrConnecting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-isConnectedOrConnecting' class='name expandable'>isConnectedOrConnecting</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Indicates whether network connectivity exists or is in the process\n of being established. ...</div><div class='long'><p>Indicates whether network connectivity exists or is in the process\n of being established. This is good for applications that need to\n do anything related to the network other than read or write data.\n For the latter, call <a href=\"#!/api/android.net.NetworkInfo-method-isConnected\" rel=\"android.net.NetworkInfo-method-isConnected\" class=\"docClass\">isConnected</a>() instead, which guarantees\n that the network is fully usable.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Apps should instead use the\n             <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes.\n             ConnectivityManager.registerDefaultNetworkCallback and\n             ConnectivityManager.registerNetworkCallback. These will\n             give a more accurate picture of the connectivity state of\n             the device and let apps react more easily and quickly to changes.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if network connectivity exists or is in the process\n of being established, {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isFailover' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-isFailover' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-isFailover' class='name expandable'>isFailover</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Indicates whether the current attempt to connect to the network\n resulted from the ConnectivityManager trying to fail...</div><div class='long'><p>Indicates whether the current attempt to connect to the network\n resulted from the ConnectivityManager trying to fail over to this\n network following a disconnect from another network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This field is not populated in recent Android releases,\n             and does not make a lot of sense in a multi-network world.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this is a failover attempt, {@code false}\n otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isRoaming' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-isRoaming' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-isRoaming' class='name expandable'>isRoaming</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Indicates whether the device is currently roaming on this network. ...</div><div class='long'><p>Indicates whether the device is currently roaming on this network. When\n {@code true}, it suggests that use of data on this network may incur\n extra costs.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Callers should switch to checking\n             NetworkCapabilities.NET_CAPABILITY_NOT_ROAMING\n             instead, since that handles more complex situations, such as\n             VPNs.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if roaming is in effect, {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setRoaming' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-setRoaming' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-setRoaming' class='name expandable'>setRoaming</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use NetworkCapabilities.NET_CAPABILITY_NOT_ROAMING instead.\n {@hide}</p>\n\n        </div>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-writeToParcel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.NetworkInfo'>android.net.NetworkInfo</span><br/><a href='source/NetworkInfo.html#android-net-NetworkInfo-method-writeToParcel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.NetworkInfo-method-writeToParcel' class='name expandable'>writeToParcel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Callers should instead use the <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> API to\n             learn about connectivity changes, or switch to use\n             <a href=\"#!/api/android.net.ConnectivityManager-method-getNetworkCapabilities\" rel=\"android.net.ConnectivityManager-method-getNetworkCapabilities\" class=\"docClass\">android.net.ConnectivityManager.getNetworkCapabilities</a> or\n             <a href=\"#!/api/android.net.ConnectivityManager-method-getLinkProperties\" rel=\"android.net.ConnectivityManager-method-getLinkProperties\" class=\"docClass\">android.net.ConnectivityManager.getLinkProperties</a> to get information synchronously. Keep\n             in mind that while callbacks are guaranteed to be called for every event in order,\n             synchronous calls have no such constraints, and as such it is unadvisable to use the\n             synchronous methods inside the callbacks as they will often not offer a view of\n             networking that is consistent (that is: they may return a past or a future state with\n             respect to the event being processed by the callback). Instead, callers are advised\n             to only use the arguments of the callbacks, possibly memorizing the specific bits of\n             information they need to keep from one callback to another.</p>\n"}}});