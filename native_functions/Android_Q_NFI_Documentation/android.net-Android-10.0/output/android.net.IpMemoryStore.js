Ext.data.JsonP.android_net_IpMemoryStore({"tagname":"class","name":"android.net.IpMemoryStore","autodetected":{},"files":[{"filename":"IpMemoryStore.js","href":"IpMemoryStore.html#android-net-IpMemoryStore"}],"extends":"android.net.IpMemoryStoreClient","hide":true,"members":[{"name":"factoryReset","tagname":"method","owner":"android.net.IpMemoryStoreClient","id":"method-factoryReset","meta":{}},{"name":"findL2Key","tagname":"method","owner":"android.net.IpMemoryStoreClient","id":"method-findL2Key","meta":{}},{"name":"getMemoryStore","tagname":"method","owner":"android.net.IpMemoryStore","id":"method-getMemoryStore","meta":{}},{"name":"isSameNetwork","tagname":"method","owner":"android.net.IpMemoryStoreClient","id":"method-isSameNetwork","meta":{}},{"name":"retrieveBlob","tagname":"method","owner":"android.net.IpMemoryStoreClient","id":"method-retrieveBlob","meta":{}},{"name":"retrieveNetworkAttributes","tagname":"method","owner":"android.net.IpMemoryStoreClient","id":"method-retrieveNetworkAttributes","meta":{}},{"name":"storeBlob","tagname":"method","owner":"android.net.IpMemoryStoreClient","id":"method-storeBlob","meta":{}},{"name":"storeNetworkAttributes","tagname":"method","owner":"android.net.IpMemoryStoreClient","id":"method-storeNetworkAttributes","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.IpMemoryStore","short_doc":"Manager class used to communicate with the ip memory store service in the network stack,\n which is running in a separ...","classIcon":"icon-class","superclasses":["java.lang.Object","android.net.IpMemoryStoreClient"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='docClass'>android.net.IpMemoryStoreClient</a><div class='subclass '><strong>android.net.IpMemoryStore</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/IpMemoryStore.html#android-net-IpMemoryStore' target='_blank'>IpMemoryStore.js</a></div></pre><div class='doc-contents'><p>Manager class used to communicate with the ip memory store service in the network stack,\n which is running in a separate module.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-factoryReset' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='defined-in docClass'>android.net.IpMemoryStoreClient</a><br/><a href='source/IpMemoryStoreClient.html#android-net-IpMemoryStoreClient-method-factoryReset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStoreClient-method-factoryReset' class='name expandable'>factoryReset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Wipe the data in the database upon network factory reset. ...</div><div class='long'><p>Wipe the data in the database upon network factory reset.</p>\n</div></div></div><div id='method-findL2Key' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='defined-in docClass'>android.net.IpMemoryStoreClient</a><br/><a href='source/IpMemoryStoreClient.html#android-net-IpMemoryStoreClient-method-findL2Key' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStoreClient-method-findL2Key' class='name expandable'>findL2Key</a>( <span class='pre'>attributes, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the best L2 key associated with the attributes. ...</div><div class='long'><p>Returns the best L2 key associated with the attributes.</p>\n\n<p> This will find a record that would be in the same group as the passed attributes. This is\n useful to choose the key for storing a sample or private data when the L2 key is not known.\n If multiple records are group-close to these attributes, the closest match is returned.\n If multiple records have the same closeness, the one with the smaller (unicode codepoint\n order) L2 key is returned.\n If no record matches these attributes, null is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attributes</span> : Object {NetworkAttributes}<div class='sub-desc'><p>The attributes of the network to find.</p>\n</div></li><li><span class='pre'>listener</span> : Object {OnL2KeyResponseListener}<div class='sub-desc'><p>The listener that will be invoked to return the answer.\n Through the listener, returns the L2 key if one matched, or null.</p>\n</div></li></ul></div></div></div><div id='method-getMemoryStore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.IpMemoryStore'>android.net.IpMemoryStore</span><br/><a href='source/IpMemoryStore.html#android-net-IpMemoryStore-method-getMemoryStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStore-method-getMemoryStore' class='name expandable'>getMemoryStore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an instance of the memory store ...</div><div class='long'><p>Gets an instance of the memory store</p>\n</div></div></div><div id='method-isSameNetwork' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='defined-in docClass'>android.net.IpMemoryStoreClient</a><br/><a href='source/IpMemoryStoreClient.html#android-net-IpMemoryStoreClient-method-isSameNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStoreClient-method-isSameNetwork' class='name expandable'>isSameNetwork</a>( <span class='pre'>l2Key1, l2Key2, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether, to the best of the store's ability to tell, the two specified L2 keys point\n to the same L3 network. ...</div><div class='long'><p>Returns whether, to the best of the store's ability to tell, the two specified L2 keys point\n to the same L3 network. Group-closeness is used to determine this.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l2Key1</span> : String<div class='sub-desc'><p>The key for the first network.</p>\n</div></li><li><span class='pre'>l2Key2</span> : String<div class='sub-desc'><p>The key for the second network.</p>\n</div></li><li><span class='pre'>listener</span> : Object {OnSameL3NetworkResponseListener}<div class='sub-desc'><p>The listener that will be invoked to return the answer.\n Through the listener, a SameL3NetworkResponse containing the answer and confidence.</p>\n</div></li></ul></div></div></div><div id='method-retrieveBlob' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='defined-in docClass'>android.net.IpMemoryStoreClient</a><br/><a href='source/IpMemoryStoreClient.html#android-net-IpMemoryStoreClient-method-retrieveBlob' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStoreClient-method-retrieveBlob' class='name expandable'>retrieveBlob</a>( <span class='pre'>l2Key, clientId, name, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve previously stored private data. ...</div><div class='long'><p>Retrieve previously stored private data.\n If no data was stored for this L2 key and name this will return null.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l2Key</span> : String<div class='sub-desc'><p>The L2 key.</p>\n</div></li><li><span class='pre'>clientId</span> : String<div class='sub-desc'><p>The id of the client that stored this data.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the data.</p>\n</div></li><li><span class='pre'>listener</span> : Object {OnBlobRetrievedListener}<div class='sub-desc'><p>The listener that will be invoked to return the answer.\n Through the listener, returns the private data (or null), with the L2 key\n         and the name of the data associated with the query.</p>\n</div></li></ul></div></div></div><div id='method-retrieveNetworkAttributes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='defined-in docClass'>android.net.IpMemoryStoreClient</a><br/><a href='source/IpMemoryStoreClient.html#android-net-IpMemoryStoreClient-method-retrieveNetworkAttributes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStoreClient-method-retrieveNetworkAttributes' class='name expandable'>retrieveNetworkAttributes</a>( <span class='pre'>l2Key, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the network attributes for a key. ...</div><div class='long'><p>Retrieve the network attributes for a key.\n If no record is present for this key, this will return null attributes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l2Key</span> : String<div class='sub-desc'><p>The key of the network to query.</p>\n</div></li><li><span class='pre'>listener</span> : Object {OnNetworkAttributesRetrievedListener}<div class='sub-desc'><p>The listener that will be invoked to return the answer.\n Through the listener, returns the network attributes and the L2 key associated with\n         the query.</p>\n</div></li></ul></div></div></div><div id='method-storeBlob' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='defined-in docClass'>android.net.IpMemoryStoreClient</a><br/><a href='source/IpMemoryStoreClient.html#android-net-IpMemoryStoreClient-method-storeBlob' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStoreClient-method-storeBlob' class='name expandable'>storeBlob</a>( <span class='pre'>l2Key, clientId, name, data, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Store a binary blob associated with an L2 key and a name. ...</div><div class='long'><p>Store a binary blob associated with an L2 key and a name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l2Key</span> : String<div class='sub-desc'><p>The L2 key for this network.</p>\n</div></li><li><span class='pre'>clientId</span> : String<div class='sub-desc'><p>The ID of the client.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of this data.</p>\n</div></li><li><span class='pre'>data</span> : Object {Blob}<div class='sub-desc'><p>The data to store.</p>\n</div></li><li><span class='pre'>listener</span> : Object {OnStatusListener}<div class='sub-desc'><p>A listener to inform of the completion of this call, or null if the client\n        is not interested in learning about success/failure.\n Through the listener, returns a status to indicate success or failure.</p>\n</div></li></ul></div></div></div><div id='method-storeNetworkAttributes' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.net.IpMemoryStoreClient' rel='android.net.IpMemoryStoreClient' class='defined-in docClass'>android.net.IpMemoryStoreClient</a><br/><a href='source/IpMemoryStoreClient.html#android-net-IpMemoryStoreClient-method-storeNetworkAttributes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpMemoryStoreClient-method-storeNetworkAttributes' class='name expandable'>storeNetworkAttributes</a>( <span class='pre'>l2Key, attributes, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Store network attributes for a given L2 key. ...</div><div class='long'><p>Store network attributes for a given L2 key.\n If L2Key is null, choose automatically from the attributes ; passing null is equivalent to\n calling findL2Key with the attributes and storing in the returned value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l2Key</span> : String<div class='sub-desc'><p>The L2 key for the L2 network. Clients that don't know or care about the L2\n              key and only care about grouping can pass a unique ID here like the ones\n              generated by {@code java.util.UUID.randomUUID()}, but keep in mind the low\n              relevance of such a network will lead to it being evicted soon if it's not\n              refreshed. Use findL2Key to try and find a similar L2Key to these attributes.</p>\n</div></li><li><span class='pre'>attributes</span> : Object {NetworkAttributes}<div class='sub-desc'><p>The attributes for this network.</p>\n</div></li><li><span class='pre'>listener</span> : Object {OnStatusListener}<div class='sub-desc'><p>A listener that will be invoked to inform of the completion of this call,\n                 or null if the client is not interested in learning about success/failure.\n Through the listener, returns the L2 key. This is useful if the L2 key was not specified.\n If the call failed, the L2 key will be null.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});