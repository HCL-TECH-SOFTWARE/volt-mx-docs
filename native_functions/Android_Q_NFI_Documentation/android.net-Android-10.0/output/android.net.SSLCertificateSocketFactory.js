Ext.data.JsonP.android_net_SSLCertificateSocketFactory({"tagname":"class","name":"android.net.SSLCertificateSocketFactory","autodetected":{},"files":[{"filename":"SSLCertificateSocketFactory.js","href":"SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory"}],"extends":"javax.net.ssl.SSLSocketFactory","deprecated":{"text":"<p>This class has less error-prone replacements using standard APIs.  To create an\n {@code SSLSocket}, obtain an SSLSocketFactory from SSLSocketFactory.getDefault()\n or javax.net.ssl.SSLContext.getSocketFactory().  To verify hostnames, pass\n {@code \"HTTPS\"} to\n javax.net.ssl.SSLParameters.setEndpointIdentificationAlgorithm(String).  To enable ALPN,\n use javax.net.ssl.SSLParameters.setApplicationProtocols(String[]).  To enable SNI,\n use javax.net.ssl.SSLParameters.setServerNames(java.util.List).</p>\n"},"members":[{"name":"createSocket","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-createSocket","meta":{}},{"name":"getDefault","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-getDefault","meta":{}},{"name":"getDefaultCipherSuites","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-getDefaultCipherSuites","meta":{}},{"name":"getHttpSocketFactory","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-getHttpSocketFactory","meta":{"deprecated":{"text":"<p>Use getDefault() along with a javax.net.ssl.HttpsURLConnection\n     instead. The Apache HTTP client is no longer maintained and may be removed in a future\n     release. Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>\n     for further details.</p>\n"},"removed":{"text":"\n"}}},{"name":"getInsecure","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-getInsecure","meta":{}},{"name":"getNpnSelectedProtocol","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-getNpnSelectedProtocol","meta":{}},{"name":"getSupportedCipherSuites","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-getSupportedCipherSuites","meta":{}},{"name":"setHostname","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-setHostname","meta":{}},{"name":"setKeyManagers","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-setKeyManagers","meta":{}},{"name":"setNpnProtocols","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-setNpnProtocols","meta":{}},{"name":"setTrustManagers","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-setTrustManagers","meta":{}},{"name":"setUseSessionTickets","tagname":"method","owner":"android.net.SSLCertificateSocketFactory","id":"method-setUseSessionTickets","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.SSLCertificateSocketFactory","short_doc":"SSLSocketFactory implementation with several extra features:\n\n \n Timeout specification for SSL handshake operations\n ...","classIcon":"icon-class","superclasses":["javax.net.ssl.SSLSocketFactory"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>javax.net.ssl.SSLSocketFactory<div class='subclass '><strong>android.net.SSLCertificateSocketFactory</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory' target='_blank'>SSLCertificateSocketFactory.js</a></div></pre><div class='doc-contents'><p>SSLSocketFactory implementation with several extra features:</p>\n\n<p> <ul>\n <li>Timeout specification for SSL handshake operations\n <li>Hostname verification in most cases (see WARNINGs below)\n <li>Optional SSL session caching with <a href=\"#!/api/android.net.SSLSessionCache\" rel=\"android.net.SSLSessionCache\" class=\"docClass\">android.net.SSLSessionCache</a>\n <li>Optionally bypass all SSL certificate checks\n </li></li></li></li></ul></p>\n\n<p> The handshake timeout does not apply to actual TCP socket connection.\n If you want a connection timeout as well, use <a href=\"#!/api/android.net.SSLCertificateSocketFactory-method-createSocket\" rel=\"android.net.SSLCertificateSocketFactory-method-createSocket\" class=\"docClass\">createSocket</a>()\n and int), after which you\n must verify the identity of the server you are connected to.</p>\n\n<p> <p class=\"caution\"><b>Most SSLSocketFactory implementations do not\n verify the server's identity, allowing man-in-the-middle attacks.</b>\n This implementation does check the server's certificate hostname, but only\n for createSocket variants that specify a hostname.  When using methods that\n use InetAddress or which return an unconnected socket, you MUST\n verify the server's identity yourself to ensure a secure connection.</p>\n\n<p> Refer to\n <a href=\"https://developer.android.com/training/articles/security-gms-provider.html\">\n Updating Your Security Provider to Protect Against SSL Exploits</a>\n for further information.</p></p>\n\n<p> <p>The recommended way to verify the server's identity is to use\n HttpsURLConnection.getDefaultHostnameVerifier() to get a\n HostnameVerifier to verify the certificate hostname.</p>\n\n<p> <p><b>Warning</b>: Some methods on this class return connected sockets and some return\n unconnected sockets.  For the methods that return connected sockets, setting\n connection- or handshake-related properties on those sockets will have no effect.</p>\n\n<p> <p>On development devices, \"setprop socket.relaxsslcheck yes\" bypasses all\n SSL certificate and hostname checks for testing purposes.  This setting\n requires root access.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>This class has less error-prone replacements using standard APIs.  To create an\n {@code SSLSocket}, obtain an SSLSocketFactory from SSLSocketFactory.getDefault()\n or javax.net.ssl.SSLContext.getSocketFactory().  To verify hostnames, pass\n {@code \"HTTPS\"} to\n javax.net.ssl.SSLParameters.setEndpointIdentificationAlgorithm(String).  To enable ALPN,\n use javax.net.ssl.SSLParameters.setApplicationProtocols(String[]).  To enable SNI,\n use javax.net.ssl.SSLParameters.setServerNames(java.util.List).</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createSocket' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-createSocket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-createSocket' class='name expandable'>createSocket</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc}\n\n By default, this method returns a connected socket and verifies the peer's\n certificate hostname afte...</div><div class='long'><p>{@inheritDoc}</p>\n\n<p> <p>By default, this method returns a <i>connected</i> socket and verifies the peer's\n certificate hostname after connecting using the HostnameVerifier obtained from\n {@code HttpsURLConnection.getDefaultHostnameVerifier()}; if this instance was created with\n android.net.SSLSessionCache), it returns a socket that is <i>not connected</i>\n instead.</p>\n</div></div></div><div id='method-getDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-getDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-getDefault' class='name expandable'>getDefault</a>( <span class='pre'>handshakeTimeoutMillis, cache</span> ) : Object {javax.net.ssl.SSLSocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new socket factory instance with an optional handshake timeout\n and SSL session cache. ...</div><div class='long'><p>Returns a new socket factory instance with an optional handshake timeout\n and SSL session cache.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>handshakeTimeoutMillis</span> : Number<div class='sub-desc'><p>to use for SSL connection handshake, or 0\n         for none.  The socket timeout is reset to 0 after the handshake.</p>\n</div></li><li><span class='pre'>cache</span> : Object {SSLSessionCache}<div class='sub-desc'><p>The SSLSessionCache to use, or null for no cache.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLSocketFactory}</span><div class='sub-desc'><p>a new SSLSocketFactory with the specified parameters</p>\n</div></li></ul></div></div></div><div id='method-getDefaultCipherSuites' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-getDefaultCipherSuites' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-getDefaultCipherSuites' class='name expandable'>getDefaultCipherSuites</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getHttpSocketFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-getHttpSocketFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-getHttpSocketFactory' class='name expandable'>getHttpSocketFactory</a>( <span class='pre'>handshakeTimeoutMillis, cache</span> ) : Object {org.apache.http.conn.ssl.SSLSocketFactory}<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Returns a socket factory (also named SSLSocketFactory, but in a different\n namespace) for use with the Apache HTTP st...</div><div class='long'><p>Returns a socket factory (also named SSLSocketFactory, but in a different\n namespace) for use with the Apache HTTP stack.</p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use getDefault() along with a javax.net.ssl.HttpsURLConnection\n     instead. The Apache HTTP client is no longer maintained and may be removed in a future\n     release. Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>\n     for further details.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>handshakeTimeoutMillis</span> : Number<div class='sub-desc'><p>to use for SSL connection handshake, or 0\n         for none.  The socket timeout is reset to 0 after the handshake.</p>\n</div></li><li><span class='pre'>cache</span> : Object {SSLSessionCache}<div class='sub-desc'><p>The SSLSessionCache to use, or null for no cache.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {org.apache.http.conn.ssl.SSLSocketFactory}</span><div class='sub-desc'><p>a new SocketFactory with the specified parameters</p>\n</div></li></ul></div></div></div><div id='method-getInsecure' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-getInsecure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-getInsecure' class='name expandable'>getInsecure</a>( <span class='pre'>handshakeTimeoutMillis, cache</span> ) : Object {javax.net.ssl.SSLSocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a new instance of a socket factory with all SSL security checks\n disabled, using an optional handshake timeou...</div><div class='long'><p>Returns a new instance of a socket factory with all SSL security checks\n disabled, using an optional handshake timeout and SSL session cache.</p>\n\n<p> <p class=\"caution\"><b>Warning:</b> Sockets created using this factory\n are vulnerable to man-in-the-middle attacks!</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>handshakeTimeoutMillis</span> : Number<div class='sub-desc'><p>to use for SSL connection handshake, or 0\n         for none.  The socket timeout is reset to 0 after the handshake.</p>\n</div></li><li><span class='pre'>cache</span> : Object {SSLSessionCache}<div class='sub-desc'><p>The SSLSessionCache to use, or null for no cache.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLSocketFactory}</span><div class='sub-desc'><p>an insecure SSLSocketFactory with the specified parameters</p>\n</div></li></ul></div></div></div><div id='method-getNpnSelectedProtocol' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-getNpnSelectedProtocol' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-getNpnSelectedProtocol' class='name expandable'>getNpnSelectedProtocol</a>( <span class='pre'>socket</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Next\n Protocol Negotiation (NPN) protocol selected by client and server, or\n null if no protocol was nego...</div><div class='long'><p>Returns the <a href=\"http://technotes.googlecode.com/git/nextprotoneg.html\">Next\n Protocol Negotiation (NPN)</a> protocol selected by client and server, or\n null if no protocol was negotiated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>socket</span> : Object {Socket}<div class='sub-desc'><p>a socket created by this factory.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the socket was not created by this factory.</p>\n</div></li></ul></div></div></div><div id='method-getSupportedCipherSuites' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-getSupportedCipherSuites' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-getSupportedCipherSuites' class='name expandable'>getSupportedCipherSuites</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setHostname' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-setHostname' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-setHostname' class='name expandable'>setHostname</a>( <span class='pre'>socket, hostName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Turns on Server\n Name Indication (SNI) on a given socket. ...</div><div class='long'><p>Turns on <a href=\"http://tools.ietf.org/html/rfc6066#section-3\">Server\n Name Indication (SNI)</a> on a given socket.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>socket</span> : Object {Socket}<div class='sub-desc'><p>a socket created by this factory.</p>\n</div></li><li><span class='pre'>hostName</span> : String<div class='sub-desc'><p>the desired SNI hostname, null to disable.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the socket was not created by this factory.</p>\n</div></li></ul></div></div></div><div id='method-setKeyManagers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-setKeyManagers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-setKeyManagers' class='name expandable'>setKeyManagers</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the KeyManagers to be used for connections made by this factory. ...</div><div class='long'><p>Sets the KeyManagers to be used for connections made by this factory.</p>\n</div></div></div><div id='method-setNpnProtocols' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-setNpnProtocols' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-setNpnProtocols' class='name expandable'>setNpnProtocols</a>( <span class='pre'>npnProtocols</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Next\n Protocol Negotiation (NPN) protocols that this peer is interested in. ...</div><div class='long'><p>Sets the <a href=\"http://technotes.googlecode.com/git/nextprotoneg.html\">Next\n Protocol Negotiation (NPN)</a> protocols that this peer is interested in.</p>\n\n<p> <p>For servers this is the sequence of protocols to advertise as\n supported, in order of preference. This list is sent unencrypted to\n all clients that support NPN.</p>\n\n<p> <p>For clients this is a list of supported protocols to match against the\n server's list. If there is no protocol supported by both client and\n server then the first protocol in the client's list will be selected.\n The order of the client's protocols is otherwise insignificant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>npnProtocols</span> : Object {byte[][]}<div class='sub-desc'><p>a non-empty list of protocol byte arrays. All arrays\n     must be non-empty and of length less than 256.</p>\n</div></li></ul></div></div></div><div id='method-setTrustManagers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-setTrustManagers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-setTrustManagers' class='name expandable'>setTrustManagers</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the TrustManagers to be used for connections made by this factory. ...</div><div class='long'><p>Sets the TrustManagers to be used for connections made by this factory.</p>\n</div></div></div><div id='method-setUseSessionTickets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.SSLCertificateSocketFactory'>android.net.SSLCertificateSocketFactory</span><br/><a href='source/SSLCertificateSocketFactory.html#android-net-SSLCertificateSocketFactory-method-setUseSessionTickets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.SSLCertificateSocketFactory-method-setUseSessionTickets' class='name expandable'>setUseSessionTickets</a>( <span class='pre'>socket, useSessionTickets</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enables session ticket\n support on the given socket. ...</div><div class='long'><p>Enables <a href=\"http://tools.ietf.org/html/rfc5077#section-3.2\">session ticket</a>\n support on the given socket.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>socket</span> : Object {Socket}<div class='sub-desc'><p>a socket created by this factory</p>\n</div></li><li><span class='pre'>useSessionTickets</span> : Boolean<div class='sub-desc'><p>{@code true} to enable session ticket support on this socket.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the socket was not created by this factory.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>This class has less error-prone replacements using standard APIs.  To create an\n {@code SSLSocket}, obtain an SSLSocketFactory from SSLSocketFactory.getDefault()\n or javax.net.ssl.SSLContext.getSocketFactory().  To verify hostnames, pass\n {@code \"HTTPS\"} to\n javax.net.ssl.SSLParameters.setEndpointIdentificationAlgorithm(String).  To enable ALPN,\n use javax.net.ssl.SSLParameters.setApplicationProtocols(String[]).  To enable SNI,\n use javax.net.ssl.SSLParameters.setServerNames(java.util.List).</p>\n"}}});