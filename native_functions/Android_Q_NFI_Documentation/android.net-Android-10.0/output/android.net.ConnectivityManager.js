Ext.data.JsonP.android_net_ConnectivityManager({"tagname":"class","name":"android.net.ConnectivityManager","autodetected":{},"files":[{"filename":"ConnectivityManager.js","href":"ConnectivityManager.html#android-net-ConnectivityManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_BACKGROUND_DATA_SETTING_CHANGED","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-ACTION_BACKGROUND_DATA_SETTING_CHANGED","meta":{"deprecated":{"text":"<p>As of VERSION_CODES.ICE_CREAM_SANDWICH, availability\n            of background data depends on several combined factors, and\n            this broadcast is no longer sent. Instead, when background\n            data is unavailable, <a href=\"#!/api/android.net.ConnectivityManager-method-getActiveNetworkInfo\" rel=\"android.net.ConnectivityManager-method-getActiveNetworkInfo\" class=\"docClass\">getActiveNetworkInfo</a>() will now\n            appear disconnected. During first boot after a platform\n            upgrade, this broadcast will be sent once if\n            <a href=\"#!/api/android.net.ConnectivityManager-method-getBackgroundDataSetting\" rel=\"android.net.ConnectivityManager-method-getBackgroundDataSetting\" class=\"docClass\">getBackgroundDataSetting</a>() was {@code false} before\n            the upgrade.</p>\n"}}},{"name":"ACTION_CAPTIVE_PORTAL_SIGN_IN","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-ACTION_CAPTIVE_PORTAL_SIGN_IN","meta":{}},{"name":"ACTION_DATA_ACTIVITY_CHANGE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-ACTION_DATA_ACTIVITY_CHANGE","meta":{}},{"name":"ACTION_RESTRICT_BACKGROUND_CHANGED","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-ACTION_RESTRICT_BACKGROUND_CHANGED","meta":{}},{"name":"CONNECTIVITY_ACTION","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-CONNECTIVITY_ACTION","meta":{"deprecated":{"text":"<p>apps should use the more versatile <a href=\"#!/api/android.net.ConnectivityManager-method-requestNetwork\" rel=\"android.net.ConnectivityManager-method-requestNetwork\" class=\"docClass\">requestNetwork</a>,\n            <a href=\"#!/api/android.net.ConnectivityManager-method-registerNetworkCallback\" rel=\"android.net.ConnectivityManager-method-registerNetworkCallback\" class=\"docClass\">registerNetworkCallback</a> or <a href=\"#!/api/android.net.ConnectivityManager-method-registerDefaultNetworkCallback\" rel=\"android.net.ConnectivityManager-method-registerDefaultNetworkCallback\" class=\"docClass\">registerDefaultNetworkCallback</a>\n            functions instead for faster and more detailed updates about the network\n            changes they care about.</p>\n"}}},{"name":"DEFAULT_NETWORK_PREFERENCE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-DEFAULT_NETWORK_PREFERENCE","meta":{"deprecated":{"text":"<p>Since we support so many more networks now, the single\n            network default network preference can't really express\n            the hierarchy.  Instead, the default is defined by the\n            networkAttributes in config.xml.  You can determine\n            the current value by calling <a href=\"#!/api/android.net.ConnectivityManager-method-getNetworkPreference\" rel=\"android.net.ConnectivityManager-method-getNetworkPreference\" class=\"docClass\">getNetworkPreference</a>()\n            from an App.</p>\n"}}},{"name":"EXTRA_CAPTIVE_PORTAL","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_CAPTIVE_PORTAL","meta":{}},{"name":"EXTRA_CAPTIVE_PORTAL_PROBE_SPEC","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_CAPTIVE_PORTAL_PROBE_SPEC","meta":{}},{"name":"EXTRA_CAPTIVE_PORTAL_URL","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_CAPTIVE_PORTAL_URL","meta":{}},{"name":"EXTRA_CAPTIVE_PORTAL_USER_AGENT","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_CAPTIVE_PORTAL_USER_AGENT","meta":{}},{"name":"EXTRA_DEVICE_TYPE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_DEVICE_TYPE","meta":{}},{"name":"EXTRA_EXTRA_INFO","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_EXTRA_INFO","meta":{"deprecated":{"text":"<p>See android.net.NetworkInfo.getExtraInfo().</p>\n"}}},{"name":"EXTRA_INET_CONDITION","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_INET_CONDITION","meta":{}},{"name":"EXTRA_IS_ACTIVE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_IS_ACTIVE","meta":{}},{"name":"EXTRA_IS_FAILOVER","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_IS_FAILOVER","meta":{"deprecated":{"text":"<p>See <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a>.</p>\n"}}},{"name":"EXTRA_NETWORK","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_NETWORK","meta":{}},{"name":"EXTRA_NETWORK_INFO","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_NETWORK_INFO","meta":{"deprecated":{"text":"<p>The <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a> object is deprecated, as many of its properties\n            can't accurately represent modern network characteristics.\n            Please obtain information about networks from the <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a>\n            or <a href=\"#!/api/android.net.LinkProperties\" rel=\"android.net.LinkProperties\" class=\"docClass\">android.net.LinkProperties</a> objects instead.</p>\n"}}},{"name":"EXTRA_NETWORK_REQUEST","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_NETWORK_REQUEST","meta":{}},{"name":"EXTRA_NETWORK_TYPE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_NETWORK_TYPE","meta":{"deprecated":{"text":"<p>The network type is not rich enough to represent the characteristics\n            of modern networks. Please use <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> instead,\n            in particular the transports.</p>\n"}}},{"name":"EXTRA_NO_CONNECTIVITY","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_NO_CONNECTIVITY","meta":{}},{"name":"EXTRA_OTHER_NETWORK_INFO","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_OTHER_NETWORK_INFO","meta":{"deprecated":{"text":"<p>See <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a>.</p>\n"}}},{"name":"EXTRA_REALTIME_NS","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_REALTIME_NS","meta":{}},{"name":"EXTRA_REASON","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-EXTRA_REASON","meta":{}},{"name":"MAX_NETWORK_TYPE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-MAX_NETWORK_TYPE","meta":{}},{"name":"MAX_RADIO_TYPE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-MAX_RADIO_TYPE","meta":{}},{"name":"MULTIPATH_PREFERENCE_HANDOVER","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-MULTIPATH_PREFERENCE_HANDOVER","meta":{}},{"name":"MULTIPATH_PREFERENCE_PERFORMANCE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-MULTIPATH_PREFERENCE_PERFORMANCE","meta":{}},{"name":"MULTIPATH_PREFERENCE_RELIABILITY","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-MULTIPATH_PREFERENCE_RELIABILITY","meta":{}},{"name":"RESTRICT_BACKGROUND_STATUS_DISABLED","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-RESTRICT_BACKGROUND_STATUS_DISABLED","meta":{}},{"name":"RESTRICT_BACKGROUND_STATUS_ENABLED","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-RESTRICT_BACKGROUND_STATUS_ENABLED","meta":{}},{"name":"RESTRICT_BACKGROUND_STATUS_WHITELISTED","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-RESTRICT_BACKGROUND_STATUS_WHITELISTED","meta":{}},{"name":"TETHER_ERROR_DHCPSERVER_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_DHCPSERVER_ERROR","meta":{}},{"name":"TETHER_ERROR_DISABLE_NAT_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_DISABLE_NAT_ERROR","meta":{}},{"name":"TETHER_ERROR_ENABLE_NAT_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_ENABLE_NAT_ERROR","meta":{}},{"name":"TETHER_ERROR_ENTITLEMENT_UNKONWN","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_ENTITLEMENT_UNKONWN","meta":{}},{"name":"TETHER_ERROR_IFACE_CFG_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_IFACE_CFG_ERROR","meta":{}},{"name":"TETHER_ERROR_MASTER_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_MASTER_ERROR","meta":{}},{"name":"TETHER_ERROR_NO_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_NO_ERROR","meta":{}},{"name":"TETHER_ERROR_PROVISION_FAILED","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_PROVISION_FAILED","meta":{}},{"name":"TETHER_ERROR_SERVICE_UNAVAIL","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_SERVICE_UNAVAIL","meta":{}},{"name":"TETHER_ERROR_TETHER_IFACE_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_TETHER_IFACE_ERROR","meta":{}},{"name":"TETHER_ERROR_UNAVAIL_IFACE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_UNAVAIL_IFACE","meta":{}},{"name":"TETHER_ERROR_UNKNOWN_IFACE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_UNKNOWN_IFACE","meta":{}},{"name":"TETHER_ERROR_UNSUPPORTED","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_UNSUPPORTED","meta":{}},{"name":"TETHER_ERROR_UNTETHER_IFACE_ERROR","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TETHER_ERROR_UNTETHER_IFACE_ERROR","meta":{}},{"name":"TYPE_BLUETOOTH","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_BLUETOOTH","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n"}}},{"name":"TYPE_DUMMY","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_DUMMY","meta":{"deprecated":{"text":"<p>This is not used any more.</p>\n"}}},{"name":"TYPE_ETHERNET","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_ETHERNET","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n"}}},{"name":"TYPE_MOBILE","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n"}}},{"name":"TYPE_MOBILE_CBS","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_CBS","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_CBS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_CBS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_CBS</a> instead.\n{@hide}</p>\n"}}},{"name":"TYPE_MOBILE_DUN","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_DUN","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasCapability\" rel=\"android.net.NetworkCapabilities-method-hasCapability\" class=\"docClass\">android.net.NetworkCapabilities.hasCapability</a> or\n        android.net.NetworkCallback) to request a network that\n        provides the <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_DUN\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_DUN\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_DUN</a> capability.</p>\n"}}},{"name":"TYPE_MOBILE_EMERGENCY","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_EMERGENCY","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_EIMS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_EIMS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_EIMS</a> instead.\n{@hide}</p>\n"}}},{"name":"TYPE_MOBILE_FOTA","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_FOTA","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> instead.\n{@hide}</p>\n"}}},{"name":"TYPE_MOBILE_HIPRI","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_HIPRI","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n"}}},{"name":"TYPE_MOBILE_IA","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_IA","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_IA\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_IA\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_IA</a> instead.\n{@hide}</p>\n"}}},{"name":"TYPE_MOBILE_IMS","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_IMS","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_IMS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_IMS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_IMS</a> instead.\n{@hide}</p>\n"}}},{"name":"TYPE_MOBILE_MMS","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_MMS","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasCapability\" rel=\"android.net.NetworkCapabilities-method-hasCapability\" class=\"docClass\">android.net.NetworkCapabilities.hasCapability</a> or\n        android.net.NetworkCallback) to request a network that\n        provides the <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_MMS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_MMS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_MMS</a> capability.</p>\n"}}},{"name":"TYPE_MOBILE_SUPL","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_MOBILE_SUPL","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasCapability\" rel=\"android.net.NetworkCapabilities-method-hasCapability\" class=\"docClass\">android.net.NetworkCapabilities.hasCapability</a> or\n        android.net.NetworkCallback) to request a network that\n        provides the <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_SUPL\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_SUPL\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_SUPL</a> capability.</p>\n"}}},{"name":"TYPE_PROXY","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_PROXY","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> instead.\n{@hide}</p>\n"}}},{"name":"TYPE_VPN","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_VPN","meta":{"deprecated":{"text":"<p>Applications should use <a href=\"#!/api/android.net.NetworkCapabilities-property-TRANSPORT_VPN\" rel=\"android.net.NetworkCapabilities-property-TRANSPORT_VPN\" class=\"docClass\">android.net.NetworkCapabilities.TRANSPORT_VPN</a> instead.</p>\n"}}},{"name":"TYPE_WIFI","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_WIFI","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n"}}},{"name":"TYPE_WIFI_P2P","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_WIFI_P2P","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_WIFI_P2P\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_WIFI_P2P\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_WIFI_P2P</a> instead.\n{@hide}</p>\n"}}},{"name":"TYPE_WIMAX","tagname":"property","owner":"android.net.ConnectivityManager","id":"property-TYPE_WIMAX","meta":{"deprecated":{"text":"<p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n"}}},{"name":"addDefaultNetworkActiveListener","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-addDefaultNetworkActiveListener","meta":{}},{"name":"bindProcessToNetwork","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-bindProcessToNetwork","meta":{}},{"name":"checkMobileProvisioning","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-checkMobileProvisioning","meta":{}},{"name":"enforceChangePermission","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-enforceChangePermission","meta":{}},{"name":"enforceTetherChangePermission","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-enforceTetherChangePermission","meta":{}},{"name":"from","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-from","meta":{}},{"name":"getActiveLinkProperties","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getActiveLinkProperties","meta":{"deprecated":{"text":"<p>please use getLinkProperties(Network) on the return\n             value of getActiveNetwork() instead. In particular,\n             this method will return non-null LinkProperties even if the\n             app is blocked by policy from using this network.</p>\n"}}},{"name":"getActiveNetwork","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getActiveNetwork","meta":{}},{"name":"getActiveNetworkForUid","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getActiveNetworkForUid","meta":{}},{"name":"getActiveNetworkInfo","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getActiveNetworkInfo","meta":{"deprecated":{"text":"<p>See NetworkInfo.</p>\n"}}},{"name":"getActiveNetworkInfoForUid","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getActiveNetworkInfoForUid","meta":{}},{"name":"getActiveNetworkQuotaInfo","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getActiveNetworkQuotaInfo","meta":{}},{"name":"getAllNetworkInfo","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getAllNetworkInfo","meta":{"deprecated":{"text":"<p>This method does not support multiple connected networks\n             of the same type. Use <a href=\"#!/api/android.net.ConnectivityManager-method-getAllNetworks\" rel=\"android.net.ConnectivityManager-method-getAllNetworks\" class=\"docClass\">getAllNetworks</a> and\n             getNetworkInfo(android.net.Network) instead.</p>\n"}}},{"name":"getAllNetworks","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getAllNetworks","meta":{}},{"name":"getBackgroundDataSetting","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getBackgroundDataSetting","meta":{"deprecated":{"text":"<p>As of VERSION_CODES.ICE_CREAM_SANDWICH, availability of\n background data depends on several combined factors, and this method will\n always return {@code true}. Instead, when background data is unavailable,\n getActiveNetworkInfo() will now appear disconnected.</p>\n"}}},{"name":"getBoundNetworkForProcess","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getBoundNetworkForProcess","meta":{}},{"name":"getConnectionOwnerUid","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getConnectionOwnerUid","meta":{}},{"name":"getDefaultProxy","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getDefaultProxy","meta":{}},{"name":"getLastTetherError","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getLastTetherError","meta":{}},{"name":"getLatestTetheringEntitlementResult","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getLatestTetheringEntitlementResult","meta":{}},{"name":"getLinkProperties","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getLinkProperties","meta":{}},{"name":"getMobileProvisioningUrl","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getMobileProvisioningUrl","meta":{}},{"name":"getMultipathPreference","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getMultipathPreference","meta":{}},{"name":"getNetworkCapabilities","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getNetworkCapabilities","meta":{}},{"name":"getNetworkInfo","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getNetworkInfo","meta":{"deprecated":{"text":"<p>See NetworkInfo.</p>\n"}}},{"name":"getNetworkInfoForUid","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getNetworkInfoForUid","meta":{}},{"name":"getNetworkPreference","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getNetworkPreference","meta":{"deprecated":{"text":"<p>Functionality has been removed as it no longer makes sense,\n             with many more than two networks - we'd need an array to express\n             preference.  Instead we use dynamic network properties of\n             the networks to describe their precedence.</p>\n"}}},{"name":"getNetworkTypeName","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getNetworkTypeName","meta":{"deprecated":{"text":"<p>Types are deprecated. Use NetworkCapabilities instead.\n {@hide}</p>\n"}}},{"name":"getNetworkWatchlistConfigHash","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getNetworkWatchlistConfigHash","meta":{}},{"name":"getProcessDefaultNetwork","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getProcessDefaultNetwork","meta":{"deprecated":{"text":"<p>Using this function can lead to other functions throwing\n             IllegalStateException.  Use <a href=\"#!/api/android.net.ConnectivityManager-method-getBoundNetworkForProcess\" rel=\"android.net.ConnectivityManager-method-getBoundNetworkForProcess\" class=\"docClass\">getBoundNetworkForProcess</a> instead.\n             {@code getBoundNetworkForProcess} is a direct replacement.</p>\n"}}},{"name":"getRestrictBackgroundStatus","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getRestrictBackgroundStatus","meta":{}},{"name":"getTetherableBluetoothRegexs","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getTetherableBluetoothRegexs","meta":{}},{"name":"getTetherableIfaces","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getTetherableIfaces","meta":{}},{"name":"getTetherableUsbRegexs","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getTetherableUsbRegexs","meta":{}},{"name":"getTetherableWifiRegexs","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getTetherableWifiRegexs","meta":{}},{"name":"getTetheredDhcpRanges","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getTetheredDhcpRanges","meta":{}},{"name":"getTetheredIfaces","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getTetheredIfaces","meta":{}},{"name":"getTetheringErroredIfaces","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-getTetheringErroredIfaces","meta":{}},{"name":"isActiveNetworkMetered","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-isActiveNetworkMetered","meta":{}},{"name":"isDefaultNetworkActive","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-isDefaultNetworkActive","meta":{}},{"name":"isNetworkTypeMobile","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-isNetworkTypeMobile","meta":{"deprecated":{"text":"<p>Types are deprecated. Use NetworkCapabilities instead.\n {@hide}</p>\n"}}},{"name":"isNetworkTypeValid","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-isNetworkTypeValid","meta":{"deprecated":{"text":"<p>All APIs accepting a network type are deprecated. There should be no need to\n             validate a network type.</p>\n"}}},{"name":"isTetheringSupported","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-isTetheringSupported","meta":{}},{"name":"registerDefaultNetworkCallback","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-registerDefaultNetworkCallback","meta":{}},{"name":"registerNetworkCallback","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-registerNetworkCallback","meta":{}},{"name":"registerNetworkFactory","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-registerNetworkFactory","meta":{}},{"name":"releaseNetworkRequest","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-releaseNetworkRequest","meta":{}},{"name":"removeDefaultNetworkActiveListener","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-removeDefaultNetworkActiveListener","meta":{}},{"name":"reportBadNetwork","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-reportBadNetwork","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.net.ConnectivityManager-method-reportNetworkConnectivity\" rel=\"android.net.ConnectivityManager-method-reportNetworkConnectivity\" class=\"docClass\">reportNetworkConnectivity</a> which allows reporting both\n             working and non-working connectivity.</p>\n"}}},{"name":"reportInetCondition","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-reportInetCondition","meta":{"deprecated":{"text":"<p>Types are deprecated. Use <a href=\"#!/api/android.net.ConnectivityManager-method-reportNetworkConnectivity\" rel=\"android.net.ConnectivityManager-method-reportNetworkConnectivity\" class=\"docClass\">reportNetworkConnectivity</a> instead.\n {@hide}</p>\n"}}},{"name":"reportNetworkConnectivity","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-reportNetworkConnectivity","meta":{}},{"name":"requestBandwidthUpdate","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-requestBandwidthUpdate","meta":{}},{"name":"requestNetwork","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-requestNetwork","meta":{}},{"name":"requestRouteToHost","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-requestRouteToHost","meta":{"deprecated":{"text":"<p>Deprecated in favor of the\n             NetworkCallback),\n             <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a> and Network.getSocketFactory API.\n             In VERSION_CODES.M, and above, this method is unsupported and will\n             throw {@code UnsupportedOperationException} if called.</p>\n"},"removed":{"text":"\n"}}},{"name":"setNetworkPreference","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-setNetworkPreference","meta":{"deprecated":{"text":"<p>Functionality has been removed as it no longer makes sense,\n             with many more than two networks - we'd need an array to express\n             preference.  Instead we use dynamic network properties of\n             the networks to describe their precedence.</p>\n"}}},{"name":"setProcessDefaultNetwork","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-setProcessDefaultNetwork","meta":{"deprecated":{"text":"<p>This function can throw IllegalStateException.  Use\n             <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a> instead.  {@code bindProcessToNetwork}\n             is a direct replacement.</p>\n"}}},{"name":"setProvisioningNotificationVisible","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-setProvisioningNotificationVisible","meta":{"deprecated":{"text":"<p>Doesn't properly deal with multiple connected networks of the same type.</p>\n"}}},{"name":"setUsbTethering","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-setUsbTethering","meta":{}},{"name":"startUsingNetworkFeature","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-startUsingNetworkFeature","meta":{"deprecated":{"text":"<p>Deprecated in favor of the cleaner\n             NetworkCallback) API.\n             In VERSION_CODES.M, and above, this method is unsupported and will\n             throw {@code UnsupportedOperationException} if called.</p>\n"},"removed":{"text":"\n"}}},{"name":"stopUsingNetworkFeature","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-stopUsingNetworkFeature","meta":{"deprecated":{"text":"<p>Deprecated in favor of the cleaner\n             unregisterNetworkCallback(NetworkCallback) API.\n             In VERSION_CODES.M, and above, this method is unsupported and will\n             throw {@code UnsupportedOperationException} if called.</p>\n"},"removed":{"text":"\n"}}},{"name":"tether","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-tether","meta":{}},{"name":"unregisterNetworkCallback","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-unregisterNetworkCallback","meta":{}},{"name":"unregisterNetworkFactory","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-unregisterNetworkFactory","meta":{}},{"name":"untether","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-untether","meta":{}},{"name":"updateLockdownVpn","tagname":"method","owner":"android.net.ConnectivityManager","id":"method-updateLockdownVpn","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.ConnectivityManager","short_doc":"Class that answers queries about the state of network connectivity. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.ConnectivityManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ConnectivityManager.html#android-net-ConnectivityManager' target='_blank'>ConnectivityManager.js</a></div></pre><div class='doc-contents'><p>Class that answers queries about the state of network connectivity. It also\n notifies applications when network connectivity changes.\n <p>\n The primary responsibilities of this class are to:\n <ol>\n <li>Monitor network connections (Wi-Fi, GPRS, UMTS, etc.)</li>\n <li>Send broadcast intents when network connectivity changes</li>\n <li>Attempt to \"fail over\" to another network when connectivity to a network\n is lost</li>\n <li>Provide an API that allows applications to query the coarse-grained or fine-grained\n state of the available networks</li>\n <li>Provide an API that allows applications to request and select networks for their data\n traffic</li>\n </ol></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_BACKGROUND_DATA_SETTING_CHANGED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-ACTION_BACKGROUND_DATA_SETTING_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-ACTION_BACKGROUND_DATA_SETTING_CHANGED' class='name expandable'>ACTION_BACKGROUND_DATA_SETTING_CHANGED</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Broadcast Action: The setting for background data usage has changed\nvalues. ...</div><div class='long'><p>Broadcast Action: The setting for background data usage has changed\nvalues. Use <a href=\"#!/api/android.net.ConnectivityManager-method-getBackgroundDataSetting\" rel=\"android.net.ConnectivityManager-method-getBackgroundDataSetting\" class=\"docClass\">getBackgroundDataSetting</a>() to get the current value.</p>\n\n<p><p>\nIf an application uses the network in the background, it should listen\nfor this broadcast and stop using the background data if the value is\n{@code false}.\n<p></p>\n<p>Defaults to: <code>&quot;android.net.conn.BACKGROUND_DATA_SETTING_CHANGED&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>As of VERSION_CODES.ICE_CREAM_SANDWICH, availability\n            of background data depends on several combined factors, and\n            this broadcast is no longer sent. Instead, when background\n            data is unavailable, <a href=\"#!/api/android.net.ConnectivityManager-method-getActiveNetworkInfo\" rel=\"android.net.ConnectivityManager-method-getActiveNetworkInfo\" class=\"docClass\">getActiveNetworkInfo</a>() will now\n            appear disconnected. During first boot after a platform\n            upgrade, this broadcast will be sent once if\n            <a href=\"#!/api/android.net.ConnectivityManager-method-getBackgroundDataSetting\" rel=\"android.net.ConnectivityManager-method-getBackgroundDataSetting\" class=\"docClass\">getBackgroundDataSetting</a>() was {@code false} before\n            the upgrade.</p>\n\n        </div>\n</div></div></div><div id='property-ACTION_CAPTIVE_PORTAL_SIGN_IN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-ACTION_CAPTIVE_PORTAL_SIGN_IN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-ACTION_CAPTIVE_PORTAL_SIGN_IN' class='name expandable'>ACTION_CAPTIVE_PORTAL_SIGN_IN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The device has connected to a network that has presented a captive\nportal, which is blocking Internet connectivity. ...</div><div class='long'><p>The device has connected to a network that has presented a captive\nportal, which is blocking Internet connectivity. The user was presented\nwith a notification that network sign in is required,\nand the user invoked the notification's action indicating they\ndesire to sign in to the network. Apps handling this activity should\nfacilitate signing in to the network. This action includes a\n<a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> typed extra called <a href=\"#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK\" rel=\"android.net.ConnectivityManager-property-EXTRA_NETWORK\" class=\"docClass\">EXTRA_NETWORK</a> that represents\nthe network presenting the captive portal; all communication with the\ncaptive portal must be done using this {@code Network} object.</p>\n\n<p><p/>\nThis activity includes a <a href=\"#!/api/android.net.CaptivePortal\" rel=\"android.net.CaptivePortal\" class=\"docClass\">android.net.CaptivePortal</a> extra named\n<a href=\"#!/api/android.net.ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL\" rel=\"android.net.ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL\" class=\"docClass\">EXTRA_CAPTIVE_PORTAL</a> that can be used to indicate different\noutcomes of the captive portal sign in to the system:\n<ul>\n<li> When the app handling this action believes the user has signed in to\nthe network and the captive portal has been dismissed, the app should\ncall android.net.CaptivePortal.reportandroid.net.CaptivePortalDismissed so the system can\nreevaluate the network. If reevaluation finds the network no longer\nsubject to a captive portal, the network may become the default active\ndata network.</li>\n<li> When the app handling this action believes the user explicitly wants\nto ignore the captive portal and the network, the app should call\n<a href=\"#!/api/android.net.CaptivePortal-method-ignoreNetwork\" rel=\"android.net.CaptivePortal-method-ignoreNetwork\" class=\"docClass\">android.net.CaptivePortal.ignoreNetwork</a>. </li>\n</ul></p>\n<p>Defaults to: <code>&quot;android.net.conn.CAPTIVE_PORTAL&quot;</code></p></div></div></div><div id='property-ACTION_DATA_ACTIVITY_CHANGE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-ACTION_DATA_ACTIVITY_CHANGE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-ACTION_DATA_ACTIVITY_CHANGE' class='name expandable'>ACTION_DATA_ACTIVITY_CHANGE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast action to indicate the change of data activity status\n(idle or active) on a network in a recent period. ...</div><div class='long'><p>Broadcast action to indicate the change of data activity status\n(idle or active) on a network in a recent period.\nThe network becomes active when data transmission is started, or\nidle if there is no data transmission for a period of time.\n{@hide}</p>\n<p>Defaults to: <code>&quot;android.net.conn.DATA_ACTIVITY_CHANGE&quot;</code></p></div></div></div><div id='property-ACTION_RESTRICT_BACKGROUND_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-ACTION_RESTRICT_BACKGROUND_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-ACTION_RESTRICT_BACKGROUND_CHANGED' class='name expandable'>ACTION_RESTRICT_BACKGROUND_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A change in the background metered network activity restriction has occurred. ...</div><div class='long'><p>A change in the background metered network activity restriction has occurred.</p>\n\n<p><p>\nApplications should call <a href=\"#!/api/android.net.ConnectivityManager-method-getRestrictBackgroundStatus\" rel=\"android.net.ConnectivityManager-method-getRestrictBackgroundStatus\" class=\"docClass\">getRestrictBackgroundStatus</a>() to check if the restriction\napplies to them.\n<p>\nThis is only sent to registered receivers, not manifest receivers.</p>\n<p>Defaults to: <code>&quot;android.net.conn.RESTRICT_BACKGROUND_CHANGED&quot;</code></p></div></div></div><div id='property-CONNECTIVITY_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-CONNECTIVITY_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-CONNECTIVITY_ACTION' class='name expandable'>CONNECTIVITY_ACTION</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A change in network connectivity has occurred. ...</div><div class='long'><p>A change in network connectivity has occurred. A default connection has either\nbeen established or lost. The NetworkInfo for the affected network is\nsent as an extra; it should be consulted to see what kind of\nconnectivity event occurred.</p>\n\n<p><p/>\nApps targeting Android 7.0 (API level 24) and higher do not receive this\nbroadcast if they declare the broadcast receiver in their manifest. Apps\nwill still receive broadcasts if they register their\nandroid.content.BroadcastReceiver with\nContext.registerReceiver()\nand that context is still valid.\n<p/>\nIf this is a connection that was the result of failing over from a\ndisconnected network, then the FAILOVER_CONNECTION boolean extra is\nset to true.\n<p/>\nFor a loss of connectivity, if the connectivity manager is attempting\nto connect (or has already connected) to another network, the\nNetworkInfo for the new network is also passed as an extra. This lets\nany receivers of the broadcast know that they should not necessarily\ntell the user that no data traffic will be possible. Instead, the\nreceiver should expect another broadcast soon, indicating either that\nthe failover attempt succeeded (and so there is still overall data\nconnectivity), or that the failover attempt failed, meaning that all\nconnectivity has been lost.\n<p/>\nFor a disconnect event, the boolean extra EXTRA_NO_CONNECTIVITY\nis set to {@code true} if there are no connected networks at all.</p>\n<p>Defaults to: <code>&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>apps should use the more versatile <a href=\"#!/api/android.net.ConnectivityManager-method-requestNetwork\" rel=\"android.net.ConnectivityManager-method-requestNetwork\" class=\"docClass\">requestNetwork</a>,\n            <a href=\"#!/api/android.net.ConnectivityManager-method-registerNetworkCallback\" rel=\"android.net.ConnectivityManager-method-registerNetworkCallback\" class=\"docClass\">registerNetworkCallback</a> or <a href=\"#!/api/android.net.ConnectivityManager-method-registerDefaultNetworkCallback\" rel=\"android.net.ConnectivityManager-method-registerDefaultNetworkCallback\" class=\"docClass\">registerDefaultNetworkCallback</a>\n            functions instead for faster and more detailed updates about the network\n            changes they care about.</p>\n\n        </div>\n</div></div></div><div id='property-DEFAULT_NETWORK_PREFERENCE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-DEFAULT_NETWORK_PREFERENCE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-DEFAULT_NETWORK_PREFERENCE' class='name expandable'>DEFAULT_NETWORK_PREFERENCE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>If you want to set the default network preference,you can directly\nchange the networkAttributes array in framework's ...</div><div class='long'><p>If you want to set the default network preference,you can directly\nchange the networkAttributes array in framework's config.xml.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Since we support so many more networks now, the single\n            network default network preference can't really express\n            the hierarchy.  Instead, the default is defined by the\n            networkAttributes in config.xml.  You can determine\n            the current value by calling <a href=\"#!/api/android.net.ConnectivityManager-method-getNetworkPreference\" rel=\"android.net.ConnectivityManager-method-getNetworkPreference\" class=\"docClass\">getNetworkPreference</a>()\n            from an App.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_CAPTIVE_PORTAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL' class='name expandable'>EXTRA_CAPTIVE_PORTAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a android.net.CaptivePortal object included with the\nACTION_CAPTIVE_PORTAL_SIGN_IN intent. ...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.CaptivePortal\" rel=\"android.net.CaptivePortal\" class=\"docClass\">android.net.CaptivePortal</a> object included with the\n<a href=\"#!/api/android.net.ConnectivityManager-property-ACTION_CAPTIVE_PORTAL_SIGN_IN\" rel=\"android.net.ConnectivityManager-property-ACTION_CAPTIVE_PORTAL_SIGN_IN\" class=\"docClass\">ACTION_CAPTIVE_PORTAL_SIGN_IN</a> intent.  The {@code CaptivePortal}\nobject can be used to either indicate to the system that the captive\nportal has been dismissed or that the user does not want to pursue\nsigning in to captive portal.  Retrieve it with\nandroid.content.Intent.getParcelableExtra(String).</p>\n<p>Defaults to: <code>&quot;android.net.extra.CAPTIVE_PORTAL&quot;</code></p></div></div></div><div id='property-EXTRA_CAPTIVE_PORTAL_PROBE_SPEC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL_PROBE_SPEC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL_PROBE_SPEC' class='name expandable'>EXTRA_CAPTIVE_PORTAL_PROBE_SPEC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Key for passing a android.net.captiveportal.CaptivePortalProbeSpec to the captive\nportal login activity. ...</div><div class='long'><p>Key for passing a android.net.captiveportal.CaptivePortalProbeSpec to the captive\nportal login activity.\n{@hide}</p>\n<p>Defaults to: <code>&quot;android.net.extra.CAPTIVE_PORTAL_PROBE_SPEC&quot;</code></p></div></div></div><div id='property-EXTRA_CAPTIVE_PORTAL_URL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL_URL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL_URL' class='name expandable'>EXTRA_CAPTIVE_PORTAL_URL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Key for passing a URL to the captive portal login activity. ...</div><div class='long'><p>Key for passing a URL to the captive portal login activity.</p>\n<p>Defaults to: <code>&quot;android.net.extra.CAPTIVE_PORTAL_URL&quot;</code></p></div></div></div><div id='property-EXTRA_CAPTIVE_PORTAL_USER_AGENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL_USER_AGENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_CAPTIVE_PORTAL_USER_AGENT' class='name expandable'>EXTRA_CAPTIVE_PORTAL_USER_AGENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Key for passing a user agent string to the captive portal login activity. ...</div><div class='long'><p>Key for passing a user agent string to the captive portal login activity.\n{@hide}</p>\n<p>Defaults to: <code>&quot;android.net.extra.CAPTIVE_PORTAL_USER_AGENT&quot;</code></p></div></div></div><div id='property-EXTRA_DEVICE_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_DEVICE_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_DEVICE_TYPE' class='name expandable'>EXTRA_DEVICE_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for an enum that indicates the network device type on which this data activity\nchange happens. ...</div><div class='long'><p>The lookup key for an enum that indicates the network device type on which this data activity\nchange happens.\n{@hide}</p>\n<p>Defaults to: <code>&quot;deviceType&quot;</code></p></div></div></div><div id='property-EXTRA_EXTRA_INFO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_EXTRA_INFO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_EXTRA_INFO' class='name expandable'>EXTRA_EXTRA_INFO</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The lookup key for a string that provides optionally supplied\nextra information about the network state. ...</div><div class='long'><p>The lookup key for a string that provides optionally supplied\nextra information about the network state. The information\nmay be passed up from the lower networking layers, and its\nmeaning may be specific to a particular network type. Retrieve\nit with android.content.Intent.getStringExtra(String).</p>\n<p>Defaults to: <code>&quot;extraInfo&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>See android.net.NetworkInfo.getExtraInfo().</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_INET_CONDITION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_INET_CONDITION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_INET_CONDITION' class='name expandable'>EXTRA_INET_CONDITION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for an int that provides information about\nour connection to the internet at large. ...</div><div class='long'><p>The lookup key for an int that provides information about\nour connection to the internet at large.  0 indicates no connection,\n100 indicates a great connection.  Retrieve it with\nint).\n{@hide}</p>\n<p>Defaults to: <code>&quot;inetCondition&quot;</code></p></div></div></div><div id='property-EXTRA_IS_ACTIVE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_IS_ACTIVE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_IS_ACTIVE' class='name expandable'>EXTRA_IS_ACTIVE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a boolean that indicates the device is active or not. ...</div><div class='long'><p>The lookup key for a boolean that indicates the device is active or not. {@code true} means\nit is actively sending or receiving data and {@code false} means it is idle.\n{@hide}</p>\n<p>Defaults to: <code>&quot;isActive&quot;</code></p></div></div></div><div id='property-EXTRA_IS_FAILOVER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_IS_FAILOVER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_IS_FAILOVER' class='name expandable'>EXTRA_IS_FAILOVER</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The lookup key for a boolean that indicates whether a connect event\nis for a network to which the connectivity manage...</div><div class='long'><p>The lookup key for a boolean that indicates whether a connect event\nis for a network to which the connectivity manager was failing over\nfollowing a disconnect on another network.\nRetrieve it with android.content.Intent.getBooleanExtra(String,boolean).</p>\n<p>Defaults to: <code>&quot;isFailover&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>See <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a>.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_NETWORK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_NETWORK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK' class='name expandable'>EXTRA_NETWORK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a android.net.Network object included with the intent after\nsuccessfully finding a network for the...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> object included with the intent after\nsuccessfully finding a network for the applications request.  Retrieve it with\nandroid.content.Intent.getParcelableExtra(String).</p>\n\n<p><p>\nNote that if you intend to invoke android.net.Network.openConnection(java.net.URL)\nthen you must get a ConnectivityManager instance before doing so.</p>\n<p>Defaults to: <code>&quot;android.net.extra.NETWORK&quot;</code></p></div></div></div><div id='property-EXTRA_NETWORK_INFO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_NETWORK_INFO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK_INFO' class='name expandable'>EXTRA_NETWORK_INFO</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The lookup key for a android.net.NetworkInfo object. ...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a> object. Retrieve with\nandroid.content.Intent.getParcelableExtra(String).</p>\n<p>Defaults to: <code>&quot;networkInfo&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>The <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a> object is deprecated, as many of its properties\n            can't accurately represent modern network characteristics.\n            Please obtain information about networks from the <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a>\n            or <a href=\"#!/api/android.net.LinkProperties\" rel=\"android.net.LinkProperties\" class=\"docClass\">android.net.LinkProperties</a> objects instead.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_NETWORK_REQUEST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_NETWORK_REQUEST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK_REQUEST' class='name expandable'>EXTRA_NETWORK_REQUEST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a android.net.NetworkRequest object included with the intent after\nsuccessfully finding a network ...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.NetworkRequest\" rel=\"android.net.NetworkRequest\" class=\"docClass\">android.net.NetworkRequest</a> object included with the intent after\nsuccessfully finding a network for the applications request.  Retrieve it with\nandroid.content.Intent.getParcelableExtra(String).</p>\n<p>Defaults to: <code>&quot;android.net.extra.NETWORK_REQUEST&quot;</code></p></div></div></div><div id='property-EXTRA_NETWORK_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_NETWORK_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK_TYPE' class='name expandable'>EXTRA_NETWORK_TYPE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Network type which triggered a CONNECTIVITY_ACTION broadcast. ...</div><div class='long'><p>Network type which triggered a <a href=\"#!/api/android.net.ConnectivityManager-property-CONNECTIVITY_ACTION\" rel=\"android.net.ConnectivityManager-property-CONNECTIVITY_ACTION\" class=\"docClass\">CONNECTIVITY_ACTION</a> broadcast.</p>\n\n<p>@see android.content.Intent#getIntExtra(String, int)</p>\n<p>Defaults to: <code>&quot;networkType&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>The network type is not rich enough to represent the characteristics\n            of modern networks. Please use <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> instead,\n            in particular the transports.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_NO_CONNECTIVITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_NO_CONNECTIVITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_NO_CONNECTIVITY' class='name expandable'>EXTRA_NO_CONNECTIVITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a boolean that indicates whether there is a\ncomplete lack of connectivity, i.e., no network is ava...</div><div class='long'><p>The lookup key for a boolean that indicates whether there is a\ncomplete lack of connectivity, i.e., no network is available.\nRetrieve it with android.content.Intent.getBooleanExtra(String,boolean).</p>\n<p>Defaults to: <code>&quot;noConnectivity&quot;</code></p></div></div></div><div id='property-EXTRA_OTHER_NETWORK_INFO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_OTHER_NETWORK_INFO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_OTHER_NETWORK_INFO' class='name expandable'>EXTRA_OTHER_NETWORK_INFO</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The lookup key for a android.net.NetworkInfo object. ...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a> object. This is supplied when\nthere is another network that it may be possible to connect to. Retrieve with\nandroid.content.Intent.getParcelableExtra(String).</p>\n<p>Defaults to: <code>&quot;otherNetwork&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>See <a href=\"#!/api/android.net.NetworkInfo\" rel=\"android.net.NetworkInfo\" class=\"docClass\">android.net.NetworkInfo</a>.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_REALTIME_NS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_REALTIME_NS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_REALTIME_NS' class='name expandable'>EXTRA_REALTIME_NS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a long that contains the timestamp (nanos) of the radio state change. ...</div><div class='long'><p>The lookup key for a long that contains the timestamp (nanos) of the radio state change.\n{@hide}</p>\n<p>Defaults to: <code>&quot;tsNanos&quot;</code></p></div></div></div><div id='property-EXTRA_REASON' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-EXTRA_REASON' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-EXTRA_REASON' class='name expandable'>EXTRA_REASON</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a string that indicates why an attempt to connect\nto a network failed. ...</div><div class='long'><p>The lookup key for a string that indicates why an attempt to connect\nto a network failed. The string has no particular structure. It is\nintended to be used in notifications presented to users. Retrieve\nit with android.content.Intent.getStringExtra(String).</p>\n<p>Defaults to: <code>&quot;reason&quot;</code></p></div></div></div><div id='property-MAX_NETWORK_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-MAX_NETWORK_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-MAX_NETWORK_TYPE' class='name expandable'>MAX_NETWORK_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;18&quot;</code></p></div></div></div><div id='property-MAX_RADIO_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-MAX_RADIO_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-MAX_RADIO_TYPE' class='name expandable'>MAX_RADIO_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;18&quot;</code></p></div></div></div><div id='property-MULTIPATH_PREFERENCE_HANDOVER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-MULTIPATH_PREFERENCE_HANDOVER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-MULTIPATH_PREFERENCE_HANDOVER' class='name expandable'>MULTIPATH_PREFERENCE_HANDOVER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>It is acceptable to briefly use multipath data to provide seamless connectivity for\ntime-sensitive user-facing operat...</div><div class='long'><p>It is acceptable to briefly use multipath data to provide seamless connectivity for\ntime-sensitive user-facing operations when the system default network is temporarily\nunresponsive. The amount of data should be limited (less than one megabyte for every call to\nthis method), and the operation should be infrequent to ensure that data usage is limited.</p>\n\n<p>An example of such an operation might be a time-sensitive foreground activity, such as a\nvoice command, that the user is performing while walking out of range of a Wi-Fi network.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-MULTIPATH_PREFERENCE_PERFORMANCE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-MULTIPATH_PREFERENCE_PERFORMANCE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-MULTIPATH_PREFERENCE_PERFORMANCE' class='name expandable'>MULTIPATH_PREFERENCE_PERFORMANCE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>It is acceptable to use metered data to improve network latency and performance. ...</div><div class='long'><p>It is acceptable to use metered data to improve network latency and performance.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-MULTIPATH_PREFERENCE_RELIABILITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-MULTIPATH_PREFERENCE_RELIABILITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-MULTIPATH_PREFERENCE_RELIABILITY' class='name expandable'>MULTIPATH_PREFERENCE_RELIABILITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>It is acceptable to use small amounts of multipath data on an ongoing basis to provide\na backup channel for traffic t...</div><div class='long'><p>It is acceptable to use small amounts of multipath data on an ongoing basis to provide\na backup channel for traffic that is primarily going over another network.</p>\n\n<p>An example might be maintaining backup connections to peers or servers for the purpose of\nfast fallback if the default network is temporarily unresponsive or disconnects. The traffic\non backup paths should be negligible compared to the traffic on the main path.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-RESTRICT_BACKGROUND_STATUS_DISABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_DISABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_DISABLED' class='name expandable'>RESTRICT_BACKGROUND_STATUS_DISABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Device is not restricting metered network activity while application is running on\nbackground. ...</div><div class='long'><p>Device is not restricting metered network activity while application is running on\nbackground.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-RESTRICT_BACKGROUND_STATUS_ENABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_ENABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_ENABLED' class='name expandable'>RESTRICT_BACKGROUND_STATUS_ENABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Device is restricting metered network activity while application is running on background. ...</div><div class='long'><p>Device is restricting metered network activity while application is running on background.</p>\n\n<p><p>\nIn this state, application should not try to use the network while running on background,\nbecause it would be denied.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-RESTRICT_BACKGROUND_STATUS_WHITELISTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_WHITELISTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_WHITELISTED' class='name expandable'>RESTRICT_BACKGROUND_STATUS_WHITELISTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Device is restricting metered network activity while application is running on background,\nbut application is allowed...</div><div class='long'><p>Device is restricting metered network activity while application is running on background,\nbut application is allowed to bypass it.</p>\n\n<p><p>\nIn this state, application should take action to mitigate metered network access.\nFor example, a music streaming application should switch to a low-bandwidth bitrate.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_DHCPSERVER_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_DHCPSERVER_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_DHCPSERVER_ERROR' class='name expandable'>TETHER_ERROR_DHCPSERVER_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;12&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_DISABLE_NAT_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_DISABLE_NAT_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_DISABLE_NAT_ERROR' class='name expandable'>TETHER_ERROR_DISABLE_NAT_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;9&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_ENABLE_NAT_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_ENABLE_NAT_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_ENABLE_NAT_ERROR' class='name expandable'>TETHER_ERROR_ENABLE_NAT_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_ENTITLEMENT_UNKONWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_ENTITLEMENT_UNKONWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_ENTITLEMENT_UNKONWN' class='name expandable'>TETHER_ERROR_ENTITLEMENT_UNKONWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;13&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_IFACE_CFG_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_IFACE_CFG_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_IFACE_CFG_ERROR' class='name expandable'>TETHER_ERROR_IFACE_CFG_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;10&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_MASTER_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_MASTER_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_MASTER_ERROR' class='name expandable'>TETHER_ERROR_MASTER_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_NO_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_NO_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_NO_ERROR' class='name expandable'>TETHER_ERROR_NO_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_PROVISION_FAILED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_PROVISION_FAILED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_PROVISION_FAILED' class='name expandable'>TETHER_ERROR_PROVISION_FAILED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;11&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_SERVICE_UNAVAIL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_SERVICE_UNAVAIL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_SERVICE_UNAVAIL' class='name expandable'>TETHER_ERROR_SERVICE_UNAVAIL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_TETHER_IFACE_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_TETHER_IFACE_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_TETHER_IFACE_ERROR' class='name expandable'>TETHER_ERROR_TETHER_IFACE_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_UNAVAIL_IFACE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_UNAVAIL_IFACE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_UNAVAIL_IFACE' class='name expandable'>TETHER_ERROR_UNAVAIL_IFACE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_UNKNOWN_IFACE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_UNKNOWN_IFACE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_UNKNOWN_IFACE' class='name expandable'>TETHER_ERROR_UNKNOWN_IFACE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_UNSUPPORTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_UNSUPPORTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_UNSUPPORTED' class='name expandable'>TETHER_ERROR_UNSUPPORTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-TETHER_ERROR_UNTETHER_IFACE_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TETHER_ERROR_UNTETHER_IFACE_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_UNTETHER_IFACE_ERROR' class='name expandable'>TETHER_ERROR_UNTETHER_IFACE_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;7&quot;</code></p></div></div></div><div id='property-TYPE_BLUETOOTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_BLUETOOTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_BLUETOOTH' class='name expandable'>TYPE_BLUETOOTH</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A Bluetooth data connection. ...</div><div class='long'><p>A Bluetooth data connection.</p>\n<p>Defaults to: <code>&quot;7&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_DUMMY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_DUMMY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_DUMMY' class='name expandable'>TYPE_DUMMY</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Dummy data connection. ...</div><div class='long'><p>Dummy data connection.  This should not be used on shipping devices.</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is not used any more.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_ETHERNET' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_ETHERNET' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_ETHERNET' class='name expandable'>TYPE_ETHERNET</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>An Ethernet data connection. ...</div><div class='long'><p>An Ethernet data connection.</p>\n<p>Defaults to: <code>&quot;9&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE' class='name expandable'>TYPE_MOBILE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A Mobile data connection. ...</div><div class='long'><p>A Mobile data connection. Devices may support more than one.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_CBS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_CBS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_CBS' class='name expandable'>TYPE_MOBILE_CBS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Carrier Branded Services. ...</div><div class='long'><p>Carrier Branded Services.</p>\n<p>Defaults to: <code>&quot;12&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_CBS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_CBS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_CBS</a> instead.\n{@hide}</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_DUN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_DUN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_DUN' class='name expandable'>TYPE_MOBILE_DUN</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A DUN-specific Mobile data connection. ...</div><div class='long'><p>A DUN-specific Mobile data connection.  This network type may use the\nsame network interface as <a href=\"#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE\" rel=\"android.net.ConnectivityManager-property-TYPE_MOBILE\" class=\"docClass\">TYPE_MOBILE</a> or it may use a different\none.  This is sometimes by the system when setting up an upstream connection\nfor tethering so that the carrier is aware of DUN traffic.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasCapability\" rel=\"android.net.NetworkCapabilities-method-hasCapability\" class=\"docClass\">android.net.NetworkCapabilities.hasCapability</a> or\n        android.net.NetworkCallback) to request a network that\n        provides the <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_DUN\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_DUN\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_DUN</a> capability.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_EMERGENCY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_EMERGENCY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_EMERGENCY' class='name expandable'>TYPE_MOBILE_EMERGENCY</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Emergency PDN connection for emergency services. ...</div><div class='long'><p>Emergency PDN connection for emergency services.  This\nmay include IMS and MMS in emergency situations.</p>\n<p>Defaults to: <code>&quot;15&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_EIMS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_EIMS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_EIMS</a> instead.\n{@hide}</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_FOTA' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_FOTA' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_FOTA' class='name expandable'>TYPE_MOBILE_FOTA</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Over the air Administration. ...</div><div class='long'><p>Over the air Administration.</p>\n<p>Defaults to: <code>&quot;10&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> instead.\n{@hide}</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_HIPRI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_HIPRI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_HIPRI' class='name expandable'>TYPE_MOBILE_HIPRI</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A High Priority Mobile data connection. ...</div><div class='long'><p>A High Priority Mobile data connection.  This network type uses the\nsame network interface as <a href=\"#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE\" rel=\"android.net.ConnectivityManager-property-TYPE_MOBILE\" class=\"docClass\">TYPE_MOBILE</a> but the routing setup\nis different.</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_IA' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_IA' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_IA' class='name expandable'>TYPE_MOBILE_IA</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The network to use for initially attaching to the network ...</div><div class='long'><p>The network to use for initially attaching to the network</p>\n<p>Defaults to: <code>&quot;14&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_IA\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_IA\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_IA</a> instead.\n{@hide}</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_IMS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_IMS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_IMS' class='name expandable'>TYPE_MOBILE_IMS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>IP Multimedia Subsystem. ...</div><div class='long'><p>IP Multimedia Subsystem.</p>\n<p>Defaults to: <code>&quot;11&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_IMS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_IMS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_IMS</a> instead.\n{@hide}</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_MMS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_MMS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_MMS' class='name expandable'>TYPE_MOBILE_MMS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>An MMS-specific Mobile data connection. ...</div><div class='long'><p>An MMS-specific Mobile data connection.  This network type may use the\nsame network interface as <a href=\"#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE\" rel=\"android.net.ConnectivityManager-property-TYPE_MOBILE\" class=\"docClass\">TYPE_MOBILE</a> or it may use a different\none.  This is used by applications needing to talk to the carrier's\nMultimedia Messaging Service servers.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasCapability\" rel=\"android.net.NetworkCapabilities-method-hasCapability\" class=\"docClass\">android.net.NetworkCapabilities.hasCapability</a> or\n        android.net.NetworkCallback) to request a network that\n        provides the <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_MMS\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_MMS\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_MMS</a> capability.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_MOBILE_SUPL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_MOBILE_SUPL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE_SUPL' class='name expandable'>TYPE_MOBILE_SUPL</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A SUPL-specific Mobile data connection. ...</div><div class='long'><p>A SUPL-specific Mobile data connection.  This network type may use the\nsame network interface as <a href=\"#!/api/android.net.ConnectivityManager-property-TYPE_MOBILE\" rel=\"android.net.ConnectivityManager-property-TYPE_MOBILE\" class=\"docClass\">TYPE_MOBILE</a> or it may use a different\none.  This is used by applications needing to talk to the carrier's\nSecure User Plane Location servers for help locating the device.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasCapability\" rel=\"android.net.NetworkCapabilities-method-hasCapability\" class=\"docClass\">android.net.NetworkCapabilities.hasCapability</a> or\n        android.net.NetworkCallback) to request a network that\n        provides the <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_SUPL\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_SUPL\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_SUPL</a> capability.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_PROXY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_PROXY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_PROXY' class='name expandable'>TYPE_PROXY</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The network that uses proxy to achieve connectivity. ...</div><div class='long'><p>The network that uses proxy to achieve connectivity.</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> instead.\n{@hide}</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_VPN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_VPN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_VPN' class='name expandable'>TYPE_VPN</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A virtual network using one or more native bearers. ...</div><div class='long'><p>A virtual network using one or more native bearers.\nIt may or may not be providing security services.</p>\n<p>Defaults to: <code>&quot;17&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should use <a href=\"#!/api/android.net.NetworkCapabilities-property-TRANSPORT_VPN\" rel=\"android.net.NetworkCapabilities-property-TRANSPORT_VPN\" class=\"docClass\">android.net.NetworkCapabilities.TRANSPORT_VPN</a> instead.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_WIFI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_WIFI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_WIFI' class='name expandable'>TYPE_WIFI</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A WIFI data connection. ...</div><div class='long'><p>A WIFI data connection. Devices may support more than one.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_WIFI_P2P' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_WIFI_P2P' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_WIFI_P2P' class='name expandable'>TYPE_WIFI_P2P</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A Wi-Fi p2p connection. ...</div><div class='long'><p>A Wi-Fi p2p connection. Only requesting processes will have access to\nthe peers connected.</p>\n<p>Defaults to: <code>&quot;13&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_WIFI_P2P\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_WIFI_P2P\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_WIFI_P2P</a> instead.\n{@hide}</p>\n\n        </div>\n</div></div></div><div id='property-TYPE_WIMAX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-property-TYPE_WIMAX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-property-TYPE_WIMAX' class='name expandable'>TYPE_WIMAX</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>A WiMAX data connection. ...</div><div class='long'><p>A WiMAX data connection.</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should instead use <a href=\"#!/api/android.net.NetworkCapabilities-method-hasTransport\" rel=\"android.net.NetworkCapabilities-method-hasTransport\" class=\"docClass\">android.net.NetworkCapabilities.hasTransport</a> or\n        android.net.NetworkCallback) to request an\n        appropriate network. {@see NetworkCapabilities} for supported transports.</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addDefaultNetworkActiveListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-addDefaultNetworkActiveListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-addDefaultNetworkActiveListener' class='name expandable'>addDefaultNetworkActiveListener</a>( <span class='pre'>l</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Start listening to reports when the system's default data network is active, meaning it is\n a good time to perform ne...</div><div class='long'><p>Start listening to reports when the system's default data network is active, meaning it is\n a good time to perform network traffic.  Use <a href=\"#!/api/android.net.ConnectivityManager-method-isDefaultNetworkActive\" rel=\"android.net.ConnectivityManager-method-isDefaultNetworkActive\" class=\"docClass\">isDefaultNetworkActive</a>()\n to determine the current state of the system's default network after registering the\n listener.\n <p>\n If the process default network has been set with\n <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a> this function will not\n reflect the process's default, but the system default.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l</span> : Object {ConnectivityManager.OnNetworkActiveListener}<div class='sub-desc'><p>The listener to be told when the network is active.</p>\n</div></li></ul></div></div></div><div id='method-bindProcessToNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-bindProcessToNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork' class='name expandable'>bindProcessToNetwork</a>( <span class='pre'>network</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Binds the current process to {@code network}. ...</div><div class='long'><p>Binds the current process to {@code network}.  All Sockets created in the future\n (and not explicitly bound via a bound SocketFactory from\n android.net.Network.getSocketFactory()) will be bound to\n {@code network}.  All host name resolutions will be limited to {@code network} as well.\n Note that if {@code network} ever disconnects, all Sockets created in this way will cease to\n work and all host name resolutions will fail.  This is by design so an application doesn't\n accidentally use Sockets it thinks are still bound to a particular <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a>.\n To clear binding pass {@code null} for {@code network}.  Using individually bound\n Sockets created by Network.getSocketFactory().createSocket() and\n performing network-specific host name resolutions via\n <a href=\"#!/api/android.net.Network-method-getAllByName\" rel=\"android.net.Network-method-getAllByName\" class=\"docClass\">android.net.Network.getAllByName</a> is preferred to calling\n {@code bindProcessToNetwork}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>The Network to bind the current process to, or {@code null} to clear\n                the current binding.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} on success, {@code false} if the Network is no longer valid.</p>\n</div></li></ul></div></div></div><div id='method-checkMobileProvisioning' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-checkMobileProvisioning' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-checkMobileProvisioning' class='name expandable'>checkMobileProvisioning</a>( <span class='pre'>suggestedTimeOutMs</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Check mobile provisioning. ...</div><div class='long'><p>Check mobile provisioning.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>suggestedTimeOutMs</span> : Number<div class='sub-desc'><p>, timeout in milliseconds</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>time out that will be used, maybe less that suggestedTimeOutMs\n -1 if an error.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-enforceChangePermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-enforceChangePermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-enforceChangePermission' class='name expandable'>enforceChangePermission</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-enforceTetherChangePermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-enforceTetherChangePermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-enforceTetherChangePermission' class='name expandable'>enforceTetherChangePermission</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-from' class='name expandable'>from</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getActiveLinkProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getActiveLinkProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getActiveLinkProperties' class='name expandable'>getActiveLinkProperties</a>( <span class='pre'></span> ) : Object {android.net.LinkProperties}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the IP information for the current default network. ...</div><div class='long'><p>Returns the IP information for the current default network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>please use getLinkProperties(Network) on the return\n             value of getActiveNetwork() instead. In particular,\n             this method will return non-null LinkProperties even if the\n             app is blocked by policy from using this network.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.LinkProperties}</span><div class='sub-desc'><p>a LinkProperties object describing the IP info\n        for the current default network, or {@code null} if there\n        is no current default network.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getActiveNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getActiveNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getActiveNetwork' class='name expandable'>getActiveNetwork</a>( <span class='pre'></span> ) : Object {android.net.Network}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a android.net.Network object corresponding to the currently active\n default data network. ...</div><div class='long'><p>Returns a <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> object corresponding to the currently active\n default data network.  In the event that the current active default data\n network disconnects, the returned {@code Network} object will no longer\n be usable.  This will return {@code null} when there is no default\n network.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.Network}</span><div class='sub-desc'><p>a Network object for the current default network or\n        {@code null} if no default network is currently active</p>\n</div></li></ul></div></div></div><div id='method-getActiveNetworkForUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getActiveNetworkForUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getActiveNetworkForUid' class='name expandable'>getActiveNetworkForUid</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getActiveNetworkInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getActiveNetworkInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getActiveNetworkInfo' class='name expandable'>getActiveNetworkInfo</a>( <span class='pre'></span> ) : Object {android.net.NetworkInfo}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns details about the currently active default data network. ...</div><div class='long'><p>Returns details about the currently active default data network. When\n connected, this network is the default route for outgoing connections.\n You should always check android.net.NetworkInfo.isConnected() before initiating\n network traffic. This may return {@code null} when there is no default\n network.\n Note that if the default network is a VPN, this method will return the\n NetworkInfo for one of its underlying networks instead, or null if the\n VPN agent did not specify any. Apps interested in learning about VPNs\n should use getNetworkInfo(android.net.Network) instead.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>See NetworkInfo.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkInfo}</span><div class='sub-desc'><p>a NetworkInfo object for the current default network\n        or {@code null} if no default network is currently active</p>\n</div></li></ul></div></div></div><div id='method-getActiveNetworkInfoForUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getActiveNetworkInfoForUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getActiveNetworkInfoForUid' class='name expandable'>getActiveNetworkInfoForUid</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getActiveNetworkQuotaInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getActiveNetworkQuotaInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getActiveNetworkQuotaInfo' class='name expandable'>getActiveNetworkQuotaInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getAllNetworkInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getAllNetworkInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getAllNetworkInfo' class='name expandable'>getAllNetworkInfo</a>( <span class='pre'></span> ) : Object {android.net.NetworkInfo}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns connection status information about all network\n types supported by the device. ...</div><div class='long'><p>Returns connection status information about all network\n types supported by the device.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method does not support multiple connected networks\n             of the same type. Use <a href=\"#!/api/android.net.ConnectivityManager-method-getAllNetworks\" rel=\"android.net.ConnectivityManager-method-getAllNetworks\" class=\"docClass\">getAllNetworks</a> and\n             getNetworkInfo(android.net.Network) instead.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkInfo}</span><div class='sub-desc'><p>an array of NetworkInfo objects.  Check each\n NetworkInfo.getType for which type each applies.</p>\n</div></li></ul></div></div></div><div id='method-getAllNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getAllNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getAllNetworks' class='name expandable'>getAllNetworks</a>( <span class='pre'></span> ) : Object {android.net.Network}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array of all android.net.Network currently tracked by the\n framework. ...</div><div class='long'><p>Returns an array of all <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> currently tracked by the\n framework.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.Network}</span><div class='sub-desc'><p>an array of Network objects.</p>\n</div></li></ul></div></div></div><div id='method-getBackgroundDataSetting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getBackgroundDataSetting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getBackgroundDataSetting' class='name expandable'>getBackgroundDataSetting</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the value of the setting for background data usage. ...</div><div class='long'><p>Returns the value of the setting for background data usage. If false,\n applications should not use the network if the application is not in the\n foreground. Developers should respect this setting, and check the value\n of this before performing any background data operations.\n <p>\n All applications that have background services that use the network\n should listen to <a href=\"#!/api/android.net.ConnectivityManager-property-ACTION_BACKGROUND_DATA_SETTING_CHANGED\" rel=\"android.net.ConnectivityManager-property-ACTION_BACKGROUND_DATA_SETTING_CHANGED\" class=\"docClass\">ACTION_BACKGROUND_DATA_SETTING_CHANGED</a>.\n <p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>As of VERSION_CODES.ICE_CREAM_SANDWICH, availability of\n background data depends on several combined factors, and this method will\n always return {@code true}. Instead, when background data is unavailable,\n getActiveNetworkInfo() will now appear disconnected.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether background data usage is allowed.</p>\n</div></li></ul></div></div></div><div id='method-getBoundNetworkForProcess' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getBoundNetworkForProcess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getBoundNetworkForProcess' class='name expandable'>getBoundNetworkForProcess</a>( <span class='pre'></span> ) : Object {android.net.Network}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the android.net.Network currently bound to this process via\n bindProcessToNetwork, or {@code null} if no andr...</div><div class='long'><p>Returns the <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> currently bound to this process via\n <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a>, or {@code null} if no <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> is explicitly bound.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.Network}</span><div class='sub-desc'><p>{@code Network} to which this process is bound, or {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-getConnectionOwnerUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getConnectionOwnerUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getConnectionOwnerUid' class='name expandable'>getConnectionOwnerUid</a>( <span class='pre'>protocol, local, remote</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the {@code uid} of the owner of a network connection. ...</div><div class='long'><p>Returns the {@code uid} of the owner of a network connection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>protocol</span> : Number<div class='sub-desc'><p>The protocol of the connection. Only {@code IPPROTO_TCP} and\n {@code IPPROTO_UDP} currently supported.</p>\n</div></li><li><span class='pre'>local</span> : Object {InetSocketAddress}<div class='sub-desc'><p>The local InetSocketAddress of a connection.</p>\n</div></li><li><span class='pre'>remote</span> : Object {InetSocketAddress}<div class='sub-desc'><p>The remote InetSocketAddress of a connection.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>{@code uid} if the connection is found and the app has permission to observe it\n (e.g., if it is associated with the calling VPN app's tunnel) or\n android.os.Process.INVALID_UID if the connection is not found.\n Throws SecurityException if the caller is not the active VPN for the current user.\n Throws IllegalArgumentException if an unsupported protocol is requested.</p>\n</div></li></ul></div></div></div><div id='method-getDefaultProxy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getDefaultProxy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getDefaultProxy' class='name expandable'>getDefaultProxy</a>( <span class='pre'></span> ) : Object {android.net.ProxyInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current default HTTP proxy settings. ...</div><div class='long'><p>Get the current default HTTP proxy settings.  If a global proxy is set it will be returned,\n otherwise if this process is bound to a <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> using\n <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a> then that {@code Network}'s proxy is returned, otherwise\n the default network's proxy is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.ProxyInfo}</span><div class='sub-desc'><p>the ProxyInfo for the current HTTP proxy, or {@code null} if no\n        HTTP proxy is active.</p>\n</div></li></ul></div></div></div><div id='method-getLastTetherError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getLastTetherError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getLastTetherError' class='name expandable'>getLastTetherError</a>( <span class='pre'>iface</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a more detailed error code after a Tethering or Untethering\n request asynchronously failed. ...</div><div class='long'><p>Get a more detailed error code after a Tethering or Untethering\n request asynchronously failed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>iface</span> : String<div class='sub-desc'><p>The name of the interface of interest</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error The error code of the last error tethering or untethering the named\n               interface</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getLatestTetheringEntitlementResult' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getLatestTetheringEntitlementResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getLatestTetheringEntitlementResult' class='name expandable'>getLatestTetheringEntitlementResult</a>( <span class='pre'>type, showEntitlementUi, executor, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the last value of the entitlement check on this downstream. ...</div><div class='long'><p>Get the last value of the entitlement check on this downstream. If the cached value is\n <a href=\"#!/api/android.net.ConnectivityManager-property-TETHER_ERROR_NO_ERROR\" rel=\"android.net.ConnectivityManager-property-TETHER_ERROR_NO_ERROR\" class=\"docClass\">TETHER_ERROR_NO_ERROR</a> or showEntitlementUi argument is false, it just return the\n cached value. Otherwise, a UI-based entitlement check would be performed. It is not\n guaranteed that the UI-based entitlement check will complete in any specific time period\n and may in fact never complete. Any successful entitlement check the platform performs for\n any reason will update the cached value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>the downstream type of tethering. Must be one of\n         TETHERING_WIFI,\n         TETHERING_USB, or\n         TETHERING_BLUETOOTH.</p>\n</div></li><li><span class='pre'>showEntitlementUi</span> : Boolean<div class='sub-desc'><p>a boolean indicating whether to run UI-based entitlement check.</p>\n</div></li><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>the executor on which callback will be invoked.</p>\n</div></li><li><span class='pre'>listener</span> : Object {ConnectivityManager.OnTetheringEntitlementResultListener}<div class='sub-desc'><p>an OnTetheringEntitlementResultListener which will be called to\n         notify the caller of the result of entitlement check. The listener may be called zero\n         or one time.\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getLinkProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getLinkProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getLinkProperties' class='name expandable'>getLinkProperties</a>( <span class='pre'>network</span> ) : Object {android.net.LinkProperties}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the android.net.LinkProperties for the given android.net.Network. ...</div><div class='long'><p>Get the <a href=\"#!/api/android.net.LinkProperties\" rel=\"android.net.LinkProperties\" class=\"docClass\">android.net.LinkProperties</a> for the given <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a>.  This\n will return {@code null} if the network is unknown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>The Network object identifying the network in question.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.LinkProperties}</span><div class='sub-desc'><p>The LinkProperties for the network, or {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-getMobileProvisioningUrl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getMobileProvisioningUrl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getMobileProvisioningUrl' class='name expandable'>getMobileProvisioningUrl</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the mobile provisioning url. ...</div><div class='long'><p>Get the mobile provisioning url.\n {@hide}</p>\n</div></div></div><div id='method-getMultipathPreference' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getMultipathPreference' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getMultipathPreference' class='name expandable'>getMultipathPreference</a>( <span class='pre'>network</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Provides a hint to the calling application on whether it is desirable to use the\n multinetwork APIs (e.g., android.ne...</div><div class='long'><p>Provides a hint to the calling application on whether it is desirable to use the\n multinetwork APIs (e.g., <a href=\"#!/api/android.net.Network-method-openConnection\" rel=\"android.net.Network-method-openConnection\" class=\"docClass\">android.net.Network.openConnection</a>, <a href=\"#!/api/android.net.Network-method-bindSocket\" rel=\"android.net.Network-method-bindSocket\" class=\"docClass\">android.net.Network.bindSocket</a>, etc.)\n for multipath data transfer on this network when it is not the system default network.\n Applications desiring to use multipath network protocols should call this method before\n each such operation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>The network on which the application desires to use multipath data.\n                If {@code null}, this method will return the a preference that will generally\n                apply to metered networks.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a bitwise OR of zero or more of the  {@code MULTIPATH_PREFERENCE_*} constants.</p>\n</div></li></ul></div></div></div><div id='method-getNetworkCapabilities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getNetworkCapabilities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getNetworkCapabilities' class='name expandable'>getNetworkCapabilities</a>( <span class='pre'>network</span> ) : Object {android.net.NetworkCapabilities}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the android.net.NetworkCapabilities for the given android.net.Network. ...</div><div class='long'><p>Get the <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> for the given <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a>.  This\n will return {@code null} if the network is unknown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>The Network object identifying the network in question.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkCapabilities}</span><div class='sub-desc'><p>The <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a> for the network, or {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-getNetworkInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getNetworkInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getNetworkInfo' class='name expandable'>getNetworkInfo</a>( <span class='pre'>network</span> ) : Object {android.net.NetworkInfo}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns connection status information about a particular\n Network. ...</div><div class='long'><p>Returns connection status information about a particular\n Network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>See NetworkInfo.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>Network specifying which network\n        in which you're interested.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.NetworkInfo}</span><div class='sub-desc'><p>a NetworkInfo object for the requested\n        network or {@code null} if the {@code Network}\n        is not valid.</p>\n</div></li></ul></div></div></div><div id='method-getNetworkInfoForUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getNetworkInfoForUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getNetworkInfoForUid' class='name expandable'>getNetworkInfoForUid</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getNetworkPreference' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getNetworkPreference' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getNetworkPreference' class='name expandable'>getNetworkPreference</a>( <span class='pre'></span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Retrieves the current preferred network type. ...</div><div class='long'><p>Retrieves the current preferred network type.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Functionality has been removed as it no longer makes sense,\n             with many more than two networks - we'd need an array to express\n             preference.  Instead we use dynamic network properties of\n             the networks to describe their precedence.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an integer representing the preferred network type</p>\n</div></li></ul></div></div></div><div id='method-getNetworkTypeName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getNetworkTypeName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getNetworkTypeName' class='name expandable'>getNetworkTypeName</a>( <span class='pre'>type</span> ) : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns a non-localized string representing a given network type. ...</div><div class='long'><p>Returns a non-localized string representing a given network type.\n ONLY used for debugging output.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Types are deprecated. Use NetworkCapabilities instead.\n {@hide}</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>the type needing naming</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a String for the given type, or a string version of the type (\"87\")\n if no name is known.</p>\n</div></li></ul></div></div></div><div id='method-getNetworkWatchlistConfigHash' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getNetworkWatchlistConfigHash' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getNetworkWatchlistConfigHash' class='name expandable'>getNetworkWatchlistConfigHash</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>The network watchlist is a list of domains and IP addresses that are associated with\n potentially harmful apps. ...</div><div class='long'><p>The network watchlist is a list of domains and IP addresses that are associated with\n potentially harmful apps. This method returns the SHA-256 of the watchlist config file\n currently used by the system for validation purposes.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Hash of network watchlist config file. Null if config does not exist.</p>\n</div></li></ul></div></div></div><div id='method-getProcessDefaultNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getProcessDefaultNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getProcessDefaultNetwork' class='name expandable'>getProcessDefaultNetwork</a>( <span class='pre'></span> ) : Object {android.net.Network}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the android.net.Network currently bound to this process via\n bindProcessToNetwork, or {@code null} if no andr...</div><div class='long'><p>Returns the <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> currently bound to this process via\n <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a>, or {@code null} if no <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> is explicitly bound.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Using this function can lead to other functions throwing\n             IllegalStateException.  Use <a href=\"#!/api/android.net.ConnectivityManager-method-getBoundNetworkForProcess\" rel=\"android.net.ConnectivityManager-method-getBoundNetworkForProcess\" class=\"docClass\">getBoundNetworkForProcess</a> instead.\n             {@code getBoundNetworkForProcess} is a direct replacement.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.Network}</span><div class='sub-desc'><p>{@code Network} to which this process is bound, or {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-getRestrictBackgroundStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getRestrictBackgroundStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getRestrictBackgroundStatus' class='name expandable'>getRestrictBackgroundStatus</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the calling application is subject to metered network restrictions while\n running on background. ...</div><div class='long'><p>Determines if the calling application is subject to metered network restrictions while\n running on background.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_DISABLED\" rel=\"android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_DISABLED\" class=\"docClass\">RESTRICT_BACKGROUND_STATUS_DISABLED</a>,\n <a href=\"#!/api/android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_ENABLED\" rel=\"android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_ENABLED\" class=\"docClass\">RESTRICT_BACKGROUND_STATUS_ENABLED</a>,\n or <a href=\"#!/api/android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_WHITELISTED\" rel=\"android.net.ConnectivityManager-property-RESTRICT_BACKGROUND_STATUS_WHITELISTED\" class=\"docClass\">RESTRICT_BACKGROUND_STATUS_WHITELISTED</a></p>\n</div></li></ul></div></div></div><div id='method-getTetherableBluetoothRegexs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getTetherableBluetoothRegexs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getTetherableBluetoothRegexs' class='name expandable'>getTetherableBluetoothRegexs</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the list of regular expressions that define any tetherable\n Bluetooth network interfaces. ...</div><div class='long'><p>Get the list of regular expressions that define any tetherable\n Bluetooth network interfaces.  If Bluetooth tethering is not supported by the\n device, this list should be empty.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of 0 or more regular expression Strings defining\n        what interfaces are considered tetherable bluetooth interfaces.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getTetherableIfaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getTetherableIfaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getTetherableIfaces' class='name expandable'>getTetherableIfaces</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the set of tetherable, available interfaces. ...</div><div class='long'><p>Get the set of tetherable, available interfaces.  This list is limited by\n device configuration and current interface existence.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of 0 or more Strings of tetherable interface names.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getTetherableUsbRegexs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getTetherableUsbRegexs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getTetherableUsbRegexs' class='name expandable'>getTetherableUsbRegexs</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the list of regular expressions that define any tetherable\n USB network interfaces. ...</div><div class='long'><p>Get the list of regular expressions that define any tetherable\n USB network interfaces.  If USB tethering is not supported by the\n device, this list should be empty.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of 0 or more regular expression Strings defining\n        what interfaces are considered tetherable usb interfaces.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getTetherableWifiRegexs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getTetherableWifiRegexs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getTetherableWifiRegexs' class='name expandable'>getTetherableWifiRegexs</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the list of regular expressions that define any tetherable\n Wifi network interfaces. ...</div><div class='long'><p>Get the list of regular expressions that define any tetherable\n Wifi network interfaces.  If Wifi tethering is not supported by the\n device, this list should be empty.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of 0 or more regular expression Strings defining\n        what interfaces are considered tetherable wifi interfaces.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getTetheredDhcpRanges' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getTetheredDhcpRanges' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getTetheredDhcpRanges' class='name expandable'>getTetheredDhcpRanges</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the set of tethered dhcp ranges. ...</div><div class='long'><p>Get the set of tethered dhcp ranges.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of 0 or more {@code String} of tethered dhcp ranges.\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getTetheredIfaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getTetheredIfaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getTetheredIfaces' class='name expandable'>getTetheredIfaces</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the set of tethered interfaces. ...</div><div class='long'><p>Get the set of tethered interfaces.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of 0 or more String of currently tethered interface names.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getTetheringErroredIfaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-getTetheringErroredIfaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-getTetheringErroredIfaces' class='name expandable'>getTetheringErroredIfaces</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the set of interface names which attempted to tether but\n failed. ...</div><div class='long'><p>Get the set of interface names which attempted to tether but\n failed.  Re-attempting to tether may cause them to reset to the Tethered\n state.  Alternatively, causing the interface to be destroyed and recreated\n may cause them to reset to the available state.\n <a href=\"#!/api/android.net.ConnectivityManager-method-getLastTetherError\" rel=\"android.net.ConnectivityManager-method-getLastTetherError\" class=\"docClass\">getLastTetherError</a> can be used to get more\n information on the cause of the errors.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of 0 or more String indicating the interface names\n        which failed to tether.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-isActiveNetworkMetered' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-isActiveNetworkMetered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-isActiveNetworkMetered' class='name expandable'>isActiveNetworkMetered</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns if the currently active data network is metered. ...</div><div class='long'><p>Returns if the currently active data network is metered. A network is\n classified as metered when the user is sensitive to heavy data usage on\n that connection due to monetary costs, data limitations or\n battery/performance issues. You should check this before doing large\n data transfers, and warn the user or delay the operation until another\n network is available.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if large transfers should be avoided, otherwise\n        {@code false}.</p>\n</div></li></ul></div></div></div><div id='method-isDefaultNetworkActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-isDefaultNetworkActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-isDefaultNetworkActive' class='name expandable'>isDefaultNetworkActive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether the data network is currently active. ...</div><div class='long'><p>Return whether the data network is currently active.  An active network means that\n it is currently in a high power state for performing data transmission.  On some\n types of networks, it may be expensive to move and stay in such a state, so it is\n more power efficient to batch network traffic together when the radio is already in\n this state.  This method tells you whether right now is currently a good time to\n initiate network traffic, as the network is already active.</p>\n</div></div></div><div id='method-isNetworkTypeMobile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-isNetworkTypeMobile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-isNetworkTypeMobile' class='name expandable'>isNetworkTypeMobile</a>( <span class='pre'>networkType</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Checks if a given type uses the cellular data connection. ...</div><div class='long'><p>Checks if a given type uses the cellular data connection.\n This should be replaced in the future by a network property.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Types are deprecated. Use NetworkCapabilities instead.\n {@hide}</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkType</span> : Number<div class='sub-desc'><p>the type to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>a boolean - {@code true} if uses cellular network, else {@code false}</p>\n</div></li></ul></div></div></div><div id='method-isNetworkTypeValid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-isNetworkTypeValid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-isNetworkTypeValid' class='name expandable'>isNetworkTypeValid</a>( <span class='pre'>networkType</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Tests if a given integer represents a valid network type. ...</div><div class='long'><p>Tests if a given integer represents a valid network type.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>All APIs accepting a network type are deprecated. There should be no need to\n             validate a network type.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkType</span> : Number<div class='sub-desc'><p>the type to be tested</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>a boolean.  {@code true} if the type is valid, else {@code false}</p>\n</div></li></ul></div></div></div><div id='method-isTetheringSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-isTetheringSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-isTetheringSupported' class='name expandable'>isTetheringSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if the device allows for tethering. ...</div><div class='long'><p>Check if the device allows for tethering.  It may be disabled via\n {@code ro.tether.denied} system property, Settings.TETHER_SUPPORTED or\n due to device configuration.</p>\n\n<p> <p>If this app does not have permission to use this API, it will always\n return false rather than throw an exception.</p></p>\n\n<p> <p>If the device has a hotspot provisioning app, the caller is required to hold the\n android.Manifest.permission.TETHER_PRIVILEGED permission.</p></p>\n\n<p> <p>Otherwise, this method requires the caller to hold the ability to modify system\n settings as determined by android.provider.Settings.System.canWrite.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>a boolean - {@code true} indicating Tethering is supported.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-registerDefaultNetworkCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-registerDefaultNetworkCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-registerDefaultNetworkCallback' class='name expandable'>registerDefaultNetworkCallback</a>( <span class='pre'>networkCallback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers to receive notifications about changes in the system default network. ...</div><div class='long'><p>Registers to receive notifications about changes in the system default network. The callbacks\n will continue to be called until either the application exits or\n <a href=\"#!/api/android.net.ConnectivityManager-method-unregisterNetworkCallback\" rel=\"android.net.ConnectivityManager-method-unregisterNetworkCallback\" class=\"docClass\">unregisterNetworkCallback</a>(NetworkCallback) is called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkCallback</span> : Object {ConnectivityManager.NetworkCallback}<div class='sub-desc'><p>The NetworkCallback that the system will call as the\n                        system default network changes.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler to specify the thread upon which the callback will be invoked.</p>\n</div></li></ul></div></div></div><div id='method-registerNetworkCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-registerNetworkCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-registerNetworkCallback' class='name expandable'>registerNetworkCallback</a>( <span class='pre'>request, operation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a PendingIntent to be sent when a network is available which satisfies the given\n android.net.NetworkRequest. ...</div><div class='long'><p>Registers a PendingIntent to be sent when a network is available which satisfies the given\n <a href=\"#!/api/android.net.NetworkRequest\" rel=\"android.net.NetworkRequest\" class=\"docClass\">android.net.NetworkRequest</a>.</p>\n\n<p> This function behaves identically to the version that takes a NetworkCallback, but instead\n of android.net.NetworkCallback a PendingIntent is used.  This means\n the request may outlive the calling application and get called back when a suitable\n network is found.\n <p>\n The operation is an Intent broadcast that goes to a broadcast receiver that\n you registered with Context.registerReceiver or through the\n &lt;receiver&gt; tag in an AndroidManifest.xml file\n <p>\n The operation Intent is delivered with two extras, a <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> typed\n extra called <a href=\"#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK\" rel=\"android.net.ConnectivityManager-property-EXTRA_NETWORK\" class=\"docClass\">EXTRA_NETWORK</a> and a <a href=\"#!/api/android.net.NetworkRequest\" rel=\"android.net.NetworkRequest\" class=\"docClass\">android.net.NetworkRequest</a>\n typed extra called <a href=\"#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK_REQUEST\" rel=\"android.net.ConnectivityManager-property-EXTRA_NETWORK_REQUEST\" class=\"docClass\">EXTRA_NETWORK_REQUEST</a> containing\n the original requests parameters.\n <p>\n If there is already a request for this Intent registered (with the equality of\n two Intents defined by Intent.filterEquals), then it will be removed and\n replaced by this one, effectively releasing the previous <a href=\"#!/api/android.net.NetworkRequest\" rel=\"android.net.NetworkRequest\" class=\"docClass\">android.net.NetworkRequest</a>.\n <p>\n The request may be released normally by calling\n unregisterNetworkCallback(android.app.PendingIntent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : Object {NetworkRequest}<div class='sub-desc'><p>NetworkRequest describing this request.</p>\n</div></li><li><span class='pre'>operation</span> : Object {PendingIntent}<div class='sub-desc'><p>Action to perform when the network is available (corresponds\n                  to the NetworkCallback.onAvailable call.  Typically\n                  comes from PendingIntent.getBroadcast. Cannot be null.</p>\n</div></li></ul></div></div></div><div id='method-registerNetworkFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-registerNetworkFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-registerNetworkFactory' class='name expandable'>registerNetworkFactory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} - returns the factory serial number ...</div><div class='long'><p>{@hide} - returns the factory serial number</p>\n</div></div></div><div id='method-releaseNetworkRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-releaseNetworkRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-releaseNetworkRequest' class='name expandable'>releaseNetworkRequest</a>( <span class='pre'>operation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a request made via android.app.PendingIntent)\n \n This method has the same behavior as\n unregisterNetworkCallb...</div><div class='long'><p>Removes a request made via android.app.PendingIntent)\n <p>\n This method has the same behavior as\n unregisterNetworkCallback(android.app.PendingIntent) with respect to\n releasing network resources and disconnecting.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : Object {PendingIntent}<div class='sub-desc'><p>A PendingIntent equal (as defined by Intent.filterEquals) to the\n                  PendingIntent passed to\n                  android.app.PendingIntent) with the\n                  corresponding NetworkRequest you'd like to remove. Cannot be null.</p>\n</div></li></ul></div></div></div><div id='method-removeDefaultNetworkActiveListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-removeDefaultNetworkActiveListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-removeDefaultNetworkActiveListener' class='name expandable'>removeDefaultNetworkActiveListener</a>( <span class='pre'>l</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove network active listener previously registered with\n addDefaultNetworkActiveListener. ...</div><div class='long'><p>Remove network active listener previously registered with\n <a href=\"#!/api/android.net.ConnectivityManager-method-addDefaultNetworkActiveListener\" rel=\"android.net.ConnectivityManager-method-addDefaultNetworkActiveListener\" class=\"docClass\">addDefaultNetworkActiveListener</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l</span> : Object {ConnectivityManager.OnNetworkActiveListener}<div class='sub-desc'><p>Previously registered listener.</p>\n</div></li></ul></div></div></div><div id='method-reportBadNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-reportBadNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-reportBadNetwork' class='name expandable'>reportBadNetwork</a>( <span class='pre'>network</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Report a problem network to the framework. ...</div><div class='long'><p>Report a problem network to the framework.  This provides a hint to the system\n that there might be connectivity problems on this network and may cause\n the framework to re-evaluate network connectivity and/or switch to another\n network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.net.ConnectivityManager-method-reportNetworkConnectivity\" rel=\"android.net.ConnectivityManager-method-reportNetworkConnectivity\" class=\"docClass\">reportNetworkConnectivity</a> which allows reporting both\n             working and non-working connectivity.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>The Network the application was attempting to use\n                or {@code null} to indicate the current default network.</p>\n</div></li></ul></div></div></div><div id='method-reportInetCondition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-reportInetCondition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-reportInetCondition' class='name expandable'>reportInetCondition</a>( <span class='pre'>networkType, percentage</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Report network connectivity status. ...</div><div class='long'><p>Report network connectivity status.  This is currently used only\n to alter status bar UI.\n <p>This method requires the caller to hold the permission\n android.Manifest.permission.STATUS_BAR.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Types are deprecated. Use <a href=\"#!/api/android.net.ConnectivityManager-method-reportNetworkConnectivity\" rel=\"android.net.ConnectivityManager-method-reportNetworkConnectivity\" class=\"docClass\">reportNetworkConnectivity</a> instead.\n {@hide}</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkType</span> : Number<div class='sub-desc'><p>The type of network you want to report on</p>\n</div></li><li><span class='pre'>percentage</span> : Number<div class='sub-desc'><p>The quality of the connection 0 is bad, 100 is good</p>\n</div></li></ul></div></div></div><div id='method-reportNetworkConnectivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-reportNetworkConnectivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-reportNetworkConnectivity' class='name expandable'>reportNetworkConnectivity</a>( <span class='pre'>network, hasConnectivity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report to the framework whether a network has working connectivity. ...</div><div class='long'><p>Report to the framework whether a network has working connectivity.\n This provides a hint to the system that a particular network is providing\n working connectivity or not.  In response the framework may re-evaluate\n the network's connectivity and might take further action thereafter.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>The Network the application was attempting to use\n                or {@code null} to indicate the current default network.</p>\n</div></li><li><span class='pre'>hasConnectivity</span> : Boolean<div class='sub-desc'><p>{@code true} if the application was able to successfully access the\n                        Internet using {@code network} or {@code false} if not.</p>\n</div></li></ul></div></div></div><div id='method-requestBandwidthUpdate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-requestBandwidthUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-requestBandwidthUpdate' class='name expandable'>requestBandwidthUpdate</a>( <span class='pre'>network</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Requests bandwidth update for a given android.net.Network and returns whether the update request\n is accepted by Conn...</div><div class='long'><p>Requests bandwidth update for a given <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> and returns whether the update request\n is accepted by ConnectivityService. Once accepted, ConnectivityService will poll underlying\n network connection for updated bandwidth information. The caller will be notified via\n <a href=\"#!/api/android.net.ConnectivityManager.NetworkCallback\" rel=\"android.net.ConnectivityManager.NetworkCallback\" class=\"docClass\">android.net.ConnectivityManager.NetworkCallback</a> if there is an update. Notice that this\n method assumes that the caller has previously called\n android.net.NetworkCallback) to listen for network\n changes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>Network specifying which network you're interested.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} on success, {@code false} if the Network is no longer valid.</p>\n</div></li></ul></div></div></div><div id='method-requestNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-requestNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-requestNetwork' class='name expandable'>requestNetwork</a>( <span class='pre'>request, operation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request a network to satisfy a set of android.net.NetworkCapabilities. ...</div><div class='long'><p>Request a network to satisfy a set of <a href=\"#!/api/android.net.NetworkCapabilities\" rel=\"android.net.NetworkCapabilities\" class=\"docClass\">android.net.NetworkCapabilities</a>.</p>\n\n<p> This function behaves identically to the version that takes a NetworkCallback, but instead\n of android.net.NetworkCallback a PendingIntent is used.  This means\n the request may outlive the calling application and get called back when a suitable\n network is found.\n <p>\n The operation is an Intent broadcast that goes to a broadcast receiver that\n you registered with Context.registerReceiver or through the\n &lt;receiver&gt; tag in an AndroidManifest.xml file\n <p>\n The operation Intent is delivered with two extras, a <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a> typed\n extra called <a href=\"#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK\" rel=\"android.net.ConnectivityManager-property-EXTRA_NETWORK\" class=\"docClass\">EXTRA_NETWORK</a> and a <a href=\"#!/api/android.net.NetworkRequest\" rel=\"android.net.NetworkRequest\" class=\"docClass\">android.net.NetworkRequest</a>\n typed extra called <a href=\"#!/api/android.net.ConnectivityManager-property-EXTRA_NETWORK_REQUEST\" rel=\"android.net.ConnectivityManager-property-EXTRA_NETWORK_REQUEST\" class=\"docClass\">EXTRA_NETWORK_REQUEST</a> containing\n the original requests parameters.  It is important to create a new,\n android.net.NetworkCallback based request before completing the processing of the\n Intent to reserve the network or it will be released shortly after the Intent\n is processed.\n <p>\n If there is already a request for this Intent registered (with the equality of\n two Intents defined by Intent.filterEquals), then it will be removed and\n replaced by this one, effectively releasing the previous <a href=\"#!/api/android.net.NetworkRequest\" rel=\"android.net.NetworkRequest\" class=\"docClass\">android.net.NetworkRequest</a>.\n <p>\n The request may be released normally by calling\n releaseNetworkRequest(android.app.PendingIntent).\n <p>It is presently unsupported to request a network with either\n <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_VALIDATED\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_VALIDATED\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_VALIDATED</a> or\n <a href=\"#!/api/android.net.NetworkCapabilities-property-NET_CAPABILITY_CAPTIVE_PORTAL\" rel=\"android.net.NetworkCapabilities-property-NET_CAPABILITY_CAPTIVE_PORTAL\" class=\"docClass\">android.net.NetworkCapabilities.NET_CAPABILITY_CAPTIVE_PORTAL</a>\n as these {@code NetworkCapabilities} represent states that a particular\n network may never attain, and whether a network will attain these states\n is unknown prior to bringing up the network so the framework does not\n know how to go about satisfying a request with these capabilities.</p>\n\n<p> <p>This method requires the caller to hold either the\n android.Manifest.permission.CHANGE_NETWORK_STATE permission\n or the ability to modify system settings as determined by\n android.provider.Settings.System.canWrite.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : Object {NetworkRequest}<div class='sub-desc'><p>NetworkRequest describing this request.</p>\n</div></li><li><span class='pre'>operation</span> : Object {PendingIntent}<div class='sub-desc'><p>Action to perform when the network is available (corresponds\n                  to the NetworkCallback.onAvailable call.  Typically\n                  comes from PendingIntent.getBroadcast. Cannot be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if {@code request} contains invalid network capabilities.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if missing the appropriate permissions.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>RuntimeException if request limit per UID is exceeded.</p>\n</div></li></ul></div></div></div><div id='method-requestRouteToHost' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-requestRouteToHost' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-requestRouteToHost' class='name expandable'>requestRouteToHost</a>( <span class='pre'>networkType, hostAddress</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Ensure that a network route exists to deliver traffic to the specified\n host via the specified network interface. ...</div><div class='long'><p>Ensure that a network route exists to deliver traffic to the specified\n host via the specified network interface. An attempt to add a route that\n already exists is ignored, but treated as successful.</p>\n\n<p> <p>This method requires the caller to hold either the\n android.Manifest.permission.CHANGE_NETWORK_STATE permission\n or the ability to modify system settings as determined by\n android.provider.Settings.System.canWrite.</p></p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Deprecated in favor of the\n             NetworkCallback),\n             <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a> and Network.getSocketFactory API.\n             In VERSION_CODES.M, and above, this method is unsupported and will\n             throw {@code UnsupportedOperationException} if called.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkType</span> : Number<div class='sub-desc'><p>the type of the network over which traffic to the specified\n host is to be routed</p>\n</div></li><li><span class='pre'>hostAddress</span> : Number<div class='sub-desc'><p>the IP address of the host to which the route is desired</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} on success, {@code false} on failure</p>\n</div></li></ul></div></div></div><div id='method-setNetworkPreference' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-setNetworkPreference' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-setNetworkPreference' class='name expandable'>setNetworkPreference</a>( <span class='pre'>preference</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Specifies the preferred network type. ...</div><div class='long'><p>Specifies the preferred network type.  When the device has more\n than one type available the preferred network type will be used.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Functionality has been removed as it no longer makes sense,\n             with many more than two networks - we'd need an array to express\n             preference.  Instead we use dynamic network properties of\n             the networks to describe their precedence.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>preference</span> : Number<div class='sub-desc'><p>the network type to prefer over all others.  It is\n         unspecified what happens to the old preferred network in the\n         overall ordering.</p>\n</div></li></ul></div></div></div><div id='method-setProcessDefaultNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-setProcessDefaultNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-setProcessDefaultNetwork' class='name expandable'>setProcessDefaultNetwork</a>( <span class='pre'>network</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Binds the current process to {@code network}. ...</div><div class='long'><p>Binds the current process to {@code network}.  All Sockets created in the future\n (and not explicitly bound via a bound SocketFactory from\n android.net.Network.getSocketFactory()) will be bound to\n {@code network}.  All host name resolutions will be limited to {@code network} as well.\n Note that if {@code network} ever disconnects, all Sockets created in this way will cease to\n work and all host name resolutions will fail.  This is by design so an application doesn't\n accidentally use Sockets it thinks are still bound to a particular <a href=\"#!/api/android.net.Network\" rel=\"android.net.Network\" class=\"docClass\">android.net.Network</a>.\n To clear binding pass {@code null} for {@code network}.  Using individually bound\n Sockets created by Network.getSocketFactory().createSocket() and\n performing network-specific host name resolutions via\n <a href=\"#!/api/android.net.Network-method-getAllByName\" rel=\"android.net.Network-method-getAllByName\" class=\"docClass\">android.net.Network.getAllByName</a> is preferred to calling\n {@code setProcessDefaultNetwork}.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This function can throw IllegalStateException.  Use\n             <a href=\"#!/api/android.net.ConnectivityManager-method-bindProcessToNetwork\" rel=\"android.net.ConnectivityManager-method-bindProcessToNetwork\" class=\"docClass\">bindProcessToNetwork</a> instead.  {@code bindProcessToNetwork}\n             is a direct replacement.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>network</span> : Object {Network}<div class='sub-desc'><p>The Network to bind the current process to, or {@code null} to clear\n                the current binding.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} on success, {@code false} if the Network is no longer valid.</p>\n</div></li></ul></div></div></div><div id='method-setProvisioningNotificationVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-setProvisioningNotificationVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-setProvisioningNotificationVisible' class='name expandable'>setProvisioningNotificationVisible</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Set sign in error notification to visible or in visible\n\n {@hide} ...</div><div class='long'><p>Set sign in error notification to visible or in visible</p>\n\n<p> {@hide}</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Doesn't properly deal with multiple connected networks of the same type.</p>\n\n        </div>\n</div></div></div><div id='method-setUsbTethering' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-setUsbTethering' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-setUsbTethering' class='name expandable'>setUsbTethering</a>( <span class='pre'>enable</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempt to both alter the mode of USB and Tethering of USB. ...</div><div class='long'><p>Attempt to both alter the mode of USB and Tethering of USB.  A\n utility method to deal with some of the complexity of USB - will\n attempt to switch to Rndis and subsequently tether the resulting\n interface on {@code true} or turn off tethering and switch off\n Rndis on {@code false}.</p>\n\n<p> <p>This method requires the caller to hold either the\n android.Manifest.permission.CHANGE_NETWORK_STATE permission\n or the ability to modify system settings as determined by\n android.provider.Settings.System.canWrite.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enable</span> : Boolean<div class='sub-desc'><p>a boolean - {@code true} to enable tethering</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error a {@code TETHER_ERROR} value indicating success or failure type</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-startUsingNetworkFeature' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-startUsingNetworkFeature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-startUsingNetworkFeature' class='name expandable'>startUsingNetworkFeature</a>( <span class='pre'>networkType, feature</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Tells the underlying networking system that the caller wants to\n begin using the named feature. ...</div><div class='long'><p>Tells the underlying networking system that the caller wants to\n begin using the named feature. The interpretation of {@code feature}\n is completely up to each networking implementation.</p>\n\n<p> <p>This method requires the caller to hold either the\n android.Manifest.permission.CHANGE_NETWORK_STATE permission\n or the ability to modify system settings as determined by\n android.provider.Settings.System.canWrite.</p></p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Deprecated in favor of the cleaner\n             NetworkCallback) API.\n             In VERSION_CODES.M, and above, this method is unsupported and will\n             throw {@code UnsupportedOperationException} if called.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkType</span> : Number<div class='sub-desc'><p>specifies which network the request pertains to</p>\n</div></li><li><span class='pre'>feature</span> : String<div class='sub-desc'><p>the name of the feature to be used</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an integer value representing the outcome of the request.\n The interpretation of this value is specific to each networking\n implementation+feature combination, except that the value {@code -1}\n always indicates failure.</p>\n</div></li></ul></div></div></div><div id='method-stopUsingNetworkFeature' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-stopUsingNetworkFeature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-stopUsingNetworkFeature' class='name expandable'>stopUsingNetworkFeature</a>( <span class='pre'>networkType, feature</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Tells the underlying networking system that the caller is finished\n using the named feature. ...</div><div class='long'><p>Tells the underlying networking system that the caller is finished\n using the named feature. The interpretation of {@code feature}\n is completely up to each networking implementation.</p>\n\n<p> <p>This method requires the caller to hold either the\n android.Manifest.permission.CHANGE_NETWORK_STATE permission\n or the ability to modify system settings as determined by\n android.provider.Settings.System.canWrite.</p></p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Deprecated in favor of the cleaner\n             unregisterNetworkCallback(NetworkCallback) API.\n             In VERSION_CODES.M, and above, this method is unsupported and will\n             throw {@code UnsupportedOperationException} if called.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkType</span> : Number<div class='sub-desc'><p>specifies which network the request pertains to</p>\n</div></li><li><span class='pre'>feature</span> : String<div class='sub-desc'><p>the name of the feature that is no longer needed</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an integer value representing the outcome of the request.\n The interpretation of this value is specific to each networking\n implementation+feature combination, except that the value {@code -1}\n always indicates failure.</p>\n</div></li></ul></div></div></div><div id='method-tether' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-tether' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-tether' class='name expandable'>tether</a>( <span class='pre'>iface</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempt to tether the named interface. ...</div><div class='long'><p>Attempt to tether the named interface.  This will setup a dhcp server\n on the interface, forward and NAT IP packets and forward DNS requests\n to the best active upstream network interface.  Note that if no upstream\n IP network interface is available, dhcp will still run and traffic will be\n allowed between the tethered devices and this device, though upstream net\n access will of course fail until an upstream network interface becomes\n active.</p>\n\n<p> <p>This method requires the caller to hold either the\n android.Manifest.permission.CHANGE_NETWORK_STATE permission\n or the ability to modify system settings as determined by\n android.provider.Settings.System.canWrite.</p></p>\n\n<p> <p>WARNING: New clients should not use this function. The only usages should be in PanService\n and WifiStateMachine which need direct access. All other clients should use\n startTethering and stopTethering which encapsulate proper provisioning\n logic.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>iface</span> : String<div class='sub-desc'><p>the interface name to tether.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error a {@code TETHER_ERROR} value indicating success or failure type</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-unregisterNetworkCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-unregisterNetworkCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-unregisterNetworkCallback' class='name expandable'>unregisterNetworkCallback</a>( <span class='pre'>operation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters a callback previously registered via\n android.app.PendingIntent). ...</div><div class='long'><p>Unregisters a callback previously registered via\n android.app.PendingIntent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>operation</span> : Object {PendingIntent}<div class='sub-desc'><p>A PendingIntent equal (as defined by Intent.filterEquals) to the\n                  PendingIntent passed to\n                  android.app.PendingIntent).\n                  Cannot be null.</p>\n</div></li></ul></div></div></div><div id='method-unregisterNetworkFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-unregisterNetworkFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-unregisterNetworkFactory' class='name expandable'>unregisterNetworkFactory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-untether' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-untether' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-untether' class='name expandable'>untether</a>( <span class='pre'>iface</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop tethering the named interface. ...</div><div class='long'><p>Stop tethering the named interface.</p>\n\n<p> <p>This method requires the caller to hold either the\n android.Manifest.permission.CHANGE_NETWORK_STATE permission\n or the ability to modify system settings as determined by\n android.provider.Settings.System.canWrite.</p></p>\n\n<p> <p>WARNING: New clients should not use this function. The only usages should be in PanService\n and WifiStateMachine which need direct access. All other clients should use\n startTethering and stopTethering which encapsulate proper provisioning\n logic.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>iface</span> : String<div class='sub-desc'><p>the interface name to untether.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error a {@code TETHER_ERROR} value indicating success or failure type</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-updateLockdownVpn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ConnectivityManager'>android.net.ConnectivityManager</span><br/><a href='source/ConnectivityManager.html#android-net-ConnectivityManager-method-updateLockdownVpn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ConnectivityManager-method-updateLockdownVpn' class='name expandable'>updateLockdownVpn</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>If the LockdownVpn mechanism is enabled, updates the vpn\n with a reload of its profile. ...</div><div class='long'><p>If the LockdownVpn mechanism is enabled, updates the vpn\n with a reload of its profile.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>a boolean with {@code} indicating success</p>\n\n<p> <p>This method can only be called by the system UID\n {@hide}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});