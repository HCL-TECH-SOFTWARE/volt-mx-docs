Ext.data.JsonP.android_net_IpSecTransform({"tagname":"class","name":"android.net.IpSecTransform","autodetected":{},"files":[{"filename":"IpSecTransform.js","href":"IpSecTransform.html#android-net-IpSecTransform"}],"extends":"java.lang.Object","members":[{"name":"close","tagname":"method","owner":"android.net.IpSecTransform","id":"method-close","meta":{}},{"name":"toString","tagname":"method","owner":"android.net.IpSecTransform","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.IpSecTransform","short_doc":"implements java.lang.AutoCloseable\n\nThis class represents a transform, which roughly corresponds to an IPsec Security...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.IpSecTransform</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/IpSecTransform.html#android-net-IpSecTransform' target='_blank'>IpSecTransform.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>This class represents a transform, which roughly corresponds to an IPsec Security Association.</p>\n\n<p> <p>Transforms are created using <a href=\"#!/api/android.net.IpSecTransform.Builder\" rel=\"android.net.IpSecTransform.Builder\" class=\"docClass\">android.net.IpSecTransform.Builder</a>. Each {@code IpSecTransform}\n object encapsulates the properties and state of an IPsec security association. That includes,\n but is not limited to, algorithm choice, key material, and allocated system resources.</p>\n\n<p> @see <a href=\"https://tools.ietf.org/html/rfc4301\">RFC 4301, Security Architecture for the\n     Internet Protocol</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.IpSecTransform'>android.net.IpSecTransform</span><br/><a href='source/IpSecTransform.html#android-net-IpSecTransform-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpSecTransform-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Deactivate this {@code IpSecTransform} and free allocated resources. ...</div><div class='long'><p>Deactivate this {@code IpSecTransform} and free allocated resources.</p>\n\n<p> <p>Deactivating a transform while it is still applied to a socket will result in errors on\n that socket. Make sure to remove transforms by calling <a href=\"#!/api/android.net.IpSecManager-method-removeTransportModeTransforms\" rel=\"android.net.IpSecManager-method-removeTransportModeTransforms\" class=\"docClass\">android.net.IpSecManager.removeTransportModeTransforms</a>. Note, removing an {@code IpSecTransform} from a\n socket will not deactivate it (because one transform may be applied to multiple sockets).</p>\n\n<p> <p>It is safe to call this method on a transform that has already been deactivated.</p>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.IpSecTransform'>android.net.IpSecTransform</span><br/><a href='source/IpSecTransform.html#android-net-IpSecTransform-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.IpSecTransform-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});