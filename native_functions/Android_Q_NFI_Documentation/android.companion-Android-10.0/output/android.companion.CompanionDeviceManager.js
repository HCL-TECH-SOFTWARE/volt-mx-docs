Ext.data.JsonP.android_companion_CompanionDeviceManager({"tagname":"class","name":"android.companion.CompanionDeviceManager","autodetected":{},"files":[{"filename":"CompanionDeviceManager.js","href":"CompanionDeviceManager.html#android-companion-CompanionDeviceManager"}],"extends":"java.lang.Object","members":[{"name":"EXTRA_DEVICE","tagname":"property","owner":"android.companion.CompanionDeviceManager","id":"property-EXTRA_DEVICE","meta":{}},{"name":"associate","tagname":"method","owner":"android.companion.CompanionDeviceManager","id":"method-associate","meta":{}},{"name":"disassociate","tagname":"method","owner":"android.companion.CompanionDeviceManager","id":"method-disassociate","meta":{}},{"name":"getAssociations","tagname":"method","owner":"android.companion.CompanionDeviceManager","id":"method-getAssociations","meta":{}},{"name":"hasNotificationAccess","tagname":"method","owner":"android.companion.CompanionDeviceManager","id":"method-hasNotificationAccess","meta":{}},{"name":"requestNotificationAccess","tagname":"method","owner":"android.companion.CompanionDeviceManager","id":"method-requestNotificationAccess","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.companion.CompanionDeviceManager","short_doc":"System level service for managing companion devices\n\n To obtain an instance call Context.getSystemService(Context.COM...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.companion.CompanionDeviceManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CompanionDeviceManager.html#android-companion-CompanionDeviceManager' target='_blank'>CompanionDeviceManager.js</a></div></pre><div class='doc-contents'><p>System level service for managing companion devices</p>\n\n<p> <p>To obtain an instance call Context.getSystemService(Context.COMPANION_DEVICE_SERVICE) Then, call android.companion.CompanionDeviceManager.Callback, Handler) to initiate the flow of associating current package with a\n device selected by user.</p></p>\n\n<p> @see AssociationRequest</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-EXTRA_DEVICE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.companion.CompanionDeviceManager'>android.companion.CompanionDeviceManager</span><br/><a href='source/CompanionDeviceManager.html#android-companion-CompanionDeviceManager-property-EXTRA_DEVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.companion.CompanionDeviceManager-property-EXTRA_DEVICE' class='name expandable'>EXTRA_DEVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A device, returned in the activity result of the IntentSender received in\nandroid.companion.CompanionDeviceManager.Ca...</div><div class='long'><p>A device, returned in the activity result of the IntentSender received in\n<a href=\"#!/api/android.companion.CompanionDeviceManager.Callback-method-onDeviceFound\" rel=\"android.companion.CompanionDeviceManager.Callback-method-onDeviceFound\" class=\"docClass\">android.companion.CompanionDeviceManager.Callback.onDeviceFound</a></p>\n<p>Defaults to: <code>&quot;android.companion.extra.DEVICE&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-associate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.companion.CompanionDeviceManager'>android.companion.CompanionDeviceManager</span><br/><a href='source/CompanionDeviceManager.html#android-companion-CompanionDeviceManager-method-associate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.companion.CompanionDeviceManager-method-associate' class='name expandable'>associate</a>( <span class='pre'>request, callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Associate this app with a companion device, selected by user\n\n Once at least one appropriate device is found, {@code ...</div><div class='long'><p>Associate this app with a companion device, selected by user</p>\n\n<p> <p>Once at least one appropriate device is found, {@code callback} will be called with a\n PendingIntent that can be used to show the list of available devices for the user\n to select.\n It should be started for result (i.e. using\n android.app.Activity.startIntentSenderForResult), as the resulting\n android.content.Intent will contain extra <a href=\"#!/api/android.companion.CompanionDeviceManager-property-EXTRA_DEVICE\" rel=\"android.companion.CompanionDeviceManager-property-EXTRA_DEVICE\" class=\"docClass\">EXTRA_DEVICE</a>, with the selected\n device. (e.g. android.bluetooth.BluetoothDevice)</p></p>\n\n<p> <p>If your app needs to be excluded from battery optimizations (run in the background)\n or to have unrestricted data access (use data in the background) you can declare that\n you use the android.Manifest.permission.REQUEST_COMPANION_RUN_IN_BACKGROUND and android.Manifest.permission.REQUEST_COMPANION_USE_DATA_IN_BACKGROUND respectively. Note that these\n special capabilities have a negative effect on the device's battery and user's data\n usage, therefore you should requested them when absolutely necessary.</p></p>\n\n<p> <p>You can call <a href=\"#!/api/android.companion.CompanionDeviceManager-method-getAssociations\" rel=\"android.companion.CompanionDeviceManager-method-getAssociations\" class=\"docClass\">getAssociations</a> to get the list of currently associated\n devices, and <a href=\"#!/api/android.companion.CompanionDeviceManager-method-disassociate\" rel=\"android.companion.CompanionDeviceManager-method-disassociate\" class=\"docClass\">disassociate</a> to remove an association. Consider doing so when the\n association is no longer relevant to avoid unnecessary battery and/or data drain resulting\n from special privileges that the association provides</p></p>\n\n<p> <p>Calling this API requires a uses-feature\n PackageManager.FEATURE_COMPANION_DEVICE_SETUP declaration in the manifest</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : Object {AssociationRequest}<div class='sub-desc'><p>specific details about this request</p>\n</div></li><li><span class='pre'>callback</span> : Object {CompanionDeviceManager.Callback}<div class='sub-desc'><p>will be called once there's at least one device found for user to choose from</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>A handler to control which thread the callback will be delivered on, or null,\n                to deliver it on main thread\n@see AssociationRequest</p>\n</div></li></ul></div></div></div><div id='method-disassociate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.companion.CompanionDeviceManager'>android.companion.CompanionDeviceManager</span><br/><a href='source/CompanionDeviceManager.html#android-companion-CompanionDeviceManager-method-disassociate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.companion.CompanionDeviceManager-method-disassociate' class='name expandable'>disassociate</a>( <span class='pre'>deviceMacAddress</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove the association between this app and the device with the given mac address. ...</div><div class='long'><p>Remove the association between this app and the device with the given mac address.</p>\n\n<p> <p>Any privileges provided via being associated with a given device will be revoked</p></p>\n\n<p> <p>Consider doing so when the\n association is no longer relevant to avoid unnecessary battery and/or data drain resulting\n from special privileges that the association provides</p></p>\n\n<p> <p>Calling this API requires a uses-feature\n PackageManager.FEATURE_COMPANION_DEVICE_SETUP declaration in the manifest</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deviceMacAddress</span> : String<div class='sub-desc'><p>the MAC address of device to disassociate from this app</p>\n</div></li></ul></div></div></div><div id='method-getAssociations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.companion.CompanionDeviceManager'>android.companion.CompanionDeviceManager</span><br/><a href='source/CompanionDeviceManager.html#android-companion-CompanionDeviceManager-method-getAssociations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.companion.CompanionDeviceManager-method-getAssociations' class='name expandable'>getAssociations</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Calling this API requires a uses-feature\n PackageManager.FEATURE_COMPANION_DEVICE_SETUP declaration in the manifest ...</div><div class='long'><p>Calling this API requires a uses-feature\n PackageManager.FEATURE_COMPANION_DEVICE_SETUP declaration in the manifest</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a list of MAC addresses of devices that have been previously associated with the\n current app. You can use these with <a href=\"#!/api/android.companion.CompanionDeviceManager-method-disassociate\" rel=\"android.companion.CompanionDeviceManager-method-disassociate\" class=\"docClass\">disassociate</a></p>\n</div></li></ul></div></div></div><div id='method-hasNotificationAccess' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.companion.CompanionDeviceManager'>android.companion.CompanionDeviceManager</span><br/><a href='source/CompanionDeviceManager.html#android-companion-CompanionDeviceManager-method-hasNotificationAccess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.companion.CompanionDeviceManager-method-hasNotificationAccess' class='name expandable'>hasNotificationAccess</a>( <span class='pre'>component</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check whether the given component can access the notifications via a\n NotificationListenerService\n\n Your app must hav...</div><div class='long'><p>Check whether the given component can access the notifications via a\n NotificationListenerService</p>\n\n<p> Your app must have an association with a device before calling this API</p>\n\n<p> <p>Calling this API requires a uses-feature\n PackageManager.FEATURE_COMPANION_DEVICE_SETUP declaration in the manifest</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>component</span> : Object {ComponentName}<div class='sub-desc'><p>the name of the component</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether the given component has the notification listener permission</p>\n</div></li></ul></div></div></div><div id='method-requestNotificationAccess' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.companion.CompanionDeviceManager'>android.companion.CompanionDeviceManager</span><br/><a href='source/CompanionDeviceManager.html#android-companion-CompanionDeviceManager-method-requestNotificationAccess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.companion.CompanionDeviceManager-method-requestNotificationAccess' class='name expandable'>requestNotificationAccess</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request notification access for the given component. ...</div><div class='long'><p>Request notification access for the given component.</p>\n\n<p> The given component must follow the protocol specified in NotificationListenerService</p>\n\n<p> Only components from the same package as the calling app\n are allowed.</p>\n\n<p> Your app must have an association with a device before calling this API</p>\n\n<p> <p>Calling this API requires a uses-feature\n PackageManager.FEATURE_COMPANION_DEVICE_SETUP declaration in the manifest</p></p>\n</div></div></div></div></div></div></div>","meta":{}});