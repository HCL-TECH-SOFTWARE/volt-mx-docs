Ext.data.JsonP.android_media_SubtitleController_Renderer({"tagname":"class","name":"android.media.SubtitleController.Renderer","autodetected":{},"files":[{"filename":"Renderer.js","href":"Renderer.html#android-media-SubtitleController-Renderer"}],"extends":"java.lang.Object","members":[{"name":"createTrack","tagname":"method","owner":"android.media.SubtitleController.Renderer","id":"method-createTrack","meta":{}},{"name":"supports","tagname":"method","owner":"android.media.SubtitleController.Renderer","id":"method-supports","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.SubtitleController.Renderer","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.media.Cea708CaptionRenderer","android.media.ClosedCaptionRenderer","android.media.SRTRenderer","android.media.TtmlRenderer","android.media.WebVttRenderer"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.SubtitleController.Renderer</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.media.Cea708CaptionRenderer' rel='android.media.Cea708CaptionRenderer' class='docClass'>android.media.Cea708CaptionRenderer</a></div><div class='dependency'><a href='#!/api/android.media.ClosedCaptionRenderer' rel='android.media.ClosedCaptionRenderer' class='docClass'>android.media.ClosedCaptionRenderer</a></div><div class='dependency'><a href='#!/api/android.media.SRTRenderer' rel='android.media.SRTRenderer' class='docClass'>android.media.SRTRenderer</a></div><div class='dependency'><a href='#!/api/android.media.TtmlRenderer' rel='android.media.TtmlRenderer' class='docClass'>android.media.TtmlRenderer</a></div><div class='dependency'><a href='#!/api/android.media.WebVttRenderer' rel='android.media.WebVttRenderer' class='docClass'>android.media.WebVttRenderer</a></div><h4>Files</h4><div class='dependency'><a href='source/Renderer.html#android-media-SubtitleController-Renderer' target='_blank'>Renderer.js</a></div></pre><div class='doc-contents'><p>Interface for supporting a single or multiple subtitle types in <a href=\"#!/api/android.media.MediaPlayer\" rel=\"android.media.MediaPlayer\" class=\"docClass\">android.media.MediaPlayer</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createTrack' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.SubtitleController.Renderer'>android.media.SubtitleController.Renderer</span><br/><a href='source/Renderer.html#android-media-SubtitleController-Renderer-method-createTrack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.SubtitleController.Renderer-method-createTrack' class='name expandable'>createTrack</a>( <span class='pre'>format</span> ) : Object {android.media.SubtitleTrack}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by android.media.MediaPlayer's android.media.SubtitleController for each\n subtitle track that was detected and...</div><div class='long'><p>Called by <a href=\"#!/api/android.media.MediaPlayer\" rel=\"android.media.MediaPlayer\" class=\"docClass\">android.media.MediaPlayer</a>'s <a href=\"#!/api/android.media.SubtitleController\" rel=\"android.media.SubtitleController\" class=\"docClass\">android.media.SubtitleController</a> for each\n subtitle track that was detected and is supported by this object to\n create a <a href=\"#!/api/android.media.SubtitleTrack\" rel=\"android.media.SubtitleTrack\" class=\"docClass\">android.media.SubtitleTrack</a> object.  This object will be created\n for each track that was found.  If the track is selected for display,\n this object will be used to parse and display the track data.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Object {MediaFormat}<div class='sub-desc'><p>the format of the track that will include at least\n               the MIME type MediaFormat@KEY_MIME.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.SubtitleTrack}</span><div class='sub-desc'><p>a SubtitleTrack object that will be used to parse\n and render the subtitle track.</p>\n</div></li></ul></div></div></div><div id='method-supports' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.SubtitleController.Renderer'>android.media.SubtitleController.Renderer</span><br/><a href='source/Renderer.html#android-media-SubtitleController-Renderer-method-supports' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.SubtitleController.Renderer-method-supports' class='name expandable'>supports</a>( <span class='pre'>format</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by android.media.MediaPlayer's android.media.SubtitleController when a new\n subtitle track is detected, to see...</div><div class='long'><p>Called by <a href=\"#!/api/android.media.MediaPlayer\" rel=\"android.media.MediaPlayer\" class=\"docClass\">android.media.MediaPlayer</a>'s <a href=\"#!/api/android.media.SubtitleController\" rel=\"android.media.SubtitleController\" class=\"docClass\">android.media.SubtitleController</a> when a new\n subtitle track is detected, to see if it should use this object to\n parse and display this subtitle track.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Object {MediaFormat}<div class='sub-desc'><p>the format of the track that will include at least\n               the MIME type MediaFormat@KEY_MIME.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if and only if the track format is supported by this\n renderer</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});