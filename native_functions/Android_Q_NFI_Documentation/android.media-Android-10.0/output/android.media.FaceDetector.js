Ext.data.JsonP.android_media_FaceDetector({"tagname":"class","name":"android.media.FaceDetector","autodetected":{},"files":[{"filename":"FaceDetector.js","href":"FaceDetector.html#android-media-FaceDetector"}],"extends":"java.lang.Object","members":[{"name":"findFaces","tagname":"method","owner":"android.media.FaceDetector","id":"method-findFaces","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.FaceDetector","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.FaceDetector</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FaceDetector.html#android-media-FaceDetector' target='_blank'>FaceDetector.js</a></div></pre><div class='doc-contents'><p>Identifies the faces of people in a\n android.graphics.Bitmap graphic object.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-findFaces' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.FaceDetector'>android.media.FaceDetector</span><br/><a href='source/FaceDetector.html#android-media-FaceDetector-method-findFaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.FaceDetector-method-findFaces' class='name expandable'>findFaces</a>( <span class='pre'>bitmap, faces</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds all the faces found in a given android.graphics.Bitmap. ...</div><div class='long'><p>Finds all the faces found in a given android.graphics.Bitmap.\n The supplied array is populated with android.media.FaceDetector.FaceDetector.android.media.FaceDetector.Faces for each\n face found. The bitmap must be in 565 format (for now).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bitmap</span> : Object {Bitmap}<div class='sub-desc'><p>the android.graphics.Bitmap graphic to be analyzed</p>\n</div></li><li><span class='pre'>faces</span> : Object {android.media.FaceDetector.Face[]}<div class='sub-desc'><p>an array in which to place all found\n               FaceDetector.Faces. The array must be sized equal\n               to the <var>maxFaces</var> value set at initialization</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of faces found</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the Bitmap dimensions don't match\n               the dimensions defined at initialization or the given array\n               is not sized equal to the <var>maxFaces</var> value defined\n               at initialization</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});