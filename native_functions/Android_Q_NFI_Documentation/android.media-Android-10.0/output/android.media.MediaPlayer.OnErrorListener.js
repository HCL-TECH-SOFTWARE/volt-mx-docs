Ext.data.JsonP.android_media_MediaPlayer_OnErrorListener({"tagname":"class","name":"android.media.MediaPlayer.OnErrorListener","autodetected":{},"files":[{"filename":"OnErrorListener.js","href":"OnErrorListener.html#android-media-MediaPlayer-OnErrorListener"}],"members":[{"name":"onError","tagname":"method","owner":"android.media.MediaPlayer.OnErrorListener","id":"method-onError","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaPlayer.OnErrorListener","short_doc":"Interface definition of a callback to be invoked when there\n has been an error during an asynchronous operation (othe...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnErrorListener.html#android-media-MediaPlayer-OnErrorListener' target='_blank'>OnErrorListener.js</a></div></pre><div class='doc-contents'><p>Interface definition of a callback to be invoked when there\n has been an error during an asynchronous operation (other errors\n will throw exceptions at method call time).</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onError' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer.OnErrorListener'>android.media.MediaPlayer.OnErrorListener</span><br/><a href='source/OnErrorListener.html#android-media-MediaPlayer-OnErrorListener-method-onError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer.OnErrorListener-method-onError' class='name expandable'>onError</a>( <span class='pre'>mp, what, extra</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to indicate an error. ...</div><div class='long'><p>Called to indicate an error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mp</span> : Object {MediaPlayer}<div class='sub-desc'><p>the MediaPlayer the error pertains to</p>\n</div></li><li><span class='pre'>what</span> : Number<div class='sub-desc'><p>the type of error that has occurred:\n <ul>\n <li>MEDIA_ERROR_UNKNOWN\n <li>MEDIA_ERROR_SERVER_DIED\n </li></li></ul></p>\n</div></li><li><span class='pre'>extra</span> : Number<div class='sub-desc'><p>an extra code, specific to the error. Typically\n implementation dependent.\n <ul>\n <li>MEDIA_ERROR_IO\n <li>MEDIA_ERROR_MALFORMED\n <li>MEDIA_ERROR_UNSUPPORTED\n <li>MEDIA_ERROR_TIMED_OUT\n <li><code>MEDIA_ERROR_SYSTEM (-2147483648)</code> - low-level system error.\n </li></li></li></li></li></ul></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the method handled the error, false if it didn't.\n Returning false, or not having an OnErrorListener at all, will\n cause the OnCompletionListener to be called.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});