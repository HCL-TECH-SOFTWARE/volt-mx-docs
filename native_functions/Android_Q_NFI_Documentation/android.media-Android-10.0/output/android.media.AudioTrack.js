Ext.data.JsonP.android_media_AudioTrack({"tagname":"class","name":"android.media.AudioTrack","autodetected":{},"files":[{"filename":"AudioTrack.js","href":"AudioTrack.html#android-media-AudioTrack"}],"extends":"android.media.PlayerBase","members":[{"name":"ERROR","tagname":"property","owner":"android.media.AudioTrack","id":"property-ERROR","meta":{}},{"name":"ERROR_BAD_VALUE","tagname":"property","owner":"android.media.AudioTrack","id":"property-ERROR_BAD_VALUE","meta":{}},{"name":"ERROR_DEAD_OBJECT","tagname":"property","owner":"android.media.AudioTrack","id":"property-ERROR_DEAD_OBJECT","meta":{}},{"name":"ERROR_INVALID_OPERATION","tagname":"property","owner":"android.media.AudioTrack","id":"property-ERROR_INVALID_OPERATION","meta":{}},{"name":"MODE_STATIC","tagname":"property","owner":"android.media.AudioTrack","id":"property-MODE_STATIC","meta":{}},{"name":"MODE_STREAM","tagname":"property","owner":"android.media.AudioTrack","id":"property-MODE_STREAM","meta":{}},{"name":"PERFORMANCE_MODE_LOW_LATENCY","tagname":"property","owner":"android.media.AudioTrack","id":"property-PERFORMANCE_MODE_LOW_LATENCY","meta":{}},{"name":"PERFORMANCE_MODE_NONE","tagname":"property","owner":"android.media.AudioTrack","id":"property-PERFORMANCE_MODE_NONE","meta":{}},{"name":"PERFORMANCE_MODE_POWER_SAVING","tagname":"property","owner":"android.media.AudioTrack","id":"property-PERFORMANCE_MODE_POWER_SAVING","meta":{}},{"name":"PLAYSTATE_PAUSED","tagname":"property","owner":"android.media.AudioTrack","id":"property-PLAYSTATE_PAUSED","meta":{}},{"name":"PLAYSTATE_PLAYING","tagname":"property","owner":"android.media.AudioTrack","id":"property-PLAYSTATE_PLAYING","meta":{}},{"name":"PLAYSTATE_STOPPED","tagname":"property","owner":"android.media.AudioTrack","id":"property-PLAYSTATE_STOPPED","meta":{}},{"name":"STATE_INITIALIZED","tagname":"property","owner":"android.media.AudioTrack","id":"property-STATE_INITIALIZED","meta":{}},{"name":"STATE_NO_STATIC_DATA","tagname":"property","owner":"android.media.AudioTrack","id":"property-STATE_NO_STATIC_DATA","meta":{}},{"name":"STATE_UNINITIALIZED","tagname":"property","owner":"android.media.AudioTrack","id":"property-STATE_UNINITIALIZED","meta":{}},{"name":"SUCCESS","tagname":"property","owner":"android.media.AudioTrack","id":"property-SUCCESS","meta":{}},{"name":"WRITE_BLOCKING","tagname":"property","owner":"android.media.AudioTrack","id":"property-WRITE_BLOCKING","meta":{}},{"name":"WRITE_NON_BLOCKING","tagname":"property","owner":"android.media.AudioTrack","id":"property-WRITE_NON_BLOCKING","meta":{}},{"name":"addOnRoutingChangedListener","tagname":"method","owner":"android.media.AudioTrack","id":"method-addOnRoutingChangedListener","meta":{"deprecated":{"text":"<p>users should switch to the general purpose\n             AudioRouting.OnRoutingChangedListener class instead.</p>\n"}}},{"name":"attachAuxEffect","tagname":"method","owner":"android.media.AudioTrack","id":"method-attachAuxEffect","meta":{}},{"name":"createVolumeShaper","tagname":"method","owner":"android.media.AudioTrack","id":"method-createVolumeShaper","meta":{}},{"name":"deprecateStreamTypeForPlayback","tagname":"method","owner":"android.media.PlayerBase","id":"method-deprecateStreamTypeForPlayback","meta":{}},{"name":"flush","tagname":"method","owner":"android.media.AudioTrack","id":"method-flush","meta":{}},{"name":"getAudioAttributes","tagname":"method","owner":"android.media.AudioTrack","id":"method-getAudioAttributes","meta":{}},{"name":"getAudioFormat","tagname":"method","owner":"android.media.AudioTrack","id":"method-getAudioFormat","meta":{}},{"name":"getAudioSessionId","tagname":"method","owner":"android.media.AudioTrack","id":"method-getAudioSessionId","meta":{}},{"name":"getBufferCapacityInFrames","tagname":"method","owner":"android.media.AudioTrack","id":"method-getBufferCapacityInFrames","meta":{}},{"name":"getBufferSizeInFrames","tagname":"method","owner":"android.media.AudioTrack","id":"method-getBufferSizeInFrames","meta":{}},{"name":"getChannelConfiguration","tagname":"method","owner":"android.media.AudioTrack","id":"method-getChannelConfiguration","meta":{}},{"name":"getChannelCount","tagname":"method","owner":"android.media.AudioTrack","id":"method-getChannelCount","meta":{}},{"name":"getFormat","tagname":"method","owner":"android.media.AudioTrack","id":"method-getFormat","meta":{}},{"name":"getMaxVolume","tagname":"method","owner":"android.media.AudioTrack","id":"method-getMaxVolume","meta":{}},{"name":"getMetrics","tagname":"method","owner":"android.media.AudioTrack","id":"method-getMetrics","meta":{}},{"name":"getMinBufferSize","tagname":"method","owner":"android.media.AudioTrack","id":"method-getMinBufferSize","meta":{}},{"name":"getMinVolume","tagname":"method","owner":"android.media.AudioTrack","id":"method-getMinVolume","meta":{}},{"name":"getNativeOutputSampleRate","tagname":"method","owner":"android.media.AudioTrack","id":"method-getNativeOutputSampleRate","meta":{}},{"name":"getNotificationMarkerPosition","tagname":"method","owner":"android.media.AudioTrack","id":"method-getNotificationMarkerPosition","meta":{}},{"name":"getOffloadDelay","tagname":"method","owner":"android.media.AudioTrack","id":"method-getOffloadDelay","meta":{}},{"name":"getOffloadPadding","tagname":"method","owner":"android.media.AudioTrack","id":"method-getOffloadPadding","meta":{}},{"name":"getPerformanceMode","tagname":"method","owner":"android.media.AudioTrack","id":"method-getPerformanceMode","meta":{}},{"name":"getPlayState","tagname":"method","owner":"android.media.AudioTrack","id":"method-getPlayState","meta":{}},{"name":"getPlaybackHeadPosition","tagname":"method","owner":"android.media.AudioTrack","id":"method-getPlaybackHeadPosition","meta":{}},{"name":"getPlaybackParams","tagname":"method","owner":"android.media.AudioTrack","id":"method-getPlaybackParams","meta":{}},{"name":"getPlaybackRate","tagname":"method","owner":"android.media.AudioTrack","id":"method-getPlaybackRate","meta":{}},{"name":"getPositionNotificationPeriod","tagname":"method","owner":"android.media.AudioTrack","id":"method-getPositionNotificationPeriod","meta":{}},{"name":"getPreferredDevice","tagname":"method","owner":"android.media.AudioTrack","id":"method-getPreferredDevice","meta":{}},{"name":"getRoutedDevice","tagname":"method","owner":"android.media.AudioTrack","id":"method-getRoutedDevice","meta":{}},{"name":"getSampleRate","tagname":"method","owner":"android.media.AudioTrack","id":"method-getSampleRate","meta":{}},{"name":"getState","tagname":"method","owner":"android.media.AudioTrack","id":"method-getState","meta":{}},{"name":"getStreamType","tagname":"method","owner":"android.media.AudioTrack","id":"method-getStreamType","meta":{}},{"name":"getTimestamp","tagname":"method","owner":"android.media.AudioTrack","id":"method-getTimestamp","meta":{}},{"name":"getUnderrunCount","tagname":"method","owner":"android.media.AudioTrack","id":"method-getUnderrunCount","meta":{}},{"name":"isDirectPlaybackSupported","tagname":"method","owner":"android.media.AudioTrack","id":"method-isDirectPlaybackSupported","meta":{}},{"name":"isOffloadedPlayback","tagname":"method","owner":"android.media.AudioTrack","id":"method-isOffloadedPlayback","meta":{}},{"name":"pause","tagname":"method","owner":"android.media.AudioTrack","id":"method-pause","meta":{}},{"name":"play","tagname":"method","owner":"android.media.AudioTrack","id":"method-play","meta":{}},{"name":"registerStreamEventCallback","tagname":"method","owner":"android.media.AudioTrack","id":"method-registerStreamEventCallback","meta":{}},{"name":"release","tagname":"method","owner":"android.media.AudioTrack","id":"method-release","meta":{}},{"name":"reloadStaticData","tagname":"method","owner":"android.media.AudioTrack","id":"method-reloadStaticData","meta":{}},{"name":"removeOnRoutingChangedListener","tagname":"method","owner":"android.media.AudioTrack","id":"method-removeOnRoutingChangedListener","meta":{"deprecated":{"text":"<p>users should switch to the general purpose\n             AudioRouting.OnRoutingChangedListener class instead.</p>\n"}}},{"name":"setAuxEffectSendLevel","tagname":"method","owner":"android.media.AudioTrack","id":"method-setAuxEffectSendLevel","meta":{}},{"name":"setBufferSizeInFrames","tagname":"method","owner":"android.media.AudioTrack","id":"method-setBufferSizeInFrames","meta":{}},{"name":"setLoopPoints","tagname":"method","owner":"android.media.AudioTrack","id":"method-setLoopPoints","meta":{}},{"name":"setNotificationMarkerPosition","tagname":"method","owner":"android.media.AudioTrack","id":"method-setNotificationMarkerPosition","meta":{}},{"name":"setOffloadDelayPadding","tagname":"method","owner":"android.media.AudioTrack","id":"method-setOffloadDelayPadding","meta":{}},{"name":"setOffloadEndOfStream","tagname":"method","owner":"android.media.AudioTrack","id":"method-setOffloadEndOfStream","meta":{}},{"name":"setPlaybackHeadPosition","tagname":"method","owner":"android.media.AudioTrack","id":"method-setPlaybackHeadPosition","meta":{}},{"name":"setPlaybackParams","tagname":"method","owner":"android.media.AudioTrack","id":"method-setPlaybackParams","meta":{}},{"name":"setPlaybackPositionUpdateListener","tagname":"method","owner":"android.media.AudioTrack","id":"method-setPlaybackPositionUpdateListener","meta":{}},{"name":"setPlaybackRate","tagname":"method","owner":"android.media.AudioTrack","id":"method-setPlaybackRate","meta":{}},{"name":"setPositionNotificationPeriod","tagname":"method","owner":"android.media.AudioTrack","id":"method-setPositionNotificationPeriod","meta":{}},{"name":"setPreferredDevice","tagname":"method","owner":"android.media.AudioTrack","id":"method-setPreferredDevice","meta":{}},{"name":"setPresentation","tagname":"method","owner":"android.media.AudioTrack","id":"method-setPresentation","meta":{}},{"name":"setStartDelayMs","tagname":"method","owner":"android.media.PlayerBase","id":"method-setStartDelayMs","meta":{}},{"name":"setStereoVolume","tagname":"method","owner":"android.media.AudioTrack","id":"method-setStereoVolume","meta":{"deprecated":{"text":"<p>Applications should use <a href=\"#!/api/android.media.AudioTrack-method-setVolume\" rel=\"android.media.AudioTrack-method-setVolume\" class=\"docClass\">setVolume</a> instead, as it\n more gracefully scales down to mono, and up to multi-channel content beyond stereo.</p>\n"}}},{"name":"setVolume","tagname":"method","owner":"android.media.AudioTrack","id":"method-setVolume","meta":{}},{"name":"stop","tagname":"method","owner":"android.media.AudioTrack","id":"method-stop","meta":{}},{"name":"unregisterStreamEventCallback","tagname":"method","owner":"android.media.AudioTrack","id":"method-unregisterStreamEventCallback","meta":{}},{"name":"write","tagname":"method","owner":"android.media.AudioTrack","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.AudioTrack","short_doc":"implements android.media.AudioRouting\n\n implements android.media.VolumeAutomation\n\nThe AudioTrack class manages and p...","classIcon":"icon-class","superclasses":["java.lang.Object","android.media.PlayerBase"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.media.PlayerBase' rel='android.media.PlayerBase' class='docClass'>android.media.PlayerBase</a><div class='subclass '><strong>android.media.AudioTrack</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/AudioTrack.html#android-media-AudioTrack' target='_blank'>AudioTrack.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.media.AudioRouting\" rel=\"android.media.AudioRouting\" class=\"docClass\">android.media.AudioRouting</a></p>\n\n<p> implements <a href=\"#!/api/android.media.VolumeAutomation\" rel=\"android.media.VolumeAutomation\" class=\"docClass\">android.media.VolumeAutomation</a></p>\n\n<p>The AudioTrack class manages and plays a single audio resource for Java applications.\n It allows streaming of PCM audio buffers to the audio sink for playback. This is\n achieved by \"pushing\" the data to the AudioTrack object using one of the\n  int, int), int, int),\n  and int, int, int) methods.</p>\n\n<p> <p>An AudioTrack instance can operate under two modes: static or streaming.<br>\n In Streaming mode, the application writes a continuous stream of data to the AudioTrack, using\n one of the {@code write()} methods. These are blocking and return when the data has been\n transferred from the Java layer to the native layer and queued for playback. The streaming\n mode is most useful when playing blocks of audio data that for instance are:</p>\n\n<p> <ul>\n   <li>too big to fit in memory because of the duration of the sound to play,</li>\n   <li>too big to fit in memory because of the characteristics of the audio data\n         (high sampling rate, bits per sample ...)</li>\n   <li>received or generated while previously queued audio is playing.</li>\n </ul></p>\n\n<p> The static mode should be chosen when dealing with short sounds that fit in memory and\n that need to be played with the smallest latency possible. The static mode will\n therefore be preferred for UI and game sounds that are played often, and with the\n smallest overhead possible.</p>\n\n<p> <p>Upon creation, an AudioTrack object initializes its associated audio buffer.\n The size of this buffer, specified during the construction, determines how long an AudioTrack\n can play before running out of data.<br>\n For an AudioTrack using the static mode, this size is the maximum size of the sound that can\n be played from it.<br>\n For the streaming mode, data will be written to the audio sink in chunks of\n sizes less than or equal to the total buffer size.</p>\n\n<p> AudioTrack is not final and thus permits subclasses, but such use is not recommended.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ERROR' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-ERROR' class='name expandable'>ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Denotes a generic operation failure. ...</div><div class='long'><p>Denotes a generic operation failure.</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-ERROR_BAD_VALUE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-ERROR_BAD_VALUE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE' class='name expandable'>ERROR_BAD_VALUE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Denotes a failure due to the use of an invalid value. ...</div><div class='long'><p>Denotes a failure due to the use of an invalid value.</p>\n<p>Defaults to: <code>&quot;-2&quot;</code></p></div></div></div><div id='property-ERROR_DEAD_OBJECT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-ERROR_DEAD_OBJECT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-ERROR_DEAD_OBJECT' class='name expandable'>ERROR_DEAD_OBJECT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An error code indicating that the object reporting it is no longer valid and needs to\nbe recreated. ...</div><div class='long'><p>An error code indicating that the object reporting it is no longer valid and needs to\nbe recreated.</p>\n<p>Defaults to: <code>&quot;-6&quot;</code></p></div></div></div><div id='property-ERROR_INVALID_OPERATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-ERROR_INVALID_OPERATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION' class='name expandable'>ERROR_INVALID_OPERATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Denotes a failure due to the improper use of a method. ...</div><div class='long'><p>Denotes a failure due to the improper use of a method.</p>\n<p>Defaults to: <code>&quot;-3&quot;</code></p></div></div></div><div id='property-MODE_STATIC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-MODE_STATIC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-MODE_STATIC' class='name expandable'>MODE_STATIC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Creation mode where audio data is transferred from Java to the native layer\nonly once before the audio starts playing. ...</div><div class='long'><p>Creation mode where audio data is transferred from Java to the native layer\nonly once before the audio starts playing.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-MODE_STREAM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-MODE_STREAM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-MODE_STREAM' class='name expandable'>MODE_STREAM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Creation mode where audio data is streamed from Java to the native layer\nas the audio is playing. ...</div><div class='long'><p>Creation mode where audio data is streamed from Java to the native layer\nas the audio is playing.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-PERFORMANCE_MODE_LOW_LATENCY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-PERFORMANCE_MODE_LOW_LATENCY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-PERFORMANCE_MODE_LOW_LATENCY' class='name expandable'>PERFORMANCE_MODE_LOW_LATENCY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Low latency performance mode for an android.media.AudioTrack. ...</div><div class='long'><p>Low latency performance mode for an <a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a>.\nIf the device supports it, this mode\nenables a lower latency path through to the audio output sink.\nEffects may no longer work with such an {@code AudioTrack} and\nthe sample rate must match that of the output sink.</p>\n\n<p><p>\nApplications should be aware that low latency requires careful\nbuffer management, with smaller chunks of audio data written by each\n{@code write()} call.\n<p>\nIf this flag is used without specifying a {@code bufferSizeInBytes} then the\n{@code AudioTrack}'s actual buffer size may be too small.\nIt is recommended that a fairly\nlarge buffer should be specified when the {@code AudioTrack} is created.\nThen the actual size can be reduced by calling\n<a href=\"#!/api/android.media.AudioTrack-method-setBufferSizeInFrames\" rel=\"android.media.AudioTrack-method-setBufferSizeInFrames\" class=\"docClass\">setBufferSizeInFrames</a>(int). The buffer size can be optimized\nby lowering it after each {@code write()} call until the audio glitches,\nwhich is detected by calling\n<a href=\"#!/api/android.media.AudioTrack-method-getUnderrunCount\" rel=\"android.media.AudioTrack-method-getUnderrunCount\" class=\"docClass\">getUnderrunCount</a>(). Then the buffer size can be increased\nuntil there are no glitches.\nThis tuning step should be done while playing silence.\nThis technique provides a compromise between latency and glitch rate.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-PERFORMANCE_MODE_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-PERFORMANCE_MODE_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-PERFORMANCE_MODE_NONE' class='name expandable'>PERFORMANCE_MODE_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Default performance mode for an android.media.AudioTrack. ...</div><div class='long'><p>Default performance mode for an <a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a>.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-PERFORMANCE_MODE_POWER_SAVING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-PERFORMANCE_MODE_POWER_SAVING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-PERFORMANCE_MODE_POWER_SAVING' class='name expandable'>PERFORMANCE_MODE_POWER_SAVING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Power saving performance mode for an android.media.AudioTrack. ...</div><div class='long'><p>Power saving performance mode for an <a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a>.\nIf the device supports it, this\nmode will enable a lower power path to the audio output sink.\nIn addition, this lower power path typically will have\ndeeper internal buffers and better underrun resistance,\nwith a tradeoff of higher latency.</p>\n\n<p><p>\nIn this mode, applications should attempt to use a larger buffer size\nand deliver larger chunks of audio data per {@code write()} call.\nUse <a href=\"#!/api/android.media.AudioTrack-method-getBufferSizeInFrames\" rel=\"android.media.AudioTrack-method-getBufferSizeInFrames\" class=\"docClass\">getBufferSizeInFrames</a>() to determine\nthe actual buffer size of the {@code AudioTrack} as it may have increased\nto accommodate a deeper buffer.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-PLAYSTATE_PAUSED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-PLAYSTATE_PAUSED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-PLAYSTATE_PAUSED' class='name expandable'>PLAYSTATE_PAUSED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>indicates AudioTrack state is paused ...</div><div class='long'><p>indicates AudioTrack state is paused</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-PLAYSTATE_PLAYING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-PLAYSTATE_PLAYING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-PLAYSTATE_PLAYING' class='name expandable'>PLAYSTATE_PLAYING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>indicates AudioTrack state is playing ...</div><div class='long'><p>indicates AudioTrack state is playing</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-PLAYSTATE_STOPPED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-PLAYSTATE_STOPPED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-PLAYSTATE_STOPPED' class='name expandable'>PLAYSTATE_STOPPED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>indicates AudioTrack state is stopped ...</div><div class='long'><p>indicates AudioTrack state is stopped</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-STATE_INITIALIZED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-STATE_INITIALIZED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-STATE_INITIALIZED' class='name expandable'>STATE_INITIALIZED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>State of an AudioTrack that is ready to be used. ...</div><div class='long'><p>State of an AudioTrack that is ready to be used.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-STATE_NO_STATIC_DATA' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-STATE_NO_STATIC_DATA' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-STATE_NO_STATIC_DATA' class='name expandable'>STATE_NO_STATIC_DATA</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>State of a successfully initialized AudioTrack that uses static data,\nbut that hasn't received that data yet. ...</div><div class='long'><p>State of a successfully initialized AudioTrack that uses static data,\nbut that hasn't received that data yet.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-STATE_UNINITIALIZED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-STATE_UNINITIALIZED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-STATE_UNINITIALIZED' class='name expandable'>STATE_UNINITIALIZED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>State of an AudioTrack that was not successfully initialized upon creation. ...</div><div class='long'><p>State of an AudioTrack that was not successfully initialized upon creation.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-SUCCESS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-SUCCESS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-SUCCESS' class='name expandable'>SUCCESS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Denotes a successful operation. ...</div><div class='long'><p>Denotes a successful operation.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-WRITE_BLOCKING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-WRITE_BLOCKING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-WRITE_BLOCKING' class='name expandable'>WRITE_BLOCKING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The write mode indicating the write operation will block until all data has been written,\nto be used as the actual va...</div><div class='long'><p>The write mode indicating the write operation will block until all data has been written,\nto be used as the actual value of the writeMode parameter in\nint, int, int), int, int, int),\nint, int, int), int, int), and\nint, int, long).</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-WRITE_NON_BLOCKING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-property-WRITE_NON_BLOCKING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-property-WRITE_NON_BLOCKING' class='name expandable'>WRITE_NON_BLOCKING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The write mode indicating the write operation will return immediately after\nqueuing as much audio data for playback a...</div><div class='long'><p>The write mode indicating the write operation will return immediately after\nqueuing as much audio data for playback as possible without blocking,\nto be used as the actual value of the writeMode parameter in\nint, int), int, int, int),\nint, int, int), int, int), and\nint, int, long).</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addOnRoutingChangedListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-addOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-addOnRoutingChangedListener' class='name expandable'>addOnRoutingChangedListener</a>( <span class='pre'>listener, handler</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Adds an android.media.AudioRecord.OnRoutingChangedListener to receive notifications of routing changes\n on this Audio...</div><div class='long'><p>Adds an <a href=\"#!/api/android.media.AudioRecord.OnRoutingChangedListener\" rel=\"android.media.AudioRecord.OnRoutingChangedListener\" class=\"docClass\">android.media.AudioRecord.OnRoutingChangedListener</a> to receive notifications of routing changes\n on this AudioTrack.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>users should switch to the general purpose\n             AudioRouting.OnRoutingChangedListener class instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioTrack.OnRoutingChangedListener}<div class='sub-desc'><p>The OnRoutingChangedListener interface to receive notifications\n of rerouting events.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Specifies the Handler object for the thread on which to execute\n the callback. If <code>null</code>, the Handler associated with the main\n Looper will be used.</p>\n</div></li></ul></div></div></div><div id='method-attachAuxEffect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-attachAuxEffect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-attachAuxEffect' class='name expandable'>attachAuxEffect</a>( <span class='pre'>effectId</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Attaches an auxiliary effect to the audio track. ...</div><div class='long'><p>Attaches an auxiliary effect to the audio track. A typical auxiliary\n effect is a reverberation effect which can be applied on any sound source\n that directs a certain amount of its energy to this effect. This amount\n is defined by setAuxEffectSendLevel().\n {@see <a href=\"#!/api/android.media.AudioTrack-method-setAuxEffectSendLevel\" rel=\"android.media.AudioTrack-method-setAuxEffectSendLevel\" class=\"docClass\">setAuxEffectSendLevel</a>(float)}.\n <p>After creating an auxiliary effect (e.g.\n android.media.audiofx.EnvironmentalReverb), retrieve its ID with\n android.media.audiofx.AudioEffect.getId() and use it when calling\n this method to attach the audio track to the effect.\n <p>To detach the effect from the audio track, call this method with a\n null effect id.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>effectId</span> : Number<div class='sub-desc'><p>system wide unique id of the effect to attach</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a></p>\n</div></li></ul></div></div></div><div id='method-createVolumeShaper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-createVolumeShaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-createVolumeShaper' class='name expandable'>createVolumeShaper</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-deprecateStreamTypeForPlayback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.media.PlayerBase' rel='android.media.PlayerBase' class='defined-in docClass'>android.media.PlayerBase</a><br/><a href='source/PlayerBase.html#android-media-PlayerBase-method-deprecateStreamTypeForPlayback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.PlayerBase-method-deprecateStreamTypeForPlayback' class='name expandable'>deprecateStreamTypeForPlayback</a>( <span class='pre'>streamType, streamType</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>the stream type to check</p>\n</div></li><li><span class='pre'>streamType</span> : Object<div class='sub-desc'><p>the stream type to check</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li></ul></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes the audio data currently queued for playback. ...</div><div class='long'><p>Flushes the audio data currently queued for playback. Any data that has\n been written but not yet presented will be discarded.  No-op if not stopped or paused,\n or if the track's creation mode is not <a href=\"#!/api/android.media.AudioTrack-property-MODE_STREAM\" rel=\"android.media.AudioTrack-property-MODE_STREAM\" class=\"docClass\">MODE_STREAM</a>.\n <BR> Note that although data written but not yet presented is discarded, there is no\n guarantee that all of the buffer space formerly used by that data\n is available for a subsequent write.\n For example, a call to int, int) with <code>sizeInBytes</code>\n less than or equal to the total buffer size\n may return a short actual transfer count.</BR></p>\n</div></div></div><div id='method-getAudioAttributes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getAudioAttributes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getAudioAttributes' class='name expandable'>getAudioAttributes</a>( <span class='pre'></span> ) : Object {android.media.AudioAttributes}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the android.media.AudioAttributes used in configuration. ...</div><div class='long'><p>Returns the <a href=\"#!/api/android.media.AudioAttributes\" rel=\"android.media.AudioAttributes\" class=\"docClass\">android.media.AudioAttributes</a> used in configuration.\n If a {@code streamType} is used instead of an {@code AudioAttributes}\n to configure the AudioTrack\n (the use of {@code streamType} for configuration is deprecated),\n then the {@code AudioAttributes}\n equivalent to the {@code streamType} is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.AudioAttributes}</span><div class='sub-desc'><p>The {@code AudioAttributes} used to configure the AudioTrack.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If the track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-getAudioFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getAudioFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getAudioFormat' class='name expandable'>getAudioFormat</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the configured audio data encoding. ...</div><div class='long'><p>Returns the configured audio data encoding. See <a href=\"#!/api/android.media.AudioFormat-property-ENCODING_PCM_8BIT\" rel=\"android.media.AudioFormat-property-ENCODING_PCM_8BIT\" class=\"docClass\">android.media.AudioFormat.ENCODING_PCM_8BIT</a>,\n <a href=\"#!/api/android.media.AudioFormat-property-ENCODING_PCM_16BIT\" rel=\"android.media.AudioFormat-property-ENCODING_PCM_16BIT\" class=\"docClass\">android.media.AudioFormat.ENCODING_PCM_16BIT</a>, and <a href=\"#!/api/android.media.AudioFormat-property-ENCODING_PCM_FLOAT\" rel=\"android.media.AudioFormat-property-ENCODING_PCM_FLOAT\" class=\"docClass\">android.media.AudioFormat.ENCODING_PCM_FLOAT</a>.</p>\n</div></div></div><div id='method-getAudioSessionId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getAudioSessionId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getAudioSessionId' class='name expandable'>getAudioSessionId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the audio session ID. ...</div><div class='long'><p>Returns the audio session ID.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the ID of the audio session this AudioTrack belongs to.</p>\n</div></li></ul></div></div></div><div id='method-getBufferCapacityInFrames' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getBufferCapacityInFrames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getBufferCapacityInFrames' class='name expandable'>getBufferCapacityInFrames</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum size of the AudioTrack buffer in frames. ...</div><div class='long'><p>Returns the maximum size of the <code>AudioTrack</code> buffer in frames.\n  <p> If the track's creation mode is <a href=\"#!/api/android.media.AudioTrack-property-MODE_STATIC\" rel=\"android.media.AudioTrack-property-MODE_STATIC\" class=\"docClass\">MODE_STATIC</a>,\n  it is equal to the specified bufferSizeInBytes on construction, converted to frame units.\n  A static track's frame count will not change.\n  <p> If the track's creation mode is <a href=\"#!/api/android.media.AudioTrack-property-MODE_STREAM\" rel=\"android.media.AudioTrack-property-MODE_STREAM\" class=\"docClass\">MODE_STREAM</a>,\n  it is greater than or equal to the specified bufferSizeInBytes converted to frame units.\n  For streaming tracks, this value may be rounded up to a larger value if needed by\n  the target output sink, and\n  if the track is subsequently routed to a different output sink, the\n  frame count may enlarge to accommodate.\n  <p> If the <code>AudioTrack</code> encoding indicates compressed data,\n  e.g. <a href=\"#!/api/android.media.AudioFormat-property-ENCODING_AC3\" rel=\"android.media.AudioFormat-property-ENCODING_AC3\" class=\"docClass\">android.media.AudioFormat.ENCODING_AC3</a>, then the frame count returned is\n  the size of the <code>AudioTrack</code> buffer in bytes.\n  <p> See also android.media.AudioManager.getProperty(String) for key\n  <a href=\"#!/api/android.media.AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER\" rel=\"android.media.AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER\" class=\"docClass\">android.media.AudioManager.PROPERTY_OUTPUT_FRAMES_PER_BUFFER</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>maximum size in frames of the <code>AudioTrack</code> buffer.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-getBufferSizeInFrames' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getBufferSizeInFrames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getBufferSizeInFrames' class='name expandable'>getBufferSizeInFrames</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the effective size of the AudioTrack buffer\n that the application writes to. ...</div><div class='long'><p>Returns the effective size of the <code>AudioTrack</code> buffer\n that the application writes to.\n <p> This will be less than or equal to the result of\n <a href=\"#!/api/android.media.AudioTrack-method-getBufferCapacityInFrames\" rel=\"android.media.AudioTrack-method-getBufferCapacityInFrames\" class=\"docClass\">getBufferCapacityInFrames</a>().\n It will be equal if <a href=\"#!/api/android.media.AudioTrack-method-setBufferSizeInFrames\" rel=\"android.media.AudioTrack-method-setBufferSizeInFrames\" class=\"docClass\">setBufferSizeInFrames</a>(int) has never been called.\n <p> If the track is subsequently routed to a different output sink, the buffer\n size and capacity may enlarge to accommodate.\n <p> If the <code>AudioTrack</code> encoding indicates compressed data,\n e.g. <a href=\"#!/api/android.media.AudioFormat-property-ENCODING_AC3\" rel=\"android.media.AudioFormat-property-ENCODING_AC3\" class=\"docClass\">android.media.AudioFormat.ENCODING_AC3</a>, then the frame count returned is\n the size of the <code>AudioTrack</code> buffer in bytes.\n <p> See also android.media.AudioManager.getProperty(String) for key\n <a href=\"#!/api/android.media.AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER\" rel=\"android.media.AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER\" class=\"docClass\">android.media.AudioManager.PROPERTY_OUTPUT_FRAMES_PER_BUFFER</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>current size in frames of the <code>AudioTrack</code> buffer.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-getChannelConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getChannelConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getChannelConfiguration' class='name expandable'>getChannelConfiguration</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the configured channel position mask. ...</div><div class='long'><p>Returns the configured channel position mask.\n <p> For example, refer to <a href=\"#!/api/android.media.AudioFormat-property-CHANNEL_OUT_MONO\" rel=\"android.media.AudioFormat-property-CHANNEL_OUT_MONO\" class=\"docClass\">android.media.AudioFormat.CHANNEL_OUT_MONO</a>,\n <a href=\"#!/api/android.media.AudioFormat-property-CHANNEL_OUT_STEREO\" rel=\"android.media.AudioFormat-property-CHANNEL_OUT_STEREO\" class=\"docClass\">android.media.AudioFormat.CHANNEL_OUT_STEREO</a>, <a href=\"#!/api/android.media.AudioFormat-property-CHANNEL_OUT_5POINT1\" rel=\"android.media.AudioFormat-property-CHANNEL_OUT_5POINT1\" class=\"docClass\">android.media.AudioFormat.CHANNEL_OUT_5POINT1</a>.\n This method may return <a href=\"#!/api/android.media.AudioFormat-property-CHANNEL_INVALID\" rel=\"android.media.AudioFormat-property-CHANNEL_INVALID\" class=\"docClass\">android.media.AudioFormat.CHANNEL_INVALID</a> if\n a channel index mask was used. Consider\n <a href=\"#!/api/android.media.AudioTrack-method-getFormat\" rel=\"android.media.AudioTrack-method-getFormat\" class=\"docClass\">getFormat</a>() instead, to obtain an <a href=\"#!/api/android.media.AudioFormat\" rel=\"android.media.AudioFormat\" class=\"docClass\">android.media.AudioFormat</a>,\n which contains both the channel position mask and the channel index mask.</p>\n</div></div></div><div id='method-getChannelCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getChannelCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getChannelCount' class='name expandable'>getChannelCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the configured number of channels. ...</div><div class='long'><p>Returns the configured number of channels.</p>\n</div></div></div><div id='method-getFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getFormat' class='name expandable'>getFormat</a>( <span class='pre'></span> ) : Object {android.media.AudioFormat}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the configured AudioTrack format. ...</div><div class='long'><p>Returns the configured <code>AudioTrack</code> format.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.AudioFormat}</span><div class='sub-desc'><p>an AudioFormat containing the\n <code>AudioTrack</code> parameters at the time of configuration.</p>\n</div></li></ul></div></div></div><div id='method-getMaxVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getMaxVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getMaxVolume' class='name expandable'>getMaxVolume</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum gain value, which is greater than or equal to 1.0. ...</div><div class='long'><p>Returns the maximum gain value, which is greater than or equal to 1.0.\n Gain values greater than the maximum will be clamped to the maximum.\n <p>The word \"volume\" in the API name is historical; this is actually a gain.\n expressed as a linear multiplier on sample values, where a maximum value of 1.0\n corresponds to a gain of 0 dB (sample values left unmodified).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum value, which is greater than or equal to 1.0.</p>\n</div></li></ul></div></div></div><div id='method-getMetrics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getMetrics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getMetrics' class='name expandable'>getMetrics</a>( <span class='pre'></span> ) : Object {android.os.PersistableBundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return Metrics data about the current AudioTrack instance. ...</div><div class='long'><p>Return Metrics data about the current AudioTrack instance.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.PersistableBundle}</span><div class='sub-desc'><p>a PersistableBundle containing the set of attributes and values\n available for the media being handled by this instance of AudioTrack\n The attributes are descibed in MetricsConstants.</p>\n\n<p> Additional vendor-specific fields may also be present in\n the return value.</p>\n</div></li></ul></div></div></div><div id='method-getMinBufferSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getMinBufferSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getMinBufferSize' class='name expandable'>getMinBufferSize</a>( <span class='pre'>sampleRateInHz, channelConfig, audioFormat</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the estimated minimum buffer size required for an AudioTrack\n object to be created in the MODE_STREAM mode. ...</div><div class='long'><p>Returns the estimated minimum buffer size required for an AudioTrack\n object to be created in the <a href=\"#!/api/android.media.AudioTrack-property-MODE_STREAM\" rel=\"android.media.AudioTrack-property-MODE_STREAM\" class=\"docClass\">MODE_STREAM</a> mode.\n The size is an estimate because it does not consider either the route or the sink,\n since neither is known yet.  Note that this size doesn't\n guarantee a smooth playback under load, and higher values should be chosen according to\n the expected frequency at which the buffer will be refilled with additional data to play.\n For example, if you intend to dynamically set the source sample rate of an AudioTrack\n to a higher value than the initial source sample rate, be sure to configure the buffer size\n based on the highest planned sample rate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sampleRateInHz</span> : Number<div class='sub-desc'><p>the source sample rate expressed in Hz.\n   AudioFormat.SAMPLE_RATE_UNSPECIFIED is not permitted.</p>\n</div></li><li><span class='pre'>channelConfig</span> : Number<div class='sub-desc'><p>describes the configuration of the audio channels.\n   See AudioFormat.CHANNEL_OUT_MONO and\n   AudioFormat.CHANNEL_OUT_STEREO</p>\n</div></li><li><span class='pre'>audioFormat</span> : Number<div class='sub-desc'><p>the format in which the audio data is represented.\n   See AudioFormat.ENCODING_PCM_16BIT and\n   AudioFormat.ENCODING_PCM_8BIT,\n   and AudioFormat.ENCODING_PCM_FLOAT.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a> if an invalid parameter was passed,\n   or <a href=\"#!/api/android.media.AudioTrack-property-ERROR\" rel=\"android.media.AudioTrack-property-ERROR\" class=\"docClass\">ERROR</a> if unable to query for output properties,\n   or the minimum buffer size expressed in bytes.</p>\n</div></li></ul></div></div></div><div id='method-getMinVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getMinVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getMinVolume' class='name expandable'>getMinVolume</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the minimum gain value, which is the constant 0.0. ...</div><div class='long'><p>Returns the minimum gain value, which is the constant 0.0.\n Gain values less than 0.0 will be clamped to 0.0.\n <p>The word \"volume\" in the API name is historical; this is actually a linear gain.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the minimum value, which is the constant 0.0.</p>\n</div></li></ul></div></div></div><div id='method-getNativeOutputSampleRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getNativeOutputSampleRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getNativeOutputSampleRate' class='name expandable'>getNativeOutputSampleRate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the output sample rate in Hz for the specified stream type. ...</div><div class='long'><p>Returns the output sample rate in Hz for the specified stream type.</p>\n</div></div></div><div id='method-getNotificationMarkerPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getNotificationMarkerPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getNotificationMarkerPosition' class='name expandable'>getNotificationMarkerPosition</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns marker position expressed in frames. ...</div><div class='long'><p>Returns marker position expressed in frames.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>marker position in wrapping frame units similar to <a href=\"#!/api/android.media.AudioTrack-method-getPlaybackHeadPosition\" rel=\"android.media.AudioTrack-method-getPlaybackHeadPosition\" class=\"docClass\">getPlaybackHeadPosition</a>,\n or zero if marker is disabled.</p>\n</div></li></ul></div></div></div><div id='method-getOffloadDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getOffloadDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getOffloadDelay' class='name expandable'>getOffloadDelay</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the decoder delay of an offloaded track, expressed in frames, previously set with\n int), or 0 if it was never ...</div><div class='long'><p>Return the decoder delay of an offloaded track, expressed in frames, previously set with\n int), or 0 if it was never modified.\n <p>This delay indicates the number of frames to be ignored at the beginning of the stream.\n This value can only be queried on a track successfully initialized with\n android.media.AudioTrack.Builder.setOffloadedPlayback(boolean).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>decoder delay expressed in frames.</p>\n</div></li></ul></div></div></div><div id='method-getOffloadPadding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getOffloadPadding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getOffloadPadding' class='name expandable'>getOffloadPadding</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the decoder padding of an offloaded track, expressed in frames, previously set with\n int), or 0 if it was neve...</div><div class='long'><p>Return the decoder padding of an offloaded track, expressed in frames, previously set with\n int), or 0 if it was never modified.\n <p>This padding indicates the number of frames to be ignored at the end of the stream.\n This value can only be queried on a track successfully initialized with\n android.media.AudioTrack.Builder.setOffloadedPlayback(boolean).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>decoder padding expressed in frames.</p>\n</div></li></ul></div></div></div><div id='method-getPerformanceMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getPerformanceMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getPerformanceMode' class='name expandable'>getPerformanceMode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current performance mode of the android.media.AudioTrack. ...</div><div class='long'><p>Returns the current performance mode of the <a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>one of AudioTrack.PERFORMANCE_MODE_NONE,\n AudioTrack.PERFORMANCE_MODE_LOW_LATENCY,\n or AudioTrack.PERFORMANCE_MODE_POWER_SAVING.\n Use AudioTrack.Builder.setPerformanceMode\n in the AudioTrack.Builder to enable a performance mode.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-getPlayState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getPlayState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getPlayState' class='name expandable'>getPlayState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the playback state of the AudioTrack instance. ...</div><div class='long'><p>Returns the playback state of the AudioTrack instance.\n@see <a href=\"#!/api/android.media.AudioTrack-property-PLAYSTATE_STOPPED\" rel=\"android.media.AudioTrack-property-PLAYSTATE_STOPPED\" class=\"docClass\">PLAYSTATE_STOPPED</a>\n@see <a href=\"#!/api/android.media.AudioTrack-property-PLAYSTATE_PAUSED\" rel=\"android.media.AudioTrack-property-PLAYSTATE_PAUSED\" class=\"docClass\">PLAYSTATE_PAUSED</a>\n@see <a href=\"#!/api/android.media.AudioTrack-property-PLAYSTATE_PLAYING\" rel=\"android.media.AudioTrack-property-PLAYSTATE_PLAYING\" class=\"docClass\">PLAYSTATE_PLAYING</a></p>\n</div></div></div><div id='method-getPlaybackHeadPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getPlaybackHeadPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getPlaybackHeadPosition' class='name expandable'>getPlaybackHeadPosition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the playback head position expressed in frames. ...</div><div class='long'><p>Returns the playback head position expressed in frames.\n Though the \"int\" type is signed 32-bits, the value should be reinterpreted as if it is\n unsigned 32-bits.  That is, the next position after 0x7FFFFFFF is (int) 0x80000000.\n This is a continuously advancing counter.  It will wrap (overflow) periodically,\n for example approximately once every 27:03:11 hours:minutes:seconds at 44.1 kHz.\n It is reset to zero by <a href=\"#!/api/android.media.AudioTrack-method-flush\" rel=\"android.media.AudioTrack-method-flush\" class=\"docClass\">flush</a>(), <a href=\"#!/api/android.media.AudioTrack-method-reloadStaticData\" rel=\"android.media.AudioTrack-method-reloadStaticData\" class=\"docClass\">reloadStaticData</a>(), and <a href=\"#!/api/android.media.AudioTrack-method-stop\" rel=\"android.media.AudioTrack-method-stop\" class=\"docClass\">stop</a>().\n If the track's creation mode is <a href=\"#!/api/android.media.AudioTrack-property-MODE_STATIC\" rel=\"android.media.AudioTrack-property-MODE_STATIC\" class=\"docClass\">MODE_STATIC</a>, the return value indicates\n the total number of frames played since reset,\n <i>not</i> the current offset within the buffer.</p>\n</div></div></div><div id='method-getPlaybackParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getPlaybackParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getPlaybackParams' class='name expandable'>getPlaybackParams</a>( <span class='pre'></span> ) : Object {android.media.PlaybackParams}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current playback parameters. ...</div><div class='long'><p>Returns the current playback parameters.\n See <a href=\"#!/api/android.media.AudioTrack-method-setPlaybackParams\" rel=\"android.media.AudioTrack-method-setPlaybackParams\" class=\"docClass\">setPlaybackParams</a>(PlaybackParams) to set playback parameters</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.PlaybackParams}</span><div class='sub-desc'><p>current PlaybackParams.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-getPlaybackRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getPlaybackRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getPlaybackRate' class='name expandable'>getPlaybackRate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current playback sample rate rate in Hz. ...</div><div class='long'><p>Returns the current playback sample rate rate in Hz.</p>\n</div></div></div><div id='method-getPositionNotificationPeriod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getPositionNotificationPeriod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getPositionNotificationPeriod' class='name expandable'>getPositionNotificationPeriod</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the notification update period expressed in frames. ...</div><div class='long'><p>Returns the notification update period expressed in frames.\n Zero means that no position update notifications are being delivered.</p>\n</div></div></div><div id='method-getPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getPreferredDevice' class='name expandable'>getPreferredDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the selected output specified by setPreferredDevice. ...</div><div class='long'><p>Returns the selected output specified by <a href=\"#!/api/android.media.AudioTrack-method-setPreferredDevice\" rel=\"android.media.AudioTrack-method-setPreferredDevice\" class=\"docClass\">setPreferredDevice</a>. Note that this\n is not guaranteed to correspond to the actual device being used for playback.</p>\n</div></div></div><div id='method-getRoutedDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getRoutedDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getRoutedDevice' class='name expandable'>getRoutedDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an android.media.AudioDeviceInfo identifying the current routing of this AudioTrack. ...</div><div class='long'><p>Returns an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> identifying the current routing of this AudioTrack.\n Note: The query is only valid if the AudioTrack is currently playing. If it is not,\n <code>getRoutedDevice()</code> will return null.</p>\n</div></div></div><div id='method-getSampleRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getSampleRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getSampleRate' class='name expandable'>getSampleRate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the configured audio source sample rate in Hz. ...</div><div class='long'><p>Returns the configured audio source sample rate in Hz.\n The initial source sample rate depends on the constructor parameters,\n but the source sample rate may change if <a href=\"#!/api/android.media.AudioTrack-method-setPlaybackRate\" rel=\"android.media.AudioTrack-method-setPlaybackRate\" class=\"docClass\">setPlaybackRate</a>(int) is called.\n If the constructor had a specific sample rate, then the initial sink sample rate is that\n value.\n If the constructor had <a href=\"#!/api/android.media.AudioFormat-property-SAMPLE_RATE_UNSPECIFIED\" rel=\"android.media.AudioFormat-property-SAMPLE_RATE_UNSPECIFIED\" class=\"docClass\">android.media.AudioFormat.SAMPLE_RATE_UNSPECIFIED</a>,\n then the initial sink sample rate is a route-dependent default value based on the source [sic].</p>\n</div></div></div><div id='method-getState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the state of the AudioTrack instance. ...</div><div class='long'><p>Returns the state of the AudioTrack instance. This is useful after the\n AudioTrack instance has been created to check if it was initialized\n properly. This ensures that the appropriate resources have been acquired.\n@see <a href=\"#!/api/android.media.AudioTrack-property-STATE_UNINITIALIZED\" rel=\"android.media.AudioTrack-property-STATE_UNINITIALIZED\" class=\"docClass\">STATE_UNINITIALIZED</a>\n@see <a href=\"#!/api/android.media.AudioTrack-property-STATE_INITIALIZED\" rel=\"android.media.AudioTrack-property-STATE_INITIALIZED\" class=\"docClass\">STATE_INITIALIZED</a>\n@see <a href=\"#!/api/android.media.AudioTrack-property-STATE_NO_STATIC_DATA\" rel=\"android.media.AudioTrack-property-STATE_NO_STATIC_DATA\" class=\"docClass\">STATE_NO_STATIC_DATA</a></p>\n</div></div></div><div id='method-getStreamType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getStreamType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getStreamType' class='name expandable'>getStreamType</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the volume stream type of this AudioTrack. ...</div><div class='long'><p>Returns the volume stream type of this AudioTrack.\n Compare the result against <a href=\"#!/api/android.media.AudioManager-property-STREAM_VOICE_CALL\" rel=\"android.media.AudioManager-property-STREAM_VOICE_CALL\" class=\"docClass\">android.media.AudioManager.STREAM_VOICE_CALL</a>,\n <a href=\"#!/api/android.media.AudioManager-property-STREAM_SYSTEM\" rel=\"android.media.AudioManager-property-STREAM_SYSTEM\" class=\"docClass\">android.media.AudioManager.STREAM_SYSTEM</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_RING\" rel=\"android.media.AudioManager-property-STREAM_RING\" class=\"docClass\">android.media.AudioManager.STREAM_RING</a>,\n <a href=\"#!/api/android.media.AudioManager-property-STREAM_MUSIC\" rel=\"android.media.AudioManager-property-STREAM_MUSIC\" class=\"docClass\">android.media.AudioManager.STREAM_MUSIC</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_ALARM\" rel=\"android.media.AudioManager-property-STREAM_ALARM\" class=\"docClass\">android.media.AudioManager.STREAM_ALARM</a>,\n <a href=\"#!/api/android.media.AudioManager-property-STREAM_NOTIFICATION\" rel=\"android.media.AudioManager-property-STREAM_NOTIFICATION\" class=\"docClass\">android.media.AudioManager.STREAM_NOTIFICATION</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_DTMF\" rel=\"android.media.AudioManager-property-STREAM_DTMF\" class=\"docClass\">android.media.AudioManager.STREAM_DTMF</a> or\n <a href=\"#!/api/android.media.AudioManager-property-STREAM_ACCESSIBILITY\" rel=\"android.media.AudioManager-property-STREAM_ACCESSIBILITY\" class=\"docClass\">android.media.AudioManager.STREAM_ACCESSIBILITY</a>.</p>\n</div></div></div><div id='method-getTimestamp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getTimestamp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getTimestamp' class='name expandable'>getTimestamp</a>( <span class='pre'>timestamp</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Poll for a timestamp on demand. ...</div><div class='long'><p>Poll for a timestamp on demand.\n <p>\n If you need to track timestamps during initial warmup or after a routing or mode change,\n you should request a new timestamp periodically until the reported timestamps\n show that the frame position is advancing, or until it becomes clear that\n timestamps are unavailable for this route.\n <p>\n After the clock is advancing at a stable rate,\n query for a new timestamp approximately once every 10 seconds to once per minute.\n Calling this method more often is inefficient.\n It is also counter-productive to call this method more often than recommended,\n because the short-term differences between successive timestamp reports are not meaningful.\n If you need a high-resolution mapping between frame position and presentation time,\n consider implementing that at application level, based on low-resolution timestamps.\n <p>\n The audio data at the returned position may either already have been\n presented, or may have not yet been presented but is committed to be presented.\n It is not possible to request the time corresponding to a particular position,\n or to request the (fractional) position corresponding to a particular time.\n If you need such features, consider implementing them at application level.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timestamp</span> : Object {AudioTimestamp}<div class='sub-desc'><p>a reference to a non-null AudioTimestamp instance allocated\n        and owned by caller.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a timestamp is available, or false if no timestamp is available.\n         If a timestamp is available,\n         the AudioTimestamp instance is filled in with a position in frame units, together\n         with the estimated time when that frame was presented or is committed to\n         be presented.\n         In the case that no timestamp is available, any supplied instance is left unaltered.\n         A timestamp may be temporarily unavailable while the audio clock is stabilizing,\n         or during and immediately after a route change.\n         A timestamp is permanently unavailable for a given route if the route does not support\n         timestamps.  In this case, the approximate frame position can be obtained\n         using <a href=\"#!/api/android.media.AudioTrack-method-getPlaybackHeadPosition\" rel=\"android.media.AudioTrack-method-getPlaybackHeadPosition\" class=\"docClass\">getPlaybackHeadPosition</a>.\n         However, it may be useful to continue to query for\n         timestamps occasionally, to recover after a route change.</p>\n</div></li></ul></div></div></div><div id='method-getUnderrunCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-getUnderrunCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-getUnderrunCount' class='name expandable'>getUnderrunCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of underrun occurrences in the application-level write buffer\n since the AudioTrack was created. ...</div><div class='long'><p>Returns the number of underrun occurrences in the application-level write buffer\n since the AudioTrack was created.\n An underrun occurs if the application does not write audio\n data quickly enough, causing the buffer to underflow\n and a potential audio glitch or pop.\n <p>\n Underruns are less likely when buffer sizes are large.\n It may be possible to eliminate underruns by recreating the AudioTrack with\n a larger buffer.\n Or by using <a href=\"#!/api/android.media.AudioTrack-method-setBufferSizeInFrames\" rel=\"android.media.AudioTrack-method-setBufferSizeInFrames\" class=\"docClass\">setBufferSizeInFrames</a>(int) to dynamically increase the\n effective size of the buffer.</p>\n</div></div></div><div id='method-isDirectPlaybackSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-isDirectPlaybackSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-isDirectPlaybackSupported' class='name expandable'>isDirectPlaybackSupported</a>( <span class='pre'>format, attributes</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether direct playback of an audio format with the provided attributes is\n currently supported on the system. ...</div><div class='long'><p>Returns whether direct playback of an audio format with the provided attributes is\n currently supported on the system.\n <p>Direct playback means that the audio stream is not resampled or downmixed\n by the framework. Checking for direct support can help the app select the representation\n of audio content that most closely matches the capabilities of the device and peripherials\n (e.g. A/V receiver) connected to it. Note that the provided stream can still be re-encoded\n or mixed with other streams, if needed.\n <p>Also note that this query only provides information about the support of an audio format.\n It does not indicate whether the resources necessary for the playback are available\n at that instant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Object {AudioFormat}<div class='sub-desc'><p>a non-null AudioFormat instance describing the format of\n   the audio data.</p>\n</div></li><li><span class='pre'>attributes</span> : Object {AudioAttributes}<div class='sub-desc'><p>a non-null AudioAttributes instance.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the given audio format can be played directly.</p>\n</div></li></ul></div></div></div><div id='method-isOffloadedPlayback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-isOffloadedPlayback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-isOffloadedPlayback' class='name expandable'>isOffloadedPlayback</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the track was built with android.media.AudioAttributes.Builder.setOffloadedPlayback(boolean) set\n to ...</div><div class='long'><p>Returns whether the track was built with android.media.AudioAttributes.Builder.setOffloadedPlayback(boolean) set\n to {@code true}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the track is using offloaded playback.</p>\n</div></li></ul></div></div></div><div id='method-pause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-pause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-pause' class='name expandable'>pause</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Pauses the playback of the audio data. ...</div><div class='long'><p>Pauses the playback of the audio data. Data that has not been played\n back will not be discarded. Subsequent calls to <a href=\"#!/api/android.media.AudioTrack-method-play\" rel=\"android.media.AudioTrack-method-play\" class=\"docClass\">play</a> will play\n this data back. See <a href=\"#!/api/android.media.AudioTrack-method-flush\" rel=\"android.media.AudioTrack-method-flush\" class=\"docClass\">flush</a>() to discard this data.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException</p>\n</div></li></ul></div></div></div><div id='method-play' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-play' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-play' class='name expandable'>play</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts playing an AudioTrack. ...</div><div class='long'><p>Starts playing an AudioTrack.\n <p>\n If track's creation mode is <a href=\"#!/api/android.media.AudioTrack-property-MODE_STATIC\" rel=\"android.media.AudioTrack-property-MODE_STATIC\" class=\"docClass\">MODE_STATIC</a>, you must have called one of\n the write methods (int, int), int, int, int),\n int, int), int, int, int),\n int, int, int), or int, int)) prior to\n play().\n <p>\n If the mode is <a href=\"#!/api/android.media.AudioTrack-property-MODE_STREAM\" rel=\"android.media.AudioTrack-property-MODE_STREAM\" class=\"docClass\">MODE_STREAM</a>, you can optionally prime the data path prior to\n calling play(), by writing up to <code>bufferSizeInBytes</code> (from constructor).\n If you don't call write() first, or if you call write() but with an insufficient amount of\n data, then the track will be in underrun state at play().  In this case,\n playback will not actually start playing until the data path is filled to a\n device-specific minimum level.  This requirement for the path to be filled\n to a minimum level is also true when resuming audio playback after calling stop().\n Similarly the buffer will need to be filled up again after\n the track underruns due to failure to call write() in a timely manner with sufficient data.\n For portability, an application should prime the data path to the maximum allowed\n by writing data until the write() method returns a short transfer count.\n This allows play() to start immediately, and reduces the chance of underrun.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the track isn't properly initialized</p>\n</div></li></ul></div></div></div><div id='method-registerStreamEventCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-registerStreamEventCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-registerStreamEventCallback' class='name expandable'>registerStreamEventCallback</a>( <span class='pre'>executor, eventCallback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a callback for the notification of stream events. ...</div><div class='long'><p>Registers a callback for the notification of stream events.\n This callback can only be registered for instances operating in offloaded mode\n (see android.media.AudioTrack.Builder.setOffloadedPlayback(boolean) and\n android.media.AudioManager.isOffloadedPlaybackSupported(AudioFormat,AudioAttributes) for\n more details).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>Executor to handle the callbacks.</p>\n</div></li><li><span class='pre'>eventCallback</span> : Object {AudioTrack.StreamEventCallback}<div class='sub-desc'><p>the callback to receive the stream event notifications.</p>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-release' class='name expandable'>release</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Releases the native AudioTrack resources. ...</div><div class='long'><p>Releases the native AudioTrack resources.</p>\n</div></div></div><div id='method-reloadStaticData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-reloadStaticData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-reloadStaticData' class='name expandable'>reloadStaticData</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the playback head position within the static buffer to zero,\n that is it rewinds to start of static buffer. ...</div><div class='long'><p>Sets the playback head position within the static buffer to zero,\n that is it rewinds to start of static buffer.\n The track must be stopped or paused, and\n the track's creation mode must be <a href=\"#!/api/android.media.AudioTrack-property-MODE_STATIC\" rel=\"android.media.AudioTrack-property-MODE_STATIC\" class=\"docClass\">MODE_STATIC</a>.\n <p>\n As of android.os.Build.VERSION_CODES.M, also resets the value returned by\n <a href=\"#!/api/android.media.AudioTrack-method-getPlaybackHeadPosition\" rel=\"android.media.AudioTrack-method-getPlaybackHeadPosition\" class=\"docClass\">getPlaybackHeadPosition</a>() to zero.\n For earlier API levels, the reset behavior is unspecified.\n <p>\n Use <a href=\"#!/api/android.media.AudioTrack-method-setPlaybackHeadPosition\" rel=\"android.media.AudioTrack-method-setPlaybackHeadPosition\" class=\"docClass\">setPlaybackHeadPosition</a>(int) with a zero position\n if the reset of <code>getPlaybackHeadPosition()</code> is not needed.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>,\n  <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-removeOnRoutingChangedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-removeOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-removeOnRoutingChangedListener' class='name expandable'>removeOnRoutingChangedListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Removes an android.media.AudioRecord.OnRoutingChangedListener which has been previously added\n to receive rerouting n...</div><div class='long'><p>Removes an <a href=\"#!/api/android.media.AudioRecord.OnRoutingChangedListener\" rel=\"android.media.AudioRecord.OnRoutingChangedListener\" class=\"docClass\">android.media.AudioRecord.OnRoutingChangedListener</a> which has been previously added\n to receive rerouting notifications.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>users should switch to the general purpose\n             AudioRouting.OnRoutingChangedListener class instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioTrack.OnRoutingChangedListener}<div class='sub-desc'><p>The previously added OnRoutingChangedListener interface to remove.</p>\n</div></li></ul></div></div></div><div id='method-setAuxEffectSendLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setAuxEffectSendLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setAuxEffectSendLevel' class='name expandable'>setAuxEffectSendLevel</a>( <span class='pre'>level</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the send level of the audio track to the attached auxiliary effect\n attachAuxEffect(int). ...</div><div class='long'><p>Sets the send level of the audio track to the attached auxiliary effect\n <a href=\"#!/api/android.media.AudioTrack-method-attachAuxEffect\" rel=\"android.media.AudioTrack-method-attachAuxEffect\" class=\"docClass\">attachAuxEffect</a>(int).  Effect levels\n are clamped to the closed interval [0.0, max] where\n max is the value of <a href=\"#!/api/android.media.AudioTrack-method-getMaxVolume\" rel=\"android.media.AudioTrack-method-getMaxVolume\" class=\"docClass\">getMaxVolume</a>.\n A value of 0.0 results in no effect, and a value of 1.0 is full send.\n <p>By default the send level is 0.0f, so even if an effect is attached to the player\n this method must be called for the effect to be applied.\n <p>Note that the passed level value is a linear scalar. UI controls should be scaled\n logarithmically: the gain applied by audio framework ranges from -72dB to at least 0dB,\n so an appropriate conversion from linear UI input x to level is:\n x == 0 -&gt; level = 0\n 0 &lt; x &lt;= R -&gt; level = 10<sup>72*(x-R)/20/R</sup></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>level</span> : Number<div class='sub-desc'><p>linear send level</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR\" rel=\"android.media.AudioTrack-property-ERROR\" class=\"docClass\">ERROR</a></p>\n</div></li></ul></div></div></div><div id='method-setBufferSizeInFrames' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setBufferSizeInFrames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setBufferSizeInFrames' class='name expandable'>setBufferSizeInFrames</a>( <span class='pre'>bufferSizeInFrames</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Limits the effective size of the AudioTrack buffer\n that the application writes to. ...</div><div class='long'><p>Limits the effective size of the <code>AudioTrack</code> buffer\n that the application writes to.\n <p> A write to this AudioTrack will not fill the buffer beyond this limit.\n If a blocking write is used then the write will block until the data\n can fit within this limit.\n <p>Changing this limit modifies the latency associated with\n the buffer for this track. A smaller size will give lower latency\n but there may be more glitches due to buffer underruns.\n <p>The actual size used may not be equal to this requested size.\n It will be limited to a valid range with a maximum of\n <a href=\"#!/api/android.media.AudioTrack-method-getBufferCapacityInFrames\" rel=\"android.media.AudioTrack-method-getBufferCapacityInFrames\" class=\"docClass\">getBufferCapacityInFrames</a>().\n It may also be adjusted slightly for internal reasons.\n If bufferSizeInFrames is less than zero then <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>\n will be returned.\n <p>This method is only supported for PCM audio.\n It is not supported for compressed audio tracks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bufferSizeInFrames</span> : Number<div class='sub-desc'><p>requested buffer size in frames</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual buffer size in frames or an error code,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-setLoopPoints' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setLoopPoints' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setLoopPoints' class='name expandable'>setLoopPoints</a>( <span class='pre'>startInFrames, endInFrames, loopCount</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the loop points and the loop count. ...</div><div class='long'><p>Sets the loop points and the loop count. The loop can be infinite.\n Similarly to setPlaybackHeadPosition,\n the track must be stopped or paused for the loop points to be changed,\n and must use the <a href=\"#!/api/android.media.AudioTrack-property-MODE_STATIC\" rel=\"android.media.AudioTrack-property-MODE_STATIC\" class=\"docClass\">MODE_STATIC</a> mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startInFrames</span> : Number<div class='sub-desc'><p>loop start marker expressed in frames.\n Zero corresponds to start of buffer.\n The start marker must not be greater than or equal to the buffer size in frames, or negative.</p>\n</div></li><li><span class='pre'>endInFrames</span> : Number<div class='sub-desc'><p>loop end marker expressed in frames.\n The total buffer size in frames corresponds to end of buffer.\n The end marker must not be greater than the buffer size in frames.\n For looping, the end marker must not be less than or equal to the start marker,\n but to disable looping\n it is permitted for start marker, end marker, and loop count to all be 0.\n If any input parameters are out of range, this method returns <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>.\n If the loop period (endInFrames - startInFrames) is too small for the implementation to\n support,\n <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a> is returned.\n The loop range is the interval [startInFrames, endInFrames).\n <br>\n As of android.os.Build.VERSION_CODES.M, the position is left unchanged,\n unless it is greater than or equal to the loop end marker, in which case\n it is forced to the loop start marker.\n For earlier API levels, the effect on position is unspecified.</p>\n</div></li><li><span class='pre'>loopCount</span> : Number<div class='sub-desc'><p>the number of times the loop is looped; must be greater than or equal to -1.\n    A value of -1 means infinite looping, and 0 disables looping.\n    A value of positive N means to \"loop\" (go back) N times.  For example,\n    a value of one means to play the region two times in total.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-setNotificationMarkerPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setNotificationMarkerPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setNotificationMarkerPosition' class='name expandable'>setNotificationMarkerPosition</a>( <span class='pre'>markerInFrames</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the position of the notification marker. ...</div><div class='long'><p>Sets the position of the notification marker.  At most one marker can be active.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>markerInFrames</span> : Number<div class='sub-desc'><p>marker position in wrapping frame units similar to\n <a href=\"#!/api/android.media.AudioTrack-method-getPlaybackHeadPosition\" rel=\"android.media.AudioTrack-method-getPlaybackHeadPosition\" class=\"docClass\">getPlaybackHeadPosition</a>, or zero to disable the marker.\n To set a marker at a position which would appear as zero due to wraparound,\n a workaround is to use a non-zero position near zero, such as -1 or 1.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>,\n  <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-setOffloadDelayPadding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setOffloadDelayPadding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setOffloadDelayPadding' class='name expandable'>setOffloadDelayPadding</a>( <span class='pre'>delayInFrames, paddingInFrames</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Configures the delay and padding values for the current compressed stream playing\n in offload mode. ...</div><div class='long'><p>Configures the delay and padding values for the current compressed stream playing\n in offload mode.\n This can only be used on a track successfully initialized with\n android.media.AudioTrack.Builder.setOffloadedPlayback(boolean). The unit is frames, where a\n frame indicates the number of samples per channel, e.g. 100 frames for a stereo compressed\n stream corresponds to 200 decoded interleaved PCM samples.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delayInFrames</span> : Number<div class='sub-desc'><p>number of frames to be ignored at the beginning of the stream. A value\n     of 0 indicates no delay is to be applied.</p>\n</div></li><li><span class='pre'>paddingInFrames</span> : Number<div class='sub-desc'><p>number of frames to be ignored at the end of the stream. A value of 0\n     of 0 indicates no padding is to be applied.</p>\n</div></li></ul></div></div></div><div id='method-setOffloadEndOfStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setOffloadEndOfStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setOffloadEndOfStream' class='name expandable'>setOffloadEndOfStream</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Declares that the last write() operation on this track provided the last buffer of this\n stream. ...</div><div class='long'><p>Declares that the last write() operation on this track provided the last buffer of this\n stream.\n After the end of stream, previously set padding and delay values are ignored.\n Can only be called only if the AudioTrack is opened in offload mode\n {@see Builder#setOffloadedPlayback(boolean)}.\n Can only be called only if the AudioTrack is in state <a href=\"#!/api/android.media.AudioTrack-property-PLAYSTATE_PLAYING\" rel=\"android.media.AudioTrack-property-PLAYSTATE_PLAYING\" class=\"docClass\">PLAYSTATE_PLAYING</a>\n {@see #getPlaystate()}.\n Use this method in the same thread as any write() operation.</p>\n</div></div></div><div id='method-setPlaybackHeadPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setPlaybackHeadPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setPlaybackHeadPosition' class='name expandable'>setPlaybackHeadPosition</a>( <span class='pre'>positionInFrames</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the playback head position within the static buffer. ...</div><div class='long'><p>Sets the playback head position within the static buffer.\n The track must be stopped or paused for the position to be changed,\n and must use the <a href=\"#!/api/android.media.AudioTrack-property-MODE_STATIC\" rel=\"android.media.AudioTrack-property-MODE_STATIC\" class=\"docClass\">MODE_STATIC</a> mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>positionInFrames</span> : Number<div class='sub-desc'><p>playback head position within buffer, expressed in frames.\n Zero corresponds to start of buffer.\n The position must not be greater than the buffer size in frames, or negative.\n Though this method and getPlaybackHeadPosition() have similar names,\n the position values have different meanings.\n <br>\n If looping is currently enabled and the new position is greater than or equal to the\n loop end marker, the behavior varies by API level:\n as of android.os.Build.VERSION_CODES.M,\n the looping is first disabled and then the position is set.\n For earlier API levels, the behavior is unspecified.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-setPlaybackParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setPlaybackParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setPlaybackParams' class='name expandable'>setPlaybackParams</a>( <span class='pre'>params</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the playback parameters. ...</div><div class='long'><p>Sets the playback parameters.\n This method returns failure if it cannot apply the playback parameters.\n One possible cause is that the parameters for speed or pitch are out of range.\n Another possible cause is that the <code>AudioTrack</code> is streaming\n (see <a href=\"#!/api/android.media.AudioTrack-property-MODE_STREAM\" rel=\"android.media.AudioTrack-property-MODE_STREAM\" class=\"docClass\">MODE_STREAM</a>) and the\n buffer size is too small. For speeds greater than 1.0f, the <code>AudioTrack</code> buffer\n on configuration must be larger than the speed multiplied by the minimum size\n int, int)) to allow proper playback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object {PlaybackParams}<div class='sub-desc'><p>see PlaybackParams. In particular,\n speed, pitch, and audio mode should be set.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the parameters are invalid or not accepted.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-setPlaybackPositionUpdateListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setPlaybackPositionUpdateListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setPlaybackPositionUpdateListener' class='name expandable'>setPlaybackPositionUpdateListener</a>( <span class='pre'>listener, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the listener the AudioTrack notifies when a previously set marker is reached or\n for each periodic playback head...</div><div class='long'><p>Sets the listener the AudioTrack notifies when a previously set marker is reached or\n for each periodic playback head position update.\n Use this method to receive AudioTrack events in the Handler associated with another\n thread than the one in which you created the AudioTrack instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioTrack.OnPlaybackPositionUpdateListener}<div class='sub-desc'>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>the Handler that will receive the event notification messages.</p>\n</div></li></ul></div></div></div><div id='method-setPlaybackRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setPlaybackRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setPlaybackRate' class='name expandable'>setPlaybackRate</a>( <span class='pre'>sampleRateInHz</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the playback sample rate for this track. ...</div><div class='long'><p>Sets the playback sample rate for this track. This sets the sampling rate at which\n the audio data will be consumed and played back\n (as set by the sampleRateInHz parameter in the\n int, int, int, int, int) constructor),\n not the original sampling rate of the\n content. For example, setting it to half the sample rate of the content will cause the\n playback to last twice as long, but will also result in a pitch shift down by one octave.\n The valid sample rate range is from 1 Hz to twice the value returned by\n <a href=\"#!/api/android.media.AudioTrack-method-getNativeOutputSampleRate\" rel=\"android.media.AudioTrack-method-getNativeOutputSampleRate\" class=\"docClass\">getNativeOutputSampleRate</a>(int).\n Use <a href=\"#!/api/android.media.AudioTrack-method-setPlaybackParams\" rel=\"android.media.AudioTrack-method-setPlaybackParams\" class=\"docClass\">setPlaybackParams</a>(PlaybackParams) for speed control.\n <p> This method may also be used to repurpose an existing <code>AudioTrack</code>\n for playback of content of differing sample rate,\n but with identical encoding and channel mask.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sampleRateInHz</span> : Number<div class='sub-desc'><p>the sample rate expressed in Hz</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-setPositionNotificationPeriod' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setPositionNotificationPeriod' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setPositionNotificationPeriod' class='name expandable'>setPositionNotificationPeriod</a>( <span class='pre'>periodInFrames</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the period for the periodic notification event. ...</div><div class='long'><p>Sets the period for the periodic notification event.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>periodInFrames</span> : Number<div class='sub-desc'><p>update period expressed in frames.\n Zero period means no position updates.  A negative period is not allowed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-setPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setPreferredDevice' class='name expandable'>setPreferredDevice</a>( <span class='pre'>deviceInfo</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies an audio device (via an android.media.AudioDeviceInfo object) to route\n the output from this AudioTrack. ...</div><div class='long'><p>Specifies an audio device (via an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> object) to route\n the output from this AudioTrack.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deviceInfo</span> : Object {AudioDeviceInfo}<div class='sub-desc'><p>The AudioDeviceInfo specifying the audio sink.\n  If deviceInfo is null, default routing is restored.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succesful, false if the specified AudioDeviceInfo is non-null and\n does not correspond to a valid audio output device.</p>\n</div></li></ul></div></div></div><div id='method-setPresentation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setPresentation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setPresentation' class='name expandable'>setPresentation</a>( <span class='pre'>presentation</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio presentation. ...</div><div class='long'><p>Sets the audio presentation.\n If the audio presentation is invalid then <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a> will be returned.\n If a multi-stream decoder (MSD) is not present, or the format does not support\n multiple presentations, then <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a> will be returned.\n <a href=\"#!/api/android.media.AudioTrack-property-ERROR\" rel=\"android.media.AudioTrack-property-ERROR\" class=\"docClass\">ERROR</a> is returned in case of any other error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>presentation</span> : Object {AudioPresentation}<div class='sub-desc'><p>see AudioPresentation. In particular, id should be set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR\" rel=\"android.media.AudioTrack-property-ERROR\" class=\"docClass\">ERROR</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a>, <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the audio presentation is null.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if track is not initialized.</p>\n</div></li></ul></div></div></div><div id='method-setStartDelayMs' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.media.PlayerBase' rel='android.media.PlayerBase' class='defined-in docClass'>android.media.PlayerBase</a><br/><a href='source/PlayerBase.html#android-media-PlayerBase-method-setStartDelayMs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.PlayerBase-method-setStartDelayMs' class='name expandable'>setStartDelayMs</a>( <span class='pre'>delayMs, delayMs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delayMs</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>delayMs</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setStereoVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setStereoVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setStereoVolume' class='name expandable'>setStereoVolume</a>( <span class='pre'>leftGain, rightGain</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the specified left and right output gain values on the AudioTrack. ...</div><div class='long'><p>Sets the specified left and right output gain values on the AudioTrack.\n <p>Gain values are clamped to the closed interval [0.0, max] where\n max is the value of <a href=\"#!/api/android.media.AudioTrack-method-getMaxVolume\" rel=\"android.media.AudioTrack-method-getMaxVolume\" class=\"docClass\">getMaxVolume</a>.\n A value of 0.0 results in zero gain (silence), and\n a value of 1.0 means unity gain (signal unchanged).\n The default value is 1.0 meaning unity gain.\n <p>The word \"volume\" in the API name is historical; this is actually a linear gain.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Applications should use <a href=\"#!/api/android.media.AudioTrack-method-setVolume\" rel=\"android.media.AudioTrack-method-setVolume\" class=\"docClass\">setVolume</a> instead, as it\n more gracefully scales down to mono, and up to multi-channel content beyond stereo.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>leftGain</span> : Number<div class='sub-desc'><p>output gain for the left channel.</p>\n</div></li><li><span class='pre'>rightGain</span> : Number<div class='sub-desc'><p>output gain for the right channel</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-setVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-setVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-setVolume' class='name expandable'>setVolume</a>( <span class='pre'>gain</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the specified output gain value on all channels of this track. ...</div><div class='long'><p>Sets the specified output gain value on all channels of this track.\n <p>Gain values are clamped to the closed interval [0.0, max] where\n max is the value of <a href=\"#!/api/android.media.AudioTrack-method-getMaxVolume\" rel=\"android.media.AudioTrack-method-getMaxVolume\" class=\"docClass\">getMaxVolume</a>.\n A value of 0.0 results in zero gain (silence), and\n a value of 1.0 means unity gain (signal unchanged).\n The default value is 1.0 meaning unity gain.\n <p>This API is preferred over <a href=\"#!/api/android.media.AudioTrack-method-setStereoVolume\" rel=\"android.media.AudioTrack-method-setStereoVolume\" class=\"docClass\">setStereoVolume</a>, as it\n more gracefully scales down to mono, and up to multi-channel content beyond stereo.\n <p>The word \"volume\" in the API name is historical; this is actually a linear gain.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>gain</span> : Number<div class='sub-desc'><p>output gain for all channels.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>error code or success, see <a href=\"#!/api/android.media.AudioTrack-property-SUCCESS\" rel=\"android.media.AudioTrack-property-SUCCESS\" class=\"docClass\">SUCCESS</a>,\n    <a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a></p>\n</div></li></ul></div></div></div><div id='method-stop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-stop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-stop' class='name expandable'>stop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops playing the audio data. ...</div><div class='long'><p>Stops playing the audio data.\n When used on an instance created in <a href=\"#!/api/android.media.AudioTrack-property-MODE_STREAM\" rel=\"android.media.AudioTrack-property-MODE_STREAM\" class=\"docClass\">MODE_STREAM</a> mode, audio will stop playing\n after the last buffer that was written has been played. For an immediate stop, use\n <a href=\"#!/api/android.media.AudioTrack-method-pause\" rel=\"android.media.AudioTrack-method-pause\" class=\"docClass\">pause</a>(), followed by <a href=\"#!/api/android.media.AudioTrack-method-flush\" rel=\"android.media.AudioTrack-method-flush\" class=\"docClass\">flush</a>() to discard audio data that hasn't been played\n back yet.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException</p>\n</div></li></ul></div></div></div><div id='method-unregisterStreamEventCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-unregisterStreamEventCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-unregisterStreamEventCallback' class='name expandable'>unregisterStreamEventCallback</a>( <span class='pre'>eventCallback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters the callback for notification of stream events, previously registered\n with android.media.AudioTrack.Stre...</div><div class='long'><p>Unregisters the callback for notification of stream events, previously registered\n with android.media.AudioTrack.StreamEventCallback).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventCallback</span> : Object {AudioTrack.StreamEventCallback}<div class='sub-desc'><p>the callback to unregister.</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack'>android.media.AudioTrack</span><br/><a href='source/AudioTrack.html#android-media-AudioTrack-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack-method-write' class='name expandable'>write</a>( <span class='pre'>audioData, sizeInBytes, writeMode, timestamp</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes the audio data to the audio sink for playback in streaming mode on a HW_AV_SYNC track. ...</div><div class='long'><p>Writes the audio data to the audio sink for playback in streaming mode on a HW_AV_SYNC track.\n The blocking behavior will depend on the write mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>audioData</span> : Object {ByteBuffer}<div class='sub-desc'><p>the buffer that holds the data to write, starting at the position reported\n     by <code>audioData.position()</code>.\n     <BR>Note that upon return, the buffer position (<code>audioData.position()</code>) will\n     have been advanced to reflect the amount of data that was successfully written to\n     the AudioTrack.</BR></p>\n</div></li><li><span class='pre'>sizeInBytes</span> : Number<div class='sub-desc'><p>number of bytes to write.  It is recommended but not enforced\n     that the number of bytes requested be a multiple of the frame size (sample size in\n     bytes multiplied by the channel count).\n     <BR>Note this may differ from <code>audioData.remaining()</code>, but cannot exceed it.</BR></p>\n</div></li><li><span class='pre'>writeMode</span> : Number<div class='sub-desc'><p>one of <a href=\"#!/api/android.media.AudioTrack-property-WRITE_BLOCKING\" rel=\"android.media.AudioTrack-property-WRITE_BLOCKING\" class=\"docClass\">WRITE_BLOCKING</a>, <a href=\"#!/api/android.media.AudioTrack-property-WRITE_NON_BLOCKING\" rel=\"android.media.AudioTrack-property-WRITE_NON_BLOCKING\" class=\"docClass\">WRITE_NON_BLOCKING</a>.\n     <BR>With <a href=\"#!/api/android.media.AudioTrack-property-WRITE_BLOCKING\" rel=\"android.media.AudioTrack-property-WRITE_BLOCKING\" class=\"docClass\">WRITE_BLOCKING</a>, the write will block until all data has been written\n         to the audio sink.\n     <BR>With <a href=\"#!/api/android.media.AudioTrack-property-WRITE_NON_BLOCKING\" rel=\"android.media.AudioTrack-property-WRITE_NON_BLOCKING\" class=\"docClass\">WRITE_NON_BLOCKING</a>, the write will return immediately after\n     queuing as much audio data for playback as possible without blocking.</BR></BR></p>\n</div></li><li><span class='pre'>timestamp</span> : Number<div class='sub-desc'><p>The timestamp, in nanoseconds, of the first decodable audio frame in the\n     provided audioData.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>zero or the positive number of bytes that were written, or one of the following\n    error codes.\n <ul>\n <li><a href=\"#!/api/android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" rel=\"android.media.AudioTrack-property-ERROR_INVALID_OPERATION\" class=\"docClass\">ERROR_INVALID_OPERATION</a> if the track isn't properly initialized</li>\n <li><a href=\"#!/api/android.media.AudioTrack-property-ERROR_BAD_VALUE\" rel=\"android.media.AudioTrack-property-ERROR_BAD_VALUE\" class=\"docClass\">ERROR_BAD_VALUE</a> if the parameters don't resolve to valid data and indexes</li>\n <li><a href=\"#!/api/android.media.AudioTrack-property-ERROR_DEAD_OBJECT\" rel=\"android.media.AudioTrack-property-ERROR_DEAD_OBJECT\" class=\"docClass\">ERROR_DEAD_OBJECT</a> if the AudioTrack is not valid anymore and\n    needs to be recreated. The dead object error code is not returned if some data was\n    successfully transferred. In this case, the error is returned at the next write()</li>\n <li><a href=\"#!/api/android.media.AudioTrack-property-ERROR\" rel=\"android.media.AudioTrack-property-ERROR\" class=\"docClass\">ERROR</a> in case of other error</li>\n </ul></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});