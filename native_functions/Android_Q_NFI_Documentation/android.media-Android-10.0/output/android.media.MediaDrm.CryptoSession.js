Ext.data.JsonP.android_media_MediaDrm_CryptoSession({"tagname":"class","name":"android.media.MediaDrm.CryptoSession","autodetected":{},"files":[{"filename":"CryptoSession.js","href":"CryptoSession.html#android-media-MediaDrm-CryptoSession"}],"extends":"java.lang.Object","members":[{"name":"decrypt","tagname":"method","owner":"android.media.MediaDrm.CryptoSession","id":"method-decrypt","meta":{}},{"name":"encrypt","tagname":"method","owner":"android.media.MediaDrm.CryptoSession","id":"method-encrypt","meta":{}},{"name":"sign","tagname":"method","owner":"android.media.MediaDrm.CryptoSession","id":"method-sign","meta":{}},{"name":"verify","tagname":"method","owner":"android.media.MediaDrm.CryptoSession","id":"method-verify","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaDrm.CryptoSession","short_doc":"In addition to supporting decryption of DASH Common Encrypted Media, the\n MediaDrm APIs provide the ability to secure...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaDrm.CryptoSession</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CryptoSession.html#android-media-MediaDrm-CryptoSession' target='_blank'>CryptoSession.js</a></div></pre><div class='doc-contents'><p>In addition to supporting decryption of DASH Common Encrypted Media, the\n MediaDrm APIs provide the ability to securely deliver session keys from\n an operator's session key server to a client device, based on the factory-installed\n root of trust, and then perform encrypt, decrypt, sign and verify operations\n with the session key on arbitrary user data.\n <p>\n The CryptoSession class implements generic encrypt/decrypt/sign/verify methods\n based on the established session keys.  These keys are exchanged using the\n getKeyRequest/provideKeyResponse methods.\n <p>\n Applications of this capability could include securing various types of\n purchased or private content, such as applications, books and other media,\n photos or media delivery protocols.\n <p>\n Operators can create session key servers that are functionally similar to a\n license key server, except that instead of receiving license key requests and\n providing encrypted content keys which are used specifically to decrypt A/V media\n content, the session key server receives session key requests and provides\n encrypted session keys which can be used for general purpose crypto operations.\n <p>\n A CryptoSession is obtained using getCryptoSession</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-decrypt' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaDrm.CryptoSession'>android.media.MediaDrm.CryptoSession</span><br/><a href='source/CryptoSession.html#android-media-MediaDrm-CryptoSession-method-decrypt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaDrm.CryptoSession-method-decrypt' class='name expandable'>decrypt</a>( <span class='pre'>keyid, input, iv</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Decrypt data using the CryptoSessions's cipher algorithm ...</div><div class='long'><p>Decrypt data using the CryptoSessions's cipher algorithm</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyid</span> : Object {byte[]}<div class='sub-desc'><p>specifies which key to use</p>\n</div></li><li><span class='pre'>input</span> : Object {byte[]}<div class='sub-desc'><p>the data to encrypt</p>\n</div></li><li><span class='pre'>iv</span> : Object {byte[]}<div class='sub-desc'><p>the initialization vector to use for the cipher</p>\n</div></li></ul></div></div></div><div id='method-encrypt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaDrm.CryptoSession'>android.media.MediaDrm.CryptoSession</span><br/><a href='source/CryptoSession.html#android-media-MediaDrm-CryptoSession-method-encrypt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaDrm.CryptoSession-method-encrypt' class='name expandable'>encrypt</a>( <span class='pre'>keyid, input, iv</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Encrypt data using the CryptoSession's cipher algorithm ...</div><div class='long'><p>Encrypt data using the CryptoSession's cipher algorithm</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyid</span> : Object {byte[]}<div class='sub-desc'><p>specifies which key to use</p>\n</div></li><li><span class='pre'>input</span> : Object {byte[]}<div class='sub-desc'><p>the data to encrypt</p>\n</div></li><li><span class='pre'>iv</span> : Object {byte[]}<div class='sub-desc'><p>the initialization vector to use for the cipher</p>\n</div></li></ul></div></div></div><div id='method-sign' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaDrm.CryptoSession'>android.media.MediaDrm.CryptoSession</span><br/><a href='source/CryptoSession.html#android-media-MediaDrm-CryptoSession-method-sign' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaDrm.CryptoSession-method-sign' class='name expandable'>sign</a>( <span class='pre'>keyid, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sign data using the CryptoSessions's mac algorithm. ...</div><div class='long'><p>Sign data using the CryptoSessions's mac algorithm.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyid</span> : Object {byte[]}<div class='sub-desc'><p>specifies which key to use</p>\n</div></li><li><span class='pre'>message</span> : Object {byte[]}<div class='sub-desc'><p>the data for which a signature is to be computed</p>\n</div></li></ul></div></div></div><div id='method-verify' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaDrm.CryptoSession'>android.media.MediaDrm.CryptoSession</span><br/><a href='source/CryptoSession.html#android-media-MediaDrm-CryptoSession-method-verify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaDrm.CryptoSession-method-verify' class='name expandable'>verify</a>( <span class='pre'>keyid, message, signature</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Verify a signature using the CryptoSessions's mac algorithm. ...</div><div class='long'><p>Verify a signature using the CryptoSessions's mac algorithm. Return true\n if the signatures match, false if they do no.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyid</span> : Object {byte[]}<div class='sub-desc'><p>specifies which key to use</p>\n</div></li><li><span class='pre'>message</span> : Object {byte[]}<div class='sub-desc'><p>the data to verify</p>\n</div></li><li><span class='pre'>signature</span> : Object {byte[]}<div class='sub-desc'><p>the reference signature which will be compared with the\n        computed signature</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});