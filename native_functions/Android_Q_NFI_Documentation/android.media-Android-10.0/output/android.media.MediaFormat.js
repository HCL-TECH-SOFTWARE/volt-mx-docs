Ext.data.JsonP.android_media_MediaFormat({"tagname":"class","name":"android.media.MediaFormat","autodetected":{},"files":[{"filename":"MediaFormat.js","href":"MediaFormat.html#android-media-MediaFormat"}],"extends":"java.lang.Object","members":[{"name":"COLOR_RANGE_FULL","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_RANGE_FULL","meta":{}},{"name":"COLOR_RANGE_LIMITED","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_RANGE_LIMITED","meta":{}},{"name":"COLOR_STANDARD_BT2020","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_STANDARD_BT2020","meta":{}},{"name":"COLOR_STANDARD_BT601_NTSC","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_STANDARD_BT601_NTSC","meta":{}},{"name":"COLOR_STANDARD_BT601_PAL","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_STANDARD_BT601_PAL","meta":{}},{"name":"COLOR_STANDARD_BT709","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_STANDARD_BT709","meta":{}},{"name":"COLOR_TRANSFER_HLG","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_TRANSFER_HLG","meta":{}},{"name":"COLOR_TRANSFER_LINEAR","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_TRANSFER_LINEAR","meta":{}},{"name":"COLOR_TRANSFER_SDR_VIDEO","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_TRANSFER_SDR_VIDEO","meta":{}},{"name":"COLOR_TRANSFER_ST2084","tagname":"property","owner":"android.media.MediaFormat","id":"property-COLOR_TRANSFER_ST2084","meta":{}},{"name":"KEY_AAC_DRC_ATTENUATION_FACTOR","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_DRC_ATTENUATION_FACTOR","meta":{}},{"name":"KEY_AAC_DRC_BOOST_FACTOR","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_DRC_BOOST_FACTOR","meta":{}},{"name":"KEY_AAC_DRC_EFFECT_TYPE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_DRC_EFFECT_TYPE","meta":{}},{"name":"KEY_AAC_DRC_HEAVY_COMPRESSION","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_DRC_HEAVY_COMPRESSION","meta":{}},{"name":"KEY_AAC_DRC_TARGET_REFERENCE_LEVEL","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_DRC_TARGET_REFERENCE_LEVEL","meta":{}},{"name":"KEY_AAC_ENCODED_TARGET_LEVEL","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_ENCODED_TARGET_LEVEL","meta":{}},{"name":"KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT","meta":{}},{"name":"KEY_AAC_PROFILE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_PROFILE","meta":{}},{"name":"KEY_AAC_SBR_MODE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AAC_SBR_MODE","meta":{}},{"name":"KEY_AUDIO_SESSION_ID","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_AUDIO_SESSION_ID","meta":{}},{"name":"KEY_BITRATE_MODE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_BITRATE_MODE","meta":{}},{"name":"KEY_BIT_RATE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_BIT_RATE","meta":{}},{"name":"KEY_CAPTURE_RATE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_CAPTURE_RATE","meta":{}},{"name":"KEY_CHANNEL_COUNT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_CHANNEL_COUNT","meta":{}},{"name":"KEY_CHANNEL_MASK","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_CHANNEL_MASK","meta":{}},{"name":"KEY_COLOR_FORMAT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_COLOR_FORMAT","meta":{}},{"name":"KEY_COLOR_RANGE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_COLOR_RANGE","meta":{}},{"name":"KEY_COLOR_STANDARD","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_COLOR_STANDARD","meta":{}},{"name":"KEY_COLOR_TRANSFER","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_COLOR_TRANSFER","meta":{}},{"name":"KEY_COMPLEXITY","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_COMPLEXITY","meta":{}},{"name":"KEY_CREATE_INPUT_SURFACE_SUSPENDED","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_CREATE_INPUT_SURFACE_SUSPENDED","meta":{}},{"name":"KEY_DURATION","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_DURATION","meta":{}},{"name":"KEY_FLAC_COMPRESSION_LEVEL","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_FLAC_COMPRESSION_LEVEL","meta":{}},{"name":"KEY_FRAME_RATE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_FRAME_RATE","meta":{}},{"name":"KEY_GRID_COLUMNS","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_GRID_COLUMNS","meta":{}},{"name":"KEY_GRID_ROWS","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_GRID_ROWS","meta":{}},{"name":"KEY_HAPTIC_CHANNEL_COUNT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_HAPTIC_CHANNEL_COUNT","meta":{}},{"name":"KEY_HDR10_PLUS_INFO","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_HDR10_PLUS_INFO","meta":{}},{"name":"KEY_HDR_STATIC_INFO","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_HDR_STATIC_INFO","meta":{}},{"name":"KEY_HEIGHT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_HEIGHT","meta":{}},{"name":"KEY_INTRA_REFRESH_PERIOD","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_INTRA_REFRESH_PERIOD","meta":{}},{"name":"KEY_IS_ADTS","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_IS_ADTS","meta":{}},{"name":"KEY_IS_AUTOSELECT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_IS_AUTOSELECT","meta":{}},{"name":"KEY_IS_DEFAULT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_IS_DEFAULT","meta":{}},{"name":"KEY_IS_FORCED_SUBTITLE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_IS_FORCED_SUBTITLE","meta":{}},{"name":"KEY_I_FRAME_INTERVAL","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_I_FRAME_INTERVAL","meta":{}},{"name":"KEY_LANGUAGE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_LANGUAGE","meta":{}},{"name":"KEY_LATENCY","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_LATENCY","meta":{}},{"name":"KEY_LEVEL","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_LEVEL","meta":{}},{"name":"KEY_MAX_B_FRAMES","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_MAX_B_FRAMES","meta":{}},{"name":"KEY_MAX_FPS_TO_ENCODER","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_MAX_FPS_TO_ENCODER","meta":{}},{"name":"KEY_MAX_HEIGHT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_MAX_HEIGHT","meta":{}},{"name":"KEY_MAX_INPUT_SIZE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_MAX_INPUT_SIZE","meta":{}},{"name":"KEY_MAX_PTS_GAP_TO_ENCODER","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_MAX_PTS_GAP_TO_ENCODER","meta":{}},{"name":"KEY_MAX_WIDTH","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_MAX_WIDTH","meta":{}},{"name":"KEY_MIME","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_MIME","meta":{}},{"name":"KEY_OPERATING_RATE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_OPERATING_RATE","meta":{}},{"name":"KEY_OUTPUT_REORDER_DEPTH","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_OUTPUT_REORDER_DEPTH","meta":{}},{"name":"KEY_PCM_ENCODING","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_PCM_ENCODING","meta":{}},{"name":"KEY_PREPEND_HEADER_TO_SYNC_FRAMES","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_PREPEND_HEADER_TO_SYNC_FRAMES","meta":{}},{"name":"KEY_PRIORITY","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_PRIORITY","meta":{}},{"name":"KEY_PROFILE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_PROFILE","meta":{}},{"name":"KEY_PUSH_BLANK_BUFFERS_ON_STOP","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_PUSH_BLANK_BUFFERS_ON_STOP","meta":{}},{"name":"KEY_QUALITY","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_QUALITY","meta":{}},{"name":"KEY_REPEAT_PREVIOUS_FRAME_AFTER","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_REPEAT_PREVIOUS_FRAME_AFTER","meta":{}},{"name":"KEY_ROTATION","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_ROTATION","meta":{}},{"name":"KEY_SAMPLE_RATE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_SAMPLE_RATE","meta":{}},{"name":"KEY_SLICE_HEIGHT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_SLICE_HEIGHT","meta":{}},{"name":"KEY_STRIDE","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_STRIDE","meta":{}},{"name":"KEY_TEMPORAL_LAYERING","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_TEMPORAL_LAYERING","meta":{}},{"name":"KEY_TILE_HEIGHT","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_TILE_HEIGHT","meta":{}},{"name":"KEY_TILE_WIDTH","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_TILE_WIDTH","meta":{}},{"name":"KEY_TRACK_ID","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_TRACK_ID","meta":{}},{"name":"KEY_WIDTH","tagname":"property","owner":"android.media.MediaFormat","id":"property-KEY_WIDTH","meta":{}},{"name":"MIMETYPE_AUDIO_AAC","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_AAC","meta":{}},{"name":"MIMETYPE_AUDIO_AC3","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_AC3","meta":{}},{"name":"MIMETYPE_AUDIO_AC4","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_AC4","meta":{}},{"name":"MIMETYPE_AUDIO_AMR_NB","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_AMR_NB","meta":{}},{"name":"MIMETYPE_AUDIO_AMR_WB","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_AMR_WB","meta":{}},{"name":"MIMETYPE_AUDIO_EAC3","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_EAC3","meta":{}},{"name":"MIMETYPE_AUDIO_EAC3_JOC","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_EAC3_JOC","meta":{}},{"name":"MIMETYPE_AUDIO_FLAC","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_FLAC","meta":{}},{"name":"MIMETYPE_AUDIO_G711_ALAW","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_G711_ALAW","meta":{}},{"name":"MIMETYPE_AUDIO_G711_MLAW","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_G711_MLAW","meta":{}},{"name":"MIMETYPE_AUDIO_MPEG","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_MPEG","meta":{}},{"name":"MIMETYPE_AUDIO_MSGSM","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_MSGSM","meta":{}},{"name":"MIMETYPE_AUDIO_OPUS","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_OPUS","meta":{}},{"name":"MIMETYPE_AUDIO_QCELP","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_QCELP","meta":{}},{"name":"MIMETYPE_AUDIO_RAW","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_RAW","meta":{}},{"name":"MIMETYPE_AUDIO_SCRAMBLED","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_SCRAMBLED","meta":{}},{"name":"MIMETYPE_AUDIO_VORBIS","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_AUDIO_VORBIS","meta":{}},{"name":"MIMETYPE_IMAGE_ANDROID_HEIC","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_IMAGE_ANDROID_HEIC","meta":{}},{"name":"MIMETYPE_TEXT_CEA_608","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_TEXT_CEA_608","meta":{}},{"name":"MIMETYPE_TEXT_CEA_708","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_TEXT_CEA_708","meta":{}},{"name":"MIMETYPE_TEXT_SUBRIP","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_TEXT_SUBRIP","meta":{}},{"name":"MIMETYPE_TEXT_VTT","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_TEXT_VTT","meta":{}},{"name":"MIMETYPE_VIDEO_AV1","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_AV1","meta":{}},{"name":"MIMETYPE_VIDEO_AVC","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_AVC","meta":{}},{"name":"MIMETYPE_VIDEO_DOLBY_VISION","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_DOLBY_VISION","meta":{}},{"name":"MIMETYPE_VIDEO_H263","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_H263","meta":{}},{"name":"MIMETYPE_VIDEO_HEVC","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_HEVC","meta":{}},{"name":"MIMETYPE_VIDEO_MPEG2","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_MPEG2","meta":{}},{"name":"MIMETYPE_VIDEO_MPEG4","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_MPEG4","meta":{}},{"name":"MIMETYPE_VIDEO_RAW","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_RAW","meta":{}},{"name":"MIMETYPE_VIDEO_SCRAMBLED","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_SCRAMBLED","meta":{}},{"name":"MIMETYPE_VIDEO_VP8","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_VP8","meta":{}},{"name":"MIMETYPE_VIDEO_VP9","tagname":"property","owner":"android.media.MediaFormat","id":"property-MIMETYPE_VIDEO_VP9","meta":{}},{"name":"TYPE_BYTE_BUFFER","tagname":"property","owner":"android.media.MediaFormat","id":"property-TYPE_BYTE_BUFFER","meta":{}},{"name":"TYPE_FLOAT","tagname":"property","owner":"android.media.MediaFormat","id":"property-TYPE_FLOAT","meta":{}},{"name":"TYPE_INTEGER","tagname":"property","owner":"android.media.MediaFormat","id":"property-TYPE_INTEGER","meta":{}},{"name":"TYPE_LONG","tagname":"property","owner":"android.media.MediaFormat","id":"property-TYPE_LONG","meta":{}},{"name":"TYPE_NULL","tagname":"property","owner":"android.media.MediaFormat","id":"property-TYPE_NULL","meta":{}},{"name":"TYPE_STRING","tagname":"property","owner":"android.media.MediaFormat","id":"property-TYPE_STRING","meta":{}},{"name":"containsFeature","tagname":"method","owner":"android.media.MediaFormat","id":"method-containsFeature","meta":{}},{"name":"containsKey","tagname":"method","owner":"android.media.MediaFormat","id":"method-containsKey","meta":{}},{"name":"createAudioFormat","tagname":"method","owner":"android.media.MediaFormat","id":"method-createAudioFormat","meta":{}},{"name":"createSubtitleFormat","tagname":"method","owner":"android.media.MediaFormat","id":"method-createSubtitleFormat","meta":{}},{"name":"createVideoFormat","tagname":"method","owner":"android.media.MediaFormat","id":"method-createVideoFormat","meta":{}},{"name":"getByteBuffer","tagname":"method","owner":"android.media.MediaFormat","id":"method-getByteBuffer","meta":{}},{"name":"getFeatureEnabled","tagname":"method","owner":"android.media.MediaFormat","id":"method-getFeatureEnabled","meta":{}},{"name":"getFeatures","tagname":"method","owner":"android.media.MediaFormat","id":"method-getFeatures","meta":{}},{"name":"getFloat","tagname":"method","owner":"android.media.MediaFormat","id":"method-getFloat","meta":{}},{"name":"getInteger","tagname":"method","owner":"android.media.MediaFormat","id":"method-getInteger","meta":{}},{"name":"getKeys","tagname":"method","owner":"android.media.MediaFormat","id":"method-getKeys","meta":{}},{"name":"getLong","tagname":"method","owner":"android.media.MediaFormat","id":"method-getLong","meta":{}},{"name":"getNumber","tagname":"method","owner":"android.media.MediaFormat","id":"method-getNumber","meta":{}},{"name":"getString","tagname":"method","owner":"android.media.MediaFormat","id":"method-getString","meta":{}},{"name":"getValueTypeForKey","tagname":"method","owner":"android.media.MediaFormat","id":"method-getValueTypeForKey","meta":{}},{"name":"removeFeature","tagname":"method","owner":"android.media.MediaFormat","id":"method-removeFeature","meta":{}},{"name":"removeKey","tagname":"method","owner":"android.media.MediaFormat","id":"method-removeKey","meta":{}},{"name":"setByteBuffer","tagname":"method","owner":"android.media.MediaFormat","id":"method-setByteBuffer","meta":{}},{"name":"setFeatureEnabled","tagname":"method","owner":"android.media.MediaFormat","id":"method-setFeatureEnabled","meta":{}},{"name":"setFloat","tagname":"method","owner":"android.media.MediaFormat","id":"method-setFloat","meta":{}},{"name":"setInteger","tagname":"method","owner":"android.media.MediaFormat","id":"method-setInteger","meta":{}},{"name":"setLong","tagname":"method","owner":"android.media.MediaFormat","id":"method-setLong","meta":{}},{"name":"setString","tagname":"method","owner":"android.media.MediaFormat","id":"method-setString","meta":{}},{"name":"toString","tagname":"method","owner":"android.media.MediaFormat","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaFormat","short_doc":"Encapsulates the information describing the format of media data, be it audio or video, as\n well as optional feature ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaFormat</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaFormat.html#android-media-MediaFormat' target='_blank'>MediaFormat.js</a></div></pre><div class='doc-contents'><p>Encapsulates the information describing the format of media data, be it audio or video, as\n well as optional feature metadata.\n <p>\n The format of the media data is specified as key/value pairs. Keys are strings. Values can\n be integer, long, float, String or ByteBuffer.\n <p>\n The feature metadata is specificed as string/boolean pairs.\n <p>\n Keys common to all audio/video formats, <b>all keys not marked optional are mandatory</b>:</p>\n\n<p> <table>\n <tr><th>Name</th><th>Value Type</th><th>Description</th></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_MIME\" rel=\"android.media.MediaFormat-property-KEY_MIME\" class=\"docClass\">KEY_MIME</a></td><td>String</td><td>The type of the format.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_MAX_INPUT_SIZE\" rel=\"android.media.MediaFormat-property-KEY_MAX_INPUT_SIZE\" class=\"docClass\">KEY_MAX_INPUT_SIZE</a></td><td>Integer</td><td>optional, maximum size of a buffer of input data</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_BIT_RATE\" rel=\"android.media.MediaFormat-property-KEY_BIT_RATE\" class=\"docClass\">KEY_BIT_RATE</a></td><td>Integer</td><td><b>encoder-only</b>, desired bitrate in bits/second</td></tr>\n </table></p>\n\n<p> Video formats have the following keys:\n <table>\n <tr><th>Name</th><th>Value Type</th><th>Description</th></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_WIDTH\" class=\"docClass\">KEY_WIDTH</a></td><td>Integer</td><td></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_HEIGHT\" class=\"docClass\">KEY_HEIGHT</a></td><td>Integer</td><td></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_COLOR_FORMAT\" rel=\"android.media.MediaFormat-property-KEY_COLOR_FORMAT\" class=\"docClass\">KEY_COLOR_FORMAT</a></td><td>Integer</td><td>set by the user\n         for encoders, readable in the output format of decoders</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_FRAME_RATE\" rel=\"android.media.MediaFormat-property-KEY_FRAME_RATE\" class=\"docClass\">KEY_FRAME_RATE</a></td><td>Integer or Float</td><td>required for <b>encoders</b>,\n         optional for <b>decoders</b></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_CAPTURE_RATE\" rel=\"android.media.MediaFormat-property-KEY_CAPTURE_RATE\" class=\"docClass\">KEY_CAPTURE_RATE</a></td><td>Integer</td><td></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_I_FRAME_INTERVAL\" rel=\"android.media.MediaFormat-property-KEY_I_FRAME_INTERVAL\" class=\"docClass\">KEY_I_FRAME_INTERVAL</a></td><td>Integer (or Float)</td><td><b>encoder-only</b>,\n         time-interval between key frames.\n         Float support added in android.os.Build.VERSION_CODES.N_MR1</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_INTRA_REFRESH_PERIOD\" rel=\"android.media.MediaFormat-property-KEY_INTRA_REFRESH_PERIOD\" class=\"docClass\">KEY_INTRA_REFRESH_PERIOD</a></td><td>Integer</td><td><b>encoder-only</b>, optional</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_LATENCY\" rel=\"android.media.MediaFormat-property-KEY_LATENCY\" class=\"docClass\">KEY_LATENCY</a></td><td>Integer</td><td><b>encoder-only</b>, optional</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_MAX_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_MAX_WIDTH\" class=\"docClass\">KEY_MAX_WIDTH</a></td><td>Integer</td><td><b>decoder-only</b>, optional, max-resolution width</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_MAX_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_MAX_HEIGHT\" class=\"docClass\">KEY_MAX_HEIGHT</a></td><td>Integer</td><td><b>decoder-only</b>, optional, max-resolution height</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_REPEAT_PREVIOUS_FRAME_AFTER\" rel=\"android.media.MediaFormat-property-KEY_REPEAT_PREVIOUS_FRAME_AFTER\" class=\"docClass\">KEY_REPEAT_PREVIOUS_FRAME_AFTER</a></td><td>Long</td><td><b>encoder in surface-mode\n         only</b>, optional</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_PUSH_BLANK_BUFFERS_ON_STOP\" rel=\"android.media.MediaFormat-property-KEY_PUSH_BLANK_BUFFERS_ON_STOP\" class=\"docClass\">KEY_PUSH_BLANK_BUFFERS_ON_STOP</a></td><td>Integer(1)</td><td><b>decoder rendering\n         to a surface only</b>, optional</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_TEMPORAL_LAYERING\" rel=\"android.media.MediaFormat-property-KEY_TEMPORAL_LAYERING\" class=\"docClass\">KEY_TEMPORAL_LAYERING</a></td><td>String</td><td><b>encoder only</b>, optional,\n         temporal-layering schema</td></tr>\n </table>\n Specify both <a href=\"#!/api/android.media.MediaFormat-property-KEY_MAX_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_MAX_WIDTH\" class=\"docClass\">KEY_MAX_WIDTH</a> and <a href=\"#!/api/android.media.MediaFormat-property-KEY_MAX_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_MAX_HEIGHT\" class=\"docClass\">KEY_MAX_HEIGHT</a> to enable\n adaptive playback (seamless resolution change) for a video decoder that\n supports it (<a href=\"#!/api/android.media.MediaCodecInfo.CodecCapabilities-property-FEATURE_AdaptivePlayback\" rel=\"android.media.MediaCodecInfo.CodecCapabilities-property-FEATURE_AdaptivePlayback\" class=\"docClass\">android.media.MediaCodecInfo.CodecCapabilities.FEATURE_AdaptivePlayback</a>).\n The values are used as hints for the codec: they are the maximum expected\n resolution to prepare for.  Depending on codec support, preparing for larger\n maximum resolution may require more memory even if that resolution is never\n reached.  These fields have no effect for codecs that do not support adaptive\n playback.<br /><br /></p>\n\n<p> Audio formats have the following keys:\n <table>\n <tr><th>Name</th><th>Value Type</th><th>Description</th></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_CHANNEL_COUNT\" rel=\"android.media.MediaFormat-property-KEY_CHANNEL_COUNT\" class=\"docClass\">KEY_CHANNEL_COUNT</a></td><td>Integer</td><td></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_SAMPLE_RATE\" rel=\"android.media.MediaFormat-property-KEY_SAMPLE_RATE\" class=\"docClass\">KEY_SAMPLE_RATE</a></td><td>Integer</td><td></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_PCM_ENCODING\" rel=\"android.media.MediaFormat-property-KEY_PCM_ENCODING\" class=\"docClass\">KEY_PCM_ENCODING</a></td><td>Integer</td><td>optional</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_IS_ADTS\" rel=\"android.media.MediaFormat-property-KEY_IS_ADTS\" class=\"docClass\">KEY_IS_ADTS</a></td><td>Integer</td><td>optional, if <em>decoding</em> AAC audio content, setting this key to 1 indicates that each audio frame is prefixed by the ADTS header.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_PROFILE\" rel=\"android.media.MediaFormat-property-KEY_AAC_PROFILE\" class=\"docClass\">KEY_AAC_PROFILE</a></td><td>Integer</td><td><b>encoder-only</b>, optional, if content is AAC audio, specifies the desired profile.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_SBR_MODE\" rel=\"android.media.MediaFormat-property-KEY_AAC_SBR_MODE\" class=\"docClass\">KEY_AAC_SBR_MODE</a></td><td>Integer</td><td><b>encoder-only</b>, optional, if content is AAC audio, specifies the desired SBR mode.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_TARGET_REFERENCE_LEVEL\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_TARGET_REFERENCE_LEVEL\" class=\"docClass\">KEY_AAC_DRC_TARGET_REFERENCE_LEVEL</a></td><td>Integer</td><td><b>decoder-only</b>, optional, if content is AAC audio, specifies the target reference level.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_ENCODED_TARGET_LEVEL\" rel=\"android.media.MediaFormat-property-KEY_AAC_ENCODED_TARGET_LEVEL\" class=\"docClass\">KEY_AAC_ENCODED_TARGET_LEVEL</a></td><td>Integer</td><td><b>decoder-only</b>, optional, if content is AAC audio, specifies the target reference level used at encoder.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR\" class=\"docClass\">KEY_AAC_DRC_BOOST_FACTOR</a></td><td>Integer</td><td><b>decoder-only</b>, optional, if content is AAC audio, specifies the DRC boost factor.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR\" class=\"docClass\">KEY_AAC_DRC_ATTENUATION_FACTOR</a></td><td>Integer</td><td><b>decoder-only</b>, optional, if content is AAC audio, specifies the DRC attenuation factor.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_HEAVY_COMPRESSION\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_HEAVY_COMPRESSION\" class=\"docClass\">KEY_AAC_DRC_HEAVY_COMPRESSION</a></td><td>Integer</td><td><b>decoder-only</b>, optional, if content is AAC audio, specifies whether to use heavy compression.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT\" rel=\"android.media.MediaFormat-property-KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT\" class=\"docClass\">KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT</a></td><td>Integer</td><td><b>decoder-only</b>, optional, if content is AAC audio, specifies the maximum number of channels the decoder outputs.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_EFFECT_TYPE\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_EFFECT_TYPE\" class=\"docClass\">KEY_AAC_DRC_EFFECT_TYPE</a></td><td>Integer</td><td><b>decoder-only</b>, optional, if content is AAC audio, specifies the MPEG-D DRC effect type to use.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_CHANNEL_MASK\" rel=\"android.media.MediaFormat-property-KEY_CHANNEL_MASK\" class=\"docClass\">KEY_CHANNEL_MASK</a></td><td>Integer</td><td>optional, a mask of audio channel assignments</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_FLAC_COMPRESSION_LEVEL\" rel=\"android.media.MediaFormat-property-KEY_FLAC_COMPRESSION_LEVEL\" class=\"docClass\">KEY_FLAC_COMPRESSION_LEVEL</a></td><td>Integer</td><td><b>encoder-only</b>, optional, if content is FLAC audio, specifies the desired compression level.</td></tr>\n </table></p>\n\n<p> Subtitle formats have the following keys:\n <table>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_MIME\" rel=\"android.media.MediaFormat-property-KEY_MIME\" class=\"docClass\">KEY_MIME</a></td><td>String</td><td>The type of the format.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_LANGUAGE\" rel=\"android.media.MediaFormat-property-KEY_LANGUAGE\" class=\"docClass\">KEY_LANGUAGE</a></td><td>String</td><td>The language of the content.</td></tr>\n </table></p>\n\n<p> Image formats have the following keys:\n <table>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_MIME\" rel=\"android.media.MediaFormat-property-KEY_MIME\" class=\"docClass\">KEY_MIME</a></td><td>String</td><td>The type of the format.</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_WIDTH\" class=\"docClass\">KEY_WIDTH</a></td><td>Integer</td><td></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_HEIGHT\" class=\"docClass\">KEY_HEIGHT</a></td><td>Integer</td><td></td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_COLOR_FORMAT\" rel=\"android.media.MediaFormat-property-KEY_COLOR_FORMAT\" class=\"docClass\">KEY_COLOR_FORMAT</a></td><td>Integer</td><td>set by the user\n         for encoders, readable in the output format of decoders</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_TILE_WIDTH\" class=\"docClass\">KEY_TILE_WIDTH</a></td><td>Integer</td><td>required if the image has grid</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_TILE_HEIGHT\" class=\"docClass\">KEY_TILE_HEIGHT</a></td><td>Integer</td><td>required if the image has grid</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_ROWS\" rel=\"android.media.MediaFormat-property-KEY_GRID_ROWS\" class=\"docClass\">KEY_GRID_ROWS</a></td><td>Integer</td><td>required if the image has grid</td></tr>\n <tr><td><a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_COLUMNS\" rel=\"android.media.MediaFormat-property-KEY_GRID_COLUMNS\" class=\"docClass\">KEY_GRID_COLUMNS</a></td><td>Integer</td><td>required if the image has grid</td></tr>\n </table></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-COLOR_RANGE_FULL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_RANGE_FULL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_RANGE_FULL' class='name expandable'>COLOR_RANGE_FULL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Full range. ...</div><div class='long'><p>Full range. Y, Cr and Cb component values range from 0 to 255 for 8-bit content.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-COLOR_RANGE_LIMITED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_RANGE_LIMITED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_RANGE_LIMITED' class='name expandable'>COLOR_RANGE_LIMITED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Limited range. ...</div><div class='long'><p>Limited range. Y component values range from 16 to 235 for 8-bit content.\n  Cr, Cy values range from 16 to 240 for 8-bit content.\n  This is the default for video content.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-COLOR_STANDARD_BT2020' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_STANDARD_BT2020' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_STANDARD_BT2020' class='name expandable'>COLOR_STANDARD_BT2020</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>BT.2020 color chromacity coordinates with KR = 0.2627, KB = 0.0593. ...</div><div class='long'><p>BT.2020 color chromacity coordinates with KR = 0.2627, KB = 0.0593.</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-COLOR_STANDARD_BT601_NTSC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_STANDARD_BT601_NTSC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_STANDARD_BT601_NTSC' class='name expandable'>COLOR_STANDARD_BT601_NTSC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>BT.601 525 color chromacity coordinates with KR = 0.299, KB = 0.114. ...</div><div class='long'><p>BT.601 525 color chromacity coordinates with KR = 0.299, KB = 0.114.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-COLOR_STANDARD_BT601_PAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_STANDARD_BT601_PAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_STANDARD_BT601_PAL' class='name expandable'>COLOR_STANDARD_BT601_PAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>BT.601 625 color chromacity coordinates with KR = 0.299, KB = 0.114. ...</div><div class='long'><p>BT.601 625 color chromacity coordinates with KR = 0.299, KB = 0.114.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-COLOR_STANDARD_BT709' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_STANDARD_BT709' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_STANDARD_BT709' class='name expandable'>COLOR_STANDARD_BT709</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>BT.709 color chromacity coordinates with KR = 0.2126, KB = 0.0722. ...</div><div class='long'><p>BT.709 color chromacity coordinates with KR = 0.2126, KB = 0.0722.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-COLOR_TRANSFER_HLG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_TRANSFER_HLG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_TRANSFER_HLG' class='name expandable'>COLOR_TRANSFER_HLG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>ARIB STD-B67 hybrid-log-gamma transfer function. ...</div><div class='long'><p>ARIB STD-B67 hybrid-log-gamma transfer function. This is used by some HDR video content.</p>\n<p>Defaults to: <code>&quot;7&quot;</code></p></div></div></div><div id='property-COLOR_TRANSFER_LINEAR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_TRANSFER_LINEAR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_TRANSFER_LINEAR' class='name expandable'>COLOR_TRANSFER_LINEAR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Linear transfer characteristic curve. ...</div><div class='long'><p>Linear transfer characteristic curve.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-COLOR_TRANSFER_SDR_VIDEO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_TRANSFER_SDR_VIDEO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_TRANSFER_SDR_VIDEO' class='name expandable'>COLOR_TRANSFER_SDR_VIDEO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>SMPTE 170M transfer characteristic curve used by BT.601/BT.709/BT.2020. ...</div><div class='long'><p>SMPTE 170M transfer characteristic curve used by BT.601/BT.709/BT.2020. This is the curve\n  used by most non-HDR video content.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-COLOR_TRANSFER_ST2084' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-COLOR_TRANSFER_ST2084' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-COLOR_TRANSFER_ST2084' class='name expandable'>COLOR_TRANSFER_ST2084</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>SMPTE ST 2084 transfer function. ...</div><div class='long'><p>SMPTE ST 2084 transfer function. This is used by some HDR video content.</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-KEY_AAC_DRC_ATTENUATION_FACTOR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR' class='name expandable'>KEY_AAC_DRC_ATTENUATION_FACTOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the attenuation factor allowing to adapt the dynamics of the output to the\nactual listening requirem...</div><div class='long'><p>A key describing the attenuation factor allowing to adapt the dynamics of the output to the\nactual listening requirements.\nSee <a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR\" class=\"docClass\">KEY_AAC_DRC_BOOST_FACTOR</a> for a description of the role of this attenuation\nfactor and the value range.</p>\n\n<p><p>The default value is 127 (fully apply attenuation DRC gains).\n<p>This key is only used during decoding.</p>\n<p>Defaults to: <code>&quot;aac-drc-cut-level&quot;</code></p></div></div></div><div id='property-KEY_AAC_DRC_BOOST_FACTOR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR' class='name expandable'>KEY_AAC_DRC_BOOST_FACTOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the boost factor allowing to adapt the dynamics of the output to the\nactual listening requirements. ...</div><div class='long'><p>A key describing the boost factor allowing to adapt the dynamics of the output to the\nactual listening requirements. This relies on DRC gain sequences that can be transmitted in\nthe encoded bitstream to be able to reduce the dynamics of the output signal upon request.\nThis factor enables the user to select how much of the gains are applied.</p>\n\n<p><p>Positive gains (boost) and negative gains (attenuation, see\n<a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR\" class=\"docClass\">KEY_AAC_DRC_ATTENUATION_FACTOR</a>) can be controlled separately for a better match\nto different use-cases.\n<p>Typically, attenuation gains are sent for loud signal segments, and boost gains are sent\nfor soft signal segments. If the output is listened to in a noisy environment, for example,\nthe boost factor is used to enable the positive gains, i.e. to amplify soft signal segments\nbeyond the noise floor. But for listening late at night, the attenuation\nfactor is used to enable the negative gains, to prevent loud signal from surprising\nthe listener. In applications which generally need a low dynamic range, both the boost factor\nand the attenuation factor are used in order to enable all DRC gains.\n<p>In order to prevent clipping, it is also recommended to apply the attenuation gains\nin case of a downmix and/or loudness normalization to high target reference levels.\n<p>Both the boost and the attenuation factor parameters are given as integer values\nbetween 0 and 127, representing the range of the factor of 0 (i.e. don't apply)\nto 1 (i.e. fully apply boost/attenuation gains respectively).\n<p>The default value is 127 (fully apply boost DRC gains).\n<p>This key is only used during decoding.</p>\n<p>Defaults to: <code>&quot;aac-drc-boost-level&quot;</code></p></div></div></div><div id='property-KEY_AAC_DRC_EFFECT_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_DRC_EFFECT_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_EFFECT_TYPE' class='name expandable'>KEY_AAC_DRC_EFFECT_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing for selecting the DRC effect type for MPEG-D DRC. ...</div><div class='long'><p>A key describing for selecting the DRC effect type for MPEG-D DRC.\nThe supported values are defined in ISO/IEC 23003-4:2015 and are described as follows:</p>\n\n<table>\n<tr><th>Value</th><th>Effect</th></tr>\n<tr><th>-1</th><th>Off</th></tr>\n<tr><th>0</th><th>None</th></tr>\n<tr><th>1</th><th>Late night</th></tr>\n<tr><th>2</th><th>Noisy environment</th></tr>\n<tr><th>3</th><th>Limited playback range</th></tr>\n<tr><th>4</th><th>Low playback level</th></tr>\n<tr><th>5</th><th>Dialog enhancement</th></tr>\n<tr><th>6</th><th>General compression</th></tr>\n</table>\n\n\n<p><p>The value -1 (Off) disables DRC processing, while loudness normalization may still be\nactive and dependent on KEY_AAC_DRC_TARGET_REFERENCE_LEVEL.<br>\nThe value 0 (None) automatically enables DRC processing if necessary to prevent signal\nclipping<br>\nThe value 6 (General compression) can be used for enabling MPEG-D DRC without particular\nDRC effect type request.<br>\nThe default DRC effect type is 3 (\"Limited playback range\") on mobile devices.\n<p>This key is only used during decoding.</p>\n<p>Defaults to: <code>&quot;aac-drc-effect-type&quot;</code></p></div></div></div><div id='property-KEY_AAC_DRC_HEAVY_COMPRESSION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_DRC_HEAVY_COMPRESSION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_HEAVY_COMPRESSION' class='name expandable'>KEY_AAC_DRC_HEAVY_COMPRESSION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the selection of the heavy compression profile for DRC. ...</div><div class='long'><p>A key describing the selection of the heavy compression profile for DRC.\nTwo separate DRC gain sequences can be transmitted in one bitstream: MPEG-4 DRC light\ncompression, and DVB-specific heavy compression. When selecting the application of the heavy\ncompression, one of the sequences is selected:</p>\n\n<ul>\n<li>0 enables light compression,</li>\n<li>1 enables heavy compression instead.\n</li></ul>\n\n\n<p>Note that only light compression offers the features of scaling of DRC gains\n(see <a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_BOOST_FACTOR\" class=\"docClass\">KEY_AAC_DRC_BOOST_FACTOR</a> and <a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_ATTENUATION_FACTOR\" class=\"docClass\">KEY_AAC_DRC_ATTENUATION_FACTOR</a> for the\nboost and attenuation factors, and frequency-selective (multiband) DRC.\nLight compression usually contains clipping prevention for stereo downmixing while heavy\ncompression, if additionally provided in the bitstream, is usually stronger, and contains\nclipping prevention for stereo and mono downmixing.</p>\n\n<p><p>The default is 1 (heavy compression).\n<p>This key is only used during decoding.</p>\n<p>Defaults to: <code>&quot;aac-drc-heavy-compression&quot;</code></p></div></div></div><div id='property-KEY_AAC_DRC_TARGET_REFERENCE_LEVEL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_DRC_TARGET_REFERENCE_LEVEL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_TARGET_REFERENCE_LEVEL' class='name expandable'>KEY_AAC_DRC_TARGET_REFERENCE_LEVEL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing a gain to be applied so that the output loudness matches the\nTarget Reference Level. ...</div><div class='long'><p>A key describing a gain to be applied so that the output loudness matches the\nTarget Reference Level. This is typically used to normalize loudness across program items.\nThe gain is derived as the difference between the Target Reference Level and the\nProgram Reference Level. The latter can be given in the bitstream and indicates the actual\nloudness value of the program item.</p>\n\n<p><p>The Target Reference Level controls loudness normalization for both MPEG-4 DRC and\nMPEG-D DRC.\n<p>The value is given as an integer value between\n40 and 127, and is calculated as -4 * Target Reference Level in LKFS.\nTherefore, it represents the range of -10 to -31.75 LKFS.\n<p>The default value on mobile devices is 64 (-16 LKFS).\n<p>This key is only used during decoding.</p>\n<p>Defaults to: <code>&quot;aac-target-ref-level&quot;</code></p></div></div></div><div id='property-KEY_AAC_ENCODED_TARGET_LEVEL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_ENCODED_TARGET_LEVEL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_ENCODED_TARGET_LEVEL' class='name expandable'>KEY_AAC_ENCODED_TARGET_LEVEL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the target reference level that was assumed at the encoder for\ncalculation of attenuation gains for ...</div><div class='long'><p>A key describing the target reference level that was assumed at the encoder for\ncalculation of attenuation gains for clipping prevention.</p>\n\n<p><p>If it is known, this information can be provided as an integer value between\n0 and 127, which is calculated as -4 * Encoded Target Level in LKFS.\nIf the Encoded Target Level is unknown, the value can be set to -1.\n<p>The default value is -1 (unknown).\n<p>The value is ignored when heavy compression is used (see\n<a href=\"#!/api/android.media.MediaFormat-property-KEY_AAC_DRC_HEAVY_COMPRESSION\" rel=\"android.media.MediaFormat-property-KEY_AAC_DRC_HEAVY_COMPRESSION\" class=\"docClass\">KEY_AAC_DRC_HEAVY_COMPRESSION</a>).\n<p>This key is only used during decoding.</p>\n<p>Defaults to: <code>&quot;aac-encoded-target-level&quot;</code></p></div></div></div><div id='property-KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT' class='name expandable'>KEY_AAC_MAX_OUTPUT_CHANNEL_COUNT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the maximum number of channels that can be output by the AAC decoder. ...</div><div class='long'><p>A key describing the maximum number of channels that can be output by the AAC decoder.\nBy default, the decoder will output the same number of channels as present in the encoded\nstream, if supported. Set this value to limit the number of output channels, and use\nthe downmix information in the stream, if available.</p>\n\n<p><p>Values larger than the number of channels in the content to decode are ignored.\n<p>This key is only used during decoding.</p>\n<p>Defaults to: <code>&quot;aac-max-output-channel_count&quot;</code></p></div></div></div><div id='property-KEY_AAC_PROFILE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_PROFILE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_PROFILE' class='name expandable'>KEY_AAC_PROFILE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the AAC profile to be used (AAC audio formats only). ...</div><div class='long'><p>A key describing the AAC profile to be used (AAC audio formats only).\nConstants are declared in <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel</a>.</p>\n<p>Defaults to: <code>&quot;aac-profile&quot;</code></p></div></div></div><div id='property-KEY_AAC_SBR_MODE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AAC_SBR_MODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AAC_SBR_MODE' class='name expandable'>KEY_AAC_SBR_MODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the AAC SBR mode to be used (AAC audio formats only). ...</div><div class='long'><p>A key describing the AAC SBR mode to be used (AAC audio formats only).\nThe associated value is an integer and can be set to following values:</p>\n\n<ul>\n<li>0 - no SBR should be applied</li>\n<li>1 - single rate SBR</li>\n<li>2 - double rate SBR</li>\n</ul>\n\n\n<p>Note: If this key is not defined the default SRB mode for the desired AAC profile will\nbe used.</p>\n\n<p><p>This key is only used during encoding.</p>\n<p>Defaults to: <code>&quot;aac-sbr-mode&quot;</code></p></div></div></div><div id='property-KEY_AUDIO_SESSION_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_AUDIO_SESSION_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_AUDIO_SESSION_ID' class='name expandable'>KEY_AUDIO_SESSION_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the audio session ID of the AudioTrack associated\nto a tunneled video codec. ...</div><div class='long'><p>A key describing the audio session ID of the AudioTrack associated\nto a tunneled video codec.\nThe associated value is an integer.</p>\n\n<p>@see MediaCodecInfo.CodecCapabilities#FEATURE_TunneledPlayback</p>\n<p>Defaults to: <code>&quot;audio-session-id&quot;</code></p></div></div></div><div id='property-KEY_BITRATE_MODE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_BITRATE_MODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_BITRATE_MODE' class='name expandable'>KEY_BITRATE_MODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the desired bitrate mode to be used by an encoder. ...</div><div class='long'><p>A key describing the desired bitrate mode to be used by an encoder.\nConstants are declared in <a href=\"#!/api/android.media.MediaCodecInfo.CodecCapabilities\" rel=\"android.media.MediaCodecInfo.CodecCapabilities\" class=\"docClass\">android.media.MediaCodecInfo.CodecCapabilities</a>.</p>\n\n<p>@see MediaCodecInfo.EncoderCapabilities#isBitrateModeSupported(int)</p>\n<p>Defaults to: <code>&quot;bitrate-mode&quot;</code></p></div></div></div><div id='property-KEY_BIT_RATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_BIT_RATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_BIT_RATE' class='name expandable'>KEY_BIT_RATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the average bitrate in bits/sec. ...</div><div class='long'><p>A key describing the average bitrate in bits/sec.\nThe associated value is an integer</p>\n<p>Defaults to: <code>&quot;bitrate&quot;</code></p></div></div></div><div id='property-KEY_CAPTURE_RATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_CAPTURE_RATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_CAPTURE_RATE' class='name expandable'>KEY_CAPTURE_RATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the capture rate of a video format in frames/sec. ...</div><div class='long'><p>A key describing the capture rate of a video format in frames/sec.</p>\n\n<p>\nWhen capture rate is different than the frame rate, it means that the\nvideo is acquired at a different rate than the playback, which produces\nslow motion or timelapse effect during playback. Application can use the\nvalue of this key to tell the relative speed ratio between capture and\nplayback rates when the video was recorded.\n</p>\n\n\n<p>\nThe associated value is an integer or a float.\n</p>\n\n<p>Defaults to: <code>&quot;capture-rate&quot;</code></p></div></div></div><div id='property-KEY_CHANNEL_COUNT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_CHANNEL_COUNT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_CHANNEL_COUNT' class='name expandable'>KEY_CHANNEL_COUNT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the number of channels in an audio format. ...</div><div class='long'><p>A key describing the number of channels in an audio format.\nThe associated value is an integer</p>\n<p>Defaults to: <code>&quot;channel-count&quot;</code></p></div></div></div><div id='property-KEY_CHANNEL_MASK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_CHANNEL_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_CHANNEL_MASK' class='name expandable'>KEY_CHANNEL_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the channel composition of audio content. ...</div><div class='long'><p>A key describing the channel composition of audio content. This mask\nis composed of bits drawn from channel mask definitions in <a href=\"#!/api/android.media.AudioFormat\" rel=\"android.media.AudioFormat\" class=\"docClass\">android.media.AudioFormat</a>.\nThe associated value is an integer.</p>\n<p>Defaults to: <code>&quot;channel-mask&quot;</code></p></div></div></div><div id='property-KEY_COLOR_FORMAT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_COLOR_FORMAT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_COLOR_FORMAT' class='name expandable'>KEY_COLOR_FORMAT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the color format of the content in a video format. ...</div><div class='long'><p>A key describing the color format of the content in a video format.\nConstants are declared in <a href=\"#!/api/android.media.MediaCodecInfo.CodecCapabilities\" rel=\"android.media.MediaCodecInfo.CodecCapabilities\" class=\"docClass\">android.media.MediaCodecInfo.CodecCapabilities</a>.</p>\n<p>Defaults to: <code>&quot;color-format&quot;</code></p></div></div></div><div id='property-KEY_COLOR_RANGE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_COLOR_RANGE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_COLOR_RANGE' class='name expandable'>KEY_COLOR_RANGE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the range of the component values of the video content. ...</div><div class='long'><p>An optional key describing the range of the component values of the video content.</p>\n\n<p>The associated value is an integer: 0 if unspecified, or one of the\nCOLOR_RANGE_ values.</p>\n<p>Defaults to: <code>&quot;color-range&quot;</code></p></div></div></div><div id='property-KEY_COLOR_STANDARD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_COLOR_STANDARD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_COLOR_STANDARD' class='name expandable'>KEY_COLOR_STANDARD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the color primaries, white point and\nluminance factors for video content. ...</div><div class='long'><p>An optional key describing the color primaries, white point and\nluminance factors for video content.</p>\n\n<p>The associated value is an integer: 0 if unspecified, or one of the\nCOLOR_STANDARD_ values.</p>\n<p>Defaults to: <code>&quot;color-standard&quot;</code></p></div></div></div><div id='property-KEY_COLOR_TRANSFER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_COLOR_TRANSFER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_COLOR_TRANSFER' class='name expandable'>KEY_COLOR_TRANSFER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the opto-electronic transfer function used\nfor the video content. ...</div><div class='long'><p>An optional key describing the opto-electronic transfer function used\nfor the video content.</p>\n\n<p>The associated value is an integer: 0 if unspecified, or one of the\nCOLOR_TRANSFER_ values.</p>\n<p>Defaults to: <code>&quot;color-transfer&quot;</code></p></div></div></div><div id='property-KEY_COMPLEXITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_COMPLEXITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_COMPLEXITY' class='name expandable'>KEY_COMPLEXITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the encoding complexity. ...</div><div class='long'><p>A key describing the encoding complexity.\nThe associated value is an integer.  These values are device and codec specific,\nbut lower values generally result in faster and/or less power-hungry encoding.</p>\n\n<p>@see MediaCodecInfo.EncoderCapabilities#getComplexityRange()</p>\n<p>Defaults to: <code>&quot;complexity&quot;</code></p></div></div></div><div id='property-KEY_CREATE_INPUT_SURFACE_SUSPENDED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_CREATE_INPUT_SURFACE_SUSPENDED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_CREATE_INPUT_SURFACE_SUSPENDED' class='name expandable'>KEY_CREATE_INPUT_SURFACE_SUSPENDED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If specified when configuring a video encoder that's in \"surface-input\"\nmode, it will instruct the encoder to put the...</div><div class='long'><p>If specified when configuring a video encoder that's in \"surface-input\"\nmode, it will instruct the encoder to put the surface source in suspended\nstate when it's connected. No video frames will be accepted until a resume\noperation (see <a href=\"#!/api/android.media.MediaCodec-property-PARAMETER_KEY_SUSPEND\" rel=\"android.media.MediaCodec-property-PARAMETER_KEY_SUSPEND\" class=\"docClass\">android.media.MediaCodec.PARAMETER_KEY_SUSPEND</a>), optionally with\ntimestamp specified via <a href=\"#!/api/android.media.MediaCodec-property-PARAMETER_KEY_SUSPEND_TIME\" rel=\"android.media.MediaCodec-property-PARAMETER_KEY_SUSPEND_TIME\" class=\"docClass\">android.media.MediaCodec.PARAMETER_KEY_SUSPEND_TIME</a>, is\nreceived.</p>\n\n<p>The value is an integer, with 1 indicating to create with the surface\nsource suspended, or 0 otherwise. The default value is 0.</p>\n\n<p>If this key is not set or set to 0, the surface source will accept buffers\nas soon as it's connected to the encoder (although they may not be encoded\nimmediately). This key can be used when the client wants to prepare the\nencoder session in advance, but do not want to accept buffers immediately.</p>\n<p>Defaults to: <code>&quot;create-input-buffers-suspended&quot;</code></p></div></div></div><div id='property-KEY_DURATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_DURATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_DURATION' class='name expandable'>KEY_DURATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the duration (in microseconds) of the content. ...</div><div class='long'><p>A key describing the duration (in microseconds) of the content.\nThe associated value is a long.</p>\n<p>Defaults to: <code>&quot;durationUs&quot;</code></p></div></div></div><div id='property-KEY_FLAC_COMPRESSION_LEVEL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_FLAC_COMPRESSION_LEVEL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_FLAC_COMPRESSION_LEVEL' class='name expandable'>KEY_FLAC_COMPRESSION_LEVEL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the FLAC compression level to be used (FLAC audio format only). ...</div><div class='long'><p>A key describing the FLAC compression level to be used (FLAC audio format only).\nThe associated value is an integer ranging from 0 (fastest, least compression)\nto 8 (slowest, most compression).</p>\n<p>Defaults to: <code>&quot;flac-compression-level&quot;</code></p></div></div></div><div id='property-KEY_FRAME_RATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_FRAME_RATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_FRAME_RATE' class='name expandable'>KEY_FRAME_RATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the frame rate of a video format in frames/sec. ...</div><div class='long'><p>A key describing the frame rate of a video format in frames/sec.\nThe associated value is normally an integer when the value is used by the platform,\nbut video codecs also accept float configuration values.\nSpecifically, <a href=\"#!/api/android.media.MediaExtractor-method-getTrackFormat\" rel=\"android.media.MediaExtractor-method-getTrackFormat\" class=\"docClass\">android.media.MediaExtractor</a> provides an integer\nvalue corresponding to the frame rate information of the track if specified and non-zero.\nOtherwise, this key is not present. <a href=\"#!/api/android.media.MediaCodec-method-configure\" rel=\"android.media.MediaCodec-method-configure\" class=\"docClass\">android.media.MediaCodec</a> accepts both\nfloat and integer values. This represents the desired operating frame rate if the\n<a href=\"#!/api/android.media.MediaFormat-property-KEY_OPERATING_RATE\" rel=\"android.media.MediaFormat-property-KEY_OPERATING_RATE\" class=\"docClass\">KEY_OPERATING_RATE</a> is not present and <a href=\"#!/api/android.media.MediaFormat-property-KEY_PRIORITY\" rel=\"android.media.MediaFormat-property-KEY_PRIORITY\" class=\"docClass\">KEY_PRIORITY</a> is {@code 0}\n(realtime). For video encoders this value corresponds to the intended frame rate,\nalthough encoders are expected\nto support variable frame rate based on <a href=\"#!/api/android.media.MediaCodec.BufferInfo-property-presentationTimeUs\" rel=\"android.media.MediaCodec.BufferInfo-property-presentationTimeUs\" class=\"docClass\">buffer timestamp</a>. This key is not used in the {@code MediaCodec}\n<a href=\"#!/api/android.media.MediaCodec-method-getInputFormat\" rel=\"android.media.MediaCodec-method-getInputFormat\" class=\"docClass\">input</a>/<a href=\"#!/api/android.media.MediaCodec-method-getOutputFormat\" rel=\"android.media.MediaCodec-method-getOutputFormat\" class=\"docClass\">output</a> formats,\nnor by <a href=\"#!/api/android.media.MediaMuxer-method-addTrack\" rel=\"android.media.MediaMuxer-method-addTrack\" class=\"docClass\">android.media.MediaMuxer</a>.</p>\n<p>Defaults to: <code>&quot;frame-rate&quot;</code></p></div></div></div><div id='property-KEY_GRID_COLUMNS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_GRID_COLUMNS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_GRID_COLUMNS' class='name expandable'>KEY_GRID_COLUMNS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the number of grid columns in the content in a\nMIMETYPE_IMAGE_ANDROID_HEIC track. ...</div><div class='long'><p>A key describing the number of grid columns in the content in a\n<a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> track. The associated value is an integer.</p>\n\n<p>Refer to <a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> on decoding instructions of such tracks.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_TILE_WIDTH\" class=\"docClass\">KEY_TILE_WIDTH</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_TILE_HEIGHT\" class=\"docClass\">KEY_TILE_HEIGHT</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_ROWS\" rel=\"android.media.MediaFormat-property-KEY_GRID_ROWS\" class=\"docClass\">KEY_GRID_ROWS</a></p>\n<p>Defaults to: <code>&quot;grid-cols&quot;</code></p></div></div></div><div id='property-KEY_GRID_ROWS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_GRID_ROWS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_GRID_ROWS' class='name expandable'>KEY_GRID_ROWS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the number of grid rows in the content in a\nMIMETYPE_IMAGE_ANDROID_HEIC track. ...</div><div class='long'><p>A key describing the number of grid rows in the content in a\n<a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> track. The associated value is an integer.</p>\n\n<p>Refer to <a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> on decoding instructions of such tracks.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_TILE_WIDTH\" class=\"docClass\">KEY_TILE_WIDTH</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_TILE_HEIGHT\" class=\"docClass\">KEY_TILE_HEIGHT</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_COLUMNS\" rel=\"android.media.MediaFormat-property-KEY_GRID_COLUMNS\" class=\"docClass\">KEY_GRID_COLUMNS</a></p>\n<p>Defaults to: <code>&quot;grid-rows&quot;</code></p></div></div></div><div id='property-KEY_HAPTIC_CHANNEL_COUNT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_HAPTIC_CHANNEL_COUNT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_HAPTIC_CHANNEL_COUNT' class='name expandable'>KEY_HAPTIC_CHANNEL_COUNT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the number of haptic channels in an audio format. ...</div><div class='long'><p>A key describing the number of haptic channels in an audio format.\nThe associated value is an integer.</p>\n<p>Defaults to: <code>&quot;haptic-channel-count&quot;</code></p></div></div></div><div id='property-KEY_HDR10_PLUS_INFO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_HDR10_PLUS_INFO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_HDR10_PLUS_INFO' class='name expandable'>KEY_HDR10_PLUS_INFO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the HDR10+ metadata of the video content. ...</div><div class='long'><p>An optional key describing the HDR10+ metadata of the video content.</p>\n\n<p>The associated value is a ByteBuffer containing HDR10+ metadata conforming to the\nuser_data_registered_itu_t_t35() syntax of SEI message for ST 2094-40. This key will\nbe present on:</p>\n\n<p><p>\n- The formats of output buffers of a decoder configured for HDR10+ profiles (such as\n  <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile2HDR10Plus\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile2HDR10Plus\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2HDR10Plus</a>, <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile3HDR10Plus\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile3HDR10Plus\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3HDR10Plus</a> or <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel-property-HEVCProfileMain10HDR10Plus\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel-property-HEVCProfileMain10HDR10Plus\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel.HEVCProfileMain10HDR10Plus</a>), or\n<p>\n- The formats of output buffers of an encoder configured for an HDR10+ profiles that\n  uses out-of-band metadata (such as <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile2HDR10Plus\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile2HDR10Plus\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile2HDR10Plus</a> or <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile3HDR10Plus\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel-property-VP9Profile3HDR10Plus\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel.VP9Profile3HDR10Plus</a>).</p>\n\n<p>@see MediaCodec#PARAMETER_KEY_HDR10_PLUS_INFO</p>\n<p>Defaults to: <code>&quot;hdr10-plus-info&quot;</code></p></div></div></div><div id='property-KEY_HDR_STATIC_INFO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_HDR_STATIC_INFO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_HDR_STATIC_INFO' class='name expandable'>KEY_HDR_STATIC_INFO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the static metadata of HDR (high-dynamic-range) video content. ...</div><div class='long'><p>An optional key describing the static metadata of HDR (high-dynamic-range) video content.</p>\n\n<p>The associated value is a ByteBuffer. This buffer contains the raw contents of the\nStatic Metadata Descriptor (including the descriptor ID) of an HDMI Dynamic Range and\nMastering InfoFrame as defined by CTA-861.3. This key must be provided to video decoders\nfor HDR video content unless this information is contained in the bitstream and the video\ndecoder supports an HDR-capable profile. This key must be provided to video encoders for\nHDR video content.</p>\n<p>Defaults to: <code>&quot;hdr-static-info&quot;</code></p></div></div></div><div id='property-KEY_HEIGHT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_HEIGHT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_HEIGHT' class='name expandable'>KEY_HEIGHT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the height of the content in a video format. ...</div><div class='long'><p>A key describing the height of the content in a video format.\nThe associated value is an integer</p>\n<p>Defaults to: <code>&quot;height&quot;</code></p></div></div></div><div id='property-KEY_INTRA_REFRESH_PERIOD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_INTRA_REFRESH_PERIOD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_INTRA_REFRESH_PERIOD' class='name expandable'>KEY_INTRA_REFRESH_PERIOD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the period of intra refresh in frames. ...</div><div class='long'><p>An optional key describing the period of intra refresh in frames. This is an\noptional parameter that applies only to video encoders. If encoder supports it\n(<a href=\"#!/api/android.media.MediaCodecInfo.CodecCapabilities-property-FEATURE_IntraRefresh\" rel=\"android.media.MediaCodecInfo.CodecCapabilities-property-FEATURE_IntraRefresh\" class=\"docClass\">android.media.MediaCodecInfo.CodecCapabilities.FEATURE_IntraRefresh</a>), the whole\nframe is completely refreshed after the specified period. Also for each frame,\na fix subset of macroblocks must be intra coded which leads to more constant bitrate\nthan inserting a key frame. This key is recommended for video streaming applications\nas it provides low-delay and good error-resilience. This key is ignored if the\nvideo encoder does not support the intra refresh feature. Use the output format to\nverify that this feature was enabled.\nThe associated value is an integer.</p>\n<p>Defaults to: <code>&quot;intra-refresh-period&quot;</code></p></div></div></div><div id='property-KEY_IS_ADTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_IS_ADTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_IS_ADTS' class='name expandable'>KEY_IS_ADTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key mapping to a value of 1 if the content is AAC audio and\naudio frames are prefixed with an ADTS header. ...</div><div class='long'><p>A key mapping to a value of 1 if the content is AAC audio and\naudio frames are prefixed with an ADTS header.\nThe associated value is an integer (0 or 1).\nThis key is only supported when <em>decoding</em> content, it cannot\nbe used to configure an encoder to emit ADTS output.</p>\n<p>Defaults to: <code>&quot;is-adts&quot;</code></p></div></div></div><div id='property-KEY_IS_AUTOSELECT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_IS_AUTOSELECT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_IS_AUTOSELECT' class='name expandable'>KEY_IS_AUTOSELECT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key for boolean AUTOSELECT behavior for the track. ...</div><div class='long'><p>A key for boolean AUTOSELECT behavior for the track. Tracks with AUTOSELECT=true\nare considered when automatically selecting a track without specific user\nchoice, based on the current locale.\nThis is currently only used for subtitle tracks, when the user selected\n'Default' for the captioning locale.\nThe associated value is an integer, where non-0 means TRUE.  This is an optional\nfield; if not specified, AUTOSELECT defaults to TRUE.</p>\n<p>Defaults to: <code>&quot;is-autoselect&quot;</code></p></div></div></div><div id='property-KEY_IS_DEFAULT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_IS_DEFAULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_IS_DEFAULT' class='name expandable'>KEY_IS_DEFAULT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key for boolean DEFAULT behavior for the track. ...</div><div class='long'><p>A key for boolean DEFAULT behavior for the track. The track with DEFAULT=true is\nselected in the absence of a specific user choice.\nThis is currently used in two scenarios:\n1) for subtitle tracks, when the user selected 'Default' for the captioning locale.\n2) for a <a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> track, indicating the image is the\nprimary item in the file.</p>\n\n<p>The associated value is an integer, where non-0 means TRUE.  This is an optional\nfield; if not specified, DEFAULT is considered to be FALSE.</p>\n<p>Defaults to: <code>&quot;is-default&quot;</code></p></div></div></div><div id='property-KEY_IS_FORCED_SUBTITLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_IS_FORCED_SUBTITLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_IS_FORCED_SUBTITLE' class='name expandable'>KEY_IS_FORCED_SUBTITLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key for the FORCED field for subtitle tracks. ...</div><div class='long'><p>A key for the FORCED field for subtitle tracks. True if it is a\nforced subtitle track.  Forced subtitle tracks are essential for the\ncontent and are shown even when the user turns off Captions.  They\nare used for example to translate foreign/alien dialogs or signs.\nThe associated value is an integer, where non-0 means TRUE.  This is an\noptional field; if not specified, FORCED defaults to FALSE.</p>\n<p>Defaults to: <code>&quot;is-forced-subtitle&quot;</code></p></div></div></div><div id='property-KEY_I_FRAME_INTERVAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_I_FRAME_INTERVAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_I_FRAME_INTERVAL' class='name expandable'>KEY_I_FRAME_INTERVAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the frequency of key frames expressed in seconds between key frames. ...</div><div class='long'><p>A key describing the frequency of key frames expressed in seconds between key frames.</p>\n\n<p><p>\nThis key is used by video encoders.\nA negative value means no key frames are requested after the first frame.\nA zero value means a stream containing all key frames is requested.\n<p class=note>\nMost video encoders will convert this value of the number of non-key-frames between\nkey-frames, using the {@linkplain <a href=\"#!/api/android.media.MediaFormat-property-KEY_FRAME_RATE\" rel=\"android.media.MediaFormat-property-KEY_FRAME_RATE\" class=\"docClass\">KEY_FRAME_RATE</a> frame rate} information; therefore,\nif the actual frame rate differs (e.g. input frames are dropped or the frame rate\nchanges), the <strong>time interval</strong> between key frames will not be the\nconfigured value.\n<p>\nThe associated value is an integer (or float since\nandroid.os.Build.VERSION_CODES.N_MR1).</p>\n<p>Defaults to: <code>&quot;i-frame-interval&quot;</code></p></div></div></div><div id='property-KEY_LANGUAGE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_LANGUAGE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_LANGUAGE' class='name expandable'>KEY_LANGUAGE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the language of the content, using either ISO 639-1\nor 639-2/T codes. ...</div><div class='long'><p>A key describing the language of the content, using either ISO 639-1\nor 639-2/T codes.  The associated value is a string.</p>\n<p>Defaults to: <code>&quot;language&quot;</code></p></div></div></div><div id='property-KEY_LATENCY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_LATENCY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_LATENCY' class='name expandable'>KEY_LATENCY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the desired encoder latency in frames. ...</div><div class='long'><p>An optional key describing the desired encoder latency in frames. This is an optional\nparameter that applies only to video encoders. If encoder supports it, it should ouput\nat least one output frame after being queued the specified number of frames. This key\nis ignored if the video encoder does not support the latency feature. Use the output\nformat to verify that this feature was enabled and the actual value used by the encoder.</p>\n\n<p><p>\nIf the key is not specified, the default latency will be implenmentation specific.\nThe associated value is an integer.</p>\n<p>Defaults to: <code>&quot;latency&quot;</code></p></div></div></div><div id='property-KEY_LEVEL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_LEVEL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_LEVEL' class='name expandable'>KEY_LEVEL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the desired profile to be used by an encoder. ...</div><div class='long'><p>A key describing the desired profile to be used by an encoder.\nThe associated value is an integer.\nConstants are declared in <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel</a>.\nThis key is used as a further hint when specifying a desired profile,\nand is only supported for codecs that specify a level.</p>\n\n<p><p>\nThis key is ignored if the <a href=\"#!/api/android.media.MediaFormat-property-KEY_PROFILE\" rel=\"android.media.MediaFormat-property-KEY_PROFILE\" class=\"docClass\">profile</a> is not specified.</p>\n\n<p>@see MediaCodecInfo.CodecCapabilities#profileLevels</p>\n<p>Defaults to: <code>&quot;level&quot;</code></p></div></div></div><div id='property-KEY_MAX_B_FRAMES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_MAX_B_FRAMES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_MAX_B_FRAMES' class='name expandable'>KEY_MAX_B_FRAMES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the maximum number of B frames between I or P frames,\nto be used by a video encoder. ...</div><div class='long'><p>A key describing the maximum number of B frames between I or P frames,\nto be used by a video encoder.\nThe associated value is an integer. The default value is 0, which means\nthat no B frames are allowed. Note that non-zero value does not guarantee\nB frames; it's up to the encoder to decide.</p>\n<p>Defaults to: <code>&quot;max-bframes&quot;</code></p></div></div></div><div id='property-KEY_MAX_FPS_TO_ENCODER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_MAX_FPS_TO_ENCODER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_MAX_FPS_TO_ENCODER' class='name expandable'>KEY_MAX_FPS_TO_ENCODER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Instruct the video encoder in \"surface-input\" mode to drop excessive\nframes from the source, so that the input frame ...</div><div class='long'><p>Instruct the video encoder in \"surface-input\" mode to drop excessive\nframes from the source, so that the input frame rate to the encoder\ndoes not exceed the specified fps.</p>\n\n<p>The associated value is a float, representing the max frame rate to\nfeed the encoder at.</p>\n<p>Defaults to: <code>&quot;max-fps-to-encoder&quot;</code></p></div></div></div><div id='property-KEY_MAX_HEIGHT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_MAX_HEIGHT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_MAX_HEIGHT' class='name expandable'>KEY_MAX_HEIGHT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the maximum expected height of the content in a video\ndecoder format, in case there are resolution c...</div><div class='long'><p>A key describing the maximum expected height of the content in a video\ndecoder format, in case there are resolution changes in the video content.\nThe associated value is an integer</p>\n<p>Defaults to: <code>&quot;max-height&quot;</code></p></div></div></div><div id='property-KEY_MAX_INPUT_SIZE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_MAX_INPUT_SIZE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_MAX_INPUT_SIZE' class='name expandable'>KEY_MAX_INPUT_SIZE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the maximum size in bytes of a buffer of data\n described by this MediaFormat. ...</div><div class='long'><p>A key describing the maximum size in bytes of a buffer of data\n described by this MediaFormat.\n The associated value is an integer</p>\n<p>Defaults to: <code>&quot;max-input-size&quot;</code></p></div></div></div><div id='property-KEY_MAX_PTS_GAP_TO_ENCODER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_MAX_PTS_GAP_TO_ENCODER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_MAX_PTS_GAP_TO_ENCODER' class='name expandable'>KEY_MAX_PTS_GAP_TO_ENCODER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Instruct the video encoder in \"surface-input\" mode to limit the gap of\ntimestamp between any two adjacent frames fed ...</div><div class='long'><p>Instruct the video encoder in \"surface-input\" mode to limit the gap of\ntimestamp between any two adjacent frames fed to the encoder to the\nspecified amount (in micro-second).</p>\n\n<p>The associated value is a long int. When positive, it represents the max\ntimestamp gap between two adjacent frames fed to the encoder. When negative,\nthe absolute value represents a fixed timestamp gap between any two adjacent\nframes fed to the encoder. Note that this will also apply even when the\noriginal timestamp goes backward in time. Under normal conditions, such frames\nwould be dropped and not sent to the encoder.</p>\n\n<p>The output timestamp will be restored to the original timestamp and will\nnot be affected.</p>\n\n<p>This is used in some special scenarios where input frames arrive sparingly\nbut it's undesirable to allocate more bits to any single frame, or when it's\nimportant to ensure all frames are captured (rather than captured in the\ncorrect order).</p>\n<p>Defaults to: <code>&quot;max-pts-gap-to-encoder&quot;</code></p></div></div></div><div id='property-KEY_MAX_WIDTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_MAX_WIDTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_MAX_WIDTH' class='name expandable'>KEY_MAX_WIDTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the maximum expected width of the content in a video\ndecoder format, in case there are resolution ch...</div><div class='long'><p>A key describing the maximum expected width of the content in a video\ndecoder format, in case there are resolution changes in the video content.\nThe associated value is an integer</p>\n<p>Defaults to: <code>&quot;max-width&quot;</code></p></div></div></div><div id='property-KEY_MIME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_MIME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_MIME' class='name expandable'>KEY_MIME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the mime type of the MediaFormat. ...</div><div class='long'><p>A key describing the mime type of the MediaFormat.\nThe associated value is a string.</p>\n<p>Defaults to: <code>&quot;mime&quot;</code></p></div></div></div><div id='property-KEY_OPERATING_RATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_OPERATING_RATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_OPERATING_RATE' class='name expandable'>KEY_OPERATING_RATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the desired operating frame rate for video or sample rate for audio\nthat the codec will need to oper...</div><div class='long'><p>A key describing the desired operating frame rate for video or sample rate for audio\nthat the codec will need to operate at.</p>\n\n<p><p>\nThe associated value is an integer or a float representing frames-per-second or\nsamples-per-second\n<p>\nThis is used for cases like high-speed/slow-motion video capture, where the video encoder\nformat contains the target playback rate (e.g. 30fps), but the component must be able to\nhandle the high operating capture rate (e.g. 240fps).\n<p>\nThis rate will be used by codec for resource planning and setting the operating points.</p>\n<p>Defaults to: <code>&quot;operating-rate&quot;</code></p></div></div></div><div id='property-KEY_OUTPUT_REORDER_DEPTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_OUTPUT_REORDER_DEPTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_OUTPUT_REORDER_DEPTH' class='name expandable'>KEY_OUTPUT_REORDER_DEPTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing the maximum number of non-display-order coded frames. ...</div><div class='long'><p>An optional key describing the maximum number of non-display-order coded frames.\nThis is an optional parameter that applies only to video encoders. Application should\ncheck the value for this key in the output format to see if codec will produce\nnon-display-order coded frames. If encoder supports it, the output frames' order will be\ndifferent from the display order and each frame's display order could be retrived from\n<a href=\"#!/api/android.media.MediaCodec.BufferInfo-property-presentationTimeUs\" rel=\"android.media.MediaCodec.BufferInfo-property-presentationTimeUs\" class=\"docClass\">android.media.MediaCodec.BufferInfo.presentationTimeUs</a>. Before API level 27, application may\nreceive non-display-order coded frames even though the application did not request it.\nNote: Application should not rearrange the frames to display order before feeding them\nto <a href=\"#!/api/android.media.MediaMuxer-method-writeSampleData\" rel=\"android.media.MediaMuxer-method-writeSampleData\" class=\"docClass\">android.media.MediaMuxer.writeSampleData</a>.</p>\n\n<p><p>\nThe default value is 0.</p>\n<p>Defaults to: <code>&quot;output-reorder-depth&quot;</code></p></div></div></div><div id='property-KEY_PCM_ENCODING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_PCM_ENCODING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_PCM_ENCODING' class='name expandable'>KEY_PCM_ENCODING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the raw audio sample encoding/format. ...</div><div class='long'><p>A key describing the raw audio sample encoding/format.</p>\n\n<p>The associated value is an integer, using one of the\n<a href=\"#!/api/android.media.AudioFormat\" rel=\"android.media.AudioFormat\" class=\"docClass\">android.media.AudioFormat</a>.ENCODING_PCM_ values.</p>\n\n\n\n\n<p>This is an optional key for audio decoders and encoders specifying the\ndesired raw audio sample format during <a href=\"#!/api/android.media.MediaCodec-method-configure\" rel=\"android.media.MediaCodec-method-configure\" class=\"docClass\">android.media.MediaCodec.configure(&amp;hellip;)</a> call. Use <a href=\"#!/api/android.media.MediaCodec-method-getInputFormat\" rel=\"android.media.MediaCodec-method-getInputFormat\" class=\"docClass\">android.media.MediaCodec.getInput</a>/android.media.MediaMuxer.OutputFormat(&hellip;)\nto confirm the actual format. For the PCM decoder this key specifies both\ninput and output sample encodings.</p>\n\n\n\n\n<p>This key is also used by <a href=\"#!/api/android.media.MediaExtractor\" rel=\"android.media.MediaExtractor\" class=\"docClass\">android.media.MediaExtractor</a> to specify the sample\nformat of audio data, if it is specified.</p>\n\n\n\n\n<p>If this key is missing, the raw audio sample format is signed 16-bit short.</p>\n\n<p>Defaults to: <code>&quot;pcm-encoding&quot;</code></p></div></div></div><div id='property-KEY_PREPEND_HEADER_TO_SYNC_FRAMES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_PREPEND_HEADER_TO_SYNC_FRAMES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_PREPEND_HEADER_TO_SYNC_FRAMES' class='name expandable'>KEY_PREPEND_HEADER_TO_SYNC_FRAMES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional key describing whether encoders prepend headers to sync frames (e.g. ...</div><div class='long'><p>An optional key describing whether encoders prepend headers to sync frames (e.g.\nSPS and PPS to IDR frames for H.264). This is an optional parameter that applies only\nto video encoders. A video encoder may not support this feature; the component will fail\nto configure in that case. For other components, this key is ignored.</p>\n\n<p>The value is an integer, with 1 indicating to prepend headers to every sync frames,\nor 0 otherwise. The default value is 0.</p>\n<p>Defaults to: <code>&quot;prepend-sps-pps-to-idr-frames&quot;</code></p></div></div></div><div id='property-KEY_PRIORITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_PRIORITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_PRIORITY' class='name expandable'>KEY_PRIORITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the desired codec priority. ...</div><div class='long'><p>A key describing the desired codec priority.</p>\n\n<p><p>\nThe associated value is an integer. Higher value means lower priority.\n<p>\nCurrently, only two levels are supported:<br>\n0: realtime priority - meaning that the codec shall support the given\n   performance configuration (e.g. framerate) at realtime. This should\n   only be used by media playback, capture, and possibly by realtime\n   communication scenarios if best effort performance is not suitable.<br>\n1: non-realtime priority (best effort).\n<p>\nThis is a hint used at codec configuration and resource planning - to understand\nthe realtime requirements of the application; however, due to the nature of\nmedia components, performance is not guaranteed.</p>\n<p>Defaults to: <code>&quot;priority&quot;</code></p></div></div></div><div id='property-KEY_PROFILE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_PROFILE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_PROFILE' class='name expandable'>KEY_PROFILE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the desired profile to be used by an encoder. ...</div><div class='long'><p>A key describing the desired profile to be used by an encoder.\nThe associated value is an integer.\nConstants are declared in <a href=\"#!/api/android.media.MediaCodecInfo.CodecProfileLevel\" rel=\"android.media.MediaCodecInfo.CodecProfileLevel\" class=\"docClass\">android.media.MediaCodecInfo.CodecProfileLevel</a>.\nThis key is used as a hint, and is only supported for codecs\nthat specify a profile. Note: Codecs are free to use all the available\ncoding tools at the specified profile.</p>\n\n<p>@see MediaCodecInfo.CodecCapabilities#profileLevels</p>\n<p>Defaults to: <code>&quot;profile&quot;</code></p></div></div></div><div id='property-KEY_PUSH_BLANK_BUFFERS_ON_STOP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_PUSH_BLANK_BUFFERS_ON_STOP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_PUSH_BLANK_BUFFERS_ON_STOP' class='name expandable'>KEY_PUSH_BLANK_BUFFERS_ON_STOP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If specified when configuring a video decoder rendering to a surface,\ncauses the decoder to output \"blank\", i.e. ...</div><div class='long'><p>If specified when configuring a video decoder rendering to a surface,\ncauses the decoder to output \"blank\", i.e. black frames to the surface\nwhen stopped to clear out any previously displayed contents.\nThe associated value is an integer of value 1.</p>\n<p>Defaults to: <code>&quot;push-blank-buffers-on-shutdown&quot;</code></p></div></div></div><div id='property-KEY_QUALITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_QUALITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_QUALITY' class='name expandable'>KEY_QUALITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the desired encoding quality. ...</div><div class='long'><p>A key describing the desired encoding quality.\nThe associated value is an integer.  This key is only supported for encoders\nthat are configured in constant-quality mode.  These values are device and\ncodec specific, but lower values generally result in more efficient\n(smaller-sized) encoding.</p>\n\n<p>@see MediaCodecInfo.EncoderCapabilities#getQualityRange()</p>\n<p>Defaults to: <code>&quot;quality&quot;</code></p></div></div></div><div id='property-KEY_REPEAT_PREVIOUS_FRAME_AFTER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_REPEAT_PREVIOUS_FRAME_AFTER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_REPEAT_PREVIOUS_FRAME_AFTER' class='name expandable'>KEY_REPEAT_PREVIOUS_FRAME_AFTER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Applies only when configuring a video encoder in \"surface-input\" mode. ...</div><div class='long'><p>Applies only when configuring a video encoder in \"surface-input\" mode.\nThe associated value is a long and gives the time in microseconds\nafter which the frame previously submitted to the encoder will be\nrepeated (once) if no new frame became available since.</p>\n<p>Defaults to: <code>&quot;repeat-previous-frame-after&quot;</code></p></div></div></div><div id='property-KEY_ROTATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_ROTATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_ROTATION' class='name expandable'>KEY_ROTATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the desired clockwise rotation on an output surface. ...</div><div class='long'><p>A key describing the desired clockwise rotation on an output surface.\nThis key is only used when the codec is configured using an output surface.\nThe associated value is an integer, representing degrees. Supported values\nare 0, 90, 180 or 270. This is an optional field; if not specified, rotation\ndefaults to 0.</p>\n\n<p>@see MediaCodecInfo.CodecCapabilities#profileLevels</p>\n<p>Defaults to: <code>&quot;rotation-degrees&quot;</code></p></div></div></div><div id='property-KEY_SAMPLE_RATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_SAMPLE_RATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_SAMPLE_RATE' class='name expandable'>KEY_SAMPLE_RATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the sample rate of an audio format. ...</div><div class='long'><p>A key describing the sample rate of an audio format.\nThe associated value is an integer</p>\n<p>Defaults to: <code>&quot;sample-rate&quot;</code></p></div></div></div><div id='property-KEY_SLICE_HEIGHT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_SLICE_HEIGHT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_SLICE_HEIGHT' class='name expandable'>KEY_SLICE_HEIGHT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the plane height of a multi-planar (YUV) video bytebuffer layout. ...</div><div class='long'><p>A key describing the plane height of a multi-planar (YUV) video bytebuffer layout.\nSlice height (or plane height/vertical stride) is the number of rows that must be skipped\nto get from the top of the Y plane to the top of the U plane in the bytebuffer. In essence\nthe offset of the U plane is sliceHeight * stride. The height of the U/V planes\ncan be calculated based on the color format, though it is generally undefined\nand depends on the device and release.\nThe associated value is an integer, representing number of rows.</p>\n<p>Defaults to: <code>&quot;slice-height&quot;</code></p></div></div></div><div id='property-KEY_STRIDE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_STRIDE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_STRIDE' class='name expandable'>KEY_STRIDE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the stride of the video bytebuffer layout. ...</div><div class='long'><p>A key describing the stride of the video bytebuffer layout.\nStride (or row increment) is the difference between the index of a pixel\nand that of the pixel directly underneath. For YUV 420 formats, the\nstride corresponds to the Y plane; the stride of the U and V planes can\nbe calculated based on the color format, though it is generally undefined\nand depends on the device and release.\nThe associated value is an integer, representing number of bytes.</p>\n<p>Defaults to: <code>&quot;stride&quot;</code></p></div></div></div><div id='property-KEY_TEMPORAL_LAYERING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_TEMPORAL_LAYERING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_TEMPORAL_LAYERING' class='name expandable'>KEY_TEMPORAL_LAYERING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the temporal layering schema. ...</div><div class='long'><p>A key describing the temporal layering schema.  This is an optional parameter\nthat applies only to video encoders.  Use <a href=\"#!/api/android.media.MediaCodec-method-getOutputFormat\" rel=\"android.media.MediaCodec-method-getOutputFormat\" class=\"docClass\">android.media.MediaCodec.getOutputFormat</a>\nafter <a href=\"#!/api/android.media.MediaCodec-method-configure\" rel=\"android.media.MediaCodec-method-configure\" class=\"docClass\">configure</a> to query if the encoder supports\nthe desired schema. Supported values are {@code webrtc.vp8.N-layer},\n{@code android.generic.N}, {@code android.generic.N+M} and {@code none}, where\n{@code N} denotes the total number of non-bidirectional layers (which must be at least 1)\nand {@code M} denotes the total number of bidirectional layers (which must be non-negative).</p>\n\n<p><p class=note>{@code android.generic.*} schemas have been added in android.os.Build.VERSION_CODES.N_MR1.\n<p>\nThe encoder may support fewer temporal layers, in which case the output format\nwill contain the configured schema. If the encoder does not support temporal\nlayering, the output format will not have an entry with this key.\nThe associated value is a string.</p>\n<p>Defaults to: <code>&quot;ts-schema&quot;</code></p></div></div></div><div id='property-KEY_TILE_HEIGHT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_TILE_HEIGHT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_TILE_HEIGHT' class='name expandable'>KEY_TILE_HEIGHT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the height (in pixels) of each tile of the content in a\nMIMETYPE_IMAGE_ANDROID_HEIC track. ...</div><div class='long'><p>A key describing the height (in pixels) of each tile of the content in a\n<a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> track. The associated value is an integer.</p>\n\n<p>Refer to <a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> on decoding instructions of such tracks.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_TILE_WIDTH\" class=\"docClass\">KEY_TILE_WIDTH</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_ROWS\" rel=\"android.media.MediaFormat-property-KEY_GRID_ROWS\" class=\"docClass\">KEY_GRID_ROWS</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_COLUMNS\" rel=\"android.media.MediaFormat-property-KEY_GRID_COLUMNS\" class=\"docClass\">KEY_GRID_COLUMNS</a></p>\n<p>Defaults to: <code>&quot;tile-height&quot;</code></p></div></div></div><div id='property-KEY_TILE_WIDTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_TILE_WIDTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_TILE_WIDTH' class='name expandable'>KEY_TILE_WIDTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the width (in pixels) of each tile of the content in a\nMIMETYPE_IMAGE_ANDROID_HEIC track. ...</div><div class='long'><p>A key describing the width (in pixels) of each tile of the content in a\n<a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> track. The associated value is an integer.</p>\n\n<p>Refer to <a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" rel=\"android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC\" class=\"docClass\">MIMETYPE_IMAGE_ANDROID_HEIC</a> on decoding instructions of such tracks.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_TILE_HEIGHT\" class=\"docClass\">KEY_TILE_HEIGHT</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_ROWS\" rel=\"android.media.MediaFormat-property-KEY_GRID_ROWS\" class=\"docClass\">KEY_GRID_ROWS</a>\n@see <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_COLUMNS\" rel=\"android.media.MediaFormat-property-KEY_GRID_COLUMNS\" class=\"docClass\">KEY_GRID_COLUMNS</a></p>\n<p>Defaults to: <code>&quot;tile-width&quot;</code></p></div></div></div><div id='property-KEY_TRACK_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_TRACK_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_TRACK_ID' class='name expandable'>KEY_TRACK_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing a unique ID for the content of a media track. ...</div><div class='long'><p>A key describing a unique ID for the content of a media track.</p>\n\n<p>This key is used by <a href=\"#!/api/android.media.MediaExtractor\" rel=\"android.media.MediaExtractor\" class=\"docClass\">android.media.MediaExtractor</a>. Some extractors provide multiple encodings\nof the same track (e.g. float audio tracks for FLAC and WAV may be expressed as two\ntracks via MediaExtractor: a normal PCM track for backward compatibility, and a float PCM\ntrack for added fidelity. Similarly, Dolby Vision extractor may provide a baseline SDR\nversion of a DV track.) This key can be used to identify which MediaExtractor tracks refer\nto the same underlying content.\n</p>\n\n\n<p>The associated value is an integer.</p>\n<p>Defaults to: <code>&quot;track-id&quot;</code></p></div></div></div><div id='property-KEY_WIDTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-KEY_WIDTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-KEY_WIDTH' class='name expandable'>KEY_WIDTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A key describing the width of the content in a video format. ...</div><div class='long'><p>A key describing the width of the content in a video format.\nThe associated value is an integer</p>\n<p>Defaults to: <code>&quot;width&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_AAC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_AAC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_AAC' class='name expandable'>MIMETYPE_AUDIO_AAC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/mp4a-latm&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_AC3' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_AC3' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_AC3' class='name expandable'>MIMETYPE_AUDIO_AC3</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/ac3&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_AC4' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_AC4' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_AC4' class='name expandable'>MIMETYPE_AUDIO_AC4</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/ac4&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_AMR_NB' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_AMR_NB' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_AMR_NB' class='name expandable'>MIMETYPE_AUDIO_AMR_NB</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/3gpp&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_AMR_WB' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_AMR_WB' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_AMR_WB' class='name expandable'>MIMETYPE_AUDIO_AMR_WB</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/amr-wb&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_EAC3' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_EAC3' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_EAC3' class='name expandable'>MIMETYPE_AUDIO_EAC3</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/eac3&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_EAC3_JOC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_EAC3_JOC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_EAC3_JOC' class='name expandable'>MIMETYPE_AUDIO_EAC3_JOC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/eac3-joc&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_FLAC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_FLAC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_FLAC' class='name expandable'>MIMETYPE_AUDIO_FLAC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/flac&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_G711_ALAW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_G711_ALAW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_G711_ALAW' class='name expandable'>MIMETYPE_AUDIO_G711_ALAW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/g711-alaw&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_G711_MLAW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_G711_MLAW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_G711_MLAW' class='name expandable'>MIMETYPE_AUDIO_G711_MLAW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/g711-mlaw&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_MPEG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_MPEG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_MPEG' class='name expandable'>MIMETYPE_AUDIO_MPEG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/mpeg&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_MSGSM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_MSGSM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_MSGSM' class='name expandable'>MIMETYPE_AUDIO_MSGSM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/gsm&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_OPUS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_OPUS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_OPUS' class='name expandable'>MIMETYPE_AUDIO_OPUS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/opus&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_QCELP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_QCELP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_QCELP' class='name expandable'>MIMETYPE_AUDIO_QCELP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/qcelp&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_RAW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_RAW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_RAW' class='name expandable'>MIMETYPE_AUDIO_RAW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/raw&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_SCRAMBLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_SCRAMBLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_SCRAMBLED' class='name expandable'>MIMETYPE_AUDIO_SCRAMBLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/scrambled&quot;</code></p></div></div></div><div id='property-MIMETYPE_AUDIO_VORBIS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_AUDIO_VORBIS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_VORBIS' class='name expandable'>MIMETYPE_AUDIO_VORBIS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;audio/vorbis&quot;</code></p></div></div></div><div id='property-MIMETYPE_IMAGE_ANDROID_HEIC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_IMAGE_ANDROID_HEIC' class='name expandable'>MIMETYPE_IMAGE_ANDROID_HEIC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MIME type for HEIF still image data encoded in HEVC. ...</div><div class='long'><p>MIME type for HEIF still image data encoded in HEVC.</p>\n\n<p>To decode such an image, <a href=\"#!/api/android.media.MediaCodec\" rel=\"android.media.MediaCodec\" class=\"docClass\">android.media.MediaCodec</a> decoder for\n<a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_HEVC\" rel=\"android.media.MediaFormat-property-MIMETYPE_VIDEO_HEVC\" class=\"docClass\">MIMETYPE_VIDEO_HEVC</a> shall be used. The client needs to form\nthe correct MediaFormat based on additional information in\nthe track format, and send it to <a href=\"#!/api/android.media.MediaCodec-method-configure\" rel=\"android.media.MediaCodec-method-configure\" class=\"docClass\">android.media.MediaCodec.configure</a>.</p>\n\n<p>The track's MediaFormat will come with <a href=\"#!/api/android.media.MediaFormat-property-KEY_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_WIDTH\" class=\"docClass\">KEY_WIDTH</a> and\n<a href=\"#!/api/android.media.MediaFormat-property-KEY_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_HEIGHT\" class=\"docClass\">KEY_HEIGHT</a> keys, which describes the width and height\nof the image. If the image doesn't contain grid (i.e. none of\n<a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_TILE_WIDTH\" class=\"docClass\">KEY_TILE_WIDTH</a>, <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_TILE_HEIGHT\" class=\"docClass\">KEY_TILE_HEIGHT</a>,\n<a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_ROWS\" rel=\"android.media.MediaFormat-property-KEY_GRID_ROWS\" class=\"docClass\">KEY_GRID_ROWS</a>, <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_COLUMNS\" rel=\"android.media.MediaFormat-property-KEY_GRID_COLUMNS\" class=\"docClass\">KEY_GRID_COLUMNS</a> are present}), the\ntrack will contain a single sample of coded data for the entire image,\nand the image width and height should be used to set up the decoder.</p>\n\n<p>If the image does come with grid, each sample from the track will\ncontain one tile in the grid, of which the size is described by\n<a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_TILE_WIDTH\" class=\"docClass\">KEY_TILE_WIDTH</a> and <a href=\"#!/api/android.media.MediaFormat-property-KEY_TILE_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_TILE_HEIGHT\" class=\"docClass\">KEY_TILE_HEIGHT</a>. This size\n(instead of <a href=\"#!/api/android.media.MediaFormat-property-KEY_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_WIDTH\" class=\"docClass\">KEY_WIDTH</a> and <a href=\"#!/api/android.media.MediaFormat-property-KEY_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_HEIGHT\" class=\"docClass\">KEY_HEIGHT</a>) should be\nused to set up the decoder. The track contains <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_ROWS\" rel=\"android.media.MediaFormat-property-KEY_GRID_ROWS\" class=\"docClass\">KEY_GRID_ROWS</a>\nby <a href=\"#!/api/android.media.MediaFormat-property-KEY_GRID_COLUMNS\" rel=\"android.media.MediaFormat-property-KEY_GRID_COLUMNS\" class=\"docClass\">KEY_GRID_COLUMNS</a> samples in row-major, top-row first,\nleft-to-right order. The output image should be reconstructed by\nfirst tiling the decoding results of the tiles in the correct order,\nthen trimming (before rotation is applied) on the bottom and right\nside, if the tiled area is larger than the image width and height.</p>\n<p>Defaults to: <code>&quot;image/vnd.android.heic&quot;</code></p></div></div></div><div id='property-MIMETYPE_TEXT_CEA_608' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_TEXT_CEA_608' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_TEXT_CEA_608' class='name expandable'>MIMETYPE_TEXT_CEA_608</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MIME type for CEA-608 closed caption data. ...</div><div class='long'><p>MIME type for CEA-608 closed caption data.</p>\n<p>Defaults to: <code>&quot;text/cea-608&quot;</code></p></div></div></div><div id='property-MIMETYPE_TEXT_CEA_708' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_TEXT_CEA_708' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_TEXT_CEA_708' class='name expandable'>MIMETYPE_TEXT_CEA_708</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MIME type for CEA-708 closed caption data. ...</div><div class='long'><p>MIME type for CEA-708 closed caption data.</p>\n<p>Defaults to: <code>&quot;text/cea-708&quot;</code></p></div></div></div><div id='property-MIMETYPE_TEXT_SUBRIP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_TEXT_SUBRIP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_TEXT_SUBRIP' class='name expandable'>MIMETYPE_TEXT_SUBRIP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MIME type for SubRip (SRT) container. ...</div><div class='long'><p>MIME type for SubRip (SRT) container.</p>\n<p>Defaults to: <code>&quot;application/x-subrip&quot;</code></p></div></div></div><div id='property-MIMETYPE_TEXT_VTT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_TEXT_VTT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_TEXT_VTT' class='name expandable'>MIMETYPE_TEXT_VTT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MIME type for WebVTT subtitle data. ...</div><div class='long'><p>MIME type for WebVTT subtitle data.</p>\n<p>Defaults to: <code>&quot;text/vtt&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_AV1' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_AV1' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_AV1' class='name expandable'>MIMETYPE_VIDEO_AV1</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/av01&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_AVC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_AVC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_AVC' class='name expandable'>MIMETYPE_VIDEO_AVC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/avc&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_DOLBY_VISION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_DOLBY_VISION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_DOLBY_VISION' class='name expandable'>MIMETYPE_VIDEO_DOLBY_VISION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/dolby-vision&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_H263' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_H263' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_H263' class='name expandable'>MIMETYPE_VIDEO_H263</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/3gpp&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_HEVC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_HEVC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_HEVC' class='name expandable'>MIMETYPE_VIDEO_HEVC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/hevc&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_MPEG2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_MPEG2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_MPEG2' class='name expandable'>MIMETYPE_VIDEO_MPEG2</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/mpeg2&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_MPEG4' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_MPEG4' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_MPEG4' class='name expandable'>MIMETYPE_VIDEO_MPEG4</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/mp4v-es&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_RAW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_RAW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_RAW' class='name expandable'>MIMETYPE_VIDEO_RAW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/raw&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_SCRAMBLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_SCRAMBLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_SCRAMBLED' class='name expandable'>MIMETYPE_VIDEO_SCRAMBLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/scrambled&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_VP8' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_VP8' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_VP8' class='name expandable'>MIMETYPE_VIDEO_VP8</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/x-vnd.on2.vp8&quot;</code></p></div></div></div><div id='property-MIMETYPE_VIDEO_VP9' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-MIMETYPE_VIDEO_VP9' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_VP9' class='name expandable'>MIMETYPE_VIDEO_VP9</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;video/x-vnd.on2.vp9&quot;</code></p></div></div></div><div id='property-TYPE_BYTE_BUFFER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-TYPE_BYTE_BUFFER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-TYPE_BYTE_BUFFER' class='name expandable'>TYPE_BYTE_BUFFER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-TYPE_FLOAT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-TYPE_FLOAT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-TYPE_FLOAT' class='name expandable'>TYPE_FLOAT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-TYPE_INTEGER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-TYPE_INTEGER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-TYPE_INTEGER' class='name expandable'>TYPE_INTEGER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-TYPE_LONG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-TYPE_LONG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-TYPE_LONG' class='name expandable'>TYPE_LONG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-TYPE_NULL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-TYPE_NULL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-TYPE_NULL' class='name expandable'>TYPE_NULL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-TYPE_STRING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-property-TYPE_STRING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-property-TYPE_STRING' class='name expandable'>TYPE_STRING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-containsFeature' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-containsFeature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-containsFeature' class='name expandable'>containsFeature</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true iff a feature of the given name exists in the format. ...</div><div class='long'><p>Returns true iff a feature of the given name exists in the format.</p>\n</div></div></div><div id='method-containsKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-containsKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-containsKey' class='name expandable'>containsKey</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true iff a key of the given name exists in the format. ...</div><div class='long'><p>Returns true iff a key of the given name exists in the format.</p>\n</div></div></div><div id='method-createAudioFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-createAudioFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-createAudioFormat' class='name expandable'>createAudioFormat</a>( <span class='pre'>mime, sampleRate, channelCount</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a minimal audio format. ...</div><div class='long'><p>Creates a minimal audio format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mime</span> : String<div class='sub-desc'><p>The mime type of the content.</p>\n</div></li><li><span class='pre'>sampleRate</span> : Number<div class='sub-desc'><p>The sampling rate of the content.</p>\n</div></li><li><span class='pre'>channelCount</span> : Number<div class='sub-desc'><p>The number of audio channels in the content.</p>\n</div></li></ul></div></div></div><div id='method-createSubtitleFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-createSubtitleFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-createSubtitleFormat' class='name expandable'>createSubtitleFormat</a>( <span class='pre'>mime, language</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a minimal subtitle format. ...</div><div class='long'><p>Creates a minimal subtitle format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mime</span> : String<div class='sub-desc'><p>The mime type of the content.</p>\n</div></li><li><span class='pre'>language</span> : String<div class='sub-desc'><p>The language of the content, using either ISO 639-1 or 639-2/T\n        codes.  Specify null or \"und\" if language information is only included\n        in the content.  (This will also work if there are multiple language\n        tracks in the content.)</p>\n</div></li></ul></div></div></div><div id='method-createVideoFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-createVideoFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-createVideoFormat' class='name expandable'>createVideoFormat</a>( <span class='pre'>mime, width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a minimal video format. ...</div><div class='long'><p>Creates a minimal video format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mime</span> : String<div class='sub-desc'><p>The mime type of the content.</p>\n</div></li><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The width of the content (in pixels)</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>The height of the content (in pixels)</p>\n</div></li></ul></div></div></div><div id='method-getByteBuffer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getByteBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getByteBuffer' class='name expandable'>getByteBuffer</a>( <span class='pre'></span> ) : Object {java.nio.ByteBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of a ByteBuffer key, or the default value if the key is missing. ...</div><div class='long'><p>Returns the value of a ByteBuffer key, or the default value if the key is missing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.ByteBuffer}</span><div class='sub-desc'><p>defaultValue if the key does not exist or the stored value for the key is null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the stored value for the key is int, long, float or String</p>\n</div></li></ul></div></div></div><div id='method-getFeatureEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getFeatureEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getFeatureEnabled' class='name expandable'>getFeatureEnabled</a>( <span class='pre'>feature</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether a feature is to be enabled ({@code true}) or disabled\n ({@code false}). ...</div><div class='long'><p>Returns whether a feature is to be enabled ({@code true}) or disabled\n ({@code false}).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>feature</span> : String<div class='sub-desc'><p>the name of a MediaCodecInfo.CodecCapabilities feature.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the feature was neither set to be enabled\n         nor to be disabled.</p>\n</div></li></ul></div></div></div><div id='method-getFeatures' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getFeatures' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getFeatures' class='name expandable'>getFeatures</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Set view of the features contained in this MediaFormat. ...</div><div class='long'><p>Returns a Set view of the features contained in this MediaFormat.</p>\n\n<p> The set is backed by the MediaFormat object, so changes to the format are reflected in the\n set, and vice-versa. If the format is modified while an iteration over the set is in progress\n (except through the iterator's own remove operation), the results of the iteration are\n undefined. The set supports element removal, which removes the corresponding mapping from the\n format, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations.\n It does not support the add or addAll operations.</p>\n</div></div></div><div id='method-getFloat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getFloat' class='name expandable'>getFloat</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of an float key, or the default value if the key is missing. ...</div><div class='long'><p>Returns the value of an float key, or the default value if the key is missing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>defaultValue if the key does not exist or the stored value for the key is null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the stored value for the key is int, long, ByteBuffer or\n         String</p>\n</div></li></ul></div></div></div><div id='method-getInteger' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getInteger' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getInteger' class='name expandable'>getInteger</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of an integer key, or the default value if the key is missing. ...</div><div class='long'><p>Returns the value of an integer key, or the default value if the key is missing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>defaultValue if the key does not exist or the stored value for the key is null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the stored value for the key is long, float, ByteBuffer or\n         String</p>\n</div></li></ul></div></div></div><div id='method-getKeys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getKeys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getKeys' class='name expandable'>getKeys</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Set view of the keys contained in this MediaFormat. ...</div><div class='long'><p>Returns a Set view of the keys contained in this MediaFormat.</p>\n\n<p> The set is backed by the MediaFormat object, so changes to the format are reflected in the\n set, and vice-versa. If the format is modified while an iteration over the set is in progress\n (except through the iterator's own remove operation), the results of the iteration are\n undefined. The set supports element removal, which removes the corresponding mapping from the\n format, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations.\n It does not support the add or addAll operations.</p>\n</div></div></div><div id='method-getLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getLong' class='name expandable'>getLong</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of an long key, or the default value if the key is missing. ...</div><div class='long'><p>Returns the value of an long key, or the default value if the key is missing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>defaultValue if the key does not exist or the stored value for the key is null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the stored value for the key is int, float, ByteBuffer or\n         String</p>\n</div></li></ul></div></div></div><div id='method-getNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getNumber' class='name expandable'>getNumber</a>( <span class='pre'></span> ) : Object {java.lang.Number}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of a numeric key, or the default value if the key is missing. ...</div><div class='long'><p>Returns the value of a numeric key, or the default value if the key is missing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Number}</span><div class='sub-desc'><p>defaultValue if the key does not exist or the stored value for the key is null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the stored value for the key is ByteBuffer or String</p>\n</div></li></ul></div></div></div><div id='method-getString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getString' class='name expandable'>getString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of an string key, or the default value if the key is missing. ...</div><div class='long'><p>Returns the value of an string key, or the default value if the key is missing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>defaultValue if the key does not exist or the stored value for the key is null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassCastException if the stored value for the key is int, long, float or ByteBuffer</p>\n</div></li></ul></div></div></div><div id='method-getValueTypeForKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-getValueTypeForKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-getValueTypeForKey' class='name expandable'>getValueTypeForKey</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value type for a key. ...</div><div class='long'><p>Returns the value type for a key. If the key does not exist, it returns TYPE_NULL.</p>\n</div></div></div><div id='method-removeFeature' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-removeFeature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-removeFeature' class='name expandable'>removeFeature</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a given feature setting if present. ...</div><div class='long'><p>Removes a given feature setting if present. Has no effect if the feature setting is not\n present.</p>\n</div></div></div><div id='method-removeKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-removeKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-removeKey' class='name expandable'>removeKey</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a value of a given key if present. ...</div><div class='long'><p>Removes a value of a given key if present. Has no effect if the key is not present.</p>\n</div></div></div><div id='method-setByteBuffer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-setByteBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-setByteBuffer' class='name expandable'>setByteBuffer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of a ByteBuffer key. ...</div><div class='long'><p>Sets the value of a ByteBuffer key.\n <p>\n If value is {@code null}, it sets a null value that behaves similarly to a missing key.\n This could be used prior to API level os.Build.VERSION_CODES#Q to effectively\n remove a key.</p>\n</div></div></div><div id='method-setFeatureEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-setFeatureEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-setFeatureEnabled' class='name expandable'>setFeatureEnabled</a>( <span class='pre'>feature</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether a feature is to be enabled ({@code true}) or disabled\n ({@code false}). ...</div><div class='long'><p>Sets whether a feature is to be enabled ({@code true}) or disabled\n ({@code false}).</p>\n\n<p> If {@code enabled} is {@code true}, the feature is requested to be present.\n Otherwise, the feature is requested to be not present.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>feature</span> : String<div class='sub-desc'><p>the name of a MediaCodecInfo.CodecCapabilities feature.\n@see MediaCodecList#findDecoderForFormat\n@see MediaCodecList#findEncoderForFormat\n@see MediaCodecInfo.CodecCapabilities#isFormatSupported</p>\n</div></li></ul></div></div></div><div id='method-setFloat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-setFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-setFloat' class='name expandable'>setFloat</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of a float key. ...</div><div class='long'><p>Sets the value of a float key.</p>\n</div></div></div><div id='method-setInteger' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-setInteger' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-setInteger' class='name expandable'>setInteger</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of an integer key. ...</div><div class='long'><p>Sets the value of an integer key.</p>\n</div></div></div><div id='method-setLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-setLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-setLong' class='name expandable'>setLong</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of a long key. ...</div><div class='long'><p>Sets the value of a long key.</p>\n</div></div></div><div id='method-setString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-setString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-setString' class='name expandable'>setString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the value of a string key. ...</div><div class='long'><p>Sets the value of a string key.\n <p>\n If value is {@code null}, it sets a null value that behaves similarly to a missing key.\n This could be used prior to API level os.Build.VERSION_CODES#Q to effectively\n remove a key.</p>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaFormat'>android.media.MediaFormat</span><br/><a href='source/MediaFormat.html#android-media-MediaFormat-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaFormat-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});