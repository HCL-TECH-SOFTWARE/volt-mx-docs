Ext.data.JsonP.android_media_MediaPlayer_OnMediaTimeDiscontinuityListener({"tagname":"class","name":"android.media.MediaPlayer.OnMediaTimeDiscontinuityListener","autodetected":{},"files":[{"filename":"OnMediaTimeDiscontinuityListener.js","href":"OnMediaTimeDiscontinuityListener.html#android-media-MediaPlayer-OnMediaTimeDiscontinuityListener"}],"members":[{"name":"onMediaTimeDiscontinuity","tagname":"method","owner":"android.media.MediaPlayer.OnMediaTimeDiscontinuityListener","id":"method-onMediaTimeDiscontinuity","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaPlayer.OnMediaTimeDiscontinuityListener","short_doc":"Interface definition of a callback to be invoked when discontinuity in the normal progression\n of the media time is d...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnMediaTimeDiscontinuityListener.html#android-media-MediaPlayer-OnMediaTimeDiscontinuityListener' target='_blank'>OnMediaTimeDiscontinuityListener.js</a></div></pre><div class='doc-contents'><p>Interface definition of a callback to be invoked when discontinuity in the normal progression\n of the media time is detected.\n The \"normal progression\" of media time is defined as the expected increase of the playback\n position when playing media, relative to the playback speed (for instance every second, media\n time increases by two seconds when playing at 2x).<br>\n Discontinuities are encountered in the following cases:\n <ul>\n <li>when the player is starved for data and cannot play anymore</li>\n <li>when the player encounters a playback error</li>\n <li>when the a seek operation starts, and when it's completed</li>\n <li>when the playback speed changes</li>\n <li>when the playback state changes</li>\n <li>when the player is reset</li>\n </ul>\n See the\n Handler)\n method to set a listener for these events.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onMediaTimeDiscontinuity' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer.OnMediaTimeDiscontinuityListener'>android.media.MediaPlayer.OnMediaTimeDiscontinuityListener</span><br/><a href='source/OnMediaTimeDiscontinuityListener.html#android-media-MediaPlayer-OnMediaTimeDiscontinuityListener-method-onMediaTimeDiscontinuity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer.OnMediaTimeDiscontinuityListener-method-onMediaTimeDiscontinuity' class='name expandable'>onMediaTimeDiscontinuity</a>( <span class='pre'>mp, mts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to indicate a time discontinuity has occured. ...</div><div class='long'><p>Called to indicate a time discontinuity has occured.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mp</span> : Object {MediaPlayer}<div class='sub-desc'><p>the MediaPlayer for which the discontinuity has occured.</p>\n</div></li><li><span class='pre'>mts</span> : Object {MediaTimestamp}<div class='sub-desc'><p>the timestamp that correlates media time, system time and clock rate,\n     or MediaTimestamp.TIMESTAMP_UNKNOWN in an error case.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});