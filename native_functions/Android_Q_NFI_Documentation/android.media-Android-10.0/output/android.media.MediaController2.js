Ext.data.JsonP.android_media_MediaController2({"tagname":"class","name":"android.media.MediaController2","autodetected":{},"files":[{"filename":"MediaController2.js","href":"MediaController2.html#android-media-MediaController2"}],"extends":"java.lang.Object","members":[{"name":"cancelSessionCommand","tagname":"method","owner":"android.media.MediaController2","id":"method-cancelSessionCommand","meta":{}},{"name":"close","tagname":"method","owner":"android.media.MediaController2","id":"method-close","meta":{}},{"name":"getConnectedToken","tagname":"method","owner":"android.media.MediaController2","id":"method-getConnectedToken","meta":{}},{"name":"isPlaybackActive","tagname":"method","owner":"android.media.MediaController2","id":"method-isPlaybackActive","meta":{}},{"name":"sendSessionCommand","tagname":"method","owner":"android.media.MediaController2","id":"method-sendSessionCommand","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaController2","short_doc":"implements java.lang.AutoCloseable\n\nThis API is not generally intended for third party application developers. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaController2</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaController2.html#android-media-MediaController2' target='_blank'>MediaController2.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>This API is not generally intended for third party application developers.\n Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n Library</a> for consistent behavior across all devices.</p>\n\n<p> Allows an app to interact with an active <a href=\"#!/api/android.media.MediaSession2\" rel=\"android.media.MediaSession2\" class=\"docClass\">android.media.MediaSession2</a> or a\n <a href=\"#!/api/android.media.MediaSession2Service\" rel=\"android.media.MediaSession2Service\" class=\"docClass\">android.media.MediaSession2Service</a> which would provide <a href=\"#!/api/android.media.MediaSession2\" rel=\"android.media.MediaSession2\" class=\"docClass\">android.media.MediaSession2</a>. Media buttons and other\n commands can be sent to the session.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-cancelSessionCommand' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2'>android.media.MediaController2</span><br/><a href='source/MediaController2.html#android-media-MediaController2-method-cancelSessionCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2-method-cancelSessionCommand' class='name expandable'>cancelSessionCommand</a>( <span class='pre'>token</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancels the session command previously sent. ...</div><div class='long'><p>Cancels the session command previously sent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {Object}<div class='sub-desc'><p>the token which is returned from <a href=\"#!/api/android.media.MediaController2-method-sendSessionCommand\" rel=\"android.media.MediaController2-method-sendSessionCommand\" class=\"docClass\">sendSessionCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2'>android.media.MediaController2</span><br/><a href='source/MediaController2.html#android-media-MediaController2-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getConnectedToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2'>android.media.MediaController2</span><br/><a href='source/MediaController2.html#android-media-MediaController2-method-getConnectedToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2-method-getConnectedToken' class='name expandable'>getConnectedToken</a>( <span class='pre'></span> ) : Object {android.media.Session2Token}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns android.media.Session2Token of the connected session. ...</div><div class='long'><p>Returns <a href=\"#!/api/android.media.Session2Token\" rel=\"android.media.Session2Token\" class=\"docClass\">android.media.Session2Token</a> of the connected session.\n If it is not connected yet, it returns {@code null}.\n <p>\n This may differ with the <a href=\"#!/api/android.media.Session2Token\" rel=\"android.media.Session2Token\" class=\"docClass\">android.media.Session2Token</a> from the constructor. For example, if the\n controller is created with the token for <a href=\"#!/api/android.media.MediaSession2Service\" rel=\"android.media.MediaSession2Service\" class=\"docClass\">android.media.MediaSession2Service</a>, this would return\n token for the <a href=\"#!/api/android.media.MediaSession2\" rel=\"android.media.MediaSession2\" class=\"docClass\">android.media.MediaSession2</a> in the service.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.Session2Token}</span><div class='sub-desc'><p>Session2Token of the connected session, or {@code null} if not connected</p>\n</div></li></ul></div></div></div><div id='method-isPlaybackActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2'>android.media.MediaController2</span><br/><a href='source/MediaController2.html#android-media-MediaController2-method-isPlaybackActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2-method-isPlaybackActive' class='name expandable'>isPlaybackActive</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the session's playback is active. ...</div><div class='long'><p>Returns whether the session's playback is active.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if playback active. {@code false} otherwise.\n@see ControllerCallback#onPlaybackActiveChanged(MediaController2, boolean)</p>\n</div></li></ul></div></div></div><div id='method-sendSessionCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2'>android.media.MediaController2</span><br/><a href='source/MediaController2.html#android-media-MediaController2-method-sendSessionCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2-method-sendSessionCommand' class='name expandable'>sendSessionCommand</a>( <span class='pre'>command, args</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends a session command to the session ...</div><div class='long'><p>Sends a session command to the session\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>command</span> : Object {Session2Command}<div class='sub-desc'><p>the session command</p>\n</div></li><li><span class='pre'>args</span> : Object {Bundle}<div class='sub-desc'><p>optional arguments</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which will be sent together in ControllerCallback.onCommandResult\n        when its result is received.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});