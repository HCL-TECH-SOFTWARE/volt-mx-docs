Ext.data.JsonP.android_media_MediaRecorder({"tagname":"class","name":"android.media.MediaRecorder","autodetected":{},"files":[{"filename":"MediaRecorder.js","href":"MediaRecorder.html#android-media-MediaRecorder"}],"extends":"java.lang.Object","members":[{"name":"MEDIA_ERROR_SERVER_DIED","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_ERROR_SERVER_DIED","meta":{}},{"name":"MEDIA_RECORDER_ERROR_UNKNOWN","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_ERROR_UNKNOWN","meta":{}},{"name":"MEDIA_RECORDER_INFO_MAX_DURATION_REACHED","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_INFO_MAX_DURATION_REACHED","meta":{}},{"name":"MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING","meta":{}},{"name":"MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED","meta":{}},{"name":"MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED","meta":{}},{"name":"MEDIA_RECORDER_INFO_UNKNOWN","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_INFO_UNKNOWN","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_DURATION_MS","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_DURATION_MS","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_LIST_END","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_LIST_END","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_LIST_START","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_LIST_START","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INFO_TYPE","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INFO_TYPE","meta":{}},{"name":"MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS","tagname":"property","owner":"android.media.MediaRecorder","id":"property-MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS","meta":{}},{"name":"addOnRoutingChangedListener","tagname":"method","owner":"android.media.MediaRecorder","id":"method-addOnRoutingChangedListener","meta":{}},{"name":"getActiveMicrophones","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getActiveMicrophones","meta":{}},{"name":"getActiveRecordingConfiguration","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getActiveRecordingConfiguration","meta":{}},{"name":"getAudioSourceMax","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getAudioSourceMax","meta":{}},{"name":"getMaxAmplitude","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getMaxAmplitude","meta":{}},{"name":"getMetrics","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getMetrics","meta":{}},{"name":"getPreferredDevice","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getPreferredDevice","meta":{}},{"name":"getRoutedDevice","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getRoutedDevice","meta":{}},{"name":"getSurface","tagname":"method","owner":"android.media.MediaRecorder","id":"method-getSurface","meta":{}},{"name":"isSystemOnlyAudioSource","tagname":"method","owner":"android.media.MediaRecorder","id":"method-isSystemOnlyAudioSource","meta":{}},{"name":"pause","tagname":"method","owner":"android.media.MediaRecorder","id":"method-pause","meta":{}},{"name":"prepare","tagname":"method","owner":"android.media.MediaRecorder","id":"method-prepare","meta":{}},{"name":"registerAudioRecordingCallback","tagname":"method","owner":"android.media.MediaRecorder","id":"method-registerAudioRecordingCallback","meta":{}},{"name":"release","tagname":"method","owner":"android.media.MediaRecorder","id":"method-release","meta":{}},{"name":"removeOnRoutingChangedListener","tagname":"method","owner":"android.media.MediaRecorder","id":"method-removeOnRoutingChangedListener","meta":{}},{"name":"reset","tagname":"method","owner":"android.media.MediaRecorder","id":"method-reset","meta":{}},{"name":"resume","tagname":"method","owner":"android.media.MediaRecorder","id":"method-resume","meta":{}},{"name":"setAudioChannels","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setAudioChannels","meta":{}},{"name":"setAudioEncoder","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setAudioEncoder","meta":{}},{"name":"setAudioEncodingBitRate","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setAudioEncodingBitRate","meta":{}},{"name":"setAudioSamplingRate","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setAudioSamplingRate","meta":{}},{"name":"setAudioSource","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setAudioSource","meta":{}},{"name":"setCamera","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setCamera","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.media.MediaRecorder-method-getSurface\" rel=\"android.media.MediaRecorder-method-getSurface\" class=\"docClass\">getSurface</a> and the android.hardware.camera2 API instead.</p>\n"}}},{"name":"setCaptureRate","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setCaptureRate","meta":{}},{"name":"setInputSurface","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setInputSurface","meta":{}},{"name":"setLocation","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setLocation","meta":{}},{"name":"setMaxDuration","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setMaxDuration","meta":{}},{"name":"setMaxFileSize","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setMaxFileSize","meta":{}},{"name":"setNextOutputFile","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setNextOutputFile","meta":{}},{"name":"setOnErrorListener","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setOnErrorListener","meta":{}},{"name":"setOnInfoListener","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setOnInfoListener","meta":{}},{"name":"setOrientationHint","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setOrientationHint","meta":{}},{"name":"setOutputFile","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setOutputFile","meta":{}},{"name":"setOutputFormat","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setOutputFormat","meta":{}},{"name":"setPreferredDevice","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setPreferredDevice","meta":{}},{"name":"setPreferredMicrophoneDirection","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setPreferredMicrophoneDirection","meta":{}},{"name":"setPreferredMicrophoneFieldDimension","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setPreferredMicrophoneFieldDimension","meta":{}},{"name":"setPreviewDisplay","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setPreviewDisplay","meta":{}},{"name":"setProfile","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setProfile","meta":{}},{"name":"setVideoEncoder","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setVideoEncoder","meta":{}},{"name":"setVideoEncodingBitRate","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setVideoEncodingBitRate","meta":{}},{"name":"setVideoEncodingProfileLevel","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setVideoEncodingProfileLevel","meta":{}},{"name":"setVideoFrameRate","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setVideoFrameRate","meta":{}},{"name":"setVideoSize","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setVideoSize","meta":{}},{"name":"setVideoSource","tagname":"method","owner":"android.media.MediaRecorder","id":"method-setVideoSource","meta":{}},{"name":"start","tagname":"method","owner":"android.media.MediaRecorder","id":"method-start","meta":{}},{"name":"stop","tagname":"method","owner":"android.media.MediaRecorder","id":"method-stop","meta":{}},{"name":"unregisterAudioRecordingCallback","tagname":"method","owner":"android.media.MediaRecorder","id":"method-unregisterAudioRecordingCallback","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaRecorder","short_doc":"implements android.media.AudioRouting\n\n implements android.media.AudioRecordingMonitor\n\n implements android.media.Aud...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaRecorder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaRecorder.html#android-media-MediaRecorder' target='_blank'>MediaRecorder.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.media.AudioRouting\" rel=\"android.media.AudioRouting\" class=\"docClass\">android.media.AudioRouting</a></p>\n\n<p> implements <a href=\"#!/api/android.media.AudioRecordingMonitor\" rel=\"android.media.AudioRecordingMonitor\" class=\"docClass\">android.media.AudioRecordingMonitor</a></p>\n\n<p> implements <a href=\"#!/api/android.media.AudioRecordingMonitorClient\" rel=\"android.media.AudioRecordingMonitorClient\" class=\"docClass\">android.media.AudioRecordingMonitorClient</a></p>\n\n<p> implements <a href=\"#!/api/android.media.MicrophoneDirection\" rel=\"android.media.MicrophoneDirection\" class=\"docClass\">android.media.MicrophoneDirection</a></p>\n\n<p>Used to record audio and video. The recording control is based on a\n simple state machine (see below).</p>\n\n<p> <p><img src=\"{@docRoot}images/mediarecorder_state_diagram.gif\" border=\"0\" />\n </p></p>\n\n<p> <p>A common case of using MediaRecorder to record audio works as follows:</p>\n\n<p> <pre>MediaRecorder recorder = new MediaRecorder();\n recorder.setAudioSource(MediaRecorder.AudioSource.MIC);\n recorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);\n recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);\n recorder.setOutputFile(PATH_NAME);\n recorder.prepare();\n recorder.start();   // Recording is now started\n ...\n recorder.stop();\n recorder.reset();   // You can reuse the object by going back to setAudioSource() step\n recorder.release(); // Now the object cannot be reused\n </pre></p>\n\n<p> <p>Applications may want to register for informational and error\n events in order to be informed of some internal update and possible\n runtime errors during recording. Registration for such events is\n done by setting the appropriate listeners (via calls\n (to <a href=\"#!/api/android.media.MediaRecorder-method-setOnInfoListener\" rel=\"android.media.MediaRecorder-method-setOnInfoListener\" class=\"docClass\">setOnInfoListener</a>(OnInfoListener)setOnInfoListener and/or\n <a href=\"#!/api/android.media.MediaRecorder-method-setOnErrorListener\" rel=\"android.media.MediaRecorder-method-setOnErrorListener\" class=\"docClass\">setOnErrorListener</a>(OnErrorListener)setOnErrorListener).\n In order to receive the respective callback associated with these listeners,\n applications are required to create MediaRecorder objects on threads with a\n Looper running (the main UI thread by default already has a Looper running).</p>\n\n<p> <p><strong>Note:</strong> Currently, MediaRecorder does not work on the emulator.</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about how to use MediaRecorder for recording video, read the\n <a href=\"{@docRoot}guide/topics/media/camera.html#capture-video\">Camera</a> developer guide.\n For more information about how to use MediaRecorder for recording sound, read the\n <a href=\"{@docRoot}guide/topics/media/audio-capture.html\">Audio Capture</a> developer guide.</p>\n </div></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-MEDIA_ERROR_SERVER_DIED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_ERROR_SERVER_DIED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_ERROR_SERVER_DIED' class='name expandable'>MEDIA_ERROR_SERVER_DIED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Media server died. ...</div><div class='long'><p>Media server died. In this case, the application must release the\n MediaRecorder object and instantiate a new one.\n @see android.media.MediaRecorder.OnErrorListener</p>\n<p>Defaults to: <code>&quot;100&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_ERROR_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_ERROR_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_ERROR_UNKNOWN' class='name expandable'>MEDIA_RECORDER_ERROR_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unspecified media recorder error. ...</div><div class='long'><p>Unspecified media recorder error.\n @see android.media.MediaRecorder.OnErrorListener</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_INFO_MAX_DURATION_REACHED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_DURATION_REACHED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_DURATION_REACHED' class='name expandable'>MEDIA_RECORDER_INFO_MAX_DURATION_REACHED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A maximum duration had been setup and has now been reached. ...</div><div class='long'><p>A maximum duration had been setup and has now been reached.\n @see android.media.MediaRecorder.OnInfoListener</p>\n<p>Defaults to: <code>&quot;800&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING' class='name expandable'>MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A maximum filesize had been setup and current recorded file size\n has reached 90% of the limit. ...</div><div class='long'><p>A maximum filesize had been setup and current recorded file size\n has reached 90% of the limit. This is sent once per file upon\n reaching/passing the 90% limit. To continue the recording, applicaiton\n should use <a href=\"#!/api/android.media.MediaRecorder-method-setNextOutputFile\" rel=\"android.media.MediaRecorder-method-setNextOutputFile\" class=\"docClass\">setNextOutputFile</a> to set the next output file.\n Otherwise, recording will stop when reaching maximum file size.\n @see android.media.MediaRecorder.OnInfoListener</p>\n<p>Defaults to: <code>&quot;802&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED' class='name expandable'>MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A maximum filesize had been setup and has now been reached. ...</div><div class='long'><p>A maximum filesize had been setup and has now been reached.\n Note: This event will not be sent if application already set\n next output file through <a href=\"#!/api/android.media.MediaRecorder-method-setNextOutputFile\" rel=\"android.media.MediaRecorder-method-setNextOutputFile\" class=\"docClass\">setNextOutputFile</a>.\n @see android.media.MediaRecorder.OnInfoListener</p>\n<p>Defaults to: <code>&quot;801&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED' class='name expandable'>MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A maximum filesize had been reached and MediaRecorder has switched\n output to a new file set by application setNextOu...</div><div class='long'><p>A maximum filesize had been reached and MediaRecorder has switched\n output to a new file set by application <a href=\"#!/api/android.media.MediaRecorder-method-setNextOutputFile\" rel=\"android.media.MediaRecorder-method-setNextOutputFile\" class=\"docClass\">setNextOutputFile</a>.\n For best practice, application should use this event to keep track\n of whether the file previously set has been used or not.\n @see android.media.MediaRecorder.OnInfoListener</p>\n<p>Defaults to: <code>&quot;803&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_INFO_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_INFO_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_UNKNOWN' class='name expandable'>MEDIA_RECORDER_INFO_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unspecified media recorder info. ...</div><div class='long'><p>Unspecified media recorder info.\n @see android.media.MediaRecorder.OnInfoListener</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_COMPLETION_STATUS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Signal the completion of the track for the recording session. ...</div><div class='long'><p>Signal the completion of the track for the recording session.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1000&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_DATA_KBYTES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the total number of data (in kilo-bytes) encoded. ...</div><div class='long'><p>Provide the total number of data (in kilo-bytes) encoded.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1009&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_DURATION_MS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_DURATION_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_DURATION_MS' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_DURATION_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the track duration information. ...</div><div class='long'><p>Provide the track duration information.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1003&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_ENCODED_FRAMES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the total number of recordd frames. ...</div><div class='long'><p>Provide the total number of recordd frames.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1005&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_INITIAL_DELAY_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the elapsed time measuring from the start of the recording\n till the first output frame of the given track is...</div><div class='long'><p>Provide the elapsed time measuring from the start of the recording\n till the first output frame of the given track is received, excluding\n any intentional start time offset of a recording session for the\n purpose of eliminating the recording sound in the recorded file.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1007&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_LIST_END' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_LIST_END' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_LIST_END' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_LIST_END</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;2000&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_LIST_START' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_LIST_START' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_LIST_START' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_LIST_START</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>informational events for individual tracks, for testing purpose. ...</div><div class='long'><p>informational events for individual tracks, for testing purpose.\n The track informational event usually contains two parts in the ext1\n arg of the onInfo() callback: bit 31-28 contains the track id; and\n the rest of the 28 bits contains the informational event defined here.\n For example, ext1 = (1 &lt;&lt; 28 | MEDIA_RECORDER_TRACK_INFO_TYPE) if the\n track id is 1 for informational event MEDIA_RECORDER_TRACK_INFO_TYPE;\n while ext1 = (0 &lt;&lt; 28 | MEDIA_RECORDER_TRACK_INFO_TYPE) if the track\n id is 0 for informational event MEDIA_RECORDER_TRACK_INFO_TYPE. The\n application should extract the track id and the type of informational\n event from ext1, accordingly.</p>\n\n<p> FIXME:\n Please update the comment for onInfo also when these\n events are unhidden so that application knows how to extract the track\n id and the informational event type from onInfo callback.</p>\n\n<p> {@hide}</p>\n<p>Defaults to: <code>&quot;1000&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_MAX_CHUNK_DUR_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the max chunk duration in time (ms) for the given track. ...</div><div class='long'><p>Provide the max chunk duration in time (ms) for the given track.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1004&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_PROGRESS_IN_TIME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate the recording progress in time (ms) during recording. ...</div><div class='long'><p>Indicate the recording progress in time (ms) during recording.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1001&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_START_OFFSET_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the start time difference (delay) betweeen this track and\n the start of the movie. ...</div><div class='long'><p>Provide the start time difference (delay) betweeen this track and\n the start of the movie.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1008&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INFO_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INFO_TYPE' class='name expandable'>MEDIA_RECORDER_TRACK_INFO_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate the track type: 0 for Audio and 1 for Video. ...</div><div class='long'><p>Indicate the track type: 0 for Audio and 1 for Video.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1002&quot;</code></p></div></div></div><div id='property-MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-property-MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS' class='name expandable'>MEDIA_RECORDER_TRACK_INTER_CHUNK_TIME_MS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the max spacing between neighboring chunks for the given track. ...</div><div class='long'><p>Provide the max spacing between neighboring chunks for the given track.\n {@hide}</p>\n<p>Defaults to: <code>&quot;1006&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addOnRoutingChangedListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-addOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-addOnRoutingChangedListener' class='name expandable'>addOnRoutingChangedListener</a>( <span class='pre'>listener, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an android.media.AudioRouting.OnRoutingChangedListener to receive notifications of routing\n changes on this Medi...</div><div class='long'><p>Adds an android.media.AudioRouting.OnRoutingChangedListener to receive notifications of routing\n changes on this MediaRecorder.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioRouting.OnRoutingChangedListener}<div class='sub-desc'><p>The AudioRouting.OnRoutingChangedListener interface to receive\n notifications of rerouting events.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Specifies the Handler object for the thread on which to execute\n the callback. If <code>null</code>, the handler on the main looper will be used.</p>\n</div></li></ul></div></div></div><div id='method-getActiveMicrophones' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getActiveMicrophones' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getActiveMicrophones' class='name expandable'>getActiveMicrophones</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return A lists of android.media.MicrophoneInfo representing the active microphones. ...</div><div class='long'><p>Return A lists of <a href=\"#!/api/android.media.MicrophoneInfo\" rel=\"android.media.MicrophoneInfo\" class=\"docClass\">android.media.MicrophoneInfo</a> representing the active microphones.\n By querying channel mapping for each active microphone, developer can know how\n the microphone is used by each channels or a capture stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a lists of MicrophoneInfo representing the active microphones</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an error occurs</p>\n</div></li></ul></div></div></div><div id='method-getActiveRecordingConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getActiveRecordingConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getActiveRecordingConfiguration' class='name expandable'>getActiveRecordingConfiguration</a>( <span class='pre'></span> ) : Object {android.media.AudioRecordingConfiguration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current active audio recording for this audio recorder. ...</div><div class='long'><p>Returns the current active audio recording for this audio recorder.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.AudioRecordingConfiguration}</span><div class='sub-desc'><p>a valid AudioRecordingConfiguration if this recorder is active\n or null otherwise.\n@see AudioRecordingConfiguration</p>\n</div></li></ul></div></div></div><div id='method-getAudioSourceMax' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getAudioSourceMax' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getAudioSourceMax' class='name expandable'>getAudioSourceMax</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the maximum value for audio sources. ...</div><div class='long'><p>Gets the maximum value for audio sources.\n@see android.media.MediaRecorder.AudioSource</p>\n</div></div></div><div id='method-getMaxAmplitude' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getMaxAmplitude' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getMaxAmplitude' class='name expandable'>getMaxAmplitude</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum absolute amplitude that was sampled since the last\n call to this method. ...</div><div class='long'><p>Returns the maximum absolute amplitude that was sampled since the last\n call to this method. Call this only after the setAudioSource().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum absolute amplitude measured since the last call, or\n 0 when called for the first time</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before\n the audio source has been set.</p>\n</div></li></ul></div></div></div><div id='method-getMetrics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getMetrics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getMetrics' class='name expandable'>getMetrics</a>( <span class='pre'></span> ) : Object {android.os.PersistableBundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return Metrics data about the current Mediarecorder instance. ...</div><div class='long'><p>Return Metrics data about the current Mediarecorder instance.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.PersistableBundle}</span><div class='sub-desc'><p>a PersistableBundle containing the set of attributes and values\n available for the media being generated by this instance of\n MediaRecorder.\n The attributes are descibed in MetricsConstants.</p>\n\n<p>  Additional vendor-specific fields may also be present in\n  the return value.</p>\n</div></li></ul></div></div></div><div id='method-getPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getPreferredDevice' class='name expandable'>getPreferredDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the selected input device specified by setPreferredDevice. ...</div><div class='long'><p>Returns the selected input device specified by <a href=\"#!/api/android.media.MediaRecorder-method-setPreferredDevice\" rel=\"android.media.MediaRecorder-method-setPreferredDevice\" class=\"docClass\">setPreferredDevice</a>. Note that this\n is not guaranteed to correspond to the actual device being used for recording.</p>\n</div></div></div><div id='method-getRoutedDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getRoutedDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getRoutedDevice' class='name expandable'>getRoutedDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an android.media.AudioDeviceInfo identifying the current routing of this MediaRecorder\n Note: The query is on...</div><div class='long'><p>Returns an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> identifying the current routing of this MediaRecorder\n Note: The query is only valid if the MediaRecorder is currently recording.\n If the recorder is not recording, the returned device can be null or correspond to previously\n selected device when the recorder was last active.</p>\n</div></div></div><div id='method-getSurface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-getSurface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-getSurface' class='name expandable'>getSurface</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the surface to record from when using SURFACE video source. ...</div><div class='long'><p>Gets the surface to record from when using SURFACE video source.</p>\n\n<p> <p> May only be called after <a href=\"#!/api/android.media.MediaRecorder-method-prepare\" rel=\"android.media.MediaRecorder-method-prepare\" class=\"docClass\">prepare</a>. Frames rendered to the Surface before\n <a href=\"#!/api/android.media.MediaRecorder-method-start\" rel=\"android.media.MediaRecorder-method-start\" class=\"docClass\">start</a> will be discarded.</p></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before <a href=\"#!/api/android.media.MediaRecorder-method-prepare\" rel=\"android.media.MediaRecorder-method-prepare\" class=\"docClass\">prepare</a>, after\n <a href=\"#!/api/android.media.MediaRecorder-method-stop\" rel=\"android.media.MediaRecorder-method-stop\" class=\"docClass\">stop</a>, or is called when VideoSource is not set to SURFACE.\n@see <a href=\"#!/api/android.media.MediaRecorder.VideoSource\" rel=\"android.media.MediaRecorder.VideoSource\" class=\"docClass\">android.media.MediaRecorder.VideoSource</a></p>\n</div></li></ul></div></div></div><div id='method-isSystemOnlyAudioSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-isSystemOnlyAudioSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-isSystemOnlyAudioSource' class='name expandable'>isSystemOnlyAudioSource</a>( <span class='pre'>source, source</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Number<div class='sub-desc'><p>An audio source to test</p>\n</div></li><li><span class='pre'>source</span> : Object<div class='sub-desc'><p>An audio source to test</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the source is only visible to system components</p>\n</div></li></ul></div></div></div><div id='method-pause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-pause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-pause' class='name expandable'>pause</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Pauses recording. ...</div><div class='long'><p>Pauses recording. Call this after start(). You may resume recording\n with resume() without reconfiguration, as opposed to stop(). It does\n nothing if the recording is already paused.</p>\n\n<p> When the recording is paused and resumed, the resulting output would\n be as if nothing happend during paused period, immediately switching\n to the resumed scene.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before start() or after\n stop()</p>\n</div></li></ul></div></div></div><div id='method-prepare' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-prepare' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-prepare' class='name expandable'>prepare</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepares the recorder to begin capturing and encoding data. ...</div><div class='long'><p>Prepares the recorder to begin capturing and encoding data. This method\n must be called after setting up the desired audio and video sources,\n encoders, file format, etc., but before start().</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called after\n start() or before setOutputFormat().</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if prepare fails otherwise.</p>\n</div></li></ul></div></div></div><div id='method-registerAudioRecordingCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-registerAudioRecordingCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-registerAudioRecordingCallback' class='name expandable'>registerAudioRecordingCallback</a>( <span class='pre'>executor, cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to be notified of audio capture changes via a\n android.media.AudioManager.AudioRecordingCallback. ...</div><div class='long'><p>Register a callback to be notified of audio capture changes via a\n <a href=\"#!/api/android.media.AudioManager.AudioRecordingCallback\" rel=\"android.media.AudioManager.AudioRecordingCallback\" class=\"docClass\">android.media.AudioManager.AudioRecordingCallback</a>. A callback is received when the capture path\n configuration changes (pre-processing, format, sampling rate...) or capture is\n silenced/unsilenced by the system.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>Executor to handle the callbacks.</p>\n</div></li><li><span class='pre'>cb</span> : Object {AudioManager.AudioRecordingCallback}<div class='sub-desc'><p>non-null callback to register</p>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-release' class='name expandable'>release</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Releases resources associated with this MediaRecorder object. ...</div><div class='long'><p>Releases resources associated with this MediaRecorder object.\n It is good practice to call this method when you're done\n using the MediaRecorder. In particular, whenever an Activity\n of an application is paused (its onPause() method is called),\n or stopped (its onStop() method is called), this method should be\n invoked to release the MediaRecorder object, unless the application\n has a special need to keep the object around. In addition to\n unnecessary resources (such as memory and instances of codecs)\n being held, failure to call this method immediately if a\n MediaRecorder object is no longer needed may also lead to\n continuous battery consumption for mobile devices, and recording\n failure for other applications if no multiple instances of the\n same codec are supported on a device. Even if multiple instances\n of the same codec are supported, some performance degradation\n may be expected when unnecessary multiple instances are used\n at the same time.</p>\n</div></div></div><div id='method-removeOnRoutingChangedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-removeOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-removeOnRoutingChangedListener' class='name expandable'>removeOnRoutingChangedListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an android.media.AudioRouting.OnRoutingChangedListener which has been previously added\n to receive rerouting ...</div><div class='long'><p>Removes an android.media.AudioRouting.OnRoutingChangedListener which has been previously added\n to receive rerouting notifications.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioRouting.OnRoutingChangedListener}<div class='sub-desc'><p>The previously added AudioRouting.OnRoutingChangedListener interface\n to remove.</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restarts the MediaRecorder to its idle state. ...</div><div class='long'><p>Restarts the MediaRecorder to its idle state. After calling\n this method, you will have to configure it again as if it had just been\n constructed.</p>\n</div></div></div><div id='method-resume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-resume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-resume' class='name expandable'>resume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resumes recording. ...</div><div class='long'><p>Resumes recording. Call this after start(). It does nothing if the\n recording is not paused.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before start() or after\n stop()\n@see <a href=\"#!/api/android.media.MediaRecorder-method-pause\" rel=\"android.media.MediaRecorder-method-pause\" class=\"docClass\">android.media.MediaRecorder.pause</a></p>\n</div></li></ul></div></div></div><div id='method-setAudioChannels' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setAudioChannels' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setAudioChannels' class='name expandable'>setAudioChannels</a>( <span class='pre'>numChannels</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the number of audio channels for recording. ...</div><div class='long'><p>Sets the number of audio channels for recording. Call this method before prepare().\n Prepare() may perform additional checks on the parameter to make sure whether the\n specified number of audio channels are applicable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>numChannels</span> : Number<div class='sub-desc'><p>the number of audio channels. Usually it is either 1 (mono) or 2\n (stereo).</p>\n</div></li></ul></div></div></div><div id='method-setAudioEncoder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setAudioEncoder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setAudioEncoder' class='name expandable'>setAudioEncoder</a>( <span class='pre'>audio_encoder</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio encoder to be used for recording. ...</div><div class='long'><p>Sets the audio encoder to be used for recording. If this method is not\n called, the output file will not contain an audio track. Call this after\n setOutputFormat() but before prepare().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>audio_encoder</span> : Number<div class='sub-desc'><p>the audio encoder to use.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before\n setOutputFormat() or after prepare().\n@see <a href=\"#!/api/android.media.MediaRecorder.AudioEncoder\" rel=\"android.media.MediaRecorder.AudioEncoder\" class=\"docClass\">android.media.MediaRecorder.AudioEncoder</a></p>\n</div></li></ul></div></div></div><div id='method-setAudioEncodingBitRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setAudioEncodingBitRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setAudioEncodingBitRate' class='name expandable'>setAudioEncodingBitRate</a>( <span class='pre'>bitRate</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio encoding bit rate for recording. ...</div><div class='long'><p>Sets the audio encoding bit rate for recording. Call this method before prepare().\n Prepare() may perform additional checks on the parameter to make sure whether the\n specified bit rate is applicable, and sometimes the passed bitRate will be clipped\n internally to ensure the audio recording can proceed smoothly based on the\n capabilities of the platform.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bitRate</span> : Number<div class='sub-desc'><p>the audio encoding bit rate in bits per second.</p>\n</div></li></ul></div></div></div><div id='method-setAudioSamplingRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setAudioSamplingRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setAudioSamplingRate' class='name expandable'>setAudioSamplingRate</a>( <span class='pre'>samplingRate</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio sampling rate for recording. ...</div><div class='long'><p>Sets the audio sampling rate for recording. Call this method before prepare().\n Prepare() may perform additional checks on the parameter to make sure whether\n the specified audio sampling rate is applicable. The sampling rate really depends\n on the format for the audio recording, as well as the capabilities of the platform.\n For instance, the sampling rate supported by AAC audio coding standard ranges\n from 8 to 96 kHz, the sampling rate supported by AMRNB is 8kHz, and the sampling\n rate supported by AMRWB is 16kHz. Please consult with the related audio coding\n standard for the supported audio sampling rate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>samplingRate</span> : Number<div class='sub-desc'><p>the sampling rate for audio in samples per second.</p>\n</div></li></ul></div></div></div><div id='method-setAudioSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setAudioSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setAudioSource' class='name expandable'>setAudioSource</a>( <span class='pre'>audioSource</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio source to be used for recording. ...</div><div class='long'><p>Sets the audio source to be used for recording. If this method is not\n called, the output file will not contain an audio track. The source needs\n to be specified before setting recording-parameters or encoders. Call\n this only before setOutputFormat().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>audioSource</span> : Number<div class='sub-desc'><p>the audio source to use</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called after setOutputFormat()\n@see android.media.MediaRecorder.AudioSource</p>\n</div></li></ul></div></div></div><div id='method-setCamera' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setCamera' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setCamera' class='name expandable'>setCamera</a>( <span class='pre'>c</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets a android.hardware.Camera to use for recording. ...</div><div class='long'><p>Sets a android.hardware.Camera to use for recording.</p>\n\n<p> <p>Use this function to switch quickly between preview and capture mode without a teardown of\n the camera object. android.hardware.Camera.unlock() should be called before\n this. Must call before <a href=\"#!/api/android.media.MediaRecorder-method-prepare\" rel=\"android.media.MediaRecorder-method-prepare\" class=\"docClass\">prepare</a>.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.media.MediaRecorder-method-getSurface\" rel=\"android.media.MediaRecorder-method-getSurface\" class=\"docClass\">getSurface</a> and the android.hardware.camera2 API instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {Camera}<div class='sub-desc'><p>the Camera to use for recording</p>\n</div></li></ul></div></div></div><div id='method-setCaptureRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setCaptureRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setCaptureRate' class='name expandable'>setCaptureRate</a>( <span class='pre'>fps</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set video frame capture rate. ...</div><div class='long'><p>Set video frame capture rate. This can be used to set a different video frame capture\n rate than the recorded video's playback rate. This method also sets the recording mode\n to time lapse. In time lapse video recording, only video is recorded. Audio related\n parameters are ignored when a time lapse recording session starts, if an application\n sets them.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fps</span> : Number<div class='sub-desc'><p>Rate at which frames should be captured in frames per second.\n The fps can go as low as desired. However the fastest fps will be limited by the hardware.\n For resolutions that can be captured by the video camera, the fastest fps can be computed using\n android.hardware.Camera.Parameters.getPreviewFpsRange(int[]). For higher\n resolutions the fastest fps may be more restrictive.\n Note that the recorder cannot guarantee that frames will be captured at the\n given rate due to camera/encoder limitations. However it tries to be as close as\n possible.</p>\n</div></li></ul></div></div></div><div id='method-setInputSurface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setInputSurface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setInputSurface' class='name expandable'>setInputSurface</a>( <span class='pre'>surface</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Configures the recorder to use a persistent surface when using SURFACE video source. ...</div><div class='long'><p>Configures the recorder to use a persistent surface when using SURFACE video source.\n <p> May only be called before <a href=\"#!/api/android.media.MediaRecorder-method-prepare\" rel=\"android.media.MediaRecorder-method-prepare\" class=\"docClass\">prepare</a>. If called, <a href=\"#!/api/android.media.MediaRecorder-method-getSurface\" rel=\"android.media.MediaRecorder-method-getSurface\" class=\"docClass\">getSurface</a> should\n not be used and will throw IllegalStateException. Frames rendered to the Surface\n before <a href=\"#!/api/android.media.MediaRecorder-method-start\" rel=\"android.media.MediaRecorder-method-start\" class=\"docClass\">start</a> will be discarded.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>a persistent input surface created by\n           MediaCodec.createPersistentInputSurface</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called after <a href=\"#!/api/android.media.MediaRecorder-method-prepare\" rel=\"android.media.MediaRecorder-method-prepare\" class=\"docClass\">prepare</a> and before\n <a href=\"#!/api/android.media.MediaRecorder-method-stop\" rel=\"android.media.MediaRecorder-method-stop\" class=\"docClass\">stop</a>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the surface was not created by\n           MediaCodec.createPersistentInputSurface.\n@see MediaCodec#createPersistentInputSurface\n@see MediaRecorder.VideoSource</p>\n</div></li></ul></div></div></div><div id='method-setLocation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setLocation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setLocation' class='name expandable'>setLocation</a>( <span class='pre'>latitude, longitude</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set and store the geodata (latitude and longitude) in the output file. ...</div><div class='long'><p>Set and store the geodata (latitude and longitude) in the output file.\n This method should be called before prepare(). The geodata is\n stored in udta box if the output format is OutputFormat.THREE_GPP\n or OutputFormat.MPEG_4, and is ignored for other output formats.\n The geodata is stored according to ISO-6709 standard.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>latitude</span> : Number<div class='sub-desc'><p>latitude in degrees. Its value must be in the\n range [-90, 90].</p>\n</div></li><li><span class='pre'>longitude</span> : Number<div class='sub-desc'><p>longitude in degrees. Its value must be in the\n range [-180, 180].</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the given latitude or\n longitude is out of range.</p>\n</div></li></ul></div></div></div><div id='method-setMaxDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setMaxDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setMaxDuration' class='name expandable'>setMaxDuration</a>( <span class='pre'>max_duration_ms</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the maximum duration (in ms) of the recording session. ...</div><div class='long'><p>Sets the maximum duration (in ms) of the recording session.\n Call this after setOutFormat() but before prepare().\n After recording reaches the specified duration, a notification\n will be sent to the android.media.MediaRecorder.OnInfoListener\n with a \"what\" code of <a href=\"#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_DURATION_REACHED\" rel=\"android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_DURATION_REACHED\" class=\"docClass\">MEDIA_RECORDER_INFO_MAX_DURATION_REACHED</a>\n and recording will be stopped. Stopping happens asynchronously, there\n is no guarantee that the recorder will have stopped by the time the\n listener is notified.</p>\n\n<p> <p>When using MPEG-4 container (<a href=\"#!/api/android.media.MediaRecorder-method-setOutputFormat\" rel=\"android.media.MediaRecorder-method-setOutputFormat\" class=\"docClass\">setOutputFormat</a>(int) with\n android.media.MediaMuxer.OutputFormat.MPEG_4), it is recommended to set maximum duration that fits the use\n case. Setting a larger than required duration may result in a larger than needed output file\n because of space reserved for MOOV box expecting large movie data in this recording session.\n  Unused space of MOOV box is turned into FREE box in the output file.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>max_duration_ms</span> : Number<div class='sub-desc'><p>the maximum duration in ms (if zero or negative, disables the duration limit)</p>\n</div></li></ul></div></div></div><div id='method-setMaxFileSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setMaxFileSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setMaxFileSize' class='name expandable'>setMaxFileSize</a>( <span class='pre'>max_filesize_bytes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the maximum filesize (in bytes) of the recording session. ...</div><div class='long'><p>Sets the maximum filesize (in bytes) of the recording session.\n Call this after setOutFormat() but before prepare().\n After recording reaches the specified filesize, a notification\n will be sent to the android.media.MediaRecorder.OnInfoListener\n with a \"what\" code of <a href=\"#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED\" rel=\"android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED\" class=\"docClass\">MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED</a>\n and recording will be stopped. Stopping happens asynchronously, there\n is no guarantee that the recorder will have stopped by the time the\n listener is notified.</p>\n\n<p> <p>When using MPEG-4 container (<a href=\"#!/api/android.media.MediaRecorder-method-setOutputFormat\" rel=\"android.media.MediaRecorder-method-setOutputFormat\" class=\"docClass\">setOutputFormat</a>(int) with\n android.media.MediaMuxer.OutputFormat.MPEG_4), it is recommended to set maximum filesize that fits the use\n case. Setting a larger than required filesize may result in a larger than needed output file\n because of space reserved for MOOV box expecting large movie data in this recording session.\n Unused space of MOOV box is turned into FREE box in the output file.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>max_filesize_bytes</span> : Number<div class='sub-desc'><p>the maximum filesize in bytes (if zero or negative, disables the limit)</p>\n</div></li></ul></div></div></div><div id='method-setNextOutputFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setNextOutputFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setNextOutputFile' class='name expandable'>setNextOutputFile</a>( <span class='pre'>file</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the next output file to be used when the maximum filesize is reached on the prior\n output setOutputFile or setNe...</div><div class='long'><p>Sets the next output file to be used when the maximum filesize is reached on the prior\n output <a href=\"#!/api/android.media.MediaRecorder-method-setOutputFile\" rel=\"android.media.MediaRecorder-method-setOutputFile\" class=\"docClass\">setOutputFile</a> or <a href=\"#!/api/android.media.MediaRecorder-method-setNextOutputFile\" rel=\"android.media.MediaRecorder-method-setNextOutputFile\" class=\"docClass\">setNextOutputFile</a>). File should be seekable.\n After setting the next output file, application should not use the file until <a href=\"#!/api/android.media.MediaRecorder-method-stop\" rel=\"android.media.MediaRecorder-method-stop\" class=\"docClass\">stop</a>.\n Application must call this after receiving on the\n android.media.MediaRecorder.OnInfoListener a \"what\" code of\n <a href=\"#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING\" rel=\"android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING\" class=\"docClass\">MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING</a> and before receiving a \"what\" code of\n <a href=\"#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED\" rel=\"android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED\" class=\"docClass\">MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED</a>. The file is not used until switching to\n that output. Application will receive <a href=\"#!/api/android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED\" rel=\"android.media.MediaRecorder-property-MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED\" class=\"docClass\">MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED</a>\n when the next output file is used. Application will not be able to set a new output file if\n the previous one has not been used. Application is responsible for cleaning up unused files\n after <a href=\"#!/api/android.media.MediaRecorder-method-stop\" rel=\"android.media.MediaRecorder-method-stop\" class=\"docClass\">stop</a> is called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file</span> : Object {File}<div class='sub-desc'><p>The file to use.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before prepare().</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if setNextOutputFile fails otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setOnErrorListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setOnErrorListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setOnErrorListener' class='name expandable'>setOnErrorListener</a>( <span class='pre'>l</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to be invoked when an error occurs while\n recording. ...</div><div class='long'><p>Register a callback to be invoked when an error occurs while\n recording.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l</span> : Object {MediaRecorder.OnErrorListener}<div class='sub-desc'><p>the callback that will be run</p>\n</div></li></ul></div></div></div><div id='method-setOnInfoListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setOnInfoListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setOnInfoListener' class='name expandable'>setOnInfoListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to be invoked when an informational event occurs while\n recording. ...</div><div class='long'><p>Register a callback to be invoked when an informational event occurs while\n recording.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {MediaRecorder.OnInfoListener}<div class='sub-desc'><p>the callback that will be run</p>\n</div></li></ul></div></div></div><div id='method-setOrientationHint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setOrientationHint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setOrientationHint' class='name expandable'>setOrientationHint</a>( <span class='pre'>degrees</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the orientation hint for output video playback. ...</div><div class='long'><p>Sets the orientation hint for output video playback.\n This method should be called before prepare(). This method will not\n trigger the source video frame to rotate during video recording, but to\n add a composition matrix containing the rotation angle in the output\n video if the output format is OutputFormat.THREE_GPP or\n OutputFormat.MPEG_4 so that a video player can choose the proper\n orientation for playback. Note that some video players may choose\n to ignore the compostion matrix in a video during playback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>degrees</span> : Number<div class='sub-desc'><p>the angle to be rotated clockwise in degrees.\n The supported angles are 0, 90, 180, and 270 degrees.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the angle is not supported.</p>\n</div></li></ul></div></div></div><div id='method-setOutputFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setOutputFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setOutputFile' class='name expandable'>setOutputFile</a>( <span class='pre'>path</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the path of the output file to be produced. ...</div><div class='long'><p>Sets the path of the output file to be produced. Call this after\n setOutputFormat() but before prepare().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : String<div class='sub-desc'><p>The pathname to use.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before\n setOutputFormat() or after prepare()</p>\n</div></li></ul></div></div></div><div id='method-setOutputFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setOutputFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setOutputFormat' class='name expandable'>setOutputFormat</a>( <span class='pre'>output_format</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the format of the output file produced during recording. ...</div><div class='long'><p>Sets the format of the output file produced during recording. Call this\n after setAudioSource()/setVideoSource() but before prepare().</p>\n\n<p> <p>It is recommended to always use 3GP format when using the H.263\n video encoder and AMR audio encoder. Using an MPEG-4 container format\n may confuse some desktop players.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>output_format</span> : Number<div class='sub-desc'><p>the output format to use. The output format\n needs to be specified before setting recording-parameters or encoders.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called after prepare() or before\n setAudioSource()/setVideoSource().\n@see android.media.MediaRecorder.OutputFormat</p>\n</div></li></ul></div></div></div><div id='method-setPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setPreferredDevice' class='name expandable'>setPreferredDevice</a>( <span class='pre'>deviceInfo</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies an audio device (via an android.media.AudioDeviceInfo object) to route\n the input from this MediaRecorder. ...</div><div class='long'><p>Specifies an audio device (via an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> object) to route\n the input from this MediaRecorder.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deviceInfo</span> : Object {AudioDeviceInfo}<div class='sub-desc'><p>The AudioDeviceInfo specifying the audio source.\n  If deviceInfo is null, default routing is restored.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succesful, false if the specified AudioDeviceInfo is non-null and\n does not correspond to a valid audio input device.</p>\n</div></li></ul></div></div></div><div id='method-setPreferredMicrophoneDirection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setPreferredMicrophoneDirection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setPreferredMicrophoneDirection' class='name expandable'>setPreferredMicrophoneDirection</a>( <span class='pre'>direction</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies the logical microphone (for processing). ...</div><div class='long'><p>Specifies the logical microphone (for processing).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>direction</span> : Number<div class='sub-desc'><p>Direction constant.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if sucessful.</p>\n</div></li></ul></div></div></div><div id='method-setPreferredMicrophoneFieldDimension' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setPreferredMicrophoneFieldDimension' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setPreferredMicrophoneFieldDimension' class='name expandable'>setPreferredMicrophoneFieldDimension</a>( <span class='pre'>zoom</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies the zoom factor (i.e. ...</div><div class='long'><p>Specifies the zoom factor (i.e. the field dimension) for the selected microphone\n (for processing). The selected microphone is determined by the use-case for the stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zoom</span> : Number<div class='sub-desc'><p>the desired field dimension of microphone capture. Range is from -1 (wide angle),\n though 0 (no zoom) to 1 (maximum zoom).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if sucessful.</p>\n</div></li></ul></div></div></div><div id='method-setPreviewDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setPreviewDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setPreviewDisplay' class='name expandable'>setPreviewDisplay</a>( <span class='pre'>sv</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a Surface to show a preview of recorded media (video). ...</div><div class='long'><p>Sets a Surface to show a preview of recorded media (video). Calls this\n before prepare() to make sure that the desirable preview display is\n set. If <a href=\"#!/api/android.media.MediaRecorder-method-setCamera\" rel=\"android.media.MediaRecorder-method-setCamera\" class=\"docClass\">setCamera</a>(Camera) is used and the surface has been\n already set to the camera, application do not need to call this. If\n this is called with non-null surface, the preview surface of the camera\n will be replaced by the new surface. If this method is called with null\n surface or not called at all, media recorder will not change the preview\n surface of the camera.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sv</span> : Object {Surface}<div class='sub-desc'><p>the Surface to use for the preview\n@see android.hardware.Camera#setPreviewDisplay(android.view.SurfaceHolder)</p>\n</div></li></ul></div></div></div><div id='method-setProfile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setProfile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setProfile' class='name expandable'>setProfile</a>( <span class='pre'>profile</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Uses the settings from a CamcorderProfile object for recording. ...</div><div class='long'><p>Uses the settings from a CamcorderProfile object for recording. This method should\n be called after the video AND audio sources are set, and before setOutputFile().\n If a time lapse CamcorderProfile is used, audio related source or recording\n parameters are ignored.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>profile</span> : Object {CamcorderProfile}<div class='sub-desc'><p>the CamcorderProfile to use\n@see <a href=\"#!/api/android.media.CamcorderProfile\" rel=\"android.media.CamcorderProfile\" class=\"docClass\">android.media.CamcorderProfile</a></p>\n</div></li></ul></div></div></div><div id='method-setVideoEncoder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setVideoEncoder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setVideoEncoder' class='name expandable'>setVideoEncoder</a>( <span class='pre'>video_encoder</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the video encoder to be used for recording. ...</div><div class='long'><p>Sets the video encoder to be used for recording. If this method is not\n called, the output file will not contain an video track. Call this after\n setOutputFormat() and before prepare().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>video_encoder</span> : Number<div class='sub-desc'><p>the video encoder to use.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before\n setOutputFormat() or after prepare()\n@see <a href=\"#!/api/android.media.MediaRecorder.VideoEncoder\" rel=\"android.media.MediaRecorder.VideoEncoder\" class=\"docClass\">android.media.MediaRecorder.VideoEncoder</a></p>\n</div></li></ul></div></div></div><div id='method-setVideoEncodingBitRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setVideoEncodingBitRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setVideoEncodingBitRate' class='name expandable'>setVideoEncodingBitRate</a>( <span class='pre'>bitRate</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the video encoding bit rate for recording. ...</div><div class='long'><p>Sets the video encoding bit rate for recording. Call this method before prepare().\n Prepare() may perform additional checks on the parameter to make sure whether the\n specified bit rate is applicable, and sometimes the passed bitRate will be\n clipped internally to ensure the video recording can proceed smoothly based on\n the capabilities of the platform.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bitRate</span> : Number<div class='sub-desc'><p>the video encoding bit rate in bits per second.</p>\n</div></li></ul></div></div></div><div id='method-setVideoEncodingProfileLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setVideoEncodingProfileLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setVideoEncodingProfileLevel' class='name expandable'>setVideoEncodingProfileLevel</a>( <span class='pre'>profile, level</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the desired video encoding profile and level for recording. ...</div><div class='long'><p>Sets the desired video encoding profile and level for recording. The profile and level\n must be valid for the video encoder set by <a href=\"#!/api/android.media.MediaRecorder-method-setVideoEncoder\" rel=\"android.media.MediaRecorder-method-setVideoEncoder\" class=\"docClass\">setVideoEncoder</a>. This method can\n called before or after <a href=\"#!/api/android.media.MediaRecorder-method-setVideoEncoder\" rel=\"android.media.MediaRecorder-method-setVideoEncoder\" class=\"docClass\">setVideoEncoder</a> but it must be called before <a href=\"#!/api/android.media.MediaRecorder-method-prepare\" rel=\"android.media.MediaRecorder-method-prepare\" class=\"docClass\">prepare</a>.\n {@code prepare()} may perform additional checks on the parameter to make sure that the specified\n profile and level are applicable, and sometimes the passed profile or level will be\n discarded due to codec capablity or to ensure the video recording can proceed smoothly\n based on the capabilities of the platform. <br>Application can also use the\n <a href=\"#!/api/android.media.MediaCodecInfo.CodecCapabilities-property-profileLevels\" rel=\"android.media.MediaCodecInfo.CodecCapabilities-property-profileLevels\" class=\"docClass\">android.media.MediaCodecInfo.CodecCapabilities.profileLevels</a> to query applicable combination of profile\n and level for the corresponding format. Note that the requested profile/level may not be supported by\n the codec that is actually being used by this MediaRecorder instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>profile</span> : Number<div class='sub-desc'><p>declared in MediaCodecInfo.CodecProfileLevel.</p>\n</div></li><li><span class='pre'>level</span> : Number<div class='sub-desc'><p>declared in MediaCodecInfo.CodecProfileLevel.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException when an invalid profile or level value is used.</p>\n</div></li></ul></div></div></div><div id='method-setVideoFrameRate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setVideoFrameRate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setVideoFrameRate' class='name expandable'>setVideoFrameRate</a>( <span class='pre'>rate</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the frame rate of the video to be captured. ...</div><div class='long'><p>Sets the frame rate of the video to be captured.  Must be called\n after setVideoSource(). Call this after setOutFormat() but before\n prepare().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rate</span> : Number<div class='sub-desc'><p>the number of frames per second of video to capture</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called after\n prepare() or before setOutputFormat().</p>\n\n<p> NOTE: On some devices that have auto-frame rate, this sets the\n maximum frame rate, not a constant frame rate. Actual frame rate\n will vary according to lighting conditions.</p>\n</div></li></ul></div></div></div><div id='method-setVideoSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setVideoSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setVideoSize' class='name expandable'>setVideoSize</a>( <span class='pre'>width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the width and height of the video to be captured. ...</div><div class='long'><p>Sets the width and height of the video to be captured.  Must be called\n after setVideoSource(). Call this after setOutFormat() but before\n prepare().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the width of the video to be captured</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the height of the video to be captured</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called after\n prepare() or before setOutputFormat()</p>\n</div></li></ul></div></div></div><div id='method-setVideoSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-setVideoSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-setVideoSource' class='name expandable'>setVideoSource</a>( <span class='pre'>video_source</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the video source to be used for recording. ...</div><div class='long'><p>Sets the video source to be used for recording. If this method is not\n called, the output file will not contain an video track. The source needs\n to be specified before setting recording-parameters or encoders. Call\n this only before setOutputFormat().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>video_source</span> : Number<div class='sub-desc'><p>the video source to use</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called after setOutputFormat()\n@see <a href=\"#!/api/android.media.MediaRecorder.VideoSource\" rel=\"android.media.MediaRecorder.VideoSource\" class=\"docClass\">android.media.MediaRecorder.VideoSource</a></p>\n</div></li></ul></div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-start' class='name expandable'>start</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Begins capturing and encoding data to the file specified with\n setOutputFile(). ...</div><div class='long'><p>Begins capturing and encoding data to the file specified with\n setOutputFile(). Call this after prepare().</p>\n\n<p> <p>Since API level 13, if applications set a camera via\n <a href=\"#!/api/android.media.MediaRecorder-method-setCamera\" rel=\"android.media.MediaRecorder-method-setCamera\" class=\"docClass\">setCamera</a>(Camera), the apps can use the camera after this method\n call. The apps do not need to lock the camera again. However, if this\n method fails, the apps should still lock the camera back. The apps should\n not start another recording session during recording.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before\n prepare() or when the camera is already in use by another app.</p>\n</div></li></ul></div></div></div><div id='method-stop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-stop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-stop' class='name expandable'>stop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops recording. ...</div><div class='long'><p>Stops recording. Call this after start(). Once recording is stopped,\n you will have to configure it again as if it has just been constructed.\n Note that a RuntimeException is intentionally thrown to the\n application, if no valid audio/video data has been received when stop()\n is called. This happens if stop() is called immediately after\n start(). The failure lets the application take action accordingly to\n clean up the output file (delete the output file, for instance), since\n the output file is not properly constructed when this happens.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called before start()</p>\n</div></li></ul></div></div></div><div id='method-unregisterAudioRecordingCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRecorder'>android.media.MediaRecorder</span><br/><a href='source/MediaRecorder.html#android-media-MediaRecorder-method-unregisterAudioRecordingCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRecorder-method-unregisterAudioRecordingCallback' class='name expandable'>unregisterAudioRecordingCallback</a>( <span class='pre'>cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregister an audio recording callback previously registered with\n android.media.AudioManager.AudioRecordingCallback). ...</div><div class='long'><p>Unregister an audio recording callback previously registered with\n android.media.AudioManager.AudioRecordingCallback).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {AudioManager.AudioRecordingCallback}<div class='sub-desc'><p>non-null callback to unregister</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});