Ext.data.JsonP.android_media_AudioRouting({"tagname":"class","name":"android.media.AudioRouting","autodetected":{},"files":[{"filename":"AudioRouting.js","href":"AudioRouting.html#android-media-AudioRouting"}],"members":[{"name":"addOnRoutingChangedListener","tagname":"method","owner":"android.media.AudioRouting","id":"method-addOnRoutingChangedListener","meta":{}},{"name":"getPreferredDevice","tagname":"method","owner":"android.media.AudioRouting","id":"method-getPreferredDevice","meta":{}},{"name":"getRoutedDevice","tagname":"method","owner":"android.media.AudioRouting","id":"method-getRoutedDevice","meta":{}},{"name":"removeOnRoutingChangedListener","tagname":"method","owner":"android.media.AudioRouting","id":"method-removeOnRoutingChangedListener","meta":{}},{"name":"setPreferredDevice","tagname":"method","owner":"android.media.AudioRouting","id":"method-setPreferredDevice","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.AudioRouting","short_doc":"AudioRouting defines an interface for controlling routing and routing notifications in\n AudioTrack and AudioRecord ob...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/AudioRouting.html#android-media-AudioRouting' target='_blank'>AudioRouting.js</a></div></pre><div class='doc-contents'><p>AudioRouting defines an interface for controlling routing and routing notifications in\n AudioTrack and AudioRecord objects.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addOnRoutingChangedListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioRouting'>android.media.AudioRouting</span><br/><a href='source/AudioRouting.html#android-media-AudioRouting-method-addOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioRouting-method-addOnRoutingChangedListener' class='name expandable'>addOnRoutingChangedListener</a>( <span class='pre'>listener, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an android.media.AudioRouting.OnRoutingChangedListener to receive notifications of routing\n changes on this Audi...</div><div class='long'><p>Adds an android.media.AudioRouting.OnRoutingChangedListener to receive notifications of routing\n changes on this AudioTrack/AudioRecord.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioRouting.OnRoutingChangedListener}<div class='sub-desc'><p>The AudioRouting.OnRoutingChangedListener interface to receive\n notifications of rerouting events.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Specifies the Handler object for the thread on which to execute\n the callback. If <code>null</code>, the Handler associated with the main\n Looper will be used.</p>\n</div></li></ul></div></div></div><div id='method-getPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioRouting'>android.media.AudioRouting</span><br/><a href='source/AudioRouting.html#android-media-AudioRouting-method-getPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioRouting-method-getPreferredDevice' class='name expandable'>getPreferredDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the selected output/input specified by setPreferredDevice. ...</div><div class='long'><p>Returns the selected output/input specified by <a href=\"#!/api/android.media.AudioRouting-method-setPreferredDevice\" rel=\"android.media.AudioRouting-method-setPreferredDevice\" class=\"docClass\">setPreferredDevice</a>. Note that this\n is not guaranteed to correspond to the actual device being used for playback/recording.</p>\n</div></div></div><div id='method-getRoutedDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioRouting'>android.media.AudioRouting</span><br/><a href='source/AudioRouting.html#android-media-AudioRouting-method-getRoutedDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioRouting-method-getRoutedDevice' class='name expandable'>getRoutedDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an android.media.AudioDeviceInfo identifying the current routing of this\n AudioTrack/AudioRecord. ...</div><div class='long'><p>Returns an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> identifying the current routing of this\n AudioTrack/AudioRecord.\n Note: The query is only valid if the AudioTrack/AudioRecord is currently playing.\n If it is not, <code>getRoutedDevice()</code> will return null.</p>\n</div></div></div><div id='method-removeOnRoutingChangedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioRouting'>android.media.AudioRouting</span><br/><a href='source/AudioRouting.html#android-media-AudioRouting-method-removeOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioRouting-method-removeOnRoutingChangedListener' class='name expandable'>removeOnRoutingChangedListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an android.media.AudioRouting.OnRoutingChangedListener which has been previously added\n to receive rerouting ...</div><div class='long'><p>Removes an android.media.AudioRouting.OnRoutingChangedListener which has been previously added\n to receive rerouting notifications.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioRouting.OnRoutingChangedListener}<div class='sub-desc'><p>The previously added AudioRouting.OnRoutingChangedListener interface\n to remove.</p>\n</div></li></ul></div></div></div><div id='method-setPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioRouting'>android.media.AudioRouting</span><br/><a href='source/AudioRouting.html#android-media-AudioRouting-method-setPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioRouting-method-setPreferredDevice' class='name expandable'>setPreferredDevice</a>( <span class='pre'>deviceInfo</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies an audio device (via an android.media.AudioDeviceInfo object) to route\n the output/input to/from. ...</div><div class='long'><p>Specifies an audio device (via an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> object) to route\n the output/input to/from.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deviceInfo</span> : Object {AudioDeviceInfo}<div class='sub-desc'><p>The AudioDeviceInfo specifying the audio sink or source.\n  If deviceInfo is null, default routing is restored.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succesful, false if the specified AudioDeviceInfo is non-null and\n does not correspond to a valid audio device.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});