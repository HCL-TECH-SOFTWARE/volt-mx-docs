Ext.data.JsonP.android_media_MediaCodecInfo_VideoCapabilities({"tagname":"class","name":"android.media.MediaCodecInfo.VideoCapabilities","autodetected":{},"files":[{"filename":"VideoCapabilities.js","href":"VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities"}],"extends":"java.lang.Object","members":[{"name":"areSizeAndRateSupported","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-areSizeAndRateSupported","meta":{}},{"name":"getAchievableFrameRatesFor","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getAchievableFrameRatesFor","meta":{}},{"name":"getBitrateRange","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getBitrateRange","meta":{}},{"name":"getHeightAlignment","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getHeightAlignment","meta":{}},{"name":"getSupportedFrameRates","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getSupportedFrameRates","meta":{}},{"name":"getSupportedFrameRatesFor","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getSupportedFrameRatesFor","meta":{}},{"name":"getSupportedHeights","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getSupportedHeights","meta":{}},{"name":"getSupportedHeightsFor","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getSupportedHeightsFor","meta":{}},{"name":"getSupportedPerformancePoints","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getSupportedPerformancePoints","meta":{}},{"name":"getSupportedWidths","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getSupportedWidths","meta":{}},{"name":"getSupportedWidthsFor","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getSupportedWidthsFor","meta":{}},{"name":"getWidthAlignment","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-getWidthAlignment","meta":{}},{"name":"isSizeSupported","tagname":"method","owner":"android.media.MediaCodecInfo.VideoCapabilities","id":"method-isSizeSupported","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaCodecInfo.VideoCapabilities","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaCodecInfo.VideoCapabilities</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities' target='_blank'>VideoCapabilities.js</a></div></pre><div class='doc-contents'><p>A class that supports querying the video capabilities of a codec.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-areSizeAndRateSupported' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-areSizeAndRateSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-areSizeAndRateSupported' class='name expandable'>areSizeAndRateSupported</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether a given video size ({@code width} and\n {@code height}) and {@code frameRate} combination is supported. ...</div><div class='long'><p>Returns whether a given video size ({@code width} and\n {@code height}) and {@code frameRate} combination is supported.</p>\n</div></div></div><div id='method-getAchievableFrameRatesFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getAchievableFrameRatesFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getAchievableFrameRatesFor' class='name expandable'>getAchievableFrameRatesFor</a>( <span class='pre'>width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of achievable video frame rates for a video size. ...</div><div class='long'><p>Returns the range of achievable video frame rates for a video size.\n May return {@code null}, if the codec did not publish any measurement\n data.\n <p>\n This is a performance estimate provided by the device manufacturer based on statistical\n sampling of full-speed decoding and encoding measurements in various configurations\n of common video sizes supported by the codec. As such it should only be used to\n compare individual codecs on the device. The value is not suitable for comparing\n different devices or even different android releases for the same device.\n <p>\n <em>On android.os.Build.VERSION_CODES.M release</em> the returned range\n corresponds to the fastest frame rates achieved in the tested configurations. As\n such, it should not be used to gauge guaranteed or even average codec performance\n on the device.\n <p>\n <em>On android.os.Build.VERSION_CODES.N release</em> the returned range\n corresponds closer to sustained performance <em>in tested configurations</em>.\n One can expect to achieve sustained performance higher than the lower limit more than\n 50% of the time, and higher than half of the lower limit at least 90% of the time\n <em>in tested configurations</em>.\n Conversely, one can expect performance lower than twice the upper limit at least\n 90% of the time.\n <p class=note>\n Tested configurations use a single active codec. For use cases where multiple\n codecs are active, applications can expect lower and in most cases significantly lower\n performance.\n <p class=note>\n The returned range value is interpolated from the nearest frame size(s) tested.\n Codec performance is severely impacted by other activity on the device as well\n as environmental factors (such as battery level, temperature or power source), and can\n vary significantly even in a steady environment.\n <p class=note>\n Use this method in cases where only codec performance matters, e.g. to evaluate if\n a codec has any chance of meeting a performance target. Codecs are listed\n in <a href=\"#!/api/android.media.MediaCodecList\" rel=\"android.media.MediaCodecList\" class=\"docClass\">android.media.MediaCodecList</a> in the preferred order as defined by the device\n manufacturer. As such, applications should use the first suitable codec in the\n list to achieve the best balance between power use and performance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the width of the video</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the height of the video</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the video size is not supported.</p>\n</div></li></ul></div></div></div><div id='method-getBitrateRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getBitrateRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getBitrateRange' class='name expandable'>getBitrateRange</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of supported bitrates in bits/second. ...</div><div class='long'><p>Returns the range of supported bitrates in bits/second.</p>\n</div></div></div><div id='method-getHeightAlignment' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getHeightAlignment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getHeightAlignment' class='name expandable'>getHeightAlignment</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the alignment requirement for video height (in pixels). ...</div><div class='long'><p>Returns the alignment requirement for video height (in pixels).</p>\n\n<p> This is a power-of-2 value that video height must be a\n multiple of.</p>\n</div></div></div><div id='method-getSupportedFrameRates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getSupportedFrameRates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getSupportedFrameRates' class='name expandable'>getSupportedFrameRates</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of supported frame rates. ...</div><div class='long'><p>Returns the range of supported frame rates.\n <p>\n This is not a performance indicator.  Rather, it expresses the\n limits specified in the coding standard, based on the complexities\n of encoding material for later playback at a certain frame rate,\n or the decoding of such material in non-realtime.</p>\n</div></div></div><div id='method-getSupportedFrameRatesFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getSupportedFrameRatesFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getSupportedFrameRatesFor' class='name expandable'>getSupportedFrameRatesFor</a>( <span class='pre'>width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of supported video frame rates for a video size. ...</div><div class='long'><p>Returns the range of supported video frame rates for a video size.\n <p>\n This is not a performance indicator.  Rather, it expresses the limits specified in\n the coding standard, based on the complexities of encoding material of a given\n size for later playback at a certain frame rate, or the decoding of such material\n in non-realtime.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the width of the video</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the height of the video</p>\n</div></li></ul></div></div></div><div id='method-getSupportedHeights' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getSupportedHeights' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getSupportedHeights' class='name expandable'>getSupportedHeights</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of supported video heights. ...</div><div class='long'><p>Returns the range of supported video heights.</p>\n</div></div></div><div id='method-getSupportedHeightsFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getSupportedHeightsFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getSupportedHeightsFor' class='name expandable'>getSupportedHeightsFor</a>( <span class='pre'>width</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of supported video heights for a video width ...</div><div class='long'><p>Returns the range of supported video heights for a video width</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the width of the video</p>\n</div></li></ul></div></div></div><div id='method-getSupportedPerformancePoints' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getSupportedPerformancePoints' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getSupportedPerformancePoints' class='name expandable'>getSupportedPerformancePoints</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the supported performance points. ...</div><div class='long'><p>Returns the supported performance points. May return {@code null} if the codec did not\n publish any performance point information (e.g. the vendor codecs have not been updated\n to the latest android release). May return an empty list if the codec published that\n if does not guarantee any performance points.\n <p>\n This is a performance guarantee provided by the device manufacturer for hardware codecs\n based on hardware capabilities of the device.\n <p>\n The returned list is sorted first by decreasing number of pixels, then by decreasing\n width, and finally by decreasing frame rate.\n Performance points assume a single active codec. For use cases where multiple\n codecs are active, should use that highest pixel count, and add the frame rates of\n each individual codec.</p>\n</div></div></div><div id='method-getSupportedWidths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getSupportedWidths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getSupportedWidths' class='name expandable'>getSupportedWidths</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of supported video widths. ...</div><div class='long'><p>Returns the range of supported video widths.</p>\n</div></div></div><div id='method-getSupportedWidthsFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getSupportedWidthsFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getSupportedWidthsFor' class='name expandable'>getSupportedWidthsFor</a>( <span class='pre'>height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the range of supported video widths for a video height. ...</div><div class='long'><p>Returns the range of supported video widths for a video height.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the height of the video</p>\n</div></li></ul></div></div></div><div id='method-getWidthAlignment' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-getWidthAlignment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-getWidthAlignment' class='name expandable'>getWidthAlignment</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the alignment requirement for video width (in pixels). ...</div><div class='long'><p>Returns the alignment requirement for video width (in pixels).</p>\n\n<p> This is a power-of-2 value that video width must be a\n multiple of.</p>\n</div></div></div><div id='method-isSizeSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecInfo.VideoCapabilities'>android.media.MediaCodecInfo.VideoCapabilities</span><br/><a href='source/VideoCapabilities.html#android-media-MediaCodecInfo-VideoCapabilities-method-isSizeSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecInfo.VideoCapabilities-method-isSizeSupported' class='name expandable'>isSizeSupported</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether a given video size ({@code width} and\n {@code height}) is supported. ...</div><div class='long'><p>Returns whether a given video size ({@code width} and\n {@code height}) is supported.</p>\n</div></div></div></div></div></div></div>","meta":{}});