Ext.data.JsonP.android_media_MediaPlayer2({"tagname":"class","name":"android.media.MediaPlayer2","autodetected":{},"files":[{"filename":"MediaPlayer2.js","href":"MediaPlayer2.html#android-media-MediaPlayer2"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"CALL_COMPLETED_ATTACH_AUX_EFFECT","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_ATTACH_AUX_EFFECT","meta":{}},{"name":"CALL_COMPLETED_CLEAR_NEXT_DATA_SOURCES","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_CLEAR_NEXT_DATA_SOURCES","meta":{}},{"name":"CALL_COMPLETED_DESELECT_TRACK","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_DESELECT_TRACK","meta":{}},{"name":"CALL_COMPLETED_LOOP_CURRENT","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_LOOP_CURRENT","meta":{}},{"name":"CALL_COMPLETED_PAUSE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_PAUSE","meta":{}},{"name":"CALL_COMPLETED_PLAY","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_PLAY","meta":{}},{"name":"CALL_COMPLETED_PREPARE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_PREPARE","meta":{}},{"name":"CALL_COMPLETED_SEEK_TO","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SEEK_TO","meta":{}},{"name":"CALL_COMPLETED_SELECT_TRACK","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SELECT_TRACK","meta":{}},{"name":"CALL_COMPLETED_SET_AUDIO_ATTRIBUTES","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_AUDIO_ATTRIBUTES","meta":{}},{"name":"CALL_COMPLETED_SET_AUDIO_SESSION_ID","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_AUDIO_SESSION_ID","meta":{}},{"name":"CALL_COMPLETED_SET_AUX_EFFECT_SEND_LEVEL","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_AUX_EFFECT_SEND_LEVEL","meta":{}},{"name":"CALL_COMPLETED_SET_DATA_SOURCE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_DATA_SOURCE","meta":{}},{"name":"CALL_COMPLETED_SET_DISPLAY","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_DISPLAY","meta":{}},{"name":"CALL_COMPLETED_SET_NEXT_DATA_SOURCE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_NEXT_DATA_SOURCE","meta":{}},{"name":"CALL_COMPLETED_SET_NEXT_DATA_SOURCES","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_NEXT_DATA_SOURCES","meta":{}},{"name":"CALL_COMPLETED_SET_PLAYBACK_PARAMS","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_PLAYBACK_PARAMS","meta":{}},{"name":"CALL_COMPLETED_SET_PLAYER_VOLUME","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_PLAYER_VOLUME","meta":{}},{"name":"CALL_COMPLETED_SET_SCREEN_ON_WHILE_PLAYING","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_SCREEN_ON_WHILE_PLAYING","meta":{}},{"name":"CALL_COMPLETED_SET_SURFACE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_SURFACE","meta":{}},{"name":"CALL_COMPLETED_SET_SYNC_PARAMS","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_SYNC_PARAMS","meta":{}},{"name":"CALL_COMPLETED_SET_WAKE_LOCK","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SET_WAKE_LOCK","meta":{}},{"name":"CALL_COMPLETED_SKIP_TO_NEXT","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_COMPLETED_SKIP_TO_NEXT","meta":{}},{"name":"CALL_STATUS_BAD_VALUE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_BAD_VALUE","meta":{}},{"name":"CALL_STATUS_ERROR_IO","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_ERROR_IO","meta":{}},{"name":"CALL_STATUS_ERROR_UNKNOWN","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_ERROR_UNKNOWN","meta":{}},{"name":"CALL_STATUS_INVALID_OPERATION","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_INVALID_OPERATION","meta":{}},{"name":"CALL_STATUS_NO_DRM_SCHEME","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_NO_DRM_SCHEME","meta":{}},{"name":"CALL_STATUS_NO_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_NO_ERROR","meta":{}},{"name":"CALL_STATUS_PERMISSION_DENIED","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_PERMISSION_DENIED","meta":{}},{"name":"CALL_STATUS_SKIPPED","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-CALL_STATUS_SKIPPED","meta":{}},{"name":"MEDIA_ERROR_IO","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_ERROR_IO","meta":{}},{"name":"MEDIA_ERROR_MALFORMED","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_ERROR_MALFORMED","meta":{}},{"name":"MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK","meta":{}},{"name":"MEDIA_ERROR_TIMED_OUT","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_ERROR_TIMED_OUT","meta":{}},{"name":"MEDIA_ERROR_UNKNOWN","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_ERROR_UNKNOWN","meta":{}},{"name":"MEDIA_ERROR_UNSUPPORTED","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_ERROR_UNSUPPORTED","meta":{}},{"name":"MEDIA_INFO_AUDIO_NOT_PLAYING","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_AUDIO_NOT_PLAYING","meta":{}},{"name":"MEDIA_INFO_AUDIO_RENDERING_START","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_AUDIO_RENDERING_START","meta":{}},{"name":"MEDIA_INFO_BAD_INTERLEAVING","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_BAD_INTERLEAVING","meta":{}},{"name":"MEDIA_INFO_BUFFERING_END","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_BUFFERING_END","meta":{}},{"name":"MEDIA_INFO_BUFFERING_START","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_BUFFERING_START","meta":{}},{"name":"MEDIA_INFO_BUFFERING_UPDATE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_BUFFERING_UPDATE","meta":{}},{"name":"MEDIA_INFO_DATA_SOURCE_END","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_DATA_SOURCE_END","meta":{}},{"name":"MEDIA_INFO_DATA_SOURCE_LIST_END","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_DATA_SOURCE_LIST_END","meta":{}},{"name":"MEDIA_INFO_DATA_SOURCE_REPEAT","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_DATA_SOURCE_REPEAT","meta":{}},{"name":"MEDIA_INFO_DATA_SOURCE_START","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_DATA_SOURCE_START","meta":{}},{"name":"MEDIA_INFO_METADATA_UPDATE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_METADATA_UPDATE","meta":{}},{"name":"MEDIA_INFO_NOT_SEEKABLE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_NOT_SEEKABLE","meta":{}},{"name":"MEDIA_INFO_PREPARED","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_PREPARED","meta":{}},{"name":"MEDIA_INFO_SUBTITLE_TIMED_OUT","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_SUBTITLE_TIMED_OUT","meta":{}},{"name":"MEDIA_INFO_TIMED_TEXT_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_TIMED_TEXT_ERROR","meta":{}},{"name":"MEDIA_INFO_UNKNOWN","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_UNKNOWN","meta":{}},{"name":"MEDIA_INFO_UNSUPPORTED_SUBTITLE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_UNSUPPORTED_SUBTITLE","meta":{}},{"name":"MEDIA_INFO_VIDEO_NOT_PLAYING","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_VIDEO_NOT_PLAYING","meta":{}},{"name":"MEDIA_INFO_VIDEO_RENDERING_START","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_VIDEO_RENDERING_START","meta":{}},{"name":"MEDIA_INFO_VIDEO_TRACK_LAGGING","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-MEDIA_INFO_VIDEO_TRACK_LAGGING","meta":{}},{"name":"PLAYER_STATE_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PLAYER_STATE_ERROR","meta":{}},{"name":"PLAYER_STATE_IDLE","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PLAYER_STATE_IDLE","meta":{}},{"name":"PLAYER_STATE_PAUSED","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PLAYER_STATE_PAUSED","meta":{}},{"name":"PLAYER_STATE_PLAYING","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PLAYER_STATE_PLAYING","meta":{}},{"name":"PLAYER_STATE_PREPARED","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PLAYER_STATE_PREPARED","meta":{}},{"name":"PREPARE_DRM_STATUS_KEY_EXCHANGE_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_KEY_EXCHANGE_ERROR","meta":{}},{"name":"PREPARE_DRM_STATUS_PREPARATION_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_PREPARATION_ERROR","meta":{}},{"name":"PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR","meta":{}},{"name":"PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR","meta":{}},{"name":"PREPARE_DRM_STATUS_RESOURCE_BUSY","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_RESOURCE_BUSY","meta":{}},{"name":"PREPARE_DRM_STATUS_RESTORE_ERROR","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_RESTORE_ERROR","meta":{}},{"name":"PREPARE_DRM_STATUS_SUCCESS","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_SUCCESS","meta":{}},{"name":"PREPARE_DRM_STATUS_UNSUPPORTED_SCHEME","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-PREPARE_DRM_STATUS_UNSUPPORTED_SCHEME","meta":{}},{"name":"SEEK_CLOSEST","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-SEEK_CLOSEST","meta":{}},{"name":"SEEK_CLOSEST_SYNC","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-SEEK_CLOSEST_SYNC","meta":{}},{"name":"SEEK_NEXT_SYNC","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-SEEK_NEXT_SYNC","meta":{}},{"name":"SEEK_PREVIOUS_SYNC","tagname":"property","owner":"android.media.MediaPlayer2","id":"property-SEEK_PREVIOUS_SYNC","meta":{}},{"name":"addOnRoutingChangedListener","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-addOnRoutingChangedListener","meta":{}},{"name":"attachAuxEffect","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-attachAuxEffect","meta":{}},{"name":"cancelCommand","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-cancelCommand","meta":{}},{"name":"clearDrmEventCallback","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-clearDrmEventCallback","meta":{}},{"name":"clearNextDataSources","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-clearNextDataSources","meta":{}},{"name":"clearPendingCommands","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-clearPendingCommands","meta":{}},{"name":"close","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-close","meta":{}},{"name":"deselectTrack","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-deselectTrack","meta":{}},{"name":"getAudioAttributes","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getAudioAttributes","meta":{}},{"name":"getAudioSessionId","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getAudioSessionId","meta":{}},{"name":"getBufferedPosition","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getBufferedPosition","meta":{}},{"name":"getCurrentDataSource","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getCurrentDataSource","meta":{}},{"name":"getCurrentPosition","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getCurrentPosition","meta":{}},{"name":"getDuration","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getDuration","meta":{}},{"name":"getMaxPlayerVolume","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getMaxPlayerVolume","meta":{}},{"name":"getMetrics","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getMetrics","meta":{}},{"name":"getPlaybackParams","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getPlaybackParams","meta":{}},{"name":"getPlayerVolume","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getPlayerVolume","meta":{}},{"name":"getPreferredDevice","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getPreferredDevice","meta":{}},{"name":"getRoutedDevice","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getRoutedDevice","meta":{}},{"name":"getSelectedTrack","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getSelectedTrack","meta":{}},{"name":"getState","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getState","meta":{}},{"name":"getSyncParams","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getSyncParams","meta":{}},{"name":"getTimestamp","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getTimestamp","meta":{}},{"name":"getTrackInfo","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getTrackInfo","meta":{}},{"name":"getVideoSize","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-getVideoSize","meta":{}},{"name":"isLooping","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-isLooping","meta":{}},{"name":"loopCurrent","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-loopCurrent","meta":{}},{"name":"notifyWhenCommandLabelReached","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-notifyWhenCommandLabelReached","meta":{}},{"name":"pause","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-pause","meta":{}},{"name":"play","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-play","meta":{}},{"name":"prepare","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-prepare","meta":{}},{"name":"registerEventCallback","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-registerEventCallback","meta":{}},{"name":"removeOnRoutingChangedListener","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-removeOnRoutingChangedListener","meta":{}},{"name":"reset","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-reset","meta":{}},{"name":"seekTo","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-seekTo","meta":{}},{"name":"selectTrack","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-selectTrack","meta":{}},{"name":"setAudioAttributes","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setAudioAttributes","meta":{}},{"name":"setAudioSessionId","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setAudioSessionId","meta":{}},{"name":"setAuxEffectSendLevel","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setAuxEffectSendLevel","meta":{}},{"name":"setDataSource","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setDataSource","meta":{}},{"name":"setDisplay","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setDisplay","meta":{}},{"name":"setDrmEventCallback","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setDrmEventCallback","meta":{}},{"name":"setNextDataSource","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setNextDataSource","meta":{}},{"name":"setNextDataSources","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setNextDataSources","meta":{}},{"name":"setPlaybackParams","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setPlaybackParams","meta":{}},{"name":"setPlayerVolume","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setPlayerVolume","meta":{}},{"name":"setPreferredDevice","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setPreferredDevice","meta":{}},{"name":"setScreenOnWhilePlaying","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setScreenOnWhilePlaying","meta":{}},{"name":"setSurface","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setSurface","meta":{}},{"name":"setSyncParams","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setSyncParams","meta":{}},{"name":"setWakeLock","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-setWakeLock","meta":{}},{"name":"skipToNext","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-skipToNext","meta":{}},{"name":"unregisterEventCallback","tagname":"method","owner":"android.media.MediaPlayer2","id":"method-unregisterEventCallback","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaPlayer2","short_doc":"implements java.lang.AutoCloseable\n\n implements android.media.AudioRouting\n\nMediaPlayer2 class can be used to control...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaPlayer2</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaPlayer2.html#android-media-MediaPlayer2' target='_blank'>MediaPlayer2.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p> implements <a href=\"#!/api/android.media.AudioRouting\" rel=\"android.media.AudioRouting\" class=\"docClass\">android.media.AudioRouting</a></p>\n\n<p>MediaPlayer2 class can be used to control playback of audio/video files and streams.</p>\n\n<p> <p>\n This API is not generally intended for third party application developers.\n Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n <a href=\"{@docRoot}reference/androidx/media2/package-summary.html\">Media2 Library</a>\n for consistent behavior across all devices.</p>\n\n<p> <p>Topics covered here are:\n <ol>\n <li><a href=\"#PlayerStates\">Player states</a>\n <li><a href=\"#InvalidStates\">Invalid method calls</a>\n <li><a href=\"#Permissions\">Permissions</a>\n <li><a href=\"#Callbacks\">Callbacks</a>\n </li></li></li></li></ol></p>\n\n<p> <h3 id=\"PlayerStates\">Player states</h3></p>\n\n<p> <p>The playback control of audio/video files is managed as a state machine.</p>\n <p><div style=\"text-align:center;\"><img src=\"../../../images/mediaplayer2_state_diagram.png\"\n         alt=\"MediaPlayer2 State diagram\"\n         border=\"0\" /></div></p>\n <p>The MediaPlayer2 object has five states:</p>\n <ol>\n     <li><p><a href=\"#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_IDLE\" rel=\"android.media.MediaPlayer2-property-PLAYER_STATE_IDLE\" class=\"docClass\">PLAYER_STATE_IDLE</a>: MediaPlayer2 is in the <strong>Idle</strong>\n         state after it's created, or after calling <a href=\"#!/api/android.media.MediaPlayer2-method-reset\" rel=\"android.media.MediaPlayer2-method-reset\" class=\"docClass\">reset</a>().</p></li></ol></p>\n\n<pre><code>     &lt;p&gt;While in this state, you should call\n     <a href=\"#!/api/android.media.MediaPlayer2-method-setDataSource\" rel=\"android.media.MediaPlayer2-method-setDataSource\" class=\"docClass\">setDataSource</a>. It is a good\n     programming practice to register an <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" rel=\"android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" class=\"docClass\">onCallCompleted</a>\n     &lt;a href=\"#Callbacks\"&gt;callback&lt;/a&gt; and watch for <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_STATUS_BAD_VALUE\" rel=\"android.media.MediaPlayer2-property-CALL_STATUS_BAD_VALUE\" class=\"docClass\">CALL_STATUS_BAD_VALUE</a> and\n     <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_STATUS_ERROR_IO\" rel=\"android.media.MediaPlayer2-property-CALL_STATUS_ERROR_IO\" class=\"docClass\">CALL_STATUS_ERROR_IO</a>, which might be caused by &lt;code&gt;setDataSource&lt;/code&gt;.\n     &lt;/p&gt;\n\n     &lt;p&gt;Calling <a href=\"#!/api/android.media.MediaPlayer2-method-prepare\" rel=\"android.media.MediaPlayer2-method-prepare\" class=\"docClass\">prepare</a>() transfers a MediaPlayer2 object to\n     the &lt;strong&gt;Prepared&lt;/strong&gt; state. Note\n     that <a href=\"#!/api/android.media.MediaPlayer2-method-prepare\" rel=\"android.media.MediaPlayer2-method-prepare\" class=\"docClass\">prepare</a>() is asynchronous. When the preparation completes,\n     if you register an <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onInfo\" rel=\"android.media.MediaPlayer2.EventCallback-method-onInfo\" class=\"docClass\">onInfo</a> &lt;a href=\"#Callbacks\"&gt;callback&lt;/a&gt;,\n     the player executes the callback\n     with <a href=\"#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_PREPARED\" rel=\"android.media.MediaPlayer2-property-MEDIA_INFO_PREPARED\" class=\"docClass\">MEDIA_INFO_PREPARED</a> and transitions to the\n     &lt;strong&gt;Prepared&lt;/strong&gt; state.&lt;/p&gt;\n     &lt;/li&gt;\n\n &lt;li&gt;<a href=\"#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_PREPARED\" rel=\"android.media.MediaPlayer2-property-PLAYER_STATE_PREPARED\" class=\"docClass\">PLAYER_STATE_PREPARED</a>: A MediaPlayer object must be in the\n     &lt;strong&gt;Prepared&lt;/strong&gt; state before playback can be started for the first time.\n     While in this state, you can set player properties\n     such as audio/sound volume and looping by invoking the corresponding set methods.\n     Calling <a href=\"#!/api/android.media.MediaPlayer2-method-play\" rel=\"android.media.MediaPlayer2-method-play\" class=\"docClass\">play</a>() transfers a MediaPlayer2 object to\n     the &lt;strong&gt;Playing&lt;/strong&gt; state.\n  &lt;/li&gt;\n\n &lt;li&gt;<a href=\"#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_PLAYING\" rel=\"android.media.MediaPlayer2-property-PLAYER_STATE_PLAYING\" class=\"docClass\">PLAYER_STATE_PLAYING</a>:\n     &lt;p&gt;The player plays the data source while in this state.\n     If you register an <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onInfo\" rel=\"android.media.MediaPlayer2.EventCallback-method-onInfo\" class=\"docClass\">onInfo</a> &lt;a href=\"#Callbacks\"&gt;callback&lt;/a&gt;,\n     the player regularly executes the callback with\n     <a href=\"#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_BUFFERING_UPDATE\" rel=\"android.media.MediaPlayer2-property-MEDIA_INFO_BUFFERING_UPDATE\" class=\"docClass\">MEDIA_INFO_BUFFERING_UPDATE</a>.\n     This allows applications to keep track of the buffering status\n     while streaming audio/video.&lt;/p&gt;\n\n     &lt;p&gt; When the playback reaches the end of stream, the behavior depends on whether or\n     not you've enabled looping by calling <a href=\"#!/api/android.media.MediaPlayer2-method-loopCurrent\" rel=\"android.media.MediaPlayer2-method-loopCurrent\" class=\"docClass\">loopCurrent</a>:&lt;/p&gt;\n     &lt;ul&gt;\n     &lt;li&gt;If the looping mode was set to &lt;code&gt;false&lt;/code&gt;, the player will transfer\n     to the &lt;strong&gt;Paused&lt;/strong&gt; state. If you registered an <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onInfo\" rel=\"android.media.MediaPlayer2.EventCallback-method-onInfo\" class=\"docClass\">onInfo</a> &lt;a href=\"#Callbacks\"&gt;callback&lt;/a&gt;\n     the player calls the callback with <a href=\"#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_END\" rel=\"android.media.MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_END\" class=\"docClass\">MEDIA_INFO_DATA_SOURCE_END</a> and enters\n     the &lt;strong&gt;Paused&lt;/strong&gt; state.\n     &lt;/li&gt;\n     &lt;li&gt;If the looping mode was set to &lt;code&gt;true&lt;/code&gt;,\n     the MediaPlayer2 object remains in the &lt;strong&gt;Playing&lt;/strong&gt; state and replays its\n     data source from the beginning.&lt;/li&gt;\n     &lt;/ul&gt;\n     &lt;/li&gt;\n\n &lt;li&gt;<a href=\"#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_PAUSED\" rel=\"android.media.MediaPlayer2-property-PLAYER_STATE_PAUSED\" class=\"docClass\">PLAYER_STATE_PAUSED</a>: Audio/video playback pauses while in this state.\n     Call <a href=\"#!/api/android.media.MediaPlayer2-method-play\" rel=\"android.media.MediaPlayer2-method-play\" class=\"docClass\">play</a>() to resume playback from the position where it paused.&lt;/li&gt;\n\n &lt;li&gt;<a href=\"#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_ERROR\" rel=\"android.media.MediaPlayer2-property-PLAYER_STATE_ERROR\" class=\"docClass\">PLAYER_STATE_ERROR</a>: &lt;p&gt;In general, playback might fail due to various\n      reasons such as unsupported audio/video format, poorly interleaved\n      audio/video, resolution too high, streaming timeout, and others.\n      In addition, due to programming errors, a playback\n      control operation might be performed from an &lt;a href=\"#InvalidStates\"&gt;invalid state&lt;/a&gt;.\n      In these cases the player transitions to the &lt;strong&gt;Error&lt;/strong&gt; state.&lt;/p&gt;\n\n      &lt;p&gt;If you register an <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onError\" rel=\"android.media.MediaPlayer2.EventCallback-method-onError\" class=\"docClass\">onError</a>}\n      &lt;a href=\"#Callbacks\"&gt;callback&lt;/a&gt;,\n      the callback will be performed when entering the state. When programming errors happen,\n      such as calling <a href=\"#!/api/android.media.MediaPlayer2-method-prepare\" rel=\"android.media.MediaPlayer2-method-prepare\" class=\"docClass\">prepare</a>() and\n      <a href=\"#!/api/android.media.MediaPlayer2-method-setDataSource\" rel=\"android.media.MediaPlayer2-method-setDataSource\" class=\"docClass\">setDataSource</a> methods\n      from an &lt;a href=\"#InvalidStates\"&gt;invalid state&lt;/a&gt;, the callback is called with\n      <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_STATUS_INVALID_OPERATION\" rel=\"android.media.MediaPlayer2-property-CALL_STATUS_INVALID_OPERATION\" class=\"docClass\">CALL_STATUS_INVALID_OPERATION</a>. The MediaPlayer2 object enters the\n      &lt;strong&gt;Error&lt;/strong&gt; state whether or not a callback exists. &lt;/p&gt;\n\n      &lt;p&gt;To recover from an error and reuse a MediaPlayer2 object that is in the &lt;strong&gt;\n      Error&lt;/strong&gt; state,\n      call <a href=\"#!/api/android.media.MediaPlayer2-method-reset\" rel=\"android.media.MediaPlayer2-method-reset\" class=\"docClass\">reset</a>(). The object will return to the &lt;strong&gt;Idle&lt;/strong&gt;\n      state and all state information will be lost.&lt;/p&gt;\n      &lt;/li&gt;\n</code></pre>\n\n<p> </p>\n\n<p> <p>You should follow these best practices when coding an app that uses MediaPlayer2:</p></p>\n\n<p> <ul></ul></p>\n\n<p> <li>Use <a href=\"#Callbacks\">callbacks</a> to respond to state changes and errors.</li></p>\n\n<p> <li>When  a MediaPlayer2 object is no longer being used, call <a href=\"#!/api/android.media.MediaPlayer2-method-close\" rel=\"android.media.MediaPlayer2-method-close\" class=\"docClass\">close</a>() as soon as\n possible to release the resources used by the internal player engine associated with the\n MediaPlayer2. Failure to call <a href=\"#!/api/android.media.MediaPlayer2-method-close\" rel=\"android.media.MediaPlayer2-method-close\" class=\"docClass\">close</a>() may cause subsequent instances of\n MediaPlayer2 objects to fallback to software implementations or fail altogether.\n You cannot use MediaPlayer2\n after you call <a href=\"#!/api/android.media.MediaPlayer2-method-close\" rel=\"android.media.MediaPlayer2-method-close\" class=\"docClass\">close</a>(). There is no way to bring it back to any other state.</li></p>\n\n<p> <li>The current playback position can be retrieved with a call to\n <a href=\"#!/api/android.media.MediaPlayer2-method-getCurrentPosition\" rel=\"android.media.MediaPlayer2-method-getCurrentPosition\" class=\"docClass\">getCurrentPosition</a>(),\n which is helpful for applications such as a Music player that need to keep track of the playback\n progress.</li></p>\n\n<p> <li>The playback position can be adjusted with a call to <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a>. Although the\n asynchronous <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a> call returns right away, the actual seek operation may take a\n while to finish, especially for audio/video being streamed. If you register an\n <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" rel=\"android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" class=\"docClass\">onCallCompleted</a> <a href=\"#Callbacks\">callback</a>,\n the callback is\n called When the seek operation completes with <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SEEK_TO\" rel=\"android.media.MediaPlayer2-property-CALL_COMPLETED_SEEK_TO\" class=\"docClass\">CALL_COMPLETED_SEEK_TO</a>.</li></p>\n\n<p> <li>You can call <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a> from the <strong>Paused</strong> state.\n In this case, if you are playing a video stream and\n the requested position is valid  one video frame is displayed.</li></p>\n\n<p> </p>\n\n<p> <h3 id=\"InvalidStates\">Invalid method calls</h3></p>\n\n<p> <p>The only methods you safely call from the <strong>Error</strong> state are\n <a href=\"#!/api/android.media.MediaPlayer2-method-close\" rel=\"android.media.MediaPlayer2-method-close\" class=\"docClass\">close</a>,\n <a href=\"#!/api/android.media.MediaPlayer2-method-reset\" rel=\"android.media.MediaPlayer2-method-reset\" class=\"docClass\">reset</a>,\n <a href=\"#!/api/android.media.MediaPlayer2-method-notifyWhenCommandLabelReached\" rel=\"android.media.MediaPlayer2-method-notifyWhenCommandLabelReached\" class=\"docClass\">notifyWhenCommandLabelReached</a>,\n <a href=\"#!/api/android.media.MediaPlayer2-method-clearPendingCommands\" rel=\"android.media.MediaPlayer2-method-clearPendingCommands\" class=\"docClass\">clearPendingCommands</a>,\n <a href=\"#!/api/android.media.MediaPlayer2-method-registerEventCallback\" rel=\"android.media.MediaPlayer2-method-registerEventCallback\" class=\"docClass\">registerEventCallback</a>,\n <a href=\"#!/api/android.media.MediaPlayer2-method-unregisterEventCallback\" rel=\"android.media.MediaPlayer2-method-unregisterEventCallback\" class=\"docClass\">unregisterEventCallback</a>\n and <a href=\"#!/api/android.media.MediaPlayer2-method-getState\" rel=\"android.media.MediaPlayer2-method-getState\" class=\"docClass\">getState</a>.\n Any other methods might throw an exception, return meaningless data, or invoke a\n <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" rel=\"android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" class=\"docClass\">onCallCompleted</a> with an error code.</p></p>\n\n<p> <p>Most methods can be called from any non-Error state. They will either perform their work or\n silently have no effect. The following table lists the methods that will invoke a\n <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" rel=\"android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" class=\"docClass\">onCallCompleted</a> with an error code\n or throw an exception when they are called from the associated invalid states.</p></p>\n\n<p> <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n <tr><th>Method Name</th>\n <th>Invalid States</th></tr></table></p>\n\n<p> <tr><td>setDataSource</td> <td>{Prepared, Paused, Playing}</td></tr>\n <tr><td>prepare</td> <td>{Prepared, Paused, Playing}</td></tr>\n <tr><td>play</td> <td>{Idle}</td></tr>\n <tr><td>pause</td> <td>{Idle}</td></tr>\n <tr><td>seekTo</td> <td>{Idle}</td></tr>\n <tr><td>getCurrentPosition</td> <td>{Idle}</td></tr>\n <tr><td>getDuration</td> <td>{Idle}</td></tr>\n <tr><td>getBufferedPosition</td> <td>{Idle}</td></tr>\n <tr><td>getTrackInfo</td> <td>{Idle}</td></tr>\n <tr><td>getSelectedTrack</td> <td>{Idle}</td></tr>\n <tr><td>selectTrack</td> <td>{Idle}</td></tr>\n <tr><td>deselectTrack</td> <td>{Idle}</td></tr>\n </p>\n\n<p> <h3 id=\"Permissions\">Permissions</h3>\n <p>This class requires the android.Manifest.permission.INTERNET permission\n when used with network-based content.</p>\n\n<p> <h3 id=\"Callbacks\">Callbacks</h3>\n <p>Many errors do not result in a transition to the  <strong>Error</strong> state.\n It is good programming practice to register callback listeners using\n <a href=\"#!/api/android.media.MediaPlayer2-method-registerEventCallback\" rel=\"android.media.MediaPlayer2-method-registerEventCallback\" class=\"docClass\">registerEventCallback</a>.\n You can receive a callback at any time and from any state.</p></p>\n\n<p> <p>If it's important for your app to respond to state changes (for instance, to update the\n controls on a transport UI), you should register an\n <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" rel=\"android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" class=\"docClass\">onCallCompleted</a> and\n detect state change commands by testing the <code>what</code> parameter for a callback from one\n of the state transition methods: <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_PREPARE\" rel=\"android.media.MediaPlayer2-property-CALL_COMPLETED_PREPARE\" class=\"docClass\">CALL_COMPLETED_PREPARE</a>, <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_PLAY\" rel=\"android.media.MediaPlayer2-property-CALL_COMPLETED_PLAY\" class=\"docClass\">CALL_COMPLETED_PLAY</a>,\n and <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_PAUSE\" rel=\"android.media.MediaPlayer2-property-CALL_COMPLETED_PAUSE\" class=\"docClass\">CALL_COMPLETED_PAUSE</a>.\n Then check the <code>status</code> parameter. The value <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_STATUS_NO_ERROR\" rel=\"android.media.MediaPlayer2-property-CALL_STATUS_NO_ERROR\" class=\"docClass\">CALL_STATUS_NO_ERROR</a> indicates a\n successful transition. Any other value will be an error. Call <a href=\"#!/api/android.media.MediaPlayer2-method-getState\" rel=\"android.media.MediaPlayer2-method-getState\" class=\"docClass\">getState</a>() to\n determine the current state. </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CALL_COMPLETED_ATTACH_AUX_EFFECT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_ATTACH_AUX_EFFECT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_ATTACH_AUX_EFFECT' class='name expandable'>CALL_COMPLETED_ATTACH_AUX_EFFECT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call attachAuxEffect. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-attachAuxEffect\" rel=\"android.media.MediaPlayer2-method-attachAuxEffect\" class=\"docClass\">attachAuxEffect</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_CLEAR_NEXT_DATA_SOURCES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_CLEAR_NEXT_DATA_SOURCES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_CLEAR_NEXT_DATA_SOURCES' class='name expandable'>CALL_COMPLETED_CLEAR_NEXT_DATA_SOURCES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call clearNextDataSources. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-clearNextDataSources\" rel=\"android.media.MediaPlayer2-method-clearNextDataSources\" class=\"docClass\">clearNextDataSources</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;30&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_DESELECT_TRACK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_DESELECT_TRACK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_DESELECT_TRACK' class='name expandable'>CALL_COMPLETED_DESELECT_TRACK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call deselectTrack. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-deselectTrack\" rel=\"android.media.MediaPlayer2-method-deselectTrack\" class=\"docClass\">deselectTrack</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_LOOP_CURRENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_LOOP_CURRENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_LOOP_CURRENT' class='name expandable'>CALL_COMPLETED_LOOP_CURRENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call loopCurrent. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-loopCurrent\" rel=\"android.media.MediaPlayer2-method-loopCurrent\" class=\"docClass\">loopCurrent</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_PAUSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_PAUSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_PAUSE' class='name expandable'>CALL_COMPLETED_PAUSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call pause. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-pause\" rel=\"android.media.MediaPlayer2-method-pause\" class=\"docClass\">pause</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_PLAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_PLAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_PLAY' class='name expandable'>CALL_COMPLETED_PLAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call play. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-play\" rel=\"android.media.MediaPlayer2-method-play\" class=\"docClass\">play</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_PREPARE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_PREPARE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_PREPARE' class='name expandable'>CALL_COMPLETED_PREPARE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call prepare. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-prepare\" rel=\"android.media.MediaPlayer2-method-prepare\" class=\"docClass\">prepare</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SEEK_TO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SEEK_TO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SEEK_TO' class='name expandable'>CALL_COMPLETED_SEEK_TO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call seekTo. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;14&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SELECT_TRACK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SELECT_TRACK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SELECT_TRACK' class='name expandable'>CALL_COMPLETED_SELECT_TRACK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call selectTrack. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-selectTrack\" rel=\"android.media.MediaPlayer2-method-selectTrack\" class=\"docClass\">selectTrack</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;15&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_AUDIO_ATTRIBUTES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_AUDIO_ATTRIBUTES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_AUDIO_ATTRIBUTES' class='name expandable'>CALL_COMPLETED_SET_AUDIO_ATTRIBUTES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setAudioAttributes. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setAudioAttributes\" rel=\"android.media.MediaPlayer2-method-setAudioAttributes\" class=\"docClass\">setAudioAttributes</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_AUDIO_SESSION_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_AUDIO_SESSION_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_AUDIO_SESSION_ID' class='name expandable'>CALL_COMPLETED_SET_AUDIO_SESSION_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setAudioSessionId. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setAudioSessionId\" rel=\"android.media.MediaPlayer2-method-setAudioSessionId\" class=\"docClass\">setAudioSessionId</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;17&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_AUX_EFFECT_SEND_LEVEL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_AUX_EFFECT_SEND_LEVEL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_AUX_EFFECT_SEND_LEVEL' class='name expandable'>CALL_COMPLETED_SET_AUX_EFFECT_SEND_LEVEL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setAuxEffectSendLevel. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setAuxEffectSendLevel\" rel=\"android.media.MediaPlayer2-method-setAuxEffectSendLevel\" class=\"docClass\">setAuxEffectSendLevel</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;18&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_DATA_SOURCE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_DATA_SOURCE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_DATA_SOURCE' class='name expandable'>CALL_COMPLETED_SET_DATA_SOURCE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setDataSource. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setDataSource\" rel=\"android.media.MediaPlayer2-method-setDataSource\" class=\"docClass\">setDataSource</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;19&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_DISPLAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_DISPLAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_DISPLAY' class='name expandable'>CALL_COMPLETED_SET_DISPLAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setDisplay. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setDisplay\" rel=\"android.media.MediaPlayer2-method-setDisplay\" class=\"docClass\">setDisplay</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;33&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_NEXT_DATA_SOURCE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_NEXT_DATA_SOURCE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_NEXT_DATA_SOURCE' class='name expandable'>CALL_COMPLETED_SET_NEXT_DATA_SOURCE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setNextDataSource. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setNextDataSource\" rel=\"android.media.MediaPlayer2-method-setNextDataSource\" class=\"docClass\">setNextDataSource</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;22&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_NEXT_DATA_SOURCES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_NEXT_DATA_SOURCES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_NEXT_DATA_SOURCES' class='name expandable'>CALL_COMPLETED_SET_NEXT_DATA_SOURCES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setNextDataSources. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setNextDataSources\" rel=\"android.media.MediaPlayer2-method-setNextDataSources\" class=\"docClass\">setNextDataSources</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;23&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_PLAYBACK_PARAMS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_PLAYBACK_PARAMS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_PLAYBACK_PARAMS' class='name expandable'>CALL_COMPLETED_SET_PLAYBACK_PARAMS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setPlaybackParams. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setPlaybackParams\" rel=\"android.media.MediaPlayer2-method-setPlaybackParams\" class=\"docClass\">setPlaybackParams</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;24&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_PLAYER_VOLUME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_PLAYER_VOLUME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_PLAYER_VOLUME' class='name expandable'>CALL_COMPLETED_SET_PLAYER_VOLUME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setPlayerVolume. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setPlayerVolume\" rel=\"android.media.MediaPlayer2-method-setPlayerVolume\" class=\"docClass\">setPlayerVolume</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;26&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_SCREEN_ON_WHILE_PLAYING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_SCREEN_ON_WHILE_PLAYING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_SCREEN_ON_WHILE_PLAYING' class='name expandable'>CALL_COMPLETED_SET_SCREEN_ON_WHILE_PLAYING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setScreenOnWhilePlaying. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setScreenOnWhilePlaying\" rel=\"android.media.MediaPlayer2-method-setScreenOnWhilePlaying\" class=\"docClass\">setScreenOnWhilePlaying</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;35&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_SURFACE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_SURFACE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_SURFACE' class='name expandable'>CALL_COMPLETED_SET_SURFACE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setSurface. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setSurface\" rel=\"android.media.MediaPlayer2-method-setSurface\" class=\"docClass\">setSurface</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;27&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_SYNC_PARAMS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_SYNC_PARAMS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_SYNC_PARAMS' class='name expandable'>CALL_COMPLETED_SET_SYNC_PARAMS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setSyncParams. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setSyncParams\" rel=\"android.media.MediaPlayer2-method-setSyncParams\" class=\"docClass\">setSyncParams</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;28&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SET_WAKE_LOCK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SET_WAKE_LOCK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SET_WAKE_LOCK' class='name expandable'>CALL_COMPLETED_SET_WAKE_LOCK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call setWakeLock. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-setWakeLock\" rel=\"android.media.MediaPlayer2-method-setWakeLock\" class=\"docClass\">setWakeLock</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;34&quot;</code></p></div></div></div><div id='property-CALL_COMPLETED_SKIP_TO_NEXT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_COMPLETED_SKIP_TO_NEXT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SKIP_TO_NEXT' class='name expandable'>CALL_COMPLETED_SKIP_TO_NEXT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed a call skipToNext. ...</div><div class='long'><p>The player just completed a call <a href=\"#!/api/android.media.MediaPlayer2-method-skipToNext\" rel=\"android.media.MediaPlayer2-method-skipToNext\" class=\"docClass\">skipToNext</a>.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;29&quot;</code></p></div></div></div><div id='property-CALL_STATUS_BAD_VALUE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_BAD_VALUE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_BAD_VALUE' class='name expandable'>CALL_STATUS_BAD_VALUE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents that the argument is illegal. ...</div><div class='long'><p>Status code represents that the argument is illegal.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-CALL_STATUS_ERROR_IO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_ERROR_IO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_ERROR_IO' class='name expandable'>CALL_STATUS_ERROR_IO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents a file or network related operation error. ...</div><div class='long'><p>Status code represents a file or network related operation error.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-CALL_STATUS_ERROR_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_ERROR_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_ERROR_UNKNOWN' class='name expandable'>CALL_STATUS_ERROR_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents that call is ended with an unknown error. ...</div><div class='long'><p>Status code represents that call is ended with an unknown error.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;-2147483648&quot;</code></p></div></div></div><div id='property-CALL_STATUS_INVALID_OPERATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_INVALID_OPERATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_INVALID_OPERATION' class='name expandable'>CALL_STATUS_INVALID_OPERATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents that the player is not in valid state for the operation. ...</div><div class='long'><p>Status code represents that the player is not in valid state for the operation.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-CALL_STATUS_NO_DRM_SCHEME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_NO_DRM_SCHEME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_NO_DRM_SCHEME' class='name expandable'>CALL_STATUS_NO_DRM_SCHEME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents that DRM operation is called before preparing a DRM scheme through\n  {@code prepareDrm}. ...</div><div class='long'><p>Status code represents that DRM operation is called before preparing a DRM scheme through\n  {@code prepareDrm}.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-CALL_STATUS_NO_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_NO_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_NO_ERROR' class='name expandable'>CALL_STATUS_NO_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents that call is completed without an error. ...</div><div class='long'><p>Status code represents that call is completed without an error.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-CALL_STATUS_PERMISSION_DENIED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_PERMISSION_DENIED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_PERMISSION_DENIED' class='name expandable'>CALL_STATUS_PERMISSION_DENIED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents that the operation is not allowed. ...</div><div class='long'><p>Status code represents that the operation is not allowed.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-CALL_STATUS_SKIPPED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-CALL_STATUS_SKIPPED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-CALL_STATUS_SKIPPED' class='name expandable'>CALL_STATUS_SKIPPED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Status code represents that the call has been skipped. ...</div><div class='long'><p>Status code represents that the call has been skipped. For example, a <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a>\n request may be skipped if it is followed by another <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a> request.\n @see EventCallback#onCallCompleted</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-MEDIA_ERROR_IO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_ERROR_IO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_ERROR_IO' class='name expandable'>MEDIA_ERROR_IO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>File or network related operation errors. ...</div><div class='long'><p>File or network related operation errors.</p>\n<p>Defaults to: <code>&quot;-1004&quot;</code></p></div></div></div><div id='property-MEDIA_ERROR_MALFORMED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_ERROR_MALFORMED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_ERROR_MALFORMED' class='name expandable'>MEDIA_ERROR_MALFORMED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bitstream is not conforming to the related coding standard or file spec. ...</div><div class='long'><p>Bitstream is not conforming to the related coding standard or file spec.</p>\n<p>Defaults to: <code>&quot;-1007&quot;</code></p></div></div></div><div id='property-MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK' class='name expandable'>MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The video is streamed and its container is not valid for progressive\nplayback i.e the video's index (e.g moov atom) i...</div><div class='long'><p>The video is streamed and its container is not valid for progressive\nplayback i.e the video's index (e.g moov atom) is not at the start of the\nfile.\n@see EventCallback#onError</p>\n<p>Defaults to: <code>&quot;200&quot;</code></p></div></div></div><div id='property-MEDIA_ERROR_TIMED_OUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_ERROR_TIMED_OUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_ERROR_TIMED_OUT' class='name expandable'>MEDIA_ERROR_TIMED_OUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Some operation takes too long to complete, usually more than 3-5 seconds. ...</div><div class='long'><p>Some operation takes too long to complete, usually more than 3-5 seconds.</p>\n<p>Defaults to: <code>&quot;-110&quot;</code></p></div></div></div><div id='property-MEDIA_ERROR_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_ERROR_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_ERROR_UNKNOWN' class='name expandable'>MEDIA_ERROR_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unspecified media player error. ...</div><div class='long'><p>Unspecified media player error.\n @see EventCallback#onError</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-MEDIA_ERROR_UNSUPPORTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_ERROR_UNSUPPORTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_ERROR_UNSUPPORTED' class='name expandable'>MEDIA_ERROR_UNSUPPORTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bitstream is conforming to the related coding standard or file spec, but\n the media framework does not support the fe...</div><div class='long'><p>Bitstream is conforming to the related coding standard or file spec, but\n the media framework does not support the feature.</p>\n<p>Defaults to: <code>&quot;-1010&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_AUDIO_NOT_PLAYING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_AUDIO_NOT_PLAYING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_AUDIO_NOT_PLAYING' class='name expandable'>MEDIA_INFO_AUDIO_NOT_PLAYING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs that audio is not playing. ...</div><div class='long'><p>Informs that audio is not playing. Note that playback of the video\n is not interrupted.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;804&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_AUDIO_RENDERING_START' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_AUDIO_RENDERING_START' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_AUDIO_RENDERING_START' class='name expandable'>MEDIA_INFO_AUDIO_RENDERING_START</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just rendered the very first audio sample. ...</div><div class='long'><p>The player just rendered the very first audio sample.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_BAD_INTERLEAVING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_BAD_INTERLEAVING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_BAD_INTERLEAVING' class='name expandable'>MEDIA_INFO_BAD_INTERLEAVING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bad interleaving means that a media has been improperly interleaved or\n not interleaved at all, e.g has all the video...</div><div class='long'><p>Bad interleaving means that a media has been improperly interleaved or\n not interleaved at all, e.g has all the video samples first then all the\n audio ones. Video is playing but a lot of disk seeks may be happening.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;800&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_BUFFERING_END' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_BUFFERING_END' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_BUFFERING_END' class='name expandable'>MEDIA_INFO_BUFFERING_END</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MediaPlayer2 is resuming playback after filling buffers. ...</div><div class='long'><p>MediaPlayer2 is resuming playback after filling buffers.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;702&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_BUFFERING_START' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_BUFFERING_START' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_BUFFERING_START' class='name expandable'>MEDIA_INFO_BUFFERING_START</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MediaPlayer2 is temporarily pausing playback internally in order to\n buffer more data. ...</div><div class='long'><p>MediaPlayer2 is temporarily pausing playback internally in order to\n buffer more data.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;701&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_BUFFERING_UPDATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_BUFFERING_UPDATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_BUFFERING_UPDATE' class='name expandable'>MEDIA_INFO_BUFFERING_UPDATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Update status in buffering a media source received through progressive downloading. ...</div><div class='long'><p>Update status in buffering a media source received through progressive downloading.\nThe received buffering percentage indicates how much of the content has been buffered\nor played. For example a buffering update of 80 percent when half the content\nhas already been played indicates that the next 30 percent of the\ncontent to play has been buffered.</p>\n\n<p>The {@code extra} parameter in {@code EventCallback.onInfo} is the\npercentage (0-100) of the content that has been buffered or played thus far.\n@see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;704&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_DATA_SOURCE_END' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_END' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_END' class='name expandable'>MEDIA_INFO_DATA_SOURCE_END</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed the playback of this data source. ...</div><div class='long'><p>The player just completed the playback of this data source.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_DATA_SOURCE_LIST_END' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_LIST_END' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_LIST_END' class='name expandable'>MEDIA_INFO_DATA_SOURCE_LIST_END</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed the playback of all data sources set by setDataSource,\n setNextDataSource and setNextDataSo...</div><div class='long'><p>The player just completed the playback of all data sources set by <a href=\"#!/api/android.media.MediaPlayer2-method-setDataSource\" rel=\"android.media.MediaPlayer2-method-setDataSource\" class=\"docClass\">setDataSource</a>,\n <a href=\"#!/api/android.media.MediaPlayer2-method-setNextDataSource\" rel=\"android.media.MediaPlayer2-method-setNextDataSource\" class=\"docClass\">setNextDataSource</a> and <a href=\"#!/api/android.media.MediaPlayer2-method-setNextDataSources\" rel=\"android.media.MediaPlayer2-method-setNextDataSources\" class=\"docClass\">setNextDataSources</a>.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_DATA_SOURCE_REPEAT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_REPEAT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_REPEAT' class='name expandable'>MEDIA_INFO_DATA_SOURCE_REPEAT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just completed an iteration of playback loop. ...</div><div class='long'><p>The player just completed an iteration of playback loop. This event is sent only when\n  looping is enabled by <a href=\"#!/api/android.media.MediaPlayer2-method-loopCurrent\" rel=\"android.media.MediaPlayer2-method-loopCurrent\" class=\"docClass\">loopCurrent</a>.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;7&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_DATA_SOURCE_START' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_START' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_DATA_SOURCE_START' class='name expandable'>MEDIA_INFO_DATA_SOURCE_START</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just started the playback of this datas source. ...</div><div class='long'><p>The player just started the playback of this datas source.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_METADATA_UPDATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_METADATA_UPDATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_METADATA_UPDATE' class='name expandable'>MEDIA_INFO_METADATA_UPDATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A new set of metadata is available. ...</div><div class='long'><p>A new set of metadata is available.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;802&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_NOT_SEEKABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_NOT_SEEKABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_NOT_SEEKABLE' class='name expandable'>MEDIA_INFO_NOT_SEEKABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The media cannot be seeked (e.g live stream)\n @see EventCallback#onInfo ...</div><div class='long'><p>The media cannot be seeked (e.g live stream)\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;801&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_PREPARED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_PREPARED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_PREPARED' class='name expandable'>MEDIA_INFO_PREPARED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just prepared a data source. ...</div><div class='long'><p>The player just prepared a data source.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;100&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_SUBTITLE_TIMED_OUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_SUBTITLE_TIMED_OUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_SUBTITLE_TIMED_OUT' class='name expandable'>MEDIA_INFO_SUBTITLE_TIMED_OUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reading the subtitle track takes too long. ...</div><div class='long'><p>Reading the subtitle track takes too long.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;902&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_TIMED_TEXT_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_TIMED_TEXT_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_TIMED_TEXT_ERROR' class='name expandable'>MEDIA_INFO_TIMED_TEXT_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Failed to handle timed text track properly. ...</div><div class='long'><p>Failed to handle timed text track properly.\n @see EventCallback#onInfo</p>\n\n<p> {@hide}</p>\n<p>Defaults to: <code>&quot;900&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_UNKNOWN' class='name expandable'>MEDIA_INFO_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unspecified media player info. ...</div><div class='long'><p>Unspecified media player info.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_UNSUPPORTED_SUBTITLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_UNSUPPORTED_SUBTITLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_UNSUPPORTED_SUBTITLE' class='name expandable'>MEDIA_INFO_UNSUPPORTED_SUBTITLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Subtitle track was not supported by the media framework. ...</div><div class='long'><p>Subtitle track was not supported by the media framework.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;901&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_VIDEO_NOT_PLAYING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_VIDEO_NOT_PLAYING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_VIDEO_NOT_PLAYING' class='name expandable'>MEDIA_INFO_VIDEO_NOT_PLAYING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs that video is not playing. ...</div><div class='long'><p>Informs that video is not playing. Note that playback of the audio\n is not interrupted.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;805&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_VIDEO_RENDERING_START' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_VIDEO_RENDERING_START' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_VIDEO_RENDERING_START' class='name expandable'>MEDIA_INFO_VIDEO_RENDERING_START</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The player just pushed the very first video frame for rendering. ...</div><div class='long'><p>The player just pushed the very first video frame for rendering.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-MEDIA_INFO_VIDEO_TRACK_LAGGING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-MEDIA_INFO_VIDEO_TRACK_LAGGING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-MEDIA_INFO_VIDEO_TRACK_LAGGING' class='name expandable'>MEDIA_INFO_VIDEO_TRACK_LAGGING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The video is too complex for the decoder: it can't decode frames fast\n  enough. ...</div><div class='long'><p>The video is too complex for the decoder: it can't decode frames fast\n  enough. Possibly only the audio plays fine at this stage.\n @see EventCallback#onInfo</p>\n<p>Defaults to: <code>&quot;700&quot;</code></p></div></div></div><div id='property-PLAYER_STATE_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PLAYER_STATE_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_ERROR' class='name expandable'>PLAYER_STATE_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MediaPlayer2 has hit some fatal error and cannot continue playback. ...</div><div class='long'><p>MediaPlayer2 has hit some fatal error and cannot continue playback.</p>\n<p>Defaults to: <code>&quot;1005&quot;</code></p></div></div></div><div id='property-PLAYER_STATE_IDLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PLAYER_STATE_IDLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_IDLE' class='name expandable'>PLAYER_STATE_IDLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MediaPlayer2 has not been prepared or just has been reset. ...</div><div class='long'><p>MediaPlayer2 has not been prepared or just has been reset.\nIn this state, MediaPlayer2 doesn't fetch data.</p>\n<p>Defaults to: <code>&quot;1001&quot;</code></p></div></div></div><div id='property-PLAYER_STATE_PAUSED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PLAYER_STATE_PAUSED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_PAUSED' class='name expandable'>PLAYER_STATE_PAUSED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MediaPlayer2 is paused. ...</div><div class='long'><p>MediaPlayer2 is paused.\nIn this state, MediaPlayer2 has allocated resources to construct playback\npipeline, but it doesn't actively render data.</p>\n<p>Defaults to: <code>&quot;1003&quot;</code></p></div></div></div><div id='property-PLAYER_STATE_PLAYING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PLAYER_STATE_PLAYING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_PLAYING' class='name expandable'>PLAYER_STATE_PLAYING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MediaPlayer2 is actively playing back data. ...</div><div class='long'><p>MediaPlayer2 is actively playing back data.</p>\n<p>Defaults to: <code>&quot;1004&quot;</code></p></div></div></div><div id='property-PLAYER_STATE_PREPARED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PLAYER_STATE_PREPARED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_PREPARED' class='name expandable'>PLAYER_STATE_PREPARED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>MediaPlayer2 has been just prepared. ...</div><div class='long'><p>MediaPlayer2 has been just prepared.\nIn this state, MediaPlayer2 just fetches data from media source,\nbut doesn't actively render data.</p>\n<p>Defaults to: <code>&quot;1002&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_KEY_EXCHANGE_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_KEY_EXCHANGE_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_KEY_EXCHANGE_ERROR' class='name expandable'>PREPARE_DRM_STATUS_KEY_EXCHANGE_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>Error during key request/response exchange with license server.</p>\n<p>Defaults to: <code>&quot;7&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_PREPARATION_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_PREPARATION_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_PREPARATION_ERROR' class='name expandable'>PREPARE_DRM_STATUS_PREPARATION_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>The DRM preparation has failed .</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR' class='name expandable'>PREPARE_DRM_STATUS_PROVISIONING_NETWORK_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>The device required DRM provisioning but couldn't reach the provisioning server.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR' class='name expandable'>PREPARE_DRM_STATUS_PROVISIONING_SERVER_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>The device required DRM provisioning but the provisioning server denied the request.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_RESOURCE_BUSY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_RESOURCE_BUSY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_RESOURCE_BUSY' class='name expandable'>PREPARE_DRM_STATUS_RESOURCE_BUSY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>The hardware resources are not available, due to being in use.</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_RESTORE_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_RESTORE_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_RESTORE_ERROR' class='name expandable'>PREPARE_DRM_STATUS_RESTORE_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>Restoring persisted offline keys failed.</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_SUCCESS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_SUCCESS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_SUCCESS' class='name expandable'>PREPARE_DRM_STATUS_SUCCESS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>DRM preparation has succeeded.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-PREPARE_DRM_STATUS_UNSUPPORTED_SCHEME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-PREPARE_DRM_STATUS_UNSUPPORTED_SCHEME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-PREPARE_DRM_STATUS_UNSUPPORTED_SCHEME' class='name expandable'>PREPARE_DRM_STATUS_UNSUPPORTED_SCHEME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener. ...</div><div class='long'><p>A status code for android.media.MediaDrm.DrmEventCallback.onDrmPrepared listener.</p>\n\n<p><p></p>\n\n<p>The crypto scheme UUID is not supported by the device.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-SEEK_CLOSEST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-SEEK_CLOSEST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-SEEK_CLOSEST' class='name expandable'>SEEK_CLOSEST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This mode is used with int) to move media position to\na frame (not necessarily a key frame) associated with a data so...</div><div class='long'><p>This mode is used with int) to move media position to\na frame (not necessarily a key frame) associated with a data source that\nis located closest to or at the given time.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a>(long, int)</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-SEEK_CLOSEST_SYNC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-SEEK_CLOSEST_SYNC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-SEEK_CLOSEST_SYNC' class='name expandable'>SEEK_CLOSEST_SYNC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This mode is used with int) to move media position to\na sync (or key) frame associated with a data source that is loc...</div><div class='long'><p>This mode is used with int) to move media position to\na sync (or key) frame associated with a data source that is located\nclosest to (in time) or at the given time.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a>(long, int)</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SEEK_NEXT_SYNC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-SEEK_NEXT_SYNC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-SEEK_NEXT_SYNC' class='name expandable'>SEEK_NEXT_SYNC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This mode is used with int) to move media position to\na sync (or key) frame associated with a data source that is loc...</div><div class='long'><p>This mode is used with int) to move media position to\na sync (or key) frame associated with a data source that is located\nright after or at the given time.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a>(long, int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SEEK_PREVIOUS_SYNC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-property-SEEK_PREVIOUS_SYNC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-property-SEEK_PREVIOUS_SYNC' class='name expandable'>SEEK_PREVIOUS_SYNC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This mode is used with int) to move media position to\na sync (or key) frame associated with a data source that is loc...</div><div class='long'><p>This mode is used with int) to move media position to\na sync (or key) frame associated with a data source that is located\nright before or at the given time.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaPlayer2-method-seekTo\" rel=\"android.media.MediaPlayer2-method-seekTo\" class=\"docClass\">seekTo</a>(long, int)</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addOnRoutingChangedListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-addOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-addOnRoutingChangedListener' class='name expandable'>addOnRoutingChangedListener</a>( <span class='pre'>listener, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an android.media.AudioRouting.OnRoutingChangedListener to receive notifications of routing\n changes on this Medi...</div><div class='long'><p>Adds an android.media.AudioRouting.OnRoutingChangedListener to receive notifications of routing\n changes on this MediaPlayer2.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioRouting.OnRoutingChangedListener}<div class='sub-desc'><p>The AudioRouting.OnRoutingChangedListener interface to receive\n notifications of rerouting events.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Specifies the Handler object for the thread on which to execute\n the callback. If <code>null</code>, the handler on the main looper will be used.</p>\n</div></li></ul></div></div></div><div id='method-attachAuxEffect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-attachAuxEffect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-attachAuxEffect' class='name expandable'>attachAuxEffect</a>( <span class='pre'>effectId</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Attaches an auxiliary effect to the player. ...</div><div class='long'><p>Attaches an auxiliary effect to the player. A typical auxiliary effect is a reverberation\n effect which can be applied on any sound source that directs a certain amount of its\n energy to this effect. This amount is defined by setAuxEffectSendLevel().\n See <a href=\"#!/api/android.media.MediaPlayer2-method-setAuxEffectSendLevel\" rel=\"android.media.MediaPlayer2-method-setAuxEffectSendLevel\" class=\"docClass\">setAuxEffectSendLevel</a>(float).\n <p>After creating an auxiliary effect (e.g.\n android.media.audiofx.EnvironmentalReverb), retrieve its ID with\n android.media.audiofx.AudioEffect.getId() and use it when calling this method\n to attach the player to the effect.\n <p>To detach the effect from the player, call this method with a null effect id.\n <p>This method must be called after one of the overloaded <code> setDataSource </code>\n methods.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>effectId</span> : Number<div class='sub-desc'><p>system wide unique id of the effect to attach</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-cancelCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-cancelCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-cancelCommand' class='name expandable'>cancelCommand</a>( <span class='pre'>token</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancels a pending command. ...</div><div class='long'><p>Cancels a pending command.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {Object}<div class='sub-desc'><p>the command to be canceled. This is the returned Object when command is issued.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false} if the task could not be cancelled; {@code true} otherwise.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if argument token is null.</p>\n</div></li></ul></div></div></div><div id='method-clearDrmEventCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-clearDrmEventCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-clearDrmEventCallback' class='name expandable'>clearDrmEventCallback</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clear the android.media.MediaDrm.DrmEventCallback. ...</div><div class='long'><p>Clear the android.media.MediaDrm.DrmEventCallback.</p>\n\n<p> This is a synchronous call.</p>\n</div></div></div><div id='method-clearNextDataSources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-clearNextDataSources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-clearNextDataSources' class='name expandable'>clearNextDataSources</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all data sources pending to be played. ...</div><div class='long'><p>Removes all data sources pending to be played.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-clearPendingCommands' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-clearPendingCommands' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-clearPendingCommands' class='name expandable'>clearPendingCommands</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Discards all pending commands. ...</div><div class='long'><p>Discards all pending commands.</p>\n</div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Releases the resources held by this {@code MediaPlayer2} object. ...</div><div class='long'><p>Releases the resources held by this {@code MediaPlayer2} object.</p>\n\n<p> It is considered good practice to call this method when you're\n done using the MediaPlayer2. In particular, whenever an Activity\n of an application is paused (its onPause() method is called),\n or stopped (its onStop() method is called), this method should be\n invoked to release the MediaPlayer2 object, unless the application\n has a special need to keep the object around. In addition to\n unnecessary resources (such as memory and instances of codecs)\n being held, failure to call this method immediately if a\n MediaPlayer2 object is no longer needed may also lead to\n continuous battery consumption for mobile devices, and playback\n failure for other applications if no multiple instances of the\n same codec are supported on a device. Even if multiple instances\n of the same codec are supported, some performance degradation\n may be expected when unnecessary multiple instances are used\n at the same time.</p>\n\n<p> {@code close()} may be safely called after a prior {@code close()}.\n This class implements the Java {@code AutoCloseable} interface and\n may be used with try-with-resources.</p>\n</div></div></div><div id='method-deselectTrack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-deselectTrack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-deselectTrack' class='name expandable'>deselectTrack</a>( <span class='pre'>dsd, trackInfo</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Deselect a track. ...</div><div class='long'><p>Deselect a track.\n <p>\n Currently, the track must be a timed text track and no audio or video tracks can be\n deselected. If the timed text track identified by index has not been\n selected before, it throws an exception.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source of which you want to deselect track</p>\n</div></li><li><span class='pre'>trackInfo</span> : Object {MediaPlayer2.TrackInfo}<div class='sub-desc'><p>metadata corresponding to the track to be selected. A {@code trackInfo}\n object can be obtained from getTrackInfo().</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n\n<p> This is an asynchronous call.\n@see MediaPlayer2#getTrackInfo(DataSourceDesc)</p>\n</div></li></ul></div></div></div><div id='method-getAudioAttributes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getAudioAttributes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getAudioAttributes' class='name expandable'>getAudioAttributes</a>( <span class='pre'></span> ) : Object {android.media.AudioAttributes}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the audio attributes for this MediaPlayer2. ...</div><div class='long'><p>Gets the audio attributes for this MediaPlayer2.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.AudioAttributes}</span><div class='sub-desc'><p>attributes a set of audio attributes</p>\n</div></li></ul></div></div></div><div id='method-getAudioSessionId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getAudioSessionId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getAudioSessionId' class='name expandable'>getAudioSessionId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the audio session ID. ...</div><div class='long'><p>Returns the audio session ID.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the audio session ID. {@see <a href=\"#!/api/android.media.MediaPlayer2-method-setAudioSessionId\" rel=\"android.media.MediaPlayer2-method-setAudioSessionId\" class=\"docClass\">setAudioSessionId</a>(int)}\n Note that the audio session ID is 0 only if a problem occured when the MediaPlayer2 was\n contructed.</p>\n</div></li></ul></div></div></div><div id='method-getBufferedPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getBufferedPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getBufferedPosition' class='name expandable'>getBufferedPosition</a>( <span class='pre'>dsd</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the buffered media source position of given dsd. ...</div><div class='long'><p>Gets the buffered media source position of given dsd.\n For example a buffering update of 8000 milliseconds when 5000 milliseconds of the content\n has already been played indicates that the next 3000 milliseconds of the\n content to play has been buffered.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source of which you want to get buffered position</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the current buffered media source position in milliseconds</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if dsd is null</p>\n</div></li></ul></div></div></div><div id='method-getCurrentDataSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getCurrentDataSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getCurrentDataSource' class='name expandable'>getCurrentDataSource</a>( <span class='pre'></span> ) : Object {android.media.DataSourceDesc}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the current data source as described by a DataSourceDesc. ...</div><div class='long'><p>Gets the current data source as described by a DataSourceDesc.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.DataSourceDesc}</span><div class='sub-desc'><p>the current DataSourceDesc</p>\n</div></li></ul></div></div></div><div id='method-getCurrentPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getCurrentPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getCurrentPosition' class='name expandable'>getCurrentPosition</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the current playback position. ...</div><div class='long'><p>Gets the current playback position.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the current position in milliseconds</p>\n</div></li></ul></div></div></div><div id='method-getDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getDuration' class='name expandable'>getDuration</a>( <span class='pre'>dsd</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the duration of the dsd. ...</div><div class='long'><p>Gets the duration of the dsd.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source of which you want to get duration</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the duration in milliseconds, if no duration is available\n         (for example, if streaming live content), -1 is returned.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if dsd is null</p>\n</div></li></ul></div></div></div><div id='method-getMaxPlayerVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getMaxPlayerVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getMaxPlayerVolume' class='name expandable'>getMaxPlayerVolume</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum volume that can be used in setPlayerVolume(float).</p>\n</div></li></ul></div></div></div><div id='method-getMetrics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getMetrics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getMetrics' class='name expandable'>getMetrics</a>( <span class='pre'></span> ) : Object {android.os.PersistableBundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return Metrics data about the current player. ...</div><div class='long'><p>Return Metrics data about the current player.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.PersistableBundle}</span><div class='sub-desc'><p>a PersistableBundle containing the set of attributes and values\n available for the media being handled by this instance of MediaPlayer2\n The attributes are descibed in MetricsConstants.</p>\n\n<p> Additional vendor-specific fields may also be present in the return value.</p>\n</div></li></ul></div></div></div><div id='method-getPlaybackParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getPlaybackParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getPlaybackParams' class='name expandable'>getPlaybackParams</a>( <span class='pre'></span> ) : Object {android.media.PlaybackParams}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the playback params, containing the current playback rate. ...</div><div class='long'><p>Gets the playback params, containing the current playback rate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.PlaybackParams}</span><div class='sub-desc'><p>the playback params.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the internal player engine has not been initialized.</p>\n</div></li></ul></div></div></div><div id='method-getPlayerVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getPlayerVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getPlayerVolume' class='name expandable'>getPlayerVolume</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current volume of this player. ...</div><div class='long'><p>Returns the current volume of this player.\n Note that it does not take into account the associated stream volume.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the player volume.</p>\n</div></li></ul></div></div></div><div id='method-getPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getPreferredDevice' class='name expandable'>getPreferredDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the selected output specified by setPreferredDevice. ...</div><div class='long'><p>Returns the selected output specified by <a href=\"#!/api/android.media.MediaPlayer2-method-setPreferredDevice\" rel=\"android.media.MediaPlayer2-method-setPreferredDevice\" class=\"docClass\">setPreferredDevice</a>. Note that this\n is not guaranteed to correspond to the actual device being used for playback.</p>\n</div></div></div><div id='method-getRoutedDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getRoutedDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getRoutedDevice' class='name expandable'>getRoutedDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an android.media.AudioDeviceInfo identifying the current routing of this MediaPlayer2\n Note: The query is onl...</div><div class='long'><p>Returns an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> identifying the current routing of this MediaPlayer2\n Note: The query is only valid if the MediaPlayer2 is currently playing.\n If the player is not playing, the returned device can be null or correspond to previously\n selected device when the player was last active.</p>\n</div></div></div><div id='method-getSelectedTrack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getSelectedTrack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getSelectedTrack' class='name expandable'>getSelectedTrack</a>( <span class='pre'>dsd, trackType</span> ) : Object {android.media.MediaPlayer2.TrackInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the index of the audio, video, or subtitle track currently selected for playback. ...</div><div class='long'><p>Returns the index of the audio, video, or subtitle track currently selected for playback.\n The return value is an index into the array returned by <a href=\"#!/api/android.media.MediaPlayer2-method-getTrackInfo\" rel=\"android.media.MediaPlayer2-method-getTrackInfo\" class=\"docClass\">getTrackInfo</a>, and can\n be used in calls to android.media.MediaPlayer.TrackInfo) or\n android.media.MediaPlayer.TrackInfo).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source of which you want to get selected track</p>\n</div></li><li><span class='pre'>trackType</span> : Number<div class='sub-desc'><p>should be one of TrackInfo.MEDIA_TRACK_TYPE_VIDEO,\n TrackInfo.MEDIA_TRACK_TYPE_AUDIO, or\n TrackInfo.MEDIA_TRACK_TYPE_SUBTITLE</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaPlayer2.TrackInfo}</span><div class='sub-desc'><p>metadata corresponding to the audio, video, or subtitle track currently selected for\n playback; {@code null} is returned when there is no selected track for {@code trackType} or\n when {@code trackType} is not one of audio, video, or subtitle.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if called after close()</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if dsd is null\n@see <a href=\"#!/api/android.media.MediaPlayer2-method-getTrackInfo\" rel=\"android.media.MediaPlayer2-method-getTrackInfo\" class=\"docClass\">getTrackInfo</a>(DataSourceDesc)\n@see <a href=\"#!/api/android.media.MediaPlayer2-method-selectTrack\" rel=\"android.media.MediaPlayer2-method-selectTrack\" class=\"docClass\">selectTrack</a>(DataSourceDesc, TrackInfo)\n@see <a href=\"#!/api/android.media.MediaPlayer2-method-deselectTrack\" rel=\"android.media.MediaPlayer2-method-deselectTrack\" class=\"docClass\">deselectTrack</a>(DataSourceDesc, TrackInfo)</p>\n</div></li></ul></div></div></div><div id='method-getState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the current player state. ...</div><div class='long'><p>Gets the current player state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the current player state.</p>\n</div></li></ul></div></div></div><div id='method-getSyncParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getSyncParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getSyncParams' class='name expandable'>getSyncParams</a>( <span class='pre'></span> ) : Object {android.media.SyncParams}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the A/V sync mode. ...</div><div class='long'><p>Gets the A/V sync mode.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.SyncParams}</span><div class='sub-desc'><p>the A/V sync params</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the internal player engine has not been initialized.</p>\n</div></li></ul></div></div></div><div id='method-getTimestamp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getTimestamp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getTimestamp' class='name expandable'>getTimestamp</a>( <span class='pre'></span> ) : Object {android.media.MediaTimestamp}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get current playback position as a android.media.MediaTimestamp. ...</div><div class='long'><p>Get current playback position as a <a href=\"#!/api/android.media.MediaTimestamp\" rel=\"android.media.MediaTimestamp\" class=\"docClass\">android.media.MediaTimestamp</a>.\n <p>\n The MediaTimestamp represents how the media time correlates to the system time in\n a linear fashion using an anchor and a clock rate. During regular playback, the media\n time moves fairly constantly (though the anchor frame may be rebased to a current\n system time, the linear correlation stays steady). Therefore, this method does not\n need to be called often.\n <p>\n To help users get current playback position, this method always anchors the timestamp\n to the current system time, so\n <a href=\"#!/api/android.media.MediaTimestamp-method-getAnchorMediaTimeUs\" rel=\"android.media.MediaTimestamp-method-getAnchorMediaTimeUs\" class=\"docClass\">android.media.MediaTimestamp.getAnchorMediaTimeUs</a> can be used as current playback position.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaTimestamp}</span><div class='sub-desc'><p>a MediaTimestamp object if a timestamp is available, or {@code null} if no timestamp\n         is available, e.g. because the media player has not been initialized.\n@see MediaTimestamp</p>\n</div></li></ul></div></div></div><div id='method-getTrackInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getTrackInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getTrackInfo' class='name expandable'>getTrackInfo</a>( <span class='pre'>dsd</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a List of track information. ...</div><div class='long'><p>Returns a List of track information.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source of which you want to get track info</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>List of track info. The total number of tracks is the array length.\n Must be called again if an external timed text source has been added after\n addTimedTextSource method is called.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if it is called in an invalid state.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if dsd is null</p>\n</div></li></ul></div></div></div><div id='method-getVideoSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-getVideoSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-getVideoSize' class='name expandable'>getVideoSize</a>( <span class='pre'></span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the size of the video. ...</div><div class='long'><p>Returns the size of the video.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>the size of the video. The width and height of size could be 0 if there is no video,\n or the size has not been determined yet.\n The {@code EventCallback} can be registered via\n EventCallback) to provide a\n notification {@code EventCallback.onVideoSizeChanged} when the size\n is available.</p>\n</div></li></ul></div></div></div><div id='method-isLooping' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-isLooping' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-isLooping' class='name expandable'>isLooping</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the MediaPlayer2 is looping or non-looping. ...</div><div class='long'><p>Checks whether the MediaPlayer2 is looping or non-looping.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the MediaPlayer2 is currently looping, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-loopCurrent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-loopCurrent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-loopCurrent' class='name expandable'>loopCurrent</a>( <span class='pre'>loop</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Configures the player to loop on the current data source. ...</div><div class='long'><p>Configures the player to loop on the current data source.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>loop</span> : Boolean<div class='sub-desc'><p>true if the current data source is meant to loop.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-notifyWhenCommandLabelReached' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-notifyWhenCommandLabelReached' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-notifyWhenCommandLabelReached' class='name expandable'>notifyWhenCommandLabelReached</a>( <span class='pre'>label, label</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Insert a task in the command queue to help the client to identify whether a batch\n of commands has been finished. ...</div><div class='long'><p>Insert a task in the command queue to help the client to identify whether a batch\n of commands has been finished. When this command is processed, a notification\n <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onCommandLabelReached\" rel=\"android.media.MediaPlayer2.EventCallback-method-onCommandLabelReached\" class=\"docClass\">onCommandLabelReached</a> will be fired with the\n given {@code label}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>label</span> : Object {Object}<div class='sub-desc'><p>An application specific Object used to help to identify the completeness\n of a batch of commands.</p>\n</div></li><li><span class='pre'>label</span> : Object<div class='sub-desc'><p>An application specific Object used to help to identify the completeness\n of a batch of commands.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-pause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-pause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-pause' class='name expandable'>pause</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Pauses playback. ...</div><div class='long'><p>Pauses playback. Call play() to resume.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-play' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-play' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-play' class='name expandable'>play</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts or resumes playback. ...</div><div class='long'><p>Starts or resumes playback. If playback had previously been paused,\n playback will continue from where it was paused. If playback had\n reached end of stream and been paused, or never started before,\n playback will start at the beginning.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-prepare' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-prepare' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-prepare' class='name expandable'>prepare</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepares the player for playback, asynchronously. ...</div><div class='long'><p>Prepares the player for playback, asynchronously.</p>\n\n<p> After setting the datasource and the display surface, you need to call prepare().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-registerEventCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-registerEventCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-registerEventCallback' class='name expandable'>registerEventCallback</a>( <span class='pre'>executor, eventCallback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers the callback to be invoked for various events covered by android.media.MediaPlayer2.EventCallback. ...</div><div class='long'><p>Registers the callback to be invoked for various events covered by <a href=\"#!/api/android.media.MediaPlayer2.EventCallback\" rel=\"android.media.MediaPlayer2.EventCallback\" class=\"docClass\">android.media.MediaPlayer2.EventCallback</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>the executor through which the callback should be invoked</p>\n</div></li><li><span class='pre'>eventCallback</span> : Object {MediaPlayer2.EventCallback}<div class='sub-desc'><p>the callback that will be run</p>\n</div></li></ul></div></div></div><div id='method-removeOnRoutingChangedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-removeOnRoutingChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-removeOnRoutingChangedListener' class='name expandable'>removeOnRoutingChangedListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes an android.media.AudioRouting.OnRoutingChangedListener which has been previously added\n to receive rerouting ...</div><div class='long'><p>Removes an android.media.AudioRouting.OnRoutingChangedListener which has been previously added\n to receive rerouting notifications.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {AudioRouting.OnRoutingChangedListener}<div class='sub-desc'><p>The previously added AudioRouting.OnRoutingChangedListener interface\n to remove.</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets the MediaPlayer2 to its uninitialized state. ...</div><div class='long'><p>Resets the MediaPlayer2 to its uninitialized state. After calling\n this method, you will have to initialize it again by setting the\n data source and calling prepare().</p>\n</div></div></div><div id='method-seekTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-seekTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-seekTo' class='name expandable'>seekTo</a>( <span class='pre'>msec, mode</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves the media to specified time position by considering the given mode. ...</div><div class='long'><p>Moves the media to specified time position by considering the given mode.\n <p>\n When seekTo is finished, the user will be notified via\n <a href=\"#!/api/android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" rel=\"android.media.MediaPlayer2.EventCallback-method-onCallCompleted\" class=\"docClass\">android.media.MediaPlayer2.EventCallback.onCallCompleted</a> with <a href=\"#!/api/android.media.MediaPlayer2-property-CALL_COMPLETED_SEEK_TO\" rel=\"android.media.MediaPlayer2-property-CALL_COMPLETED_SEEK_TO\" class=\"docClass\">CALL_COMPLETED_SEEK_TO</a>.\n There is at most one active seekTo processed at any time. If there is a to-be-completed\n seekTo, new seekTo requests will be queued in such a way that only the last request\n is kept. When current seekTo is completed, the queued request will be processed if\n that request is different from just-finished seekTo operation, i.e., the requested\n position or mode is different.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>msec</span> : Number<div class='sub-desc'><p>the offset in milliseconds from the start to seek to.\n When seeking to the given time position, there is no guarantee that the data source\n has a frame located at the position. When this happens, a frame nearby will be rendered.\n If msec is negative, time position zero will be used.\n If msec is larger than duration, duration will be used.</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>the mode indicating where exactly to seek to.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-selectTrack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-selectTrack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-selectTrack' class='name expandable'>selectTrack</a>( <span class='pre'>dsd, trackInfo</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Selects a track. ...</div><div class='long'><p>Selects a track.\n <p>\n If a MediaPlayer2 is in invalid state, it throws an IllegalStateException exception.\n If a MediaPlayer2 is in <em>Started</em> state, the selected track is presented immediately.\n If a MediaPlayer2 is not in Started state, it just marks the track to be played.\n </p>\n <p>\n In any valid state, if it is called multiple times on the same type of track (ie. Video,\n Audio, Timed Text), the most recent one will be chosen.\n </p>\n <p>\n The first audio and video tracks are selected by default if available, even though\n this method is not called. However, no timed text track will be selected until\n this function is called.\n </p>\n <p>\n Currently, only timed text tracks or audio tracks can be selected via this method.\n In addition, the support for selecting an audio track at runtime is pretty limited\n in that an audio track can only be selected in the <em>Prepared</em> state.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source of which you want to select track</p>\n</div></li><li><span class='pre'>trackInfo</span> : Object {MediaPlayer2.TrackInfo}<div class='sub-desc'><p>metadata corresponding to the track to be selected. A {@code trackInfo}\n object can be obtained from getTrackInfo().</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n\n<p> This is an asynchronous call.\n@see MediaPlayer2#getTrackInfo(DataSourceDesc)</p>\n</div></li></ul></div></div></div><div id='method-setAudioAttributes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setAudioAttributes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setAudioAttributes' class='name expandable'>setAudioAttributes</a>( <span class='pre'>attributes</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio attributes for this MediaPlayer2. ...</div><div class='long'><p>Sets the audio attributes for this MediaPlayer2.\n See <a href=\"#!/api/android.media.AudioAttributes\" rel=\"android.media.AudioAttributes\" class=\"docClass\">android.media.AudioAttributes</a> for how to build and configure an instance of this class.\n You must call this method before <a href=\"#!/api/android.media.MediaPlayer2-method-play\" rel=\"android.media.MediaPlayer2-method-play\" class=\"docClass\">play</a>() and <a href=\"#!/api/android.media.MediaPlayer2-method-pause\" rel=\"android.media.MediaPlayer2-method-pause\" class=\"docClass\">pause</a>() in order\n for the audio attributes to become effective thereafter.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attributes</span> : Object {AudioAttributes}<div class='sub-desc'><p>a non-null set of audio attributes</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setAudioSessionId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setAudioSessionId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setAudioSessionId' class='name expandable'>setAudioSessionId</a>( <span class='pre'>sessionId</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio session ID. ...</div><div class='long'><p>Sets the audio session ID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sessionId</span> : Number<div class='sub-desc'><p>the audio session ID.\n The audio session ID is a system wide unique identifier for the audio stream played by\n this MediaPlayer2 instance.\n The primary use of the audio session ID  is to associate audio effects to a particular\n instance of MediaPlayer2: if an audio session ID is provided when creating an audio effect,\n this effect will be applied only to the audio content of media players within the same\n audio session and not to the output mix.\n When created, a MediaPlayer2 instance automatically generates its own audio session ID.\n However, it is possible to force this player to be part of an already existing audio session\n by calling this method.\n This method must be called when player is in <a href=\"#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_IDLE\" rel=\"android.media.MediaPlayer2-property-PLAYER_STATE_IDLE\" class=\"docClass\">PLAYER_STATE_IDLE</a> or\n <a href=\"#!/api/android.media.MediaPlayer2-property-PLAYER_STATE_PREPARED\" rel=\"android.media.MediaPlayer2-property-PLAYER_STATE_PREPARED\" class=\"docClass\">PLAYER_STATE_PREPARED</a> state in order to have sessionId take effect.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setAuxEffectSendLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setAuxEffectSendLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setAuxEffectSendLevel' class='name expandable'>setAuxEffectSendLevel</a>( <span class='pre'>level</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the send level of the player to the attached auxiliary effect. ...</div><div class='long'><p>Sets the send level of the player to the attached auxiliary effect.\n See <a href=\"#!/api/android.media.MediaPlayer2-method-attachAuxEffect\" rel=\"android.media.MediaPlayer2-method-attachAuxEffect\" class=\"docClass\">attachAuxEffect</a>(int). The level value range is 0 to 1.0.\n <p>By default the send level is 0, so even if an effect is attached to the player\n this method must be called for the effect to be applied.\n <p>Note that the passed level value is a raw scalar. UI controls should be scaled\n logarithmically: the gain applied by audio framework ranges from -72dB to 0dB,\n so an appropriate conversion from linear UI input x to level is:\n x == 0 -> level = 0\n 0 &lt; x &lt;= R -> level = 10<sup>72*(x-R)/20/R</sup></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>level</span> : Number<div class='sub-desc'><p>send level scalar</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setDataSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setDataSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setDataSource' class='name expandable'>setDataSource</a>( <span class='pre'>dsd</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the data source as described by a DataSourceDesc. ...</div><div class='long'><p>Sets the data source as described by a DataSourceDesc.\n When the data source is of <a href=\"#!/api/android.media.FileDataSourceDesc\" rel=\"android.media.FileDataSourceDesc\" class=\"docClass\">android.media.FileDataSourceDesc</a> type, the ParcelFileDescriptor\n in the <a href=\"#!/api/android.media.FileDataSourceDesc\" rel=\"android.media.FileDataSourceDesc\" class=\"docClass\">android.media.FileDataSourceDesc</a> will be closed by the player.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source you want to play</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setDisplay' class='name expandable'>setDisplay</a>( <span class='pre'>sh</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the SurfaceHolder to use for displaying the video\n portion of the media. ...</div><div class='long'><p>Sets the SurfaceHolder to use for displaying the video\n portion of the media.</p>\n\n<p> Either a surface holder or surface must be set if a display or video sink\n is needed. Not calling this method or <a href=\"#!/api/android.media.MediaPlayer2-method-setSurface\" rel=\"android.media.MediaPlayer2-method-setSurface\" class=\"docClass\">setSurface</a>(Surface)\n when playing back a video will result in only the audio track being played.\n A null surface holder or surface will result in only the audio track being\n played.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sh</span> : Object {SurfaceHolder}<div class='sub-desc'><p>the SurfaceHolder to use for video display</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setDrmEventCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setDrmEventCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setDrmEventCallback' class='name expandable'>setDrmEventCallback</a>( <span class='pre'>eventCallback, executor</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers the callback to be invoked for various DRM events. ...</div><div class='long'><p>Registers the callback to be invoked for various DRM events.</p>\n\n<p> This is a synchronous call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventCallback</span> : Object {Executor}<div class='sub-desc'><p>the callback that will be run</p>\n</div></li><li><span class='pre'>executor</span> : Object {MediaPlayer2.DrmEventCallback}<div class='sub-desc'><p>the executor through which the callback should be invoked</p>\n</div></li></ul></div></div></div><div id='method-setNextDataSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setNextDataSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setNextDataSource' class='name expandable'>setNextDataSource</a>( <span class='pre'>dsd</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a single data source as described by a DataSourceDesc which will be played\n after current data source is finished. ...</div><div class='long'><p>Sets a single data source as described by a DataSourceDesc which will be played\n after current data source is finished.\n When the data source is of <a href=\"#!/api/android.media.FileDataSourceDesc\" rel=\"android.media.FileDataSourceDesc\" class=\"docClass\">android.media.FileDataSourceDesc</a> type, the ParcelFileDescriptor\n in the <a href=\"#!/api/android.media.FileDataSourceDesc\" rel=\"android.media.FileDataSourceDesc\" class=\"docClass\">android.media.FileDataSourceDesc</a> will be closed by the player.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsd</span> : Object {DataSourceDesc}<div class='sub-desc'><p>the descriptor of data source you want to play after current one</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setNextDataSources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setNextDataSources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setNextDataSources' class='name expandable'>setNextDataSources</a>( <span class='pre'>dsds</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a list of data sources to be played sequentially after current data source is done. ...</div><div class='long'><p>Sets a list of data sources to be played sequentially after current data source is done.\n When the data source is of <a href=\"#!/api/android.media.FileDataSourceDesc\" rel=\"android.media.FileDataSourceDesc\" class=\"docClass\">android.media.FileDataSourceDesc</a> type, the ParcelFileDescriptor\n in the <a href=\"#!/api/android.media.FileDataSourceDesc\" rel=\"android.media.FileDataSourceDesc\" class=\"docClass\">android.media.FileDataSourceDesc</a> will be closed by the player.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dsds</span> : Object {java.util.List}<div class='sub-desc'><p>the list of data sources you want to play after current one</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setPlaybackParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setPlaybackParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setPlaybackParams' class='name expandable'>setPlaybackParams</a>( <span class='pre'>params</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets playback rate using android.media.PlaybackParams. ...</div><div class='long'><p>Sets playback rate using <a href=\"#!/api/android.media.PlaybackParams\" rel=\"android.media.PlaybackParams\" class=\"docClass\">android.media.PlaybackParams</a>. The object sets its internal\n PlaybackParams to the input. This allows the object to resume at previous speed\n when play() is called. Speed of zero is not allowed. Calling it does not change\n the object state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object {PlaybackParams}<div class='sub-desc'><p>the playback params.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setPlayerVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setPlayerVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setPlayerVolume' class='name expandable'>setPlayerVolume</a>( <span class='pre'>volume</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the volume of the audio of the media to play, expressed as a linear multiplier\n on the audio samples. ...</div><div class='long'><p>Sets the volume of the audio of the media to play, expressed as a linear multiplier\n on the audio samples.\n Note that this volume is specific to the player, and is separate from stream volume\n used across the platform.<br>\n A value of 0.0f indicates muting, a value of 1.0f is the nominal unattenuated and unamplified\n gain. See <a href=\"#!/api/android.media.MediaPlayer2-method-getMaxPlayerVolume\" rel=\"android.media.MediaPlayer2-method-getMaxPlayerVolume\" class=\"docClass\">getMaxPlayerVolume</a>() for the volume range supported by this player.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>volume</span> : Number<div class='sub-desc'><p>a value between 0.0f and getMaxPlayerVolume().</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setPreferredDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setPreferredDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setPreferredDevice' class='name expandable'>setPreferredDevice</a>( <span class='pre'>deviceInfo</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies an audio device (via an android.media.AudioDeviceInfo object) to route\n the output from this MediaPlayer2. ...</div><div class='long'><p>Specifies an audio device (via an <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> object) to route\n the output from this MediaPlayer2.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deviceInfo</span> : Object {AudioDeviceInfo}<div class='sub-desc'><p>The AudioDeviceInfo specifying the audio sink or source.\n  If deviceInfo is null, default routing is restored.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if succesful, false if the specified AudioDeviceInfo is non-null and\n does not correspond to a valid audio device.</p>\n</div></li></ul></div></div></div><div id='method-setScreenOnWhilePlaying' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setScreenOnWhilePlaying' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setScreenOnWhilePlaying' class='name expandable'>setScreenOnWhilePlaying</a>( <span class='pre'>screenOn</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Control whether we should use the attached SurfaceHolder to keep the\n screen on while video playback is occurring. ...</div><div class='long'><p>Control whether we should use the attached SurfaceHolder to keep the\n screen on while video playback is occurring.  This is the preferred\n method over <a href=\"#!/api/android.media.MediaPlayer2-method-setWakeLock\" rel=\"android.media.MediaPlayer2-method-setWakeLock\" class=\"docClass\">setWakeLock</a> where possible, since it doesn't\n require that the application have permission for low-level wake lock\n access.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>screenOn</span> : Boolean<div class='sub-desc'><p>Supply true to keep the screen on, false to allow it to turn off.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setSurface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setSurface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setSurface' class='name expandable'>setSurface</a>( <span class='pre'>surface</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Surface to be used as the sink for the video portion of\n the media. ...</div><div class='long'><p>Sets the Surface to be used as the sink for the video portion of\n the media.  Setting a\n Surface will un-set any Surface or SurfaceHolder that was previously set.\n A null surface will result in only the audio track being played.</p>\n\n<p> If the Surface sends frames to a SurfaceTexture, the timestamps\n returned from SurfaceTexture.getTimestamp() will have an\n unspecified zero point.  These timestamps cannot be directly compared\n between different media sources, different instances of the same media\n source, or multiple runs of the same program.  The timestamp is normally\n monotonically increasing and is unaffected by time-of-day adjustments,\n but it is reset when the position is set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>surface</span> : Object {Surface}<div class='sub-desc'><p>The Surface to be used for the video portion of\n the media.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setSyncParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setSyncParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setSyncParams' class='name expandable'>setSyncParams</a>( <span class='pre'>params</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets A/V sync mode. ...</div><div class='long'><p>Sets A/V sync mode.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object {SyncParams}<div class='sub-desc'><p>the A/V sync params to apply</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-setWakeLock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-setWakeLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-setWakeLock' class='name expandable'>setWakeLock</a>( <span class='pre'>wakeLock</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the low-level power management behavior for this MediaPlayer2. ...</div><div class='long'><p>Set the low-level power management behavior for this MediaPlayer2. This\n can be used when the MediaPlayer2 is not playing through a SurfaceHolder\n set with <a href=\"#!/api/android.media.MediaPlayer2-method-setDisplay\" rel=\"android.media.MediaPlayer2-method-setDisplay\" class=\"docClass\">setDisplay</a>(SurfaceHolder) and thus can use the\n high-level <a href=\"#!/api/android.media.MediaPlayer2-method-setScreenOnWhilePlaying\" rel=\"android.media.MediaPlayer2-method-setScreenOnWhilePlaying\" class=\"docClass\">setScreenOnWhilePlaying</a>(boolean) feature.</p>\n\n<p> <p>This function has the MediaPlayer2 access the low-level power manager\n service to control the device's power usage while playing is occurring.\n The parameter is a android.os.PowerManager.WakeLock.\n Use of this method requires android.Manifest.permission.WAKE_LOCK\n permission.\n By default, no attempt is made to keep the device awake during playback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>wakeLock</span> : Object {PowerManager.WakeLock}<div class='sub-desc'><p>the power wake lock used during playback.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.\n@see android.os.PowerManager</p>\n</div></li></ul></div></div></div><div id='method-skipToNext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-skipToNext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-skipToNext' class='name expandable'>skipToNext</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Tries to play next data source if applicable. ...</div><div class='long'><p>Tries to play next data source if applicable.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a token which can be used to cancel the operation later with <a href=\"#!/api/android.media.MediaPlayer2-method-cancelCommand\" rel=\"android.media.MediaPlayer2-method-cancelCommand\" class=\"docClass\">cancelCommand</a>.</p>\n</div></li></ul></div></div></div><div id='method-unregisterEventCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer2'>android.media.MediaPlayer2</span><br/><a href='source/MediaPlayer2.html#android-media-MediaPlayer2-method-unregisterEventCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer2-method-unregisterEventCallback' class='name expandable'>unregisterEventCallback</a>( <span class='pre'>eventCallback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters the android.media.MediaPlayer2.EventCallback. ...</div><div class='long'><p>Unregisters the <a href=\"#!/api/android.media.MediaPlayer2.EventCallback\" rel=\"android.media.MediaPlayer2.EventCallback\" class=\"docClass\">android.media.MediaPlayer2.EventCallback</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventCallback</span> : Object {MediaPlayer2.EventCallback}<div class='sub-desc'><p>the callback to be unregistered</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});