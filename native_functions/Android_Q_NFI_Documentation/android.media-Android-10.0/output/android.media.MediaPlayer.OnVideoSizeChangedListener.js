Ext.data.JsonP.android_media_MediaPlayer_OnVideoSizeChangedListener({"tagname":"class","name":"android.media.MediaPlayer.OnVideoSizeChangedListener","autodetected":{},"files":[{"filename":"OnVideoSizeChangedListener.js","href":"OnVideoSizeChangedListener.html#android-media-MediaPlayer-OnVideoSizeChangedListener"}],"members":[{"name":"onVideoSizeChanged","tagname":"method","owner":"android.media.MediaPlayer.OnVideoSizeChangedListener","id":"method-onVideoSizeChanged","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaPlayer.OnVideoSizeChangedListener","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnVideoSizeChangedListener.html#android-media-MediaPlayer-OnVideoSizeChangedListener' target='_blank'>OnVideoSizeChangedListener.js</a></div></pre><div class='doc-contents'><p>Interface definition of a callback to be invoked when the\n video size is first known or updated</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onVideoSizeChanged' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer.OnVideoSizeChangedListener'>android.media.MediaPlayer.OnVideoSizeChangedListener</span><br/><a href='source/OnVideoSizeChangedListener.html#android-media-MediaPlayer-OnVideoSizeChangedListener-method-onVideoSizeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer.OnVideoSizeChangedListener-method-onVideoSizeChanged' class='name expandable'>onVideoSizeChanged</a>( <span class='pre'>mp, width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to indicate the video size\n\n The video size (width and height) could be 0 if there was no video,\n no display s...</div><div class='long'><p>Called to indicate the video size</p>\n\n<p> The video size (width and height) could be 0 if there was no video,\n no display surface was set, or the value was not determined yet.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mp</span> : Object {MediaPlayer}<div class='sub-desc'><p>the MediaPlayer associated with this callback</p>\n</div></li><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the width of the video</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the height of the video</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});