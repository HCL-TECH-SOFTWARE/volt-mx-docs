Ext.data.JsonP.android_media_MediaCodecList({"tagname":"class","name":"android.media.MediaCodecList","autodetected":{},"files":[{"filename":"MediaCodecList.js","href":"MediaCodecList.html#android-media-MediaCodecList"}],"extends":"java.lang.Object","members":[{"name":"ALL_CODECS","tagname":"property","owner":"android.media.MediaCodecList","id":"property-ALL_CODECS","meta":{}},{"name":"REGULAR_CODECS","tagname":"property","owner":"android.media.MediaCodecList","id":"property-REGULAR_CODECS","meta":{}},{"name":"findDecoderForFormat","tagname":"method","owner":"android.media.MediaCodecList","id":"method-findDecoderForFormat","meta":{}},{"name":"findEncoderForFormat","tagname":"method","owner":"android.media.MediaCodecList","id":"method-findEncoderForFormat","meta":{}},{"name":"getCodecCount","tagname":"method","owner":"android.media.MediaCodecList","id":"method-getCodecCount","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.media.MediaCodecList-method-getCodecInfos\" rel=\"android.media.MediaCodecList-method-getCodecInfos\" class=\"docClass\">getCodecInfos</a> instead.\n@see <a href=\"#!/api/android.media.MediaCodecList-property-REGULAR_CODECS\" rel=\"android.media.MediaCodecList-property-REGULAR_CODECS\" class=\"docClass\">REGULAR_CODECS</a></p>\n"}}},{"name":"getCodecInfoAt","tagname":"method","owner":"android.media.MediaCodecList","id":"method-getCodecInfoAt","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.media.MediaCodecList-method-getCodecInfos\" rel=\"android.media.MediaCodecList-method-getCodecInfos\" class=\"docClass\">getCodecInfos</a> instead.\n@see <a href=\"#!/api/android.media.MediaCodecList-property-REGULAR_CODECS\" rel=\"android.media.MediaCodecList-property-REGULAR_CODECS\" class=\"docClass\">REGULAR_CODECS</a></p>\n"}}},{"name":"getCodecInfos","tagname":"method","owner":"android.media.MediaCodecList","id":"method-getCodecInfos","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaCodecList","short_doc":"Allows you to enumerate available codecs, each specified as a android.media.MediaCodecInfo object,\n find a codec supp...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaCodecList</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaCodecList.html#android-media-MediaCodecList' target='_blank'>MediaCodecList.js</a></div></pre><div class='doc-contents'><p>Allows you to enumerate available codecs, each specified as a <a href=\"#!/api/android.media.MediaCodecInfo\" rel=\"android.media.MediaCodecInfo\" class=\"docClass\">android.media.MediaCodecInfo</a> object,\n find a codec supporting a given format and query the capabilities\n of a given codec.\n <p>See <a href=\"#!/api/android.media.MediaCodecInfo\" rel=\"android.media.MediaCodecInfo\" class=\"docClass\">android.media.MediaCodecInfo</a> for sample usage.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ALL_CODECS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecList'>android.media.MediaCodecList</span><br/><a href='source/MediaCodecList.html#android-media-MediaCodecList-property-ALL_CODECS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecList-property-ALL_CODECS' class='name expandable'>ALL_CODECS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use in MediaCodecList to enumerate all codecs, even ones that are\nnot suitable for regular (buffer-to-buffer) decodin...</div><div class='long'><p>Use in MediaCodecList to enumerate all codecs, even ones that are\nnot suitable for regular (buffer-to-buffer) decoding or encoding.  These\ninclude codecs, for example, that only work with special input or output\nsurfaces, such as secure-only or tunneled-only codecs.</p>\n\n<p>@see MediaCodecInfo.CodecCapabilities#isFormatSupported\n@see MediaCodecInfo.CodecCapabilities#FEATURE_SecurePlayback\n@see MediaCodecInfo.CodecCapabilities#FEATURE_TunneledPlayback</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-REGULAR_CODECS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecList'>android.media.MediaCodecList</span><br/><a href='source/MediaCodecList.html#android-media-MediaCodecList-property-REGULAR_CODECS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecList-property-REGULAR_CODECS' class='name expandable'>REGULAR_CODECS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use in MediaCodecList to enumerate only codecs that are suitable\nfor regular (buffer-to-buffer) decoding or encoding. ...</div><div class='long'><p>Use in MediaCodecList to enumerate only codecs that are suitable\nfor regular (buffer-to-buffer) decoding or encoding.</p>\n\n<p><em>NOTE:</em> These are the codecs that are returned prior to API 21,\nusing the now deprecated static methods.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-findDecoderForFormat' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecList'>android.media.MediaCodecList</span><br/><a href='source/MediaCodecList.html#android-media-MediaCodecList-method-findDecoderForFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecList-method-findDecoderForFormat' class='name expandable'>findDecoderForFormat</a>( <span class='pre'>format, format</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Find a decoder supporting a given android.media.MediaFormat in the list\n of media-codecs. ...</div><div class='long'><p>Find a decoder supporting a given <a href=\"#!/api/android.media.MediaFormat\" rel=\"android.media.MediaFormat\" class=\"docClass\">android.media.MediaFormat</a> in the list\n of media-codecs.</p>\n\n<p> <p class=note>\n <strong>Note:</strong> On android.os.Build.VERSION_CODES.LOLLIPOP,\n {@code format} must not contain a {@linkplain <a href=\"#!/api/android.media.MediaFormat-property-KEY_FRAME_RATE\" rel=\"android.media.MediaFormat-property-KEY_FRAME_RATE\" class=\"docClass\">android.media.MediaFormat.KEY_FRAME_RATE</a>\n frame rate}. Use\n <code class=prettyprint>format.setString(MediaFormat.KEY_FRAME_RATE, null)</code>\n to clear any existing frame rate setting in the format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Object {MediaFormat}<div class='sub-desc'><p>A decoder media format with optional feature directives.</p>\n</div></li><li><span class='pre'>format</span> : Object<div class='sub-desc'><p>A decoder media format with optional feature directives.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of a decoder that supports the given format and feature\n         requests, or {@code null} if no such codec has been found.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if format is not a valid media format.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if format is null.</p>\n</div></li></ul></div></div></div><div id='method-findEncoderForFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecList'>android.media.MediaCodecList</span><br/><a href='source/MediaCodecList.html#android-media-MediaCodecList-method-findEncoderForFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecList-method-findEncoderForFormat' class='name expandable'>findEncoderForFormat</a>( <span class='pre'>format, format</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Find an encoder supporting a given android.media.MediaFormat in the list\n of media-codecs. ...</div><div class='long'><p>Find an encoder supporting a given <a href=\"#!/api/android.media.MediaFormat\" rel=\"android.media.MediaFormat\" class=\"docClass\">android.media.MediaFormat</a> in the list\n of media-codecs.</p>\n\n<p> <p class=note>\n <strong>Note:</strong> On android.os.Build.VERSION_CODES.LOLLIPOP,\n {@code format} must not contain a {@linkplain <a href=\"#!/api/android.media.MediaFormat-property-KEY_FRAME_RATE\" rel=\"android.media.MediaFormat-property-KEY_FRAME_RATE\" class=\"docClass\">android.media.MediaFormat.KEY_FRAME_RATE</a>\n frame rate}. Use\n <code class=prettyprint>format.setString(MediaFormat.KEY_FRAME_RATE, null)</code>\n to clear any existing frame rate setting in the format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Object {MediaFormat}<div class='sub-desc'><p>An encoder media format with optional feature directives.</p>\n</div></li><li><span class='pre'>format</span> : Object<div class='sub-desc'><p>An encoder media format with optional feature directives.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of an encoder that supports the given format and feature\n         requests, or {@code null} if no such codec has been found.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if format is not a valid media format.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if format is null.</p>\n</div></li></ul></div></div></div><div id='method-getCodecCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecList'>android.media.MediaCodecList</span><br/><a href='source/MediaCodecList.html#android-media-MediaCodecList-method-getCodecCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecList-method-getCodecCount' class='name expandable'>getCodecCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Count the number of available (regular) codecs. ...</div><div class='long'><p>Count the number of available (regular) codecs.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.media.MediaCodecList-method-getCodecInfos\" rel=\"android.media.MediaCodecList-method-getCodecInfos\" class=\"docClass\">getCodecInfos</a> instead.\n@see <a href=\"#!/api/android.media.MediaCodecList-property-REGULAR_CODECS\" rel=\"android.media.MediaCodecList-property-REGULAR_CODECS\" class=\"docClass\">REGULAR_CODECS</a></p>\n\n        </div>\n</div></div></div><div id='method-getCodecInfoAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecList'>android.media.MediaCodecList</span><br/><a href='source/MediaCodecList.html#android-media-MediaCodecList-method-getCodecInfoAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecList-method-getCodecInfoAt' class='name expandable'>getCodecInfoAt</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return the android.media.MediaCodecInfo object for the codec at\n the given {@code index} in the regular list. ...</div><div class='long'><p>Return the <a href=\"#!/api/android.media.MediaCodecInfo\" rel=\"android.media.MediaCodecInfo\" class=\"docClass\">android.media.MediaCodecInfo</a> object for the codec at\n the given {@code index} in the regular list.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.media.MediaCodecList-method-getCodecInfos\" rel=\"android.media.MediaCodecList-method-getCodecInfos\" class=\"docClass\">getCodecInfos</a> instead.\n@see <a href=\"#!/api/android.media.MediaCodecList-property-REGULAR_CODECS\" rel=\"android.media.MediaCodecList-property-REGULAR_CODECS\" class=\"docClass\">REGULAR_CODECS</a></p>\n\n        </div>\n</div></div></div><div id='method-getCodecInfos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodecList'>android.media.MediaCodecList</span><br/><a href='source/MediaCodecList.html#android-media-MediaCodecList-method-getCodecInfos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodecList-method-getCodecInfos' class='name expandable'>getCodecInfos</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of android.media.MediaCodecInfo objects for the list\n of media-codecs. ...</div><div class='long'><p>Returns the list of <a href=\"#!/api/android.media.MediaCodecInfo\" rel=\"android.media.MediaCodecInfo\" class=\"docClass\">android.media.MediaCodecInfo</a> objects for the list\n of media-codecs.</p>\n</div></div></div></div></div></div></div>","meta":{}});