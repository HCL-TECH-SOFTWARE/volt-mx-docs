Ext.data.JsonP.android_media_RemoteController({"tagname":"class","name":"android.media.RemoteController","autodetected":{},"files":[{"filename":"RemoteController.js","href":"RemoteController.html#android-media-RemoteController"}],"extends":"java.lang.Object","deprecated":{"text":"<p>Use MediaController instead.</p>\n"},"members":[{"name":"POSITION_SYNCHRONIZATION_CHECK","tagname":"property","owner":"android.media.RemoteController","id":"property-POSITION_SYNCHRONIZATION_CHECK","meta":{}},{"name":"POSITION_SYNCHRONIZATION_NONE","tagname":"property","owner":"android.media.RemoteController","id":"property-POSITION_SYNCHRONIZATION_NONE","meta":{}},{"name":"clearArtworkConfiguration","tagname":"method","owner":"android.media.RemoteController","id":"method-clearArtworkConfiguration","meta":{}},{"name":"editMetadata","tagname":"method","owner":"android.media.RemoteController","id":"method-editMetadata","meta":{}},{"name":"getEstimatedMediaPosition","tagname":"method","owner":"android.media.RemoteController","id":"method-getEstimatedMediaPosition","meta":{}},{"name":"seekTo","tagname":"method","owner":"android.media.RemoteController","id":"method-seekTo","meta":{}},{"name":"sendMediaKeyEvent","tagname":"method","owner":"android.media.RemoteController","id":"method-sendMediaKeyEvent","meta":{}},{"name":"setArtworkConfiguration","tagname":"method","owner":"android.media.RemoteController","id":"method-setArtworkConfiguration","meta":{}},{"name":"setSynchronizationMode","tagname":"method","owner":"android.media.RemoteController","id":"method-setSynchronizationMode","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.RemoteController","short_doc":"The RemoteController class is used to control media playback, display and update media metadata\n and playback status,...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.RemoteController</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RemoteController.html#android-media-RemoteController' target='_blank'>RemoteController.js</a></div></pre><div class='doc-contents'><p>The RemoteController class is used to control media playback, display and update media metadata\n and playback status, published by applications using the <a href=\"#!/api/android.media.RemoteControlClient\" rel=\"android.media.RemoteControlClient\" class=\"docClass\">android.media.RemoteControlClient</a> class.\n <p>\n A RemoteController shall be registered through\n android.media.AudioManager.registerRemoteController(RemoteController) in order for the system to send\n media event updates to the <a href=\"#!/api/android.media.RemoteController.OnClientUpdateListener\" rel=\"android.media.RemoteController.OnClientUpdateListener\" class=\"docClass\">android.media.RemoteController.OnClientUpdateListener</a> listener set in the class constructor.\n Implement the methods of the interface to receive the information published by the active\n <a href=\"#!/api/android.media.RemoteControlClient\" rel=\"android.media.RemoteControlClient\" class=\"docClass\">android.media.RemoteControlClient</a> instances.\n <br>By default an <a href=\"#!/api/android.media.RemoteController.OnClientUpdateListener\" rel=\"android.media.RemoteController.OnClientUpdateListener\" class=\"docClass\">android.media.RemoteController.OnClientUpdateListener</a> implementation will not receive bitmaps for\n album art. Use int) to receive images as well.\n <p>\n Registration requires the <a href=\"#!/api/android.media.RemoteController.OnClientUpdateListener\" rel=\"android.media.RemoteController.OnClientUpdateListener\" class=\"docClass\">android.media.RemoteController.OnClientUpdateListener</a> listener to be one of the enabled\n notification listeners (see android.service.notification.NotificationListenerService).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Use MediaController instead.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-POSITION_SYNCHRONIZATION_CHECK' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-property-POSITION_SYNCHRONIZATION_CHECK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-property-POSITION_SYNCHRONIZATION_CHECK' class='name expandable'>POSITION_SYNCHRONIZATION_CHECK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The playback position synchronization mode where the RemoteControlClient instances which\nexpose their playback positi...</div><div class='long'><p>The playback position synchronization mode where the RemoteControlClient instances which\nexpose their playback position to the framework, will be regularly polled to check\nwhether any drift has been noticed between their estimated position and the one they report.\nNote that this mode should only ever be used when needing to display very accurate playback\nposition, as regularly polling a RemoteControlClient for its position may have an impact\non battery life (if applicable) when this query will trigger network transactions in the\ncase of remote playback.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-POSITION_SYNCHRONIZATION_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-property-POSITION_SYNCHRONIZATION_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-property-POSITION_SYNCHRONIZATION_NONE' class='name expandable'>POSITION_SYNCHRONIZATION_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Default playback position synchronization mode where the RemoteControlClient is not\nasked regularly for its playback ...</div><div class='long'><p>Default playback position synchronization mode where the RemoteControlClient is not\nasked regularly for its playback position to see if it has drifted from the estimated\nposition.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clearArtworkConfiguration' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-method-clearArtworkConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-method-clearArtworkConfiguration' class='name expandable'>clearArtworkConfiguration</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Prevents this RemoteController from receiving artwork images. ...</div><div class='long'><p>Prevents this RemoteController from receiving artwork images.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if receiving artwork images was successfully disabled.</p>\n</div></li></ul></div></div></div><div id='method-editMetadata' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-method-editMetadata' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-method-editMetadata' class='name expandable'>editMetadata</a>( <span class='pre'></span> ) : Object {android.media.RemoteController.MetadataEditor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a android.media.MetadataEditor for updating metadata values of the editable keys of\n the current android.medi...</div><div class='long'><p>Creates a android.media.MetadataEditor for updating metadata values of the editable keys of\n the current <a href=\"#!/api/android.media.RemoteControlClient\" rel=\"android.media.RemoteControlClient\" class=\"docClass\">android.media.RemoteControlClient</a>.\n This method can only be called on a registered RemoteController.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.RemoteController.MetadataEditor}</span><div class='sub-desc'><p>a new MetadataEditor instance.</p>\n</div></li></ul></div></div></div><div id='method-getEstimatedMediaPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-method-getEstimatedMediaPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-method-getEstimatedMediaPosition' class='name expandable'>getEstimatedMediaPosition</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the estimated playback position of the current media track or a negative value\n if not available. ...</div><div class='long'><p>Return the estimated playback position of the current media track or a negative value\n if not available.</p>\n\n<p> <p>The value returned is estimated by the current process and may not be perfect.\n The time returned by this method is calculated from the last state change time based\n on the current play position at that time and the last known playback speed.\n An application may call <a href=\"#!/api/android.media.RemoteController-method-setSynchronizationMode\" rel=\"android.media.RemoteController-method-setSynchronizationMode\" class=\"docClass\">setSynchronizationMode</a>(int) to apply\n a synchronization policy that will periodically re-sync the estimated position\n with the RemoteControlClient.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the current estimated playback position in milliseconds or a negative value\n         if not available\n@see OnClientUpdateListener#onClientPlaybackStateUpdate(int, long, long, float)</p>\n</div></li></ul></div></div></div><div id='method-seekTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-method-seekTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-method-seekTo' class='name expandable'>seekTo</a>( <span class='pre'>timeMs</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the new playback position. ...</div><div class='long'><p>Sets the new playback position.\n This method can only be called on a registered RemoteController.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeMs</span> : Number<div class='sub-desc'><p>a 0 or positive value for the new playback position, expressed in ms.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the command to set the playback position was successfully sent.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li></ul></div></div></div><div id='method-sendMediaKeyEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-method-sendMediaKeyEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-method-sendMediaKeyEvent' class='name expandable'>sendMediaKeyEvent</a>( <span class='pre'>keyEvent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Send a simulated key event for a media button to be received by the current client. ...</div><div class='long'><p>Send a simulated key event for a media button to be received by the current client.\n To simulate a key press, you must first send a KeyEvent built with\n a KeyEvent.ACTION_DOWN action, then another event with the KeyEvent.ACTION_UP\n action.\n <p>The key event will be sent to the registered receiver\n (see android.media.AudioManager.registerMediaButtonEventReceiver(PendingIntent)) whose associated\n <a href=\"#!/api/android.media.RemoteControlClient\" rel=\"android.media.RemoteControlClient\" class=\"docClass\">android.media.RemoteControlClient</a>'s metadata and playback state is published (there may be\n none under some circumstances).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyEvent</span> : Object {KeyEvent}<div class='sub-desc'><p>a KeyEvent instance whose key code is one of\n     KeyEvent.KEYCODE_MUTE,\n     KeyEvent.KEYCODE_HEADSETHOOK,\n     KeyEvent.KEYCODE_MEDIA_PLAY,\n     KeyEvent.KEYCODE_MEDIA_PAUSE,\n     KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE,\n     KeyEvent.KEYCODE_MEDIA_STOP,\n     KeyEvent.KEYCODE_MEDIA_NEXT,\n     KeyEvent.KEYCODE_MEDIA_PREVIOUS,\n     KeyEvent.KEYCODE_MEDIA_REWIND,\n     KeyEvent.KEYCODE_MEDIA_RECORD,\n     KeyEvent.KEYCODE_MEDIA_FAST_FORWARD,\n     KeyEvent.KEYCODE_MEDIA_CLOSE,\n     KeyEvent.KEYCODE_MEDIA_EJECT,\n     or KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the event was successfully sent, false otherwise.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li></ul></div></div></div><div id='method-setArtworkConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-method-setArtworkConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-method-setArtworkConfiguration' class='name expandable'>setArtworkConfiguration</a>( <span class='pre'>width, height</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the maximum artwork image dimensions to be received in the metadata. ...</div><div class='long'><p>Set the maximum artwork image dimensions to be received in the metadata.\n No bitmaps will be received unless this has been specified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the maximum width in pixels</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the maximum height in pixels</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the artwork dimension was successfully set.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li></ul></div></div></div><div id='method-setSynchronizationMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.RemoteController'>android.media.RemoteController</span><br/><a href='source/RemoteController.html#android-media-RemoteController-method-setSynchronizationMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.RemoteController-method-setSynchronizationMode' class='name expandable'>setSynchronizationMode</a>( <span class='pre'>sync</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the playback position synchronization mode. ...</div><div class='long'><p>Set the playback position synchronization mode.\n Must be called on a registered RemoteController.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sync</span> : Number<div class='sub-desc'><p><a href=\"#!/api/android.media.RemoteController-property-POSITION_SYNCHRONIZATION_NONE\" rel=\"android.media.RemoteController-property-POSITION_SYNCHRONIZATION_NONE\" class=\"docClass\">POSITION_SYNCHRONIZATION_NONE</a> or <a href=\"#!/api/android.media.RemoteController-property-POSITION_SYNCHRONIZATION_CHECK\" rel=\"android.media.RemoteController-property-POSITION_SYNCHRONIZATION_CHECK\" class=\"docClass\">POSITION_SYNCHRONIZATION_CHECK</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the synchronization mode was successfully set.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use MediaController instead.</p>\n"}}});