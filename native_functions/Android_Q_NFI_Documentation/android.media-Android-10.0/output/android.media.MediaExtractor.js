Ext.data.JsonP.android_media_MediaExtractor({"tagname":"class","name":"android.media.MediaExtractor","autodetected":{},"files":[{"filename":"MediaExtractor.js","href":"MediaExtractor.html#android-media-MediaExtractor"}],"extends":"java.lang.Object","members":[{"name":"SAMPLE_FLAG_ENCRYPTED","tagname":"property","owner":"android.media.MediaExtractor","id":"property-SAMPLE_FLAG_ENCRYPTED","meta":{}},{"name":"SAMPLE_FLAG_PARTIAL_FRAME","tagname":"property","owner":"android.media.MediaExtractor","id":"property-SAMPLE_FLAG_PARTIAL_FRAME","meta":{}},{"name":"SAMPLE_FLAG_SYNC","tagname":"property","owner":"android.media.MediaExtractor","id":"property-SAMPLE_FLAG_SYNC","meta":{}},{"name":"SEEK_TO_CLOSEST_SYNC","tagname":"property","owner":"android.media.MediaExtractor","id":"property-SEEK_TO_CLOSEST_SYNC","meta":{}},{"name":"SEEK_TO_NEXT_SYNC","tagname":"property","owner":"android.media.MediaExtractor","id":"property-SEEK_TO_NEXT_SYNC","meta":{}},{"name":"SEEK_TO_PREVIOUS_SYNC","tagname":"property","owner":"android.media.MediaExtractor","id":"property-SEEK_TO_PREVIOUS_SYNC","meta":{}},{"name":"advance","tagname":"method","owner":"android.media.MediaExtractor","id":"method-advance","meta":{}},{"name":"getAudioPresentations","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getAudioPresentations","meta":{}},{"name":"getCachedDuration","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getCachedDuration","meta":{}},{"name":"getCasInfo","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getCasInfo","meta":{}},{"name":"getDrmInitData","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getDrmInitData","meta":{}},{"name":"getMetrics","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getMetrics","meta":{}},{"name":"getPsshInfo","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getPsshInfo","meta":{}},{"name":"getSampleCryptoInfo","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getSampleCryptoInfo","meta":{}},{"name":"getSampleFlags","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getSampleFlags","meta":{}},{"name":"getSampleSize","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getSampleSize","meta":{}},{"name":"getSampleTime","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getSampleTime","meta":{}},{"name":"getSampleTrackIndex","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getSampleTrackIndex","meta":{}},{"name":"getTrackCount","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getTrackCount","meta":{}},{"name":"getTrackFormat","tagname":"method","owner":"android.media.MediaExtractor","id":"method-getTrackFormat","meta":{}},{"name":"hasCacheReachedEndOfStream","tagname":"method","owner":"android.media.MediaExtractor","id":"method-hasCacheReachedEndOfStream","meta":{}},{"name":"readSampleData","tagname":"method","owner":"android.media.MediaExtractor","id":"method-readSampleData","meta":{}},{"name":"release","tagname":"method","owner":"android.media.MediaExtractor","id":"method-release","meta":{}},{"name":"seekTo","tagname":"method","owner":"android.media.MediaExtractor","id":"method-seekTo","meta":{}},{"name":"selectTrack","tagname":"method","owner":"android.media.MediaExtractor","id":"method-selectTrack","meta":{}},{"name":"setDataSource","tagname":"method","owner":"android.media.MediaExtractor","id":"method-setDataSource","meta":{}},{"name":"setMediaCas","tagname":"method","owner":"android.media.MediaExtractor","id":"method-setMediaCas","meta":{}},{"name":"unselectTrack","tagname":"method","owner":"android.media.MediaExtractor","id":"method-unselectTrack","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaExtractor","short_doc":"MediaExtractor facilitates extraction of demuxed, typically encoded,  media data\n from a data source. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaExtractor</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaExtractor.html#android-media-MediaExtractor' target='_blank'>MediaExtractor.js</a></div></pre><div class='doc-contents'><p>MediaExtractor facilitates extraction of demuxed, typically encoded,  media data\n from a data source.\n <p>It is generally used like this:</p>\n\n<pre> MediaExtractor extractor = new MediaExtractor();\n extractor.setDataSource(...);\n int numTracks = extractor.getTrackCount();\n for (int i = 0; i &lt; numTracks; ++i) {\n   MediaFormat format = extractor.getTrackFormat(i);\n   String mime = format.getString(MediaFormat.KEY_MIME);\n   if (weAreInterestedInThisTrack) {\n     extractor.selectTrack(i);\n   }\n }\n ByteBuffer inputBuffer = ByteBuffer.allocate(...)\n while (extractor.readSampleData(inputBuffer, ...) &gt;= 0) {\n   int trackIndex = extractor.getSampleTrackIndex();\n   long presentationTimeUs = extractor.getSampleTime();\n   ...\n   extractor.advance();\n }\n\n extractor.release();\n extractor = null;\n </pre>\n\n\n<p> <p>This class requires the android.Manifest.permission.INTERNET permission\n when used with network-based content.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-SAMPLE_FLAG_ENCRYPTED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-property-SAMPLE_FLAG_ENCRYPTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-property-SAMPLE_FLAG_ENCRYPTED' class='name expandable'>SAMPLE_FLAG_ENCRYPTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The sample is (at least partially) encrypted, see also the documentation\nfor android.media.MediaCodec.queueSecureInpu...</div><div class='long'><p>The sample is (at least partially) encrypted, see also the documentation\nfor <a href=\"#!/api/android.media.MediaCodec-method-queueSecureInputBuffer\" rel=\"android.media.MediaCodec-method-queueSecureInputBuffer\" class=\"docClass\">android.media.MediaCodec.queueSecureInputBuffer</a></p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SAMPLE_FLAG_PARTIAL_FRAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-property-SAMPLE_FLAG_PARTIAL_FRAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-property-SAMPLE_FLAG_PARTIAL_FRAME' class='name expandable'>SAMPLE_FLAG_PARTIAL_FRAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This indicates that the buffer only contains part of a frame,\nand the decoder should batch the data until a buffer wi...</div><div class='long'><p>This indicates that the buffer only contains part of a frame,\nand the decoder should batch the data until a buffer without\nthis flag appears before decoding the frame.</p>\n\n<p>@see MediaCodec#BUFFER_FLAG_PARTIAL_FRAME</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-SAMPLE_FLAG_SYNC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-property-SAMPLE_FLAG_SYNC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-property-SAMPLE_FLAG_SYNC' class='name expandable'>SAMPLE_FLAG_SYNC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The sample is a sync sample (or in android.media.MediaCodec's terminology\nit is a key frame.)\n\n@see MediaCodec#BUFFER...</div><div class='long'><p>The sample is a sync sample (or in <a href=\"#!/api/android.media.MediaCodec\" rel=\"android.media.MediaCodec\" class=\"docClass\">android.media.MediaCodec</a>'s terminology\nit is a key frame.)</p>\n\n<p>@see MediaCodec#BUFFER_FLAG_KEY_FRAME</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SEEK_TO_CLOSEST_SYNC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-property-SEEK_TO_CLOSEST_SYNC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-property-SEEK_TO_CLOSEST_SYNC' class='name expandable'>SEEK_TO_CLOSEST_SYNC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If possible, seek to the sync sample closest to the specified time ...</div><div class='long'><p>If possible, seek to the sync sample closest to the specified time</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SEEK_TO_NEXT_SYNC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-property-SEEK_TO_NEXT_SYNC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-property-SEEK_TO_NEXT_SYNC' class='name expandable'>SEEK_TO_NEXT_SYNC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If possible, seek to a sync sample at or after the specified time ...</div><div class='long'><p>If possible, seek to a sync sample at or after the specified time</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SEEK_TO_PREVIOUS_SYNC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-property-SEEK_TO_PREVIOUS_SYNC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-property-SEEK_TO_PREVIOUS_SYNC' class='name expandable'>SEEK_TO_PREVIOUS_SYNC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If possible, seek to a sync sample at or before the specified time ...</div><div class='long'><p>If possible, seek to a sync sample at or before the specified time</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-advance' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-advance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-advance' class='name expandable'>advance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Advance to the next sample. ...</div><div class='long'><p>Advance to the next sample. Returns false if no more sample data\n is available (end of stream).</p>\n\n<p> When extracting a local file, the behaviors of <a href=\"#!/api/android.media.MediaExtractor-method-advance\" rel=\"android.media.MediaExtractor-method-advance\" class=\"docClass\">advance</a> and\n <a href=\"#!/api/android.media.MediaExtractor-method-readSampleData\" rel=\"android.media.MediaExtractor-method-readSampleData\" class=\"docClass\">readSampleData</a> are undefined in presence of concurrent\n writes to the same local file; more specifically, end of stream\n could be signalled earlier than expected.</p>\n</div></div></div><div id='method-getAudioPresentations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getAudioPresentations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getAudioPresentations' class='name expandable'>getAudioPresentations</a>( <span class='pre'>trackIndex</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the list of available audio presentations for the track. ...</div><div class='long'><p>Get the list of available audio presentations for the track.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>trackIndex</span> : Number<div class='sub-desc'><p>index of the track.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a list of available audio presentations for a given valid audio track index.\n The list will be empty if the source does not contain any audio presentations.</p>\n</div></li></ul></div></div></div><div id='method-getCachedDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getCachedDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getCachedDuration' class='name expandable'>getCachedDuration</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an estimate of how much data is presently cached in memory\n expressed in microseconds. ...</div><div class='long'><p>Returns an estimate of how much data is presently cached in memory\n expressed in microseconds. Returns -1 if that information is unavailable\n or not applicable (no cache).</p>\n</div></div></div><div id='method-getCasInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getCasInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getCasInfo' class='name expandable'>getCasInfo</a>( <span class='pre'>index</span> ) : Object {android.media.MediaExtractor.CasInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the information about the conditional access system used to scramble\n a track. ...</div><div class='long'><p>Retrieves the information about the conditional access system used to scramble\n a track.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>of the track.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaExtractor.CasInfo}</span><div class='sub-desc'><p>an CasInfo object describing the conditional access system.</p>\n</div></li></ul></div></div></div><div id='method-getDrmInitData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getDrmInitData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getDrmInitData' class='name expandable'>getDrmInitData</a>( <span class='pre'></span> ) : Object {android.media.DrmInitData}<span class=\"signature\"></span></div><div class='description'><div class='short'>Extract DRM initialization data if it exists ...</div><div class='long'><p>Extract DRM initialization data if it exists</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.DrmInitData}</span><div class='sub-desc'><p>DRM initialization data in the content, or {@code null}\n if no recognizable DRM format is found;\n@see DrmInitData</p>\n</div></li></ul></div></div></div><div id='method-getMetrics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getMetrics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getMetrics' class='name expandable'>getMetrics</a>( <span class='pre'></span> ) : Object {android.os.PersistableBundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return Metrics data about the current media container. ...</div><div class='long'><p>Return Metrics data about the current media container.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.PersistableBundle}</span><div class='sub-desc'><p>a PersistableBundle containing the set of attributes and values\n available for the media container being handled by this instance\n of MediaExtractor.\n The attributes are descibed in MetricsConstants.</p>\n\n<p>  Additional vendor-specific fields may also be present in\n  the return value.</p>\n</div></li></ul></div></div></div><div id='method-getPsshInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getPsshInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getPsshInfo' class='name expandable'>getPsshInfo</a>( <span class='pre'></span> ) : Object {java.util.Map}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the PSSH info if present. ...</div><div class='long'><p>Get the PSSH info if present.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Map}</span><div class='sub-desc'><p>a map of uuid-to-bytes, with the uuid specifying\n the crypto scheme, and the bytes being the data specific to that scheme.\n This can be {@code null} if the source does not contain PSSH info.</p>\n</div></li></ul></div></div></div><div id='method-getSampleCryptoInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getSampleCryptoInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getSampleCryptoInfo' class='name expandable'>getSampleCryptoInfo</a>( <span class='pre'>info</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>If the sample flags indicate that the current sample is at least\n partially encrypted, this call returns relevant inf...</div><div class='long'><p>If the sample flags indicate that the current sample is at least\n partially encrypted, this call returns relevant information about\n the structure of the sample data required for decryption.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>info</span> : Object {MediaCodec.CryptoInfo}<div class='sub-desc'><p>The <a href=\"#!/api/android.media.MediaCodec.CryptoInfo\" rel=\"android.media.MediaCodec.CryptoInfo\" class=\"docClass\">android.media.MediaCodec.CryptoInfo</a> structure\n             to be filled in.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true iff the sample flags contain <a href=\"#!/api/android.media.MediaExtractor-property-SAMPLE_FLAG_ENCRYPTED\" rel=\"android.media.MediaExtractor-property-SAMPLE_FLAG_ENCRYPTED\" class=\"docClass\">SAMPLE_FLAG_ENCRYPTED</a></p>\n</div></li></ul></div></div></div><div id='method-getSampleFlags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getSampleFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getSampleFlags' class='name expandable'>getSampleFlags</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current sample's flags. ...</div><div class='long'><p>Returns the current sample's flags.</p>\n</div></div></div><div id='method-getSampleSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getSampleSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getSampleSize' class='name expandable'>getSampleSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>size of the current sample in bytes or -1 if no more\n samples are available.</p>\n</div></li></ul></div></div></div><div id='method-getSampleTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getSampleTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getSampleTime' class='name expandable'>getSampleTime</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current sample's presentation time in microseconds. ...</div><div class='long'><p>Returns the current sample's presentation time in microseconds.\n or -1 if no more samples are available.</p>\n</div></div></div><div id='method-getSampleTrackIndex' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getSampleTrackIndex' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getSampleTrackIndex' class='name expandable'>getSampleTrackIndex</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the track index the current sample originates from (or -1\n if no more samples are available) ...</div><div class='long'><p>Returns the track index the current sample originates from (or -1\n if no more samples are available)</p>\n</div></div></div><div id='method-getTrackCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getTrackCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getTrackCount' class='name expandable'>getTrackCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Count the number of tracks found in the data source. ...</div><div class='long'><p>Count the number of tracks found in the data source.</p>\n</div></div></div><div id='method-getTrackFormat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-getTrackFormat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-getTrackFormat' class='name expandable'>getTrackFormat</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the track format at the specified index. ...</div><div class='long'><p>Get the track format at the specified index.</p>\n\n<p> More detail on the representation can be found at <a href=\"#!/api/android.media.MediaCodec\" rel=\"android.media.MediaCodec\" class=\"docClass\">android.media.MediaCodec</a>\n <p>\n The following table summarizes support for format keys across android releases:</p>\n\n<p> <table style=\"width: 0%\">\n  <thead>\n   <tr>\n    <th rowspan=2>OS Version(s)</th>\n    <td colspan=3>{@code MediaFormat} keys used for\n   </td></tr><tr>\n    <th>All Tracks</th>\n    <th>Audio Tracks</th>\n    <th>Video Tracks</th>\n   </tr>\n  </thead>\n  <tbody>\n   <tr>\n    <td>android.os.Build.VERSION_CODES.JELLY_BEAN</td>\n    <td rowspan=8><a href=\"#!/api/android.media.MediaFormat-property-KEY_MIME\" rel=\"android.media.MediaFormat-property-KEY_MIME\" class=\"docClass\">android.media.MediaFormat.KEY_MIME</a>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_DURATION\" rel=\"android.media.MediaFormat-property-KEY_DURATION\" class=\"docClass\">android.media.MediaFormat.KEY_DURATION</a>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_MAX_INPUT_SIZE\" rel=\"android.media.MediaFormat-property-KEY_MAX_INPUT_SIZE\" class=\"docClass\">android.media.MediaFormat.KEY_MAX_INPUT_SIZE</a></td>\n    <td rowspan=5><a href=\"#!/api/android.media.MediaFormat-property-KEY_SAMPLE_RATE\" rel=\"android.media.MediaFormat-property-KEY_SAMPLE_RATE\" class=\"docClass\">android.media.MediaFormat.KEY_SAMPLE_RATE</a>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_CHANNEL_COUNT\" rel=\"android.media.MediaFormat-property-KEY_CHANNEL_COUNT\" class=\"docClass\">android.media.MediaFormat.KEY_CHANNEL_COUNT</a>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_CHANNEL_MASK\" rel=\"android.media.MediaFormat-property-KEY_CHANNEL_MASK\" class=\"docClass\">android.media.MediaFormat.KEY_CHANNEL_MASK</a>,<br>\n        gapless playback information<sup>.mp3, .mp4</sup>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_IS_ADTS\" rel=\"android.media.MediaFormat-property-KEY_IS_ADTS\" class=\"docClass\">android.media.MediaFormat.KEY_IS_ADTS</a><sup>AAC if streaming</sup>,<br>\n        codec-specific data<sup>AAC, Vorbis</sup></td>\n    <td rowspan=2><a href=\"#!/api/android.media.MediaFormat-property-KEY_WIDTH\" rel=\"android.media.MediaFormat-property-KEY_WIDTH\" class=\"docClass\">android.media.MediaFormat.KEY_WIDTH</a>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_HEIGHT\" rel=\"android.media.MediaFormat-property-KEY_HEIGHT\" class=\"docClass\">android.media.MediaFormat.KEY_HEIGHT</a>,<br>\n        codec-specific data<sup>AVC, MPEG4</sup></td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.JELLY_BEAN_MR1</td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.JELLY_BEAN_MR2</td>\n    <td rowspan=3>as above, plus<br>\n        Pixel aspect ratio information<sup>AVC, <em></em></sup></td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.KITKAT</td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.KITKAT_WATCH</td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.LOLLIPOP</td>\n    <td rowspan=2>as above, plus<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_BIT_RATE\" rel=\"android.media.MediaFormat-property-KEY_BIT_RATE\" class=\"docClass\">android.media.MediaFormat.KEY_BIT_RATE</a><sup>AAC</sup>,<br>\n        codec-specific data<sup>Opus</sup></td>\n    <td rowspan=2>as above, plus<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_ROTATION\" rel=\"android.media.MediaFormat-property-KEY_ROTATION\" class=\"docClass\">android.media.MediaFormat.KEY_ROTATION</a><sup>.mp4</sup>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_BIT_RATE\" rel=\"android.media.MediaFormat-property-KEY_BIT_RATE\" class=\"docClass\">android.media.MediaFormat.KEY_BIT_RATE</a><sup>MPEG4</sup>,<br>\n        codec-specific data<sup>HEVC</sup></td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.LOLLIPOP_MR1</td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.M</td>\n    <td>as above, plus<br>\n        gapless playback information<sup>Opus</sup></td>\n    <td>as above, plus<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_FRAME_RATE\" rel=\"android.media.MediaFormat-property-KEY_FRAME_RATE\" class=\"docClass\">android.media.MediaFormat.KEY_FRAME_RATE</a> (integer)</td>\n   </tr><tr>\n    <td>android.os.Build.VERSION_CODES.N</td>\n    <td>as above, plus<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_TRACK_ID\" rel=\"android.media.MediaFormat-property-KEY_TRACK_ID\" class=\"docClass\">android.media.MediaFormat.KEY_TRACK_ID</a>,<br>\n        <!-- {link MediaFormat#KEY_MAX_BIT_RATE}<sup>#, .mp4</sup>,<br> -->\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_BIT_RATE\" rel=\"android.media.MediaFormat-property-KEY_BIT_RATE\" class=\"docClass\">android.media.MediaFormat.KEY_BIT_RATE</a><sup>#, .mp4</sup></td>\n    <td>as above, plus<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_PCM_ENCODING\" rel=\"android.media.MediaFormat-property-KEY_PCM_ENCODING\" class=\"docClass\">android.media.MediaFormat.KEY_PCM_ENCODING</a>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_PROFILE\" rel=\"android.media.MediaFormat-property-KEY_PROFILE\" class=\"docClass\">android.media.MediaFormat.KEY_PROFILE</a><sup>AAC</sup></td>\n    <td>as above, plus<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_HDR_STATIC_INFO\" rel=\"android.media.MediaFormat-property-KEY_HDR_STATIC_INFO\" class=\"docClass\">android.media.MediaFormat.KEY_HDR_STATIC_INFO</a><sup>#, .webm</sup>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_COLOR_STANDARD\" rel=\"android.media.MediaFormat-property-KEY_COLOR_STANDARD\" class=\"docClass\">android.media.MediaFormat.KEY_COLOR_STANDARD</a><sup>#</sup>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_COLOR_TRANSFER\" rel=\"android.media.MediaFormat-property-KEY_COLOR_TRANSFER\" class=\"docClass\">android.media.MediaFormat.KEY_COLOR_TRANSFER</a><sup>#</sup>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_COLOR_RANGE\" rel=\"android.media.MediaFormat-property-KEY_COLOR_RANGE\" class=\"docClass\">android.media.MediaFormat.KEY_COLOR_RANGE</a><sup>#</sup>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_PROFILE\" rel=\"android.media.MediaFormat-property-KEY_PROFILE\" class=\"docClass\">android.media.MediaFormat.KEY_PROFILE</a><sup>MPEG2, H.263, MPEG4, AVC, HEVC, VP9</sup>,<br>\n        <a href=\"#!/api/android.media.MediaFormat-property-KEY_LEVEL\" rel=\"android.media.MediaFormat-property-KEY_LEVEL\" class=\"docClass\">android.media.MediaFormat.KEY_LEVEL</a><sup>H.263, MPEG4, AVC, HEVC, VP9</sup>,<br>\n        codec-specific data<sup>VP9</sup></td>\n   </tr>\n   <tr>\n    <td colspan=4>\n     <p class=note><strong>Notes:</strong><br>\n      #: container-specified value only.<br>\n      .mp4, .webm&hellip;: for listed containers<br>\n      MPEG4, AAC&hellip;: for listed codecs\n    </p></td>\n   </tr><tr>\n    <td colspan=4>\n     <p class=note>Note that that level information contained in the container many times\n     does not match the level of the actual bitstream. You may want to clear the level using\n     {@code MediaFormat.setString(KEY_LEVEL, null)} before using the track format to find a\n     decoder that can play back a particular track.\n    </p></td>\n   </tr><tr>\n    <td colspan=4>\n     <p class=note><strong>Pixel (sample) aspect ratio</strong> is returned in the following\n     keys. The display width can be calculated for example as:\n     <p align=center>\n     display-width = display-height * crop-width / crop-height * sar-width / sar-height\n    </p></p></td>\n   </tr><tr>\n    <th>Format Key</th><th>Value Type</th><th colspan=2>Description</th>\n   </tr><tr>\n    <td>{@code \"sar-width\"}</td><td>Integer</td><td colspan=2>Pixel aspect ratio width</td>\n   </tr><tr>\n    <td>{@code \"sar-height\"}</td><td>Integer</td><td colspan=2>Pixel aspect ratio height</td>\n   </tr>\n  </tbody>\n </table></p>\n</div></div></div><div id='method-hasCacheReachedEndOfStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-hasCacheReachedEndOfStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-hasCacheReachedEndOfStream' class='name expandable'>hasCacheReachedEndOfStream</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true iff we are caching data and the cache has reached the\n end of the data stream (for now, a future seek ma...</div><div class='long'><p>Returns true iff we are caching data and the cache has reached the\n end of the data stream (for now, a future seek may of course restart\n the fetching of data).\n This API only returns a meaningful result if <a href=\"#!/api/android.media.MediaExtractor-method-getCachedDuration\" rel=\"android.media.MediaExtractor-method-getCachedDuration\" class=\"docClass\">getCachedDuration</a>\n indicates the presence of a cache, i.e. does NOT return -1.</p>\n</div></div></div><div id='method-readSampleData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-readSampleData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-readSampleData' class='name expandable'>readSampleData</a>( <span class='pre'>byteBuf</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current encoded sample and store it in the byte buffer\n starting at the given offset. ...</div><div class='long'><p>Retrieve the current encoded sample and store it in the byte buffer\n starting at the given offset.\n <p>\n <b>Note:</b>As of API 21, on success the position and limit of\n {@code byteBuf} is updated to point to the data just read.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>byteBuf</span> : Object {ByteBuffer}<div class='sub-desc'><p>the destination byte buffer</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the sample size (or -1 if no more samples are available).</p>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-release' class='name expandable'>release</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Make sure you call this when you're done to free up any resources\n instead of relying on the garbage collector to do ...</div><div class='long'><p>Make sure you call this when you're done to free up any resources\n instead of relying on the garbage collector to do this for you at\n some point in the future.</p>\n</div></div></div><div id='method-seekTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-seekTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-seekTo' class='name expandable'>seekTo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>All selected tracks seek near the requested time according to the\n specified mode. ...</div><div class='long'><p>All selected tracks seek near the requested time according to the\n specified mode.</p>\n</div></div></div><div id='method-selectTrack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-selectTrack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-selectTrack' class='name expandable'>selectTrack</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Subsequent calls to readSampleData, getSampleTrackIndex and\n getSampleTime only retrieve information for the subset o...</div><div class='long'><p>Subsequent calls to <a href=\"#!/api/android.media.MediaExtractor-method-readSampleData\" rel=\"android.media.MediaExtractor-method-readSampleData\" class=\"docClass\">readSampleData</a>, <a href=\"#!/api/android.media.MediaExtractor-method-getSampleTrackIndex\" rel=\"android.media.MediaExtractor-method-getSampleTrackIndex\" class=\"docClass\">getSampleTrackIndex</a> and\n <a href=\"#!/api/android.media.MediaExtractor-method-getSampleTime\" rel=\"android.media.MediaExtractor-method-getSampleTime\" class=\"docClass\">getSampleTime</a> only retrieve information for the subset of tracks\n selected.\n Selecting the same track multiple times has no effect, the track is\n only selected once.</p>\n</div></div></div><div id='method-setDataSource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-setDataSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-setDataSource' class='name expandable'>setDataSource</a>( <span class='pre'>fd, offset, length</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the data source (FileDescriptor) to use. ...</div><div class='long'><p>Sets the data source (FileDescriptor) to use.  The FileDescriptor must be\n seekable (N.B. a LocalSocket is not seekable). It is the caller's responsibility\n to close the file descriptor. It is safe to do so as soon as this call returns.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fd</span> : Object {FileDescriptor}<div class='sub-desc'><p>the FileDescriptor for the file you want to extract from.</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the offset into the file where the data to be extracted starts, in bytes</p>\n</div></li><li><span class='pre'>length</span> : Number<div class='sub-desc'><p>the length in bytes of the data to be extracted</p>\n</div></li></ul></div></div></div><div id='method-setMediaCas' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-setMediaCas' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-setMediaCas' class='name expandable'>setMediaCas</a>( <span class='pre'>mediaCas</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the MediaCas instance to use. ...</div><div class='long'><p>Sets the MediaCas instance to use. This should be called after a\n successful setDataSource() if at least one track reports mime type\n of <a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_AUDIO_SCRAMBLED\" rel=\"android.media.MediaFormat-property-MIMETYPE_AUDIO_SCRAMBLED\" class=\"docClass\">android.media.MediaFormat.MIMETYPE_AUDIO_SCRAMBLED</a>\n or <a href=\"#!/api/android.media.MediaFormat-property-MIMETYPE_VIDEO_SCRAMBLED\" rel=\"android.media.MediaFormat-property-MIMETYPE_VIDEO_SCRAMBLED\" class=\"docClass\">android.media.MediaFormat.MIMETYPE_VIDEO_SCRAMBLED</a>.\n Stream parsing will not proceed until a valid MediaCas object\n is provided.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mediaCas</span> : Object {MediaCas}<div class='sub-desc'><p>the MediaCas object to use.</p>\n</div></li></ul></div></div></div><div id='method-unselectTrack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaExtractor'>android.media.MediaExtractor</span><br/><a href='source/MediaExtractor.html#android-media-MediaExtractor-method-unselectTrack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaExtractor-method-unselectTrack' class='name expandable'>unselectTrack</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Subsequent calls to readSampleData, getSampleTrackIndex and\n getSampleTime only retrieve information for the subset o...</div><div class='long'><p>Subsequent calls to <a href=\"#!/api/android.media.MediaExtractor-method-readSampleData\" rel=\"android.media.MediaExtractor-method-readSampleData\" class=\"docClass\">readSampleData</a>, <a href=\"#!/api/android.media.MediaExtractor-method-getSampleTrackIndex\" rel=\"android.media.MediaExtractor-method-getSampleTrackIndex\" class=\"docClass\">getSampleTrackIndex</a> and\n <a href=\"#!/api/android.media.MediaExtractor-method-getSampleTime\" rel=\"android.media.MediaExtractor-method-getSampleTime\" class=\"docClass\">getSampleTime</a> only retrieve information for the subset of tracks\n selected.</p>\n</div></div></div></div></div></div></div>","meta":{}});