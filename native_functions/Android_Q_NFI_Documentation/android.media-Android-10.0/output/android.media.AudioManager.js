Ext.data.JsonP.android_media_AudioManager({"tagname":"class","name":"android.media.AudioManager","autodetected":{},"files":[{"filename":"AudioManager.js","href":"AudioManager.html#android-media-AudioManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_AUDIO_BECOMING_NOISY","tagname":"property","owner":"android.media.AudioManager","id":"property-ACTION_AUDIO_BECOMING_NOISY","meta":{}},{"name":"ACTION_HDMI_AUDIO_PLUG","tagname":"property","owner":"android.media.AudioManager","id":"property-ACTION_HDMI_AUDIO_PLUG","meta":{}},{"name":"ACTION_HEADSET_PLUG","tagname":"property","owner":"android.media.AudioManager","id":"property-ACTION_HEADSET_PLUG","meta":{}},{"name":"ACTION_MICROPHONE_MUTE_CHANGED","tagname":"property","owner":"android.media.AudioManager","id":"property-ACTION_MICROPHONE_MUTE_CHANGED","meta":{}},{"name":"ACTION_SCO_AUDIO_STATE_CHANGED","tagname":"property","owner":"android.media.AudioManager","id":"property-ACTION_SCO_AUDIO_STATE_CHANGED","meta":{"deprecated":{"text":"<p>Use  <a href=\"#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" rel=\"android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" class=\"docClass\">ACTION_SCO_AUDIO_STATE_UPDATED</a> instead</p>\n"}}},{"name":"ACTION_SCO_AUDIO_STATE_UPDATED","tagname":"property","owner":"android.media.AudioManager","id":"property-ACTION_SCO_AUDIO_STATE_UPDATED","meta":{}},{"name":"ACTION_SPEAKERPHONE_STATE_CHANGED","tagname":"property","owner":"android.media.AudioManager","id":"property-ACTION_SPEAKERPHONE_STATE_CHANGED","meta":{}},{"name":"ADJUST_LOWER","tagname":"property","owner":"android.media.AudioManager","id":"property-ADJUST_LOWER","meta":{}},{"name":"ADJUST_MUTE","tagname":"property","owner":"android.media.AudioManager","id":"property-ADJUST_MUTE","meta":{}},{"name":"ADJUST_RAISE","tagname":"property","owner":"android.media.AudioManager","id":"property-ADJUST_RAISE","meta":{}},{"name":"ADJUST_SAME","tagname":"property","owner":"android.media.AudioManager","id":"property-ADJUST_SAME","meta":{}},{"name":"ADJUST_TOGGLE_MUTE","tagname":"property","owner":"android.media.AudioManager","id":"property-ADJUST_TOGGLE_MUTE","meta":{}},{"name":"ADJUST_UNMUTE","tagname":"property","owner":"android.media.AudioManager","id":"property-ADJUST_UNMUTE","meta":{}},{"name":"AUDIOFOCUS_GAIN","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_GAIN","meta":{}},{"name":"AUDIOFOCUS_GAIN_TRANSIENT","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_GAIN_TRANSIENT","meta":{}},{"name":"AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE","meta":{}},{"name":"AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK","meta":{}},{"name":"AUDIOFOCUS_LOSS","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_LOSS","meta":{}},{"name":"AUDIOFOCUS_LOSS_TRANSIENT","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_LOSS_TRANSIENT","meta":{}},{"name":"AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK","meta":{}},{"name":"AUDIOFOCUS_NONE","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_NONE","meta":{}},{"name":"AUDIOFOCUS_REQUEST_DELAYED","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_REQUEST_DELAYED","meta":{}},{"name":"AUDIOFOCUS_REQUEST_FAILED","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_REQUEST_FAILED","meta":{}},{"name":"AUDIOFOCUS_REQUEST_GRANTED","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIOFOCUS_REQUEST_GRANTED","meta":{}},{"name":"AUDIO_SESSION_ID_GENERATE","tagname":"property","owner":"android.media.AudioManager","id":"property-AUDIO_SESSION_ID_GENERATE","meta":{}},{"name":"ERROR","tagname":"property","owner":"android.media.AudioManager","id":"property-ERROR","meta":{}},{"name":"ERROR_DEAD_OBJECT","tagname":"property","owner":"android.media.AudioManager","id":"property-ERROR_DEAD_OBJECT","meta":{}},{"name":"EXTRA_AUDIO_PLUG_STATE","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_AUDIO_PLUG_STATE","meta":{}},{"name":"EXTRA_ENCODINGS","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_ENCODINGS","meta":{}},{"name":"EXTRA_MAX_CHANNEL_COUNT","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_MAX_CHANNEL_COUNT","meta":{}},{"name":"EXTRA_RINGER_MODE","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_RINGER_MODE","meta":{}},{"name":"EXTRA_SCO_AUDIO_PREVIOUS_STATE","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_SCO_AUDIO_PREVIOUS_STATE","meta":{}},{"name":"EXTRA_SCO_AUDIO_STATE","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_SCO_AUDIO_STATE","meta":{}},{"name":"EXTRA_VIBRATE_SETTING","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_VIBRATE_SETTING","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode and listen to <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" class=\"docClass\">RINGER_MODE_CHANGED_ACTION</a> instead.</p>\n"}}},{"name":"EXTRA_VIBRATE_TYPE","tagname":"property","owner":"android.media.AudioManager","id":"property-EXTRA_VIBRATE_TYPE","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode and listen to <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" class=\"docClass\">RINGER_MODE_CHANGED_ACTION</a> instead.</p>\n"}}},{"name":"FLAG_ALLOW_RINGER_MODES","tagname":"property","owner":"android.media.AudioManager","id":"property-FLAG_ALLOW_RINGER_MODES","meta":{}},{"name":"FLAG_PLAY_SOUND","tagname":"property","owner":"android.media.AudioManager","id":"property-FLAG_PLAY_SOUND","meta":{}},{"name":"FLAG_REMOVE_SOUND_AND_VIBRATE","tagname":"property","owner":"android.media.AudioManager","id":"property-FLAG_REMOVE_SOUND_AND_VIBRATE","meta":{}},{"name":"FLAG_SHOW_UI","tagname":"property","owner":"android.media.AudioManager","id":"property-FLAG_SHOW_UI","meta":{}},{"name":"FLAG_VIBRATE","tagname":"property","owner":"android.media.AudioManager","id":"property-FLAG_VIBRATE","meta":{}},{"name":"FX_FOCUS_NAVIGATION_DOWN","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_FOCUS_NAVIGATION_DOWN","meta":{}},{"name":"FX_FOCUS_NAVIGATION_LEFT","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_FOCUS_NAVIGATION_LEFT","meta":{}},{"name":"FX_FOCUS_NAVIGATION_RIGHT","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_FOCUS_NAVIGATION_RIGHT","meta":{}},{"name":"FX_FOCUS_NAVIGATION_UP","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_FOCUS_NAVIGATION_UP","meta":{}},{"name":"FX_KEYPRESS_DELETE","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_KEYPRESS_DELETE","meta":{}},{"name":"FX_KEYPRESS_INVALID","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_KEYPRESS_INVALID","meta":{}},{"name":"FX_KEYPRESS_RETURN","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_KEYPRESS_RETURN","meta":{}},{"name":"FX_KEYPRESS_SPACEBAR","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_KEYPRESS_SPACEBAR","meta":{}},{"name":"FX_KEYPRESS_STANDARD","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_KEYPRESS_STANDARD","meta":{}},{"name":"FX_KEY_CLICK","tagname":"property","owner":"android.media.AudioManager","id":"property-FX_KEY_CLICK","meta":{}},{"name":"GET_DEVICES_ALL","tagname":"property","owner":"android.media.AudioManager","id":"property-GET_DEVICES_ALL","meta":{}},{"name":"GET_DEVICES_INPUTS","tagname":"property","owner":"android.media.AudioManager","id":"property-GET_DEVICES_INPUTS","meta":{}},{"name":"GET_DEVICES_OUTPUTS","tagname":"property","owner":"android.media.AudioManager","id":"property-GET_DEVICES_OUTPUTS","meta":{}},{"name":"MODE_CURRENT","tagname":"property","owner":"android.media.AudioManager","id":"property-MODE_CURRENT","meta":{}},{"name":"MODE_INVALID","tagname":"property","owner":"android.media.AudioManager","id":"property-MODE_INVALID","meta":{}},{"name":"MODE_IN_CALL","tagname":"property","owner":"android.media.AudioManager","id":"property-MODE_IN_CALL","meta":{}},{"name":"MODE_IN_COMMUNICATION","tagname":"property","owner":"android.media.AudioManager","id":"property-MODE_IN_COMMUNICATION","meta":{}},{"name":"MODE_NORMAL","tagname":"property","owner":"android.media.AudioManager","id":"property-MODE_NORMAL","meta":{}},{"name":"MODE_RINGTONE","tagname":"property","owner":"android.media.AudioManager","id":"property-MODE_RINGTONE","meta":{}},{"name":"NUM_STREAMS","tagname":"property","owner":"android.media.AudioManager","id":"property-NUM_STREAMS","meta":{"deprecated":{"text":"<p>Do not iterate on volume stream type values.</p>\n"}}},{"name":"PROPERTY_OUTPUT_FRAMES_PER_BUFFER","tagname":"property","owner":"android.media.AudioManager","id":"property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER","meta":{}},{"name":"PROPERTY_OUTPUT_SAMPLE_RATE","tagname":"property","owner":"android.media.AudioManager","id":"property-PROPERTY_OUTPUT_SAMPLE_RATE","meta":{}},{"name":"PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED","tagname":"property","owner":"android.media.AudioManager","id":"property-PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED","meta":{}},{"name":"PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND","tagname":"property","owner":"android.media.AudioManager","id":"property-PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND","meta":{}},{"name":"PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND","tagname":"property","owner":"android.media.AudioManager","id":"property-PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND","meta":{}},{"name":"RINGER_MODE_CHANGED_ACTION","tagname":"property","owner":"android.media.AudioManager","id":"property-RINGER_MODE_CHANGED_ACTION","meta":{}},{"name":"RINGER_MODE_NORMAL","tagname":"property","owner":"android.media.AudioManager","id":"property-RINGER_MODE_NORMAL","meta":{}},{"name":"RINGER_MODE_SILENT","tagname":"property","owner":"android.media.AudioManager","id":"property-RINGER_MODE_SILENT","meta":{}},{"name":"RINGER_MODE_VIBRATE","tagname":"property","owner":"android.media.AudioManager","id":"property-RINGER_MODE_VIBRATE","meta":{}},{"name":"ROUTE_ALL","tagname":"property","owner":"android.media.AudioManager","id":"property-ROUTE_ALL","meta":{"deprecated":{"text":"<p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n"}}},{"name":"ROUTE_BLUETOOTH","tagname":"property","owner":"android.media.AudioManager","id":"property-ROUTE_BLUETOOTH","meta":{"deprecated":{"text":"<p>use <a href=\"#!/api/android.media.AudioManager-property-ROUTE_BLUETOOTH_SCO\" rel=\"android.media.AudioManager-property-ROUTE_BLUETOOTH_SCO\" class=\"docClass\">ROUTE_BLUETOOTH_SCO</a></p>\n"}}},{"name":"ROUTE_BLUETOOTH_A2DP","tagname":"property","owner":"android.media.AudioManager","id":"property-ROUTE_BLUETOOTH_A2DP","meta":{"deprecated":{"text":"<p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n"}}},{"name":"ROUTE_BLUETOOTH_SCO","tagname":"property","owner":"android.media.AudioManager","id":"property-ROUTE_BLUETOOTH_SCO","meta":{"deprecated":{"text":"<p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n"}}},{"name":"ROUTE_EARPIECE","tagname":"property","owner":"android.media.AudioManager","id":"property-ROUTE_EARPIECE","meta":{"deprecated":{"text":"<p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n"}}},{"name":"ROUTE_HEADSET","tagname":"property","owner":"android.media.AudioManager","id":"property-ROUTE_HEADSET","meta":{"deprecated":{"text":"<p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n"}}},{"name":"ROUTE_SPEAKER","tagname":"property","owner":"android.media.AudioManager","id":"property-ROUTE_SPEAKER","meta":{"deprecated":{"text":"<p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n"}}},{"name":"SCO_AUDIO_STATE_CONNECTED","tagname":"property","owner":"android.media.AudioManager","id":"property-SCO_AUDIO_STATE_CONNECTED","meta":{}},{"name":"SCO_AUDIO_STATE_CONNECTING","tagname":"property","owner":"android.media.AudioManager","id":"property-SCO_AUDIO_STATE_CONNECTING","meta":{}},{"name":"SCO_AUDIO_STATE_DISCONNECTED","tagname":"property","owner":"android.media.AudioManager","id":"property-SCO_AUDIO_STATE_DISCONNECTED","meta":{}},{"name":"SCO_AUDIO_STATE_ERROR","tagname":"property","owner":"android.media.AudioManager","id":"property-SCO_AUDIO_STATE_ERROR","meta":{}},{"name":"STREAM_ACCESSIBILITY","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_ACCESSIBILITY","meta":{}},{"name":"STREAM_ALARM","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_ALARM","meta":{}},{"name":"STREAM_DTMF","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_DTMF","meta":{}},{"name":"STREAM_MUSIC","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_MUSIC","meta":{}},{"name":"STREAM_NOTIFICATION","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_NOTIFICATION","meta":{}},{"name":"STREAM_RING","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_RING","meta":{}},{"name":"STREAM_SYSTEM","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_SYSTEM","meta":{}},{"name":"STREAM_VOICE_CALL","tagname":"property","owner":"android.media.AudioManager","id":"property-STREAM_VOICE_CALL","meta":{}},{"name":"USE_DEFAULT_STREAM_TYPE","tagname":"property","owner":"android.media.AudioManager","id":"property-USE_DEFAULT_STREAM_TYPE","meta":{}},{"name":"VIBRATE_SETTING_CHANGED_ACTION","tagname":"property","owner":"android.media.AudioManager","id":"property-VIBRATE_SETTING_CHANGED_ACTION","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode and listen to <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" class=\"docClass\">RINGER_MODE_CHANGED_ACTION</a> instead.</p>\n"}}},{"name":"VIBRATE_SETTING_OFF","tagname":"property","owner":"android.media.AudioManager","id":"property-VIBRATE_SETTING_OFF","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n"}}},{"name":"VIBRATE_SETTING_ON","tagname":"property","owner":"android.media.AudioManager","id":"property-VIBRATE_SETTING_ON","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n"}}},{"name":"VIBRATE_SETTING_ONLY_SILENT","tagname":"property","owner":"android.media.AudioManager","id":"property-VIBRATE_SETTING_ONLY_SILENT","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n"}}},{"name":"VIBRATE_TYPE_NOTIFICATION","tagname":"property","owner":"android.media.AudioManager","id":"property-VIBRATE_TYPE_NOTIFICATION","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n"}}},{"name":"VIBRATE_TYPE_RINGER","tagname":"property","owner":"android.media.AudioManager","id":"property-VIBRATE_TYPE_RINGER","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n"}}},{"name":"abandonAudioFocus","tagname":"method","owner":"android.media.AudioManager","id":"method-abandonAudioFocus","meta":{"deprecated":{"text":"<p>use abandonAudioFocusRequest(AudioFocusRequest)</p>\n"}}},{"name":"abandonAudioFocusRequest","tagname":"method","owner":"android.media.AudioManager","id":"method-abandonAudioFocusRequest","meta":{}},{"name":"adjustStreamVolume","tagname":"method","owner":"android.media.AudioManager","id":"method-adjustStreamVolume","meta":{}},{"name":"adjustSuggestedStreamVolume","tagname":"method","owner":"android.media.AudioManager","id":"method-adjustSuggestedStreamVolume","meta":{}},{"name":"adjustVolume","tagname":"method","owner":"android.media.AudioManager","id":"method-adjustVolume","meta":{}},{"name":"dispatchAudioFocusChange","tagname":"method","owner":"android.media.AudioManager","id":"method-dispatchAudioFocusChange","meta":{}},{"name":"dispatchMediaKeyEvent","tagname":"method","owner":"android.media.AudioManager","id":"method-dispatchMediaKeyEvent","meta":{}},{"name":"generateAudioSessionId","tagname":"method","owner":"android.media.AudioManager","id":"method-generateAudioSessionId","meta":{}},{"name":"getActivePlaybackConfigurations","tagname":"method","owner":"android.media.AudioManager","id":"method-getActivePlaybackConfigurations","meta":{}},{"name":"getActiveRecordingConfigurations","tagname":"method","owner":"android.media.AudioManager","id":"method-getActiveRecordingConfigurations","meta":{}},{"name":"getAllowedCapturePolicy","tagname":"method","owner":"android.media.AudioManager","id":"method-getAllowedCapturePolicy","meta":{}},{"name":"getDevices","tagname":"method","owner":"android.media.AudioManager","id":"method-getDevices","meta":{}},{"name":"getDevicesForStream","tagname":"method","owner":"android.media.AudioManager","id":"method-getDevicesForStream","meta":{}},{"name":"getFocusRampTimeMs","tagname":"method","owner":"android.media.AudioManager","id":"method-getFocusRampTimeMs","meta":{}},{"name":"getMicrophones","tagname":"method","owner":"android.media.AudioManager","id":"method-getMicrophones","meta":{}},{"name":"getMode","tagname":"method","owner":"android.media.AudioManager","id":"method-getMode","meta":{}},{"name":"getParameters","tagname":"method","owner":"android.media.AudioManager","id":"method-getParameters","meta":{}},{"name":"getProperty","tagname":"method","owner":"android.media.AudioManager","id":"method-getProperty","meta":{}},{"name":"getRingerMode","tagname":"method","owner":"android.media.AudioManager","id":"method-getRingerMode","meta":{}},{"name":"getRingtonePlayer","tagname":"method","owner":"android.media.AudioManager","id":"method-getRingtonePlayer","meta":{}},{"name":"getRouting","tagname":"method","owner":"android.media.AudioManager","id":"method-getRouting","meta":{"deprecated":{"text":"<p>Do not query audio routing directly, use isSpeakerphoneOn(),\n isBluetoothScoOn(), isBluetoothA2dpOn() and isWiredHeadsetOn() methods instead.</p>\n"}}},{"name":"getStreamMaxVolume","tagname":"method","owner":"android.media.AudioManager","id":"method-getStreamMaxVolume","meta":{}},{"name":"getStreamMinVolume","tagname":"method","owner":"android.media.AudioManager","id":"method-getStreamMinVolume","meta":{}},{"name":"getStreamMinVolumeInt","tagname":"method","owner":"android.media.AudioManager","id":"method-getStreamMinVolumeInt","meta":{}},{"name":"getStreamVolume","tagname":"method","owner":"android.media.AudioManager","id":"method-getStreamVolume","meta":{}},{"name":"getStreamVolumeDb","tagname":"method","owner":"android.media.AudioManager","id":"method-getStreamVolumeDb","meta":{}},{"name":"getVibrateSetting","tagname":"method","owner":"android.media.AudioManager","id":"method-getVibrateSetting","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\n current ringer mode that can be queried via getRingerMode().</p>\n"}}},{"name":"handleBluetoothA2dpDeviceConfigChange","tagname":"method","owner":"android.media.AudioManager","id":"method-handleBluetoothA2dpDeviceConfigChange","meta":{}},{"name":"isBluetoothA2dpOn","tagname":"method","owner":"android.media.AudioManager","id":"method-isBluetoothA2dpOn","meta":{"deprecated":{"text":"<p>Use AudioManager.getDevices(int) instead to list available audio devices.</p>\n"}}},{"name":"isBluetoothScoAvailableOffCall","tagname":"method","owner":"android.media.AudioManager","id":"method-isBluetoothScoAvailableOffCall","meta":{}},{"name":"isBluetoothScoOn","tagname":"method","owner":"android.media.AudioManager","id":"method-isBluetoothScoOn","meta":{}},{"name":"isHapticPlaybackSupported","tagname":"method","owner":"android.media.AudioManager","id":"method-isHapticPlaybackSupported","meta":{}},{"name":"isMicrophoneMute","tagname":"method","owner":"android.media.AudioManager","id":"method-isMicrophoneMute","meta":{}},{"name":"isMusicActive","tagname":"method","owner":"android.media.AudioManager","id":"method-isMusicActive","meta":{}},{"name":"isOffloadedPlaybackSupported","tagname":"method","owner":"android.media.AudioManager","id":"method-isOffloadedPlaybackSupported","meta":{}},{"name":"isSpeakerphoneOn","tagname":"method","owner":"android.media.AudioManager","id":"method-isSpeakerphoneOn","meta":{}},{"name":"isStreamMute","tagname":"method","owner":"android.media.AudioManager","id":"method-isStreamMute","meta":{}},{"name":"isVolumeFixed","tagname":"method","owner":"android.media.AudioManager","id":"method-isVolumeFixed","meta":{}},{"name":"isWiredHeadsetOn","tagname":"method","owner":"android.media.AudioManager","id":"method-isWiredHeadsetOn","meta":{"deprecated":{"text":"<p>Use AudioManager.getDevices(int) instead to list available audio devices.</p>\n"}}},{"name":"loadSoundEffects","tagname":"method","owner":"android.media.AudioManager","id":"method-loadSoundEffects","meta":{}},{"name":"playSoundEffect","tagname":"method","owner":"android.media.AudioManager","id":"method-playSoundEffect","meta":{}},{"name":"registerAudioDeviceCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-registerAudioDeviceCallback","meta":{}},{"name":"registerAudioFocusRequest","tagname":"method","owner":"android.media.AudioManager","id":"method-registerAudioFocusRequest","meta":{}},{"name":"registerAudioPlaybackCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-registerAudioPlaybackCallback","meta":{}},{"name":"registerAudioPolicy","tagname":"method","owner":"android.media.AudioManager","id":"method-registerAudioPolicy","meta":{}},{"name":"registerAudioRecordingCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-registerAudioRecordingCallback","meta":{}},{"name":"registerMediaButtonEventReceiver","tagname":"method","owner":"android.media.AudioManager","id":"method-registerMediaButtonEventReceiver","meta":{"deprecated":{"text":"<p>Use MediaSession.setMediaButtonReceiver(PendingIntent) instead.</p>\n"}}},{"name":"registerRemoteControlClient","tagname":"method","owner":"android.media.AudioManager","id":"method-registerRemoteControlClient","meta":{"deprecated":{"text":"<p>Use MediaSession instead.</p>\n"}}},{"name":"registerRemoteController","tagname":"method","owner":"android.media.AudioManager","id":"method-registerRemoteController","meta":{"deprecated":{"text":"<p>Use\n             ComponentName)\n             and MediaController instead.</p>\n"}}},{"name":"registerVolumeGroupCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-registerVolumeGroupCallback","meta":{}},{"name":"requestAudioFocus","tagname":"method","owner":"android.media.AudioManager","id":"method-requestAudioFocus","meta":{}},{"name":"requestAudioFocusForCall","tagname":"method","owner":"android.media.AudioManager","id":"method-requestAudioFocusForCall","meta":{}},{"name":"setAllowedCapturePolicy","tagname":"method","owner":"android.media.AudioManager","id":"method-setAllowedCapturePolicy","meta":{}},{"name":"setAudioServerStateCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-setAudioServerStateCallback","meta":{}},{"name":"setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent","tagname":"method","owner":"android.media.AudioManager","id":"method-setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent","meta":{}},{"name":"setBluetoothA2dpOn","tagname":"method","owner":"android.media.AudioManager","id":"method-setBluetoothA2dpOn","meta":{"deprecated":{"text":"<p>Do not use.</p>\n"}}},{"name":"setBluetoothHearingAidDeviceConnectionState","tagname":"method","owner":"android.media.AudioManager","id":"method-setBluetoothHearingAidDeviceConnectionState","meta":{}},{"name":"setBluetoothScoOn","tagname":"method","owner":"android.media.AudioManager","id":"method-setBluetoothScoOn","meta":{}},{"name":"setFocusRequestResult","tagname":"method","owner":"android.media.AudioManager","id":"method-setFocusRequestResult","meta":{}},{"name":"setMicrophoneMute","tagname":"method","owner":"android.media.AudioManager","id":"method-setMicrophoneMute","meta":{}},{"name":"setMode","tagname":"method","owner":"android.media.AudioManager","id":"method-setMode","meta":{}},{"name":"setParameters","tagname":"method","owner":"android.media.AudioManager","id":"method-setParameters","meta":{}},{"name":"setRingerMode","tagname":"method","owner":"android.media.AudioManager","id":"method-setRingerMode","meta":{}},{"name":"setRouting","tagname":"method","owner":"android.media.AudioManager","id":"method-setRouting","meta":{"deprecated":{"text":"<p>Do not set audio routing directly, use setSpeakerphoneOn(),\n setBluetoothScoOn() methods instead.</p>\n"}}},{"name":"setSpeakerphoneOn","tagname":"method","owner":"android.media.AudioManager","id":"method-setSpeakerphoneOn","meta":{}},{"name":"setStreamMute","tagname":"method","owner":"android.media.AudioManager","id":"method-setStreamMute","meta":{"deprecated":{"text":"<p>Use int, int) with\n             <a href=\"#!/api/android.media.AudioManager-property-ADJUST_MUTE\" rel=\"android.media.AudioManager-property-ADJUST_MUTE\" class=\"docClass\">ADJUST_MUTE</a> or <a href=\"#!/api/android.media.AudioManager-property-ADJUST_UNMUTE\" rel=\"android.media.AudioManager-property-ADJUST_UNMUTE\" class=\"docClass\">ADJUST_UNMUTE</a> instead.</p>\n"}}},{"name":"setStreamSolo","tagname":"method","owner":"android.media.AudioManager","id":"method-setStreamSolo","meta":{"deprecated":{"text":"<p>Do not use. If you need exclusive audio playback use\n             <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a>.</p>\n"}}},{"name":"setStreamVolume","tagname":"method","owner":"android.media.AudioManager","id":"method-setStreamVolume","meta":{}},{"name":"setSurroundFormatEnabled","tagname":"method","owner":"android.media.AudioManager","id":"method-setSurroundFormatEnabled","meta":{}},{"name":"setVibrateSetting","tagname":"method","owner":"android.media.AudioManager","id":"method-setVibrateSetting","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\n current ringer mode that can be queried via getRingerMode().</p>\n"}}},{"name":"setWiredDeviceConnectionState","tagname":"method","owner":"android.media.AudioManager","id":"method-setWiredDeviceConnectionState","meta":{}},{"name":"setWiredHeadsetOn","tagname":"method","owner":"android.media.AudioManager","id":"method-setWiredHeadsetOn","meta":{"deprecated":{"text":"<p>Do not use.</p>\n"}}},{"name":"shouldVibrate","tagname":"method","owner":"android.media.AudioManager","id":"method-shouldVibrate","meta":{"deprecated":{"text":"<p>Applications should maintain their own vibrate policy based on\n current ringer mode that can be queried via getRingerMode().</p>\n"}}},{"name":"startBluetoothSco","tagname":"method","owner":"android.media.AudioManager","id":"method-startBluetoothSco","meta":{}},{"name":"stopBluetoothSco","tagname":"method","owner":"android.media.AudioManager","id":"method-stopBluetoothSco","meta":{}},{"name":"unloadSoundEffects","tagname":"method","owner":"android.media.AudioManager","id":"method-unloadSoundEffects","meta":{}},{"name":"unregisterAudioDeviceCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterAudioDeviceCallback","meta":{}},{"name":"unregisterAudioFocusRequest","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterAudioFocusRequest","meta":{}},{"name":"unregisterAudioPlaybackCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterAudioPlaybackCallback","meta":{}},{"name":"unregisterAudioPolicy","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterAudioPolicy","meta":{}},{"name":"unregisterAudioPolicyAsync","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterAudioPolicyAsync","meta":{}},{"name":"unregisterAudioRecordingCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterAudioRecordingCallback","meta":{}},{"name":"unregisterMediaButtonEventReceiver","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterMediaButtonEventReceiver","meta":{"deprecated":{"text":"<p>Use MediaSession instead.</p>\n"}}},{"name":"unregisterRemoteControlClient","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterRemoteControlClient","meta":{"deprecated":{"text":"<p>Use MediaSession instead.</p>\n"}}},{"name":"unregisterRemoteController","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterRemoteController","meta":{"deprecated":{"text":"<p>Use\n             MediaSessionManager.removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)\n             instead.</p>\n"}}},{"name":"unregisterVolumeGroupCallback","tagname":"method","owner":"android.media.AudioManager","id":"method-unregisterVolumeGroupCallback","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.AudioManager","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.AudioManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AudioManager.html#android-media-AudioManager' target='_blank'>AudioManager.js</a></div></pre><div class='doc-contents'><p>AudioManager provides access to volume and ringer mode control.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_AUDIO_BECOMING_NOISY' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ACTION_AUDIO_BECOMING_NOISY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ACTION_AUDIO_BECOMING_NOISY' class='name expandable'>ACTION_AUDIO_BECOMING_NOISY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast intent, a hint for applications that audio is about to become\n'noisy' due to a change in audio outputs. ...</div><div class='long'><p>Broadcast intent, a hint for applications that audio is about to become\n'noisy' due to a change in audio outputs. For example, this intent may\nbe sent when a wired headset is unplugged, or when an A2DP audio\nsink is disconnected, and the audio system is about to automatically\nswitch audio route to the speaker. Applications that are controlling\naudio streams may consider pausing, reducing volume or some other action\non receipt of this intent so as not to surprise the user with audio\nfrom the speaker.</p>\n<p>Defaults to: <code>&quot;android.media.AUDIO_BECOMING_NOISY&quot;</code></p></div></div></div><div id='property-ACTION_HDMI_AUDIO_PLUG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ACTION_HDMI_AUDIO_PLUG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ACTION_HDMI_AUDIO_PLUG' class='name expandable'>ACTION_HDMI_AUDIO_PLUG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged. ...</div><div class='long'><p>Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged.</p>\n\n<p>The intent will have the following extra values: <a href=\"#!/api/android.media.AudioManager-property-EXTRA_AUDIO_PLUG_STATE\" rel=\"android.media.AudioManager-property-EXTRA_AUDIO_PLUG_STATE\" class=\"docClass\">EXTRA_AUDIO_PLUG_STATE</a>,\n<a href=\"#!/api/android.media.AudioManager-property-EXTRA_MAX_CHANNEL_COUNT\" rel=\"android.media.AudioManager-property-EXTRA_MAX_CHANNEL_COUNT\" class=\"docClass\">EXTRA_MAX_CHANNEL_COUNT</a>, <a href=\"#!/api/android.media.AudioManager-property-EXTRA_ENCODINGS\" rel=\"android.media.AudioManager-property-EXTRA_ENCODINGS\" class=\"docClass\">EXTRA_ENCODINGS</a>.</p>\n\n<p><p>It can only be received by explicitly registering for it with\nIntentFilter).</p>\n<p>Defaults to: <code>&quot;android.media.action.HDMI_AUDIO_PLUG&quot;</code></p></div></div></div><div id='property-ACTION_HEADSET_PLUG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ACTION_HEADSET_PLUG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ACTION_HEADSET_PLUG' class='name expandable'>ACTION_HEADSET_PLUG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: Wired Headset plugged in or unplugged. ...</div><div class='long'><p>Broadcast Action: Wired Headset plugged in or unplugged.</p>\n\n<p>You <em>cannot</em> receive this through components declared\nin manifests, only by explicitly registering for it with\nIntentFilter)\nContext.registerReceiver().</p>\n\n<p><p>The intent will have the following extra values:\n<ul>\n  <li><em>state</em> - 0 for unplugged, 1 for plugged. </li>\n  <li><em>name</em> - Headset type, human readable string </li>\n  <li><em>microphone</em> - 1 if headset has a microphone, 0 otherwise </li>\n</ul>\n</p>\n<p>Defaults to: <code>&quot;android.intent.action.HEADSET_PLUG&quot;</code></p></div></div></div><div id='property-ACTION_MICROPHONE_MUTE_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ACTION_MICROPHONE_MUTE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ACTION_MICROPHONE_MUTE_CHANGED' class='name expandable'>ACTION_MICROPHONE_MUTE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: microphone muting state changed. ...</div><div class='long'><p>Broadcast Action: microphone muting state changed.</p>\n\n<p>You <em>cannot</em> receive this through components declared\nin manifests, only by explicitly registering for it with\nIntentFilter)\nContext.registerReceiver().</p>\n\n<p><p>The intent has no extra values, use <a href=\"#!/api/android.media.AudioManager-method-isMicrophoneMute\" rel=\"android.media.AudioManager-method-isMicrophoneMute\" class=\"docClass\">isMicrophoneMute</a> to check whether the\nmicrophone is muted.</p>\n<p>Defaults to: <code>&quot;android.media.action.MICROPHONE_MUTE_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_SCO_AUDIO_STATE_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ACTION_SCO_AUDIO_STATE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_CHANGED' class='name expandable'>ACTION_SCO_AUDIO_STATE_CHANGED</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sticky broadcast intent action indicating that the Bluetooth SCO audio\nconnection state has changed. ...</div><div class='long'><p>Sticky broadcast intent action indicating that the Bluetooth SCO audio\nconnection state has changed. The intent contains on extra <a href=\"#!/api/android.media.AudioManager-property-EXTRA_SCO_AUDIO_STATE\" rel=\"android.media.AudioManager-property-EXTRA_SCO_AUDIO_STATE\" class=\"docClass\">EXTRA_SCO_AUDIO_STATE</a>\nindicating the new state which is either <a href=\"#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_DISCONNECTED\" rel=\"android.media.AudioManager-property-SCO_AUDIO_STATE_DISCONNECTED\" class=\"docClass\">SCO_AUDIO_STATE_DISCONNECTED</a>\nor <a href=\"#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTED\" rel=\"android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTED\" class=\"docClass\">SCO_AUDIO_STATE_CONNECTED</a></p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-startBluetoothSco\" rel=\"android.media.AudioManager-method-startBluetoothSco\" class=\"docClass\">startBluetoothSco</a>()</p>\n<p>Defaults to: <code>&quot;android.media.SCO_AUDIO_STATE_CHANGED&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Use  <a href=\"#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" rel=\"android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" class=\"docClass\">ACTION_SCO_AUDIO_STATE_UPDATED</a> instead</p>\n\n        </div>\n</div></div></div><div id='property-ACTION_SCO_AUDIO_STATE_UPDATED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED' class='name expandable'>ACTION_SCO_AUDIO_STATE_UPDATED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Sticky broadcast intent action indicating that the Bluetooth SCO audio\nconnection state has been updated. ...</div><div class='long'><p>Sticky broadcast intent action indicating that the Bluetooth SCO audio\nconnection state has been updated.</p>\n\n<p><p>This intent has two extras:\n<ul>\n  <li> <a href=\"#!/api/android.media.AudioManager-property-EXTRA_SCO_AUDIO_STATE\" rel=\"android.media.AudioManager-property-EXTRA_SCO_AUDIO_STATE\" class=\"docClass\">EXTRA_SCO_AUDIO_STATE</a> - The new SCO audio state. </li>\n  <li> <a href=\"#!/api/android.media.AudioManager-property-EXTRA_SCO_AUDIO_PREVIOUS_STATE\" rel=\"android.media.AudioManager-property-EXTRA_SCO_AUDIO_PREVIOUS_STATE\" class=\"docClass\">EXTRA_SCO_AUDIO_PREVIOUS_STATE</a>- The previous SCO audio state. </li>\n</ul>\n<p> EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE can be any of:\n<ul>\n  <li> <a href=\"#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_DISCONNECTED\" rel=\"android.media.AudioManager-property-SCO_AUDIO_STATE_DISCONNECTED\" class=\"docClass\">SCO_AUDIO_STATE_DISCONNECTED</a>, </li>\n  <li> <a href=\"#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTING\" rel=\"android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTING\" class=\"docClass\">SCO_AUDIO_STATE_CONNECTING</a> or </li>\n  <li> <a href=\"#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTED\" rel=\"android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTED\" class=\"docClass\">SCO_AUDIO_STATE_CONNECTED</a>, </li>\n</ul>\n@see <a href=\"#!/api/android.media.AudioManager-method-startBluetoothSco\" rel=\"android.media.AudioManager-method-startBluetoothSco\" class=\"docClass\">startBluetoothSco</a>()</p>\n<p>Defaults to: <code>&quot;android.media.ACTION_SCO_AUDIO_STATE_UPDATED&quot;</code></p></div></div></div><div id='property-ACTION_SPEAKERPHONE_STATE_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ACTION_SPEAKERPHONE_STATE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ACTION_SPEAKERPHONE_STATE_CHANGED' class='name expandable'>ACTION_SPEAKERPHONE_STATE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast Action: speakerphone state changed. ...</div><div class='long'><p>Broadcast Action: speakerphone state changed.</p>\n\n<p>You <em>cannot</em> receive this through components declared\nin manifests, only by explicitly registering for it with\nIntentFilter)\nContext.registerReceiver().</p>\n\n<p><p>The intent has no extra values, use <a href=\"#!/api/android.media.AudioManager-method-isSpeakerphoneOn\" rel=\"android.media.AudioManager-method-isSpeakerphoneOn\" class=\"docClass\">isSpeakerphoneOn</a> to check whether the\nspeakerphone functionality is enabled or not.</p>\n<p>Defaults to: <code>&quot;android.media.action.SPEAKERPHONE_STATE_CHANGED&quot;</code></p></div></div></div><div id='property-ADJUST_LOWER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ADJUST_LOWER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ADJUST_LOWER' class='name expandable'>ADJUST_LOWER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Decrease the ringer volume. ...</div><div class='long'><p>Decrease the ringer volume.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-ADJUST_MUTE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ADJUST_MUTE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ADJUST_MUTE' class='name expandable'>ADJUST_MUTE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Mute the volume. ...</div><div class='long'><p>Mute the volume. Has no effect if the stream is already muted.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;-100&quot;</code></p></div></div></div><div id='property-ADJUST_RAISE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ADJUST_RAISE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ADJUST_RAISE' class='name expandable'>ADJUST_RAISE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Increase the ringer volume. ...</div><div class='long'><p>Increase the ringer volume.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-ADJUST_SAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ADJUST_SAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ADJUST_SAME' class='name expandable'>ADJUST_SAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Maintain the previous ringer volume. ...</div><div class='long'><p>Maintain the previous ringer volume. This may be useful when needing to\nshow the volume toast without actually modifying the volume.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-ADJUST_TOGGLE_MUTE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ADJUST_TOGGLE_MUTE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ADJUST_TOGGLE_MUTE' class='name expandable'>ADJUST_TOGGLE_MUTE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Toggle the mute state. ...</div><div class='long'><p>Toggle the mute state. If muted the stream will be unmuted. If not muted\nthe stream will be muted.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;101&quot;</code></p></div></div></div><div id='property-ADJUST_UNMUTE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ADJUST_UNMUTE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ADJUST_UNMUTE' class='name expandable'>ADJUST_UNMUTE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unmute the volume. ...</div><div class='long'><p>Unmute the volume. Has no effect if the stream is not muted.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;100&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_GAIN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_GAIN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN' class='name expandable'>AUDIOFOCUS_GAIN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration. ...</div><div class='long'><p>Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration.\n@see OnAudioFocusChangeListener#onAudioFocusChange(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a>(OnAudioFocusChangeListener, int, int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_GAIN_TRANSIENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT' class='name expandable'>AUDIOFOCUS_GAIN_TRANSIENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate a temporary gain or request of audio focus, anticipated to last a short\namount of time. ...</div><div class='long'><p>Used to indicate a temporary gain or request of audio focus, anticipated to last a short\namount of time. Examples of temporary changes are the playback of driving directions, or an\nevent notification.\n@see OnAudioFocusChangeListener#onAudioFocusChange(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a>(OnAudioFocusChangeListener, int, int)</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE' class='name expandable'>AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate a temporary request of audio focus, anticipated to last a short\namount of time, during which no othe...</div><div class='long'><p>Used to indicate a temporary request of audio focus, anticipated to last a short\namount of time, during which no other applications, or system components, should play\nanything. Examples of exclusive and transient audio focus requests are voice\nmemo recording and speech recognition, during which the system shouldn't play any\nnotifications, and media playback should have paused.\n@see <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a>(OnAudioFocusChangeListener, int, int)</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK' class='name expandable'>AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate a temporary request of audio focus, anticipated to last a short\namount of time, and where it is acce...</div><div class='long'><p>Used to indicate a temporary request of audio focus, anticipated to last a short\namount of time, and where it is acceptable for other audio applications to keep playing\nafter having lowered their output level (also referred to as \"ducking\").\nExamples of temporary changes are the playback of driving directions where playback of music\nin the background is acceptable.\n@see OnAudioFocusChangeListener#onAudioFocusChange(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a>(OnAudioFocusChangeListener, int, int)</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_LOSS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_LOSS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_LOSS' class='name expandable'>AUDIOFOCUS_LOSS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate a loss of audio focus of unknown duration. ...</div><div class='long'><p>Used to indicate a loss of audio focus of unknown duration.\n@see OnAudioFocusChangeListener#onAudioFocusChange(int)</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_LOSS_TRANSIENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_LOSS_TRANSIENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_LOSS_TRANSIENT' class='name expandable'>AUDIOFOCUS_LOSS_TRANSIENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate a transient loss of audio focus. ...</div><div class='long'><p>Used to indicate a transient loss of audio focus.\n@see OnAudioFocusChangeListener#onAudioFocusChange(int)</p>\n<p>Defaults to: <code>&quot;-2&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK' class='name expandable'>AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate a transient loss of audio focus where the loser of the audio focus can\nlower its output volume if it...</div><div class='long'><p>Used to indicate a transient loss of audio focus where the loser of the audio focus can\nlower its output volume if it wants to continue playing (also referred to as \"ducking\"), as\nthe new focus owner doesn't require others to be silent.\n@see OnAudioFocusChangeListener#onAudioFocusChange(int)</p>\n<p>Defaults to: <code>&quot;-3&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_NONE' class='name expandable'>AUDIOFOCUS_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to indicate no audio focus has been gained or lost, or requested. ...</div><div class='long'><p>Used to indicate no audio focus has been gained or lost, or requested.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_REQUEST_DELAYED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_REQUEST_DELAYED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_DELAYED' class='name expandable'>AUDIOFOCUS_REQUEST_DELAYED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A focus change request whose granting is delayed: the request was successful, but the\nrequester will only be granted ...</div><div class='long'><p>A focus change request whose granting is delayed: the request was successful, but the\nrequester will only be granted audio focus once the condition that prevented immediate\ngranting has ended.\nSee <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a>(AudioFocusRequest) and\nandroid.media.AudioFocusRequest.Builder.setAcceptsDelayedFocusGain(boolean)</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_REQUEST_FAILED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_REQUEST_FAILED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED' class='name expandable'>AUDIOFOCUS_REQUEST_FAILED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A failed focus change request. ...</div><div class='long'><p>A failed focus change request.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-AUDIOFOCUS_REQUEST_GRANTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED' class='name expandable'>AUDIOFOCUS_REQUEST_GRANTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A successful focus change request. ...</div><div class='long'><p>A successful focus change request.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-AUDIO_SESSION_ID_GENERATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-AUDIO_SESSION_ID_GENERATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-AUDIO_SESSION_ID_GENERATE' class='name expandable'>AUDIO_SESSION_ID_GENERATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A special audio session ID to indicate that the audio session ID isn't known and the\nframework should generate a new ...</div><div class='long'><p>A special audio session ID to indicate that the audio session ID isn't known and the\nframework should generate a new value. This can be used when building a new\n<a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a> instance with\nandroid.media.AudioFormat, int, int, int).</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ERROR' class='name expandable'>ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A default error code. ...</div><div class='long'><p>A default error code.</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-ERROR_DEAD_OBJECT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ERROR_DEAD_OBJECT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ERROR_DEAD_OBJECT' class='name expandable'>ERROR_DEAD_OBJECT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An error code indicating that the object reporting it is no longer valid and needs to\nbe recreated. ...</div><div class='long'><p>An error code indicating that the object reporting it is no longer valid and needs to\nbe recreated.</p>\n<p>Defaults to: <code>&quot;-6&quot;</code></p></div></div></div><div id='property-EXTRA_AUDIO_PLUG_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_AUDIO_PLUG_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_AUDIO_PLUG_STATE' class='name expandable'>EXTRA_AUDIO_PLUG_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra used in ACTION_HDMI_AUDIO_PLUG to communicate whether HDMI is plugged in\nor unplugged. ...</div><div class='long'><p>Extra used in <a href=\"#!/api/android.media.AudioManager-property-ACTION_HDMI_AUDIO_PLUG\" rel=\"android.media.AudioManager-property-ACTION_HDMI_AUDIO_PLUG\" class=\"docClass\">ACTION_HDMI_AUDIO_PLUG</a> to communicate whether HDMI is plugged in\nor unplugged.\nAn integer value of 1 indicates a plugged-in state, 0 is unplugged.</p>\n<p>Defaults to: <code>&quot;android.media.extra.AUDIO_PLUG_STATE&quot;</code></p></div></div></div><div id='property-EXTRA_ENCODINGS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_ENCODINGS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_ENCODINGS' class='name expandable'>EXTRA_ENCODINGS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra used in ACTION_HDMI_AUDIO_PLUG to define the audio encodings supported by\nthe connected HDMI device. ...</div><div class='long'><p>Extra used in <a href=\"#!/api/android.media.AudioManager-property-ACTION_HDMI_AUDIO_PLUG\" rel=\"android.media.AudioManager-property-ACTION_HDMI_AUDIO_PLUG\" class=\"docClass\">ACTION_HDMI_AUDIO_PLUG</a> to define the audio encodings supported by\nthe connected HDMI device.\nThe corresponding array of encoding values is only available when the device is plugged in\n(as expressed by <a href=\"#!/api/android.media.AudioManager-property-EXTRA_AUDIO_PLUG_STATE\" rel=\"android.media.AudioManager-property-EXTRA_AUDIO_PLUG_STATE\" class=\"docClass\">EXTRA_AUDIO_PLUG_STATE</a>). Encoding values are defined in\n<a href=\"#!/api/android.media.AudioFormat\" rel=\"android.media.AudioFormat\" class=\"docClass\">android.media.AudioFormat</a> (for instance see <a href=\"#!/api/android.media.AudioFormat-property-ENCODING_PCM_16BIT\" rel=\"android.media.AudioFormat-property-ENCODING_PCM_16BIT\" class=\"docClass\">android.media.AudioFormat.ENCODING_PCM_16BIT</a>). Use\nandroid.content.Intent.getIntArrayExtra(String) to retrieve the encoding values.</p>\n<p>Defaults to: <code>&quot;android.media.extra.ENCODINGS&quot;</code></p></div></div></div><div id='property-EXTRA_MAX_CHANNEL_COUNT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_MAX_CHANNEL_COUNT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_MAX_CHANNEL_COUNT' class='name expandable'>EXTRA_MAX_CHANNEL_COUNT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra used in ACTION_HDMI_AUDIO_PLUG to define the maximum number of channels\nsupported by the HDMI device. ...</div><div class='long'><p>Extra used in <a href=\"#!/api/android.media.AudioManager-property-ACTION_HDMI_AUDIO_PLUG\" rel=\"android.media.AudioManager-property-ACTION_HDMI_AUDIO_PLUG\" class=\"docClass\">ACTION_HDMI_AUDIO_PLUG</a> to define the maximum number of channels\nsupported by the HDMI device.\nThe corresponding integer value is only available when the device is plugged in (as expressed\nby <a href=\"#!/api/android.media.AudioManager-property-EXTRA_AUDIO_PLUG_STATE\" rel=\"android.media.AudioManager-property-EXTRA_AUDIO_PLUG_STATE\" class=\"docClass\">EXTRA_AUDIO_PLUG_STATE</a>).</p>\n<p>Defaults to: <code>&quot;android.media.extra.MAX_CHANNEL_COUNT&quot;</code></p></div></div></div><div id='property-EXTRA_RINGER_MODE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_RINGER_MODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_RINGER_MODE' class='name expandable'>EXTRA_RINGER_MODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The new ringer mode. ...</div><div class='long'><p>The new ringer mode.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" class=\"docClass\">RINGER_MODE_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_NORMAL\" rel=\"android.media.AudioManager-property-RINGER_MODE_NORMAL\" class=\"docClass\">RINGER_MODE_NORMAL</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_SILENT\" rel=\"android.media.AudioManager-property-RINGER_MODE_SILENT\" class=\"docClass\">RINGER_MODE_SILENT</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_VIBRATE\" rel=\"android.media.AudioManager-property-RINGER_MODE_VIBRATE\" class=\"docClass\">RINGER_MODE_VIBRATE</a></p>\n<p>Defaults to: <code>&quot;android.media.EXTRA_RINGER_MODE&quot;</code></p></div></div></div><div id='property-EXTRA_SCO_AUDIO_PREVIOUS_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_SCO_AUDIO_PREVIOUS_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_SCO_AUDIO_PREVIOUS_STATE' class='name expandable'>EXTRA_SCO_AUDIO_PREVIOUS_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra for intent ACTION_SCO_AUDIO_STATE_UPDATED containing the previous\nbluetooth SCO connection state. ...</div><div class='long'><p>Extra for intent <a href=\"#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" rel=\"android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" class=\"docClass\">ACTION_SCO_AUDIO_STATE_UPDATED</a> containing the previous\nbluetooth SCO connection state.</p>\n<p>Defaults to: <code>&quot;android.media.extra.SCO_AUDIO_PREVIOUS_STATE&quot;</code></p></div></div></div><div id='property-EXTRA_SCO_AUDIO_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_SCO_AUDIO_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_SCO_AUDIO_STATE' class='name expandable'>EXTRA_SCO_AUDIO_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra for intent ACTION_SCO_AUDIO_STATE_CHANGED or\nACTION_SCO_AUDIO_STATE_UPDATED containing the new bluetooth SCO co...</div><div class='long'><p>Extra for intent <a href=\"#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_CHANGED\" rel=\"android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_CHANGED\" class=\"docClass\">ACTION_SCO_AUDIO_STATE_CHANGED</a> or\n<a href=\"#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" rel=\"android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" class=\"docClass\">ACTION_SCO_AUDIO_STATE_UPDATED</a> containing the new bluetooth SCO connection state.</p>\n<p>Defaults to: <code>&quot;android.media.extra.SCO_AUDIO_STATE&quot;</code></p></div></div></div><div id='property-EXTRA_VIBRATE_SETTING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_VIBRATE_SETTING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_VIBRATE_SETTING' class='name expandable'>EXTRA_VIBRATE_SETTING</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The new vibrate setting for a particular type. ...</div><div class='long'><p>The new vibrate setting for a particular type.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_CHANGED_ACTION\" class=\"docClass\">VIBRATE_SETTING_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-EXTRA_VIBRATE_TYPE\" rel=\"android.media.AudioManager-property-EXTRA_VIBRATE_TYPE\" class=\"docClass\">EXTRA_VIBRATE_TYPE</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ON\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_ON\" class=\"docClass\">VIBRATE_SETTING_ON</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_OFF\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_OFF\" class=\"docClass\">VIBRATE_SETTING_OFF</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ONLY_SILENT\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_ONLY_SILENT\" class=\"docClass\">VIBRATE_SETTING_ONLY_SILENT</a></p>\n<p>Defaults to: <code>&quot;android.media.EXTRA_VIBRATE_SETTING&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode and listen to <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" class=\"docClass\">RINGER_MODE_CHANGED_ACTION</a> instead.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_VIBRATE_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-EXTRA_VIBRATE_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-EXTRA_VIBRATE_TYPE' class='name expandable'>EXTRA_VIBRATE_TYPE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The vibrate type whose setting has changed. ...</div><div class='long'><p>The vibrate type whose setting has changed.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_CHANGED_ACTION\" class=\"docClass\">VIBRATE_SETTING_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" class=\"docClass\">VIBRATE_TYPE_NOTIFICATION</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" class=\"docClass\">VIBRATE_TYPE_RINGER</a></p>\n<p>Defaults to: <code>&quot;android.media.EXTRA_VIBRATE_TYPE&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode and listen to <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" class=\"docClass\">RINGER_MODE_CHANGED_ACTION</a> instead.</p>\n\n        </div>\n</div></div></div><div id='property-FLAG_ALLOW_RINGER_MODES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FLAG_ALLOW_RINGER_MODES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FLAG_ALLOW_RINGER_MODES' class='name expandable'>FLAG_ALLOW_RINGER_MODES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to include ringer modes as possible options when changing volume. ...</div><div class='long'><p>Whether to include ringer modes as possible options when changing volume.\nFor example, if true and volume level is 0 and the volume is adjusted\nwith <a href=\"#!/api/android.media.AudioManager-property-ADJUST_LOWER\" rel=\"android.media.AudioManager-property-ADJUST_LOWER\" class=\"docClass\">ADJUST_LOWER</a>, then the ringer mode may switch the silent or\nvibrate mode.</p>\n\n<p><p>\nBy default this is on for the ring stream. If this flag is included,\nthis behavior will be present regardless of the stream type being\naffected by the ringer mode.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-FLAG_PLAY_SOUND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FLAG_PLAY_SOUND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FLAG_PLAY_SOUND' class='name expandable'>FLAG_PLAY_SOUND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to play a sound when changing the volume. ...</div><div class='long'><p>Whether to play a sound when changing the volume.</p>\n\n<p><p>\nIf this is given to int) or\nint, int), it may be ignored\nin some cases (for example, the decided stream type is not\n<a href=\"#!/api/android.media.AudioManager-property-STREAM_RING\" rel=\"android.media.AudioManager-property-STREAM_RING\" class=\"docClass\">STREAM_RING</a>, or the volume is being adjusted\ndownward).</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-setStreamVolume\" rel=\"android.media.AudioManager-method-setStreamVolume\" class=\"docClass\">setStreamVolume</a>(int, int, int)</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-FLAG_REMOVE_SOUND_AND_VIBRATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FLAG_REMOVE_SOUND_AND_VIBRATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FLAG_REMOVE_SOUND_AND_VIBRATE' class='name expandable'>FLAG_REMOVE_SOUND_AND_VIBRATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes any sounds/vibrate that may be in the queue, or are playing (related to\nchanging volume). ...</div><div class='long'><p>Removes any sounds/vibrate that may be in the queue, or are playing (related to\nchanging volume).</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-FLAG_SHOW_UI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FLAG_SHOW_UI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FLAG_SHOW_UI' class='name expandable'>FLAG_SHOW_UI</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Show a toast containing the current volume. ...</div><div class='long'><p>Show a toast containing the current volume.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-setStreamVolume\" rel=\"android.media.AudioManager-method-setStreamVolume\" class=\"docClass\">setStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-setRingerMode\" rel=\"android.media.AudioManager-method-setRingerMode\" class=\"docClass\">setRingerMode</a>(int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-FLAG_VIBRATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FLAG_VIBRATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FLAG_VIBRATE' class='name expandable'>FLAG_VIBRATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to vibrate if going into the vibrate ringer mode. ...</div><div class='long'><p>Whether to vibrate if going into the vibrate ringer mode.</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p></div></div></div><div id='property-FX_FOCUS_NAVIGATION_DOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_FOCUS_NAVIGATION_DOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_DOWN' class='name expandable'>FX_FOCUS_NAVIGATION_DOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Focus has moved down\n@see playSoundEffect(int) ...</div><div class='long'><p>Focus has moved down\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-FX_FOCUS_NAVIGATION_LEFT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_FOCUS_NAVIGATION_LEFT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_LEFT' class='name expandable'>FX_FOCUS_NAVIGATION_LEFT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Focus has moved left\n@see playSoundEffect(int) ...</div><div class='long'><p>Focus has moved left\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-FX_FOCUS_NAVIGATION_RIGHT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_FOCUS_NAVIGATION_RIGHT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_RIGHT' class='name expandable'>FX_FOCUS_NAVIGATION_RIGHT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Focus has moved right\n@see playSoundEffect(int) ...</div><div class='long'><p>Focus has moved right\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-FX_FOCUS_NAVIGATION_UP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_FOCUS_NAVIGATION_UP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_UP' class='name expandable'>FX_FOCUS_NAVIGATION_UP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Focus has moved up\n@see playSoundEffect(int) ...</div><div class='long'><p>Focus has moved up\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-FX_KEYPRESS_DELETE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_KEYPRESS_DELETE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_KEYPRESS_DELETE' class='name expandable'>FX_KEYPRESS_DELETE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>IME delete keypress sound\n@see playSoundEffect(int) ...</div><div class='long'><p>IME delete keypress sound\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;7&quot;</code></p></div></div></div><div id='property-FX_KEYPRESS_INVALID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_KEYPRESS_INVALID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_KEYPRESS_INVALID' class='name expandable'>FX_KEYPRESS_INVALID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Invalid keypress sound\n@see playSoundEffect(int) ...</div><div class='long'><p>Invalid keypress sound\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;9&quot;</code></p></div></div></div><div id='property-FX_KEYPRESS_RETURN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_KEYPRESS_RETURN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_KEYPRESS_RETURN' class='name expandable'>FX_KEYPRESS_RETURN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>IME return_keypress sound\n@see playSoundEffect(int) ...</div><div class='long'><p>IME return_keypress sound\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-FX_KEYPRESS_SPACEBAR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_KEYPRESS_SPACEBAR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_KEYPRESS_SPACEBAR' class='name expandable'>FX_KEYPRESS_SPACEBAR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>IME spacebar keypress sound\n@see playSoundEffect(int) ...</div><div class='long'><p>IME spacebar keypress sound\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-FX_KEYPRESS_STANDARD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_KEYPRESS_STANDARD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_KEYPRESS_STANDARD' class='name expandable'>FX_KEYPRESS_STANDARD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>IME standard keypress sound\n@see playSoundEffect(int) ...</div><div class='long'><p>IME standard keypress sound\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-FX_KEY_CLICK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-FX_KEY_CLICK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-FX_KEY_CLICK' class='name expandable'>FX_KEY_CLICK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Keyboard and direction pad click sound\n@see playSoundEffect(int) ...</div><div class='long'><p>Keyboard and direction pad click sound\n@see <a href=\"#!/api/android.media.AudioManager-method-playSoundEffect\" rel=\"android.media.AudioManager-method-playSoundEffect\" class=\"docClass\">playSoundEffect</a>(int)</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-GET_DEVICES_ALL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-GET_DEVICES_ALL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-GET_DEVICES_ALL' class='name expandable'>GET_DEVICES_ALL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies to the getDevices(int) method to include both\nsource and sink devices. ...</div><div class='long'><p>Specifies to the getDevices(int) method to include both\nsource and sink devices.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-GET_DEVICES_INPUTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-GET_DEVICES_INPUTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-GET_DEVICES_INPUTS' class='name expandable'>GET_DEVICES_INPUTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies to the getDevices(int) method to include\nsource (i.e. ...</div><div class='long'><p>Specifies to the getDevices(int) method to include\nsource (i.e. input) audio devices.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-GET_DEVICES_OUTPUTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-GET_DEVICES_OUTPUTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-GET_DEVICES_OUTPUTS' class='name expandable'>GET_DEVICES_OUTPUTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies to the getDevices(int) method to include\nsink (i.e. ...</div><div class='long'><p>Specifies to the getDevices(int) method to include\nsink (i.e. output) audio devices.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-MODE_CURRENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-MODE_CURRENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-MODE_CURRENT' class='name expandable'>MODE_CURRENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Current audio mode. ...</div><div class='long'><p>Current audio mode. Used to apply audio routing to current mode.</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-MODE_INVALID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-MODE_INVALID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-MODE_INVALID' class='name expandable'>MODE_INVALID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Invalid audio mode. ...</div><div class='long'><p>Invalid audio mode.</p>\n<p>Defaults to: <code>&quot;-2&quot;</code></p></div></div></div><div id='property-MODE_IN_CALL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-MODE_IN_CALL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-MODE_IN_CALL' class='name expandable'>MODE_IN_CALL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>In call audio mode. ...</div><div class='long'><p>In call audio mode. A telephony call is established.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-MODE_IN_COMMUNICATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-MODE_IN_COMMUNICATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-MODE_IN_COMMUNICATION' class='name expandable'>MODE_IN_COMMUNICATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>In communication audio mode. ...</div><div class='long'><p>In communication audio mode. An audio/video chat or VoIP call is established.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-MODE_NORMAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-MODE_NORMAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-MODE_NORMAL' class='name expandable'>MODE_NORMAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Normal audio mode: not ringing and no call established. ...</div><div class='long'><p>Normal audio mode: not ringing and no call established.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-MODE_RINGTONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-MODE_RINGTONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-MODE_RINGTONE' class='name expandable'>MODE_RINGTONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Ringing audio mode. ...</div><div class='long'><p>Ringing audio mode. An incoming is being signaled.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-NUM_STREAMS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-NUM_STREAMS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-NUM_STREAMS' class='name expandable'>NUM_STREAMS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;5&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Do not iterate on volume stream type values.</p>\n\n        </div>\n</div></div></div><div id='property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER' class='name expandable'>PROPERTY_OUTPUT_FRAMES_PER_BUFFER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as a key for getProperty to request the native or optimal output buffer size\nfor this device's low latency outpu...</div><div class='long'><p>Used as a key for <a href=\"#!/api/android.media.AudioManager-method-getProperty\" rel=\"android.media.AudioManager-method-getProperty\" class=\"docClass\">getProperty</a> to request the native or optimal output buffer size\nfor this device's low latency output stream, in decimal PCM frames.  Latency-sensitive apps\nshould use this value as a minimum, and offer the user the option to override it.\nThe low latency output stream is typically either the device's primary output stream,\nor another output stream with smaller buffers.</p>\n<p>Defaults to: <code>&quot;android.media.property.OUTPUT_FRAMES_PER_BUFFER&quot;</code></p></div></div></div><div id='property-PROPERTY_OUTPUT_SAMPLE_RATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-PROPERTY_OUTPUT_SAMPLE_RATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-PROPERTY_OUTPUT_SAMPLE_RATE' class='name expandable'>PROPERTY_OUTPUT_SAMPLE_RATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as a key for getProperty to request the native or optimal output sample rate\nfor this device's low latency outpu...</div><div class='long'><p>Used as a key for <a href=\"#!/api/android.media.AudioManager-method-getProperty\" rel=\"android.media.AudioManager-method-getProperty\" class=\"docClass\">getProperty</a> to request the native or optimal output sample rate\nfor this device's low latency output stream, in decimal Hz.  Latency-sensitive apps\nshould use this value as a default, and offer the user the option to override it.\nThe low latency output stream is typically either the device's primary output stream,\nor another output stream with smaller buffers.</p>\n<p>Defaults to: <code>&quot;android.media.property.OUTPUT_SAMPLE_RATE&quot;</code></p></div></div></div><div id='property-PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED' class='name expandable'>PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as a key for getProperty to determine if the unprocessed audio source is\navailable and supported with the expect...</div><div class='long'><p>Used as a key for <a href=\"#!/api/android.media.AudioManager-method-getProperty\" rel=\"android.media.AudioManager-method-getProperty\" class=\"docClass\">getProperty</a> to determine if the unprocessed audio source is\navailable and supported with the expected frequency range and level response.</p>\n<p>Defaults to: <code>&quot;android.media.property.SUPPORT_AUDIO_SOURCE_UNPROCESSED&quot;</code></p></div></div></div><div id='property-PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND' class='name expandable'>PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as a key for getProperty to determine if the default microphone audio source\nsupports near-ultrasound frequencie...</div><div class='long'><p>Used as a key for <a href=\"#!/api/android.media.AudioManager-method-getProperty\" rel=\"android.media.AudioManager-method-getProperty\" class=\"docClass\">getProperty</a> to determine if the default microphone audio source\nsupports near-ultrasound frequencies (range of 18 - 21 kHz).</p>\n<p>Defaults to: <code>&quot;android.media.property.SUPPORT_MIC_NEAR_ULTRASOUND&quot;</code></p></div></div></div><div id='property-PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND' class='name expandable'>PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as a key for getProperty to determine if the default speaker audio path\nsupports near-ultrasound frequencies (ra...</div><div class='long'><p>Used as a key for <a href=\"#!/api/android.media.AudioManager-method-getProperty\" rel=\"android.media.AudioManager-method-getProperty\" class=\"docClass\">getProperty</a> to determine if the default speaker audio path\nsupports near-ultrasound frequencies (range of 18 - 21 kHz).</p>\n<p>Defaults to: <code>&quot;android.media.property.SUPPORT_SPEAKER_NEAR_ULTRASOUND&quot;</code></p></div></div></div><div id='property-RINGER_MODE_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-RINGER_MODE_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION' class='name expandable'>RINGER_MODE_CHANGED_ACTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Sticky broadcast intent action indicating that the ringer mode has\nchanged. ...</div><div class='long'><p>Sticky broadcast intent action indicating that the ringer mode has\nchanged. Includes the new ringer mode.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-property-EXTRA_RINGER_MODE\" rel=\"android.media.AudioManager-property-EXTRA_RINGER_MODE\" class=\"docClass\">EXTRA_RINGER_MODE</a></p>\n<p>Defaults to: <code>&quot;android.media.RINGER_MODE_CHANGED&quot;</code></p></div></div></div><div id='property-RINGER_MODE_NORMAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-RINGER_MODE_NORMAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-RINGER_MODE_NORMAL' class='name expandable'>RINGER_MODE_NORMAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Ringer mode that may be audible and may vibrate. ...</div><div class='long'><p>Ringer mode that may be audible and may vibrate. It will be audible if\nthe volume before changing out of this mode was audible. It will vibrate\nif the vibrate setting is on.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setRingerMode\" rel=\"android.media.AudioManager-method-setRingerMode\" class=\"docClass\">setRingerMode</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>()</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-RINGER_MODE_SILENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-RINGER_MODE_SILENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-RINGER_MODE_SILENT' class='name expandable'>RINGER_MODE_SILENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Ringer mode that will be silent and will not vibrate. ...</div><div class='long'><p>Ringer mode that will be silent and will not vibrate. (This overrides the\nvibrate setting.)</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setRingerMode\" rel=\"android.media.AudioManager-method-setRingerMode\" class=\"docClass\">setRingerMode</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>()</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-RINGER_MODE_VIBRATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-RINGER_MODE_VIBRATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-RINGER_MODE_VIBRATE' class='name expandable'>RINGER_MODE_VIBRATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Ringer mode that will be silent and will vibrate. ...</div><div class='long'><p>Ringer mode that will be silent and will vibrate. (This will cause the\nphone ringer to always vibrate, but the notification vibrate to only\nvibrate if set.)</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setRingerMode\" rel=\"android.media.AudioManager-method-setRingerMode\" class=\"docClass\">setRingerMode</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>()</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-ROUTE_ALL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ROUTE_ALL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ROUTE_ALL' class='name expandable'>ROUTE_ALL</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Used for mask parameter of setRouting(int,int,int). ...</div><div class='long'><p>Used for mask parameter of setRouting(int,int,int).</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n\n        </div>\n</div></div></div><div id='property-ROUTE_BLUETOOTH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ROUTE_BLUETOOTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ROUTE_BLUETOOTH' class='name expandable'>ROUTE_BLUETOOTH</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;4&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>use <a href=\"#!/api/android.media.AudioManager-property-ROUTE_BLUETOOTH_SCO\" rel=\"android.media.AudioManager-property-ROUTE_BLUETOOTH_SCO\" class=\"docClass\">ROUTE_BLUETOOTH_SCO</a></p>\n\n        </div>\n</div></div></div><div id='property-ROUTE_BLUETOOTH_A2DP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ROUTE_BLUETOOTH_A2DP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ROUTE_BLUETOOTH_A2DP' class='name expandable'>ROUTE_BLUETOOTH_A2DP</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Routing audio output to bluetooth A2DP ...</div><div class='long'><p>Routing audio output to bluetooth A2DP</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n\n        </div>\n</div></div></div><div id='property-ROUTE_BLUETOOTH_SCO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ROUTE_BLUETOOTH_SCO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ROUTE_BLUETOOTH_SCO' class='name expandable'>ROUTE_BLUETOOTH_SCO</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Routing audio output to bluetooth SCO ...</div><div class='long'><p>Routing audio output to bluetooth SCO</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n\n        </div>\n</div></div></div><div id='property-ROUTE_EARPIECE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ROUTE_EARPIECE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ROUTE_EARPIECE' class='name expandable'>ROUTE_EARPIECE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Routing audio output to earpiece ...</div><div class='long'><p>Routing audio output to earpiece</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n\n        </div>\n</div></div></div><div id='property-ROUTE_HEADSET' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ROUTE_HEADSET' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ROUTE_HEADSET' class='name expandable'>ROUTE_HEADSET</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Routing audio output to headset ...</div><div class='long'><p>Routing audio output to headset</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n\n        </div>\n</div></div></div><div id='property-ROUTE_SPEAKER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-ROUTE_SPEAKER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-ROUTE_SPEAKER' class='name expandable'>ROUTE_SPEAKER</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Routing audio output to speaker ...</div><div class='long'><p>Routing audio output to speaker</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Do not set audio routing directly, use setSpeakerphoneOn(),\nsetBluetoothScoOn() methods instead.</p>\n\n        </div>\n</div></div></div><div id='property-SCO_AUDIO_STATE_CONNECTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-SCO_AUDIO_STATE_CONNECTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTED' class='name expandable'>SCO_AUDIO_STATE_CONNECTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE\nindicating that the SCO audio channel is esta...</div><div class='long'><p>Value for extra <a href=\"#!/api/android.media.AudioManager-property-EXTRA_SCO_AUDIO_STATE\" rel=\"android.media.AudioManager-property-EXTRA_SCO_AUDIO_STATE\" class=\"docClass\">EXTRA_SCO_AUDIO_STATE</a> or <a href=\"#!/api/android.media.AudioManager-property-EXTRA_SCO_AUDIO_PREVIOUS_STATE\" rel=\"android.media.AudioManager-property-EXTRA_SCO_AUDIO_PREVIOUS_STATE\" class=\"docClass\">EXTRA_SCO_AUDIO_PREVIOUS_STATE</a>\nindicating that the SCO audio channel is established</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SCO_AUDIO_STATE_CONNECTING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-SCO_AUDIO_STATE_CONNECTING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTING' class='name expandable'>SCO_AUDIO_STATE_CONNECTING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE\nindicating that the SCO audio channel is bein...</div><div class='long'><p>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE\nindicating that the SCO audio channel is being established</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SCO_AUDIO_STATE_DISCONNECTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-SCO_AUDIO_STATE_DISCONNECTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_DISCONNECTED' class='name expandable'>SCO_AUDIO_STATE_DISCONNECTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE\nindicating that the SCO audio channel is not ...</div><div class='long'><p>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE\nindicating that the SCO audio channel is not established</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-SCO_AUDIO_STATE_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-SCO_AUDIO_STATE_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_ERROR' class='name expandable'>SCO_AUDIO_STATE_ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Value for extra EXTRA_SCO_AUDIO_STATE indicating that\nthere was an error trying to obtain the state ...</div><div class='long'><p>Value for extra EXTRA_SCO_AUDIO_STATE indicating that\nthere was an error trying to obtain the state</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-STREAM_ACCESSIBILITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_ACCESSIBILITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_ACCESSIBILITY' class='name expandable'>STREAM_ACCESSIBILITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for accessibility prompts ...</div><div class='long'><p>Used to identify the volume of audio streams for accessibility prompts</p>\n<p>Defaults to: <code>&quot;10&quot;</code></p></div></div></div><div id='property-STREAM_ALARM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_ALARM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_ALARM' class='name expandable'>STREAM_ALARM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for alarms ...</div><div class='long'><p>Used to identify the volume of audio streams for alarms</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-STREAM_DTMF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_DTMF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_DTMF' class='name expandable'>STREAM_DTMF</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for DTMF Tones ...</div><div class='long'><p>Used to identify the volume of audio streams for DTMF Tones</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-STREAM_MUSIC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_MUSIC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_MUSIC' class='name expandable'>STREAM_MUSIC</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for music playback ...</div><div class='long'><p>Used to identify the volume of audio streams for music playback</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-STREAM_NOTIFICATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_NOTIFICATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_NOTIFICATION' class='name expandable'>STREAM_NOTIFICATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for notifications ...</div><div class='long'><p>Used to identify the volume of audio streams for notifications</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-STREAM_RING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_RING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_RING' class='name expandable'>STREAM_RING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for the phone ring ...</div><div class='long'><p>Used to identify the volume of audio streams for the phone ring</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-STREAM_SYSTEM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_SYSTEM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_SYSTEM' class='name expandable'>STREAM_SYSTEM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for system sounds ...</div><div class='long'><p>Used to identify the volume of audio streams for system sounds</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-STREAM_VOICE_CALL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-STREAM_VOICE_CALL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-STREAM_VOICE_CALL' class='name expandable'>STREAM_VOICE_CALL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used to identify the volume of audio streams for phone calls ...</div><div class='long'><p>Used to identify the volume of audio streams for phone calls</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-USE_DEFAULT_STREAM_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-USE_DEFAULT_STREAM_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-USE_DEFAULT_STREAM_TYPE' class='name expandable'>USE_DEFAULT_STREAM_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Suggests using the default stream type. ...</div><div class='long'><p>Suggests using the default stream type. This may not be used in all\nplaces a stream type is needed.</p>\n<p>Defaults to: <code>&quot;-2147483648&quot;</code></p></div></div></div><div id='property-VIBRATE_SETTING_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-VIBRATE_SETTING_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-VIBRATE_SETTING_CHANGED_ACTION' class='name expandable'>VIBRATE_SETTING_CHANGED_ACTION</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Broadcast intent action indicating that the vibrate setting has\nchanged. ...</div><div class='long'><p>Broadcast intent action indicating that the vibrate setting has\nchanged. Includes the vibrate type and its new setting.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-property-EXTRA_VIBRATE_TYPE\" rel=\"android.media.AudioManager-property-EXTRA_VIBRATE_TYPE\" class=\"docClass\">EXTRA_VIBRATE_TYPE</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-EXTRA_VIBRATE_SETTING\" rel=\"android.media.AudioManager-property-EXTRA_VIBRATE_SETTING\" class=\"docClass\">EXTRA_VIBRATE_SETTING</a></p>\n<p>Defaults to: <code>&quot;android.media.VIBRATE_SETTING_CHANGED&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode and listen to <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" rel=\"android.media.AudioManager-property-RINGER_MODE_CHANGED_ACTION\" class=\"docClass\">RINGER_MODE_CHANGED_ACTION</a> instead.</p>\n\n        </div>\n</div></div></div><div id='property-VIBRATE_SETTING_OFF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-VIBRATE_SETTING_OFF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-VIBRATE_SETTING_OFF' class='name expandable'>VIBRATE_SETTING_OFF</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Vibrate setting that suggests to never vibrate. ...</div><div class='long'><p>Vibrate setting that suggests to never vibrate.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setVibrateSetting\" rel=\"android.media.AudioManager-method-setVibrateSetting\" class=\"docClass\">setVibrateSetting</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getVibrateSetting\" rel=\"android.media.AudioManager-method-getVibrateSetting\" class=\"docClass\">getVibrateSetting</a>(int)</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n\n        </div>\n</div></div></div><div id='property-VIBRATE_SETTING_ON' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-VIBRATE_SETTING_ON' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ON' class='name expandable'>VIBRATE_SETTING_ON</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Vibrate setting that suggests to vibrate when possible. ...</div><div class='long'><p>Vibrate setting that suggests to vibrate when possible.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setVibrateSetting\" rel=\"android.media.AudioManager-method-setVibrateSetting\" class=\"docClass\">setVibrateSetting</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getVibrateSetting\" rel=\"android.media.AudioManager-method-getVibrateSetting\" class=\"docClass\">getVibrateSetting</a>(int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n\n        </div>\n</div></div></div><div id='property-VIBRATE_SETTING_ONLY_SILENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-VIBRATE_SETTING_ONLY_SILENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ONLY_SILENT' class='name expandable'>VIBRATE_SETTING_ONLY_SILENT</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Vibrate setting that suggests to only vibrate when in the vibrate ringer\nmode. ...</div><div class='long'><p>Vibrate setting that suggests to only vibrate when in the vibrate ringer\nmode.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setVibrateSetting\" rel=\"android.media.AudioManager-method-setVibrateSetting\" class=\"docClass\">setVibrateSetting</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getVibrateSetting\" rel=\"android.media.AudioManager-method-getVibrateSetting\" class=\"docClass\">getVibrateSetting</a>(int)</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n\n        </div>\n</div></div></div><div id='property-VIBRATE_TYPE_NOTIFICATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-VIBRATE_TYPE_NOTIFICATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION' class='name expandable'>VIBRATE_TYPE_NOTIFICATION</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Vibrate type that corresponds to notifications. ...</div><div class='long'><p>Vibrate type that corresponds to notifications.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setVibrateSetting\" rel=\"android.media.AudioManager-method-setVibrateSetting\" class=\"docClass\">setVibrateSetting</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getVibrateSetting\" rel=\"android.media.AudioManager-method-getVibrateSetting\" class=\"docClass\">getVibrateSetting</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-shouldVibrate\" rel=\"android.media.AudioManager-method-shouldVibrate\" class=\"docClass\">shouldVibrate</a>(int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n\n        </div>\n</div></div></div><div id='property-VIBRATE_TYPE_RINGER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-property-VIBRATE_TYPE_RINGER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-property-VIBRATE_TYPE_RINGER' class='name expandable'>VIBRATE_TYPE_RINGER</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Vibrate type that corresponds to the ringer. ...</div><div class='long'><p>Vibrate type that corresponds to the ringer.</p>\n\n<p>@see <a href=\"#!/api/android.media.AudioManager-method-setVibrateSetting\" rel=\"android.media.AudioManager-method-setVibrateSetting\" class=\"docClass\">setVibrateSetting</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getVibrateSetting\" rel=\"android.media.AudioManager-method-getVibrateSetting\" class=\"docClass\">getVibrateSetting</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-shouldVibrate\" rel=\"android.media.AudioManager-method-shouldVibrate\" class=\"docClass\">shouldVibrate</a>(int)</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\ncurrent ringer mode that can be queried via <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>().</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abandonAudioFocus' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-abandonAudioFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-abandonAudioFocus' class='name expandable'>abandonAudioFocus</a>( <span class='pre'>l, aa, aa</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>use abandonAudioFocusRequest(AudioFocusRequest)</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l</span> : Object {AudioManager.OnAudioFocusChangeListener}<div class='sub-desc'><p>the listener with which focus was requested.</p>\n</div></li><li><span class='pre'>aa</span> : Object {AudioAttributes}<div class='sub-desc'><p>the AudioAttributes with which audio focus was requested</p>\n</div></li><li><span class='pre'>aa</span> : Object<div class='sub-desc'><p>the AudioAttributes with which audio focus was requested</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" class=\"docClass\">AUDIOFOCUS_REQUEST_FAILED</a> or <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" class=\"docClass\">AUDIOFOCUS_REQUEST_GRANTED</a></p>\n</div></li></ul></div></div></div><div id='method-abandonAudioFocusRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-abandonAudioFocusRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-abandonAudioFocusRequest' class='name expandable'>abandonAudioFocusRequest</a>( <span class='pre'>focusRequest</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Abandon audio focus. ...</div><div class='long'><p>Abandon audio focus. Causes the previous focus owner, if any, to receive focus.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>focusRequest</span> : Object {AudioFocusRequest}<div class='sub-desc'><p>the AudioFocusRequest that was used when requesting focus\n      with requestAudioFocus(AudioFocusRequest).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" class=\"docClass\">AUDIOFOCUS_REQUEST_FAILED</a> or <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" class=\"docClass\">AUDIOFOCUS_REQUEST_GRANTED</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if passed a null argument</p>\n</div></li></ul></div></div></div><div id='method-adjustStreamVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-adjustStreamVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-adjustStreamVolume' class='name expandable'>adjustStreamVolume</a>( <span class='pre'>streamType, direction, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts the volume of a particular stream by one step in a direction. ...</div><div class='long'><p>Adjusts the volume of a particular stream by one step in a direction.\n <p>\n This method should only be used by applications that replace the platform-wide\n management of audio settings or the main telephony application.\n <p>This method has no effect if the device implements a fixed volume policy\n as indicated by <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>().\n <p>From N onward, ringer mode adjustments that would toggle Do Not Disturb are not allowed\n unless the app has been granted Do Not Disturb Access.\n See NotificationManager.isNotificationPolicyAccessGranted().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream type to adjust. One of <a href=\"#!/api/android.media.AudioManager-property-STREAM_VOICE_CALL\" rel=\"android.media.AudioManager-property-STREAM_VOICE_CALL\" class=\"docClass\">STREAM_VOICE_CALL</a>,\n <a href=\"#!/api/android.media.AudioManager-property-STREAM_SYSTEM\" rel=\"android.media.AudioManager-property-STREAM_SYSTEM\" class=\"docClass\">STREAM_SYSTEM</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_RING\" rel=\"android.media.AudioManager-property-STREAM_RING\" class=\"docClass\">STREAM_RING</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_MUSIC\" rel=\"android.media.AudioManager-property-STREAM_MUSIC\" class=\"docClass\">STREAM_MUSIC</a>,\n <a href=\"#!/api/android.media.AudioManager-property-STREAM_ALARM\" rel=\"android.media.AudioManager-property-STREAM_ALARM\" class=\"docClass\">STREAM_ALARM</a> or <a href=\"#!/api/android.media.AudioManager-property-STREAM_ACCESSIBILITY\" rel=\"android.media.AudioManager-property-STREAM_ACCESSIBILITY\" class=\"docClass\">STREAM_ACCESSIBILITY</a>.</p>\n</div></li><li><span class='pre'>direction</span> : Number<div class='sub-desc'><p>The direction to adjust the volume. One of\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_LOWER\" rel=\"android.media.AudioManager-property-ADJUST_LOWER\" class=\"docClass\">ADJUST_LOWER</a>, <a href=\"#!/api/android.media.AudioManager-property-ADJUST_RAISE\" rel=\"android.media.AudioManager-property-ADJUST_RAISE\" class=\"docClass\">ADJUST_RAISE</a>, or\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_SAME\" rel=\"android.media.AudioManager-property-ADJUST_SAME\" class=\"docClass\">ADJUST_SAME</a>.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>One or more flags.\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-setStreamVolume\" rel=\"android.media.AudioManager-method-setStreamVolume\" class=\"docClass\">setStreamVolume</a>(int, int, int)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if the adjustment triggers a Do Not Disturb change\n   and the caller is not granted notification policy access.</p>\n</div></li></ul></div></div></div><div id='method-adjustSuggestedStreamVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-adjustSuggestedStreamVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-adjustSuggestedStreamVolume' class='name expandable'>adjustSuggestedStreamVolume</a>( <span class='pre'>direction, suggestedStreamType, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts the volume of the most relevant stream, or the given fallback\n stream. ...</div><div class='long'><p>Adjusts the volume of the most relevant stream, or the given fallback\n stream.\n <p>\n This method should only be used by applications that replace the\n platform-wide management of audio settings or the main telephony\n application.\n <p>\n This method has no effect if the device implements a fixed volume policy\n as indicated by <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>direction</span> : Number<div class='sub-desc'><p>The direction to adjust the volume. One of\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_LOWER\" rel=\"android.media.AudioManager-property-ADJUST_LOWER\" class=\"docClass\">ADJUST_LOWER</a>, <a href=\"#!/api/android.media.AudioManager-property-ADJUST_RAISE\" rel=\"android.media.AudioManager-property-ADJUST_RAISE\" class=\"docClass\">ADJUST_RAISE</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_SAME\" rel=\"android.media.AudioManager-property-ADJUST_SAME\" class=\"docClass\">ADJUST_SAME</a>, <a href=\"#!/api/android.media.AudioManager-property-ADJUST_MUTE\" rel=\"android.media.AudioManager-property-ADJUST_MUTE\" class=\"docClass\">ADJUST_MUTE</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_UNMUTE\" rel=\"android.media.AudioManager-property-ADJUST_UNMUTE\" class=\"docClass\">ADJUST_UNMUTE</a>, or <a href=\"#!/api/android.media.AudioManager-property-ADJUST_TOGGLE_MUTE\" rel=\"android.media.AudioManager-property-ADJUST_TOGGLE_MUTE\" class=\"docClass\">ADJUST_TOGGLE_MUTE</a>.</p>\n</div></li><li><span class='pre'>suggestedStreamType</span> : Number<div class='sub-desc'><p>The stream type that will be used if there\n            isn't a relevant stream. <a href=\"#!/api/android.media.AudioManager-property-USE_DEFAULT_STREAM_TYPE\" rel=\"android.media.AudioManager-property-USE_DEFAULT_STREAM_TYPE\" class=\"docClass\">USE_DEFAULT_STREAM_TYPE</a> is\n            valid here.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>One or more flags.\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustVolume\" rel=\"android.media.AudioManager-method-adjustVolume\" class=\"docClass\">adjustVolume</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-setStreamVolume\" rel=\"android.media.AudioManager-method-setStreamVolume\" class=\"docClass\">setStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>()</p>\n</div></li></ul></div></div></div><div id='method-adjustVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-adjustVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-adjustVolume' class='name expandable'>adjustVolume</a>( <span class='pre'>direction, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts the volume of the most relevant stream. ...</div><div class='long'><p>Adjusts the volume of the most relevant stream. For example, if a call is\n active, it will have the highest priority regardless of if the in-call\n screen is showing. Another example, if music is playing in the background\n and a call is not active, the music stream will be adjusted.\n <p>\n This method should only be used by applications that replace the\n platform-wide management of audio settings or the main telephony\n application.\n <p>\n This method has no effect if the device implements a fixed volume policy\n as indicated by <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>direction</span> : Number<div class='sub-desc'><p>The direction to adjust the volume. One of\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_LOWER\" rel=\"android.media.AudioManager-property-ADJUST_LOWER\" class=\"docClass\">ADJUST_LOWER</a>, <a href=\"#!/api/android.media.AudioManager-property-ADJUST_RAISE\" rel=\"android.media.AudioManager-property-ADJUST_RAISE\" class=\"docClass\">ADJUST_RAISE</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_SAME\" rel=\"android.media.AudioManager-property-ADJUST_SAME\" class=\"docClass\">ADJUST_SAME</a>, <a href=\"#!/api/android.media.AudioManager-property-ADJUST_MUTE\" rel=\"android.media.AudioManager-property-ADJUST_MUTE\" class=\"docClass\">ADJUST_MUTE</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-ADJUST_UNMUTE\" rel=\"android.media.AudioManager-property-ADJUST_UNMUTE\" class=\"docClass\">ADJUST_UNMUTE</a>, or <a href=\"#!/api/android.media.AudioManager-property-ADJUST_TOGGLE_MUTE\" rel=\"android.media.AudioManager-property-ADJUST_TOGGLE_MUTE\" class=\"docClass\">ADJUST_TOGGLE_MUTE</a>.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>One or more flags.\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustSuggestedStreamVolume\" rel=\"android.media.AudioManager-method-adjustSuggestedStreamVolume\" class=\"docClass\">adjustSuggestedStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-setStreamVolume\" rel=\"android.media.AudioManager-method-setStreamVolume\" class=\"docClass\">setStreamVolume</a>(int, int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>()</p>\n</div></li></ul></div></div></div><div id='method-dispatchAudioFocusChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-dispatchAudioFocusChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-dispatchAudioFocusChange' class='name expandable'>dispatchAudioFocusChange</a>( <span class='pre'>afi, focusChange, ap, ap</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>afi</span> : Object {AudioFocusInfo}<div class='sub-desc'><p>the recipient of the focus change, that has previously requested audio focus, and\n     that was received by the {@code AudioPolicy} through\n     int).</p>\n</div></li><li><span class='pre'>focusChange</span> : Number<div class='sub-desc'><p>one of focus gain types (<a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_GAIN\" class=\"docClass\">AUDIOFOCUS_GAIN</a>,\n     <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT\" class=\"docClass\">AUDIOFOCUS_GAIN_TRANSIENT</a>, <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK\" class=\"docClass\">AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK</a> or\n     <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE\" class=\"docClass\">AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE</a>)\n     or one of the focus loss types (AudioManager.AUDIOFOCUS_LOSS,\n     AudioManager.AUDIOFOCUS_LOSS_TRANSIENT,\n     or AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK).\n     <br>For the focus gain, the change type should be the same as the app requested.</p>\n</div></li><li><span class='pre'>ap</span> : Object {AudioPolicy}<div class='sub-desc'><p>a valid registered AudioPolicy configured as a focus policy.</p>\n</div></li><li><span class='pre'>ap</span> : Object<div class='sub-desc'><p>a valid registered AudioPolicy configured as a focus policy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" class=\"docClass\">AUDIOFOCUS_REQUEST_GRANTED</a> if the dispatch was successfully sent, or\n     <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" class=\"docClass\">AUDIOFOCUS_REQUEST_FAILED</a> if the focus client didn't have a listener, or\n     if there was an error sending the request.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the AudioFocusInfo or AudioPolicy are null.</p>\n</div></li></ul></div></div></div><div id='method-dispatchMediaKeyEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-dispatchMediaKeyEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-dispatchMediaKeyEvent' class='name expandable'>dispatchMediaKeyEvent</a>( <span class='pre'>keyEvent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends a simulated key event for a media button. ...</div><div class='long'><p>Sends a simulated key event for a media button.\n To simulate a key press, you must first send a KeyEvent built with a\n KeyEvent.ACTION_DOWN action, then another event with the KeyEvent.ACTION_UP\n action.\n <p>The key event will be sent to the current media key event consumer which registered with\n registerMediaButtonEventReceiver(PendingIntent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyEvent</span> : Object {KeyEvent}<div class='sub-desc'><p>a KeyEvent instance whose key code is one of\n     KeyEvent.KEYCODE_MUTE,\n     KeyEvent.KEYCODE_HEADSETHOOK,\n     KeyEvent.KEYCODE_MEDIA_PLAY,\n     KeyEvent.KEYCODE_MEDIA_PAUSE,\n     KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE,\n     KeyEvent.KEYCODE_MEDIA_STOP,\n     KeyEvent.KEYCODE_MEDIA_NEXT,\n     KeyEvent.KEYCODE_MEDIA_PREVIOUS,\n     KeyEvent.KEYCODE_MEDIA_REWIND,\n     KeyEvent.KEYCODE_MEDIA_RECORD,\n     KeyEvent.KEYCODE_MEDIA_FAST_FORWARD,\n     KeyEvent.KEYCODE_MEDIA_CLOSE,\n     KeyEvent.KEYCODE_MEDIA_EJECT,\n     or KeyEvent.KEYCODE_MEDIA_AUDIO_TRACK.</p>\n</div></li></ul></div></div></div><div id='method-generateAudioSessionId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-generateAudioSessionId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-generateAudioSessionId' class='name expandable'>generateAudioSessionId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a new audio session identifier not associated with any player or effect. ...</div><div class='long'><p>Return a new audio session identifier not associated with any player or effect.\n An audio session identifier is a system wide unique identifier for a set of audio streams\n (one or more mixed together).\n <p>The primary use of the audio session ID is to associate audio effects to audio players,\n such as <a href=\"#!/api/android.media.MediaPlayer\" rel=\"android.media.MediaPlayer\" class=\"docClass\">android.media.MediaPlayer</a> or <a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a>: all audio effects sharing the same audio\n session ID will be applied to the mixed audio content of the players that share the same\n audio session.\n <p>This method can for instance be used when creating one of the\n android.media.audiofx.AudioEffect objects to define the audio session of the effect,\n or to specify a session for a speech synthesis utterance\n in android.speech.tts.TextToSpeech.Engine.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a new unclaimed and unused audio session identifier, or <a href=\"#!/api/android.media.AudioManager-property-ERROR\" rel=\"android.media.AudioManager-property-ERROR\" class=\"docClass\">ERROR</a> when the\n   system failed to generate a new session, a condition in which audio playback or recording\n   will subsequently fail as well.</p>\n</div></li></ul></div></div></div><div id='method-getActivePlaybackConfigurations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getActivePlaybackConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getActivePlaybackConfigurations' class='name expandable'>getActivePlaybackConfigurations</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current active audio playback configurations of the device ...</div><div class='long'><p>Returns the current active audio playback configurations of the device</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a non-null list of playback configurations. An empty list indicates there is no\n     playback active when queried.\n@see AudioPlaybackConfiguration</p>\n</div></li></ul></div></div></div><div id='method-getActiveRecordingConfigurations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getActiveRecordingConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getActiveRecordingConfigurations' class='name expandable'>getActiveRecordingConfigurations</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current active audio recording configurations of the device. ...</div><div class='long'><p>Returns the current active audio recording configurations of the device.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a non-null list of recording configurations. An empty list indicates there is\n     no recording active when queried.\n@see AudioRecordingConfiguration</p>\n</div></li></ul></div></div></div><div id='method-getAllowedCapturePolicy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getAllowedCapturePolicy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getAllowedCapturePolicy' class='name expandable'>getAllowedCapturePolicy</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the capture policy. ...</div><div class='long'><p>Return the capture policy.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the capture policy set by setAllowedCapturePolicy(int) or\n         the default if it was not called.</p>\n</div></li></ul></div></div></div><div id='method-getDevices' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getDevices' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getDevices' class='name expandable'>getDevices</a>( <span class='pre'>flags</span> ) : Object {android.media.AudioDeviceInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array of android.media.AudioDeviceInfo objects corresponding to the audio devices\n currently connected to ...</div><div class='long'><p>Returns an array of <a href=\"#!/api/android.media.AudioDeviceInfo\" rel=\"android.media.AudioDeviceInfo\" class=\"docClass\">android.media.AudioDeviceInfo</a> objects corresponding to the audio devices\n currently connected to the system and meeting the criteria specified in the\n <code>flags</code> parameter.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>A set of bitflags specifying the criteria to test.\n@see <a href=\"#!/api/android.media.AudioManager-property-GET_DEVICES_OUTPUTS\" rel=\"android.media.AudioManager-property-GET_DEVICES_OUTPUTS\" class=\"docClass\">GET_DEVICES_OUTPUTS</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-GET_DEVICES_INPUTS\" rel=\"android.media.AudioManager-property-GET_DEVICES_INPUTS\" class=\"docClass\">GET_DEVICES_INPUTS</a>\n@see <a href=\"#!/api/android.media.AudioManager-property-GET_DEVICES_ALL\" rel=\"android.media.AudioManager-property-GET_DEVICES_ALL\" class=\"docClass\">GET_DEVICES_ALL</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.AudioDeviceInfo}</span><div class='sub-desc'><p>A (possibly zero-length) array of AudioDeviceInfo objects.</p>\n</div></li></ul></div></div></div><div id='method-getDevicesForStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getDevicesForStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getDevicesForStream' class='name expandable'>getDevicesForStream</a>( <span class='pre'>streamType</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the enabled devices for the specified output stream type. ...</div><div class='long'><p>Return the enabled devices for the specified output stream type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream type to query. One of\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_VOICE_CALL\" rel=\"android.media.AudioManager-property-STREAM_VOICE_CALL\" class=\"docClass\">STREAM_VOICE_CALL</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_SYSTEM\" rel=\"android.media.AudioManager-property-STREAM_SYSTEM\" class=\"docClass\">STREAM_SYSTEM</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_RING\" rel=\"android.media.AudioManager-property-STREAM_RING\" class=\"docClass\">STREAM_RING</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_MUSIC\" rel=\"android.media.AudioManager-property-STREAM_MUSIC\" class=\"docClass\">STREAM_MUSIC</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_ALARM\" rel=\"android.media.AudioManager-property-STREAM_ALARM\" class=\"docClass\">STREAM_ALARM</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_NOTIFICATION\" rel=\"android.media.AudioManager-property-STREAM_NOTIFICATION\" class=\"docClass\">STREAM_NOTIFICATION</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_DTMF\" rel=\"android.media.AudioManager-property-STREAM_DTMF\" class=\"docClass\">STREAM_DTMF</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-STREAM_ACCESSIBILITY\" rel=\"android.media.AudioManager-property-STREAM_ACCESSIBILITY\" class=\"docClass\">STREAM_ACCESSIBILITY</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The bit-mask \"or\" of audio output device codes for all enabled devices on this\n         stream. Zero or more of\n            DEVICE_OUT_EARPIECE,\n            DEVICE_OUT_SPEAKER,\n            DEVICE_OUT_WIRED_HEADSET,\n            DEVICE_OUT_WIRED_HEADPHONE,\n            DEVICE_OUT_BLUETOOTH_SCO,\n            DEVICE_OUT_BLUETOOTH_SCO_HEADSET,\n            DEVICE_OUT_BLUETOOTH_SCO_CARKIT,\n            DEVICE_OUT_BLUETOOTH_A2DP,\n            DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES,\n            DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER,\n            DEVICE_OUT_HDMI,\n            DEVICE_OUT_ANLG_DOCK_HEADSET,\n            DEVICE_OUT_DGTL_DOCK_HEADSET.\n            DEVICE_OUT_USB_ACCESSORY.\n            DEVICE_OUT_USB_DEVICE.\n            DEVICE_OUT_REMOTE_SUBMIX.\n            DEVICE_OUT_TELEPHONY_TX.\n            DEVICE_OUT_LINE.\n            DEVICE_OUT_HDMI_ARC.\n            DEVICE_OUT_SPDIF.\n            DEVICE_OUT_FM.\n            DEVICE_OUT_DEFAULT is not used here.</p>\n\n<p> The implementation may support additional device codes beyond those listed, so\n the application should ignore any bits which it does not recognize.\n Note that the information may be imprecise when the implementation\n cannot distinguish whether a particular device is enabled.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getFocusRampTimeMs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getFocusRampTimeMs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getFocusRampTimeMs' class='name expandable'>getFocusRampTimeMs</a>( <span class='pre'>focusGain, attr, attr</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>focusGain</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>attr</span> : Object {AudioAttributes}<div class='sub-desc'>\n</div></li><li><span class='pre'>attr</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getMicrophones' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getMicrophones' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getMicrophones' class='name expandable'>getMicrophones</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a list of android.media.MicrophoneInfo that corresponds to the characteristics\n of all available microphones. ...</div><div class='long'><p>Returns a list of <a href=\"#!/api/android.media.MicrophoneInfo\" rel=\"android.media.MicrophoneInfo\" class=\"docClass\">android.media.MicrophoneInfo</a> that corresponds to the characteristics\n of all available microphones. The list is empty when no microphones are available\n on the device. An error during the query will result in an IOException being thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a list that contains all microphones' characteristics</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an error occurs.</p>\n</div></li></ul></div></div></div><div id='method-getMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getMode' class='name expandable'>getMode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current audio mode. ...</div><div class='long'><p>Returns the current audio mode.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the current audio mode (<a href=\"#!/api/android.media.AudioManager-property-MODE_NORMAL\" rel=\"android.media.AudioManager-property-MODE_NORMAL\" class=\"docClass\">MODE_NORMAL</a>, <a href=\"#!/api/android.media.AudioManager-property-MODE_RINGTONE\" rel=\"android.media.AudioManager-property-MODE_RINGTONE\" class=\"docClass\">MODE_RINGTONE</a>,\n              <a href=\"#!/api/android.media.AudioManager-property-MODE_IN_CALL\" rel=\"android.media.AudioManager-property-MODE_IN_CALL\" class=\"docClass\">MODE_IN_CALL</a> or <a href=\"#!/api/android.media.AudioManager-property-MODE_IN_COMMUNICATION\" rel=\"android.media.AudioManager-property-MODE_IN_COMMUNICATION\" class=\"docClass\">MODE_IN_COMMUNICATION</a>).\n              Returns the current current audio state from the HAL.</p>\n</div></li></ul></div></div></div><div id='method-getParameters' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getParameters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getParameters' class='name expandable'>getParameters</a>( <span class='pre'>keys</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets a variable number of parameter values from audio hardware. ...</div><div class='long'><p>Gets a variable number of parameter values from audio hardware.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keys</span> : String<div class='sub-desc'><p>list of parameters</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>list of parameters key value pairs in the form:\n    key1=value1;key2=value2;...</p>\n</div></li></ul></div></div></div><div id='method-getProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getProperty' class='name expandable'>getProperty</a>( <span class='pre'>key</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of the property with the specified key. ...</div><div class='long'><p>Returns the value of the property with the specified key.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>One of the strings corresponding to a property key: either\n            <a href=\"#!/api/android.media.AudioManager-property-PROPERTY_OUTPUT_SAMPLE_RATE\" rel=\"android.media.AudioManager-property-PROPERTY_OUTPUT_SAMPLE_RATE\" class=\"docClass\">PROPERTY_OUTPUT_SAMPLE_RATE</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER\" rel=\"android.media.AudioManager-property-PROPERTY_OUTPUT_FRAMES_PER_BUFFER\" class=\"docClass\">PROPERTY_OUTPUT_FRAMES_PER_BUFFER</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND\" rel=\"android.media.AudioManager-property-PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND\" class=\"docClass\">PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND\" rel=\"android.media.AudioManager-property-PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND\" class=\"docClass\">PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND</a>, or\n            <a href=\"#!/api/android.media.AudioManager-property-PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED\" rel=\"android.media.AudioManager-property-PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED\" class=\"docClass\">PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A string representing the associated value for that property key,\n         or null if there is no value for that key.</p>\n</div></li></ul></div></div></div><div id='method-getRingerMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getRingerMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getRingerMode' class='name expandable'>getRingerMode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current ringtone mode. ...</div><div class='long'><p>Returns the current ringtone mode.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The current ringtone mode, one of <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_NORMAL\" rel=\"android.media.AudioManager-property-RINGER_MODE_NORMAL\" class=\"docClass\">RINGER_MODE_NORMAL</a>,\n         <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_SILENT\" rel=\"android.media.AudioManager-property-RINGER_MODE_SILENT\" class=\"docClass\">RINGER_MODE_SILENT</a>, or <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_VIBRATE\" rel=\"android.media.AudioManager-property-RINGER_MODE_VIBRATE\" class=\"docClass\">RINGER_MODE_VIBRATE</a>.\n@see <a href=\"#!/api/android.media.AudioManager-method-setRingerMode\" rel=\"android.media.AudioManager-method-setRingerMode\" class=\"docClass\">setRingerMode</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getRingtonePlayer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getRingtonePlayer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getRingtonePlayer' class='name expandable'>getRingtonePlayer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getRouting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getRouting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getRouting' class='name expandable'>getRouting</a>( <span class='pre'>mode</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the current audio routing bit vector for a specified mode. ...</div><div class='long'><p>Returns the current audio routing bit vector for a specified mode.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Do not query audio routing directly, use isSpeakerphoneOn(),\n isBluetoothScoOn(), isBluetoothA2dpOn() and isWiredHeadsetOn() methods instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>audio mode to get route (e.g., MODE_RINGTONE)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an audio route bit vector that can be compared with ROUTE_xxx\n bits</p>\n</div></li></ul></div></div></div><div id='method-getStreamMaxVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getStreamMaxVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getStreamMaxVolume' class='name expandable'>getStreamMaxVolume</a>( <span class='pre'>streamType</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum volume index for a particular stream. ...</div><div class='long'><p>Returns the maximum volume index for a particular stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream type whose maximum volume index is returned.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The maximum valid volume index for the stream.\n@see <a href=\"#!/api/android.media.AudioManager-method-getStreamVolume\" rel=\"android.media.AudioManager-method-getStreamVolume\" class=\"docClass\">getStreamVolume</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getStreamMinVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getStreamMinVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getStreamMinVolume' class='name expandable'>getStreamMinVolume</a>( <span class='pre'>streamType</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the minimum volume index for a particular stream. ...</div><div class='long'><p>Returns the minimum volume index for a particular stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream type whose minimum volume index is returned. Must be one of\n     <a href=\"#!/api/android.media.AudioManager-property-STREAM_VOICE_CALL\" rel=\"android.media.AudioManager-property-STREAM_VOICE_CALL\" class=\"docClass\">STREAM_VOICE_CALL</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_SYSTEM\" rel=\"android.media.AudioManager-property-STREAM_SYSTEM\" class=\"docClass\">STREAM_SYSTEM</a>,\n     <a href=\"#!/api/android.media.AudioManager-property-STREAM_RING\" rel=\"android.media.AudioManager-property-STREAM_RING\" class=\"docClass\">STREAM_RING</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_MUSIC\" rel=\"android.media.AudioManager-property-STREAM_MUSIC\" class=\"docClass\">STREAM_MUSIC</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_ALARM\" rel=\"android.media.AudioManager-property-STREAM_ALARM\" class=\"docClass\">STREAM_ALARM</a>,\n     <a href=\"#!/api/android.media.AudioManager-property-STREAM_NOTIFICATION\" rel=\"android.media.AudioManager-property-STREAM_NOTIFICATION\" class=\"docClass\">STREAM_NOTIFICATION</a>, <a href=\"#!/api/android.media.AudioManager-property-STREAM_DTMF\" rel=\"android.media.AudioManager-property-STREAM_DTMF\" class=\"docClass\">STREAM_DTMF</a> or <a href=\"#!/api/android.media.AudioManager-property-STREAM_ACCESSIBILITY\" rel=\"android.media.AudioManager-property-STREAM_ACCESSIBILITY\" class=\"docClass\">STREAM_ACCESSIBILITY</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The minimum valid volume index for the stream.\n@see <a href=\"#!/api/android.media.AudioManager-method-getStreamVolume\" rel=\"android.media.AudioManager-method-getStreamVolume\" class=\"docClass\">getStreamVolume</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getStreamMinVolumeInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getStreamMinVolumeInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getStreamMinVolumeInt' class='name expandable'>getStreamMinVolumeInt</a>( <span class='pre'>streamType, streamType</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream type whose minimum volume index is returned.</p>\n</div></li><li><span class='pre'>streamType</span> : Object<div class='sub-desc'><p>The stream type whose minimum volume index is returned.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The minimum valid volume index for the stream.\n@see <a href=\"#!/api/android.media.AudioManager-method-getStreamVolume\" rel=\"android.media.AudioManager-method-getStreamVolume\" class=\"docClass\">getStreamVolume</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getStreamVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getStreamVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getStreamVolume' class='name expandable'>getStreamVolume</a>( <span class='pre'>streamType</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current volume index for a particular stream. ...</div><div class='long'><p>Returns the current volume index for a particular stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream type whose volume index is returned.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The current volume index for the stream.\n@see <a href=\"#!/api/android.media.AudioManager-method-getStreamMaxVolume\" rel=\"android.media.AudioManager-method-getStreamMaxVolume\" class=\"docClass\">getStreamMaxVolume</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-setStreamVolume\" rel=\"android.media.AudioManager-method-setStreamVolume\" class=\"docClass\">setStreamVolume</a>(int, int, int)</p>\n</div></li></ul></div></div></div><div id='method-getStreamVolumeDb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getStreamVolumeDb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getStreamVolumeDb' class='name expandable'>getStreamVolumeDb</a>( <span class='pre'>streamType, index, deviceType</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the volume in dB (decibel) for the given stream type at the given volume index, on\n the given type of audio o...</div><div class='long'><p>Returns the volume in dB (decibel) for the given stream type at the given volume index, on\n the given type of audio output device.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>stream type for which the volume is queried.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>the volume index for which the volume is queried. The index value must be\n     between the minimum and maximum index values for the given stream type (see\n     getStreamMinVolume(int) and getStreamMaxVolume(int)).</p>\n</div></li><li><span class='pre'>deviceType</span> : Number<div class='sub-desc'><p>the type of audio output device for which volume is queried.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a volume expressed in dB.\n     A negative value indicates the audio signal is attenuated. A typical maximum value\n     at the maximum volume index is 0 dB (no attenuation nor amplification). Muting is\n     reflected by a value of Float.NEGATIVE_INFINITY.</p>\n</div></li></ul></div></div></div><div id='method-getVibrateSetting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-getVibrateSetting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-getVibrateSetting' class='name expandable'>getVibrateSetting</a>( <span class='pre'>vibrateType</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns whether the user's vibrate setting for a vibrate type. ...</div><div class='long'><p>Returns whether the user's vibrate setting for a vibrate type.\n <p>\n This shouldn't be needed by most clients that want to vibrate, instead\n see <a href=\"#!/api/android.media.AudioManager-method-shouldVibrate\" rel=\"android.media.AudioManager-method-shouldVibrate\" class=\"docClass\">shouldVibrate</a>(int).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\n current ringer mode that can be queried via getRingerMode().</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>vibrateType</span> : Number<div class='sub-desc'><p>The type of vibrate. One of\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" class=\"docClass\">VIBRATE_TYPE_NOTIFICATION</a> or\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" class=\"docClass\">VIBRATE_TYPE_RINGER</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The vibrate setting, one of <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ON\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_ON\" class=\"docClass\">VIBRATE_SETTING_ON</a>,\n         <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_OFF\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_OFF\" class=\"docClass\">VIBRATE_SETTING_OFF</a>, or\n         <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ONLY_SILENT\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_ONLY_SILENT\" class=\"docClass\">VIBRATE_SETTING_ONLY_SILENT</a>.\n@see <a href=\"#!/api/android.media.AudioManager-method-setVibrateSetting\" rel=\"android.media.AudioManager-method-setVibrateSetting\" class=\"docClass\">setVibrateSetting</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-shouldVibrate\" rel=\"android.media.AudioManager-method-shouldVibrate\" class=\"docClass\">shouldVibrate</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-handleBluetoothA2dpDeviceConfigChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-handleBluetoothA2dpDeviceConfigChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-handleBluetoothA2dpDeviceConfigChange' class='name expandable'>handleBluetoothA2dpDeviceConfigChange</a>( <span class='pre'>device</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate A2DP device configuration has changed. ...</div><div class='long'><p>Indicate A2DP device configuration has changed.\n This operation is asynchronous but its execution will still be sequentially scheduled\n relative to calls to\n int, int,\n boolean, int) and\n int, boolean, int)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>device</span> : Object {BluetoothDevice}<div class='sub-desc'><p>Bluetooth device whose configuration has changed.\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-isBluetoothA2dpOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isBluetoothA2dpOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isBluetoothA2dpOn' class='name expandable'>isBluetoothA2dpOn</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Checks whether a Bluetooth A2DP audio peripheral is connected or not. ...</div><div class='long'><p>Checks whether a Bluetooth A2DP audio peripheral is connected or not.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use AudioManager.getDevices(int) instead to list available audio devices.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a Bluetooth A2DP peripheral is connected\n         false if otherwise</p>\n</div></li></ul></div></div></div><div id='method-isBluetoothScoAvailableOffCall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isBluetoothScoAvailableOffCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isBluetoothScoAvailableOffCall' class='name expandable'>isBluetoothScoAvailableOffCall</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates if current platform supports use of SCO for off call use cases. ...</div><div class='long'><p>Indicates if current platform supports use of SCO for off call use cases.\n Application wanted to use bluetooth SCO audio when the phone is not in call\n must first call this method to make sure that the platform supports this\n feature.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if bluetooth SCO can be used for audio when not in call\n         false otherwise\n@see <a href=\"#!/api/android.media.AudioManager-method-startBluetoothSco\" rel=\"android.media.AudioManager-method-startBluetoothSco\" class=\"docClass\">startBluetoothSco</a>()</p>\n</div></li></ul></div></div></div><div id='method-isBluetoothScoOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isBluetoothScoOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isBluetoothScoOn' class='name expandable'>isBluetoothScoOn</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether communications use Bluetooth SCO. ...</div><div class='long'><p>Checks whether communications use Bluetooth SCO.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if SCO is used for communications;\n         false if otherwise</p>\n</div></li></ul></div></div></div><div id='method-isHapticPlaybackSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isHapticPlaybackSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isHapticPlaybackSupported' class='name expandable'>isHapticPlaybackSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return if audio haptic coupled playback is supported or not. ...</div><div class='long'><p>Return if audio haptic coupled playback is supported or not.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether audio haptic playback supported.</p>\n</div></li></ul></div></div></div><div id='method-isMicrophoneMute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isMicrophoneMute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isMicrophoneMute' class='name expandable'>isMicrophoneMute</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the microphone mute is on or off. ...</div><div class='long'><p>Checks whether the microphone mute is on or off.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if microphone is muted, false if it's not</p>\n</div></li></ul></div></div></div><div id='method-isMusicActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isMusicActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isMusicActive' class='name expandable'>isMusicActive</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether any music is active. ...</div><div class='long'><p>Checks whether any music is active.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if any music tracks are active.</p>\n</div></li></ul></div></div></div><div id='method-isOffloadedPlaybackSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isOffloadedPlaybackSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isOffloadedPlaybackSupported' class='name expandable'>isOffloadedPlaybackSupported</a>( <span class='pre'>format, attributes</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether offloaded playback of an audio format is supported on the device. ...</div><div class='long'><p>Returns whether offloaded playback of an audio format is supported on the device.\n <p>Offloaded playback is the feature where the decoding and playback of an audio stream\n is not competing with other software resources. In general, it is supported by dedicated\n hardware, such as audio DSPs.\n <p>Note that this query only provides information about the support of an audio format,\n it does not indicate whether the resources necessary for the offloaded playback are\n available at that instant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Object {AudioFormat}<div class='sub-desc'><p>the audio format (codec, sample rate, channels) being checked.</p>\n</div></li><li><span class='pre'>attributes</span> : Object {AudioAttributes}<div class='sub-desc'><p>the AudioAttributes to be used for playback</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the given audio format can be offloaded.</p>\n</div></li></ul></div></div></div><div id='method-isSpeakerphoneOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isSpeakerphoneOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isSpeakerphoneOn' class='name expandable'>isSpeakerphoneOn</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the speakerphone is on or off. ...</div><div class='long'><p>Checks whether the speakerphone is on or off.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if speakerphone is on, false if it's off</p>\n</div></li></ul></div></div></div><div id='method-isStreamMute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isStreamMute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isStreamMute' class='name expandable'>isStreamMute</a>( <span class='pre'>streamType</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current mute state for a particular stream. ...</div><div class='long'><p>Returns the current mute state for a particular stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream to get mute state for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>The mute state for the given stream.\n@see <a href=\"#!/api/android.media.AudioManager-method-adjustStreamVolume\" rel=\"android.media.AudioManager-method-adjustStreamVolume\" class=\"docClass\">adjustStreamVolume</a>(int, int, int)</p>\n</div></li></ul></div></div></div><div id='method-isVolumeFixed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isVolumeFixed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isVolumeFixed' class='name expandable'>isVolumeFixed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates if the device implements a fixed volume policy. ...</div><div class='long'><p>Indicates if the device implements a fixed volume policy.\n <p>Some devices may not have volume control and may operate at a fixed volume,\n and may not enable muting or changing the volume of audio streams.\n This method will return true on such devices.\n <p>The following APIs have no effect when volume is fixed:\n <ul>\n   <li> int)\n   <li> int, int)\n   <li> int, int)\n   <li> int, int)\n   <li> <a href=\"#!/api/android.media.AudioManager-method-setRingerMode\" rel=\"android.media.AudioManager-method-setRingerMode\" class=\"docClass\">setRingerMode</a>(int)\n   <li> boolean)\n   <li> boolean)\n </li></li></li></li></li></li></li></ul></p>\n</div></div></div><div id='method-isWiredHeadsetOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-isWiredHeadsetOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-isWiredHeadsetOn' class='name expandable'>isWiredHeadsetOn</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Checks whether a wired headset is connected or not. ...</div><div class='long'><p>Checks whether a wired headset is connected or not.\n <p>This is not a valid indication that audio playback is\n actually over the wired headset as audio routing depends on other conditions.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use AudioManager.getDevices(int) instead to list available audio devices.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a wired headset is connected.\n         false if otherwise</p>\n</div></li></ul></div></div></div><div id='method-loadSoundEffects' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-loadSoundEffects' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-loadSoundEffects' class='name expandable'>loadSoundEffects</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Load Sound effects. ...</div><div class='long'><p>Load Sound effects.\n  This method must be called when sound effects are enabled.</p>\n</div></div></div><div id='method-playSoundEffect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-playSoundEffect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-playSoundEffect' class='name expandable'>playSoundEffect</a>( <span class='pre'>effectType, volume</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Plays a sound effect (Key clicks, lid open/close...) ...</div><div class='long'><p>Plays a sound effect (Key clicks, lid open/close...)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>effectType</span> : Number<div class='sub-desc'><p>The type of sound effect. One of\n            <a href=\"#!/api/android.media.AudioManager-property-FX_KEY_CLICK\" rel=\"android.media.AudioManager-property-FX_KEY_CLICK\" class=\"docClass\">FX_KEY_CLICK</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_UP\" rel=\"android.media.AudioManager-property-FX_FOCUS_NAVIGATION_UP\" class=\"docClass\">FX_FOCUS_NAVIGATION_UP</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_DOWN\" rel=\"android.media.AudioManager-property-FX_FOCUS_NAVIGATION_DOWN\" class=\"docClass\">FX_FOCUS_NAVIGATION_DOWN</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_LEFT\" rel=\"android.media.AudioManager-property-FX_FOCUS_NAVIGATION_LEFT\" class=\"docClass\">FX_FOCUS_NAVIGATION_LEFT</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_FOCUS_NAVIGATION_RIGHT\" rel=\"android.media.AudioManager-property-FX_FOCUS_NAVIGATION_RIGHT\" class=\"docClass\">FX_FOCUS_NAVIGATION_RIGHT</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_KEYPRESS_STANDARD\" rel=\"android.media.AudioManager-property-FX_KEYPRESS_STANDARD\" class=\"docClass\">FX_KEYPRESS_STANDARD</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_KEYPRESS_SPACEBAR\" rel=\"android.media.AudioManager-property-FX_KEYPRESS_SPACEBAR\" class=\"docClass\">FX_KEYPRESS_SPACEBAR</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_KEYPRESS_DELETE\" rel=\"android.media.AudioManager-property-FX_KEYPRESS_DELETE\" class=\"docClass\">FX_KEYPRESS_DELETE</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_KEYPRESS_RETURN\" rel=\"android.media.AudioManager-property-FX_KEYPRESS_RETURN\" class=\"docClass\">FX_KEYPRESS_RETURN</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-FX_KEYPRESS_INVALID\" rel=\"android.media.AudioManager-property-FX_KEYPRESS_INVALID\" class=\"docClass\">FX_KEYPRESS_INVALID</a>,</p>\n</div></li><li><span class='pre'>volume</span> : Number<div class='sub-desc'><p>Sound effect volume.\n The volume value is a raw scalar so UI controls should be scaled logarithmically.\n If a volume of -1 is specified, the AudioManager.STREAM_MUSIC stream volume minus 3dB will be used.\n NOTE: This version is for applications that have their own\n settings panel for enabling and controlling volume.</p>\n</div></li></ul></div></div></div><div id='method-registerAudioDeviceCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerAudioDeviceCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerAudioDeviceCallback' class='name expandable'>registerAudioDeviceCallback</a>( <span class='pre'>callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers an android.media.AudioDeviceCallback object to receive notifications of changes\n to the set of connected au...</div><div class='long'><p>Registers an <a href=\"#!/api/android.media.AudioDeviceCallback\" rel=\"android.media.AudioDeviceCallback\" class=\"docClass\">android.media.AudioDeviceCallback</a> object to receive notifications of changes\n to the set of connected audio devices.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {AudioDeviceCallback}<div class='sub-desc'><p>The AudioDeviceCallback object to receive connect/disconnect\n notifications.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Specifies the Handler object for the thread on which to execute\n the callback. If <code>null</code>, the Handler associated with the main\n Looper will be used.</p>\n</div></li></ul></div></div></div><div id='method-registerAudioFocusRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerAudioFocusRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerAudioFocusRequest' class='name expandable'>registerAudioFocusRequest</a>( <span class='pre'>afr, afr</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>afr</span> : Object {AudioFocusRequest}<div class='sub-desc'><p>the full request parameters</p>\n</div></li><li><span class='pre'>afr</span> : Object<div class='sub-desc'><p>the full request parameters</p>\n</div></li></ul></div></div></div><div id='method-registerAudioPlaybackCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerAudioPlaybackCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerAudioPlaybackCallback' class='name expandable'>registerAudioPlaybackCallback</a>( <span class='pre'>cb, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to be notified of audio playback changes through\n android.media.AudioManager.AudioPlaybackCallback ...</div><div class='long'><p>Register a callback to be notified of audio playback changes through\n <a href=\"#!/api/android.media.AudioManager.AudioPlaybackCallback\" rel=\"android.media.AudioManager.AudioPlaybackCallback\" class=\"docClass\">android.media.AudioManager.AudioPlaybackCallback</a></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {AudioManager.AudioPlaybackCallback}<div class='sub-desc'><p>non-null callback to register</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>the Handler object for the thread on which to execute\n the callback. If <code>null</code>, the Handler associated with the main\n Looper will be used.</p>\n</div></li></ul></div></div></div><div id='method-registerAudioPolicy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerAudioPolicy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerAudioPolicy' class='name expandable'>registerAudioPolicy</a>( <span class='pre'>policy, policy</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>policy</span> : Object {AudioPolicy}<div class='sub-desc'><p>the non-null AudioPolicy to register.</p>\n</div></li><li><span class='pre'>policy</span> : Object<div class='sub-desc'><p>the non-null AudioPolicy to register.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.media.AudioManager-property-ERROR\" rel=\"android.media.AudioManager-property-ERROR\" class=\"docClass\">ERROR</a> if there was an error communicating with the registration service\n    or if the user doesn't have the required\n    android.Manifest.permission.MODIFY_AUDIO_ROUTING permission,\n    SUCCESS otherwise.</p>\n</div></li></ul></div></div></div><div id='method-registerAudioRecordingCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerAudioRecordingCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerAudioRecordingCallback' class='name expandable'>registerAudioRecordingCallback</a>( <span class='pre'>cb, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to be notified of audio recording changes through\n android.media.AudioRecordingCallback ...</div><div class='long'><p>Register a callback to be notified of audio recording changes through\n android.media.AudioRecordingCallback</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {AudioManager.AudioRecordingCallback}<div class='sub-desc'><p>non-null callback to register</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>the Handler object for the thread on which to execute\n the callback. If <code>null</code>, the Handler associated with the main\n Looper will be used.</p>\n</div></li></ul></div></div></div><div id='method-registerMediaButtonEventReceiver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerMediaButtonEventReceiver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerMediaButtonEventReceiver' class='name expandable'>registerMediaButtonEventReceiver</a>( <span class='pre'>eventReceiver</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Register a component to be the sole receiver of MEDIA_BUTTON intents. ...</div><div class='long'><p>Register a component to be the sole receiver of MEDIA_BUTTON intents.  This is like\n registerMediaButtonEventReceiver(android.content.ComponentName), but allows\n the buttons to go to any PendingIntent.  Note that you should only use this form if\n you know you will continue running for the full time until unregistering the\n PendingIntent.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use MediaSession.setMediaButtonReceiver(PendingIntent) instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventReceiver</span> : Object {PendingIntent}<div class='sub-desc'><p>target that will receive media button intents.  The PendingIntent\n will be sent an Intent.ACTION_MEDIA_BUTTON event when a media button action\n occurs, with Intent.EXTRA_KEY_EVENT added and holding the key code of the\n media button that was pressed.</p>\n</div></li></ul></div></div></div><div id='method-registerRemoteControlClient' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerRemoteControlClient' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerRemoteControlClient' class='name expandable'>registerRemoteControlClient</a>( <span class='pre'>rcClient</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Registers the remote control client for providing information to display on the remote\n controls. ...</div><div class='long'><p>Registers the remote control client for providing information to display on the remote\n controls.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use MediaSession instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rcClient</span> : Object {RemoteControlClient}<div class='sub-desc'><p>The remote control client from which remote controls will receive\n      information to display.\n@see RemoteControlClient</p>\n</div></li></ul></div></div></div><div id='method-registerRemoteController' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerRemoteController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerRemoteController' class='name expandable'>registerRemoteController</a>( <span class='pre'>rctlr</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Registers a android.media.RemoteController instance for it to receive media\n metadata updates and playback state info...</div><div class='long'><p>Registers a <a href=\"#!/api/android.media.RemoteController\" rel=\"android.media.RemoteController\" class=\"docClass\">android.media.RemoteController</a> instance for it to receive media\n metadata updates and playback state information from applications using\n <a href=\"#!/api/android.media.RemoteControlClient\" rel=\"android.media.RemoteControlClient\" class=\"docClass\">android.media.RemoteControlClient</a>, and control their playback.\n <p>\n Registration requires the <a href=\"#!/api/android.media.RemoteController.OnClientUpdateListener\" rel=\"android.media.RemoteController.OnClientUpdateListener\" class=\"docClass\">android.media.RemoteController.OnClientUpdateListener</a> listener to be\n one of the enabled notification listeners (see\n android.service.notification.NotificationListenerService).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use\n             ComponentName)\n             and MediaController instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rctlr</span> : Object {RemoteController}<div class='sub-desc'><p>the object to register.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the RemoteController was successfully registered,\n         false if an error occurred, due to an internal system error, or\n         insufficient permissions.</p>\n</div></li></ul></div></div></div><div id='method-registerVolumeGroupCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-registerVolumeGroupCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-registerVolumeGroupCallback' class='name expandable'>registerVolumeGroupCallback</a>( <span class='pre'>callback, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {Executor}<div class='sub-desc'><p>the VolumeGroupCallback to register</p>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'><p>the VolumeGroupCallback to register</p>\n</div></li></ul></div></div></div><div id='method-requestAudioFocus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-requestAudioFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-requestAudioFocus' class='name expandable'>requestAudioFocus</a>( <span class='pre'>afr, ap, ap</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>afr</span> : Object {AudioFocusRequest}<div class='sub-desc'><p>see the description of the same parameter in\n     requestAudioFocus(AudioFocusRequest)</p>\n</div></li><li><span class='pre'>ap</span> : Object {AudioPolicy}<div class='sub-desc'><p>a registered android.media.audiopolicy.AudioPolicy instance when locking\n     focus, or null.</p>\n</div></li><li><span class='pre'>ap</span> : Object<div class='sub-desc'><p>a registered android.media.audiopolicy.AudioPolicy instance when locking\n     focus, or null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_FAILED\" class=\"docClass\">AUDIOFOCUS_REQUEST_FAILED</a>, <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_GRANTED\" class=\"docClass\">AUDIOFOCUS_REQUEST_GRANTED</a>\n     or <a href=\"#!/api/android.media.AudioManager-property-AUDIOFOCUS_REQUEST_DELAYED\" rel=\"android.media.AudioManager-property-AUDIOFOCUS_REQUEST_DELAYED\" class=\"docClass\">AUDIOFOCUS_REQUEST_DELAYED</a>.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if the AudioFocusRequest is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException when trying to lock focus without an AudioPolicy</p>\n</div></li></ul></div></div></div><div id='method-requestAudioFocusForCall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-requestAudioFocusForCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-requestAudioFocusForCall' class='name expandable'>requestAudioFocusForCall</a>( <span class='pre'>streamType, durationHint, durationHint</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>use STREAM_RING for focus requests when ringing, VOICE_CALL for\n    the establishment of the call</p>\n</div></li><li><span class='pre'>durationHint</span> : Number<div class='sub-desc'><p>the type of focus request. AUDIOFOCUS_GAIN_TRANSIENT is recommended so\n    media applications resume after a call</p>\n</div></li><li><span class='pre'>durationHint</span> : Object<div class='sub-desc'><p>the type of focus request. AUDIOFOCUS_GAIN_TRANSIENT is recommended so\n    media applications resume after a call</p>\n</div></li></ul></div></div></div><div id='method-setAllowedCapturePolicy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setAllowedCapturePolicy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setAllowedCapturePolicy' class='name expandable'>setAllowedCapturePolicy</a>( <span class='pre'>capturePolicy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies whether the audio played by this app may or may not be captured by other apps or\n the system. ...</div><div class='long'><p>Specifies whether the audio played by this app may or may not be captured by other apps or\n the system.</p>\n\n<p> The default is <a href=\"#!/api/android.media.AudioAttributes-property-ALLOW_CAPTURE_BY_ALL\" rel=\"android.media.AudioAttributes-property-ALLOW_CAPTURE_BY_ALL\" class=\"docClass\">android.media.AudioAttributes.ALLOW_CAPTURE_BY_ALL</a>.</p>\n\n<p> There are multiple ways to set this policy:\n <ul>\n <li> for each track independently, see\n    android.media.AudioAttributes.Builder.setAllowedCapturePolicy(int) </li>\n <li> application-wide at runtime, with this method </li>\n <li> application-wide at build time, see {@code allowAudioPlaybackCapture} in the application\n       manifest. </li>\n </ul>\n The most restrictive policy is always applied.</p>\n\n<p> See <a href=\"#!/api/android.media.AudioPlaybackCaptureConfiguration\" rel=\"android.media.AudioPlaybackCaptureConfiguration\" class=\"docClass\">android.media.AudioPlaybackCaptureConfiguration</a> for more details on\n which audio signals can be captured.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>capturePolicy</span> : Number<div class='sub-desc'><p>one of\n     AudioAttributes.ALLOW_CAPTURE_BY_ALL,\n     AudioAttributes.ALLOW_CAPTURE_BY_SYSTEM,\n     AudioAttributes.ALLOW_CAPTURE_BY_NONE.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the argument is not a valid value.</p>\n</div></li></ul></div></div></div><div id='method-setAudioServerStateCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setAudioServerStateCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setAudioServerStateCallback' class='name expandable'>setAudioServerStateCallback</a>( <span class='pre'>executor, stateCallback, stateCallback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>Executor to handle the callbacks</p>\n</div></li><li><span class='pre'>stateCallback</span> : Object {AudioManager.AudioServerStateCallback}<div class='sub-desc'><p>the callback to receive the audio server state changes\n        To remove the callabck, pass a null reference for both executor and stateCallback.</p>\n</div></li><li><span class='pre'>stateCallback</span> : Object<div class='sub-desc'><p>the callback to receive the audio server state changes\n        To remove the callabck, pass a null reference for both executor and stateCallback.</p>\n</div></li></ul></div></div></div><div id='method-setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent' class='name expandable'>setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent</a>( <span class='pre'>device, state, profile, a2dpVolume, suppressNoisyIntent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate A2DP source or sink connection state change and eventually suppress\n the android.media.AudioManager.ACTION_A...</div><div class='long'><p>Indicate A2DP source or sink connection state change and eventually suppress\n the android.media.AudioManager.ACTION_AUDIO_BECOMING_NOISY intent.\n This operation is asynchronous but its execution will still be sequentially scheduled\n relative to calls to int, boolean, int) and\n handleBluetoothA2dpDeviceConfigChange(BluetoothDevice).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>device</span> : Object {BluetoothDevice}<div class='sub-desc'><p>Bluetooth device connected/disconnected</p>\n</div></li><li><span class='pre'>state</span> : Number<div class='sub-desc'><p>new connection state, BluetoothProfile.STATE_CONNECTED\n     or BluetoothProfile.STATE_DISCONNECTED</p>\n</div></li><li><span class='pre'>profile</span> : Number<div class='sub-desc'><p>profile for the A2DP device</p>\n</div></li><li><span class='pre'>a2dpVolume</span> : Boolean<div class='sub-desc'><p>New volume for the connecting device. Does nothing if disconnecting.\n (either android.bluetooth.BluetoothProfile.A2DP or\n android.bluetooth.BluetoothProfile.A2DP_SINK)</p>\n</div></li><li><span class='pre'>suppressNoisyIntent</span> : Number<div class='sub-desc'><p>if true the\n AudioManager.ACTION_AUDIO_BECOMING_NOISY intent will not be sent.\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-setBluetoothA2dpOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setBluetoothA2dpOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setBluetoothA2dpOn' class='name expandable'>setBluetoothA2dpOn</a>( <span class='pre'>on</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Do not use.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>on</span> : Boolean<div class='sub-desc'><p>set <var>true</var> to route A2DP audio to/from Bluetooth\n           headset; <var>false</var> disable A2DP audio</p>\n</div></li></ul></div></div></div><div id='method-setBluetoothHearingAidDeviceConnectionState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setBluetoothHearingAidDeviceConnectionState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setBluetoothHearingAidDeviceConnectionState' class='name expandable'>setBluetoothHearingAidDeviceConnectionState</a>( <span class='pre'>device, state, musicDevice, suppressNoisyIntent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate Hearing Aid connection state change and eventually suppress\n the android.media.AudioManager.ACTION_AUDIO_BEC...</div><div class='long'><p>Indicate Hearing Aid connection state change and eventually suppress\n the android.media.AudioManager.ACTION_AUDIO_BECOMING_NOISY intent.\n This operation is asynchronous but its execution will still be sequentially scheduled\n relative to calls to BluetoothDevice, int, int, boolean, int) and\n and handleBluetoothA2dpDeviceConfigChange(BluetoothDevice).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>device</span> : Object {BluetoothDevice}<div class='sub-desc'><p>Bluetooth device connected/disconnected</p>\n</div></li><li><span class='pre'>state</span> : Number<div class='sub-desc'><p>new connection state (BluetoothProfile.STATE_xxx)</p>\n</div></li><li><span class='pre'>musicDevice</span> : Boolean<div class='sub-desc'><p>Default get system volume for the connecting device.\n (either android.bluetooth.BluetoothProfile.hearingaid or\n android.bluetooth.BluetoothProfile.HEARING_AID)</p>\n</div></li><li><span class='pre'>suppressNoisyIntent</span> : Number<div class='sub-desc'><p>if true the\n AudioManager.ACTION_AUDIO_BECOMING_NOISY intent will not be sent.\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-setBluetoothScoOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setBluetoothScoOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setBluetoothScoOn' class='name expandable'>setBluetoothScoOn</a>( <span class='pre'>on</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request use of Bluetooth SCO headset for communications. ...</div><div class='long'><p>Request use of Bluetooth SCO headset for communications.\n <p>\n This method should only be used by applications that replace the platform-wide\n management of audio settings or the main telephony application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>on</span> : Boolean<div class='sub-desc'><p>set <var>true</var> to use bluetooth SCO for communications;\n               <var>false</var> to not use bluetooth SCO for communications</p>\n</div></li></ul></div></div></div><div id='method-setFocusRequestResult' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setFocusRequestResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setFocusRequestResult' class='name expandable'>setFocusRequestResult</a>( <span class='pre'>afi, requestResult, ap, ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>afi</span> : Object {AudioFocusInfo}<div class='sub-desc'><p>the information about the focus requester</p>\n</div></li><li><span class='pre'>requestResult</span> : Number<div class='sub-desc'><p>the result to the focus request to be passed to the requester</p>\n</div></li><li><span class='pre'>ap</span> : Object {AudioPolicy}<div class='sub-desc'><p>a valid registered AudioPolicy configured as a focus policy.</p>\n</div></li><li><span class='pre'>ap</span> : Object<div class='sub-desc'><p>a valid registered AudioPolicy configured as a focus policy.</p>\n</div></li></ul></div></div></div><div id='method-setMicrophoneMute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setMicrophoneMute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setMicrophoneMute' class='name expandable'>setMicrophoneMute</a>( <span class='pre'>on</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the microphone mute on or off. ...</div><div class='long'><p>Sets the microphone mute on or off.\n <p>\n This method should only be used by applications that replace the platform-wide\n management of audio settings or the main telephony application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>on</span> : Boolean<div class='sub-desc'><p>set <var>true</var> to mute the microphone;\n           <var>false</var> to turn mute off</p>\n</div></li></ul></div></div></div><div id='method-setMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setMode' class='name expandable'>setMode</a>( <span class='pre'>mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the audio mode. ...</div><div class='long'><p>Sets the audio mode.\n <p>\n The audio mode encompasses audio routing AND the behavior of\n the telephony layer. Therefore this method should only be used by applications that\n replace the platform-wide management of audio settings or the main telephony application.\n In particular, the <a href=\"#!/api/android.media.AudioManager-property-MODE_IN_CALL\" rel=\"android.media.AudioManager-property-MODE_IN_CALL\" class=\"docClass\">MODE_IN_CALL</a> mode should only be used by the telephony\n application when it places a phone call, as it will cause signals from the radio layer\n to feed the platform mixer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>the requested audio mode (<a href=\"#!/api/android.media.AudioManager-property-MODE_NORMAL\" rel=\"android.media.AudioManager-property-MODE_NORMAL\" class=\"docClass\">MODE_NORMAL</a>, <a href=\"#!/api/android.media.AudioManager-property-MODE_RINGTONE\" rel=\"android.media.AudioManager-property-MODE_RINGTONE\" class=\"docClass\">MODE_RINGTONE</a>,\n              <a href=\"#!/api/android.media.AudioManager-property-MODE_IN_CALL\" rel=\"android.media.AudioManager-property-MODE_IN_CALL\" class=\"docClass\">MODE_IN_CALL</a> or <a href=\"#!/api/android.media.AudioManager-property-MODE_IN_COMMUNICATION\" rel=\"android.media.AudioManager-property-MODE_IN_COMMUNICATION\" class=\"docClass\">MODE_IN_COMMUNICATION</a>).\n              Informs the HAL about the current audio state so that\n              it can route the audio appropriately.</p>\n</div></li></ul></div></div></div><div id='method-setParameters' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setParameters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setParameters' class='name expandable'>setParameters</a>( <span class='pre'>keyValuePairs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a variable number of parameter values to audio hardware. ...</div><div class='long'><p>Sets a variable number of parameter values to audio hardware.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyValuePairs</span> : String<div class='sub-desc'><p>list of parameters key value pairs in the form:\n    key1=value1;key2=value2;...</p>\n</div></li></ul></div></div></div><div id='method-setRingerMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setRingerMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setRingerMode' class='name expandable'>setRingerMode</a>( <span class='pre'>ringerMode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the ringer mode. ...</div><div class='long'><p>Sets the ringer mode.\n <p>\n Silent mode will mute the volume and will not vibrate. Vibrate mode will\n mute the volume and vibrate. Normal mode will be audible and may vibrate\n according to user settings.\n <p>This method has no effect if the device implements a fixed volume policy\n as indicated by <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>().</p>\n\n<p><p>From N onward, ringer mode adjustments that would toggle Do Not Disturb are not allowed\n unless the app has been granted Do Not Disturb Access.\n See NotificationManager.isNotificationPolicyAccessGranted().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ringerMode</span> : Number<div class='sub-desc'><p>The ringer mode, one of <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_NORMAL\" rel=\"android.media.AudioManager-property-RINGER_MODE_NORMAL\" class=\"docClass\">RINGER_MODE_NORMAL</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_SILENT\" rel=\"android.media.AudioManager-property-RINGER_MODE_SILENT\" class=\"docClass\">RINGER_MODE_SILENT</a>, or <a href=\"#!/api/android.media.AudioManager-property-RINGER_MODE_VIBRATE\" rel=\"android.media.AudioManager-property-RINGER_MODE_VIBRATE\" class=\"docClass\">RINGER_MODE_VIBRATE</a>.\n@see <a href=\"#!/api/android.media.AudioManager-method-getRingerMode\" rel=\"android.media.AudioManager-method-getRingerMode\" class=\"docClass\">getRingerMode</a>()\n@see <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>()</p>\n</div></li></ul></div></div></div><div id='method-setRouting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setRouting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setRouting' class='name expandable'>setRouting</a>( <span class='pre'>mode, routes, mask</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the audio routing for a specified mode ...</div><div class='long'><p>Sets the audio routing for a specified mode</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Do not set audio routing directly, use setSpeakerphoneOn(),\n setBluetoothScoOn() methods instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>audio mode to change route. E.g., MODE_RINGTONE.</p>\n</div></li><li><span class='pre'>routes</span> : Number<div class='sub-desc'><p>bit vector of routes requested, created from one or\n               more of ROUTE_xxx types. Set bits indicate that route should be on</p>\n</div></li><li><span class='pre'>mask</span> : Number<div class='sub-desc'><p>bit vector of routes to change, created from one or more of\n ROUTE_xxx types. Unset bits indicate the route should be left unchanged</p>\n</div></li></ul></div></div></div><div id='method-setSpeakerphoneOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setSpeakerphoneOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setSpeakerphoneOn' class='name expandable'>setSpeakerphoneOn</a>( <span class='pre'>on</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the speakerphone on or off. ...</div><div class='long'><p>Sets the speakerphone on or off.\n <p>\n This method should only be used by applications that replace the platform-wide\n management of audio settings or the main telephony application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>on</span> : Boolean<div class='sub-desc'><p>set <var>true</var> to turn on speakerphone;\n           <var>false</var> to turn it off</p>\n</div></li></ul></div></div></div><div id='method-setStreamMute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setStreamMute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setStreamMute' class='name expandable'>setStreamMute</a>( <span class='pre'>streamType, state</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Mute or unmute an audio stream. ...</div><div class='long'><p>Mute or unmute an audio stream.\n <p>\n This method should only be used by applications that replace the\n platform-wide management of audio settings or the main telephony\n application.\n <p>\n This method has no effect if the device implements a fixed volume policy\n as indicated by <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>().\n <p>\n This method was deprecated in API level 22. Prior to API level 22 this\n method had significantly different behavior and should be used carefully.\n The following applies only to pre-22 platforms:\n <ul>\n <li>The mute command is protected against client process death: if a\n process with an active mute request on a stream dies, this stream will be\n unmuted automatically.</li>\n <li>The mute requests for a given stream are cumulative: the AudioManager\n can receive several mute requests from one or more clients and the stream\n will be unmuted only when the same number of unmute requests are\n received.</li>\n <li>For a better user experience, applications MUST unmute a muted stream\n in onPause() and mute is again in onResume() if appropriate.</li>\n </ul></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use int, int) with\n             <a href=\"#!/api/android.media.AudioManager-property-ADJUST_MUTE\" rel=\"android.media.AudioManager-property-ADJUST_MUTE\" class=\"docClass\">ADJUST_MUTE</a> or <a href=\"#!/api/android.media.AudioManager-property-ADJUST_UNMUTE\" rel=\"android.media.AudioManager-property-ADJUST_UNMUTE\" class=\"docClass\">ADJUST_UNMUTE</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream to be muted/unmuted.</p>\n</div></li><li><span class='pre'>state</span> : Boolean<div class='sub-desc'><p>The required mute state: true for mute ON, false for mute\n            OFF\n@see <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>()</p>\n</div></li></ul></div></div></div><div id='method-setStreamSolo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setStreamSolo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setStreamSolo' class='name expandable'>setStreamSolo</a>( <span class='pre'>streamType, state</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Solo or unsolo a particular stream. ...</div><div class='long'><p>Solo or unsolo a particular stream.\n <p>\n Do not use. This method has been deprecated and is now a no-op.\n <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a> should be used for exclusive audio playback.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Do not use. If you need exclusive audio playback use\n             <a href=\"#!/api/android.media.AudioManager-method-requestAudioFocus\" rel=\"android.media.AudioManager-method-requestAudioFocus\" class=\"docClass\">requestAudioFocus</a>.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream to be soloed/unsoloed.</p>\n</div></li><li><span class='pre'>state</span> : Boolean<div class='sub-desc'><p>The required solo state: true for solo ON, false for solo\n            OFF\n@see <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>()</p>\n</div></li></ul></div></div></div><div id='method-setStreamVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setStreamVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setStreamVolume' class='name expandable'>setStreamVolume</a>( <span class='pre'>streamType, index, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the volume index for a particular stream. ...</div><div class='long'><p>Sets the volume index for a particular stream.\n <p>This method has no effect if the device implements a fixed volume policy\n as indicated by <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>().\n <p>From N onward, volume adjustments that would toggle Do Not Disturb are not allowed unless\n the app has been granted Do Not Disturb Access.\n See NotificationManager.isNotificationPolicyAccessGranted().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The stream whose volume index should be set.</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The volume index to set. See\n            getStreamMaxVolume(int) for the largest valid value.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>One or more flags.\n@see <a href=\"#!/api/android.media.AudioManager-method-getStreamMaxVolume\" rel=\"android.media.AudioManager-method-getStreamMaxVolume\" class=\"docClass\">getStreamMaxVolume</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getStreamVolume\" rel=\"android.media.AudioManager-method-getStreamVolume\" class=\"docClass\">getStreamVolume</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-isVolumeFixed\" rel=\"android.media.AudioManager-method-isVolumeFixed\" class=\"docClass\">isVolumeFixed</a>()</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if the volume change triggers a Do Not Disturb change\n   and the caller is not granted notification policy access.</p>\n</div></li></ul></div></div></div><div id='method-setSurroundFormatEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setSurroundFormatEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setSurroundFormatEnabled' class='name expandable'>setSurroundFormatEnabled</a>( <span class='pre'>audioFormat, enabled, enabled</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>audioFormat</span> : Number<div class='sub-desc'><p>a surround format, the value is one of\n        AudioFormat.ENCODING_AC3, AudioFormat.ENCODING_E_AC3,\n        AudioFormat.ENCODING_DTS, AudioFormat.ENCODING_DTS_HD,\n        AudioFormat.ENCODING_AAC_LC, AudioFormat.ENCODING_DOLBY_TRUEHD,\n        AudioFormat.ENCODING_E_AC3_JOC. Once AudioFormat.ENCODING_AAC_LC is\n        set as enabled, AudioFormat.ENCODING_AAC_LC,\n        AudioFormat.ENCODING_AAC_HE_V1, AudioFormat.ENCODING_AAC_HE_V2,\n        AudioFormat.ENCODING_AAC_ELD, AudioFormat.ENCODING_AAC_XHE are\n        all enabled.</p>\n</div></li><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>the required surround format state, true for enabled, false for disabled</p>\n</div></li><li><span class='pre'>enabled</span> : Object<div class='sub-desc'><p>the required surround format state, true for enabled, false for disabled</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if successful, otherwise false</p>\n</div></li></ul></div></div></div><div id='method-setVibrateSetting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setVibrateSetting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setVibrateSetting' class='name expandable'>setVibrateSetting</a>( <span class='pre'>vibrateType, vibrateSetting</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the setting for when the vibrate type should vibrate. ...</div><div class='long'><p>Sets the setting for when the vibrate type should vibrate.\n <p>\n This method should only be used by applications that replace the platform-wide\n management of audio settings or the main telephony application.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\n current ringer mode that can be queried via getRingerMode().</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>vibrateType</span> : Number<div class='sub-desc'><p>The type of vibrate. One of\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" class=\"docClass\">VIBRATE_TYPE_NOTIFICATION</a> or\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" class=\"docClass\">VIBRATE_TYPE_RINGER</a>.</p>\n</div></li><li><span class='pre'>vibrateSetting</span> : Number<div class='sub-desc'><p>The vibrate setting, one of\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ON\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_ON\" class=\"docClass\">VIBRATE_SETTING_ON</a>,\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_OFF\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_OFF\" class=\"docClass\">VIBRATE_SETTING_OFF</a>, or\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_SETTING_ONLY_SILENT\" rel=\"android.media.AudioManager-property-VIBRATE_SETTING_ONLY_SILENT\" class=\"docClass\">VIBRATE_SETTING_ONLY_SILENT</a>.\n@see <a href=\"#!/api/android.media.AudioManager-method-getVibrateSetting\" rel=\"android.media.AudioManager-method-getVibrateSetting\" class=\"docClass\">getVibrateSetting</a>(int)\n@see <a href=\"#!/api/android.media.AudioManager-method-shouldVibrate\" rel=\"android.media.AudioManager-method-shouldVibrate\" class=\"docClass\">shouldVibrate</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-setWiredDeviceConnectionState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setWiredDeviceConnectionState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setWiredDeviceConnectionState' class='name expandable'>setWiredDeviceConnectionState</a>( <span class='pre'>device, state, name</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate wired accessory connection state change. ...</div><div class='long'><p>Indicate wired accessory connection state change.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>device</span> : Number<div class='sub-desc'><p>type of device connected/disconnected (AudioManager.DEVICE_OUT_xxx)</p>\n</div></li><li><span class='pre'>state</span> : Number<div class='sub-desc'><p>new connection state: 1 connected, 0 disconnected</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>device name\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-setWiredHeadsetOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-setWiredHeadsetOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-setWiredHeadsetOn' class='name expandable'>setWiredHeadsetOn</a>( <span class='pre'>on</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets audio routing to the wired headset on or off. ...</div><div class='long'><p>Sets audio routing to the wired headset on or off.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Do not use.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>on</span> : Boolean<div class='sub-desc'><p>set <var>true</var> to route audio to/from wired\n           headset; <var>false</var> disable wired headset audio</p>\n</div></li></ul></div></div></div><div id='method-shouldVibrate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-shouldVibrate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-shouldVibrate' class='name expandable'>shouldVibrate</a>( <span class='pre'>vibrateType</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns whether a particular type should vibrate according to user\n settings and the current ringer mode. ...</div><div class='long'><p>Returns whether a particular type should vibrate according to user\n settings and the current ringer mode.\n <p>\n This shouldn't be needed by most clients that use notifications to\n vibrate. The notification manager will not vibrate if the policy doesn't\n allow it, so the client should always set a vibrate pattern and let the\n notification manager control whether or not to actually vibrate.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Applications should maintain their own vibrate policy based on\n current ringer mode that can be queried via getRingerMode().</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>vibrateType</span> : Number<div class='sub-desc'><p>The type of vibrate. One of\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_NOTIFICATION\" class=\"docClass\">VIBRATE_TYPE_NOTIFICATION</a> or\n            <a href=\"#!/api/android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" rel=\"android.media.AudioManager-property-VIBRATE_TYPE_RINGER\" class=\"docClass\">VIBRATE_TYPE_RINGER</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the type should vibrate at the instant this method is\n         called.\n@see <a href=\"#!/api/android.media.AudioManager-method-setVibrateSetting\" rel=\"android.media.AudioManager-method-setVibrateSetting\" class=\"docClass\">setVibrateSetting</a>(int, int)\n@see <a href=\"#!/api/android.media.AudioManager-method-getVibrateSetting\" rel=\"android.media.AudioManager-method-getVibrateSetting\" class=\"docClass\">getVibrateSetting</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-startBluetoothSco' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-startBluetoothSco' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-startBluetoothSco' class='name expandable'>startBluetoothSco</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Start bluetooth SCO audio connection. ...</div><div class='long'><p>Start bluetooth SCO audio connection.\n <p>Requires Permission:\n   android.Manifest.permission.MODIFY_AUDIO_SETTINGS.\n <p>This method can be used by applications wanting to send and received audio\n to/from a bluetooth SCO headset while the phone is not in call.\n <p>As the SCO connection establishment can take several seconds,\n applications should not rely on the connection to be available when the method\n returns but instead register to receive the intent <a href=\"#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" rel=\"android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" class=\"docClass\">ACTION_SCO_AUDIO_STATE_UPDATED</a>\n and wait for the state to be <a href=\"#!/api/android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTED\" rel=\"android.media.AudioManager-property-SCO_AUDIO_STATE_CONNECTED\" class=\"docClass\">SCO_AUDIO_STATE_CONNECTED</a>.\n <p>As the ACTION_SCO_AUDIO_STATE_UPDATED intent is sticky, the application can check the SCO\n audio state before calling startBluetoothSco() by reading the intent returned by the receiver\n registration. If the state is already CONNECTED, no state change will be received via the\n intent after calling startBluetoothSco(). It is however useful to call startBluetoothSco()\n so that the connection stays active in case the current initiator stops the connection.\n <p>Unless the connection is already active as described above, the state will always\n transition from DISCONNECTED to CONNECTING and then either to CONNECTED if the connection\n succeeds or back to DISCONNECTED if the connection fails (e.g no headset is connected).\n <p>When finished with the SCO connection or if the establishment fails, the application must\n call <a href=\"#!/api/android.media.AudioManager-method-stopBluetoothSco\" rel=\"android.media.AudioManager-method-stopBluetoothSco\" class=\"docClass\">stopBluetoothSco</a>() to clear the request and turn down the bluetooth connection.\n <p>Even if a SCO connection is established, the following restrictions apply on audio\n output streams so that they can be routed to SCO headset:\n <ul>\n   <li> the stream type must be <a href=\"#!/api/android.media.AudioManager-property-STREAM_VOICE_CALL\" rel=\"android.media.AudioManager-property-STREAM_VOICE_CALL\" class=\"docClass\">STREAM_VOICE_CALL</a> </li>\n   <li> the format must be mono </li>\n   <li> the sampling must be 16kHz or 8kHz </li>\n </ul>\n <p>The following restrictions apply on input streams:\n <ul>\n   <li> the format must be mono </li>\n   <li> the sampling must be 8kHz </li>\n </ul>\n <p>Note that the phone application always has the priority on the usage of the SCO\n connection for telephony. If this method is called while the phone is in call\n it will be ignored. Similarly, if a call is received or sent while an application\n is using the SCO connection, the connection will be lost for the application and NOT\n returned automatically when the call ends.\n <p>NOTE: up to and including API version\n android.os.Build.VERSION_CODES.JELLY_BEAN_MR1, this method initiates a virtual\n voice call to the bluetooth headset.\n After API version android.os.Build.VERSION_CODES.JELLY_BEAN_MR2 only a raw SCO audio\n connection is established.\n@see <a href=\"#!/api/android.media.AudioManager-method-stopBluetoothSco\" rel=\"android.media.AudioManager-method-stopBluetoothSco\" class=\"docClass\">stopBluetoothSco</a>()\n@see <a href=\"#!/api/android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" rel=\"android.media.AudioManager-property-ACTION_SCO_AUDIO_STATE_UPDATED\" class=\"docClass\">ACTION_SCO_AUDIO_STATE_UPDATED</a></p>\n</div></div></div><div id='method-stopBluetoothSco' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-stopBluetoothSco' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-stopBluetoothSco' class='name expandable'>stopBluetoothSco</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop bluetooth SCO audio connection. ...</div><div class='long'><p>Stop bluetooth SCO audio connection.\n <p>Requires Permission:\n   android.Manifest.permission.MODIFY_AUDIO_SETTINGS.\n <p>This method must be called by applications having requested the use of\n bluetooth SCO audio with <a href=\"#!/api/android.media.AudioManager-method-startBluetoothSco\" rel=\"android.media.AudioManager-method-startBluetoothSco\" class=\"docClass\">startBluetoothSco</a>() when finished with the SCO\n connection or if connection fails.\n@see <a href=\"#!/api/android.media.AudioManager-method-startBluetoothSco\" rel=\"android.media.AudioManager-method-startBluetoothSco\" class=\"docClass\">startBluetoothSco</a>()</p>\n</div></div></div><div id='method-unloadSoundEffects' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unloadSoundEffects' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unloadSoundEffects' class='name expandable'>unloadSoundEffects</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unload Sound effects. ...</div><div class='long'><p>Unload Sound effects.\n  This method can be called to free some memory when\n  sound effects are disabled.</p>\n</div></div></div><div id='method-unregisterAudioDeviceCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterAudioDeviceCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterAudioDeviceCallback' class='name expandable'>unregisterAudioDeviceCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters an android.media.AudioDeviceCallback object which has been previously registered\n to receive notification...</div><div class='long'><p>Unregisters an <a href=\"#!/api/android.media.AudioDeviceCallback\" rel=\"android.media.AudioDeviceCallback\" class=\"docClass\">android.media.AudioDeviceCallback</a> object which has been previously registered\n to receive notifications of changes to the set of connected audio devices.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {AudioDeviceCallback}<div class='sub-desc'><p>The AudioDeviceCallback object that was previously registered\n with AudioManager.registerAudioDeviceCallback to be unregistered.</p>\n</div></li></ul></div></div></div><div id='method-unregisterAudioFocusRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterAudioFocusRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterAudioFocusRequest' class='name expandable'>unregisterAudioFocusRequest</a>( <span class='pre'>l, l</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l</span> : Object {AudioManager.OnAudioFocusChangeListener}<div class='sub-desc'><p>the listener to unregister.</p>\n</div></li><li><span class='pre'>l</span> : Object<div class='sub-desc'><p>the listener to unregister.</p>\n</div></li></ul></div></div></div><div id='method-unregisterAudioPlaybackCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterAudioPlaybackCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterAudioPlaybackCallback' class='name expandable'>unregisterAudioPlaybackCallback</a>( <span class='pre'>cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregister an audio playback callback previously registered with\n Handler). ...</div><div class='long'><p>Unregister an audio playback callback previously registered with\n Handler).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {AudioManager.AudioPlaybackCallback}<div class='sub-desc'><p>non-null callback to unregister</p>\n</div></li></ul></div></div></div><div id='method-unregisterAudioPolicy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterAudioPolicy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterAudioPolicy' class='name expandable'>unregisterAudioPolicy</a>( <span class='pre'>policy, policy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>policy</span> : Object {AudioPolicy}<div class='sub-desc'><p>the non-null AudioPolicy to unregister.</p>\n</div></li><li><span class='pre'>policy</span> : Object<div class='sub-desc'><p>the non-null AudioPolicy to unregister.</p>\n</div></li></ul></div></div></div><div id='method-unregisterAudioPolicyAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterAudioPolicyAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterAudioPolicyAsync' class='name expandable'>unregisterAudioPolicyAsync</a>( <span class='pre'>policy, policy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>policy</span> : Object {AudioPolicy}<div class='sub-desc'><p>the non-null AudioPolicy to unregister.</p>\n</div></li><li><span class='pre'>policy</span> : Object<div class='sub-desc'><p>the non-null AudioPolicy to unregister.</p>\n</div></li></ul></div></div></div><div id='method-unregisterAudioRecordingCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterAudioRecordingCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterAudioRecordingCallback' class='name expandable'>unregisterAudioRecordingCallback</a>( <span class='pre'>cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregister an audio recording callback previously registered with\n Handler). ...</div><div class='long'><p>Unregister an audio recording callback previously registered with\n Handler).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {AudioManager.AudioRecordingCallback}<div class='sub-desc'><p>non-null callback to unregister</p>\n</div></li></ul></div></div></div><div id='method-unregisterMediaButtonEventReceiver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterMediaButtonEventReceiver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterMediaButtonEventReceiver' class='name expandable'>unregisterMediaButtonEventReceiver</a>( <span class='pre'>eventReceiver</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Unregister the receiver of MEDIA_BUTTON intents. ...</div><div class='long'><p>Unregister the receiver of MEDIA_BUTTON intents.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use MediaSession instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventReceiver</span> : Object {PendingIntent}<div class='sub-desc'><p>same PendingIntent that was registed with\n      registerMediaButtonEventReceiver(PendingIntent).</p>\n</div></li></ul></div></div></div><div id='method-unregisterRemoteControlClient' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterRemoteControlClient' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterRemoteControlClient' class='name expandable'>unregisterRemoteControlClient</a>( <span class='pre'>rcClient</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Unregisters the remote control client that was providing information to display on the\n remote controls. ...</div><div class='long'><p>Unregisters the remote control client that was providing information to display on the\n remote controls.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use MediaSession instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rcClient</span> : Object {RemoteControlClient}<div class='sub-desc'><p>The remote control client to unregister.\n@see <a href=\"#!/api/android.media.AudioManager-method-registerRemoteControlClient\" rel=\"android.media.AudioManager-method-registerRemoteControlClient\" class=\"docClass\">registerRemoteControlClient</a>(RemoteControlClient)</p>\n</div></li></ul></div></div></div><div id='method-unregisterRemoteController' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterRemoteController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterRemoteController' class='name expandable'>unregisterRemoteController</a>( <span class='pre'>rctlr</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Unregisters a android.media.RemoteController, causing it to no longer receive\n media metadata and playback state info...</div><div class='long'><p>Unregisters a <a href=\"#!/api/android.media.RemoteController\" rel=\"android.media.RemoteController\" class=\"docClass\">android.media.RemoteController</a>, causing it to no longer receive\n media metadata and playback state information, and no longer be capable\n of controlling playback.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use\n             MediaSessionManager.removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)\n             instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rctlr</span> : Object {RemoteController}<div class='sub-desc'><p>the object to unregister.</p>\n</div></li></ul></div></div></div><div id='method-unregisterVolumeGroupCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioManager'>android.media.AudioManager</span><br/><a href='source/AudioManager.html#android-media-AudioManager-method-unregisterVolumeGroupCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioManager-method-unregisterVolumeGroupCallback' class='name expandable'>unregisterVolumeGroupCallback</a>( <span class='pre'>callback, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {AudioManager.VolumeGroupCallback}<div class='sub-desc'><p>the VolumeGroupCallback to unregister</p>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'><p>the VolumeGroupCallback to unregister</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});