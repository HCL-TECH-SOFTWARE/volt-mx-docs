Ext.data.JsonP.android_media_Image_Plane({"tagname":"class","name":"android.media.Image.Plane","autodetected":{},"files":[{"filename":"Plane.js","href":"Plane.html#android-media-Image-Plane"}],"extends":"java.lang.Object","members":[{"name":"getBuffer","tagname":"method","owner":"android.media.Image.Plane","id":"method-getBuffer","meta":{}},{"name":"getPixelStride","tagname":"method","owner":"android.media.Image.Plane","id":"method-getPixelStride","meta":{}},{"name":"getRowStride","tagname":"method","owner":"android.media.Image.Plane","id":"method-getRowStride","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.Image.Plane","short_doc":"A single color plane of image data. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.Image.Plane</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Plane.html#android-media-Image-Plane' target='_blank'>Plane.js</a></div></pre><div class='doc-contents'><p>A single color plane of image data.</p>\n\n\n<p> <p>The number and meaning of the planes in an Image are determined by the\n format of the Image.</p></p>\n\n<p> <p>Once the Image has been closed, any access to the the plane's\n ByteBuffer will fail.</p></p>\n\n<p> @see #getFormat</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getBuffer' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.Image.Plane'>android.media.Image.Plane</span><br/><a href='source/Plane.html#android-media-Image-Plane-method-getBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.Image.Plane-method-getBuffer' class='name expandable'>getBuffer</a>( <span class='pre'></span> ) : Object {java.nio.ByteBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a direct ByteBuffer\n containing the frame data. ...</div><div class='long'><p>Get a direct ByteBuffer\n containing the frame data.</p>\n\n\n<p> <p>In particular, the buffer returned will always have\n isDirect return {@code true}, so\n the underlying data could be mapped as a pointer in JNI without doing\n any copies with {@code GetDirectBufferAddress}.</p></p>\n\n<p> <p>For raw formats, each plane is only guaranteed to contain data\n up to the last pixel in the last row. In other words, the stride\n after the last row may not be mapped into the buffer. This is a\n necessary requirement for any interleaved format.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.ByteBuffer}</span><div class='sub-desc'><p>the byte buffer containing the image data for this plane.</p>\n</div></li></ul></div></div></div><div id='method-getPixelStride' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.Image.Plane'>android.media.Image.Plane</span><br/><a href='source/Plane.html#android-media-Image-Plane-method-getPixelStride' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.Image.Plane-method-getPixelStride' class='name expandable'>getPixelStride</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The distance between adjacent pixel samples, in bytes. ...</div><div class='long'><p>The distance between adjacent pixel samples, in bytes.</p>\n\n\n<p> <p>This is the distance between two consecutive pixel values in a row\n of pixels. It may be larger than the size of a single pixel to\n account for interleaved image data or padded formats.\n Note that pixel stride is undefined for some formats such as\n RAW_PRIVATE,\n and calling getPixelStride on images of these formats will\n cause an UnsupportedOperationException being thrown.\n For formats where pixel stride is well defined, the pixel stride\n is always greater than 0.</p></p>\n</div></div></div><div id='method-getRowStride' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.Image.Plane'>android.media.Image.Plane</span><br/><a href='source/Plane.html#android-media-Image-Plane-method-getRowStride' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.Image.Plane-method-getRowStride' class='name expandable'>getRowStride</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The row stride for this color plane, in bytes. ...</div><div class='long'><p>The row stride for this color plane, in bytes.</p>\n\n\n<p> <p>This is the distance between the start of two consecutive rows of\n pixels in the image. Note that row stried is undefined for some formats\n such as\n RAW_PRIVATE,\n and calling getRowStride on images of these formats will\n cause an UnsupportedOperationException being thrown.\n For formats where row stride is well defined, the row stride\n is always greater than 0.</p></p>\n</div></div></div></div></div></div></div>","meta":{}});