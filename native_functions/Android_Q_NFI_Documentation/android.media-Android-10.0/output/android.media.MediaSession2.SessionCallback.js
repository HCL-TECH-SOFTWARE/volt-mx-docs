Ext.data.JsonP.android_media_MediaSession2_SessionCallback({"tagname":"class","name":"android.media.MediaSession2.SessionCallback","autodetected":{},"files":[{"filename":"SessionCallback.js","href":"SessionCallback.html#android-media-MediaSession2-SessionCallback"}],"extends":"java.lang.Object","members":[{"name":"onCommandResult","tagname":"method","owner":"android.media.MediaSession2.SessionCallback","id":"method-onCommandResult","meta":{}},{"name":"onConnect","tagname":"method","owner":"android.media.MediaSession2.SessionCallback","id":"method-onConnect","meta":{}},{"name":"onDisconnected","tagname":"method","owner":"android.media.MediaSession2.SessionCallback","id":"method-onDisconnected","meta":{}},{"name":"onPostConnect","tagname":"method","owner":"android.media.MediaSession2.SessionCallback","id":"method-onPostConnect","meta":{}},{"name":"onSessionCommand","tagname":"method","owner":"android.media.MediaSession2.SessionCallback","id":"method-onSessionCommand","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaSession2.SessionCallback","short_doc":"This API is not generally intended for third party application developers. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaSession2.SessionCallback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SessionCallback.html#android-media-MediaSession2-SessionCallback' target='_blank'>SessionCallback.js</a></div></pre><div class='doc-contents'><p>This API is not generally intended for third party application developers.\n Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n Library</a> for consistent behavior across all devices.\n <p>\n Callback to be called for all incoming commands from <a href=\"#!/api/android.media.MediaController2\" rel=\"android.media.MediaController2\" class=\"docClass\">android.media.MediaController2</a>s.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onCommandResult' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaSession2.SessionCallback'>android.media.MediaSession2.SessionCallback</span><br/><a href='source/SessionCallback.html#android-media-MediaSession2-SessionCallback-method-onCommandResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaSession2.SessionCallback-method-onCommandResult' class='name expandable'>onCommandResult</a>( <span class='pre'>session, controller, token, command, result</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the command sent to the controller is finished. ...</div><div class='long'><p>Called when the command sent to the controller is finished.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>session</span> : Object {MediaSession2}<div class='sub-desc'><p>the session for this event</p>\n</div></li><li><span class='pre'>controller</span> : Object {MediaSession2.ControllerInfo}<div class='sub-desc'><p>controller information</p>\n</div></li><li><span class='pre'>token</span> : Object {Object}<div class='sub-desc'><p>the token got from MediaSession2.sendSessionCommand</p>\n</div></li><li><span class='pre'>command</span> : Object {Session2Command}<div class='sub-desc'><p>the session command</p>\n</div></li><li><span class='pre'>result</span> : Object {Session2Command.Result}<div class='sub-desc'><p>the result of the session command</p>\n</div></li></ul></div></div></div><div id='method-onConnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaSession2.SessionCallback'>android.media.MediaSession2.SessionCallback</span><br/><a href='source/SessionCallback.html#android-media-MediaSession2-SessionCallback-method-onConnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaSession2.SessionCallback-method-onConnect' class='name expandable'>onConnect</a>( <span class='pre'>session, controller</span> ) : Object {android.media.Session2CommandGroup}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a controller is created for this session. ...</div><div class='long'><p>Called when a controller is created for this session. Return allowed commands for\n controller. By default it returns {@code null}.\n <p>\n You can reject the connection by returning {@code null}. In that case, controller\n receives android.media.MediaController2.ControllerCallback.onDisconnected(android.media.MediaController2)\n and cannot be used.\n <p>\n The controller hasn't connected yet in this method, so calls to the controller\n (e.g. sendSessionCommand) would be ignored. Override <a href=\"#!/api/android.media.MediaSession2.SessionCallback-method-onPostConnect\" rel=\"android.media.MediaSession2.SessionCallback-method-onPostConnect\" class=\"docClass\">onPostConnect</a> for\n the custom initialization for the controller instead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>session</span> : Object {MediaSession2}<div class='sub-desc'><p>the session for this event</p>\n</div></li><li><span class='pre'>controller</span> : Object {MediaSession2.ControllerInfo}<div class='sub-desc'><p>controller information.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.Session2CommandGroup}</span><div class='sub-desc'><p>allowed commands. Can be {@code null} to reject connection.</p>\n</div></li></ul></div></div></div><div id='method-onDisconnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaSession2.SessionCallback'>android.media.MediaSession2.SessionCallback</span><br/><a href='source/SessionCallback.html#android-media-MediaSession2-SessionCallback-method-onDisconnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaSession2.SessionCallback-method-onDisconnected' class='name expandable'>onDisconnected</a>( <span class='pre'>session, controller</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a controller is disconnected ...</div><div class='long'><p>Called when a controller is disconnected</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>session</span> : Object {MediaSession2}<div class='sub-desc'><p>the session for this event</p>\n</div></li><li><span class='pre'>controller</span> : Object {MediaSession2.ControllerInfo}<div class='sub-desc'><p>controller information</p>\n</div></li></ul></div></div></div><div id='method-onPostConnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaSession2.SessionCallback'>android.media.MediaSession2.SessionCallback</span><br/><a href='source/SessionCallback.html#android-media-MediaSession2-SessionCallback-method-onPostConnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaSession2.SessionCallback-method-onPostConnect' class='name expandable'>onPostConnect</a>( <span class='pre'>session, controller</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called immediately after a controller is connected. ...</div><div class='long'><p>Called immediately after a controller is connected. This is a convenient method to add\n custom initialization between the session and a controller.\n <p>\n Note that calls to the controller (e.g. sendSessionCommand) work here but don't\n work in <a href=\"#!/api/android.media.MediaSession2.SessionCallback-method-onConnect\" rel=\"android.media.MediaSession2.SessionCallback-method-onConnect\" class=\"docClass\">onConnect</a> because the controller hasn't connected yet in\n <a href=\"#!/api/android.media.MediaSession2.SessionCallback-method-onConnect\" rel=\"android.media.MediaSession2.SessionCallback-method-onConnect\" class=\"docClass\">onConnect</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>session</span> : Object {MediaSession2}<div class='sub-desc'><p>the session for this event</p>\n</div></li><li><span class='pre'>controller</span> : Object {MediaSession2.ControllerInfo}<div class='sub-desc'><p>controller information.</p>\n</div></li></ul></div></div></div><div id='method-onSessionCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaSession2.SessionCallback'>android.media.MediaSession2.SessionCallback</span><br/><a href='source/SessionCallback.html#android-media-MediaSession2-SessionCallback-method-onSessionCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaSession2.SessionCallback-method-onSessionCommand' class='name expandable'>onSessionCommand</a>( <span class='pre'>session, controller, command, args</span> ) : Object {android.media.Session2Command.Result}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a controller sent a session command. ...</div><div class='long'><p>Called when a controller sent a session command.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>session</span> : Object {MediaSession2}<div class='sub-desc'><p>the session for this event</p>\n</div></li><li><span class='pre'>controller</span> : Object {MediaSession2.ControllerInfo}<div class='sub-desc'><p>controller information</p>\n</div></li><li><span class='pre'>command</span> : Object {Session2Command}<div class='sub-desc'><p>the session command</p>\n</div></li><li><span class='pre'>args</span> : Object {Bundle}<div class='sub-desc'><p>optional arguments</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.Session2Command.Result}</span><div class='sub-desc'><p>the result for the session command. If {@code null}, RESULT_INFO_SKIPPED\n         will be sent to the session.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});