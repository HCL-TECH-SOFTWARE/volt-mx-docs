Ext.data.JsonP.android_media_MediaPlayer_OnTimedTextListener({"tagname":"class","name":"android.media.MediaPlayer.OnTimedTextListener","autodetected":{},"files":[{"filename":"OnTimedTextListener.js","href":"OnTimedTextListener.html#android-media-MediaPlayer-OnTimedTextListener"}],"members":[{"name":"onTimedText","tagname":"method","owner":"android.media.MediaPlayer.OnTimedTextListener","id":"method-onTimedText","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaPlayer.OnTimedTextListener","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnTimedTextListener.html#android-media-MediaPlayer-OnTimedTextListener' target='_blank'>OnTimedTextListener.js</a></div></pre><div class='doc-contents'><p>Interface definition of a callback to be invoked when a\n timed text is available for display.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onTimedText' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaPlayer.OnTimedTextListener'>android.media.MediaPlayer.OnTimedTextListener</span><br/><a href='source/OnTimedTextListener.html#android-media-MediaPlayer-OnTimedTextListener-method-onTimedText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaPlayer.OnTimedTextListener-method-onTimedText' class='name expandable'>onTimedText</a>( <span class='pre'>mp, text</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to indicate an avaliable timed text ...</div><div class='long'><p>Called to indicate an avaliable timed text</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mp</span> : Object {MediaPlayer}<div class='sub-desc'><p>the MediaPlayer associated with this callback</p>\n</div></li><li><span class='pre'>text</span> : Object {TimedText}<div class='sub-desc'><p>the timed text sample which contains the text\n                       needed to be displayed and the display format.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});