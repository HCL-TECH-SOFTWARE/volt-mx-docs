Ext.data.JsonP.android_media_MediaScanner({"tagname":"class","name":"android.media.MediaScanner","autodetected":{},"files":[{"filename":"MediaScanner.js","href":"MediaScanner.html#android-media-MediaScanner"}],"extends":"java.lang.Object","deprecated":{"text":"<p>this media scanner has served faithfully for many years, but it's\n             become tedious to test and maintain, mainly due to the way it\n             weaves obscurely between managed and native code. It's been\n             replaced by {@code ModernMediaScanner} in the\n             {@code MediaProvider} package.</p>\n"},"members":[{"name":"LAST_INTERNAL_SCAN_FINGERPRINT","tagname":"property","owner":"android.media.MediaScanner","id":"property-LAST_INTERNAL_SCAN_FINGERPRINT","meta":{}},{"name":"SCANNED_BUILD_PREFS_NAME","tagname":"property","owner":"android.media.MediaScanner","id":"property-SCANNED_BUILD_PREFS_NAME","meta":{}},{"name":"clearMediaPathCache","tagname":"method","owner":"android.media.MediaScanner","id":"method-clearMediaPathCache","meta":{}},{"name":"close","tagname":"method","owner":"android.media.MediaScanner","id":"method-close","meta":{}},{"name":"extractAlbumArt","tagname":"method","owner":"android.media.MediaScanner","id":"method-extractAlbumArt","meta":{}},{"name":"isNoMediaPath","tagname":"method","owner":"android.media.MediaScanner","id":"method-isNoMediaPath","meta":{}},{"name":"scanDirectories","tagname":"method","owner":"android.media.MediaScanner","id":"method-scanDirectories","meta":{}},{"name":"scanMtpFile","tagname":"method","owner":"android.media.MediaScanner","id":"method-scanMtpFile","meta":{}},{"name":"scanSingleFile","tagname":"method","owner":"android.media.MediaScanner","id":"method-scanSingleFile","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaScanner","short_doc":"implements java.lang.AutoCloseable\n\nInternal service helper that no-one should use directly. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaScanner</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaScanner.html#android-media-MediaScanner' target='_blank'>MediaScanner.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>Internal service helper that no-one should use directly.</p>\n\n<p> The way the scan currently works is:\n - The Java MediaScannerService creates a MediaScanner (this class), and calls\n   MediaScanner.scanDirectories on it.\n - scanDirectories() calls the native processDirectory() for each of the specified directories.\n - the processDirectory() JNI method wraps the provided mediascanner client in a native\n   'MyMediaScannerClient' class, then calls processDirectory() on the native MediaScanner\n   object (which got created when the Java MediaScanner was created).\n - native MediaScanner.processDirectory() calls\n   doProcessDirectory(), which recurses over the folder, and calls\n   native MyMediaScannerClient.scanFile() for every file whose extension matches.\n - native MyMediaScannerClient.scanFile() calls back on Java MediaScannerClient.scanFile,\n   which calls doScanFile, which after some setup calls back down to native code, calling\n   MediaScanner.processFile().\n - MediaScanner.processFile() calls one of several methods, depending on the type of the\n   file: parseMP3, parseMP4, parseMidi, parseOgg or parseWMA.\n - each of these methods gets metadata key/value pairs from the file, and repeatedly\n   calls native MyMediaScannerClient.handleStringTag, which calls back up to its Java\n   counterparts in this file.\n - Java handleStringTag() gathers the key/value pairs that it's interested in.\n - once processFile returns and we're back in Java code in doScanFile(), it calls\n   Java MyMediaScannerClient.endFile(), which takes all the data that's been\n   gathered and inserts an entry in to the database.</p>\n\n<p> In summary:\n Java MediaScannerService calls\n Java MediaScanner scanDirectories, which calls\n Java MediaScanner processDirectory (native method), which calls\n native MediaScanner processDirectory, which calls\n native MyMediaScannerClient scanFile, which calls\n Java MyMediaScannerClient scanFile, which calls\n Java MediaScannerClient doScanFile, which calls\n Java MediaScanner processFile (native method), which calls\n native MediaScanner processFile, which calls\n native parseMP3, parseMP4, parseMidi, parseOgg or parseWMA, which calls\n native MyMediaScanner handleStringTag, which calls\n Java MyMediaScanner handleStringTag.\n Once MediaScanner processFile returns, an entry is inserted in to the database.</p>\n\n<p> The MediaScanner class is not thread-safe, so it should only be used in a single threaded manner.</p>\n\n<p> {@hide}</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>this media scanner has served faithfully for many years, but it's\n             become tedious to test and maintain, mainly due to the way it\n             weaves obscurely between managed and native code. It's been\n             replaced by {@code ModernMediaScanner} in the\n             {@code MediaProvider} package.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-LAST_INTERNAL_SCAN_FINGERPRINT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-property-LAST_INTERNAL_SCAN_FINGERPRINT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-property-LAST_INTERNAL_SCAN_FINGERPRINT' class='name expandable'>LAST_INTERNAL_SCAN_FINGERPRINT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;lastScanFingerprint&quot;</code></p></div></div></div><div id='property-SCANNED_BUILD_PREFS_NAME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-property-SCANNED_BUILD_PREFS_NAME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-property-SCANNED_BUILD_PREFS_NAME' class='name expandable'>SCANNED_BUILD_PREFS_NAME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;MediaScanBuild&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clearMediaPathCache' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-method-clearMediaPathCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-method-clearMediaPathCache' class='name expandable'>clearMediaPathCache</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-extractAlbumArt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-method-extractAlbumArt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-method-extractAlbumArt' class='name expandable'>extractAlbumArt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-isNoMediaPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-method-isNoMediaPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-method-isNoMediaPath' class='name expandable'>isNoMediaPath</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-scanDirectories' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-method-scanDirectories' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-method-scanDirectories' class='name expandable'>scanDirectories</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-scanMtpFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-method-scanMtpFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-method-scanMtpFile' class='name expandable'>scanMtpFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-scanSingleFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaScanner'>android.media.MediaScanner</span><br/><a href='source/MediaScanner.html#android-media-MediaScanner-method-scanSingleFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaScanner-method-scanSingleFile' class='name expandable'>scanSingleFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>this media scanner has served faithfully for many years, but it's\n             become tedious to test and maintain, mainly due to the way it\n             weaves obscurely between managed and native code. It's been\n             replaced by {@code ModernMediaScanner} in the\n             {@code MediaProvider} package.</p>\n"}}});