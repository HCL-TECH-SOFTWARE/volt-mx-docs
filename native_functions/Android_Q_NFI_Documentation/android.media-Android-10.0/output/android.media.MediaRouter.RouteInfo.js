Ext.data.JsonP.android_media_MediaRouter_RouteInfo({"tagname":"class","name":"android.media.MediaRouter.RouteInfo","autodetected":{},"files":[{"filename":"RouteInfo.js","href":"RouteInfo.html#android-media-MediaRouter-RouteInfo"}],"extends":"java.lang.Object","members":[{"name":"DEVICE_TYPE_BLUETOOTH","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-DEVICE_TYPE_BLUETOOTH","meta":{}},{"name":"DEVICE_TYPE_SPEAKER","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-DEVICE_TYPE_SPEAKER","meta":{}},{"name":"DEVICE_TYPE_TV","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-DEVICE_TYPE_TV","meta":{}},{"name":"DEVICE_TYPE_UNKNOWN","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-DEVICE_TYPE_UNKNOWN","meta":{}},{"name":"PLAYBACK_TYPE_LOCAL","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-PLAYBACK_TYPE_LOCAL","meta":{}},{"name":"PLAYBACK_TYPE_REMOTE","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-PLAYBACK_TYPE_REMOTE","meta":{}},{"name":"PLAYBACK_VOLUME_FIXED","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-PLAYBACK_VOLUME_FIXED","meta":{}},{"name":"PLAYBACK_VOLUME_VARIABLE","tagname":"property","owner":"android.media.MediaRouter.RouteInfo","id":"property-PLAYBACK_VOLUME_VARIABLE","meta":{}},{"name":"getCategory","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getCategory","meta":{}},{"name":"getDescription","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getDescription","meta":{}},{"name":"getDeviceType","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getDeviceType","meta":{}},{"name":"getGroup","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getGroup","meta":{}},{"name":"getIconDrawable","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getIconDrawable","meta":{}},{"name":"getName","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getName","meta":{}},{"name":"getPlaybackStream","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getPlaybackStream","meta":{}},{"name":"getPlaybackType","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getPlaybackType","meta":{}},{"name":"getPresentationDisplay","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getPresentationDisplay","meta":{}},{"name":"getStatus","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getStatus","meta":{}},{"name":"getSupportedTypes","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getSupportedTypes","meta":{}},{"name":"getTag","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getTag","meta":{}},{"name":"getVolume","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getVolume","meta":{}},{"name":"getVolumeHandling","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getVolumeHandling","meta":{}},{"name":"getVolumeMax","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-getVolumeMax","meta":{}},{"name":"isConnecting","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-isConnecting","meta":{}},{"name":"isEnabled","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-isEnabled","meta":{}},{"name":"requestSetVolume","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-requestSetVolume","meta":{}},{"name":"requestUpdateVolume","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-requestUpdateVolume","meta":{}},{"name":"setTag","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-setTag","meta":{}},{"name":"toString","tagname":"method","owner":"android.media.MediaRouter.RouteInfo","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaRouter.RouteInfo","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.media.MediaRouter.RouteGroup","android.media.MediaRouter.UserRouteInfo"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaRouter.RouteInfo</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.media.MediaRouter.RouteGroup' rel='android.media.MediaRouter.RouteGroup' class='docClass'>android.media.MediaRouter.RouteGroup</a></div><div class='dependency'><a href='#!/api/android.media.MediaRouter.UserRouteInfo' rel='android.media.MediaRouter.UserRouteInfo' class='docClass'>android.media.MediaRouter.UserRouteInfo</a></div><h4>Files</h4><div class='dependency'><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo' target='_blank'>RouteInfo.js</a></div></pre><div class='doc-contents'><p>Information about a media route.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DEVICE_TYPE_BLUETOOTH' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-DEVICE_TYPE_BLUETOOTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_BLUETOOTH' class='name expandable'>DEVICE_TYPE_BLUETOOTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A receiver device type of the route indicating the presentation of the media is happening\non a bluetooth device such ...</div><div class='long'><p>A receiver device type of the route indicating the presentation of the media is happening\non a bluetooth device such as a bluetooth speaker.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getDeviceType\" rel=\"android.media.MediaRouter.RouteInfo-method-getDeviceType\" class=\"docClass\">getDeviceType</a></p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-DEVICE_TYPE_SPEAKER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-DEVICE_TYPE_SPEAKER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_SPEAKER' class='name expandable'>DEVICE_TYPE_SPEAKER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A receiver device type of the route indicating the presentation of the media is happening\non a speaker. ...</div><div class='long'><p>A receiver device type of the route indicating the presentation of the media is happening\non a speaker.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getDeviceType\" rel=\"android.media.MediaRouter.RouteInfo-method-getDeviceType\" class=\"docClass\">getDeviceType</a></p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-DEVICE_TYPE_TV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-DEVICE_TYPE_TV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_TV' class='name expandable'>DEVICE_TYPE_TV</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A receiver device type of the route indicating the presentation of the media is happening\non a TV. ...</div><div class='long'><p>A receiver device type of the route indicating the presentation of the media is happening\non a TV.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getDeviceType\" rel=\"android.media.MediaRouter.RouteInfo-method-getDeviceType\" class=\"docClass\">getDeviceType</a></p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-DEVICE_TYPE_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-DEVICE_TYPE_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_UNKNOWN' class='name expandable'>DEVICE_TYPE_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The default receiver device type of the route indicating the type is unknown. ...</div><div class='long'><p>The default receiver device type of the route indicating the type is unknown.</p>\n\n<p>@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getDeviceType\" rel=\"android.media.MediaRouter.RouteInfo-method-getDeviceType\" class=\"docClass\">getDeviceType</a></p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-PLAYBACK_TYPE_LOCAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-PLAYBACK_TYPE_LOCAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-PLAYBACK_TYPE_LOCAL' class='name expandable'>PLAYBACK_TYPE_LOCAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The default playback type, \"local\", indicating the presentation of the media is happening\non the same device (e&#46;g...</div><div class='long'><p>The default playback type, \"local\", indicating the presentation of the media is happening\non the same device (e&#46;g&#46; a phone, a tablet) as where it is controlled from.\n@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getPlaybackType\" rel=\"android.media.MediaRouter.RouteInfo-method-getPlaybackType\" class=\"docClass\">getPlaybackType</a>()</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-PLAYBACK_TYPE_REMOTE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-PLAYBACK_TYPE_REMOTE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-PLAYBACK_TYPE_REMOTE' class='name expandable'>PLAYBACK_TYPE_REMOTE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A playback type indicating the presentation of the media is happening on\na different device (i&#46;e&#46; the remote ...</div><div class='long'><p>A playback type indicating the presentation of the media is happening on\na different device (i&#46;e&#46; the remote device) than where it is controlled from.\n@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getPlaybackType\" rel=\"android.media.MediaRouter.RouteInfo-method-getPlaybackType\" class=\"docClass\">getPlaybackType</a>()</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-PLAYBACK_VOLUME_FIXED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-PLAYBACK_VOLUME_FIXED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-PLAYBACK_VOLUME_FIXED' class='name expandable'>PLAYBACK_VOLUME_FIXED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Playback information indicating the playback volume is fixed, i&#46;e&#46; it cannot be\ncontrolled from this object. ...</div><div class='long'><p>Playback information indicating the playback volume is fixed, i&#46;e&#46; it cannot be\ncontrolled from this object. An example of fixed playback volume is a remote player,\nplaying over HDMI where the user prefers to control the volume on the HDMI sink, rather\nthan attenuate at the source.\n@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getVolumeHandling\" rel=\"android.media.MediaRouter.RouteInfo-method-getVolumeHandling\" class=\"docClass\">getVolumeHandling</a>()</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-PLAYBACK_VOLUME_VARIABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-property-PLAYBACK_VOLUME_VARIABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-property-PLAYBACK_VOLUME_VARIABLE' class='name expandable'>PLAYBACK_VOLUME_VARIABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Playback information indicating the playback volume is variable and can be controlled\nfrom this object. ...</div><div class='long'><p>Playback information indicating the playback volume is variable and can be controlled\nfrom this object.\n@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-getVolumeHandling\" rel=\"android.media.MediaRouter.RouteInfo-method-getVolumeHandling\" class=\"docClass\">getVolumeHandling</a>()</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getCategory' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getCategory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getCategory' class='name expandable'>getCategory</a>( <span class='pre'></span> ) : Object {android.media.MediaRouter.RouteCategory}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.RouteCategory}</span><div class='sub-desc'><p>the category this route belongs to.</p>\n</div></li></ul></div></div></div><div id='method-getDescription' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getDescription' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getDescription' class='name expandable'>getDescription</a>( <span class='pre'></span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the user-visible description of the route. ...</div><div class='long'><p>Gets the user-visible description of the route.\n <p>\n The route description describes the kind of destination represented by the route.\n It may be a user-supplied string, a model number or brand of device.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>The description of the route, or null if none.</p>\n</div></li></ul></div></div></div><div id='method-getDeviceType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getDeviceType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getDeviceType' class='name expandable'>getDeviceType</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the type of the receiver device associated with this route. ...</div><div class='long'><p>Gets the type of the receiver device associated with this route.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The type of the receiver device associated with this route:\n <a href=\"#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_BLUETOOTH\" rel=\"android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_BLUETOOTH\" class=\"docClass\">DEVICE_TYPE_BLUETOOTH</a>, <a href=\"#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_TV\" rel=\"android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_TV\" class=\"docClass\">DEVICE_TYPE_TV</a>, <a href=\"#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_SPEAKER\" rel=\"android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_SPEAKER\" class=\"docClass\">DEVICE_TYPE_SPEAKER</a>,\n or <a href=\"#!/api/android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_UNKNOWN\" rel=\"android.media.MediaRouter.RouteInfo-property-DEVICE_TYPE_UNKNOWN\" class=\"docClass\">DEVICE_TYPE_UNKNOWN</a>.</p>\n</div></li></ul></div></div></div><div id='method-getGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getGroup' class='name expandable'>getGroup</a>( <span class='pre'></span> ) : Object {android.media.MediaRouter.RouteGroup}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.RouteGroup}</span><div class='sub-desc'><p>The group that this route belongs to.</p>\n</div></li></ul></div></div></div><div id='method-getIconDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getIconDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getIconDrawable' class='name expandable'>getIconDrawable</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the icon representing this route. ...</div><div class='long'><p>Get the icon representing this route.\n This icon will be used in picker UIs if available.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>the icon representing this route or null if no icon is available</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getName' class='name expandable'>getName</a>( <span class='pre'>context</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the properly localized/resource user-visible name of this route. ...</div><div class='long'><p>Return the properly localized/resource user-visible name of this route.\n <p>\n The route name identifies the destination represented by the route.\n It may be a user-supplied name, an alias, or device serial number.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>Context used to resolve the correct configuration to load</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>The user-visible name of a media route.  This is the string presented\n to users who may select this as the active route.</p>\n</div></li></ul></div></div></div><div id='method-getPlaybackStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getPlaybackStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getPlaybackStream' class='name expandable'>getPlaybackStream</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the stream over which the playback associated with this route is performed\n@see UserRouteInfo#setPlaybackStream(int)</p>\n</div></li></ul></div></div></div><div id='method-getPlaybackType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getPlaybackType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getPlaybackType' class='name expandable'>getPlaybackType</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the type of playback associated with this route\n@see UserRouteInfo#setPlaybackType(int)</p>\n</div></li></ul></div></div></div><div id='method-getPresentationDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getPresentationDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getPresentationDisplay' class='name expandable'>getPresentationDisplay</a>( <span class='pre'></span> ) : Object {android.view.Display}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the Display that should be used by the application to show\n a android.app.Presentation on an external display wh...</div><div class='long'><p>Gets the Display that should be used by the application to show\n a android.app.Presentation on an external display when this route is selected.\n Depending on the route, this may only be valid if the route is currently\n selected.\n <p>\n The preferred presentation display may change independently of the route\n being selected or unselected.  For example, the presentation display\n of the default system route may change when an external HDMI display is connected\n or disconnected even though the route itself has not changed.\n </p><p>\n This method may return null if there is no external display associated with\n the route or if the display is not ready to show UI yet.\n </p><p>\n The application should listen for changes to the presentation display\n using the android.media.MediaCodec.Callback.onRoutePresentationDisplayChanged callback and\n show or dismiss its android.app.Presentation accordingly when the display\n becomes available or is removed.\n </p><p>\n This method only makes sense for live video routes.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.Display}</span><div class='sub-desc'><p>The preferred presentation display to use when this route is\n selected or null if none.\n@see #ROUTE_TYPE_LIVE_VIDEO\n@see android.app.Presentation</p>\n</div></li></ul></div></div></div><div id='method-getStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getStatus' class='name expandable'>getStatus</a>( <span class='pre'></span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>The user-visible status for a media route. This may include a description\n of the currently playing media, if available.</p>\n</div></li></ul></div></div></div><div id='method-getSupportedTypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getSupportedTypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getSupportedTypes' class='name expandable'>getSupportedTypes</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A media type flag set describing which types this route supports.</p>\n</div></li></ul></div></div></div><div id='method-getTag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getTag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getTag' class='name expandable'>getTag</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>The tag object previously set by the application\n@see <a href=\"#!/api/android.media.MediaRouter.RouteInfo-method-setTag\" rel=\"android.media.MediaRouter.RouteInfo-method-setTag\" class=\"docClass\">setTag</a>(Object)</p>\n</div></li></ul></div></div></div><div id='method-getVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getVolume' class='name expandable'>getVolume</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the current volume for this route. ...</div><div class='long'><p>Return the current volume for this route. Depending on the route, this may only\n be valid if the route is currently selected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the volume at which the playback associated with this route is performed\n@see UserRouteInfo#setVolume(int)</p>\n</div></li></ul></div></div></div><div id='method-getVolumeHandling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getVolumeHandling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getVolumeHandling' class='name expandable'>getVolumeHandling</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>how volume is handling on the route\n@see UserRouteInfo#setVolumeHandling(int)</p>\n</div></li></ul></div></div></div><div id='method-getVolumeMax' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-getVolumeMax' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-getVolumeMax' class='name expandable'>getVolumeMax</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the maximum volume at which the playback associated with this route is performed\n@see UserRouteInfo#setVolumeMax(int)</p>\n</div></li></ul></div></div></div><div id='method-isConnecting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-isConnecting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-isConnecting' class='name expandable'>isConnecting</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the route is in the process of connecting and is not\n yet ready for use. ...</div><div class='long'><p>Returns true if the route is in the process of connecting and is not\n yet ready for use.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this route is in the process of connecting.</p>\n</div></li></ul></div></div></div><div id='method-isEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-isEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-isEnabled' class='name expandable'>isEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this route is enabled and may be selected. ...</div><div class='long'><p>Returns true if this route is enabled and may be selected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this route is enabled.</p>\n</div></li></ul></div></div></div><div id='method-requestSetVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-requestSetVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-requestSetVolume' class='name expandable'>requestSetVolume</a>( <span class='pre'>volume</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request a volume change for this route. ...</div><div class='long'><p>Request a volume change for this route.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>volume</span> : Number<div class='sub-desc'><p>value between 0 and getVolumeMax</p>\n</div></li></ul></div></div></div><div id='method-requestUpdateVolume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-requestUpdateVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-requestUpdateVolume' class='name expandable'>requestUpdateVolume</a>( <span class='pre'>direction</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request an incremental volume update for this route. ...</div><div class='long'><p>Request an incremental volume update for this route.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>direction</span> : Number<div class='sub-desc'><p>Delta to apply to the current volume</p>\n</div></li></ul></div></div></div><div id='method-setTag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-setTag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-setTag' class='name expandable'>setTag</a>( <span class='pre'>tag</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set an application-specific tag object for this route. ...</div><div class='long'><p>Set an application-specific tag object for this route.\n The application may use this to store arbitrary data associated with the\n route for internal tracking.</p>\n\n<p> <p>Note that the lifespan of a route may be well past the lifespan of\n an Activity or other Context; take care that objects you store here\n will not keep more data in memory alive than you intend.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tag</span> : Object {Object}<div class='sub-desc'><p>Arbitrary, app-specific data for this route to hold for later use</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter.RouteInfo'>android.media.MediaRouter.RouteInfo</span><br/><a href='source/RouteInfo.html#android-media-MediaRouter-RouteInfo-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter.RouteInfo-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});