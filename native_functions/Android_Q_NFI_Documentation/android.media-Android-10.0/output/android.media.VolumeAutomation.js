Ext.data.JsonP.android_media_VolumeAutomation({"tagname":"class","name":"android.media.VolumeAutomation","autodetected":{},"files":[{"filename":"VolumeAutomation.js","href":"VolumeAutomation.html#android-media-VolumeAutomation"}],"members":[{"name":"createVolumeShaper","tagname":"method","owner":"android.media.VolumeAutomation","id":"method-createVolumeShaper","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.VolumeAutomation","short_doc":"{@code VolumeAutomation} defines an interface for automatic volume control\n of android.media.AudioTrack and android.m...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/VolumeAutomation.html#android-media-VolumeAutomation' target='_blank'>VolumeAutomation.js</a></div></pre><div class='doc-contents'><p>{@code VolumeAutomation} defines an interface for automatic volume control\n of <a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a> and <a href=\"#!/api/android.media.MediaPlayer\" rel=\"android.media.MediaPlayer\" class=\"docClass\">android.media.MediaPlayer</a> objects.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createVolumeShaper' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.VolumeAutomation'>android.media.VolumeAutomation</span><br/><a href='source/VolumeAutomation.html#android-media-VolumeAutomation-method-createVolumeShaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.VolumeAutomation-method-createVolumeShaper' class='name expandable'>createVolumeShaper</a>( <span class='pre'>configuration</span> ) : Object {android.media.VolumeShaper}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a android.media.VolumeShaper object that can be used modify the volume envelope\n of the player or track. ...</div><div class='long'><p>Returns a <a href=\"#!/api/android.media.VolumeShaper\" rel=\"android.media.VolumeShaper\" class=\"docClass\">android.media.VolumeShaper</a> object that can be used modify the volume envelope\n of the player or track.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>configuration</span> : Object {VolumeShaper.Configuration}<div class='sub-desc'><p>the configuration\n        that specifies the curve and duration to use.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.VolumeShaper}</span><div class='sub-desc'><p>a {@code VolumeShaper} object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the {@code configuration} is not allowed by the player.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if too many {@code VolumeShaper}s are requested\n         or the state of the player does not permit its creation (e.g. player is released).</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});