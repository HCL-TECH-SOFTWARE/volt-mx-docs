Ext.data.JsonP.android_media_MediaController2_ControllerCallback({"tagname":"class","name":"android.media.MediaController2.ControllerCallback","autodetected":{},"files":[{"filename":"ControllerCallback.js","href":"ControllerCallback.html#android-media-MediaController2-ControllerCallback"}],"extends":"java.lang.Object","members":[{"name":"onCommandResult","tagname":"method","owner":"android.media.MediaController2.ControllerCallback","id":"method-onCommandResult","meta":{}},{"name":"onConnected","tagname":"method","owner":"android.media.MediaController2.ControllerCallback","id":"method-onConnected","meta":{}},{"name":"onDisconnected","tagname":"method","owner":"android.media.MediaController2.ControllerCallback","id":"method-onDisconnected","meta":{}},{"name":"onPlaybackActiveChanged","tagname":"method","owner":"android.media.MediaController2.ControllerCallback","id":"method-onPlaybackActiveChanged","meta":{}},{"name":"onSessionCommand","tagname":"method","owner":"android.media.MediaController2.ControllerCallback","id":"method-onSessionCommand","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaController2.ControllerCallback","short_doc":"This API is not generally intended for third party application developers. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaController2.ControllerCallback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ControllerCallback.html#android-media-MediaController2-ControllerCallback' target='_blank'>ControllerCallback.js</a></div></pre><div class='doc-contents'><p>This API is not generally intended for third party application developers.\n Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n Library</a> for consistent behavior across all devices.\n <p>\n Interface for listening to change in activeness of the <a href=\"#!/api/android.media.MediaSession2\" rel=\"android.media.MediaSession2\" class=\"docClass\">android.media.MediaSession2</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onCommandResult' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2.ControllerCallback'>android.media.MediaController2.ControllerCallback</span><br/><a href='source/ControllerCallback.html#android-media-MediaController2-ControllerCallback-method-onCommandResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2.ControllerCallback-method-onCommandResult' class='name expandable'>onCommandResult</a>( <span class='pre'>controller, token, command, result</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the command sent to the connected session is finished. ...</div><div class='long'><p>Called when the command sent to the connected session is finished.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {MediaController2}<div class='sub-desc'><p>the controller for this event</p>\n</div></li><li><span class='pre'>token</span> : Object {Object}<div class='sub-desc'><p>the token got from MediaController2.sendSessionCommand</p>\n</div></li><li><span class='pre'>command</span> : Object {Session2Command}<div class='sub-desc'><p>the session command</p>\n</div></li><li><span class='pre'>result</span> : Object {Session2Command.Result}<div class='sub-desc'><p>the result of the session command</p>\n</div></li></ul></div></div></div><div id='method-onConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2.ControllerCallback'>android.media.MediaController2.ControllerCallback</span><br/><a href='source/ControllerCallback.html#android-media-MediaController2-ControllerCallback-method-onConnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2.ControllerCallback-method-onConnected' class='name expandable'>onConnected</a>( <span class='pre'>controller, allowedCommands</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the controller is successfully connected to the session. ...</div><div class='long'><p>Called when the controller is successfully connected to the session. The controller\n becomes available afterwards.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {MediaController2}<div class='sub-desc'><p>the controller for this event</p>\n</div></li><li><span class='pre'>allowedCommands</span> : Object {Session2CommandGroup}<div class='sub-desc'><p>commands that's allowed by the session.</p>\n</div></li></ul></div></div></div><div id='method-onDisconnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2.ControllerCallback'>android.media.MediaController2.ControllerCallback</span><br/><a href='source/ControllerCallback.html#android-media-MediaController2-ControllerCallback-method-onDisconnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2.ControllerCallback-method-onDisconnected' class='name expandable'>onDisconnected</a>( <span class='pre'>controller</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the session refuses the controller or the controller is disconnected from\n the session. ...</div><div class='long'><p>Called when the session refuses the controller or the controller is disconnected from\n the session. The controller becomes unavailable afterwards and the callback wouldn't\n be called.\n <p>\n It will be also called after the close(), so you can put clean up code here.\n You don't need to call close() after this.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {MediaController2}<div class='sub-desc'><p>the controller for this event</p>\n</div></li></ul></div></div></div><div id='method-onPlaybackActiveChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2.ControllerCallback'>android.media.MediaController2.ControllerCallback</span><br/><a href='source/ControllerCallback.html#android-media-MediaController2-ControllerCallback-method-onPlaybackActiveChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2.ControllerCallback-method-onPlaybackActiveChanged' class='name expandable'>onPlaybackActiveChanged</a>( <span class='pre'>controller, playbackActive</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the session's playback activeness is changed. ...</div><div class='long'><p>Called when the session's playback activeness is changed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {MediaController2}<div class='sub-desc'><p>the controller for this event</p>\n</div></li><li><span class='pre'>playbackActive</span> : Boolean<div class='sub-desc'><p>{@code true} if the session's playback is active.\n                       {@code false} otherwise.\n@see MediaController2#isPlaybackActive()</p>\n</div></li></ul></div></div></div><div id='method-onSessionCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaController2.ControllerCallback'>android.media.MediaController2.ControllerCallback</span><br/><a href='source/ControllerCallback.html#android-media-MediaController2-ControllerCallback-method-onSessionCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaController2.ControllerCallback-method-onSessionCommand' class='name expandable'>onSessionCommand</a>( <span class='pre'>controller, command, args</span> ) : Object {android.media.Session2Command.Result}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the connected session sent a session command. ...</div><div class='long'><p>Called when the connected session sent a session command.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {MediaController2}<div class='sub-desc'><p>the controller for this event</p>\n</div></li><li><span class='pre'>command</span> : Object {Session2Command}<div class='sub-desc'><p>the session command</p>\n</div></li><li><span class='pre'>args</span> : Object {Bundle}<div class='sub-desc'><p>optional arguments</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.Session2Command.Result}</span><div class='sub-desc'><p>the result for the session command. If {@code null}, RESULT_INFO_SKIPPED\n         will be sent to the session.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});