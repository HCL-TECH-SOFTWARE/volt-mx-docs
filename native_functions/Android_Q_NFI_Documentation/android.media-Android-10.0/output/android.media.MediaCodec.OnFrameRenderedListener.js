Ext.data.JsonP.android_media_MediaCodec_OnFrameRenderedListener({"tagname":"class","name":"android.media.MediaCodec.OnFrameRenderedListener","autodetected":{},"files":[{"filename":"OnFrameRenderedListener.js","href":"OnFrameRenderedListener.html#android-media-MediaCodec-OnFrameRenderedListener"}],"members":[{"name":"onFrameRendered","tagname":"method","owner":"android.media.MediaCodec.OnFrameRenderedListener","id":"method-onFrameRendered","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaCodec.OnFrameRenderedListener","short_doc":"Listener to be called when an output frame has rendered on the output surface\n\n @see MediaCodec#setOnFrameRenderedLis...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnFrameRenderedListener.html#android-media-MediaCodec-OnFrameRenderedListener' target='_blank'>OnFrameRenderedListener.js</a></div></pre><div class='doc-contents'><p>Listener to be called when an output frame has rendered on the output surface</p>\n\n<p> @see MediaCodec#setOnFrameRenderedListener</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onFrameRendered' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaCodec.OnFrameRenderedListener'>android.media.MediaCodec.OnFrameRenderedListener</span><br/><a href='source/OnFrameRenderedListener.html#android-media-MediaCodec-OnFrameRenderedListener-method-onFrameRendered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaCodec.OnFrameRenderedListener-method-onFrameRendered' class='name expandable'>onFrameRendered</a>( <span class='pre'>codec, presentationTimeUs, nanoTime</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an output frame has rendered on the output surface. ...</div><div class='long'><p>Called when an output frame has rendered on the output surface.\n <p>\n <strong>Note:</strong> This callback is for informational purposes only: to get precise\n render timing samples, and can be significantly delayed and batched. Some frames may have\n been rendered even if there was no callback generated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>codec</span> : Object {MediaCodec}<div class='sub-desc'><p>the MediaCodec instance</p>\n</div></li><li><span class='pre'>presentationTimeUs</span> : Number<div class='sub-desc'><p>the presentation time (media time) of the frame rendered.\n          This is usually the same as specified in queueInputBuffer; however,\n          some codecs may alter the media time by applying some time-based transformation,\n          such as frame rate conversion. In that case, presentation time corresponds\n          to the actual output frame rendered.</p>\n</div></li><li><span class='pre'>nanoTime</span> : Number<div class='sub-desc'><p>The system time when the frame was rendered.\n@see System#nanoTime</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});