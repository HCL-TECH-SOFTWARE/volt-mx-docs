Ext.data.JsonP.android_media_MediaRouter({"tagname":"class","name":"android.media.MediaRouter","autodetected":{},"files":[{"filename":"MediaRouter.js","href":"MediaRouter.html#android-media-MediaRouter"}],"extends":"java.lang.Object","members":[{"name":"CALLBACK_FLAG_PERFORM_ACTIVE_SCAN","tagname":"property","owner":"android.media.MediaRouter","id":"property-CALLBACK_FLAG_PERFORM_ACTIVE_SCAN","meta":{}},{"name":"CALLBACK_FLAG_UNFILTERED_EVENTS","tagname":"property","owner":"android.media.MediaRouter","id":"property-CALLBACK_FLAG_UNFILTERED_EVENTS","meta":{}},{"name":"ROUTE_TYPE_LIVE_AUDIO","tagname":"property","owner":"android.media.MediaRouter","id":"property-ROUTE_TYPE_LIVE_AUDIO","meta":{}},{"name":"ROUTE_TYPE_LIVE_VIDEO","tagname":"property","owner":"android.media.MediaRouter","id":"property-ROUTE_TYPE_LIVE_VIDEO","meta":{}},{"name":"ROUTE_TYPE_USER","tagname":"property","owner":"android.media.MediaRouter","id":"property-ROUTE_TYPE_USER","meta":{}},{"name":"addCallback","tagname":"method","owner":"android.media.MediaRouter","id":"method-addCallback","meta":{}},{"name":"addUserRoute","tagname":"method","owner":"android.media.MediaRouter","id":"method-addUserRoute","meta":{}},{"name":"clearUserRoutes","tagname":"method","owner":"android.media.MediaRouter","id":"method-clearUserRoutes","meta":{}},{"name":"createRouteCategory","tagname":"method","owner":"android.media.MediaRouter","id":"method-createRouteCategory","meta":{}},{"name":"createUserRoute","tagname":"method","owner":"android.media.MediaRouter","id":"method-createUserRoute","meta":{}},{"name":"getCategoryAt","tagname":"method","owner":"android.media.MediaRouter","id":"method-getCategoryAt","meta":{}},{"name":"getCategoryCount","tagname":"method","owner":"android.media.MediaRouter","id":"method-getCategoryCount","meta":{}},{"name":"getDefaultRoute","tagname":"method","owner":"android.media.MediaRouter","id":"method-getDefaultRoute","meta":{}},{"name":"getRouteAt","tagname":"method","owner":"android.media.MediaRouter","id":"method-getRouteAt","meta":{}},{"name":"getRouteCount","tagname":"method","owner":"android.media.MediaRouter","id":"method-getRouteCount","meta":{}},{"name":"getSelectedRoute","tagname":"method","owner":"android.media.MediaRouter","id":"method-getSelectedRoute","meta":{}},{"name":"removeCallback","tagname":"method","owner":"android.media.MediaRouter","id":"method-removeCallback","meta":{}},{"name":"removeUserRoute","tagname":"method","owner":"android.media.MediaRouter","id":"method-removeUserRoute","meta":{}},{"name":"selectRoute","tagname":"method","owner":"android.media.MediaRouter","id":"method-selectRoute","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaRouter","short_doc":"MediaRouter allows applications to control the routing of media channels\n and streams from the current device to exte...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.MediaRouter</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaRouter.html#android-media-MediaRouter' target='_blank'>MediaRouter.js</a></div></pre><div class='doc-contents'><p>MediaRouter allows applications to control the routing of media channels\n and streams from the current device to external speakers and destination devices.</p>\n\n<p> <p>A MediaRouter is retrieved through Context.getSystemService() of a Context.MEDIA_ROUTER_SERVICE.</p>\n\n<p> <p>The media router API is not thread-safe; all interactions with it must be\n done from the main thread of the process.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CALLBACK_FLAG_PERFORM_ACTIVE_SCAN' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-property-CALLBACK_FLAG_PERFORM_ACTIVE_SCAN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-property-CALLBACK_FLAG_PERFORM_ACTIVE_SCAN' class='name expandable'>CALLBACK_FLAG_PERFORM_ACTIVE_SCAN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for addCallback: Actively scan for routes while this callback\nis registered. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.media.MediaRouter-method-addCallback\" rel=\"android.media.MediaRouter-method-addCallback\" class=\"docClass\">addCallback</a>: Actively scan for routes while this callback\nis registered.</p>\n\n<p>\nWhen this flag is specified, the media router will actively scan for new\nroutes.  Certain routes, such as wifi display routes, may not be discoverable\nexcept when actively scanning.  This flag is typically used when the route picker\ndialog has been opened by the user to ensure that the route information is\nup to date.\n</p>\n\n\n<p>\nActive scanning may consume a significant amount of power and may have intrusive\neffects on wireless connectivity.  Therefore it is important that active scanning\nonly be requested when it is actually needed to satisfy a user request to\ndiscover and select a new route.\n</p>\n\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-CALLBACK_FLAG_UNFILTERED_EVENTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-property-CALLBACK_FLAG_UNFILTERED_EVENTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-property-CALLBACK_FLAG_UNFILTERED_EVENTS' class='name expandable'>CALLBACK_FLAG_UNFILTERED_EVENTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for addCallback: Do not filter route events. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.media.MediaRouter-method-addCallback\" rel=\"android.media.MediaRouter-method-addCallback\" class=\"docClass\">addCallback</a>: Do not filter route events.</p>\n\n<p>\nWhen this flag is specified, the callback will be invoked for event that affect any\nroute even if they do not match the callback's filter.\n</p>\n\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-ROUTE_TYPE_LIVE_AUDIO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-property-ROUTE_TYPE_LIVE_AUDIO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-property-ROUTE_TYPE_LIVE_AUDIO' class='name expandable'>ROUTE_TYPE_LIVE_AUDIO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Route type flag for live audio. ...</div><div class='long'><p>Route type flag for live audio.</p>\n\n<p>A device that supports live audio routing will allow the media audio stream\nto be routed to supported destinations. This can include internal speakers or\naudio jacks on the device itself, A2DP devices, and more.</p>\n\n\n\n\n<p>Once initiated this routing is transparent to the application. All audio\nplayed on the media stream will be routed to the selected destination.</p>\n\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-ROUTE_TYPE_LIVE_VIDEO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-property-ROUTE_TYPE_LIVE_VIDEO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-property-ROUTE_TYPE_LIVE_VIDEO' class='name expandable'>ROUTE_TYPE_LIVE_VIDEO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Route type flag for live video. ...</div><div class='long'><p>Route type flag for live video.</p>\n\n<p>A device that supports live video routing will allow a mirrored version\nof the device's primary display or a customized\nPresentation to be routed to supported destinations.</p>\n\n\n\n\n<p>Once initiated, display mirroring is transparent to the application.\nWhile remote routing is active the application may use a\nPresentation to replace the mirrored view\non the external display with different content.</p>\n\n\n<p>@see RouteInfo#getPresentationDisplay()\n@see android.app.Presentation</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-ROUTE_TYPE_USER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-property-ROUTE_TYPE_USER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-property-ROUTE_TYPE_USER' class='name expandable'>ROUTE_TYPE_USER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Route type flag for application-specific usage. ...</div><div class='long'><p>Route type flag for application-specific usage.</p>\n\n<p>Unlike other media route types, user routes are managed by the application.\nThe MediaRouter will manage and dispatch events for user routes, but the application\nis expected to interpret the meaning of these events and perform the requested\nrouting tasks.</p>\n\n<p>Defaults to: <code>&quot;8388608&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addCallback' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-addCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-addCallback' class='name expandable'>addCallback</a>( <span class='pre'>types, cb, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a callback to listen to events about specific kinds of media routes. ...</div><div class='long'><p>Add a callback to listen to events about specific kinds of media routes.\n If the specified callback is already registered, its registration will be updated for any\n additional route types specified.\n <p>\n By default, the callback will only be invoked for events that affect routes\n that match the specified selector.  The filtering may be disabled by specifying\n the <a href=\"#!/api/android.media.MediaRouter-property-CALLBACK_FLAG_UNFILTERED_EVENTS\" rel=\"android.media.MediaRouter-property-CALLBACK_FLAG_UNFILTERED_EVENTS\" class=\"docClass\">CALLBACK_FLAG_UNFILTERED_EVENTS</a> flag.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>types</span> : Number<div class='sub-desc'><p>Types of routes this callback is interested in</p>\n</div></li><li><span class='pre'>cb</span> : Object {MediaRouter.Callback}<div class='sub-desc'><p>Callback to add</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Flags to control the behavior of the callback.\n May be zero or a combination of <a href=\"#!/api/android.media.MediaRouter-property-CALLBACK_FLAG_PERFORM_ACTIVE_SCAN\" rel=\"android.media.MediaRouter-property-CALLBACK_FLAG_PERFORM_ACTIVE_SCAN\" class=\"docClass\">CALLBACK_FLAG_PERFORM_ACTIVE_SCAN</a> and\n <a href=\"#!/api/android.media.MediaRouter-property-CALLBACK_FLAG_UNFILTERED_EVENTS\" rel=\"android.media.MediaRouter-property-CALLBACK_FLAG_UNFILTERED_EVENTS\" class=\"docClass\">CALLBACK_FLAG_UNFILTERED_EVENTS</a>.</p>\n</div></li></ul></div></div></div><div id='method-addUserRoute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-addUserRoute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-addUserRoute' class='name expandable'>addUserRoute</a>( <span class='pre'>info</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add an app-specified route for media to the MediaRouter. ...</div><div class='long'><p>Add an app-specified route for media to the MediaRouter.\n App-specified route definitions are created using <a href=\"#!/api/android.media.MediaRouter-method-createUserRoute\" rel=\"android.media.MediaRouter-method-createUserRoute\" class=\"docClass\">createUserRoute</a>(RouteCategory)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>info</span> : Object {MediaRouter.UserRouteInfo}<div class='sub-desc'><p>Definition of the route to add\n@see <a href=\"#!/api/android.media.MediaRouter-method-createUserRoute\" rel=\"android.media.MediaRouter-method-createUserRoute\" class=\"docClass\">createUserRoute</a>(RouteCategory)\n@see <a href=\"#!/api/android.media.MediaRouter-method-removeUserRoute\" rel=\"android.media.MediaRouter-method-removeUserRoute\" class=\"docClass\">removeUserRoute</a>(UserRouteInfo)</p>\n</div></li></ul></div></div></div><div id='method-clearUserRoutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-clearUserRoutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-clearUserRoutes' class='name expandable'>clearUserRoutes</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove all app-specified routes from the MediaRouter. ...</div><div class='long'><p>Remove all app-specified routes from the MediaRouter.\n@see <a href=\"#!/api/android.media.MediaRouter-method-removeUserRoute\" rel=\"android.media.MediaRouter-method-removeUserRoute\" class=\"docClass\">removeUserRoute</a>(UserRouteInfo)</p>\n</div></div></div><div id='method-createRouteCategory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-createRouteCategory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-createRouteCategory' class='name expandable'>createRouteCategory</a>( <span class='pre'>nameResId, isGroupable</span> ) : Object {android.media.MediaRouter.RouteCategory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new route category. ...</div><div class='long'><p>Create a new route category. Each route must belong to a category.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nameResId</span> : Number<div class='sub-desc'><p>Resource ID of the name of the new category</p>\n</div></li><li><span class='pre'>isGroupable</span> : Boolean<div class='sub-desc'><p>true if routes in this category may be grouped with one another</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.RouteCategory}</span><div class='sub-desc'><p>the new RouteCategory</p>\n</div></li></ul></div></div></div><div id='method-createUserRoute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-createUserRoute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-createUserRoute' class='name expandable'>createUserRoute</a>( <span class='pre'>category</span> ) : Object {android.media.MediaRouter.UserRouteInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new user route that may be modified and registered for use by the application. ...</div><div class='long'><p>Create a new user route that may be modified and registered for use by the application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>category</span> : Object {MediaRouter.RouteCategory}<div class='sub-desc'><p>The category the new route will belong to</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.UserRouteInfo}</span><div class='sub-desc'><p>A new UserRouteInfo for use by the application\n@see <a href=\"#!/api/android.media.MediaRouter-method-addUserRoute\" rel=\"android.media.MediaRouter-method-addUserRoute\" class=\"docClass\">addUserRoute</a>(UserRouteInfo)\n@see <a href=\"#!/api/android.media.MediaRouter-method-removeUserRoute\" rel=\"android.media.MediaRouter-method-removeUserRoute\" class=\"docClass\">removeUserRoute</a>(UserRouteInfo)\n@see <a href=\"#!/api/android.media.MediaRouter-method-createRouteCategory\" rel=\"android.media.MediaRouter-method-createRouteCategory\" class=\"docClass\">createRouteCategory</a>(CharSequence, boolean)</p>\n</div></li></ul></div></div></div><div id='method-getCategoryAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-getCategoryAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-getCategoryAt' class='name expandable'>getCategoryAt</a>( <span class='pre'>index</span> ) : Object {android.media.MediaRouter.RouteCategory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the category at the given index. ...</div><div class='long'><p>Return the <a href=\"#!/api/android.media.MediaRouter.RouteCategory\" rel=\"android.media.MediaRouter.RouteCategory\" class=\"docClass\">category</a> at the given index.\n Valid indices are in the range [0-getCategoryCount).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>which category to return</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.RouteCategory}</span><div class='sub-desc'><p>the category at index</p>\n</div></li></ul></div></div></div><div id='method-getCategoryCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-getCategoryCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-getCategoryCount' class='name expandable'>getCategoryCount</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the number of categories currently\n represented by routes known to this MediaRouter. ...</div><div class='long'><p>Return the number of <a href=\"#!/api/android.media.MediaRouter.RouteCategory\" rel=\"android.media.MediaRouter.RouteCategory\" class=\"docClass\">categories</a> currently\n represented by routes known to this MediaRouter.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of unique categories represented by this MediaRouter's known routes</p>\n</div></li></ul></div></div></div><div id='method-getDefaultRoute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-getDefaultRoute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-getDefaultRoute' class='name expandable'>getDefaultRoute</a>( <span class='pre'></span> ) : Object {android.media.MediaRouter.RouteInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the default route for playing media content on the system. ...</div><div class='long'><p>Gets the default route for playing media content on the system.\n <p>\n The system always provides a default route.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.RouteInfo}</span><div class='sub-desc'><p>The default route, which is guaranteed to never be null.</p>\n</div></li></ul></div></div></div><div id='method-getRouteAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-getRouteAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-getRouteAt' class='name expandable'>getRouteAt</a>( <span class='pre'>index</span> ) : Object {android.media.MediaRouter.RouteInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the route at the specified index. ...</div><div class='long'><p>Return the route at the specified index.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>index of the route to return</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.RouteInfo}</span><div class='sub-desc'><p>the route at index</p>\n</div></li></ul></div></div></div><div id='method-getRouteCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-getRouteCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-getRouteCount' class='name expandable'>getRouteCount</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the number of routes currently known\n to this MediaRouter. ...</div><div class='long'><p>Return the number of <a href=\"#!/api/android.media.MediaRouter.RouteInfo\" rel=\"android.media.MediaRouter.RouteInfo\" class=\"docClass\">routes</a> currently known\n to this MediaRouter.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of routes tracked by this router</p>\n</div></li></ul></div></div></div><div id='method-getSelectedRoute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-getSelectedRoute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-getSelectedRoute' class='name expandable'>getSelectedRoute</a>( <span class='pre'>type</span> ) : Object {android.media.MediaRouter.RouteInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the currently selected route for any of the given types ...</div><div class='long'><p>Return the currently selected route for any of the given types</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>route types</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaRouter.RouteInfo}</span><div class='sub-desc'><p>the selected route</p>\n</div></li></ul></div></div></div><div id='method-removeCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-removeCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-removeCallback' class='name expandable'>removeCallback</a>( <span class='pre'>cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove the specified callback. ...</div><div class='long'><p>Remove the specified callback. It will no longer receive events about media routing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {MediaRouter.Callback}<div class='sub-desc'><p>Callback to remove</p>\n</div></li></ul></div></div></div><div id='method-removeUserRoute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-removeUserRoute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-removeUserRoute' class='name expandable'>removeUserRoute</a>( <span class='pre'>info</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove an app-specified route for media from the MediaRouter. ...</div><div class='long'><p>Remove an app-specified route for media from the MediaRouter.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>info</span> : Object {MediaRouter.UserRouteInfo}<div class='sub-desc'><p>Definition of the route to remove\n@see <a href=\"#!/api/android.media.MediaRouter-method-addUserRoute\" rel=\"android.media.MediaRouter-method-addUserRoute\" class=\"docClass\">addUserRoute</a>(UserRouteInfo)</p>\n</div></li></ul></div></div></div><div id='method-selectRoute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaRouter'>android.media.MediaRouter</span><br/><a href='source/MediaRouter.html#android-media-MediaRouter-method-selectRoute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaRouter-method-selectRoute' class='name expandable'>selectRoute</a>( <span class='pre'>types, route</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Select the specified route to use for output of the given media types. ...</div><div class='long'><p>Select the specified route to use for output of the given media types.\n <p class=\"note\">\n As API version 18, this function may be used to select any route.\n In prior versions, this function could only be used to select user\n routes and would ignore any attempt to select a system route.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>types</span> : Number<div class='sub-desc'><p>type flags indicating which types this route should be used for.\n              The route must support at least a subset.</p>\n</div></li><li><span class='pre'>route</span> : Object {MediaRouter.RouteInfo}<div class='sub-desc'><p>Route to select</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the given route is {@code null}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});