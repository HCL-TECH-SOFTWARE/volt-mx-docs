Ext.data.JsonP.android_media_AudioTrack_StreamEventCallback({"tagname":"class","name":"android.media.AudioTrack.StreamEventCallback","autodetected":{},"files":[{"filename":"StreamEventCallback.js","href":"StreamEventCallback.html#android-media-AudioTrack-StreamEventCallback"}],"extends":"java.lang.Object","members":[{"name":"onDataRequest","tagname":"method","owner":"android.media.AudioTrack.StreamEventCallback","id":"method-onDataRequest","meta":{}},{"name":"onPresentationEnded","tagname":"method","owner":"android.media.AudioTrack.StreamEventCallback","id":"method-onPresentationEnded","meta":{}},{"name":"onTearDown","tagname":"method","owner":"android.media.AudioTrack.StreamEventCallback","id":"method-onTearDown","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.AudioTrack.StreamEventCallback","short_doc":"Abstract class to receive event notifications about the stream playback in offloaded mode. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.AudioTrack.StreamEventCallback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/StreamEventCallback.html#android-media-AudioTrack-StreamEventCallback' target='_blank'>StreamEventCallback.js</a></div></pre><div class='doc-contents'><p>Abstract class to receive event notifications about the stream playback in offloaded mode.\n See android.media.AudioTrack.StreamEventCallback) to register\n the callback on the given <a href=\"#!/api/android.media.AudioTrack\" rel=\"android.media.AudioTrack\" class=\"docClass\">android.media.AudioTrack</a> instance.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onDataRequest' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack.StreamEventCallback'>android.media.AudioTrack.StreamEventCallback</span><br/><a href='source/StreamEventCallback.html#android-media-AudioTrack-StreamEventCallback-method-onDataRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack.StreamEventCallback-method-onDataRequest' class='name expandable'>onDataRequest</a>( <span class='pre'>track, sizeInFrames</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when more audio data can be written without blocking on an offloaded track. ...</div><div class='long'><p>Called when more audio data can be written without blocking on an offloaded track.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>track</span> : Object {AudioTrack}<div class='sub-desc'><p>the AudioTrack on which the event happened.</p>\n</div></li><li><span class='pre'>sizeInFrames</span> : Number<div class='sub-desc'><p>the number of frames available to write without blocking.\n   Note that the frame size of a compressed stream is 1 byte.</p>\n</div></li></ul></div></div></div><div id='method-onPresentationEnded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack.StreamEventCallback'>android.media.AudioTrack.StreamEventCallback</span><br/><a href='source/StreamEventCallback.html#android-media-AudioTrack-StreamEventCallback-method-onPresentationEnded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack.StreamEventCallback-method-onPresentationEnded' class='name expandable'>onPresentationEnded</a>( <span class='pre'>track</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when all the buffers of an offloaded track that were queued in the audio system\n (e.g. ...</div><div class='long'><p>Called when all the buffers of an offloaded track that were queued in the audio system\n (e.g. the combination of the Android audio framework and the device's audio hardware)\n have been played after android.media.AudioTrack.stop() has been called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>track</span> : Object {AudioTrack}<div class='sub-desc'><p>the AudioTrack on which the event happened.</p>\n</div></li></ul></div></div></div><div id='method-onTearDown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.AudioTrack.StreamEventCallback'>android.media.AudioTrack.StreamEventCallback</span><br/><a href='source/StreamEventCallback.html#android-media-AudioTrack-StreamEventCallback-method-onTearDown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.AudioTrack.StreamEventCallback-method-onTearDown' class='name expandable'>onTearDown</a>( <span class='pre'>track</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an offloaded track is no longer valid and has been discarded by the system. ...</div><div class='long'><p>Called when an offloaded track is no longer valid and has been discarded by the system.\n An example of this happening is when an offloaded track has been paused too long, and\n gets invalidated by the system to prevent any other offload.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>track</span> : Object {AudioTrack}<div class='sub-desc'><p>the AudioTrack on which the event happened.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});