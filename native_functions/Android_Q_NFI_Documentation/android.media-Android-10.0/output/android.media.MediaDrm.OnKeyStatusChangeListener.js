Ext.data.JsonP.android_media_MediaDrm_OnKeyStatusChangeListener({"tagname":"class","name":"android.media.MediaDrm.OnKeyStatusChangeListener","autodetected":{},"files":[{"filename":"OnKeyStatusChangeListener.js","href":"OnKeyStatusChangeListener.html#android-media-MediaDrm-OnKeyStatusChangeListener"}],"members":[{"name":"onKeyStatusChange","tagname":"method","owner":"android.media.MediaDrm.OnKeyStatusChangeListener","id":"method-onKeyStatusChange","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.MediaDrm.OnKeyStatusChangeListener","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnKeyStatusChangeListener.html#android-media-MediaDrm-OnKeyStatusChangeListener' target='_blank'>OnKeyStatusChangeListener.js</a></div></pre><div class='doc-contents'><p>Interface definition for a callback to be invoked when the keys in a drm\n session change states.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onKeyStatusChange' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.MediaDrm.OnKeyStatusChangeListener'>android.media.MediaDrm.OnKeyStatusChangeListener</span><br/><a href='source/OnKeyStatusChangeListener.html#android-media-MediaDrm-OnKeyStatusChangeListener-method-onKeyStatusChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.MediaDrm.OnKeyStatusChangeListener-method-onKeyStatusChange' class='name expandable'>onKeyStatusChange</a>( <span class='pre'>md, sessionId, keyInformation, hasNewUsableKey</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the keys in a session change status, such as when the license\n is renewed or expires. ...</div><div class='long'><p>Called when the keys in a session change status, such as when the license\n is renewed or expires.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>md</span> : Object {MediaDrm}<div class='sub-desc'><p>the MediaDrm object on which the event occurred</p>\n</div></li><li><span class='pre'>sessionId</span> : Object {byte[]}<div class='sub-desc'><p>the DRM session ID on which the event occurred</p>\n</div></li><li><span class='pre'>keyInformation</span> : Object {java.util.List}<div class='sub-desc'><p>a list of MediaDrm.KeyStatus\n     instances indicating the status for each key in the session</p>\n</div></li><li><span class='pre'>hasNewUsableKey</span> : Boolean<div class='sub-desc'><p>indicates if a key has been added that is usable,\n     which may trigger an attempt to resume playback on the media stream\n     if it is currently blocked waiting for a key.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});