Ext.data.JsonP.android_hardware_camera2_CameraManager({"tagname":"class","name":"android.hardware.camera2.CameraManager","autodetected":{},"files":[{"filename":"CameraManager.js","href":"CameraManager.html#android-hardware-camera2-CameraManager"}],"extends":"java.lang.Object","members":[{"name":"getCameraCharacteristics","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-getCameraCharacteristics","meta":{}},{"name":"getCameraIdList","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-getCameraIdList","meta":{}},{"name":"openCamera","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-openCamera","meta":{}},{"name":"registerAvailabilityCallback","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-registerAvailabilityCallback","meta":{}},{"name":"registerTorchCallback","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-registerTorchCallback","meta":{}},{"name":"setTorchMode","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-setTorchMode","meta":{}},{"name":"unregisterAvailabilityCallback","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-unregisterAvailabilityCallback","meta":{}},{"name":"unregisterTorchCallback","tagname":"method","owner":"android.hardware.camera2.CameraManager","id":"method-unregisterTorchCallback","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.CameraManager","short_doc":"A system service manager for detecting, characterizing, and connecting to\n android.hardware.camera2.CameraDevices. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.CameraManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CameraManager.html#android-hardware-camera2-CameraManager' target='_blank'>CameraManager.js</a></div></pre><div class='doc-contents'><p>A system service manager for detecting, characterizing, and connecting to\n <a href=\"#!/api/android.hardware.camera2.CameraDevice\" rel=\"android.hardware.camera2.CameraDevice\" class=\"docClass\">android.hardware.camera2.CameraDevices</a>.</p>\n\n\n<p> <p>For more details about communicating with camera devices, read the Camera\n developer guide or the camera2\n package documentation.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getCameraCharacteristics' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-getCameraCharacteristics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-getCameraCharacteristics' class='name expandable'>getCameraCharacteristics</a>( <span class='pre'>cameraId</span> ) : Object {android.hardware.camera2.CameraCharacteristics}<span class=\"signature\"></span></div><div class='description'><div class='short'>Query the capabilities of a camera device. ...</div><div class='long'><p>Query the capabilities of a camera device. These capabilities are\n immutable for a given camera.</p>\n\n\n<p> <p>From API level 29, this function can also be used to query the capabilities of physical\n cameras that can only be used as part of logical multi-camera. These cameras cannot be\n opened directly via <a href=\"#!/api/android.hardware.camera2.CameraManager-method-openCamera\" rel=\"android.hardware.camera2.CameraManager-method-openCamera\" class=\"docClass\">openCamera</a></p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cameraId</span> : String<div class='sub-desc'><p>The id of the camera device to query. This could be either a standalone\n camera ID which can be directly opened by <a href=\"#!/api/android.hardware.camera2.CameraManager-method-openCamera\" rel=\"android.hardware.camera2.CameraManager-method-openCamera\" class=\"docClass\">openCamera</a>, or a physical camera ID that\n can only used as part of a logical multi-camera.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.CameraCharacteristics}</span><div class='sub-desc'><p>The properties of the given camera</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the cameraId does not match any\n         known camera device.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if the camera device has been disconnected.\n@see <a href=\"#!/api/android.hardware.camera2.CameraManager-method-getCameraIdList\" rel=\"android.hardware.camera2.CameraManager-method-getCameraIdList\" class=\"docClass\">getCameraIdList</a>\n@see android.app.admin.DevicePolicyManager#setCameraDisabled</p>\n</div></li></ul></div></div></div><div id='method-getCameraIdList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-getCameraIdList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-getCameraIdList' class='name expandable'>getCameraIdList</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the list of currently connected camera devices by identifier, including\n cameras that may be in use by other c...</div><div class='long'><p>Return the list of currently connected camera devices by identifier, including\n cameras that may be in use by other camera API clients.</p>\n\n<p> <p>Non-removable cameras use integers starting at 0 for their\n identifiers, while removable cameras have a unique identifier for each\n individual device, even if they are the same model.</p></p>\n\n<p> <p>This list doesn't contain physical cameras that can only be used as part of a logical\n multi-camera device.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The list of currently connected camera devices.</p>\n</div></li></ul></div></div></div><div id='method-openCamera' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-openCamera' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-openCamera' class='name expandable'>openCamera</a>( <span class='pre'>cameraId, executor, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Open a connection to a camera with the given ID. ...</div><div class='long'><p>Open a connection to a camera with the given ID.</p>\n\n<p> <p>The behavior of this method matches that of\n android.hardware.camera2.CameraCaptureSession.StateCallback, Handler), except that it uses\n java.util.concurrent.Executor as an argument instead of\n android.os.Handler.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cameraId</span> : String<div class='sub-desc'><p>The unique identifier of the camera device to open</p>\n</div></li><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>The executor which will be used when invoking the callback.</p>\n</div></li><li><span class='pre'>callback</span> : Object {CameraDevice.StateCallback}<div class='sub-desc'><p>The callback which is invoked once the camera is opened</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if the camera is disabled by device policy,\n has been disconnected, or is being used by a higher-priority camera API client.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if cameraId, the callback or the executor was null,\n or the cameraId does not match any currently or previously available\n camera device.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if the application does not have permission to\n access the camera\n@see <a href=\"#!/api/android.hardware.camera2.CameraManager-method-getCameraIdList\" rel=\"android.hardware.camera2.CameraManager-method-getCameraIdList\" class=\"docClass\">getCameraIdList</a>\n@see android.app.admin.DevicePolicyManager#setCameraDisabled</p>\n</div></li></ul></div></div></div><div id='method-registerAvailabilityCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-registerAvailabilityCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-registerAvailabilityCallback' class='name expandable'>registerAvailabilityCallback</a>( <span class='pre'>executor, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to be notified about camera device availability. ...</div><div class='long'><p>Register a callback to be notified about camera device availability.</p>\n\n<p> <p>The behavior of this method matches that of\n Handler),\n except that it uses java.util.concurrent.Executor as an argument\n instead of android.os.Handler.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>The executor which will be used to invoke the callback.</p>\n</div></li><li><span class='pre'>callback</span> : Object {CameraManager.AvailabilityCallback}<div class='sub-desc'><p>the new callback to send camera availability notices to</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the executor is {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-registerTorchCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-registerTorchCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-registerTorchCallback' class='name expandable'>registerTorchCallback</a>( <span class='pre'>executor, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register a callback to be notified about torch mode status. ...</div><div class='long'><p>Register a callback to be notified about torch mode status.</p>\n\n<p> <p>The behavior of this method matches that of\n Handler),\n except that it uses java.util.concurrent.Executor as an argument\n instead of android.os.Handler.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>The executor which will be used to invoke the callback</p>\n</div></li><li><span class='pre'>callback</span> : Object {CameraManager.TorchCallback}<div class='sub-desc'><p>The new callback to send torch mode status to</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the executor is {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-setTorchMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-setTorchMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-setTorchMode' class='name expandable'>setTorchMode</a>( <span class='pre'>cameraId, enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the flash unit's torch mode of the camera of the given ID without opening the camera\n device. ...</div><div class='long'><p>Set the flash unit's torch mode of the camera of the given ID without opening the camera\n device.</p>\n\n<p> <p>Use <a href=\"#!/api/android.hardware.camera2.CameraManager-method-getCameraIdList\" rel=\"android.hardware.camera2.CameraManager-method-getCameraIdList\" class=\"docClass\">getCameraIdList</a> to get the list of available camera devices and use\n <a href=\"#!/api/android.hardware.camera2.CameraManager-method-getCameraCharacteristics\" rel=\"android.hardware.camera2.CameraManager-method-getCameraCharacteristics\" class=\"docClass\">getCameraCharacteristics</a> to check whether the camera device has a flash unit.\n Note that even if a camera device has a flash unit, turning on the torch mode may fail\n if the camera device or other camera resources needed to turn on the torch mode are in use.\n </p></p>\n\n<p> <p> If <a href=\"#!/api/android.hardware.camera2.CameraManager-method-setTorchMode\" rel=\"android.hardware.camera2.CameraManager-method-setTorchMode\" class=\"docClass\">setTorchMode</a> is called to turn on or off the torch mode successfully,\n <a href=\"#!/api/android.hardware.camera2.CameraManager.TorchCallback-method-onTorchModeChanged\" rel=\"android.hardware.camera2.CameraManager.TorchCallback-method-onTorchModeChanged\" class=\"docClass\">android.hardware.camera2.CameraManager.TorchCallback.onTorchModeChanged</a> will be invoked.\n However, even if turning on the torch mode is successful, the application does not have the\n exclusive ownership of the flash unit or the camera device. The torch mode will be turned\n off and becomes unavailable when the camera device that the flash unit belongs to becomes\n unavailable or when other camera resources to keep the torch on become unavailable (\n <a href=\"#!/api/android.hardware.camera2.CameraManager.TorchCallback-method-onTorchModeUnavailable\" rel=\"android.hardware.camera2.CameraManager.TorchCallback-method-onTorchModeUnavailable\" class=\"docClass\">android.hardware.camera2.CameraManager.TorchCallback.onTorchModeUnavailable</a> will be invoked). Also,\n other applications are free to call <a href=\"#!/api/android.hardware.camera2.CameraManager-method-setTorchMode\" rel=\"android.hardware.camera2.CameraManager-method-setTorchMode\" class=\"docClass\">setTorchMode</a> to turn off the torch mode (\n <a href=\"#!/api/android.hardware.camera2.CameraManager.TorchCallback-method-onTorchModeChanged\" rel=\"android.hardware.camera2.CameraManager.TorchCallback-method-onTorchModeChanged\" class=\"docClass\">android.hardware.camera2.CameraManager.TorchCallback.onTorchModeChanged</a> will be invoked). If the latest\n application that turned on the torch mode exits, the torch mode will be turned off.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cameraId</span> : String<div class='sub-desc'><p>The unique identifier of the camera device that the flash unit belongs to.</p>\n</div></li><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>The desired state of the torch mode for the target camera device. Set to\n             {@code true} to turn on the torch mode. Set to {@code false} to turn off the\n             torch mode.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if it failed to access the flash unit.\n             CameraAccessException.CAMERA_IN_USE will be thrown if the camera device\n             is in use. CameraAccessException.MAX_CAMERAS_IN_USE will be thrown if\n             other camera resources needed to turn on the torch mode are in use.\n             CameraAccessException.CAMERA_DISCONNECTED will be thrown if camera\n             service is not available.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if cameraId was null, cameraId doesn't match any currently\n             or previously available camera device, or the camera device doesn't have a\n             flash unit.</p>\n</div></li></ul></div></div></div><div id='method-unregisterAvailabilityCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-unregisterAvailabilityCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-unregisterAvailabilityCallback' class='name expandable'>unregisterAvailabilityCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove a previously-added callback; the callback will no longer receive connection and\n disconnection callbacks. ...</div><div class='long'><p>Remove a previously-added callback; the callback will no longer receive connection and\n disconnection callbacks.</p>\n\n<p> <p>Removing a callback that isn't registered has no effect.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {CameraManager.AvailabilityCallback}<div class='sub-desc'><p>The callback to remove from the notification list</p>\n</div></li></ul></div></div></div><div id='method-unregisterTorchCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraManager'>android.hardware.camera2.CameraManager</span><br/><a href='source/CameraManager.html#android-hardware-camera2-CameraManager-method-unregisterTorchCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraManager-method-unregisterTorchCallback' class='name expandable'>unregisterTorchCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove a previously-added callback; the callback will no longer receive torch mode status\n callbacks. ...</div><div class='long'><p>Remove a previously-added callback; the callback will no longer receive torch mode status\n callbacks.</p>\n\n<p> <p>Removing a callback that isn't registered has no effect.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {CameraManager.TorchCallback}<div class='sub-desc'><p>The callback to remove from the notification list</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});