Ext.data.JsonP.android_hardware_camera2_CameraDevice({"tagname":"class","name":"android.hardware.camera2.CameraDevice","autodetected":{},"files":[{"filename":"CameraDevice.js","href":"CameraDevice.html#android-hardware-camera2-CameraDevice"}],"extends":"java.lang.Object","members":[{"name":"TEMPLATE_MANUAL","tagname":"property","owner":"android.hardware.camera2.CameraDevice","id":"property-TEMPLATE_MANUAL","meta":{}},{"name":"TEMPLATE_PREVIEW","tagname":"property","owner":"android.hardware.camera2.CameraDevice","id":"property-TEMPLATE_PREVIEW","meta":{}},{"name":"TEMPLATE_RECORD","tagname":"property","owner":"android.hardware.camera2.CameraDevice","id":"property-TEMPLATE_RECORD","meta":{}},{"name":"TEMPLATE_STILL_CAPTURE","tagname":"property","owner":"android.hardware.camera2.CameraDevice","id":"property-TEMPLATE_STILL_CAPTURE","meta":{}},{"name":"TEMPLATE_VIDEO_SNAPSHOT","tagname":"property","owner":"android.hardware.camera2.CameraDevice","id":"property-TEMPLATE_VIDEO_SNAPSHOT","meta":{}},{"name":"TEMPLATE_ZERO_SHUTTER_LAG","tagname":"property","owner":"android.hardware.camera2.CameraDevice","id":"property-TEMPLATE_ZERO_SHUTTER_LAG","meta":{}},{"name":"close","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-close","meta":{}},{"name":"createCaptureRequest","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-createCaptureRequest","meta":{}},{"name":"createCaptureSession","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-createCaptureSession","meta":{}},{"name":"createCaptureSessionByOutputConfigurations","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-createCaptureSessionByOutputConfigurations","meta":{}},{"name":"createConstrainedHighSpeedCaptureSession","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-createConstrainedHighSpeedCaptureSession","meta":{}},{"name":"createReprocessCaptureRequest","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-createReprocessCaptureRequest","meta":{}},{"name":"createReprocessableCaptureSession","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-createReprocessableCaptureSession","meta":{}},{"name":"createReprocessableCaptureSessionByConfigurations","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-createReprocessableCaptureSessionByConfigurations","meta":{}},{"name":"getId","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-getId","meta":{}},{"name":"isSessionConfigurationSupported","tagname":"method","owner":"android.hardware.camera2.CameraDevice","id":"method-isSessionConfigurationSupported","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.CameraDevice","short_doc":"implements java.lang.AutoCloseable\n\nThe CameraDevice class is a representation of a single camera connected to an\n An...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.CameraDevice</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice' target='_blank'>CameraDevice.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>The CameraDevice class is a representation of a single camera connected to an\n Android device, allowing for fine-grain control of image capture and\n post-processing at high frame rates.</p>\n\n\n<p> <p>Your application must declare the\n Camera permission in its manifest\n in order to access camera devices.</p></p>\n\n<p> <p>A given camera device may provide support at one of several levels defined\n in <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" rel=\"android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL</a>.\n If a device supports <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY\" class=\"docClass\">LEGACY</a> level,\n the camera device is running in backward compatibility mode and has minimum camera2 API support.\n If a device supports the <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" class=\"docClass\">LIMITED</a>\n level, then Camera2 exposes a feature set that is roughly equivalent to the older\n Camera API, although with a cleaner and more\n efficient interface.\n If a device supports the <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_EXTERNAL\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_EXTERNAL\" class=\"docClass\">EXTERNAL</a>\n level, then the device is a removable camera that provides similar but slightly less features\n as the <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" class=\"docClass\">LIMITED</a> level.\n Devices that implement the <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" class=\"docClass\">FULL</a> or\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_3\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_3\" class=\"docClass\">LEVEL3</a> level of support\n provide substantially improved capabilities over the older camera\n API. If your application requires a full-level device for\n proper operation, declare the \"android.hardware.camera.level.full\" feature in your\n manifest.</p></p>\n\n<p> @see CameraManager#openCamera\n @see android.Manifest.permission#CAMERA\n @see CameraCharacteristics#INFO_SUPPORTED_HARDWARE_LEVEL</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-TEMPLATE_MANUAL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-property-TEMPLATE_MANUAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_MANUAL' class='name expandable'>TEMPLATE_MANUAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A basic template for direct application control of capture\nparameters. ...</div><div class='long'><p>A basic template for direct application control of capture\nparameters. All automatic control is disabled (auto-exposure, auto-white\nbalance, auto-focus), and post-processing parameters are set to preview\nquality. The manual capture parameters (exposure, sensitivity, and so on)\nare set to reasonable defaults, but should be overriden by the\napplication depending on the intended use case.\nThis template is guaranteed to be supported on camera devices that support the\n<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR\" class=\"docClass\">MANUAL_SENSOR</a>\ncapability.</p>\n\n<p>@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureRequest\" class=\"docClass\">createCaptureRequest</a></p>\n<p>Defaults to: <code>&quot;6&quot;</code></p></div></div></div><div id='property-TEMPLATE_PREVIEW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-property-TEMPLATE_PREVIEW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_PREVIEW' class='name expandable'>TEMPLATE_PREVIEW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a request suitable for a camera preview window. ...</div><div class='long'><p>Create a request suitable for a camera preview window. Specifically, this\nmeans that high frame rate is given priority over the highest-quality\npost-processing. These requests would normally be used with the\n<a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-setRepeatingRequest\" rel=\"android.hardware.camera2.CameraCaptureSession-method-setRepeatingRequest\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.setRepeatingRequest</a> method.\nThis template is guaranteed to be supported on all camera devices.</p>\n\n<p>@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureRequest\" class=\"docClass\">createCaptureRequest</a></p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-TEMPLATE_RECORD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-property-TEMPLATE_RECORD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_RECORD' class='name expandable'>TEMPLATE_RECORD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a request suitable for video recording. ...</div><div class='long'><p>Create a request suitable for video recording. Specifically, this means\nthat a stable frame rate is used, and post-processing is set for\nrecording quality. These requests would commonly be used with the\n<a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-setRepeatingRequest\" rel=\"android.hardware.camera2.CameraCaptureSession-method-setRepeatingRequest\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.setRepeatingRequest</a> method.\nThis template is guaranteed to be supported on all camera devices except\n<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_DEPTH_OUTPUT\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_DEPTH_OUTPUT\" class=\"docClass\">DEPTH_OUTPUT</a> devices\nthat are not <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE\" class=\"docClass\">BACKWARD_COMPATIBLE</a>.</p>\n\n<p>@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureRequest\" class=\"docClass\">createCaptureRequest</a></p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-TEMPLATE_STILL_CAPTURE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-property-TEMPLATE_STILL_CAPTURE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_STILL_CAPTURE' class='name expandable'>TEMPLATE_STILL_CAPTURE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a request suitable for still image capture. ...</div><div class='long'><p>Create a request suitable for still image capture. Specifically, this\nmeans prioritizing image quality over frame rate. These requests would\ncommonly be used with the <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-capture\" rel=\"android.hardware.camera2.CameraCaptureSession-method-capture\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.capture</a> method.\nThis template is guaranteed to be supported on all camera devices except\n<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_DEPTH_OUTPUT\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_DEPTH_OUTPUT\" class=\"docClass\">DEPTH_OUTPUT</a> devices\nthat are not <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE\" class=\"docClass\">BACKWARD_COMPATIBLE</a>.\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureRequest\" class=\"docClass\">createCaptureRequest</a></p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-TEMPLATE_VIDEO_SNAPSHOT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-property-TEMPLATE_VIDEO_SNAPSHOT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_VIDEO_SNAPSHOT' class='name expandable'>TEMPLATE_VIDEO_SNAPSHOT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a request suitable for still image capture while recording\nvideo. ...</div><div class='long'><p>Create a request suitable for still image capture while recording\nvideo. Specifically, this means maximizing image quality without\ndisrupting the ongoing recording. These requests would commonly be used\nwith the <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-capture\" rel=\"android.hardware.camera2.CameraCaptureSession-method-capture\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.capture</a> method while a request based on\n<a href=\"#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_RECORD\" rel=\"android.hardware.camera2.CameraDevice-property-TEMPLATE_RECORD\" class=\"docClass\">TEMPLATE_RECORD</a> is is in use with <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-setRepeatingRequest\" rel=\"android.hardware.camera2.CameraCaptureSession-method-setRepeatingRequest\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.setRepeatingRequest</a>.\nThis template is guaranteed to be supported on all camera devices except\nlegacy devices (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" rel=\"android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL</a>\n{@code == }<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LEGACY\" class=\"docClass\">LEGACY</a>) and\n<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_DEPTH_OUTPUT\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_DEPTH_OUTPUT\" class=\"docClass\">DEPTH_OUTPUT</a> devices\nthat are not <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_BACKWARD_COMPATIBLE\" class=\"docClass\">BACKWARD_COMPATIBLE</a>.</p>\n\n<p>@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureRequest\" class=\"docClass\">createCaptureRequest</a></p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-TEMPLATE_ZERO_SHUTTER_LAG' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-property-TEMPLATE_ZERO_SHUTTER_LAG' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_ZERO_SHUTTER_LAG' class='name expandable'>TEMPLATE_ZERO_SHUTTER_LAG</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a request suitable for zero shutter lag still capture. ...</div><div class='long'><p>Create a request suitable for zero shutter lag still capture. This means\nmeans maximizing image quality without compromising preview frame rate.\nAE/AWB/AF should be on auto mode. This is intended for application-operated ZSL. For\ndevice-operated ZSL, use <a href=\"#!/api/android.hardware.camera2.CaptureRequest-property-CONTROL_ENABLE_ZSL\" rel=\"android.hardware.camera2.CaptureRequest-property-CONTROL_ENABLE_ZSL\" class=\"docClass\">android.hardware.camera2.CaptureRequest.CONTROL_ENABLE_ZSL</a> if available.\nThis template is guaranteed to be supported on camera devices that support the\n<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING\" class=\"docClass\">PRIVATE_REPROCESSING</a>\ncapability or the\n<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING\" class=\"docClass\">YUV_REPROCESSING</a>\ncapability.</p>\n\n<p>@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureRequest\" class=\"docClass\">createCaptureRequest</a>\n@see CaptureRequest#CONTROL_ENABLE_ZSL</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close the connection to this camera device as quickly as possible. ...</div><div class='long'><p>Close the connection to this camera device as quickly as possible.</p>\n\n<p> <p>Immediately after this call, all calls to the camera device or active session interface\n will throw a IllegalStateException, except for calls to close(). Once the device has\n fully shut down, the <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession.StateCallback-method-onClosed\" rel=\"android.hardware.camera2.CameraCaptureSession.StateCallback-method-onClosed\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.StateCallback.onClosed</a> callback will be called, and the camera\n is free to be re-opened.</p></p>\n\n<p> <p>Immediately after this call, besides the final <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession.StateCallback-method-onClosed\" rel=\"android.hardware.camera2.CameraCaptureSession.StateCallback-method-onClosed\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.StateCallback.onClosed</a> calls, no\n further callbacks from the device or the active session will occur, and any remaining\n submitted capture requests will be discarded, as if\n <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-abortCaptures\" rel=\"android.hardware.camera2.CameraCaptureSession-method-abortCaptures\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession.abortCaptures</a> had been called, except that no success or failure\n callbacks will be invoked.</p></p>\n</div></div></div><div id='method-createCaptureRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-createCaptureRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest' class='name expandable'>createCaptureRequest</a>( <span class='pre'>templateType, physicalCameraIdSet</span> ) : Object {android.hardware.camera2.CaptureRequest.Builder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a android.hardware.camera2.CaptureRequest.Builder for new capture requests,\n initialized with template for a t...</div><div class='long'><p>Create a <a href=\"#!/api/android.hardware.camera2.CaptureRequest.Builder\" rel=\"android.hardware.camera2.CaptureRequest.Builder\" class=\"docClass\">android.hardware.camera2.CaptureRequest.Builder</a> for new capture requests,\n initialized with template for a target use case. This methods allows\n clients to pass physical camera ids which can be used to customize the\n request for a specific physical camera. The settings are chosen\n to be the best options for the specific logical camera device. If\n additional physical camera ids are passed, then they will also use the\n same settings template. Clients can further modify individual camera\n settings by calling <a href=\"#!/api/android.hardware.camera2.CaptureRequest.Builder-method-setPhysicalCameraKey\" rel=\"android.hardware.camera2.CaptureRequest.Builder-method-setPhysicalCameraKey\" class=\"docClass\">android.hardware.camera2.CaptureRequest.Builder.setPhysicalCameraKey</a>.</p>\n\n\n<p> <p>Individual physical camera settings will only be honored for camera session\n that was initialiazed with corresponding physical camera id output configuration\n OutputConfiguration.setPhysicalCameraId and the same output targets are\n also attached in the request by <a href=\"#!/api/android.hardware.camera2.CaptureRequest.Builder-method-addTarget\" rel=\"android.hardware.camera2.CaptureRequest.Builder-method-addTarget\" class=\"docClass\">android.hardware.camera2.CaptureRequest.Builder.addTarget</a>.</p></p>\n\n<p> <p>The output is undefined for any logical camera streams in case valid physical camera\n settings are attached.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>templateType</span> : Number<div class='sub-desc'><p>An enumeration selecting the use case for this request. Not all template\n types are supported on every device. See the documentation for each template type for\n details.</p>\n</div></li><li><span class='pre'>physicalCameraIdSet</span> : Object {java.util.Set}<div class='sub-desc'><p>A set of physical camera ids that can be used to customize\n                            the request for a specific physical camera.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.CaptureRequest.Builder}</span><div class='sub-desc'><p>a builder for a capture request, initialized with default\n settings for that template, and no output streams</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the templateType is not supported by\n this device, or one of the physical id arguments matches with logical camera id.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if the camera device is no longer connected or has\n                               encountered a fatal error</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the camera device has been closed\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_PREVIEW\" rel=\"android.hardware.camera2.CameraDevice-property-TEMPLATE_PREVIEW\" class=\"docClass\">TEMPLATE_PREVIEW</a>\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_RECORD\" rel=\"android.hardware.camera2.CameraDevice-property-TEMPLATE_RECORD\" class=\"docClass\">TEMPLATE_RECORD</a>\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_STILL_CAPTURE\" rel=\"android.hardware.camera2.CameraDevice-property-TEMPLATE_STILL_CAPTURE\" class=\"docClass\">TEMPLATE_STILL_CAPTURE</a>\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_VIDEO_SNAPSHOT\" rel=\"android.hardware.camera2.CameraDevice-property-TEMPLATE_VIDEO_SNAPSHOT\" class=\"docClass\">TEMPLATE_VIDEO_SNAPSHOT</a>\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-property-TEMPLATE_MANUAL\" rel=\"android.hardware.camera2.CameraDevice-property-TEMPLATE_MANUAL\" class=\"docClass\">TEMPLATE_MANUAL</a>\n@see CaptureRequest.Builder#setPhysicalCameraKey\n@see CaptureRequest.Builder#getPhysicalCameraKey</p>\n</div></li></ul></div></div></div><div id='method-createCaptureSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-createCaptureSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession' class='name expandable'>createCaptureSession</a>( <span class='pre'>config</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new android.hardware.camera2.CameraCaptureSession using a SessionConfiguration helper\n object that aggregate...</div><div class='long'><p>Create a new <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession\" rel=\"android.hardware.camera2.CameraCaptureSession\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession</a> using a SessionConfiguration helper\n object that aggregates all supported parameters.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {SessionConfiguration}<div class='sub-desc'><p>A session configuration (see SessionConfiguration).</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException In case the session configuration is invalid; or the output\n                                  configurations are empty; or the session configuration\n                                  executor is invalid.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException In case the camera device is no longer connected or has\n                               encountered a fatal error.\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>(List, CameraCaptureSession.StateCallback, Handler)\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSessionByOutputConfigurations\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSessionByOutputConfigurations\" class=\"docClass\">createCaptureSessionByOutputConfigurations</a>\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSession\" class=\"docClass\">createReprocessableCaptureSession</a>\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createConstrainedHighSpeedCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createConstrainedHighSpeedCaptureSession\" class=\"docClass\">createConstrainedHighSpeedCaptureSession</a></p>\n</div></li></ul></div></div></div><div id='method-createCaptureSessionByOutputConfigurations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-createCaptureSessionByOutputConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSessionByOutputConfigurations' class='name expandable'>createCaptureSessionByOutputConfigurations</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new camera capture session by providing the target output set of Surfaces and\n its corresponding surface con...</div><div class='long'><p>Create a new camera capture session by providing the target output set of Surfaces and\n its corresponding surface configuration to the camera device.</p>\n\n\n<p>@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>\n@see OutputConfiguration</p>\n</div></div></div><div id='method-createConstrainedHighSpeedCaptureSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-createConstrainedHighSpeedCaptureSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-createConstrainedHighSpeedCaptureSession' class='name expandable'>createConstrainedHighSpeedCaptureSession</a>( <span class='pre'>outputs, callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new constrained high speed capture session. ...</div><div class='long'><p>Create a new constrained high speed capture session.</p>\n\n\n<p> <p>The application can use normal capture session (created via <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>)\n for high speed capture if the desired high speed FPS ranges are advertised by\n <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES\" rel=\"android.hardware.camera2.CameraCharacteristics-property-CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES</a>, in which case all API\n semantics associated with normal capture sessions applies.</p></p>\n\n<p> <p>The method creates a specialized capture session that is only targeted at high speed\n video recording (>=120fps) use case if the camera device supports high speed video\n capability (i.e., <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES\" rel=\"android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES</a> contains\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO\" class=\"docClass\">android.hardware.camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO</a>).\n Therefore, it has special characteristics compared with a normal capture session:</p></p>\n\n<p> <ul></ul></p>\n\n<p> <li>In addition to the output target Surface requirements specified by the\n   <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a> method, an active high speed capture session will support up\n   to 2 output Surfaces, though the application might choose to configure just one Surface\n   (e.g., preview only). All Surfaces must be either video encoder surfaces (acquired by\n   android.media.MediaRecorder.getSurface or\n   android.media.MediaCodec.createInputSurface) or preview surfaces (obtained from\n   android.view.SurfaceView, android.graphics.SurfaceTexture via\n   android.view.Surface.Surface(android.graphics.SurfaceTexture)). The Surface sizes\n   must be one of the sizes reported by StreamConfigurationMap.getHighSpeedVideoSizes.\n   When multiple Surfaces are configured, their size must be same.</li></p>\n\n<p> <li>An active high speed capture session only accepts request lists created via\n   <a href=\"#!/api/android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession-method-createHighSpeedRequestList\" rel=\"android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession-method-createHighSpeedRequestList\" class=\"docClass\">android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList</a>, and the\n   request list can only be submitted to this session via\n   <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-captureBurst\" rel=\"android.hardware.camera2.CameraCaptureSession-method-captureBurst\" class=\"docClass\">captureBurst</a>, or\n   <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession-method-setRepeatingBurst\" rel=\"android.hardware.camera2.CameraCaptureSession-method-setRepeatingBurst\" class=\"docClass\">setRepeatingBurst</a>.</li></p>\n\n<p> <li>The FPS ranges being requested to this session must be selected from\n   StreamConfigurationMap.getHighSpeedVideoFpsRangesFor. The application can still use\n   <a href=\"#!/api/android.hardware.camera2.CaptureRequest-property-CONTROL_AE_TARGET_FPS_RANGE\" rel=\"android.hardware.camera2.CaptureRequest-property-CONTROL_AE_TARGET_FPS_RANGE\" class=\"docClass\">android.hardware.camera2.CaptureRequest.CONTROL_AE_TARGET_FPS_RANGE</a> to control the desired FPS range.\n   Switching to an FPS range that has different\n   maximum FPS may trigger some camera device\n   reconfigurations, which may introduce extra latency. It is recommended that the\n   application avoids unnecessary maximum target FPS changes as much as possible during high\n   speed streaming.</li></p>\n\n<p> <li>For the request lists submitted to this session, the camera device will override the\n   <a href=\"#!/api/android.hardware.camera2.CaptureRequest-property-CONTROL_MODE\" rel=\"android.hardware.camera2.CaptureRequest-property-CONTROL_MODE\" class=\"docClass\">control mode</a>, auto-exposure (AE), auto-white balance\n   (AWB) and auto-focus (AF) to <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-CONTROL_MODE_AUTO\" rel=\"android.hardware.camera2.CameraMetadata-property-CONTROL_MODE_AUTO\" class=\"docClass\">android.hardware.camera2.CameraMetadata.CONTROL_MODE_AUTO</a>,\n   <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-CONTROL_AE_MODE_ON\" rel=\"android.hardware.camera2.CameraMetadata-property-CONTROL_AE_MODE_ON\" class=\"docClass\">android.hardware.camera2.CameraMetadata.CONTROL_AE_MODE_ON</a>, <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-CONTROL_AWB_MODE_AUTO\" rel=\"android.hardware.camera2.CameraMetadata-property-CONTROL_AWB_MODE_AUTO\" class=\"docClass\">android.hardware.camera2.CameraMetadata.CONTROL_AWB_MODE_AUTO</a>\n   and <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-CONTROL_AF_MODE_CONTINUOUS_VIDEO\" rel=\"android.hardware.camera2.CameraMetadata-property-CONTROL_AF_MODE_CONTINUOUS_VIDEO\" class=\"docClass\">android.hardware.camera2.CameraMetadata.CONTROL_AF_MODE_CONTINUOUS_VIDEO</a>, respectively. All\n   post-processing block mode controls will be overridden to be FAST. Therefore, no manual\n   control of capture and post-processing parameters is possible. Beside these, only a subset\n   of controls will work, see\n   <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO\" class=\"docClass\">android.hardware.camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO</a> for\n   more details.</li></p>\n\n<p> </p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outputs</span> : Object {java.util.List}<div class='sub-desc'><p>The new set of Surfaces that should be made available as\n                targets for captured high speed image data.</p>\n</div></li><li><span class='pre'>callback</span> : Object {CameraCaptureSession.StateCallback}<div class='sub-desc'><p>The callback to notify about the status of the new capture session.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>The handler on which the callback should be invoked, or {@code null} to use\n                the current thread's looper.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the set of output Surfaces do not meet the requirements,\n                                  the callback is null, or the handler is null but the current\n                                  thread has no looper, or the camera device doesn't support\n                                  high speed video capability.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if the camera device is no longer connected or has\n                               encountered a fatal error</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the camera device has been closed\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>\n@see CaptureRequest#CONTROL_AE_TARGET_FPS_RANGE\n@see StreamConfigurationMap#getHighSpeedVideoSizes\n@see StreamConfigurationMap#getHighSpeedVideoFpsRangesFor\n@see CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES\n@see CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO\n@see CameraCaptureSession#captureBurst\n@see CameraCaptureSession#setRepeatingBurst\n@see CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</p>\n</div></li></ul></div></div></div><div id='method-createReprocessCaptureRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-createReprocessCaptureRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-createReprocessCaptureRequest' class='name expandable'>createReprocessCaptureRequest</a>( <span class='pre'>inputResult</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a android.hardware.camera2.CaptureRequest.Builder for a new reprocess android.hardware.camera2.CaptureRequest ...</div><div class='long'><p><p>Create a <a href=\"#!/api/android.hardware.camera2.CaptureRequest.Builder\" rel=\"android.hardware.camera2.CaptureRequest.Builder\" class=\"docClass\">android.hardware.camera2.CaptureRequest.Builder</a> for a new reprocess <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a> from a\n <a href=\"#!/api/android.hardware.camera2.TotalCaptureResult\" rel=\"android.hardware.camera2.TotalCaptureResult\" class=\"docClass\">android.hardware.camera2.TotalCaptureResult</a>.</p>\n\n<p> <p>Each reprocess <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a> processes one buffer from\n <a href=\"#!/api/android.hardware.camera2.CameraCaptureSession\" rel=\"android.hardware.camera2.CameraCaptureSession\" class=\"docClass\">android.hardware.camera2.CameraCaptureSession</a>'s input Surface to all output Surfaces\n included in the reprocess capture request. The reprocess input images must be generated from\n one or multiple output images captured from the same camera device. The application can\n provide input images to camera device via android.media.ImageWriter.queueInputImage.\n The application must use the capture result of one of those output images to create a\n reprocess capture request so that the camera device can use the information to achieve\n optimal reprocess image quality. For camera devices that support only 1 output\n Surface, submitting a reprocess <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a> with multiple\n output targets will result in a <a href=\"#!/api/android.hardware.camera2.CaptureFailure\" rel=\"android.hardware.camera2.CaptureFailure\" class=\"docClass\">android.hardware.camera2.CaptureFailure</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inputResult</span> : Object {TotalCaptureResult}<div class='sub-desc'><p>The capture result of the output image or one of the output images used\n                       to generate the reprocess input image for this capture request.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if inputResult is null.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if the camera device is no longer connected or has\n                               encountered a fatal error</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the camera device has been closed\n@see CaptureRequest.Builder\n@see TotalCaptureResult\n@see CameraDevice#createReprocessableCaptureSession\n@see android.media.ImageWriter</p>\n</div></li></ul></div></div></div><div id='method-createReprocessableCaptureSession' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-createReprocessableCaptureSession' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSession' class='name expandable'>createReprocessableCaptureSession</a>( <span class='pre'>inputConfig, outputs, callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new reprocessable camera capture session by providing the desired reprocessing\n input Surface configuration ...</div><div class='long'><p>Create a new reprocessable camera capture session by providing the desired reprocessing\n input Surface configuration and the target output set of Surfaces to the camera device.</p>\n\n<p> <p>If a camera device supports YUV reprocessing\n (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING\" rel=\"android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_YUV_REPROCESSING</a>) or PRIVATE\n reprocessing\n (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING\" rel=\"android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES_PRIVATE_REPROCESSING</a>), besides\n the capture session created via <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>, the\n application can also create a reprocessable capture session to submit reprocess capture\n requests in addition to regular capture requests. A reprocess capture request takes the next\n available buffer from the session's input Surface, and sends it through the camera device's\n processing pipeline again, to produce buffers for the request's target output Surfaces. No\n new image data is captured for a reprocess request. However the input buffer provided by\n the application must be captured previously by the same camera device in the same session\n directly (e.g. for Zero-Shutter-Lag use case) or indirectly (e.g. combining multiple output\n images).</p></p>\n\n<p> <p>The active reprocessable capture session determines an input Surface and the set\n of potential output Surfaces for the camera devices for each capture request. The application\n can use <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureRequest\" class=\"docClass\">createCaptureRequest</a> to create regular capture requests\n to capture new images from the camera device, and use <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createReprocessCaptureRequest\" rel=\"android.hardware.camera2.CameraDevice-method-createReprocessCaptureRequest\" class=\"docClass\">createReprocessCaptureRequest</a> to create reprocess capture requests to process buffers from\n the input Surface. Some combinations of output Surfaces in a session may not be used\n in a request simultaneously. The guaranteed combinations of output Surfaces that can be used\n in a request simultaneously are listed in the tables under <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>. All the output Surfaces in one capture request will come from the\n same source, either from a new capture by the camera device, or from the input Surface\n depending on if the request is a reprocess capture request.</p></p>\n\n<p> <p>Input formats and sizes supported by the camera device can be queried via\n StreamConfigurationMap.getInputFormats and\n StreamConfigurationMap.getInputSizes. For each supported input format, the camera\n device supports a set of output formats and sizes for reprocessing that can be queried via\n StreamConfigurationMap.getValidOutputFormatsForInput and\n StreamConfigurationMap.getOutputSizes. While output Surfaces with formats that\n aren't valid reprocess output targets for the input configuration can be part of a session,\n they cannot be used as targets for a reprocessing request.</p></p>\n\n<p> <p>Since the application cannot access android.graphics.ImageFormat.PRIVATE images\n directly, an output Surface created by android.media.ImageReader.newInstance with\n android.graphics.ImageFormat.PRIVATE as the format will be considered as intended to\n be used for reprocessing input and thus the android.media.ImageReader size must\n match one of the supported input sizes for android.graphics.ImageFormat.PRIVATE\n format. Otherwise, creating a reprocessable capture session will fail.</p></p>\n\n<p> <p>The guaranteed stream configurations listed in\n <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a> are also guaranteed to work for\n <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSession\" class=\"docClass\">createReprocessableCaptureSession</a>. In addition,\n the configurations in the tables below are also guaranteed for creating a reprocessable\n capture session if the camera device supports YUV reprocessing or PRIVATE reprocessing.\n However, not all output targets used to create a reprocessable session may be used in a\n <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a> simultaneously. For devices that support only 1 output target in a\n reprocess <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a>, submitting a reprocess <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a> with multiple\n output targets will result in a <a href=\"#!/api/android.hardware.camera2.CaptureFailure\" rel=\"android.hardware.camera2.CaptureFailure\" class=\"docClass\">android.hardware.camera2.CaptureFailure</a>. For devices that support multiple\n output targets in a reprocess <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a>, the guaranteed output targets that can\n be included in a <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a> simultaneously are listed in the tables under\n <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>. For example, with a FULL-capability\n (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" rel=\"android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL</a> {@code == }\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" class=\"docClass\">FULL</a>) device that supports PRIVATE\n reprocessing, an application can create a reprocessable capture session with 1 input,\n ({@code PRIV}, {@code MAXIMUM}), and 3 outputs, ({@code PRIV}, {@code MAXIMUM}),\n ({@code PRIV}, {@code PREVIEW}), and ({@code YUV}, {@code MAXIMUM}). However, it's not\n guaranteed that an application can submit a regular or reprocess capture with ({@code PRIV},\n {@code MAXIMUM}) and ({@code YUV}, {@code MAXIMUM}) outputs based on the table listed under\n <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>. In other words, use the tables below to\n determine the guaranteed stream configurations for creating a reprocessable capture session,\n and use the tables under <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a> to determine the\n guaranteed output targets that can be submitted in a regular or reprocess\n <a href=\"#!/api/android.hardware.camera2.CaptureRequest\" rel=\"android.hardware.camera2.CaptureRequest\" class=\"docClass\">android.hardware.camera2.CaptureRequest</a> simultaneously.</p></p>\n\n<p> <style scoped>\n  #rb { border-right-width: thick; }\n </style></p>\n\n<p> <p>LIMITED-level (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" rel=\"android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL</a>\n {@code == }<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" class=\"docClass\">LIMITED</a>) devices\n support at least the following stream combinations for creating a reprocessable capture\n session in addition to those listed in <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a> for\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" class=\"docClass\">LIMITED</a> devices:</p>\n\n<p> <table>\n <tr><th colspan=\"11\">LIMITED-level additional guaranteed configurations for creating a reprocessable capture session<br>({@code PRIV} input is guaranteed only if PRIVATE reprocessing is supported. {@code YUV} input is guaranteed only if YUV reprocessing is supported)</th></tr>\n <tr><th colspan=\"2\" id=\"rb\">Input</th><th colspan=\"2\" id=\"rb\">Target 1</th><th colspan=\"2\" id=\"rb\">Target 2</th><th colspan=\"2\" id=\"rb\">Target 3</th><th colspan=\"2\" id=\"rb\">Target 4</th><th rowspan=\"2\">Sample use case(s)</th> </tr>\n <tr><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th></tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td> <td></td><td id=\"rb\"></td> <td></td><td id=\"rb\"></td> <td>No-viewfinder still image reprocessing.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td> <td></td><td id=\"rb\"></td> <td>ZSL(Zero-Shutter-Lag) still imaging.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td> <td></td><td id=\"rb\"></td> <td>ZSL still and in-app processing imaging.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>ZSL in-app processing with still capture.</td> </tr>\n </table><br>\n </p></p>\n\n<p> <p>FULL-level (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" rel=\"android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL</a>\n {@code == }<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" class=\"docClass\">FULL</a>) devices\n support at least the following stream combinations for creating a reprocessable capture\n session in addition to those for\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" class=\"docClass\">LIMITED</a> devices:</p>\n\n<p> <table>\n <tr><th colspan=\"11\">FULL-level additional guaranteed configurations for creating a reprocessable capture session<br>({@code PRIV} input is guaranteed only if PRIVATE reprocessing is supported. {@code YUV} input is guaranteed only if YUV reprocessing is supported)</th></tr>\n <tr><th colspan=\"2\" id=\"rb\">Input</th><th colspan=\"2\" id=\"rb\">Target 1</th><th colspan=\"2\" id=\"rb\">Target 2</th><th colspan=\"2\" id=\"rb\">Target 3</th><th colspan=\"2\" id=\"rb\">Target 4</th><th rowspan=\"2\">Sample use case(s)</th> </tr>\n <tr><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th></tr>\n <tr> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td></td><td id=\"rb\"></td> <td></td><td id=\"rb\"></td> <td>Maximum-resolution multi-frame image fusion in-app processing with regular preview.</td> </tr>\n <tr> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td></td><td id=\"rb\"></td> <td></td><td id=\"rb\"></td> <td>Maximum-resolution multi-frame image fusion two-input in-app processing.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code YUV}</td><td id=\"rb\">{@code RECORD}</td> <td></td><td id=\"rb\"></td> <td>High-resolution ZSL in-app video processing with regular preview.</td> </tr>\n <tr> <td>{@code PRIV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td></td><td id=\"rb\"></td> <td>Maximum-resolution ZSL in-app processing with regular preview.</td> </tr>\n <tr> <td>{@code PRIV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td></td><td id=\"rb\"></td> <td>Maximum-resolution two-input ZSL in-app processing.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>ZSL still capture and in-app processing.</td> </tr>\n </table><br>\n </p></p>\n\n<p> <p>RAW-capability (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES\" rel=\"android.hardware.camera2.CameraCharacteristics-property-REQUEST_AVAILABLE_CAPABILITIES\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES</a> includes\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_RAW\" rel=\"android.hardware.camera2.CameraMetadata-property-REQUEST_AVAILABLE_CAPABILITIES_RAW\" class=\"docClass\">RAW</a>) devices additionally support\n at least the following stream combinations for creating a reprocessable capture session\n on both <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" class=\"docClass\">FULL</a> and\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_LIMITED\" class=\"docClass\">LIMITED</a> devices</p>\n\n<p> <table>\n <tr><th colspan=\"11\">RAW-capability additional guaranteed configurations for creating a reprocessable capture session<br>({@code PRIV} input is guaranteed only if PRIVATE reprocessing is supported. {@code YUV} input is guaranteed only if YUV reprocessing is supported)</th></tr>\n <tr><th colspan=\"2\" id=\"rb\">Input</th><th colspan=\"2\" id=\"rb\">Target 1</th><th colspan=\"2\" id=\"rb\">Target 2</th><th colspan=\"2\" id=\"rb\">Target 3</th><th colspan=\"2\" id=\"rb\">Target 4</th><th rowspan=\"2\">Sample use case(s)</th> </tr>\n <tr><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th></tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code RAW}</td><td id=\"rb\">{@code MAXIMUM}</td> <td></td><td id=\"rb\"></td> <td>Mutually exclusive ZSL in-app processing and DNG capture.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code RAW}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Mutually exclusive ZSL in-app processing and preview with DNG capture.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code RAW}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Mutually exclusive ZSL two-input in-app processing and DNG capture.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code RAW}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Mutually exclusive ZSL still capture and preview with DNG capture.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code RAW}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Mutually exclusive ZSL in-app processing with still capture and DNG capture.</td> </tr>\n </table><br>\n </p></p>\n\n<p> <p>LEVEL-3 (<a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" rel=\"android.hardware.camera2.CameraCharacteristics-property-INFO_SUPPORTED_HARDWARE_LEVEL\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.INFO_SUPPORTED_HARDWARE_LEVEL</a>\n {@code == }<a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_3\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_3\" class=\"docClass\">LEVEL_3</a>) devices\n support at least the following stream combinations for creating a reprocessable capture\n session in addition to those for\n <a href=\"#!/api/android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" rel=\"android.hardware.camera2.CameraMetadata-property-INFO_SUPPORTED_HARDWARE_LEVEL_FULL\" class=\"docClass\">FULL</a> devices. Note that while\n the second configuration allows for configuring {@code MAXIMUM} {@code YUV} and {@code JPEG}\n outputs at the same time, that configuration is not listed for regular capture sessions, and\n therefore simultaneous output to both targets is not allowed.</p>\n\n<p> <table>\n <tr><th colspan=\"13\">LEVEL-3 additional guaranteed configurations for creating a reprocessable capture session<br>({@code PRIV} input is guaranteed only if PRIVATE reprocessing is supported. {@code YUV} input is always guaranteed.</th></tr>\n <tr><th colspan=\"2\" id=\"rb\">Input</th><th colspan=\"2\" id=\"rb\">Target 1</th><th colspan=\"2\" id=\"rb\">Target 2</th><th colspan=\"2\" id=\"rb\">Target 3</th><th colspan=\"2\" id=\"rb\">Target 4</th><th colspan=\"2\" id=\"rb\">Target 5</th><th rowspan=\"2\">Sample use case(s)</th> </tr>\n <tr><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th><th>Type</th><th id=\"rb\">Max size</th></tr>\n <tr> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code 640x480}</td> <td>{@code RAW}</td><td id=\"rb\">{@code MAXIMUM}</td> <td></td><td id=\"rb\"></td> <td>In-app viewfinder analysis with ZSL and RAW.</td> </tr>\n <tr> <td>{@code PRIV}/{@code YUV}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>Same as input</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code PREVIEW}</td> <td>{@code PRIV}</td><td id=\"rb\">{@code 640x480}</td> <td>{@code RAW}</td><td id=\"rb\">{@code MAXIMUM}</td> <td>{@code JPEG}</td><td id=\"rb\">{@code MAXIMUM}</td><td>In-app viewfinder analysis with ZSL, RAW, and JPEG reprocessing output.</td> </tr>\n </table><br>\n </p></p>\n\n<p> <p>Clients can access the above mandatory stream combination tables via\n android.hardware.camera2.params.MandatoryStreamCombination.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inputConfig</span> : Object {InputConfiguration}<div class='sub-desc'><p>The configuration for the input Surface</p>\n</div></li><li><span class='pre'>outputs</span> : Object {java.util.List}<div class='sub-desc'><p>The new set of Surfaces that should be made available as\n                targets for captured image data.</p>\n</div></li><li><span class='pre'>callback</span> : Object {CameraCaptureSession.StateCallback}<div class='sub-desc'><p>The callback to notify about the status of the new capture session.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>The handler on which the callback should be invoked, or {@code null} to use\n                the current thread's looper.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the input configuration is null or not supported, the set\n                                  of output Surfaces do not meet the requirements, the\n                                  callback is null, or the handler is null but the current\n                                  thread has no looper.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if the camera device is no longer connected or has\n                               encountered a fatal error</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the camera device has been closed\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createCaptureSession\" class=\"docClass\">createCaptureSession</a>\n@see CameraCaptureSession\n@see StreamConfigurationMap#getInputFormats\n@see StreamConfigurationMap#getInputSizes\n@see StreamConfigurationMap#getValidOutputFormatsForInput\n@see StreamConfigurationMap#getOutputSizes\n@see android.media.ImageWriter\n@see android.media.ImageReader</p>\n</div></li></ul></div></div></div><div id='method-createReprocessableCaptureSessionByConfigurations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-createReprocessableCaptureSessionByConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSessionByConfigurations' class='name expandable'>createReprocessableCaptureSessionByConfigurations</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new reprocessable camera capture session by providing the desired reprocessing\n input configuration and outp...</div><div class='long'><p>Create a new reprocessable camera capture session by providing the desired reprocessing\n input configuration and output OutputConfiguration\n to the camera device.\n@see <a href=\"#!/api/android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSession\" rel=\"android.hardware.camera2.CameraDevice-method-createReprocessableCaptureSession\" class=\"docClass\">createReprocessableCaptureSession</a>\n@see OutputConfiguration</p>\n</div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the ID of this camera device. ...</div><div class='long'><p>Get the ID of this camera device.</p>\n\n<p> <p>This matches the ID given to <a href=\"#!/api/android.hardware.camera2.CameraManager-method-openCamera\" rel=\"android.hardware.camera2.CameraManager-method-openCamera\" class=\"docClass\">android.hardware.camera2.CameraManager.openCamera</a> to instantiate this\n this camera device.</p></p>\n\n<p> <p>This ID can be used to query the camera device's <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics\" rel=\"android.hardware.camera2.CameraCharacteristics\" class=\"docClass\">fixed properties</a> with <a href=\"#!/api/android.hardware.camera2.CameraManager-method-getCameraCharacteristics\" rel=\"android.hardware.camera2.CameraManager-method-getCameraCharacteristics\" class=\"docClass\">android.hardware.camera2.CameraManager.getCameraCharacteristics</a>.</p></p>\n\n<p> <p>This method can be called even if the device has been closed or has encountered\n a serious error.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the ID for this camera device\n@see CameraManager#getCameraCharacteristics\n@see CameraManager#getCameraIdList</p>\n</div></li></ul></div></div></div><div id='method-isSessionConfigurationSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.CameraDevice'>android.hardware.camera2.CameraDevice</span><br/><a href='source/CameraDevice.html#android-hardware-camera2-CameraDevice-method-isSessionConfigurationSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.CameraDevice-method-isSessionConfigurationSupported' class='name expandable'>isSessionConfigurationSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether a particular SessionConfiguration is supported by the camera device. ...</div><div class='long'><p>Checks whether a particular SessionConfiguration is supported by the camera device.</p>\n\n<p> <p>This method performs a runtime check of a given SessionConfiguration. The result\n confirms whether or not the passed session configuration can be successfully used to\n create a camera capture session using\n createCaptureSession(SessionConfiguration).\n </p></p>\n\n<p> <p>The method can be called at any point before, during and after active capture session.\n It must not impact normal camera behavior in any way and must complete significantly\n faster than creating a regular or constrained capture session.</p></p>\n\n<p> <p>Although this method is faster than creating a new capture session, it is not intended\n to be used for exploring the entire space of supported stream combinations. The available\n mandatory stream combinations\n android.hardware.camera2.params.MandatoryStreamCombination are better suited for this\n purpose.</p></p>\n\n<p> <p>Note that session parameters will be ignored and calls to\n SessionConfiguration.setSessionParameters are not required.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the given session configuration is supported by the camera device\n         {@code false} otherwise.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException if the query operation is not supported by the camera\n                                       device</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the session configuration is invalid</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CameraAccessException if the camera device is no longer connected or has\n                               encountered a fatal error</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the camera device has been closed</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});