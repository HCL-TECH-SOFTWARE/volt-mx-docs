Ext.data.JsonP.android_hardware_camera2_DngCreator({"tagname":"class","name":"android.hardware.camera2.DngCreator","autodetected":{},"files":[{"filename":"DngCreator.js","href":"DngCreator.html#android-hardware-camera2-DngCreator"}],"extends":"java.lang.Object","members":[{"name":"MAX_THUMBNAIL_DIMENSION","tagname":"property","owner":"android.hardware.camera2.DngCreator","id":"property-MAX_THUMBNAIL_DIMENSION","meta":{}},{"name":"close","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-close","meta":{}},{"name":"setDescription","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-setDescription","meta":{}},{"name":"setLocation","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-setLocation","meta":{}},{"name":"setOrientation","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-setOrientation","meta":{}},{"name":"setThumbnail","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-setThumbnail","meta":{}},{"name":"writeByteBuffer","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-writeByteBuffer","meta":{}},{"name":"writeImage","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-writeImage","meta":{}},{"name":"writeInputStream","tagname":"method","owner":"android.hardware.camera2.DngCreator","id":"method-writeInputStream","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.DngCreator","short_doc":"implements java.lang.AutoCloseable\n\nThe android.hardware.camera2.DngCreator class provides functions to write raw pix...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.DngCreator</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DngCreator.html#android-hardware-camera2-DngCreator' target='_blank'>DngCreator.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>The <a href=\"#!/api/android.hardware.camera2.DngCreator\" rel=\"android.hardware.camera2.DngCreator\" class=\"docClass\">android.hardware.camera2.DngCreator</a> class provides functions to write raw pixel data as a DNG file.</p>\n\n<p> <p>\n This class is designed to be used with the android.graphics.ImageFormat.RAW_SENSOR\n buffers available from <a href=\"#!/api/android.hardware.camera2.CameraDevice\" rel=\"android.hardware.camera2.CameraDevice\" class=\"docClass\">android.hardware.camera2.CameraDevice</a>, or with Bayer-type raw\n pixel data that is otherwise generated by an application.  The DNG metadata tags will be\n generated from a <a href=\"#!/api/android.hardware.camera2.CaptureResult\" rel=\"android.hardware.camera2.CaptureResult\" class=\"docClass\">android.hardware.camera2.CaptureResult</a> object or set directly.\n </p></p>\n\n<p> <p>\n The DNG file format is a cross-platform file format that is used to store pixel data from\n camera sensors with minimal pre-processing applied.  DNG files allow for pixel data to be\n defined in a user-defined colorspace, and have associated metadata that allow for this\n pixel data to be converted to the standard CIE XYZ colorspace during post-processing.\n </p></p>\n\n<p> <p>\n For more information on the DNG file format and associated metadata, please refer to the\n <a href=\n \"https://wwwimages2.adobe.com/content/dam/Adobe/en/products/photoshop/pdfs/dng_spec_1.4.0.0.pdf\">\n Adobe DNG 1.4.0.0 specification</a>.\n </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-MAX_THUMBNAIL_DIMENSION' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-property-MAX_THUMBNAIL_DIMENSION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-property-MAX_THUMBNAIL_DIMENSION' class='name expandable'>MAX_THUMBNAIL_DIMENSION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Max width or height dimension for thumbnails. ...</div><div class='long'><p>Max width or height dimension for thumbnails.</p>\n<p>Defaults to: <code>&quot;256&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setDescription' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-setDescription' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-setDescription' class='name expandable'>setDescription</a>( <span class='pre'>description</span> ) : Object {android.hardware.camera2.DngCreator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the user description string to write. ...</div><div class='long'><p>Set the user description string to write.</p>\n\n<p> <p>\n This is equivalent to setting the TIFF \"ImageDescription\" tag {@code (0x010E)}.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>description</span> : String<div class='sub-desc'><p>the user description string.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.DngCreator}</span><div class='sub-desc'><p>this DngCreator object.</p>\n</div></li></ul></div></div></div><div id='method-setLocation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-setLocation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-setLocation' class='name expandable'>setLocation</a>( <span class='pre'>location</span> ) : Object {android.hardware.camera2.DngCreator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set image location metadata. ...</div><div class='long'><p>Set image location metadata.</p>\n\n<p> <p>\n The given location object must contain at least a valid time, latitude, and longitude\n (equivalent to the values returned by android.location.Location.getTime(),\n android.location.Location.getLatitude(), and\n android.location.Location.getLongitude() methods).\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>location</span> : Object {Location}<div class='sub-desc'><p>an android.location.Location object to set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.DngCreator}</span><div class='sub-desc'><p>this DngCreator object.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>java.lang.IllegalArgumentException if the given location object doesn't\n          contain enough information to set location metadata.</p>\n</div></li></ul></div></div></div><div id='method-setOrientation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-setOrientation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-setOrientation' class='name expandable'>setOrientation</a>( <span class='pre'>orientation</span> ) : Object {android.hardware.camera2.DngCreator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the orientation value to write. ...</div><div class='long'><p>Set the orientation value to write.</p>\n\n<p> <p>\n This will be written as the TIFF \"Orientation\" tag {@code (0x0112)}.\n Calling this will override any prior settings for this tag.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>orientation</span> : Number<div class='sub-desc'><p>the orientation value to set, one of:\n                    <ul>\n                      <li>android.media.ExifInterface.ORIENTATION_NORMAL</li>\n                      <li>android.media.ExifInterface.ORIENTATION_FLIP_HORIZONTAL</li>\n                      <li>android.media.ExifInterface.ORIENTATION_ROTATE_180</li>\n                      <li>android.media.ExifInterface.ORIENTATION_FLIP_VERTICAL</li>\n                      <li>android.media.ExifInterface.ORIENTATION_TRANSPOSE</li>\n                      <li>android.media.ExifInterface.ORIENTATION_ROTATE_90</li>\n                      <li>android.media.ExifInterface.ORIENTATION_TRANSVERSE</li>\n                      <li>android.media.ExifInterface.ORIENTATION_ROTATE_270</li>\n                    </ul></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.DngCreator}</span><div class='sub-desc'><p>this DngCreator object.</p>\n</div></li></ul></div></div></div><div id='method-setThumbnail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-setThumbnail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-setThumbnail' class='name expandable'>setThumbnail</a>( <span class='pre'>pixels</span> ) : Object {android.hardware.camera2.DngCreator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the thumbnail image. ...</div><div class='long'><p>Set the thumbnail image.</p>\n\n<p> <p>\n Pixel data is interpreted as a android.graphics.ImageFormat.YUV_420_888 image.\n Thumbnail images with a dimension larger than <a href=\"#!/api/android.hardware.camera2.DngCreator-property-MAX_THUMBNAIL_DIMENSION\" rel=\"android.hardware.camera2.DngCreator-property-MAX_THUMBNAIL_DIMENSION\" class=\"docClass\">MAX_THUMBNAIL_DIMENSION</a> will be\n rejected.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pixels</span> : Object {Image}<div class='sub-desc'><p>an android.media.Image object with the format\n               android.graphics.ImageFormat.YUV_420_888.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.DngCreator}</span><div class='sub-desc'><p>this DngCreator object.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>java.lang.IllegalArgumentException if the given thumbnail image has a dimension\n      larger than <a href=\"#!/api/android.hardware.camera2.DngCreator-property-MAX_THUMBNAIL_DIMENSION\" rel=\"android.hardware.camera2.DngCreator-property-MAX_THUMBNAIL_DIMENSION\" class=\"docClass\">MAX_THUMBNAIL_DIMENSION</a>.</p>\n</div></li></ul></div></div></div><div id='method-writeByteBuffer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-writeByteBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-writeByteBuffer' class='name expandable'>writeByteBuffer</a>( <span class='pre'>dngOutput, size, pixels, offset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write the android.graphics.ImageFormat.RAW_SENSOR pixel data to a DNG file with\n the currently configured metadata. ...</div><div class='long'><p>Write the android.graphics.ImageFormat.RAW_SENSOR pixel data to a DNG file with\n the currently configured metadata.</p>\n\n<p> <p>\n Raw pixel data must have 16 bits per pixel, and the input must contain at least\n {@code offset + 2 * width * height)} bytes.  The width and height of\n the input are taken from the width and height set in the <a href=\"#!/api/android.hardware.camera2.DngCreator\" rel=\"android.hardware.camera2.DngCreator\" class=\"docClass\">android.hardware.camera2.DngCreator</a> metadata tags,\n and will typically be equal to the width and height of\n <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE\" rel=\"android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE</a>.  Prior to\n API level 23, this was always the same as\n <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_ACTIVE_ARRAY_SIZE\" rel=\"android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_ACTIVE_ARRAY_SIZE\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_ACTIVE_ARRAY_SIZE</a>.\n The pixel layout in the input is determined from the reported color filter arrangement (CFA)\n set in <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_COLOR_FILTER_ARRANGEMENT\" rel=\"android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_COLOR_FILTER_ARRANGEMENT\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_COLOR_FILTER_ARRANGEMENT</a>.  If insufficient\n metadata is available to write a well-formatted DNG file, an\n java.lang.IllegalStateException will be thrown.\n </p></p>\n\n<p> <p>\n Any mark or limit set on this ByteBuffer is ignored, and will be cleared by this\n method.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dngOutput</span> : Object {OutputStream}<div class='sub-desc'><p>an java.io.OutputStream to write the DNG file to.</p>\n</div></li><li><span class='pre'>size</span> : Object {Size}<div class='sub-desc'><p>the Size of the image to write, in pixels.</p>\n</div></li><li><span class='pre'>pixels</span> : Object {ByteBuffer}<div class='sub-desc'><p>an java.nio.ByteBuffer of pixel data to write.</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the offset of the raw image in bytes.  This indicates how many bytes will\n               be skipped in the input before any pixel data is read.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an error was encountered in the input or output stream.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>java.lang.IllegalStateException if not enough metadata information has been\n          set to write a well-formatted DNG file.</p>\n</div></li></ul></div></div></div><div id='method-writeImage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-writeImage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-writeImage' class='name expandable'>writeImage</a>( <span class='pre'>dngOutput, pixels</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write the pixel data to a DNG file with the currently configured metadata. ...</div><div class='long'><p>Write the pixel data to a DNG file with the currently configured metadata.</p>\n\n<p> <p>\n For this method to succeed, the android.media.Image input must contain\n android.graphics.ImageFormat.RAW_SENSOR pixel data, otherwise an\n java.lang.IllegalArgumentException will be thrown.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dngOutput</span> : Object {OutputStream}<div class='sub-desc'><p>an java.io.OutputStream to write the DNG file to.</p>\n</div></li><li><span class='pre'>pixels</span> : Object {Image}<div class='sub-desc'><p>an android.media.Image to write.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>java.io.IOException if an error was encountered in the output stream.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>java.lang.IllegalArgumentException if an image with an unsupported format was used.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>java.lang.IllegalStateException if not enough metadata information has been\n          set to write a well-formatted DNG file.</p>\n</div></li></ul></div></div></div><div id='method-writeInputStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.DngCreator'>android.hardware.camera2.DngCreator</span><br/><a href='source/DngCreator.html#android-hardware-camera2-DngCreator-method-writeInputStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.DngCreator-method-writeInputStream' class='name expandable'>writeInputStream</a>( <span class='pre'>dngOutput, size, pixels, offset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write the android.graphics.ImageFormat.RAW_SENSOR pixel data to a DNG file with\n the currently configured metadata. ...</div><div class='long'><p>Write the android.graphics.ImageFormat.RAW_SENSOR pixel data to a DNG file with\n the currently configured metadata.</p>\n\n<p> <p>\n Raw pixel data must have 16 bits per pixel, and the input must contain at least\n {@code offset + 2 * width * height)} bytes.  The width and height of\n the input are taken from the width and height set in the <a href=\"#!/api/android.hardware.camera2.DngCreator\" rel=\"android.hardware.camera2.DngCreator\" class=\"docClass\">android.hardware.camera2.DngCreator</a> metadata tags,\n and will typically be equal to the width and height of\n <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE\" rel=\"android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_PRE_CORRECTION_ACTIVE_ARRAY_SIZE</a>.  Prior to\n API level 23, this was always the same as\n <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_ACTIVE_ARRAY_SIZE\" rel=\"android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_ACTIVE_ARRAY_SIZE\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_ACTIVE_ARRAY_SIZE</a>.\n The pixel layout in the input is determined from the reported color filter arrangement (CFA)\n set in <a href=\"#!/api/android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_COLOR_FILTER_ARRANGEMENT\" rel=\"android.hardware.camera2.CameraCharacteristics-property-SENSOR_INFO_COLOR_FILTER_ARRANGEMENT\" class=\"docClass\">android.hardware.camera2.CameraCharacteristics.SENSOR_INFO_COLOR_FILTER_ARRANGEMENT</a>.  If insufficient\n metadata is available to write a well-formatted DNG file, an\n java.lang.IllegalStateException will be thrown.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dngOutput</span> : Object {OutputStream}<div class='sub-desc'><p>an java.io.OutputStream to write the DNG file to.</p>\n</div></li><li><span class='pre'>size</span> : Object {Size}<div class='sub-desc'><p>the Size of the image to write, in pixels.</p>\n</div></li><li><span class='pre'>pixels</span> : Object {InputStream}<div class='sub-desc'><p>an java.io.InputStream of pixel data to write.</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the offset of the raw image in bytes.  This indicates how many bytes will\n               be skipped in the input before any pixel data is read.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an error was encountered in the input or output stream.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>java.lang.IllegalStateException if not enough metadata information has been\n          set to write a well-formatted DNG file.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>java.lang.IllegalArgumentException if the size passed in does not match the</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});