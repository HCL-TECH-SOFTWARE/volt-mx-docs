Ext.data.JsonP.android_media_projection_MediaProjectionManager({"tagname":"class","name":"android.media.projection.MediaProjectionManager","autodetected":{},"files":[{"filename":"MediaProjectionManager.js","href":"MediaProjectionManager.html#android-media-projection-MediaProjectionManager"}],"extends":"java.lang.Object","members":[{"name":"createScreenCaptureIntent","tagname":"method","owner":"android.media.projection.MediaProjectionManager","id":"method-createScreenCaptureIntent","meta":{}},{"name":"getMediaProjection","tagname":"method","owner":"android.media.projection.MediaProjectionManager","id":"method-getMediaProjection","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.projection.MediaProjectionManager","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.projection.MediaProjectionManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaProjectionManager.html#android-media-projection-MediaProjectionManager' target='_blank'>MediaProjectionManager.js</a></div></pre><div class='doc-contents'><p>Manages the retrieval of certain types of <a href=\"#!/api/android.media.projection.MediaProjection\" rel=\"android.media.projection.MediaProjection\" class=\"docClass\">android.media.projection.MediaProjection</a> tokens.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createScreenCaptureIntent' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.projection.MediaProjectionManager'>android.media.projection.MediaProjectionManager</span><br/><a href='source/MediaProjectionManager.html#android-media-projection-MediaProjectionManager-method-createScreenCaptureIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.projection.MediaProjectionManager-method-createScreenCaptureIntent' class='name expandable'>createScreenCaptureIntent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an Intent that must be passed to startActivityForResult()\n in order to start screen capture. ...</div><div class='long'><p>Returns an Intent that <b>must</b> be passed to startActivityForResult()\n in order to start screen capture. The activity will prompt\n the user whether to allow screen capture.  The result of this\n activity should be passed to getMediaProjection.</p>\n</div></div></div><div id='method-getMediaProjection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.projection.MediaProjectionManager'>android.media.projection.MediaProjectionManager</span><br/><a href='source/MediaProjectionManager.html#android-media-projection-MediaProjectionManager-method-getMediaProjection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.projection.MediaProjectionManager-method-getMediaProjection' class='name expandable'>getMediaProjection</a>( <span class='pre'>resultCode, resultData</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the MediaProjection obtained from a succesful screen\n capture request. ...</div><div class='long'><p>Retrieve the MediaProjection obtained from a succesful screen\n capture request. Will be null if the result from the\n startActivityForResult() is anything other than RESULT_OK.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resultCode</span> : Number<div class='sub-desc'><p>The result code from int, android.content.Intent)</p>\n</div></li><li><span class='pre'>resultData</span> : Object {Intent}<div class='sub-desc'><p>The resulting data from int, android.content.Intent)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException on pre-Q devices if a previously gotten MediaProjection\n from the same {@code resultData} has not yet been stopped</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});