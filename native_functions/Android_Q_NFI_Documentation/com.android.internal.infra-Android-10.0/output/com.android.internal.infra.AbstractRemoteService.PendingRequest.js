Ext.data.JsonP.com_android_internal_infra_AbstractRemoteService_PendingRequest({"tagname":"class","name":"com.android.internal.infra.AbstractRemoteService.PendingRequest","autodetected":{},"files":[{"filename":"PendingRequest.js","href":"PendingRequest.html#com-android-internal-infra-AbstractRemoteService-PendingRequest"}],"extends":"com.android.internal.infra.AbstractRemoteService.BasePendingRequest","params":[{"tagname":"params","doc":"<p><S> the remote service class</S></p>\n"},{"tagname":"params","doc":"<p><I> the interface of the binder service</I></p>\n"}],"members":[{"name":"cancel","tagname":"method","owner":"com.android.internal.infra.AbstractRemoteService.BasePendingRequest","id":"method-cancel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.infra.AbstractRemoteService.PendingRequest","short_doc":"Base class for the requests serviced by the remote service. ...","classIcon":"icon-class","superclasses":["java.lang.Object","com.android.internal.infra.AbstractRemoteService.BasePendingRequest"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/com.android.internal.infra.AbstractRemoteService.BasePendingRequest' rel='com.android.internal.infra.AbstractRemoteService.BasePendingRequest' class='docClass'>com.android.internal.infra.AbstractRemoteService.BasePendingRequest</a><div class='subclass '><strong>com.android.internal.infra.AbstractRemoteService.PendingRequest</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/PendingRequest.html#com-android-internal-infra-AbstractRemoteService-PendingRequest' target='_blank'>PendingRequest.js</a></div></pre><div class='doc-contents'><p>Base class for the requests serviced by the remote service.</p>\n\n<p> <p><b>NOTE: </b> this class is typically used when the service needs to use a callback to\n communicate back with the system server. For cases where that's not needed, you should use\n com.android.internal.infra.AbstractRemoteService.scheduleAsyncRequest(AsyncRequest) instead.</p>\n\n<p> <p><b>NOTE: </b> you must override com.android.internal.infra.AbstractRemoteService.getRemoteRequestMillis(),\n otherwise the constructor will throw an UnsupportedOperationException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><S> the remote service class</S></p>\n</div></li><li><span class='pre'></span> : <div class='sub-desc'><p><I> the interface of the binder service</I></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-cancel' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/com.android.internal.infra.AbstractRemoteService.BasePendingRequest' rel='com.android.internal.infra.AbstractRemoteService.BasePendingRequest' class='defined-in docClass'>com.android.internal.infra.AbstractRemoteService.BasePendingRequest</a><br/><a href='source/BasePendingRequest.html#com-android-internal-infra-AbstractRemoteService-BasePendingRequest-method-cancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.infra.AbstractRemoteService.BasePendingRequest-method-cancel' class='name expandable'>cancel</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancels the service. ...</div><div class='long'><p>Cancels the service.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false} if service is already canceled, {@code true} otherwise.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});