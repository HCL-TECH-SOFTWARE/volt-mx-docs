Ext.data.JsonP.android_graphics_pdf_PdfRenderer({"tagname":"class","name":"android.graphics.pdf.PdfRenderer","autodetected":{},"files":[{"filename":"PdfRenderer.js","href":"PdfRenderer.html#android-graphics-pdf-PdfRenderer"}],"extends":"java.lang.Object","members":[{"name":"close","tagname":"method","owner":"android.graphics.pdf.PdfRenderer","id":"method-close","meta":{}},{"name":"getPageCount","tagname":"method","owner":"android.graphics.pdf.PdfRenderer","id":"method-getPageCount","meta":{}},{"name":"openPage","tagname":"method","owner":"android.graphics.pdf.PdfRenderer","id":"method-openPage","meta":{}},{"name":"shouldScaleForPrinting","tagname":"method","owner":"android.graphics.pdf.PdfRenderer","id":"method-shouldScaleForPrinting","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.pdf.PdfRenderer","short_doc":"implements java.lang.AutoCloseable\n\n\n This class enables rendering a PDF document. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.graphics.pdf.PdfRenderer</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PdfRenderer.html#android-graphics-pdf-PdfRenderer' target='_blank'>PdfRenderer.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>\n This class enables rendering a PDF document. This class is not thread safe.\n </p>\n\n\n<p> <p>\n If you want to render a PDF, you create a renderer and for every page you want\n to render, you open the page, render it, and close the page. After you are done\n with rendering, you close the renderer. After the renderer is closed it should not\n be used anymore. Note that the pages are rendered one by one, i.e. you can have\n only a single page opened at any given time.\n </p>\n <p>\n A typical use of the APIs to render a PDF looks like this:\n </p></p>\n\n<pre> // create a new renderer\n PdfRenderer renderer = new PdfRenderer(getSeekableFileDescriptor());\n\n // let us just render all pages\n final int pageCount = renderer.getPageCount();\n for (int i = 0; i < pageCount; i++) {\n     Page page = renderer.openPage(i);\n\n     // say we render for showing on the screen\n     page.render(mBitmap, null, null, Page.RENDER_MODE_FOR_DISPLAY);\n\n     // do stuff with the bitmap\n\n     // close the page\n     page.close();\n }\n\n // close the renderer\n renderer.close();\n </pre>\n\n\n<p> <h3>Print preview and print output</h3>\n <p>\n If you are using this class to rasterize a PDF for printing or show a print\n preview, it is recommended that you respect the following contract in order\n to provide a consistent user experience when seeing a preview and printing,\n i.e. the user sees a preview that is the same as the printout.\n </p>\n <ul>\n <li>\n Respect the property whether the document would like to be scaled for printing\n as per <a href=\"#!/api/android.graphics.pdf.PdfRenderer-method-shouldScaleForPrinting\" rel=\"android.graphics.pdf.PdfRenderer-method-shouldScaleForPrinting\" class=\"docClass\">shouldScaleForPrinting</a>().\n </li>\n <li>\n When scaling a document for printing the aspect ratio should be preserved.\n </li>\n <li>\n Do not inset the content with any margins from the android.print.PrintAttributes\n as the application is responsible to render it such that the margins are respected.\n </li>\n <li>\n If document page size is greater than the printed media size the content should\n be anchored to the upper left corner of the page for left-to-right locales and\n top right corner for right-to-left locales.\n </li>\n </ul></p>\n\n<p> @see <a href=\"#!/api/android.graphics.pdf.PdfRenderer-method-close\" rel=\"android.graphics.pdf.PdfRenderer-method-close\" class=\"docClass\">close</a>()</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.pdf.PdfRenderer'>android.graphics.pdf.PdfRenderer</span><br/><a href='source/PdfRenderer.html#android-graphics-pdf-PdfRenderer-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.pdf.PdfRenderer-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this renderer. ...</div><div class='long'><p>Closes this renderer. You should not use this instance\n after this method is called.</p>\n</div></div></div><div id='method-getPageCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.pdf.PdfRenderer'>android.graphics.pdf.PdfRenderer</span><br/><a href='source/PdfRenderer.html#android-graphics-pdf-PdfRenderer-method-getPageCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.pdf.PdfRenderer-method-getPageCount' class='name expandable'>getPageCount</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the number of pages in the document. ...</div><div class='long'><p>Gets the number of pages in the document.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The page count.</p>\n</div></li></ul></div></div></div><div id='method-openPage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.pdf.PdfRenderer'>android.graphics.pdf.PdfRenderer</span><br/><a href='source/PdfRenderer.html#android-graphics-pdf-PdfRenderer-method-openPage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.pdf.PdfRenderer-method-openPage' class='name expandable'>openPage</a>( <span class='pre'>index</span> ) : Object {android.graphics.pdf.PdfRenderer.Page}<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens a page for rendering. ...</div><div class='long'><p>Opens a page for rendering.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The page index.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.pdf.PdfRenderer.Page}</span><div class='sub-desc'><p>A page that can be rendered.\n@see android.graphics.pdf.PdfRenderer.Page#close() PdfRenderer.Page.close()</p>\n</div></li></ul></div></div></div><div id='method-shouldScaleForPrinting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.pdf.PdfRenderer'>android.graphics.pdf.PdfRenderer</span><br/><a href='source/PdfRenderer.html#android-graphics-pdf-PdfRenderer-method-shouldScaleForPrinting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.pdf.PdfRenderer-method-shouldScaleForPrinting' class='name expandable'>shouldScaleForPrinting</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets whether the document prefers to be scaled for printing. ...</div><div class='long'><p>Gets whether the document prefers to be scaled for printing.\n You should take this info account if the document is rendered\n for printing and the target media size differs from the page\n size.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If to scale the document.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});