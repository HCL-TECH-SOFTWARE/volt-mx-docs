Ext.data.JsonP.android_webkit_WebViewRenderProcessClient({"tagname":"class","name":"android.webkit.WebViewRenderProcessClient","autodetected":{},"files":[{"filename":"WebViewRenderProcessClient.js","href":"WebViewRenderProcessClient.html#android-webkit-WebViewRenderProcessClient"}],"extends":"java.lang.Object","members":[{"name":"onRenderProcessResponsive","tagname":"method","owner":"android.webkit.WebViewRenderProcessClient","id":"method-onRenderProcessResponsive","meta":{}},{"name":"onRenderProcessUnresponsive","tagname":"method","owner":"android.webkit.WebViewRenderProcessClient","id":"method-onRenderProcessUnresponsive","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.webkit.WebViewRenderProcessClient","short_doc":"Used to receive callbacks on android.webkit.WebView renderer events. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.webkit.WebViewRenderProcessClient</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WebViewRenderProcessClient.html#android-webkit-WebViewRenderProcessClient' target='_blank'>WebViewRenderProcessClient.js</a></div></pre><div class='doc-contents'><p>Used to receive callbacks on <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> renderer events.</p>\n\n<p> WebViewRenderProcessClient instances may be set or retrieved via android.webkit.WebView.setandroid.webkit.WebViewRenderProcessClient(android.webkit.WebViewRenderProcessClient) and android.webkit.WebView.getandroid.webkit.WebViewRenderProcessClient().</p>\n\n<p> Instances may be attached to multiple WebViews, and thus a single renderer event may cause\n a callback to be called multiple times with different WebView parameters.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onRenderProcessResponsive' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewRenderProcessClient'>android.webkit.WebViewRenderProcessClient</span><br/><a href='source/WebViewRenderProcessClient.html#android-webkit-WebViewRenderProcessClient-method-onRenderProcessResponsive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewRenderProcessClient-method-onRenderProcessResponsive' class='name expandable'>onRenderProcessResponsive</a>( <span class='pre'>view, renderer</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called once when an unresponsive renderer currently associated with {@code view} becomes\n responsive. ...</div><div class='long'><p>Called once when an unresponsive renderer currently associated with {@code view} becomes\n responsive.</p>\n\n<p> <p>After a WebView renderer becomes unresponsive, which is notified to the application by\n <a href=\"#!/api/android.webkit.WebViewRenderProcessClient-method-onRenderProcessUnresponsive\" rel=\"android.webkit.WebViewRenderProcessClient-method-onRenderProcessUnresponsive\" class=\"docClass\">onRenderProcessUnresponsive</a>, it is possible for the\n blocking renderer task to complete, returning the renderer to a responsive state. In that\n case, this method is called once to indicate responsiveness.</p>\n\n<p> <p>No action is taken by WebView as a result of this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView for which responsiveness was detected.</p>\n</div></li><li><span class='pre'>renderer</span> : Object {WebViewRenderProcess}<div class='sub-desc'><p>The WebViewRenderProcess that has become responsive, or {@code null}\n                 if WebView is running in single process mode.</p>\n</div></li></ul></div></div></div><div id='method-onRenderProcessUnresponsive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewRenderProcessClient'>android.webkit.WebViewRenderProcessClient</span><br/><a href='source/WebViewRenderProcessClient.html#android-webkit-WebViewRenderProcessClient-method-onRenderProcessUnresponsive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewRenderProcessClient-method-onRenderProcessUnresponsive' class='name expandable'>onRenderProcessUnresponsive</a>( <span class='pre'>view, renderer</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the renderer currently associated with {@code view} becomes unresponsive as a\n result of a long running b...</div><div class='long'><p>Called when the renderer currently associated with {@code view} becomes unresponsive as a\n result of a long running blocking task such as the execution of JavaScript.</p>\n\n<p> <p>If a WebView fails to process an input event, or successfully navigate to a new URL within\n a reasonable time frame, the renderer is considered to be unresponsive, and this callback\n will be called.</p>\n\n<p> <p>This callback will continue to be called at regular intervals as long as the renderer\n remains unresponsive. If the renderer becomes responsive again, <a href=\"#!/api/android.webkit.WebViewRenderProcessClient-method-onRenderProcessResponsive\" rel=\"android.webkit.WebViewRenderProcessClient-method-onRenderProcessResponsive\" class=\"docClass\">onRenderProcessResponsive</a> will be called once, and this method\n will not subsequently be called unless another period of unresponsiveness is detected.</p>\n\n<p> <p>The minimum interval between successive calls to {@code onRenderProcessUnresponsive} is 5\n seconds.</p>\n\n<p> <p>No action is taken by WebView as a result of this method call. Applications may\n choose to terminate the associated renderer via the object that is passed to this callback,\n if in multiprocess mode, however this must be accompanied by correctly handling\n <a href=\"#!/api/android.webkit.WebViewClient-method-onRenderProcessGone\" rel=\"android.webkit.WebViewClient-method-onRenderProcessGone\" class=\"docClass\">android.webkit.WebViewClient.onRenderProcessGone</a> for this WebView, and all other WebViews associated\n with the same renderer. Failure to do so will result in application termination.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView for which unresponsiveness was detected.</p>\n</div></li><li><span class='pre'>renderer</span> : Object {WebViewRenderProcess}<div class='sub-desc'><p>The WebViewRenderProcess that has become unresponsive,\n or {@code null} if WebView is running in single process mode.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});