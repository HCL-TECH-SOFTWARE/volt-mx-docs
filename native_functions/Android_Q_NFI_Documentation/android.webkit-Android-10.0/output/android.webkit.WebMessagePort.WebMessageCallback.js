Ext.data.JsonP.android_webkit_WebMessagePort_WebMessageCallback({"tagname":"class","name":"android.webkit.WebMessagePort.WebMessageCallback","autodetected":{},"files":[{"filename":"WebMessageCallback.js","href":"WebMessageCallback.html#android-webkit-WebMessagePort-WebMessageCallback"}],"extends":"java.lang.Object","members":[{"name":"onMessage","tagname":"method","owner":"android.webkit.WebMessagePort.WebMessageCallback","id":"method-onMessage","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.webkit.WebMessagePort.WebMessageCallback","short_doc":"The listener for handling MessagePort events. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.webkit.WebMessagePort.WebMessageCallback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WebMessageCallback.html#android-webkit-WebMessagePort-WebMessageCallback' target='_blank'>WebMessageCallback.js</a></div></pre><div class='doc-contents'><p>The listener for handling MessagePort events. The message callback\n methods are called on the main thread. If the embedder application\n wants to receive the messages on a different thread, it can do this\n by passing a Handler in\n  Handler).\n In the latter case, the application should be extra careful for thread safety\n since WebMessagePort methods should be called on main thread.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onMessage' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebMessagePort.WebMessageCallback'>android.webkit.WebMessagePort.WebMessageCallback</span><br/><a href='source/WebMessageCallback.html#android-webkit-WebMessagePort-WebMessageCallback-method-onMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebMessagePort.WebMessageCallback-method-onMessage' class='name expandable'>onMessage</a>( <span class='pre'>port, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Message callback for receiving onMessage events. ...</div><div class='long'><p>Message callback for receiving onMessage events.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>port</span> : Object {WebMessagePort}<div class='sub-desc'><p>the WebMessagePort that the message is destined for</p>\n</div></li><li><span class='pre'>message</span> : Object {WebMessage}<div class='sub-desc'><p>the message from the entangled port.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});