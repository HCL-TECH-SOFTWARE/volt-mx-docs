Ext.data.JsonP.android_webkit_CookieManager({"tagname":"class","name":"android.webkit.CookieManager","autodetected":{},"files":[{"filename":"CookieManager.js","href":"CookieManager.html#android-webkit-CookieManager"}],"extends":"java.lang.Object","members":[{"name":"acceptCookie","tagname":"method","owner":"android.webkit.CookieManager","id":"method-acceptCookie","meta":{}},{"name":"acceptThirdPartyCookies","tagname":"method","owner":"android.webkit.CookieManager","id":"method-acceptThirdPartyCookies","meta":{}},{"name":"allowFileSchemeCookies","tagname":"method","owner":"android.webkit.CookieManager","id":"method-allowFileSchemeCookies","meta":{}},{"name":"flush","tagname":"method","owner":"android.webkit.CookieManager","id":"method-flush","meta":{}},{"name":"getInstance","tagname":"method","owner":"android.webkit.CookieManager","id":"method-getInstance","meta":{}},{"name":"removeAllCookie","tagname":"method","owner":"android.webkit.CookieManager","id":"method-removeAllCookie","meta":{"deprecated":{"text":"<p>Use removeAllCookies(ValueCallback) instead.</p>\n"}}},{"name":"removeAllCookies","tagname":"method","owner":"android.webkit.CookieManager","id":"method-removeAllCookies","meta":{}},{"name":"removeExpiredCookie","tagname":"method","owner":"android.webkit.CookieManager","id":"method-removeExpiredCookie","meta":{"deprecated":{"text":"<p>The WebView handles removing expired cookies automatically.</p>\n"}}},{"name":"removeSessionCookie","tagname":"method","owner":"android.webkit.CookieManager","id":"method-removeSessionCookie","meta":{"deprecated":{"text":"<p>use removeSessionCookies(ValueCallback) instead.</p>\n"}}},{"name":"removeSessionCookies","tagname":"method","owner":"android.webkit.CookieManager","id":"method-removeSessionCookies","meta":{}},{"name":"setAcceptCookie","tagname":"method","owner":"android.webkit.CookieManager","id":"method-setAcceptCookie","meta":{}},{"name":"setAcceptFileSchemeCookies","tagname":"method","owner":"android.webkit.CookieManager","id":"method-setAcceptFileSchemeCookies","meta":{}},{"name":"setAcceptThirdPartyCookies","tagname":"method","owner":"android.webkit.CookieManager","id":"method-setAcceptThirdPartyCookies","meta":{}},{"name":"setCookie","tagname":"method","owner":"android.webkit.CookieManager","id":"method-setCookie","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.webkit.CookieManager","short_doc":"Manages the cookies used by an application's android.webkit.WebView instances. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.webkit.CookieManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CookieManager.html#android-webkit-CookieManager' target='_blank'>CookieManager.js</a></div></pre><div class='doc-contents'><p>Manages the cookies used by an application's <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> instances.\n Cookies are manipulated according to RFC2109.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acceptCookie' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-acceptCookie' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-acceptCookie' class='name expandable'>acceptCookie</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets whether the application's android.webkit.WebView instances send and accept\n cookies. ...</div><div class='long'><p>Gets whether the application's <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> instances send and accept\n cookies.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if WebView instances send and accept cookies</p>\n</div></li></ul></div></div></div><div id='method-acceptThirdPartyCookies' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-acceptThirdPartyCookies' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-acceptThirdPartyCookies' class='name expandable'>acceptThirdPartyCookies</a>( <span class='pre'>webview</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets whether the android.webkit.WebView should allow third party cookies to be set. ...</div><div class='long'><p>Gets whether the <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> should allow third party cookies to be set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>webview</span> : Object {WebView}<div class='sub-desc'><p>the WebView instance to get the cookie policy for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the WebView accepts third party cookies</p>\n</div></li></ul></div></div></div><div id='method-allowFileSchemeCookies' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-allowFileSchemeCookies' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-allowFileSchemeCookies' class='name expandable'>allowFileSchemeCookies</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets whether the application's android.webkit.WebView instances send and accept\n cookies for file scheme URLs. ...</div><div class='long'><p>Gets whether the application's <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> instances send and accept\n cookies for file scheme URLs.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if WebView instances send and accept cookies for\n         file scheme URLs</p>\n</div></li></ul></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ensures all cookies currently accessible through the getCookie API are\n written to persistent storage. ...</div><div class='long'><p>Ensures all cookies currently accessible through the getCookie API are\n written to persistent storage.\n This call will block the caller until it is done and may perform I/O.</p>\n</div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'></span> ) : Object {android.webkit.CookieManager}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the singleton CookieManager instance. ...</div><div class='long'><p>Gets the singleton CookieManager instance.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.webkit.CookieManager}</span><div class='sub-desc'><p>the singleton CookieManager instance</p>\n</div></li></ul></div></div></div><div id='method-removeAllCookie' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-removeAllCookie' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-removeAllCookie' class='name expandable'>removeAllCookie</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Removes all cookies. ...</div><div class='long'><p>Removes all cookies.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use removeAllCookies(ValueCallback) instead.</p>\n\n        </div>\n</div></div></div><div id='method-removeAllCookies' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-removeAllCookies' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-removeAllCookies' class='name expandable'>removeAllCookies</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all cookies. ...</div><div class='long'><p>Removes all cookies.\n <p>\n This method is asynchronous.\n If a <a href=\"#!/api/android.webkit.ValueCallback\" rel=\"android.webkit.ValueCallback\" class=\"docClass\">android.webkit.ValueCallback</a> is provided,\n onReceiveValue() will be called on the current\n thread's android.os.Looper once the operation is complete.\n The value provided to the callback indicates whether any cookies were removed.\n You can pass {@code null} as the callback if you don't need to know when the operation\n completes or whether any cookies were removed, and in this case it is safe to call the\n method from a thread without a Looper.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {android.webkit.ValueCallback}<div class='sub-desc'><p>a callback which is executed when the cookies have been removed</p>\n</div></li></ul></div></div></div><div id='method-removeExpiredCookie' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-removeExpiredCookie' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-removeExpiredCookie' class='name expandable'>removeExpiredCookie</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Removes all expired cookies. ...</div><div class='long'><p>Removes all expired cookies.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The WebView handles removing expired cookies automatically.</p>\n\n        </div>\n</div></div></div><div id='method-removeSessionCookie' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-removeSessionCookie' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-removeSessionCookie' class='name expandable'>removeSessionCookie</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Removes all session cookies, which are cookies without an expiration\n date. ...</div><div class='long'><p>Removes all session cookies, which are cookies without an expiration\n date.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>use removeSessionCookies(ValueCallback) instead.</p>\n\n        </div>\n</div></div></div><div id='method-removeSessionCookies' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-removeSessionCookies' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-removeSessionCookies' class='name expandable'>removeSessionCookies</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes all session cookies, which are cookies without an expiration\n date. ...</div><div class='long'><p>Removes all session cookies, which are cookies without an expiration\n date.\n <p>\n This method is asynchronous.\n If a <a href=\"#!/api/android.webkit.ValueCallback\" rel=\"android.webkit.ValueCallback\" class=\"docClass\">android.webkit.ValueCallback</a> is provided,\n onReceiveValue() will be called on the current\n thread's android.os.Looper once the operation is complete.\n The value provided to the callback indicates whether any cookies were removed.\n You can pass {@code null} as the callback if you don't need to know when the operation\n completes or whether any cookie were removed, and in this case it is safe to call the\n method from a thread without a Looper.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {android.webkit.ValueCallback}<div class='sub-desc'><p>a callback which is executed when the session cookies have been removed</p>\n</div></li></ul></div></div></div><div id='method-setAcceptCookie' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-setAcceptCookie' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-setAcceptCookie' class='name expandable'>setAcceptCookie</a>( <span class='pre'>accept</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the application's android.webkit.WebView instances should send and\n accept cookies. ...</div><div class='long'><p>Sets whether the application's <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> instances should send and\n accept cookies.\n By default this is set to {@code true} and the WebView accepts cookies.\n <p>\n When this is {@code true}\n <a href=\"#!/api/android.webkit.CookieManager-method-setAcceptThirdPartyCookies\" rel=\"android.webkit.CookieManager-method-setAcceptThirdPartyCookies\" class=\"docClass\">setAcceptThirdPartyCookies</a> and\n <a href=\"#!/api/android.webkit.CookieManager-method-setAcceptFileSchemeCookies\" rel=\"android.webkit.CookieManager-method-setAcceptFileSchemeCookies\" class=\"docClass\">setAcceptFileSchemeCookies</a>\n can be used to control the policy for those specific types of cookie.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>accept</span> : Boolean<div class='sub-desc'><p>whether WebView instances should send and accept\n               cookies</p>\n</div></li></ul></div></div></div><div id='method-setAcceptFileSchemeCookies' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-setAcceptFileSchemeCookies' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-setAcceptFileSchemeCookies' class='name expandable'>setAcceptFileSchemeCookies</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the application's android.webkit.WebView instances should send and\n accept cookies for file scheme URLs. ...</div><div class='long'><p>Sets whether the application's <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> instances should send and\n accept cookies for file scheme URLs.\n Use of cookies with file scheme URLs is potentially insecure and turned\n off by default.\n Do not use this feature unless you can be sure that no unintentional\n sharing of cookie data can take place.\n <p>\n Note that calls to this method will have no effect if made after a\n <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> or CookieManager instance has been created.</p>\n</div></div></div><div id='method-setAcceptThirdPartyCookies' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-setAcceptThirdPartyCookies' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-setAcceptThirdPartyCookies' class='name expandable'>setAcceptThirdPartyCookies</a>( <span class='pre'>webview, accept</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the android.webkit.WebView should allow third party cookies to be set. ...</div><div class='long'><p>Sets whether the <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> should allow third party cookies to be set.\n Allowing third party cookies is a per WebView policy and can be set\n differently on different WebView instances.\n <p>\n Apps that target android.os.Build.VERSION_CODES.KITKAT or below\n default to allowing third party cookies. Apps targeting\n android.os.Build.VERSION_CODES.LOLLIPOP or later default to disallowing\n third party cookies.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>webview</span> : Object {WebView}<div class='sub-desc'><p>the WebView instance to set the cookie policy on</p>\n</div></li><li><span class='pre'>accept</span> : Boolean<div class='sub-desc'><p>whether the WebView instance should accept\n               third party cookies</p>\n</div></li></ul></div></div></div><div id='method-setCookie' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.CookieManager'>android.webkit.CookieManager</span><br/><a href='source/CookieManager.html#android-webkit-CookieManager-method-setCookie' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.CookieManager-method-setCookie' class='name expandable'>setCookie</a>( <span class='pre'>url, value, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a cookie for the given URL. ...</div><div class='long'><p>Sets a cookie for the given URL. Any existing cookie with the same host,\n path and name will be replaced with the new cookie. The cookie being set\n will be ignored if it is expired.\n <p>\n This method is asynchronous.\n If a <a href=\"#!/api/android.webkit.ValueCallback\" rel=\"android.webkit.ValueCallback\" class=\"docClass\">android.webkit.ValueCallback</a> is provided,\n onReceiveValue() will be called on the current\n thread's android.os.Looper once the operation is complete.\n The value provided to the callback indicates whether the cookie was set successfully.\n You can pass {@code null} as the callback if you don't need to know when the operation\n completes or whether it succeeded, and in this case it is safe to call the method from a\n thread without a Looper.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>the URL for which the cookie is to be set</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>the cookie as a string, using the format of the 'Set-Cookie'\n              HTTP response header</p>\n</div></li><li><span class='pre'>callback</span> : Object {android.webkit.ValueCallback}<div class='sub-desc'><p>a callback to be executed when the cookie has been set</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});