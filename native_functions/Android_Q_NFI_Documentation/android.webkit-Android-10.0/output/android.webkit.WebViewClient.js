Ext.data.JsonP.android_webkit_WebViewClient({"tagname":"class","name":"android.webkit.WebViewClient","autodetected":{},"files":[{"filename":"WebViewClient.js","href":"WebViewClient.html#android-webkit-WebViewClient"}],"extends":"java.lang.Object","members":[{"name":"ERROR_AUTHENTICATION","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_AUTHENTICATION","meta":{}},{"name":"ERROR_BAD_URL","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_BAD_URL","meta":{}},{"name":"ERROR_CONNECT","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_CONNECT","meta":{}},{"name":"ERROR_FAILED_SSL_HANDSHAKE","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_FAILED_SSL_HANDSHAKE","meta":{}},{"name":"ERROR_FILE","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_FILE","meta":{}},{"name":"ERROR_FILE_NOT_FOUND","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_FILE_NOT_FOUND","meta":{}},{"name":"ERROR_HOST_LOOKUP","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_HOST_LOOKUP","meta":{}},{"name":"ERROR_IO","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_IO","meta":{}},{"name":"ERROR_PROXY_AUTHENTICATION","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_PROXY_AUTHENTICATION","meta":{}},{"name":"ERROR_REDIRECT_LOOP","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_REDIRECT_LOOP","meta":{}},{"name":"ERROR_TIMEOUT","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_TIMEOUT","meta":{}},{"name":"ERROR_TOO_MANY_REQUESTS","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_TOO_MANY_REQUESTS","meta":{}},{"name":"ERROR_UNKNOWN","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_UNKNOWN","meta":{}},{"name":"ERROR_UNSAFE_RESOURCE","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_UNSAFE_RESOURCE","meta":{}},{"name":"ERROR_UNSUPPORTED_AUTH_SCHEME","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_UNSUPPORTED_AUTH_SCHEME","meta":{}},{"name":"ERROR_UNSUPPORTED_SCHEME","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-ERROR_UNSUPPORTED_SCHEME","meta":{}},{"name":"SAFE_BROWSING_THREAT_BILLING","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-SAFE_BROWSING_THREAT_BILLING","meta":{}},{"name":"SAFE_BROWSING_THREAT_MALWARE","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-SAFE_BROWSING_THREAT_MALWARE","meta":{}},{"name":"SAFE_BROWSING_THREAT_PHISHING","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-SAFE_BROWSING_THREAT_PHISHING","meta":{}},{"name":"SAFE_BROWSING_THREAT_UNKNOWN","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-SAFE_BROWSING_THREAT_UNKNOWN","meta":{}},{"name":"SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE","tagname":"property","owner":"android.webkit.WebViewClient","id":"property-SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE","meta":{}},{"name":"doUpdateVisitedHistory","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-doUpdateVisitedHistory","meta":{}},{"name":"onFormResubmission","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onFormResubmission","meta":{}},{"name":"onLoadResource","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onLoadResource","meta":{}},{"name":"onPageCommitVisible","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onPageCommitVisible","meta":{}},{"name":"onPageFinished","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onPageFinished","meta":{}},{"name":"onPageStarted","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onPageStarted","meta":{}},{"name":"onReceivedClientCertRequest","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onReceivedClientCertRequest","meta":{}},{"name":"onReceivedError","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onReceivedError","meta":{}},{"name":"onReceivedHttpAuthRequest","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onReceivedHttpAuthRequest","meta":{}},{"name":"onReceivedHttpError","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onReceivedHttpError","meta":{}},{"name":"onReceivedLoginRequest","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onReceivedLoginRequest","meta":{}},{"name":"onReceivedSslError","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onReceivedSslError","meta":{}},{"name":"onRenderProcessGone","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onRenderProcessGone","meta":{}},{"name":"onSafeBrowsingHit","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onSafeBrowsingHit","meta":{}},{"name":"onScaleChanged","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onScaleChanged","meta":{}},{"name":"onTooManyRedirects","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onTooManyRedirects","meta":{"deprecated":{"text":"<p>This method is no longer called. When the WebView encounters\n             a redirect loop, it will cancel the load.</p>\n"}}},{"name":"onUnhandledInputEvent","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onUnhandledInputEvent","meta":{"removed":{"text":"\n"}}},{"name":"onUnhandledKeyEvent","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-onUnhandledKeyEvent","meta":{}},{"name":"shouldInterceptRequest","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-shouldInterceptRequest","meta":{}},{"name":"shouldOverrideKeyEvent","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-shouldOverrideKeyEvent","meta":{}},{"name":"shouldOverrideUrlLoading","tagname":"method","owner":"android.webkit.WebViewClient","id":"method-shouldOverrideUrlLoading","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.webkit.WebViewClient","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.webkit.WebViewClient</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WebViewClient.html#android-webkit-WebViewClient' target='_blank'>WebViewClient.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ERROR_AUTHENTICATION' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_AUTHENTICATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_AUTHENTICATION' class='name expandable'>ERROR_AUTHENTICATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>User authentication failed on server ...</div><div class='long'><p>User authentication failed on server</p>\n<p>Defaults to: <code>&quot;-4&quot;</code></p></div></div></div><div id='property-ERROR_BAD_URL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_BAD_URL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_BAD_URL' class='name expandable'>ERROR_BAD_URL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Malformed URL ...</div><div class='long'><p>Malformed URL</p>\n<p>Defaults to: <code>&quot;-12&quot;</code></p></div></div></div><div id='property-ERROR_CONNECT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_CONNECT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_CONNECT' class='name expandable'>ERROR_CONNECT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Failed to connect to the server ...</div><div class='long'><p>Failed to connect to the server</p>\n<p>Defaults to: <code>&quot;-6&quot;</code></p></div></div></div><div id='property-ERROR_FAILED_SSL_HANDSHAKE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_FAILED_SSL_HANDSHAKE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_FAILED_SSL_HANDSHAKE' class='name expandable'>ERROR_FAILED_SSL_HANDSHAKE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Failed to perform SSL handshake ...</div><div class='long'><p>Failed to perform SSL handshake</p>\n<p>Defaults to: <code>&quot;-11&quot;</code></p></div></div></div><div id='property-ERROR_FILE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_FILE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_FILE' class='name expandable'>ERROR_FILE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Generic file error ...</div><div class='long'><p>Generic file error</p>\n<p>Defaults to: <code>&quot;-13&quot;</code></p></div></div></div><div id='property-ERROR_FILE_NOT_FOUND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_FILE_NOT_FOUND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_FILE_NOT_FOUND' class='name expandable'>ERROR_FILE_NOT_FOUND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>File not found ...</div><div class='long'><p>File not found</p>\n<p>Defaults to: <code>&quot;-14&quot;</code></p></div></div></div><div id='property-ERROR_HOST_LOOKUP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_HOST_LOOKUP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_HOST_LOOKUP' class='name expandable'>ERROR_HOST_LOOKUP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Server or proxy hostname lookup failed ...</div><div class='long'><p>Server or proxy hostname lookup failed</p>\n<p>Defaults to: <code>&quot;-2&quot;</code></p></div></div></div><div id='property-ERROR_IO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_IO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_IO' class='name expandable'>ERROR_IO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Failed to read or write to the server ...</div><div class='long'><p>Failed to read or write to the server</p>\n<p>Defaults to: <code>&quot;-7&quot;</code></p></div></div></div><div id='property-ERROR_PROXY_AUTHENTICATION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_PROXY_AUTHENTICATION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_PROXY_AUTHENTICATION' class='name expandable'>ERROR_PROXY_AUTHENTICATION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>User authentication failed on proxy ...</div><div class='long'><p>User authentication failed on proxy</p>\n<p>Defaults to: <code>&quot;-5&quot;</code></p></div></div></div><div id='property-ERROR_REDIRECT_LOOP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_REDIRECT_LOOP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_REDIRECT_LOOP' class='name expandable'>ERROR_REDIRECT_LOOP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Too many redirects ...</div><div class='long'><p>Too many redirects</p>\n<p>Defaults to: <code>&quot;-9&quot;</code></p></div></div></div><div id='property-ERROR_TIMEOUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_TIMEOUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_TIMEOUT' class='name expandable'>ERROR_TIMEOUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Connection timed out ...</div><div class='long'><p>Connection timed out</p>\n<p>Defaults to: <code>&quot;-8&quot;</code></p></div></div></div><div id='property-ERROR_TOO_MANY_REQUESTS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_TOO_MANY_REQUESTS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_TOO_MANY_REQUESTS' class='name expandable'>ERROR_TOO_MANY_REQUESTS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Too many requests during this load ...</div><div class='long'><p>Too many requests during this load</p>\n<p>Defaults to: <code>&quot;-15&quot;</code></p></div></div></div><div id='property-ERROR_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_UNKNOWN' class='name expandable'>ERROR_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Generic error ...</div><div class='long'><p>Generic error</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-ERROR_UNSAFE_RESOURCE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_UNSAFE_RESOURCE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_UNSAFE_RESOURCE' class='name expandable'>ERROR_UNSAFE_RESOURCE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Resource load was canceled by Safe Browsing ...</div><div class='long'><p>Resource load was canceled by Safe Browsing</p>\n<p>Defaults to: <code>&quot;-16&quot;</code></p></div></div></div><div id='property-ERROR_UNSUPPORTED_AUTH_SCHEME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_UNSUPPORTED_AUTH_SCHEME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_UNSUPPORTED_AUTH_SCHEME' class='name expandable'>ERROR_UNSUPPORTED_AUTH_SCHEME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unsupported authentication scheme (not basic or digest) ...</div><div class='long'><p>Unsupported authentication scheme (not basic or digest)</p>\n<p>Defaults to: <code>&quot;-3&quot;</code></p></div></div></div><div id='property-ERROR_UNSUPPORTED_SCHEME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-ERROR_UNSUPPORTED_SCHEME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-ERROR_UNSUPPORTED_SCHEME' class='name expandable'>ERROR_UNSUPPORTED_SCHEME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unsupported URI scheme ...</div><div class='long'><p>Unsupported URI scheme</p>\n<p>Defaults to: <code>&quot;-10&quot;</code></p></div></div></div><div id='property-SAFE_BROWSING_THREAT_BILLING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-SAFE_BROWSING_THREAT_BILLING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-SAFE_BROWSING_THREAT_BILLING' class='name expandable'>SAFE_BROWSING_THREAT_BILLING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The resource was blocked because it may trick the user into a billing agreement. ...</div><div class='long'><p>The resource was blocked because it may trick the user into a billing agreement.</p>\n\n<p><p>This constant is only used when targetSdkVersion is at least android.os.Build.VERSION_CODES.Q. Otherwise, <a href=\"#!/api/android.webkit.WebViewClient-property-SAFE_BROWSING_THREAT_UNKNOWN\" rel=\"android.webkit.WebViewClient-property-SAFE_BROWSING_THREAT_UNKNOWN\" class=\"docClass\">SAFE_BROWSING_THREAT_UNKNOWN</a> is used\ninstead.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-SAFE_BROWSING_THREAT_MALWARE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-SAFE_BROWSING_THREAT_MALWARE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-SAFE_BROWSING_THREAT_MALWARE' class='name expandable'>SAFE_BROWSING_THREAT_MALWARE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The resource was blocked because it contains malware. ...</div><div class='long'><p>The resource was blocked because it contains malware.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SAFE_BROWSING_THREAT_PHISHING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-SAFE_BROWSING_THREAT_PHISHING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-SAFE_BROWSING_THREAT_PHISHING' class='name expandable'>SAFE_BROWSING_THREAT_PHISHING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The resource was blocked because it contains deceptive content. ...</div><div class='long'><p>The resource was blocked because it contains deceptive content.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SAFE_BROWSING_THREAT_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-SAFE_BROWSING_THREAT_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-SAFE_BROWSING_THREAT_UNKNOWN' class='name expandable'>SAFE_BROWSING_THREAT_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The resource was blocked for an unknown reason. ...</div><div class='long'><p>The resource was blocked for an unknown reason.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-property-SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-property-SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE' class='name expandable'>SAFE_BROWSING_THREAT_UNWANTED_SOFTWARE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The resource was blocked because it contains unwanted software. ...</div><div class='long'><p>The resource was blocked because it contains unwanted software.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-doUpdateVisitedHistory' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-doUpdateVisitedHistory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-doUpdateVisitedHistory' class='name expandable'>doUpdateVisitedHistory</a>( <span class='pre'>view, url, isReload</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application to update its visited links database. ...</div><div class='long'><p>Notify the host application to update its visited links database.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url being visited.</p>\n</div></li><li><span class='pre'>isReload</span> : Boolean<div class='sub-desc'><p>{@code true} if this url is being reloaded.</p>\n</div></li></ul></div></div></div><div id='method-onFormResubmission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onFormResubmission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onFormResubmission' class='name expandable'>onFormResubmission</a>( <span class='pre'>view, dontResend, resend</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>As the host application if the browser should resend data as the\n requested page was a result of a POST. ...</div><div class='long'><p>As the host application if the browser should resend data as the\n requested page was a result of a POST. The default is to not resend the\n data.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>dontResend</span> : Object {Message}<div class='sub-desc'><p>The message to send if the browser should not resend</p>\n</div></li><li><span class='pre'>resend</span> : Object {Message}<div class='sub-desc'><p>The message to send if the browser should resend data</p>\n</div></li></ul></div></div></div><div id='method-onLoadResource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onLoadResource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onLoadResource' class='name expandable'>onLoadResource</a>( <span class='pre'>view, url</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that the WebView will load the resource\n specified by the given url. ...</div><div class='long'><p>Notify the host application that the WebView will load the resource\n specified by the given url.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url of the resource the WebView will load.</p>\n</div></li></ul></div></div></div><div id='method-onPageCommitVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onPageCommitVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onPageCommitVisible' class='name expandable'>onPageCommitVisible</a>( <span class='pre'>view, url</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that android.webkit.WebView content left over from\n previous page navigations will no lon...</div><div class='long'><p>Notify the host application that <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> content left over from\n previous page navigations will no longer be drawn.</p>\n\n<p> <p>This callback can be used to determine the point at which it is safe to make a recycled\n <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> visible, ensuring that no stale content is shown. It is called\n at the earliest point at which it can be guaranteed that android.webkit.WebView.onDraw will no\n longer draw any content from previous navigations. The next draw will display either the\n background color of the <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a>, or some of the\n contents of the newly loaded page.</p>\n\n<p> <p>This method is called when the body of the HTTP response has started loading, is reflected\n in the DOM, and will be visible in subsequent draws. This callback occurs early in the\n document loading process, and as such you should expect that linked resources (for example,\n CSS and images) may not be available.</p>\n\n<p> <p>For more fine-grained notification of visual state updates, see android.webkit.WebView.postVisualStateCallback.</p>\n\n<p> <p>Please note that all the conditions and recommendations applicable to\n android.webkit.WebView.postVisualStateCallback also apply to this API.</p>\n\n<p> <p>This callback is only called for main frame navigations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> for which the navigation occurred.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The URL corresponding to the page navigation that triggered this callback.</p>\n</div></li></ul></div></div></div><div id='method-onPageFinished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onPageFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onPageFinished' class='name expandable'>onPageFinished</a>( <span class='pre'>view, url</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that a page has finished loading. ...</div><div class='long'><p>Notify the host application that a page has finished loading. This method\n is called only for main frame. Receiving an {@code onPageFinished()} callback does not\n guarantee that the next frame drawn by WebView will reflect the state of the DOM at this\n point. In order to be notified that the current DOM state is ready to be rendered, request a\n visual state callback with android.webkit.WebView.postVisualStateCallback and wait for the supplied\n callback to be triggered.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url of the page.</p>\n</div></li></ul></div></div></div><div id='method-onPageStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onPageStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onPageStarted' class='name expandable'>onPageStarted</a>( <span class='pre'>view, url, favicon</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that a page has started loading. ...</div><div class='long'><p>Notify the host application that a page has started loading. This method\n is called once for each main frame load so a page with iframes or\n framesets will call onPageStarted one time for the main frame. This also\n means that onPageStarted will not be called when the contents of an\n embedded frame changes, i.e. clicking a link whose target is an iframe,\n it will also not be called for fragment navigations (navigations to\n #fragment_id).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url to be loaded.</p>\n</div></li><li><span class='pre'>favicon</span> : Object {Bitmap}<div class='sub-desc'><p>The favicon for this page if it already exists in the\n            database.</p>\n</div></li></ul></div></div></div><div id='method-onReceivedClientCertRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onReceivedClientCertRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onReceivedClientCertRequest' class='name expandable'>onReceivedClientCertRequest</a>( <span class='pre'>view, request</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application to handle a SSL client certificate request. ...</div><div class='long'><p>Notify the host application to handle a SSL client certificate request. The host application\n is responsible for showing the UI if desired and providing the keys. There are three ways to\n respond: <a href=\"#!/api/android.webkit.ClientCertRequest-method-proceed\" rel=\"android.webkit.ClientCertRequest-method-proceed\" class=\"docClass\">android.webkit.ClientCertRequest.proceed</a>, <a href=\"#!/api/android.webkit.ClientCertRequest-method-cancel\" rel=\"android.webkit.ClientCertRequest-method-cancel\" class=\"docClass\">android.webkit.ClientCertRequest.cancel</a>, or <a href=\"#!/api/android.webkit.ClientCertRequest-method-ignore\" rel=\"android.webkit.ClientCertRequest-method-ignore\" class=\"docClass\">android.webkit.ClientCertRequest.ignore</a>. Webview stores the response in memory (for the life of the\n application) if <a href=\"#!/api/android.webkit.ClientCertRequest-method-proceed\" rel=\"android.webkit.ClientCertRequest-method-proceed\" class=\"docClass\">android.webkit.ClientCertRequest.proceed</a> or <a href=\"#!/api/android.webkit.ClientCertRequest-method-cancel\" rel=\"android.webkit.ClientCertRequest-method-cancel\" class=\"docClass\">android.webkit.ClientCertRequest.cancel</a> is\n called and does not call {@code onReceivedClientCertRequest()} again for the same host and\n port pair. Webview does not store the response if <a href=\"#!/api/android.webkit.ClientCertRequest-method-ignore\" rel=\"android.webkit.ClientCertRequest-method-ignore\" class=\"docClass\">android.webkit.ClientCertRequest.ignore</a>\n is called. Note that, multiple layers in chromium network stack might be\n caching the responses, so the behavior for ignore is only a best case\n effort.</p>\n\n<p> This method is called on the UI thread. During the callback, the\n connection is suspended.</p>\n\n<p> For most use cases, the application program should implement the\n android.security.KeyChainAliasCallback interface and pass it to\n android.security.KeyChain.choosePrivateKeyAlias to start an\n activity for the user to choose the proper alias. The keychain activity will\n provide the alias through the callback method in the implemented interface. Next\n the application should create an async task to call\n android.security.KeyChain.getPrivateKey to receive the key.</p>\n\n<p> An example implementation of client certificates can be seen at\n <A href=\"https://android.googlesource.com/platform/packages/apps/Browser/+/android-5.1.1_r1/src/com/android/browser/Tab.java\">\n AOSP Browser</A></p>\n\n<p> The default behavior is to cancel, returning no client certificate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback</p>\n</div></li><li><span class='pre'>request</span> : Object {ClientCertRequest}<div class='sub-desc'><p>An instance of a ClientCertRequest</p>\n</div></li></ul></div></div></div><div id='method-onReceivedError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onReceivedError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onReceivedError' class='name expandable'>onReceivedError</a>( <span class='pre'>view, request, error</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report web resource loading error to the host application. ...</div><div class='long'><p>Report web resource loading error to the host application. These errors usually indicate\n inability to connect to the server. Note that unlike the deprecated version of the callback,\n the new version will be called for any resource (iframe, image, etc.), not just for the main\n page. Thus, it is recommended to perform minimum required work in this callback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>request</span> : Object {WebResourceRequest}<div class='sub-desc'><p>The originating request.</p>\n</div></li><li><span class='pre'>error</span> : Object {WebResourceError}<div class='sub-desc'><p>Information about the error occurred.</p>\n</div></li></ul></div></div></div><div id='method-onReceivedHttpAuthRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onReceivedHttpAuthRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onReceivedHttpAuthRequest' class='name expandable'>onReceivedHttpAuthRequest</a>( <span class='pre'>view, handler, host, realm</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the host application that the WebView received an HTTP\n authentication request. ...</div><div class='long'><p>Notifies the host application that the WebView received an HTTP\n authentication request. The host application can use the supplied\n <a href=\"#!/api/android.webkit.HttpAuthHandler\" rel=\"android.webkit.HttpAuthHandler\" class=\"docClass\">android.webkit.HttpAuthHandler</a> to set the WebView's response to the request.\n The default behavior is to cancel the request.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>the WebView that is initiating the callback</p>\n</div></li><li><span class='pre'>handler</span> : Object {HttpAuthHandler}<div class='sub-desc'><p>the HttpAuthHandler used to set the WebView's response</p>\n</div></li><li><span class='pre'>host</span> : String<div class='sub-desc'><p>the host requiring authentication</p>\n</div></li><li><span class='pre'>realm</span> : String<div class='sub-desc'><p>the realm for which authentication is required\n@see WebView#getHttpAuthUsernamePassword</p>\n</div></li></ul></div></div></div><div id='method-onReceivedHttpError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onReceivedHttpError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onReceivedHttpError' class='name expandable'>onReceivedHttpError</a>( <span class='pre'>view, request, errorResponse</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that an HTTP error has been received from the server while\n loading a resource. ...</div><div class='long'><p>Notify the host application that an HTTP error has been received from the server while\n loading a resource.  HTTP errors have status codes &gt;= 400.  This callback will be called\n for any resource (iframe, image, etc.), not just for the main page. Thus, it is recommended\n to perform minimum required work in this callback. Note that the content of the server\n response may not be provided within the {@code errorResponse} parameter.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>request</span> : Object {WebResourceRequest}<div class='sub-desc'><p>The originating request.</p>\n</div></li><li><span class='pre'>errorResponse</span> : Object {WebResourceResponse}<div class='sub-desc'><p>Information about the error occurred.</p>\n</div></li></ul></div></div></div><div id='method-onReceivedLoginRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onReceivedLoginRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onReceivedLoginRequest' class='name expandable'>onReceivedLoginRequest</a>( <span class='pre'>view, realm, account, args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that a request to automatically log in the\n user has been processed. ...</div><div class='long'><p>Notify the host application that a request to automatically log in the\n user has been processed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView requesting the login.</p>\n</div></li><li><span class='pre'>realm</span> : String<div class='sub-desc'><p>The account realm used to look up accounts.</p>\n</div></li><li><span class='pre'>account</span> : String<div class='sub-desc'><p>An optional account. If not {@code null}, the account should be\n                checked against accounts on the device. If it is a valid\n                account, it should be used to log in the user.</p>\n</div></li><li><span class='pre'>args</span> : String<div class='sub-desc'><p>Authenticator specific arguments used to log in the user.</p>\n</div></li></ul></div></div></div><div id='method-onReceivedSslError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onReceivedSslError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onReceivedSslError' class='name expandable'>onReceivedSslError</a>( <span class='pre'>view, handler, error</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that an SSL error occurred while loading a\n resource. ...</div><div class='long'><p>Notify the host application that an SSL error occurred while loading a\n resource. The host application must call either <a href=\"#!/api/android.webkit.SslErrorHandler-method-cancel\" rel=\"android.webkit.SslErrorHandler-method-cancel\" class=\"docClass\">android.webkit.SslErrorHandler.cancel</a> or\n <a href=\"#!/api/android.webkit.SslErrorHandler-method-proceed\" rel=\"android.webkit.SslErrorHandler-method-proceed\" class=\"docClass\">android.webkit.SslErrorHandler.proceed</a>. Note that the decision may be retained for use in\n response to future SSL errors. The default behavior is to cancel the\n load.\n <p>\n This API is only called for recoverable SSL certificate errors. In the case of\n non-recoverable errors (such as when the server fails the client), WebView will call WebResourceRequest, android.webkit.WebResourceError) with <a href=\"#!/api/android.webkit.WebViewClient-property-ERROR_FAILED_SSL_HANDSHAKE\" rel=\"android.webkit.WebViewClient-property-ERROR_FAILED_SSL_HANDSHAKE\" class=\"docClass\">ERROR_FAILED_SSL_HANDSHAKE</a>.\n <p>\n Applications are advised not to prompt the user about SSL errors, as\n the user is unlikely to be able to make an informed security decision\n and WebView does not provide any UI for showing the details of the\n error in a meaningful way.\n <p>\n Application overrides of this method may display custom error pages or\n silently log issues, but it is strongly recommended to always call\n <a href=\"#!/api/android.webkit.SslErrorHandler-method-cancel\" rel=\"android.webkit.SslErrorHandler-method-cancel\" class=\"docClass\">android.webkit.SslErrorHandler.cancel</a> and never allow proceeding past errors.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>handler</span> : Object {SslErrorHandler}<div class='sub-desc'><p>An SslErrorHandler that will handle the user's\n            response.</p>\n</div></li><li><span class='pre'>error</span> : Object {SslError}<div class='sub-desc'><p>The SSL error object.</p>\n</div></li></ul></div></div></div><div id='method-onRenderProcessGone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onRenderProcessGone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onRenderProcessGone' class='name expandable'>onRenderProcessGone</a>( <span class='pre'>view, detail</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify host application that the given WebView's render process has exited. ...</div><div class='long'><p>Notify host application that the given WebView's render process has exited.</p>\n\n<p> Multiple WebView instances may be associated with a single render process;\n onRenderProcessGone will be called for each WebView that was affected.\n The application's implementation of this callback should only attempt to\n clean up the specific WebView given as a parameter, and should not assume\n that other WebView instances are affected.</p>\n\n<p> The given WebView can't be used, and should be removed from the view hierarchy,\n all references to it should be cleaned up, e.g any references in the Activity\n or other classes saved using android.view.View.findViewById and similar calls, etc.</p>\n\n<p> To cause an render process crash for test purpose, the application can\n call {@code loadUrl(\"chrome://crash\")} on the WebView. Note that multiple WebView\n instances may be affected if they share a render process, not just the\n specific WebView which loaded chrome://crash.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView which needs to be cleaned up.</p>\n</div></li><li><span class='pre'>detail</span> : Object {RenderProcessGoneDetail}<div class='sub-desc'><p>the reason why it exited.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the host application handled the situation that process has\n         exited, otherwise, application will crash if render process crashed,\n         or be killed if render process was killed by the system.</p>\n</div></li></ul></div></div></div><div id='method-onSafeBrowsingHit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onSafeBrowsingHit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onSafeBrowsingHit' class='name expandable'>onSafeBrowsingHit</a>( <span class='pre'>view, request, threatType, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that a loading URL has been flagged by Safe Browsing. ...</div><div class='long'><p>Notify the host application that a loading URL has been flagged by Safe Browsing.</p>\n\n<p> The application must invoke the callback to indicate the preferred response. The default\n behavior is to show an interstitial to the user, with the reporting checkbox visible.</p>\n\n<p> If the application needs to show its own custom interstitial UI, the callback can be invoked\n asynchronously with <a href=\"#!/api/android.webkit.SafeBrowsingResponse-method-backToSafety\" rel=\"android.webkit.SafeBrowsingResponse-method-backToSafety\" class=\"docClass\">android.webkit.SafeBrowsingResponse.backToSafety</a> or <a href=\"#!/api/android.webkit.SafeBrowsingResponse-method-proceed\" rel=\"android.webkit.SafeBrowsingResponse-method-proceed\" class=\"docClass\">android.webkit.SafeBrowsingResponse.proceed</a>, depending on user response.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that hit the malicious resource.</p>\n</div></li><li><span class='pre'>request</span> : Object {WebResourceRequest}<div class='sub-desc'><p>Object containing the details of the request.</p>\n</div></li><li><span class='pre'>threatType</span> : Number<div class='sub-desc'><p>The reason the resource was caught by Safe Browsing, corresponding to a\n                   {@code SAFE_BROWSING_THREAT_*} value.</p>\n</div></li><li><span class='pre'>callback</span> : Object {SafeBrowsingResponse}<div class='sub-desc'><p>Applications must invoke one of the callback methods.</p>\n</div></li></ul></div></div></div><div id='method-onScaleChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onScaleChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onScaleChanged' class='name expandable'>onScaleChanged</a>( <span class='pre'>view, oldScale, newScale</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that the scale applied to the WebView has\n changed. ...</div><div class='long'><p>Notify the host application that the scale applied to the WebView has\n changed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>oldScale</span> : Number<div class='sub-desc'><p>The old scale factor</p>\n</div></li><li><span class='pre'>newScale</span> : Number<div class='sub-desc'><p>The new scale factor</p>\n</div></li></ul></div></div></div><div id='method-onTooManyRedirects' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onTooManyRedirects' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onTooManyRedirects' class='name expandable'>onTooManyRedirects</a>( <span class='pre'>view, cancelMsg, continueMsg</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Notify the host application that there have been an excessive number of\n HTTP redirects. ...</div><div class='long'><p>Notify the host application that there have been an excessive number of\n HTTP redirects. As the host application if it would like to continue\n trying to load the resource. The default behavior is to send the cancel\n message.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is no longer called. When the WebView encounters\n             a redirect loop, it will cancel the load.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>cancelMsg</span> : Object {Message}<div class='sub-desc'><p>The message to send if the host wants to cancel</p>\n</div></li><li><span class='pre'>continueMsg</span> : Object {Message}<div class='sub-desc'><p>The message to send if the host wants to continue</p>\n</div></li></ul></div></div></div><div id='method-onUnhandledInputEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onUnhandledInputEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onUnhandledInputEvent' class='name expandable'>onUnhandledInputEvent</a>( <span class='pre'>view, event</span> )<span class=\"signature\"><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Notify the host application that a input event was not handled by the WebView. ...</div><div class='long'><p>Notify the host application that a input event was not handled by the WebView.\n Except system keys, WebView always consumes input events in the normal flow\n or if <a href=\"#!/api/android.webkit.WebViewClient-method-shouldOverrideKeyEvent\" rel=\"android.webkit.WebViewClient-method-shouldOverrideKeyEvent\" class=\"docClass\">shouldOverrideKeyEvent</a> returns {@code true}. This is called asynchronously\n from where the event is dispatched. It gives the host application a chance\n to handle the unhandled input events.</p>\n\n<p> Note that if the event is a android.view.MotionEvent, then it's lifetime is only\n that of the function call. If the WebViewClient wishes to use the event beyond that, then it\n <i>must</i> create a copy of the event.</p>\n\n<p> It is the responsibility of overriders of this method to call\n KeyEvent)\n when appropriate if they wish to continue receiving events through it.</p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>event</span> : Object {InputEvent}<div class='sub-desc'><p>The input event.</p>\n</div></li></ul></div></div></div><div id='method-onUnhandledKeyEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-onUnhandledKeyEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-onUnhandledKeyEvent' class='name expandable'>onUnhandledKeyEvent</a>( <span class='pre'>view, event</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that a key was not handled by the WebView. ...</div><div class='long'><p>Notify the host application that a key was not handled by the WebView.\n Except system keys, WebView always consumes the keys in the normal flow\n or if <a href=\"#!/api/android.webkit.WebViewClient-method-shouldOverrideKeyEvent\" rel=\"android.webkit.WebViewClient-method-shouldOverrideKeyEvent\" class=\"docClass\">shouldOverrideKeyEvent</a> returns {@code true}. This is called asynchronously\n from where the key is dispatched. It gives the host application a chance\n to handle the unhandled key events.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key event.</p>\n</div></li></ul></div></div></div><div id='method-shouldInterceptRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-shouldInterceptRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-shouldInterceptRequest' class='name expandable'>shouldInterceptRequest</a>( <span class='pre'>view, request</span> ) : Object {android.webkit.WebResourceResponse}<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application of a resource request and allow the\n application to return the data. ...</div><div class='long'><p>Notify the host application of a resource request and allow the\n application to return the data.  If the return value is {@code null}, the WebView\n will continue to load the resource as usual.  Otherwise, the return\n response and data will be used.</p>\n\n<p> <p>This callback is invoked for a variety of URL schemes (e.g., {@code http(s):}, {@code\n data:}, {@code file:}, etc.), not only those schemes which send requests over the network.\n This is not called for {@code javascript:} URLs, {@code blob:} URLs, or for assets accessed\n via {@code file:///android_asset/} or {@code file:///android_res/} URLs.</p>\n\n<p> <p>In the case of redirects, this is only called for the initial resource URL, not any\n subsequent redirect URLs.</p>\n\n<p> <p class=\"note\"><b>Note:</b> This method is called on a thread\n other than the UI thread so clients should exercise caution\n when accessing private data or the view system.</p>\n\n<p> <p class=\"note\"><b>Note:</b> When Safe Browsing is enabled, these URLs still undergo Safe\n Browsing checks. If this is undesired, whitelist the URL with android.webkit.WebView.setSafeBrowsingWhitelist or ignore the warning with <a href=\"#!/api/android.webkit.WebViewClient-method-onSafeBrowsingHit\" rel=\"android.webkit.WebViewClient-method-onSafeBrowsingHit\" class=\"docClass\">onSafeBrowsingHit</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a> that is requesting the\n             resource.</p>\n</div></li><li><span class='pre'>request</span> : Object {WebResourceRequest}<div class='sub-desc'><p>Object containing the details of the request.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.webkit.WebResourceResponse}</span><div class='sub-desc'><p>A <a href=\"#!/api/android.webkit.WebResourceResponse\" rel=\"android.webkit.WebResourceResponse\" class=\"docClass\">android.webkit.WebResourceResponse</a> containing the\n         response information or {@code null} if the WebView should load the\n         resource itself.</p>\n</div></li></ul></div></div></div><div id='method-shouldOverrideKeyEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-shouldOverrideKeyEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-shouldOverrideKeyEvent' class='name expandable'>shouldOverrideKeyEvent</a>( <span class='pre'>view, event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Give the host application a chance to handle the key event synchronously. ...</div><div class='long'><p>Give the host application a chance to handle the key event synchronously.\n e.g. menu shortcut key events need to be filtered this way. If return\n true, WebView will not handle the key event. If return {@code false}, WebView\n will always handle the key event, so none of the super in the view chain\n will see the key event. The default behavior returns {@code false}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the host application wants to handle the key event\n         itself, otherwise return {@code false}</p>\n</div></li></ul></div></div></div><div id='method-shouldOverrideUrlLoading' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebViewClient'>android.webkit.WebViewClient</span><br/><a href='source/WebViewClient.html#android-webkit-WebViewClient-method-shouldOverrideUrlLoading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebViewClient-method-shouldOverrideUrlLoading' class='name expandable'>shouldOverrideUrlLoading</a>( <span class='pre'>view, request</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Give the host application a chance to take control when a URL is about to be loaded in the\n current WebView. ...</div><div class='long'><p>Give the host application a chance to take control when a URL is about to be loaded in the\n current WebView. If a WebViewClient is not provided, by default WebView will ask Activity\n Manager to choose the proper handler for the URL. If a WebViewClient is provided, returning\n {@code true} causes the current WebView to abort loading the URL, while returning\n {@code false} causes the WebView to continue loading the URL as usual.</p>\n\n<p> <p class=\"note\"><b>Note:</b> Do not call android.webkit.WebView.loadUrl(String) with the request's\n URL and then return {@code true}. This unnecessarily cancels the current load and starts a\n new load with the same URL. The correct way to continue loading a given URL is to simply\n return {@code false}, without calling android.webkit.WebView.loadUrl(String).</p>\n\n<p> <p class=\"note\"><b>Note:</b> This method is not called for POST requests.</p>\n\n<p> <p class=\"note\"><b>Note:</b> This method may be called for subframes and with non-HTTP(S)\n schemes; calling android.webkit.WebView.loadUrl(String) with such a URL will fail.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that is initiating the callback.</p>\n</div></li><li><span class='pre'>request</span> : Object {WebResourceRequest}<div class='sub-desc'><p>Object containing the details of the request.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} to cancel the current load, otherwise return {@code false}.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});