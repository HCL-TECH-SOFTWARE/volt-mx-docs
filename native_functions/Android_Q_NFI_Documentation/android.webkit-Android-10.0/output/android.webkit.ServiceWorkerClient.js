Ext.data.JsonP.android_webkit_ServiceWorkerClient({"tagname":"class","name":"android.webkit.ServiceWorkerClient","autodetected":{},"files":[{"filename":"ServiceWorkerClient.js","href":"ServiceWorkerClient.html#android-webkit-ServiceWorkerClient"}],"extends":"java.lang.Object","members":[{"name":"shouldInterceptRequest","tagname":"method","owner":"android.webkit.ServiceWorkerClient","id":"method-shouldInterceptRequest","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.webkit.ServiceWorkerClient","short_doc":"Base class for clients to capture Service Worker related callbacks,\n see android.webkit.ServiceWorkerController for u...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.webkit.ServiceWorkerClient</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ServiceWorkerClient.html#android-webkit-ServiceWorkerClient' target='_blank'>ServiceWorkerClient.js</a></div></pre><div class='doc-contents'><p>Base class for clients to capture Service Worker related callbacks,\n see <a href=\"#!/api/android.webkit.ServiceWorkerController\" rel=\"android.webkit.ServiceWorkerController\" class=\"docClass\">android.webkit.ServiceWorkerController</a> for usage example.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-shouldInterceptRequest' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.ServiceWorkerClient'>android.webkit.ServiceWorkerClient</span><br/><a href='source/ServiceWorkerClient.html#android-webkit-ServiceWorkerClient-method-shouldInterceptRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.ServiceWorkerClient-method-shouldInterceptRequest' class='name expandable'>shouldInterceptRequest</a>( <span class='pre'>request</span> ) : Object {android.webkit.WebResourceResponse}<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application of a resource request and allow the\n application to return the data. ...</div><div class='long'><p>Notify the host application of a resource request and allow the\n application to return the data. If the return value is {@code null}, the\n Service Worker will continue to load the resource as usual.\n Otherwise, the return response and data will be used.</p>\n\n<p> <p class=\"note\"><b>Note:</b> This method is called on a thread other than the UI thread so\n clients should exercise caution when accessing private data or the view system.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : Object {WebResourceRequest}<div class='sub-desc'><p>Object containing the details of the request.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.webkit.WebResourceResponse}</span><div class='sub-desc'><p>A <a href=\"#!/api/android.webkit.WebResourceResponse\" rel=\"android.webkit.WebResourceResponse\" class=\"docClass\">android.webkit.WebResourceResponse</a> containing the\n         response information or {@code null} if the WebView should load the\n         resource itself.\n@see WebViewClient#shouldInterceptRequest(WebView, WebResourceRequest)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});