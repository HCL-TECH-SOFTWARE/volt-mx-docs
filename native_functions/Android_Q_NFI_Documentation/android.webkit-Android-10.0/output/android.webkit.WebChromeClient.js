Ext.data.JsonP.android_webkit_WebChromeClient({"tagname":"class","name":"android.webkit.WebChromeClient","autodetected":{},"files":[{"filename":"WebChromeClient.js","href":"WebChromeClient.html#android-webkit-WebChromeClient"}],"extends":"java.lang.Object","members":[{"name":"getDefaultVideoPoster","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-getDefaultVideoPoster","meta":{}},{"name":"getVideoLoadingProgressView","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-getVideoLoadingProgressView","meta":{}},{"name":"getVisitedHistory","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-getVisitedHistory","meta":{}},{"name":"onCloseWindow","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onCloseWindow","meta":{}},{"name":"onConsoleMessage","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onConsoleMessage","meta":{}},{"name":"onCreateWindow","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onCreateWindow","meta":{}},{"name":"onExceededDatabaseQuota","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onExceededDatabaseQuota","meta":{"deprecated":{"text":"<p>This method is no longer called; WebView now uses the HTML5 / JavaScript Quota\n             Management API.</p>\n"}}},{"name":"onGeolocationPermissionsHidePrompt","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onGeolocationPermissionsHidePrompt","meta":{}},{"name":"onGeolocationPermissionsShowPrompt","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onGeolocationPermissionsShowPrompt","meta":{}},{"name":"onHideCustomView","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onHideCustomView","meta":{}},{"name":"onJsAlert","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onJsAlert","meta":{}},{"name":"onJsBeforeUnload","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onJsBeforeUnload","meta":{}},{"name":"onJsConfirm","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onJsConfirm","meta":{}},{"name":"onJsPrompt","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onJsPrompt","meta":{}},{"name":"onJsTimeout","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onJsTimeout","meta":{"deprecated":{"text":"<p>This method is no longer supported and will not be invoked.</p>\n"}}},{"name":"onPermissionRequest","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onPermissionRequest","meta":{}},{"name":"onPermissionRequestCanceled","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onPermissionRequestCanceled","meta":{}},{"name":"onProgressChanged","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onProgressChanged","meta":{}},{"name":"onReachedMaxAppCacheSize","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onReachedMaxAppCacheSize","meta":{"deprecated":{"text":"<p>This method is no longer called; WebView now uses the HTML5 / JavaScript Quota\n             Management API.</p>\n"}}},{"name":"onReceivedIcon","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onReceivedIcon","meta":{}},{"name":"onReceivedTitle","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onReceivedTitle","meta":{}},{"name":"onReceivedTouchIconUrl","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onReceivedTouchIconUrl","meta":{}},{"name":"onRequestFocus","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onRequestFocus","meta":{}},{"name":"onShowCustomView","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onShowCustomView","meta":{"deprecated":{"text":"<p>This method supports the obsolete plugin mechanism,\n and will not be invoked in future</p>\n"}}},{"name":"onShowFileChooser","tagname":"method","owner":"android.webkit.WebChromeClient","id":"method-onShowFileChooser","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.webkit.WebChromeClient","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.webkit.WebChromeClient</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WebChromeClient.html#android-webkit-WebChromeClient' target='_blank'>WebChromeClient.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getDefaultVideoPoster' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-getDefaultVideoPoster' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-getDefaultVideoPoster' class='name expandable'>getDefaultVideoPoster</a>( <span class='pre'></span> ) : Object {android.graphics.Bitmap}<span class=\"signature\"></span></div><div class='description'><div class='short'>When not playing, video elements are represented by a 'poster' image. ...</div><div class='long'><p>When not playing, video elements are represented by a 'poster' image. The\n image to use can be specified by the poster attribute of the video tag in\n HTML. If the attribute is absent, then a default poster will be used. This\n method allows the ChromeClient to provide that default image.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Bitmap}</span><div class='sub-desc'><p>Bitmap The image to use as a default poster, or {@code null} if no such image is\n available.</p>\n</div></li></ul></div></div></div><div id='method-getVideoLoadingProgressView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-getVideoLoadingProgressView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-getVideoLoadingProgressView' class='name expandable'>getVideoLoadingProgressView</a>( <span class='pre'></span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a View to be displayed while buffering of full screen video is taking\n place. ...</div><div class='long'><p>Obtains a View to be displayed while buffering of full screen video is taking\n place. The host application can override this method to provide a View\n containing a spinner or similar.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>View The View to be displayed whilst the video is loading.</p>\n</div></li></ul></div></div></div><div id='method-getVisitedHistory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-getVisitedHistory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-getVisitedHistory' class='name expandable'>getVisitedHistory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a list of all visited history items, used for link coloring ...</div><div class='long'><p>Obtains a list of all visited history items, used for link coloring</p>\n</div></div></div><div id='method-onCloseWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onCloseWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onCloseWindow' class='name expandable'>onCloseWindow</a>( <span class='pre'>window</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application to close the given WebView and remove it\n from the view system if necessary. ...</div><div class='long'><p>Notify the host application to close the given WebView and remove it\n from the view system if necessary. At this point, WebCore has stopped\n any loading in this window and has removed any cross-scripting ability\n in javascript.\n <p>\n As with <a href=\"#!/api/android.webkit.WebChromeClient-method-onCreateWindow\" rel=\"android.webkit.WebChromeClient-method-onCreateWindow\" class=\"docClass\">onCreateWindow</a>, the application should ensure that any\n URL or security indicator displayed is updated so that the user can tell\n that the page they were interacting with has been closed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>window</span> : Object {WebView}<div class='sub-desc'><p>The WebView that needs to be closed.</p>\n</div></li></ul></div></div></div><div id='method-onConsoleMessage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onConsoleMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onConsoleMessage' class='name expandable'>onConsoleMessage</a>( <span class='pre'>consoleMessage</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Report a JavaScript console message to the host application. ...</div><div class='long'><p>Report a JavaScript console message to the host application. The ChromeClient\n should override this to process the log message as they see fit.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>consoleMessage</span> : Object {ConsoleMessage}<div class='sub-desc'><p>Object containing details of the console message.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the message is handled by the client.</p>\n</div></li></ul></div></div></div><div id='method-onCreateWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onCreateWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onCreateWindow' class='name expandable'>onCreateWindow</a>( <span class='pre'>view, isDialog, isUserGesture, resultMsg</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Request the host application to create a new window. ...</div><div class='long'><p>Request the host application to create a new window. If the host\n application chooses to honor this request, it should return {@code true} from\n this method, create a new WebView to host the window, insert it into the\n View system and send the supplied resultMsg message to its target with\n the new WebView as an argument. If the host application chooses not to\n honor the request, it should return {@code false} from this method. The default\n implementation of this method does nothing and hence returns {@code false}.\n <p>\n Applications should typically not allow windows to be created when the\n {@code isUserGesture} flag is false, as this may be an unwanted popup.\n <p>\n Applications should be careful how they display the new window: don't simply\n overlay it over the existing WebView as this may mislead the user about which\n site they are viewing. If your application displays the URL of the main page,\n make sure to also display the URL of the new window in a similar fashion. If\n your application does not display URLs, consider disallowing the creation of\n new windows entirely.\n <p class=\"note\"><b>Note:</b> There is no trustworthy way to tell which page\n requested the new window: the request might originate from a third-party iframe\n inside the WebView.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView from which the request for a new window\n             originated.</p>\n</div></li><li><span class='pre'>isDialog</span> : Boolean<div class='sub-desc'><p>{@code true} if the new window should be a dialog, rather than\n                 a full-size window.</p>\n</div></li><li><span class='pre'>isUserGesture</span> : Boolean<div class='sub-desc'><p>{@code true} if the request was initiated by a user gesture,\n                      such as the user clicking a link.</p>\n</div></li><li><span class='pre'>resultMsg</span> : Object {Message}<div class='sub-desc'><p>The message to send when once a new WebView has been\n                  created. resultMsg.obj is a\n                  WebView.WebViewTransport object. This should be\n                  used to transport the new WebView, by calling\n                  WebView.WebViewTransport.setWebView(WebView).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>This method should return {@code true} if the host application will\n         create a new window, in which case resultMsg should be sent to\n         its target. Otherwise, this method should return {@code false}. Returning\n         {@code false} from this method but also sending resultMsg will result in\n         undefined behavior.</p>\n</div></li></ul></div></div></div><div id='method-onExceededDatabaseQuota' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onExceededDatabaseQuota' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onExceededDatabaseQuota' class='name expandable'>onExceededDatabaseQuota</a>( <span class='pre'>url, databaseIdentifier, quota, estimatedDatabaseSize, totalQuota, quotaUpdater</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Tell the client that the quota has been exceeded for the Web SQL Database\n API for a particular origin and request a ...</div><div class='long'><p>Tell the client that the quota has been exceeded for the Web SQL Database\n API for a particular origin and request a new quota. The client must\n respond by invoking the\n updateQuota(long)\n method of the supplied <a href=\"#!/api/android.webkit.WebStorage.QuotaUpdater\" rel=\"android.webkit.WebStorage.QuotaUpdater\" class=\"docClass\">android.webkit.WebStorage.QuotaUpdater</a> instance. The\n minimum value that can be set for the new quota is the current quota. The\n default implementation responds with the current quota, so the quota will\n not be increased.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is no longer called; WebView now uses the HTML5 / JavaScript Quota\n             Management API.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The URL of the page that triggered the notification</p>\n</div></li><li><span class='pre'>databaseIdentifier</span> : String<div class='sub-desc'><p>The identifier of the database where the quota\n                           was exceeded.</p>\n</div></li><li><span class='pre'>quota</span> : Number<div class='sub-desc'><p>The quota for the origin, in bytes</p>\n</div></li><li><span class='pre'>estimatedDatabaseSize</span> : Number<div class='sub-desc'><p>The estimated size of the offending\n                              database, in bytes</p>\n</div></li><li><span class='pre'>totalQuota</span> : Number<div class='sub-desc'><p>The total quota for all origins, in bytes</p>\n</div></li><li><span class='pre'>quotaUpdater</span> : Object {WebStorage.QuotaUpdater}<div class='sub-desc'><p>An instance of WebStorage.QuotaUpdater which\n                     must be used to inform the WebView of the new quota.</p>\n</div></li></ul></div></div></div><div id='method-onGeolocationPermissionsHidePrompt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onGeolocationPermissionsHidePrompt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onGeolocationPermissionsHidePrompt' class='name expandable'>onGeolocationPermissionsHidePrompt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that a request for Geolocation permissions,\n made with a previous call to\n onGeolocationP...</div><div class='long'><p>Notify the host application that a request for Geolocation permissions,\n made with a previous call to\n onGeolocationPermissionsShowPrompt()\n has been canceled. Any related UI should therefore be hidden.</p>\n</div></div></div><div id='method-onGeolocationPermissionsShowPrompt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onGeolocationPermissionsShowPrompt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onGeolocationPermissionsShowPrompt' class='name expandable'>onGeolocationPermissionsShowPrompt</a>( <span class='pre'>origin, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that web content from the specified origin\n is attempting to use the Geolocation API, but...</div><div class='long'><p>Notify the host application that web content from the specified origin\n is attempting to use the Geolocation API, but no permission state is\n currently set for that origin. The host application should invoke the\n specified callback with the desired permission state. See\n <a href=\"#!/api/android.webkit.GeolocationPermissions\" rel=\"android.webkit.GeolocationPermissions\" class=\"docClass\">android.webkit.GeolocationPermissions</a> for details.</p>\n\n<p> <p>Note that for applications targeting Android N and later SDKs\n (API level > android.os.Build.VERSION_CODES.M)\n this method is only called for requests originating from secure\n origins such as https. On non-secure origins geolocation requests\n are automatically denied.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>origin</span> : String<div class='sub-desc'><p>The origin of the web content attempting to use the\n               Geolocation API.</p>\n</div></li><li><span class='pre'>callback</span> : Object {GeolocationPermissions.Callback}<div class='sub-desc'><p>The callback to use to set the permission state for the\n                 origin.</p>\n</div></li></ul></div></div></div><div id='method-onHideCustomView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onHideCustomView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onHideCustomView' class='name expandable'>onHideCustomView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that the current page has exited full\n screen mode. ...</div><div class='long'><p>Notify the host application that the current page has exited full\n screen mode. The host application must hide the custom View, ie. the\n View passed to <a href=\"#!/api/android.webkit.WebChromeClient-method-onShowCustomView\" rel=\"android.webkit.WebChromeClient-method-onShowCustomView\" class=\"docClass\">onShowCustomView</a> when the content entered fullscreen.\n Also see \"Full screen support\" documentation on <a href=\"#!/api/android.webkit.WebView\" rel=\"android.webkit.WebView\" class=\"docClass\">android.webkit.WebView</a>.</p>\n</div></div></div><div id='method-onJsAlert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onJsAlert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onJsAlert' class='name expandable'>onJsAlert</a>( <span class='pre'>view, url, message, result</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the client to display a javascript alert dialog. ...</div><div class='long'><p>Tell the client to display a javascript alert dialog.  If the client\n returns {@code true}, WebView will assume that the client will handle the\n dialog.  If the client returns {@code false}, it will continue execution.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url of the page requesting the dialog.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>Message to be displayed in the window.</p>\n</div></li><li><span class='pre'>result</span> : Object {JsResult}<div class='sub-desc'><p>A JsResult to confirm that the user hit enter.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Whether the client will handle the alert dialog.</p>\n</div></li></ul></div></div></div><div id='method-onJsBeforeUnload' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onJsBeforeUnload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onJsBeforeUnload' class='name expandable'>onJsBeforeUnload</a>( <span class='pre'>view, url, message, result</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the client to display a dialog to confirm navigation away from the\n current page. ...</div><div class='long'><p>Tell the client to display a dialog to confirm navigation away from the\n current page. This is the result of the onbeforeunload javascript event.\n If the client returns {@code true}, WebView will assume that the client will\n handle the confirm dialog and call the appropriate JsResult method. If\n the client returns {@code false}, a default value of {@code true} will be returned to\n javascript to accept navigation away from the current page. The default\n behavior is to return {@code false}. Setting the JsResult to {@code true} will navigate\n away from the current page, {@code false} will cancel the navigation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url of the page requesting the dialog.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>Message to be displayed in the window.</p>\n</div></li><li><span class='pre'>result</span> : Object {JsResult}<div class='sub-desc'><p>A JsResult used to send the user's response to\n               javascript.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Whether the client will handle the confirm dialog.</p>\n</div></li></ul></div></div></div><div id='method-onJsConfirm' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onJsConfirm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onJsConfirm' class='name expandable'>onJsConfirm</a>( <span class='pre'>view, url, message, result</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the client to display a confirm dialog to the user. ...</div><div class='long'><p>Tell the client to display a confirm dialog to the user. If the client\n returns {@code true}, WebView will assume that the client will handle the\n confirm dialog and call the appropriate JsResult method. If the\n client returns false, a default value of {@code false} will be returned to\n javascript. The default behavior is to return {@code false}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url of the page requesting the dialog.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>Message to be displayed in the window.</p>\n</div></li><li><span class='pre'>result</span> : Object {JsResult}<div class='sub-desc'><p>A JsResult used to send the user's response to\n               javascript.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Whether the client will handle the confirm dialog.</p>\n</div></li></ul></div></div></div><div id='method-onJsPrompt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onJsPrompt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onJsPrompt' class='name expandable'>onJsPrompt</a>( <span class='pre'>view, url, message, defaultValue, result</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the client to display a prompt dialog to the user. ...</div><div class='long'><p>Tell the client to display a prompt dialog to the user. If the client\n returns {@code true}, WebView will assume that the client will handle the\n prompt dialog and call the appropriate JsPromptResult method. If the\n client returns false, a default value of {@code false} will be returned to to\n javascript. The default behavior is to return {@code false}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The url of the page requesting the dialog.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>Message to be displayed in the window.</p>\n</div></li><li><span class='pre'>defaultValue</span> : String<div class='sub-desc'><p>The default value displayed in the prompt dialog.</p>\n</div></li><li><span class='pre'>result</span> : Object {JsPromptResult}<div class='sub-desc'><p>A JsPromptResult used to send the user's reponse to\n               javascript.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Whether the client will handle the prompt dialog.</p>\n</div></li></ul></div></div></div><div id='method-onJsTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onJsTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onJsTimeout' class='name expandable'>onJsTimeout</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Tell the client that a JavaScript execution timeout has occured. ...</div><div class='long'><p>Tell the client that a JavaScript execution timeout has occured. And the\n client may decide whether or not to interrupt the execution. If the\n client returns {@code true}, the JavaScript will be interrupted. If the client\n returns {@code false}, the execution will continue. Note that in the case of\n continuing execution, the timeout counter will be reset, and the callback\n will continue to occur if the script does not finish at the next check\n point.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is no longer supported and will not be invoked.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Whether the JavaScript execution should be interrupted.</p>\n</div></li></ul></div></div></div><div id='method-onPermissionRequest' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onPermissionRequest' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onPermissionRequest' class='name expandable'>onPermissionRequest</a>( <span class='pre'>request</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that web content is requesting permission to\n access the specified resources and the perm...</div><div class='long'><p>Notify the host application that web content is requesting permission to\n access the specified resources and the permission currently isn't granted\n or denied. The host application must invoke android.webkit.PermissionRequest.grant(String[])\n or android.webkit.PermissionRequest.deny().</p>\n\n<p> If this method isn't overridden, the permission is denied.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : Object {PermissionRequest}<div class='sub-desc'><p>the PermissionRequest from current web content.</p>\n</div></li></ul></div></div></div><div id='method-onPermissionRequestCanceled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onPermissionRequestCanceled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onPermissionRequestCanceled' class='name expandable'>onPermissionRequestCanceled</a>( <span class='pre'>request</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application that the given permission request\n has been canceled. ...</div><div class='long'><p>Notify the host application that the given permission request\n has been canceled. Any related UI should therefore be hidden.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>request</span> : Object {PermissionRequest}<div class='sub-desc'><p>the PermissionRequest that needs be canceled.</p>\n</div></li></ul></div></div></div><div id='method-onProgressChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onProgressChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onProgressChanged' class='name expandable'>onProgressChanged</a>( <span class='pre'>view, newProgress</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the host application the current progress of loading a page. ...</div><div class='long'><p>Tell the host application the current progress of loading a page.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>newProgress</span> : Number<div class='sub-desc'><p>Current page loading progress, represented by\n                    an integer between 0 and 100.</p>\n</div></li></ul></div></div></div><div id='method-onReachedMaxAppCacheSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onReachedMaxAppCacheSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onReachedMaxAppCacheSize' class='name expandable'>onReachedMaxAppCacheSize</a>( <span class='pre'>requiredStorage, quota, quotaUpdater</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Notify the host application that the Application Cache has reached the\n maximum size. ...</div><div class='long'><p>Notify the host application that the Application Cache has reached the\n maximum size. The client must respond by invoking the\n updateQuota(long)\n method of the supplied <a href=\"#!/api/android.webkit.WebStorage.QuotaUpdater\" rel=\"android.webkit.WebStorage.QuotaUpdater\" class=\"docClass\">android.webkit.WebStorage.QuotaUpdater</a> instance. The\n minimum value that can be set for the new quota is the current quota. The\n default implementation responds with the current quota, so the quota will\n not be increased.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is no longer called; WebView now uses the HTML5 / JavaScript Quota\n             Management API.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requiredStorage</span> : Number<div class='sub-desc'><p>The amount of storage required by the Application\n                        Cache operation that triggered this notification,\n                        in bytes.</p>\n</div></li><li><span class='pre'>quota</span> : Number<div class='sub-desc'><p>the current maximum Application Cache size, in bytes</p>\n</div></li><li><span class='pre'>quotaUpdater</span> : Object {WebStorage.QuotaUpdater}<div class='sub-desc'><p>An instance of WebStorage.QuotaUpdater which\n                     must be used to inform the WebView of the new quota.</p>\n</div></li></ul></div></div></div><div id='method-onReceivedIcon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onReceivedIcon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onReceivedIcon' class='name expandable'>onReceivedIcon</a>( <span class='pre'>view, icon</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application of a new favicon for the current page. ...</div><div class='long'><p>Notify the host application of a new favicon for the current page.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>icon</span> : Object {Bitmap}<div class='sub-desc'><p>A Bitmap containing the favicon for the current page.</p>\n</div></li></ul></div></div></div><div id='method-onReceivedTitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onReceivedTitle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onReceivedTitle' class='name expandable'>onReceivedTitle</a>( <span class='pre'>view, title</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application of a change in the document title. ...</div><div class='long'><p>Notify the host application of a change in the document title.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>title</span> : String<div class='sub-desc'><p>A String containing the new title of the document.</p>\n</div></li></ul></div></div></div><div id='method-onReceivedTouchIconUrl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onReceivedTouchIconUrl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onReceivedTouchIconUrl' class='name expandable'>onReceivedTouchIconUrl</a>( <span class='pre'>view, url, precomposed</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notify the host application of the url for an apple-touch-icon. ...</div><div class='long'><p>Notify the host application of the url for an apple-touch-icon.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that initiated the callback.</p>\n</div></li><li><span class='pre'>url</span> : String<div class='sub-desc'><p>The icon url.</p>\n</div></li><li><span class='pre'>precomposed</span> : Boolean<div class='sub-desc'><p>{@code true} if the url is for a precomposed touch icon.</p>\n</div></li></ul></div></div></div><div id='method-onRequestFocus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onRequestFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onRequestFocus' class='name expandable'>onRequestFocus</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request display and focus for this WebView. ...</div><div class='long'><p>Request display and focus for this WebView. This may happen due to\n another WebView opening a link in this WebView and requesting that this\n WebView be displayed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {WebView}<div class='sub-desc'><p>The WebView that needs to be focused.</p>\n</div></li></ul></div></div></div><div id='method-onShowCustomView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onShowCustomView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onShowCustomView' class='name expandable'>onShowCustomView</a>( <span class='pre'>view, requestedOrientation, callback</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Notify the host application that the current page would\n like to show a custom View in a particular orientation. ...</div><div class='long'><p>Notify the host application that the current page would\n like to show a custom View in a particular orientation.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method supports the obsolete plugin mechanism,\n and will not be invoked in future</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>is the View object to be shown.</p>\n</div></li><li><span class='pre'>requestedOrientation</span> : Number<div class='sub-desc'><p>An orientation constant as used in\n ActivityInfo.screenOrientation.</p>\n</div></li><li><span class='pre'>callback</span> : Object {WebChromeClient.CustomViewCallback}<div class='sub-desc'><p>is the callback to be invoked if and when the view\n is dismissed.</p>\n</div></li></ul></div></div></div><div id='method-onShowFileChooser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.webkit.WebChromeClient'>android.webkit.WebChromeClient</span><br/><a href='source/WebChromeClient.html#android-webkit-WebChromeClient-method-onShowFileChooser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.webkit.WebChromeClient-method-onShowFileChooser' class='name expandable'>onShowFileChooser</a>( <span class='pre'>webView, filePathCallback, fileChooserParams</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell the client to show a file chooser. ...</div><div class='long'><p>Tell the client to show a file chooser.</p>\n\n<p> This is called to handle HTML forms with 'file' input type, in response to the\n user pressing the \"Select File\" button.\n To cancel the request, call <code>filePathCallback.onReceiveValue(null)</code> and\n return {@code true}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>webView</span> : Object {WebView}<div class='sub-desc'><p>The WebView instance that is initiating the request.</p>\n</div></li><li><span class='pre'>filePathCallback</span> : Object {android.webkit.ValueCallback}<div class='sub-desc'><p>Invoke this callback to supply the list of paths to files to upload,\n                         or {@code null} to cancel. Must only be called if the\n                         <a href=\"#!/api/android.webkit.WebChromeClient-method-onShowFileChooser\" rel=\"android.webkit.WebChromeClient-method-onShowFileChooser\" class=\"docClass\">onShowFileChooser</a> implementation returns {@code true}.</p>\n</div></li><li><span class='pre'>fileChooserParams</span> : Object {WebChromeClient.FileChooserParams}<div class='sub-desc'><p>Describes the mode of file chooser to be opened, and options to be\n                          used with it.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if filePathCallback will be invoked, {@code false} to use default\n         handling.\n@see FileChooserParams</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});