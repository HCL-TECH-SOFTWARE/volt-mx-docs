Ext.data.JsonP.android_service_media_MediaBrowserService({"tagname":"class","name":"android.service.media.MediaBrowserService","autodetected":{},"files":[{"filename":"MediaBrowserService.js","href":"MediaBrowserService.html#android-service-media-MediaBrowserService"}],"extends":"android.app.Service","members":[{"name":"SERVICE_INTERFACE","tagname":"property","owner":"android.service.media.MediaBrowserService","id":"property-SERVICE_INTERFACE","meta":{}},{"name":"dump","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-dump","meta":{}},{"name":"getBrowserRootHints","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-getBrowserRootHints","meta":{}},{"name":"getCurrentBrowserInfo","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-getCurrentBrowserInfo","meta":{}},{"name":"getSessionToken","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-getSessionToken","meta":{}},{"name":"notifyChildrenChanged","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-notifyChildrenChanged","meta":{}},{"name":"onBind","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-onBind","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-onCreate","meta":{}},{"name":"onGetRoot","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-onGetRoot","meta":{}},{"name":"onLoadChildren","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-onLoadChildren","meta":{}},{"name":"onLoadItem","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-onLoadItem","meta":{}},{"name":"setSessionToken","tagname":"method","owner":"android.service.media.MediaBrowserService","id":"method-setSessionToken","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.service.media.MediaBrowserService","short_doc":"Base class for media browser services. ...","classIcon":"icon-class","superclasses":["android.app.Service"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.app.Service<div class='subclass '><strong>android.service.media.MediaBrowserService</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService' target='_blank'>MediaBrowserService.js</a></div></pre><div class='doc-contents'><p>Base class for media browser services.\n <p>\n Media browser services enable applications to browse media content provided by an application\n and ask the application to start playing it. They may also be used to control content that\n is already playing by way of a MediaSession.\n </p></p>\n\n<p> To extend this class, you must declare the service in your manifest file with\n an intent filter with the <a href=\"#!/api/android.service.media.MediaBrowserService-property-SERVICE_INTERFACE\" rel=\"android.service.media.MediaBrowserService-property-SERVICE_INTERFACE\" class=\"docClass\">SERVICE_INTERFACE</a> action.</p>\n\n<p> For example:\n </p>\n\n<pre> &lt;service android:name=\".MyMediaBrowserService\"\n          android:label=\"&#64;string/service_name\" >\n     &lt;intent-filter>\n         &lt;action android:name=\"android.media.browse.MediaBrowserService\" />\n     &lt;/intent-filter>\n &lt;/service>\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-SERVICE_INTERFACE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-property-SERVICE_INTERFACE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-property-SERVICE_INTERFACE' class='name expandable'>SERVICE_INTERFACE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Intent that must be declared as handled by the service. ...</div><div class='long'><p>The Intent that must be declared as handled by the service.</p>\n<p>Defaults to: <code>&quot;android.media.browse.MediaBrowserService&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dump' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-dump' class='name expandable'>dump</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getBrowserRootHints' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-getBrowserRootHints' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-getBrowserRootHints' class='name expandable'>getBrowserRootHints</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the root hints sent from the currently connected MediaBrowser. ...</div><div class='long'><p>Gets the root hints sent from the currently connected MediaBrowser.\n The root hints are service-specific arguments included in an optional bundle sent to the\n media browser service when connecting and retrieving the root id for browsing, or null if\n none. The contents of this bundle may affect the information returned when browsing.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If this method is called outside of <a href=\"#!/api/android.service.media.MediaBrowserService-method-onGetRoot\" rel=\"android.service.media.MediaBrowserService-method-onGetRoot\" class=\"docClass\">onGetRoot</a> or\n             <a href=\"#!/api/android.service.media.MediaBrowserService-method-onLoadChildren\" rel=\"android.service.media.MediaBrowserService-method-onLoadChildren\" class=\"docClass\">onLoadChildren</a> or <a href=\"#!/api/android.service.media.MediaBrowserService-method-onLoadItem\" rel=\"android.service.media.MediaBrowserService-method-onLoadItem\" class=\"docClass\">onLoadItem</a>.\n@see MediaBrowserService.BrowserRoot#EXTRA_RECENT\n@see MediaBrowserService.BrowserRoot#EXTRA_OFFLINE\n@see MediaBrowserService.BrowserRoot#EXTRA_SUGGESTED</p>\n</div></li></ul></div></div></div><div id='method-getCurrentBrowserInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-getCurrentBrowserInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-getCurrentBrowserInfo' class='name expandable'>getCurrentBrowserInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the browser information who sent the current request. ...</div><div class='long'><p>Gets the browser information who sent the current request.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If this method is called outside of <a href=\"#!/api/android.service.media.MediaBrowserService-method-onGetRoot\" rel=\"android.service.media.MediaBrowserService-method-onGetRoot\" class=\"docClass\">onGetRoot</a> or\n             <a href=\"#!/api/android.service.media.MediaBrowserService-method-onLoadChildren\" rel=\"android.service.media.MediaBrowserService-method-onLoadChildren\" class=\"docClass\">onLoadChildren</a> or <a href=\"#!/api/android.service.media.MediaBrowserService-method-onLoadItem\" rel=\"android.service.media.MediaBrowserService-method-onLoadItem\" class=\"docClass\">onLoadItem</a>.\n@see MediaSessionManager#isTrustedForMediaControl(RemoteUserInfo)</p>\n</div></li></ul></div></div></div><div id='method-getSessionToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-getSessionToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-getSessionToken' class='name expandable'>getSessionToken</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the session token, or null if it has not yet been created\n or if it has been destroyed. ...</div><div class='long'><p>Gets the session token, or null if it has not yet been created\n or if it has been destroyed.</p>\n</div></div></div><div id='method-notifyChildrenChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-notifyChildrenChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-notifyChildrenChanged' class='name expandable'>notifyChildrenChanged</a>( <span class='pre'>parentId, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies all connected media browsers that the children of\n the specified parent id have changed in some way. ...</div><div class='long'><p>Notifies all connected media browsers that the children of\n the specified parent id have changed in some way.\n This will cause browsers to fetch subscribed content again.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentId</span> : String<div class='sub-desc'><p>The id of the parent media item whose\n            children changed.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>The bundle of service-specific arguments to send\n            to the media browser. The contents of this bundle may\n            contain the information about the change.</p>\n</div></li></ul></div></div></div><div id='method-onBind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-onBind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-onBind' class='name expandable'>onBind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onGetRoot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-onGetRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-onGetRoot' class='name expandable'>onGetRoot</a>( <span class='pre'>clientPackageName, clientUid, rootHints</span> ) : Object {android.service.media.MediaBrowserService.BrowserRoot}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to get the root information for browsing by a particular client. ...</div><div class='long'><p>Called to get the root information for browsing by a particular client.\n <p>\n The implementation should verify that the client package has permission\n to access browse media information before returning the root id; it\n should return null if the client is not allowed to access this\n information.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clientPackageName</span> : String<div class='sub-desc'><p>The package name of the application which is\n            requesting access to browse media.</p>\n</div></li><li><span class='pre'>clientUid</span> : Number<div class='sub-desc'><p>The uid of the application which is requesting access to\n            browse media.</p>\n</div></li><li><span class='pre'>rootHints</span> : Object {Bundle}<div class='sub-desc'><p>An optional bundle of service-specific arguments to send\n            to the media browser service when connecting and retrieving the\n            root id for browsing, or null if none. The contents of this\n            bundle may affect the information returned when browsing.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.service.media.MediaBrowserService.BrowserRoot}</span><div class='sub-desc'><p>The BrowserRoot for accessing this app's content or null.\n@see BrowserRoot#EXTRA_RECENT\n@see BrowserRoot#EXTRA_OFFLINE\n@see BrowserRoot#EXTRA_SUGGESTED</p>\n</div></li></ul></div></div></div><div id='method-onLoadChildren' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-onLoadChildren' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-onLoadChildren' class='name expandable'>onLoadChildren</a>( <span class='pre'>parentId, result, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to get information about the children of a media item. ...</div><div class='long'><p>Called to get information about the children of a media item.\n <p>\n Implementations must call result.sendandroid.service.media.MediaBrowserService.Result\n with the list of children. If loading the children will be an expensive\n operation that should be performed on another thread,\n <a href=\"#!/api/android.service.media.MediaBrowserService.Result-method-detach\" rel=\"android.service.media.MediaBrowserService.Result-method-detach\" class=\"docClass\">result.detach</a> may be called before returning from\n this function, and then result.sendandroid.service.media.MediaBrowserService.Result\n called when the loading is complete.\n </p><p>\n In case the media item does not have any children, call android.service.media.MediaBrowserService.Result.sendandroid.service.media.MediaBrowserService.Result\n with an empty list. When the given {@code parentId} is invalid, implementations must\n call result.sendandroid.service.media.MediaBrowserService.Result with {@code null}, which will invoke\n MediaBrowser.SubscriptionCallback.onError.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentId</span> : String<div class='sub-desc'><p>The id of the parent media item whose children are to be\n            queried.</p>\n</div></li><li><span class='pre'>result</span> : Object {android.service.media.MediaBrowserService.Result}<div class='sub-desc'><p>The Result to send the list of children to.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>The bundle of service-specific arguments sent from the media\n            browser. The information returned through the result should be\n            affected by the contents of this bundle.</p>\n</div></li></ul></div></div></div><div id='method-onLoadItem' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-onLoadItem' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-onLoadItem' class='name expandable'>onLoadItem</a>( <span class='pre'>itemId, result</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to get information about a specific media item. ...</div><div class='long'><p>Called to get information about a specific media item.\n <p>\n Implementations must call result.sendandroid.service.media.MediaBrowserService.Result. If\n loading the item will be an expensive operation <a href=\"#!/api/android.service.media.MediaBrowserService.Result-method-detach\" rel=\"android.service.media.MediaBrowserService.Result-method-detach\" class=\"docClass\">result.detach</a> may be called before returning from this function, and\n then result.sendandroid.service.media.MediaBrowserService.Result called when the item has\n been loaded.\n </p><p>\n When the given {@code itemId} is invalid, implementations must call\n result.sendandroid.service.media.MediaBrowserService.Result with {@code null}.\n </p><p>\n The default implementation will invoke MediaBrowser.ItemCallback.onError.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>itemId</span> : String<div class='sub-desc'><p>The id for the specific\n            android.media.browse.MediaBrowser.MediaItem.</p>\n</div></li><li><span class='pre'>result</span> : Object {android.service.media.MediaBrowserService.Result}<div class='sub-desc'><p>The Result to send the item to.</p>\n</div></li></ul></div></div></div><div id='method-setSessionToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.media.MediaBrowserService'>android.service.media.MediaBrowserService</span><br/><a href='source/MediaBrowserService.html#android-service-media-MediaBrowserService-method-setSessionToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.media.MediaBrowserService-method-setSessionToken' class='name expandable'>setSessionToken</a>( <span class='pre'>token</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call to set the media session. ...</div><div class='long'><p>Call to set the media session.\n <p>\n This should be called as soon as possible during the service's startup.\n It may only be called once.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {MediaSession.Token}<div class='sub-desc'><p>The token for the service's MediaSession.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});