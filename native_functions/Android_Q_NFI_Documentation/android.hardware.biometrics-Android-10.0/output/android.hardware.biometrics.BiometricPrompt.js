Ext.data.JsonP.android_hardware_biometrics_BiometricPrompt({"tagname":"class","name":"android.hardware.biometrics.BiometricPrompt","autodetected":{},"files":[{"filename":"BiometricPrompt.js","href":"BiometricPrompt.html#android-hardware-biometrics-BiometricPrompt"}],"extends":"java.lang.Object","members":[{"name":"authenticate","tagname":"method","owner":"android.hardware.biometrics.BiometricPrompt","id":"method-authenticate","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.biometrics.BiometricPrompt","short_doc":"implements android.hardware.biometrics.BiometricAuthenticator\n\n implements android.hardware.biometrics.BiometricConst...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.biometrics.BiometricPrompt</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BiometricPrompt.html#android-hardware-biometrics-BiometricPrompt' target='_blank'>BiometricPrompt.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.hardware.biometrics.BiometricAuthenticator\" rel=\"android.hardware.biometrics.BiometricAuthenticator\" class=\"docClass\">android.hardware.biometrics.BiometricAuthenticator</a></p>\n\n<p> implements <a href=\"#!/api/android.hardware.biometrics.BiometricConstants\" rel=\"android.hardware.biometrics.BiometricConstants\" class=\"docClass\">android.hardware.biometrics.BiometricConstants</a></p>\n\n<p>A class that manages a system-provided biometric dialog.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-authenticate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.biometrics.BiometricPrompt'>android.hardware.biometrics.BiometricPrompt</span><br/><a href='source/BiometricPrompt.html#android-hardware-biometrics-BiometricPrompt-method-authenticate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.biometrics.BiometricPrompt-method-authenticate' class='name expandable'>authenticate</a>( <span class='pre'>cancel, executor, callback, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This call warms up the biometric hardware, displays a system-provided dialog, and starts\n scanning for a biometric. ...</div><div class='long'><p>This call warms up the biometric hardware, displays a system-provided dialog, and starts\n scanning for a biometric. It terminates when CharSequence) is called, when AuthenticationResult) is called, or when\n the user dismisses the system-provided dialog.  This operation can be canceled by using the\n provided cancel object. The application will receive authentication errors through <a href=\"#!/api/android.hardware.biometrics.BiometricAuthenticator.AuthenticationCallback\" rel=\"android.hardware.biometrics.BiometricAuthenticator.AuthenticationCallback\" class=\"docClass\">android.hardware.biometrics.BiometricAuthenticator.AuthenticationCallback</a>, and button events through the corresponding callback set in Executor, DialogInterface.OnClickListener).  It is\n safe to reuse the <a href=\"#!/api/android.hardware.biometrics.BiometricPrompt\" rel=\"android.hardware.biometrics.BiometricPrompt\" class=\"docClass\">android.hardware.biometrics.BiometricPrompt</a> object, and calling Executor, android.hardware.biometrics.BiometricAuthenticator.AuthenticationCallback) while\n an existing authentication attempt is occurring will stop the previous client and start a new\n authentication. The interrupted client will receive a cancelled notification through CharSequence).</p>\n\n<p> Note: Applications generally should not cancel and start authentication in quick succession.\n For example, to properly handle authentication across configuration changes, it's recommended\n to use BiometricPrompt in a fragment with setRetainInstance(true). By doing so, the\n application will not need to cancel/restart authentication during the configuration change.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cancel</span> : Object {CancellationSignal}<div class='sub-desc'><p>An object that can be used to cancel authentication</p>\n</div></li><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>An executor to handle callback events</p>\n</div></li><li><span class='pre'>callback</span> : Object {BiometricPrompt.AuthenticationCallback}<div class='sub-desc'><p>An object to receive authentication events</p>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'><p>An object to receive authentication events</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});