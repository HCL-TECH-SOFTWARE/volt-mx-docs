Ext.data.JsonP.java_util_function_Predicate({"tagname":"class","name":"java.util.function.Predicate","autodetected":{},"files":[{"filename":"Predicate.js","href":"Predicate.html#java-util-function-Predicate"}],"params":[{"tagname":"params","doc":"<p><T> the type of the input to the predicate</T></p>\n"}],"since":"1.8","members":[{"name":"and","tagname":"method","owner":"java.util.function.Predicate","id":"method-and","meta":{}},{"name":"isEqual","tagname":"method","owner":"java.util.function.Predicate","id":"method-isEqual","meta":{}},{"name":"negate","tagname":"method","owner":"java.util.function.Predicate","id":"method-negate","meta":{}},{"name":"or","tagname":"method","owner":"java.util.function.Predicate","id":"method-or","meta":{}},{"name":"test","tagname":"method","owner":"java.util.function.Predicate","id":"method-test","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.function.Predicate","short_doc":"Represents a predicate (boolean-valued function) of one argument. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Predicate.html#java-util-function-Predicate' target='_blank'>Predicate.js</a></div></pre><div class='doc-contents'><p>Represents a predicate (boolean-valued function) of one argument.</p>\n\n<p> <p>This is a <a href=\"package-summary.html\">functional interface</a>\n whose functional method is <a href=\"#!/api/java.util.function.Predicate-method-test\" rel=\"java.util.function.Predicate-method-test\" class=\"docClass\">test</a>(Object).</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><T> the type of the input to the predicate</T></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-and' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.Predicate'>java.util.function.Predicate</span><br/><a href='source/Predicate.html#java-util-function-Predicate-method-and' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.Predicate-method-and' class='name expandable'>and</a>( <span class='pre'>other</span> ) : Object {java.util.function.Predicate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a composed predicate that represents a short-circuiting logical\n AND of this predicate and another. ...</div><div class='long'><p>Returns a composed predicate that represents a short-circuiting logical\n AND of this predicate and another.  When evaluating the composed\n predicate, if this predicate is {@code false}, then the {@code other}\n predicate is not evaluated.</p>\n\n<p> <p>Any exceptions thrown during evaluation of either predicate are relayed\n to the caller; if evaluation of this predicate throws an exception, the\n {@code other} predicate will not be evaluated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.util.function.Predicate}<div class='sub-desc'><p>a predicate that will be logically-ANDed with this\n              predicate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.Predicate}</span><div class='sub-desc'><p>a composed predicate that represents the short-circuiting logical\n AND of this predicate and the {@code other} predicate</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if other is null</p>\n</div></li></ul></div></div></div><div id='method-isEqual' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.Predicate'>java.util.function.Predicate</span><br/><a href='source/Predicate.html#java-util-function-Predicate-method-isEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.Predicate-method-isEqual' class='name expandable'>isEqual</a>( <span class='pre'>targetRef, targetRef</span> ) : Object {java.util.function.Predicate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a predicate that tests if two arguments are equal according\n to Object). ...</div><div class='long'><p>Returns a predicate that tests if two arguments are equal according\n to Object).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetRef</span> : Object {Object}<div class='sub-desc'><p>the object reference with which to compare for equality,\n               which may be {@code null}</p>\n</div></li><li><span class='pre'>targetRef</span> : Object<div class='sub-desc'><p>the object reference with which to compare for equality,\n               which may be {@code null}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.Predicate}</span><div class='sub-desc'><p>a predicate that tests if two arguments are equal according\n to Object)</p>\n</div></li></ul></div></div></div><div id='method-negate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.Predicate'>java.util.function.Predicate</span><br/><a href='source/Predicate.html#java-util-function-Predicate-method-negate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.Predicate-method-negate' class='name expandable'>negate</a>( <span class='pre'></span> ) : Object {java.util.function.Predicate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a predicate that represents the logical negation of this\n predicate. ...</div><div class='long'><p>Returns a predicate that represents the logical negation of this\n predicate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.Predicate}</span><div class='sub-desc'><p>a predicate that represents the logical negation of this\n predicate</p>\n</div></li></ul></div></div></div><div id='method-or' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.Predicate'>java.util.function.Predicate</span><br/><a href='source/Predicate.html#java-util-function-Predicate-method-or' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.Predicate-method-or' class='name expandable'>or</a>( <span class='pre'>other</span> ) : Object {java.util.function.Predicate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a composed predicate that represents a short-circuiting logical\n OR of this predicate and another. ...</div><div class='long'><p>Returns a composed predicate that represents a short-circuiting logical\n OR of this predicate and another.  When evaluating the composed\n predicate, if this predicate is {@code true}, then the {@code other}\n predicate is not evaluated.</p>\n\n<p> <p>Any exceptions thrown during evaluation of either predicate are relayed\n to the caller; if evaluation of this predicate throws an exception, the\n {@code other} predicate will not be evaluated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.util.function.Predicate}<div class='sub-desc'><p>a predicate that will be logically-ORed with this\n              predicate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.Predicate}</span><div class='sub-desc'><p>a composed predicate that represents the short-circuiting logical\n OR of this predicate and the {@code other} predicate</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if other is null</p>\n</div></li></ul></div></div></div><div id='method-test' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.Predicate'>java.util.function.Predicate</span><br/><a href='source/Predicate.html#java-util-function-Predicate-method-test' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.Predicate-method-test' class='name expandable'>test</a>( <span class='pre'>t</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Evaluates this predicate on the given argument. ...</div><div class='long'><p>Evaluates this predicate on the given argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>t</span> : Object {Object}<div class='sub-desc'><p>the input argument</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the input argument matches the predicate,\n otherwise {@code false}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});