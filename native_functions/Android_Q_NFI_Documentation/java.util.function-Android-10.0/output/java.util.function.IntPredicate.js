Ext.data.JsonP.java_util_function_IntPredicate({"tagname":"class","name":"java.util.function.IntPredicate","autodetected":{},"files":[{"filename":"IntPredicate.js","href":"IntPredicate.html#java-util-function-IntPredicate"}],"since":"1.8","members":[{"name":"and","tagname":"method","owner":"java.util.function.IntPredicate","id":"method-and","meta":{}},{"name":"negate","tagname":"method","owner":"java.util.function.IntPredicate","id":"method-negate","meta":{}},{"name":"or","tagname":"method","owner":"java.util.function.IntPredicate","id":"method-or","meta":{}},{"name":"test","tagname":"method","owner":"java.util.function.IntPredicate","id":"method-test","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.function.IntPredicate","short_doc":"Represents a predicate (boolean-valued function) of one {@code int}-valued\n argument. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/IntPredicate.html#java-util-function-IntPredicate' target='_blank'>IntPredicate.js</a></div></pre><div class='doc-contents'><p>Represents a predicate (boolean-valued function) of one {@code int}-valued\n argument. This is the {@code int}-consuming primitive type specialization of\n <a href=\"#!/api/java.util.function.Predicate\" rel=\"java.util.function.Predicate\" class=\"docClass\">java.util.function.Predicate</a>.</p>\n\n<p> <p>This is a <a href=\"package-summary.html\">functional interface</a>\n whose functional method is <a href=\"#!/api/java.util.function.IntPredicate-method-test\" rel=\"java.util.function.IntPredicate-method-test\" class=\"docClass\">test</a>(int).</p>\n\n<p> @see Predicate</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-and' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.IntPredicate'>java.util.function.IntPredicate</span><br/><a href='source/IntPredicate.html#java-util-function-IntPredicate-method-and' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.IntPredicate-method-and' class='name expandable'>and</a>( <span class='pre'>other</span> ) : Object {java.util.function.IntPredicate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a composed predicate that represents a short-circuiting logical\n AND of this predicate and another. ...</div><div class='long'><p>Returns a composed predicate that represents a short-circuiting logical\n AND of this predicate and another.  When evaluating the composed\n predicate, if this predicate is {@code false}, then the {@code other}\n predicate is not evaluated.</p>\n\n<p> <p>Any exceptions thrown during evaluation of either predicate are relayed\n to the caller; if evaluation of this predicate throws an exception, the\n {@code other} predicate will not be evaluated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {IntPredicate}<div class='sub-desc'><p>a predicate that will be logically-ANDed with this\n              predicate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.IntPredicate}</span><div class='sub-desc'><p>a composed predicate that represents the short-circuiting logical\n AND of this predicate and the {@code other} predicate</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if other is null</p>\n</div></li></ul></div></div></div><div id='method-negate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.IntPredicate'>java.util.function.IntPredicate</span><br/><a href='source/IntPredicate.html#java-util-function-IntPredicate-method-negate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.IntPredicate-method-negate' class='name expandable'>negate</a>( <span class='pre'></span> ) : Object {java.util.function.IntPredicate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a predicate that represents the logical negation of this\n predicate. ...</div><div class='long'><p>Returns a predicate that represents the logical negation of this\n predicate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.IntPredicate}</span><div class='sub-desc'><p>a predicate that represents the logical negation of this\n predicate</p>\n</div></li></ul></div></div></div><div id='method-or' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.IntPredicate'>java.util.function.IntPredicate</span><br/><a href='source/IntPredicate.html#java-util-function-IntPredicate-method-or' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.IntPredicate-method-or' class='name expandable'>or</a>( <span class='pre'>other</span> ) : Object {java.util.function.IntPredicate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a composed predicate that represents a short-circuiting logical\n OR of this predicate and another. ...</div><div class='long'><p>Returns a composed predicate that represents a short-circuiting logical\n OR of this predicate and another.  When evaluating the composed\n predicate, if this predicate is {@code true}, then the {@code other}\n predicate is not evaluated.</p>\n\n<p> <p>Any exceptions thrown during evaluation of either predicate are relayed\n to the caller; if evaluation of this predicate throws an exception, the\n {@code other} predicate will not be evaluated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {IntPredicate}<div class='sub-desc'><p>a predicate that will be logically-ORed with this\n              predicate</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.function.IntPredicate}</span><div class='sub-desc'><p>a composed predicate that represents the short-circuiting logical\n OR of this predicate and the {@code other} predicate</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if other is null</p>\n</div></li></ul></div></div></div><div id='method-test' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.function.IntPredicate'>java.util.function.IntPredicate</span><br/><a href='source/IntPredicate.html#java-util-function-IntPredicate-method-test' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.function.IntPredicate-method-test' class='name expandable'>test</a>( <span class='pre'>value</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Evaluates this predicate on the given argument. ...</div><div class='long'><p>Evaluates this predicate on the given argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>the input argument</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the input argument matches the predicate,\n otherwise {@code false}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});