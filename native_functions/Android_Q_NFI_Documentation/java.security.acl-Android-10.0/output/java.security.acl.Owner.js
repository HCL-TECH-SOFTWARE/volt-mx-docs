Ext.data.JsonP.java_security_acl_Owner({"tagname":"class","name":"java.security.acl.Owner","autodetected":{},"files":[{"filename":"Owner.js","href":"Owner.html#java-security-acl-Owner"}],"members":[{"name":"addOwner","tagname":"method","owner":"java.security.acl.Owner","id":"method-addOwner","meta":{}},{"name":"deleteOwner","tagname":"method","owner":"java.security.acl.Owner","id":"method-deleteOwner","meta":{}},{"name":"isOwner","tagname":"method","owner":"java.security.acl.Owner","id":"method-isOwner","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.acl.Owner","short_doc":"Interface for managing owners of Access Control Lists (ACLs) or ACL\n configurations. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Owner.html#java-security-acl-Owner' target='_blank'>Owner.js</a></div></pre><div class='doc-contents'><p>Interface for managing owners of Access Control Lists (ACLs) or ACL\n configurations. (Note that the Acl interface in the\n {@code  java.security.acl} package extends this Owner\n interface.) The initial owner Principal should be specified as an\n argument to the constructor of the class implementing this interface.</p>\n\n<p> @see <a href=\"#!/api/java.security.acl.Acl\" rel=\"java.security.acl.Acl\" class=\"docClass\">java.security.acl.Acl</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addOwner' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.acl.Owner'>java.security.acl.Owner</span><br/><a href='source/Owner.html#java-security-acl-Owner-method-addOwner' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.acl.Owner-method-addOwner' class='name expandable'>addOwner</a>( <span class='pre'>caller, owner</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an owner. ...</div><div class='long'><p>Adds an owner. Only owners can modify ACL contents. The caller\n principal must be an owner of the ACL in order to invoke this method.\n That is, only an owner can add another owner. The initial owner is\n configured at ACL construction time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>caller</span> : Object {Principal}<div class='sub-desc'><p>the principal invoking this method. It must be an owner\n of the ACL.</p>\n</div></li><li><span class='pre'>owner</span> : Object {Principal}<div class='sub-desc'><p>the owner that should be added to the list of owners.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if successful, false if owner is already an owner.\n@exception NotOwnerException if the caller principal is not an owner\n of the ACL.</p>\n</div></li></ul></div></div></div><div id='method-deleteOwner' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.acl.Owner'>java.security.acl.Owner</span><br/><a href='source/Owner.html#java-security-acl-Owner-method-deleteOwner' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.acl.Owner-method-deleteOwner' class='name expandable'>deleteOwner</a>( <span class='pre'>caller, owner</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes an owner. ...</div><div class='long'><p>Deletes an owner. If this is the last owner in the ACL, an exception is\n raised.<p></p>\n\n<p> The caller principal must be an owner of the ACL in order to invoke\n this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>caller</span> : Object {Principal}<div class='sub-desc'><p>the principal invoking this method. It must be an owner\n of the ACL.</p>\n</div></li><li><span class='pre'>owner</span> : Object {Principal}<div class='sub-desc'><p>the owner to be removed from the list of owners.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the owner is removed, false if the owner is not part\n of the list of owners.\n@exception NotOwnerException if the caller principal is not an owner\n of the ACL.\n@exception LastOwnerException if there is only one owner left, so that\n deleteOwner would leave the ACL owner-less.</p>\n</div></li></ul></div></div></div><div id='method-isOwner' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.acl.Owner'>java.security.acl.Owner</span><br/><a href='source/Owner.html#java-security-acl-Owner-method-isOwner' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.acl.Owner-method-isOwner' class='name expandable'>isOwner</a>( <span class='pre'>owner</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the given principal is an owner of the ACL. ...</div><div class='long'><p>Returns true if the given principal is an owner of the ACL.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>owner</span> : Object {Principal}<div class='sub-desc'><p>the principal to be checked to determine whether or not\n it is an owner.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the passed principal is in the list of owners, false\n if not.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});