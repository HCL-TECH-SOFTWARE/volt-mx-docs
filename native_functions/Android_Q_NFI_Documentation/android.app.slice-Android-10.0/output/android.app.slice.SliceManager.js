Ext.data.JsonP.android_app_slice_SliceManager({"tagname":"class","name":"android.app.slice.SliceManager","autodetected":{},"files":[{"filename":"SliceManager.js","href":"SliceManager.html#android-app-slice-SliceManager"}],"extends":"java.lang.Object","members":[{"name":"CATEGORY_SLICE","tagname":"property","owner":"android.app.slice.SliceManager","id":"property-CATEGORY_SLICE","meta":{}},{"name":"SLICE_METADATA_KEY","tagname":"property","owner":"android.app.slice.SliceManager","id":"property-SLICE_METADATA_KEY","meta":{}},{"name":"bindSlice","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-bindSlice","meta":{"deprecated":{"text":"<p>TO BE REMOVED.</p>\n"},"removed":{"text":"\n"}}},{"name":"checkSlicePermission","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-checkSlicePermission","meta":{}},{"name":"getPinnedSlices","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-getPinnedSlices","meta":{}},{"name":"getPinnedSpecs","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-getPinnedSpecs","meta":{}},{"name":"getSliceDescendants","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-getSliceDescendants","meta":{}},{"name":"grantSlicePermission","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-grantSlicePermission","meta":{}},{"name":"mapIntentToUri","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-mapIntentToUri","meta":{}},{"name":"pinSlice","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-pinSlice","meta":{"deprecated":{"text":"<p>TO BE REMOVED</p>\n"},"removed":{"text":"\n"}}},{"name":"revokeSlicePermission","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-revokeSlicePermission","meta":{}},{"name":"unpinSlice","tagname":"method","owner":"android.app.slice.SliceManager","id":"method-unpinSlice","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.slice.SliceManager","short_doc":"Class to handle interactions with android.app.slice.Slices. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.slice.SliceManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SliceManager.html#android-app-slice-SliceManager' target='_blank'>SliceManager.js</a></div></pre><div class='doc-contents'><p>Class to handle interactions with <a href=\"#!/api/android.app.slice.Slice\" rel=\"android.app.slice.Slice\" class=\"docClass\">android.app.slice.Slice</a>s.\n <p>\n The SliceManager manages permissions and pinned state for slices.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CATEGORY_SLICE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-property-CATEGORY_SLICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-property-CATEGORY_SLICE' class='name expandable'>CATEGORY_SLICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Category used to resolve intents that can be rendered as slices. ...</div><div class='long'><p>Category used to resolve intents that can be rendered as slices.</p>\n\n<p><p>\nThis category should be included on intent filters on providers that extend\n<a href=\"#!/api/android.app.slice.SliceProvider\" rel=\"android.app.slice.SliceProvider\" class=\"docClass\">android.app.slice.SliceProvider</a>.\n@see SliceProvider\n@see SliceProvider#onMapIntentToUri(Intent)\n@see <a href=\"#!/api/android.app.slice.SliceManager-method-mapIntentToUri\" rel=\"android.app.slice.SliceManager-method-mapIntentToUri\" class=\"docClass\">mapIntentToUri</a>(Intent)</p>\n<p>Defaults to: <code>&quot;android.app.slice.category.SLICE&quot;</code></p></div></div></div><div id='property-SLICE_METADATA_KEY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-property-SLICE_METADATA_KEY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-property-SLICE_METADATA_KEY' class='name expandable'>SLICE_METADATA_KEY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The meta-data key that allows an activity to easily be linked directly to a slice. ...</div><div class='long'><p>The meta-data key that allows an activity to easily be linked directly to a slice.</p>\n\n<p><p>\nAn activity can be statically linked to a slice uri by including a meta-data item\nfor this key that contains a valid slice uri for the same application declaring\nthe activity.</p>\n\n<p><pre class=\"prettyprint\">\n{@literal\n<activity android:name=\"com.example.mypkg.MyActivity\">\n    <meta-data android:name=\"android.metadata.SLICE_URI\"\n               android:value=\"content://com.example.mypkg/main_slice\" />\n </activity>}\n</pre></p>\n\n<p>@see <a href=\"#!/api/android.app.slice.SliceManager-method-mapIntentToUri\" rel=\"android.app.slice.SliceManager-method-mapIntentToUri\" class=\"docClass\">mapIntentToUri</a>(Intent)\n@see SliceProvider#onMapIntentToUri(Intent)</p>\n<p>Defaults to: <code>&quot;android.metadata.SLICE_URI&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-bindSlice' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-bindSlice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-bindSlice' class='name expandable'>bindSlice</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>TO BE REMOVED.</p>\n\n        </div>\n</div></div></div><div id='method-checkSlicePermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-checkSlicePermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-checkSlicePermission' class='name expandable'>checkSlicePermission</a>( <span class='pre'>uri, pid, uid</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine whether a particular process and user ID has been granted\n permission to access a specific slice URI. ...</div><div class='long'><p>Determine whether a particular process and user ID has been granted\n permission to access a specific slice URI.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The uri that is being checked.</p>\n</div></li><li><span class='pre'>pid</span> : Number<div class='sub-desc'><p>The process ID being checked against.  Must be &gt; 0.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>The user ID being checked against.  A uid of 0 is the root\n user, which will pass every permission check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>PackageManager.PERMISSION_GRANTED if the given\n pid/uid is allowed to access that uri, or\n PackageManager.PERMISSION_DENIED if it is not.\n@see <a href=\"#!/api/android.app.slice.SliceManager-method-grantSlicePermission\" rel=\"android.app.slice.SliceManager-method-grantSlicePermission\" class=\"docClass\">grantSlicePermission</a>(String, Uri)</p>\n</div></li></ul></div></div></div><div id='method-getPinnedSlices' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-getPinnedSlices' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-getPinnedSlices' class='name expandable'>getPinnedSlices</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the list of currently pinned slices for this app. ...</div><div class='long'><p>Get the list of currently pinned slices for this app.\n@see SliceProvider#onSlicePinned</p>\n</div></div></div><div id='method-getPinnedSpecs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-getPinnedSpecs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-getPinnedSpecs' class='name expandable'>getPinnedSpecs</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current set of specs for a pinned slice. ...</div><div class='long'><p>Get the current set of specs for a pinned slice.\n <p>\n This is the set of specs supported for a specific pinned slice. It will take\n into account all clients and returns only specs supported by all.\n@see SliceSpec</p>\n</div></div></div><div id='method-getSliceDescendants' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-getSliceDescendants' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-getSliceDescendants' class='name expandable'>getSliceDescendants</a>( <span class='pre'>uri</span> ) : Object {java.util.Collection}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a list of slices that are descendants of the specified Uri. ...</div><div class='long'><p>Obtains a list of slices that are descendants of the specified Uri.\n <p>\n Not all slice providers will implement this functionality, in which case,\n an empty collection will be returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The uri to look for descendants under.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Collection}</span><div class='sub-desc'><p>All slices within the space.\n@see SliceProvider#onGetSliceDescendants(Uri)</p>\n</div></li></ul></div></div></div><div id='method-grantSlicePermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-grantSlicePermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-grantSlicePermission' class='name expandable'>grantSlicePermission</a>( <span class='pre'>toPackage, uri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Grant permission to access a specific slice Uri to another package. ...</div><div class='long'><p>Grant permission to access a specific slice Uri to another package.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toPackage</span> : String<div class='sub-desc'><p>The package you would like to allow to access the Uri.</p>\n</div></li><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The Uri you would like to grant access to.\n@see <a href=\"#!/api/android.app.slice.SliceManager-method-revokeSlicePermission\" rel=\"android.app.slice.SliceManager-method-revokeSlicePermission\" class=\"docClass\">revokeSlicePermission</a></p>\n</div></li></ul></div></div></div><div id='method-mapIntentToUri' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-mapIntentToUri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-mapIntentToUri' class='name expandable'>mapIntentToUri</a>( <span class='pre'>intent</span> ) : Object {android.net.Uri}<span class=\"signature\"></span></div><div class='description'><div class='short'>Turns a slice intent into a slice uri. ...</div><div class='long'><p>Turns a slice intent into a slice uri. Expects an explicit intent.\n <p>\n This goes through a several stage resolution process to determine if any slice\n can represent this intent.\n <ol>\n  <li> If the intent contains data that ContentResolver.getType is\n  <a href=\"#!/api/android.app.slice.SliceProvider-property-SLICE_TYPE\" rel=\"android.app.slice.SliceProvider-property-SLICE_TYPE\" class=\"docClass\">android.app.slice.SliceProvider.SLICE_TYPE</a> then the data will be returned.</li>\n  <li>If the intent explicitly points at an activity, and that activity has\n  meta-data for key <a href=\"#!/api/android.app.slice.SliceManager-property-SLICE_METADATA_KEY\" rel=\"android.app.slice.SliceManager-property-SLICE_METADATA_KEY\" class=\"docClass\">SLICE_METADATA_KEY</a>, then the Uri specified there will be\n  returned.</li>\n  <li>Lastly, if the intent with <a href=\"#!/api/android.app.slice.SliceManager-property-CATEGORY_SLICE\" rel=\"android.app.slice.SliceManager-property-CATEGORY_SLICE\" class=\"docClass\">CATEGORY_SLICE</a> added resolves to a provider, then\n  the provider will be asked to <a href=\"#!/api/android.app.slice.SliceProvider-method-onMapIntentToUri\" rel=\"android.app.slice.SliceProvider-method-onMapIntentToUri\" class=\"docClass\">android.app.slice.SliceProvider.onMapIntentToUri</a> and that result\n  will be returned.</li>\n  <li>If no slice is found, then {@code null} is returned.</li>\n </ol></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent associated with a slice.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.Uri}</span><div class='sub-desc'><p>The Slice Uri provided by the app or null if none exists.\n@see Slice\n@see SliceProvider#onMapIntentToUri(Intent)\n@see Intent</p>\n</div></li></ul></div></div></div><div id='method-pinSlice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-pinSlice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-pinSlice' class='name expandable'>pinSlice</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>TO BE REMOVED</p>\n\n        </div>\n</div></div></div><div id='method-revokeSlicePermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-revokeSlicePermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-revokeSlicePermission' class='name expandable'>revokeSlicePermission</a>( <span class='pre'>toPackage, uri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove permissions to access a particular content provider Uri\n that were previously added with grantSlicePermission ...</div><div class='long'><p>Remove permissions to access a particular content provider Uri\n that were previously added with <a href=\"#!/api/android.app.slice.SliceManager-method-grantSlicePermission\" rel=\"android.app.slice.SliceManager-method-grantSlicePermission\" class=\"docClass\">grantSlicePermission</a> for a specific target\n package.  The given Uri will match all previously granted Uris that are the same or a\n sub-path of the given Uri.  That is, revoking \"content://foo/target\" will\n revoke both \"content://foo/target\" and \"content://foo/target/sub\", but not\n \"content://foo\".  It will not remove any prefix grants that exist at a\n higher level.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toPackage</span> : String<div class='sub-desc'><p>The package you would like to allow to access the Uri.</p>\n</div></li><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The Uri you would like to revoke access to.\n@see <a href=\"#!/api/android.app.slice.SliceManager-method-grantSlicePermission\" rel=\"android.app.slice.SliceManager-method-grantSlicePermission\" class=\"docClass\">grantSlicePermission</a></p>\n</div></li></ul></div></div></div><div id='method-unpinSlice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.slice.SliceManager'>android.app.slice.SliceManager</span><br/><a href='source/SliceManager.html#android-app-slice-SliceManager-method-unpinSlice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.slice.SliceManager-method-unpinSlice' class='name expandable'>unpinSlice</a>( <span class='pre'>uri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove a pin for a slice. ...</div><div class='long'><p>Remove a pin for a slice.\n <p>\n If the slice has no other pins/callbacks then the slice will be unpinned.\n <p>\n This may only be called by apps that are the default launcher for the device\n or the default voice interaction service. Otherwise will throw SecurityException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The uri of the slice being unpinned.\n@see <a href=\"#!/api/android.app.slice.SliceManager-method-pinSlice\" rel=\"android.app.slice.SliceManager-method-pinSlice\" class=\"docClass\">pinSlice</a>\n@see SliceProvider#onSliceUnpinned(Uri)\n@see Intent#ACTION_ASSIST\n@see Intent#CATEGORY_HOME</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});