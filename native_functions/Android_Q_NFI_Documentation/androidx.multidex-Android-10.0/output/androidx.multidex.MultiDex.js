Ext.data.JsonP.androidx_multidex_MultiDex({"tagname":"class","name":"androidx.multidex.MultiDex","autodetected":{},"files":[{"filename":"MultiDex.js","href":"MultiDex.html#androidx-multidex-MultiDex"}],"extends":"java.lang.Object","members":[{"name":"install","tagname":"method","owner":"androidx.multidex.MultiDex","id":"method-install","meta":{}},{"name":"installInstrumentation","tagname":"method","owner":"androidx.multidex.MultiDex","id":"method-installInstrumentation","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-androidx.multidex.MultiDex","short_doc":"MultiDex patches the application context class\n loader in order to load classes from more than one dex file. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>androidx.multidex.MultiDex</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MultiDex.html#androidx-multidex-MultiDex' target='_blank'>MultiDex.js</a></div></pre><div class='doc-contents'><p>MultiDex patches the application context class\n loader in order to load classes from more than one dex file. The primary\n {@code classes.dex} must contain the classes necessary for calling this\n class methods. Secondary dex files named classes2.dex, classes3.dex... found\n in the application apk will be added to the classloader after first call to\n <a href=\"#!/api/androidx.multidex.MultiDex-method-install\" rel=\"androidx.multidex.MultiDex-method-install\" class=\"docClass\">install</a>(Context).</p>\n\n<p> <p/>\n This library provides compatibility for platforms with API level 4 through 20. This library does\n nothing on newer versions of the platform which provide built-in support for secondary dex files.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-install' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.multidex.MultiDex'>androidx.multidex.MultiDex</span><br/><a href='source/MultiDex.html#androidx-multidex-MultiDex-method-install' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.multidex.MultiDex-method-install' class='name expandable'>install</a>( <span class='pre'>context</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Patches the application context class loader by appending extra dex files\n loaded from the application apk. ...</div><div class='long'><p>Patches the application context class loader by appending extra dex files\n loaded from the application apk. This method should be called in the\n attachBaseContext of your Application, see\n <a href=\"#!/api/androidx.multidex.MultiDexApplication\" rel=\"androidx.multidex.MultiDexApplication\" class=\"docClass\">androidx.multidex.MultiDexApplication</a> for more explanation and an example.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>application context.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>RuntimeException if an error occurred preventing the classloader\n         extension.</p>\n</div></li></ul></div></div></div><div id='method-installInstrumentation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.multidex.MultiDex'>androidx.multidex.MultiDex</span><br/><a href='source/MultiDex.html#androidx-multidex-MultiDex-method-installInstrumentation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.multidex.MultiDex-method-installInstrumentation' class='name expandable'>installInstrumentation</a>( <span class='pre'>instrumentationContext, targetContext</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Patches the instrumentation context class loader by appending extra dex files\n loaded from the instrumentation apk an...</div><div class='long'><p>Patches the instrumentation context class loader by appending extra dex files\n loaded from the instrumentation apk and the application apk. This method should be called in\n the onCreate of your Instrumentation, see\n com.android.test.runner.MultiDexTestRunner for an example.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instrumentationContext</span> : Object {Context}<div class='sub-desc'><p>instrumentation context.</p>\n</div></li><li><span class='pre'>targetContext</span> : Object {Context}<div class='sub-desc'><p>target application context.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>RuntimeException if an error occurred preventing the classloader\n         extension.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});