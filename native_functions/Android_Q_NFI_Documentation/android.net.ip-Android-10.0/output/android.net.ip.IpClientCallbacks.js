Ext.data.JsonP.android_net_ip_IpClientCallbacks({"tagname":"class","name":"android.net.ip.IpClientCallbacks","autodetected":{},"files":[{"filename":"IpClientCallbacks.js","href":"IpClientCallbacks.html#android-net-ip-IpClientCallbacks"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"installPacketFilter","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-installPacketFilter","meta":{}},{"name":"onIpClientCreated","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onIpClientCreated","meta":{}},{"name":"onLinkPropertiesChange","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onLinkPropertiesChange","meta":{}},{"name":"onNewDhcpResults","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onNewDhcpResults","meta":{}},{"name":"onPostDhcpAction","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onPostDhcpAction","meta":{}},{"name":"onPreDhcpAction","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onPreDhcpAction","meta":{}},{"name":"onProvisioningFailure","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onProvisioningFailure","meta":{}},{"name":"onProvisioningSuccess","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onProvisioningSuccess","meta":{}},{"name":"onQuit","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onQuit","meta":{}},{"name":"onReachabilityLost","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-onReachabilityLost","meta":{}},{"name":"setFallbackMulticastFilter","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-setFallbackMulticastFilter","meta":{}},{"name":"setNeighborDiscoveryOffload","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-setNeighborDiscoveryOffload","meta":{}},{"name":"startReadPacketFilter","tagname":"method","owner":"android.net.ip.IpClientCallbacks","id":"method-startReadPacketFilter","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.ip.IpClientCallbacks","short_doc":"Callbacks for handling IpClient events. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.net.ip.IpClientUtil.WaitForProvisioningCallbacks"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.ip.IpClientCallbacks</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.net.ip.IpClientUtil.WaitForProvisioningCallbacks' rel='android.net.ip.IpClientUtil.WaitForProvisioningCallbacks' class='docClass'>android.net.ip.IpClientUtil.WaitForProvisioningCallbacks</a></div><h4>Files</h4><div class='dependency'><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks' target='_blank'>IpClientCallbacks.js</a></div></pre><div class='doc-contents'><p>Callbacks for handling IpClient events.</p>\n\n<p> This is a convenience class to allow clients not to override all methods of IIpClientCallbacks,\n and avoid unparceling arguments.\n These methods are called asynchronously on a Binder thread, as IpClient lives in a different\n process.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-installPacketFilter' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-installPacketFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-installPacketFilter' class='name expandable'>installPacketFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to indicate that a new APF program must be installed to filter incoming packets. ...</div><div class='long'><p>Called to indicate that a new APF program must be installed to filter incoming packets.</p>\n</div></div></div><div id='method-onIpClientCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onIpClientCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onIpClientCreated' class='name expandable'>onIpClientCreated</a>( <span class='pre'>ipClient</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback called upon IpClient creation. ...</div><div class='long'><p>Callback called upon IpClient creation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ipClient</span> : Object {IIpClient}<div class='sub-desc'><p>The Binder token to communicate with IpClient.</p>\n</div></li></ul></div></div></div><div id='method-onLinkPropertiesChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onLinkPropertiesChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onLinkPropertiesChange' class='name expandable'>onLinkPropertiesChange</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Invoked on LinkProperties changes. ...</div><div class='long'><p>Invoked on LinkProperties changes.</p>\n</div></div></div><div id='method-onNewDhcpResults' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onNewDhcpResults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onNewDhcpResults' class='name expandable'>onNewDhcpResults</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback called when new DHCP results are available. ...</div><div class='long'><p>Callback called when new DHCP results are available.</p>\n\n<p> <p>This is purely advisory and not an indication of provisioning success or failure.  This is\n only here for callers that want to expose DHCPv4 results to other APIs\n (e.g., WifiInfo#setInetAddress).</p>\n\n<p> <p>DHCPv4 or static IPv4 configuration failure or success can be determined by whether or not\n the passed-in DhcpResults object is null.</p>\n</div></div></div><div id='method-onPostDhcpAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onPostDhcpAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onPostDhcpAction' class='name expandable'>onPostDhcpAction</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback called after DHCP discovery/renewal. ...</div><div class='long'><p>Callback called after DHCP discovery/renewal.</p>\n</div></div></div><div id='method-onPreDhcpAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onPreDhcpAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onPreDhcpAction' class='name expandable'>onPreDhcpAction</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback called prior to DHCP discovery/renewal. ...</div><div class='long'><p>Callback called prior to DHCP discovery/renewal.</p>\n\n<p> <p>In order to receive onPreDhcpAction(), call #withPreDhcpAction() when constructing a\n ProvisioningConfiguration.</p>\n\n<p> <p>Implementations of onPreDhcpAction() must call IpClient#completedPreDhcpAction() to\n indicate that DHCP is clear to proceed.</p>\n</div></div></div><div id='method-onProvisioningFailure' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onProvisioningFailure' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onProvisioningFailure' class='name expandable'>onProvisioningFailure</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that provisioning failed. ...</div><div class='long'><p>Indicates that provisioning failed.</p>\n</div></div></div><div id='method-onProvisioningSuccess' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onProvisioningSuccess' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onProvisioningSuccess' class='name expandable'>onProvisioningSuccess</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that provisioning was successful. ...</div><div class='long'><p>Indicates that provisioning was successful.</p>\n</div></div></div><div id='method-onQuit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onQuit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onQuit' class='name expandable'>onQuit</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the IpClient state machine terminates. ...</div><div class='long'><p>Called when the IpClient state machine terminates.</p>\n</div></div></div><div id='method-onReachabilityLost' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-onReachabilityLost' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-onReachabilityLost' class='name expandable'>onReachabilityLost</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the internal IpReachabilityMonitor (if enabled) has\n detected the loss of a critical number of required n...</div><div class='long'><p>Called when the internal IpReachabilityMonitor (if enabled) has\n detected the loss of a critical number of required neighbors.</p>\n</div></div></div><div id='method-setFallbackMulticastFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-setFallbackMulticastFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-setFallbackMulticastFilter' class='name expandable'>setFallbackMulticastFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If multicast filtering cannot be accomplished with APF, this function will be called to\n actuate multicast filtering ...</div><div class='long'><p>If multicast filtering cannot be accomplished with APF, this function will be called to\n actuate multicast filtering using another means.</p>\n</div></div></div><div id='method-setNeighborDiscoveryOffload' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-setNeighborDiscoveryOffload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-setNeighborDiscoveryOffload' class='name expandable'>setNeighborDiscoveryOffload</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enabled/disable Neighbor Discover offload functionality. ...</div><div class='long'><p>Enabled/disable Neighbor Discover offload functionality. This is called, for example,\n whenever 464xlat is being started or stopped.</p>\n</div></div></div><div id='method-startReadPacketFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.ip.IpClientCallbacks'>android.net.ip.IpClientCallbacks</span><br/><a href='source/IpClientCallbacks.html#android-net-ip-IpClientCallbacks-method-startReadPacketFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.ip.IpClientCallbacks-method-startReadPacketFilter' class='name expandable'>startReadPacketFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to indicate that the APF Program &amp; data buffer must be read asynchronously from the\n wifi driver. ...</div><div class='long'><p>Called to indicate that the APF Program &amp; data buffer must be read asynchronously from the\n wifi driver.</p>\n\n<p> <p>Due to Wifi HAL limitations, the current implementation only supports dumping the entire\n buffer. In response to this request, the driver returns the data buffer asynchronously\n by sending an IpClient#EVENT_READ_PACKET_FILTER_COMPLETE message.</p>\n</div></div></div></div></div></div></div>","meta":{}});