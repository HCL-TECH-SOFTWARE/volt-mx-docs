Ext.data.JsonP.android_hardware_sidekick_SidekickInternal({"tagname":"class","name":"android.hardware.sidekick.SidekickInternal","autodetected":{},"files":[{"filename":"SidekickInternal.js","href":"SidekickInternal.html#android-hardware-sidekick-SidekickInternal"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"endDisplayControl","tagname":"method","owner":"android.hardware.sidekick.SidekickInternal","id":"method-endDisplayControl","meta":{}},{"name":"reset","tagname":"method","owner":"android.hardware.sidekick.SidekickInternal","id":"method-reset","meta":{}},{"name":"startDisplayControl","tagname":"method","owner":"android.hardware.sidekick.SidekickInternal","id":"method-startDisplayControl","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.sidekick.SidekickInternal","short_doc":"Sidekick local system service interface. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.sidekick.SidekickInternal</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SidekickInternal.html#android-hardware-sidekick-SidekickInternal' target='_blank'>SidekickInternal.js</a></div></pre><div class='doc-contents'><p>Sidekick local system service interface.</p>\n\n<p> Only for use within the system server, and maybe by Clockwork Home.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-endDisplayControl' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.sidekick.SidekickInternal'>android.hardware.sidekick.SidekickInternal</span><br/><a href='source/SidekickInternal.html#android-hardware-sidekick-SidekickInternal-method-endDisplayControl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.sidekick.SidekickInternal-method-endDisplayControl' class='name expandable'>endDisplayControl</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell Sidekick it must stop controlling the display. ...</div><div class='long'><p>Tell Sidekick it must stop controlling the display.</p>\n\n<p> No return code because this must always succeed - after return, Sidekick\n is guaranteed to not be controlling the display.</p>\n</div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.sidekick.SidekickInternal'>android.hardware.sidekick.SidekickInternal</span><br/><a href='source/SidekickInternal.html#android-hardware-sidekick-SidekickInternal-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.sidekick.SidekickInternal-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell Sidekick to reset back to newly-powered-on state. ...</div><div class='long'><p>Tell Sidekick to reset back to newly-powered-on state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success (Sidekick is reset), false if Sidekick is not\n available (failed or not present). Either way, upon return Sidekick is\n guaranteed not to be controlling the display.</p>\n</div></li></ul></div></div></div><div id='method-startDisplayControl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.sidekick.SidekickInternal'>android.hardware.sidekick.SidekickInternal</span><br/><a href='source/SidekickInternal.html#android-hardware-sidekick-SidekickInternal-method-startDisplayControl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.sidekick.SidekickInternal-method-startDisplayControl' class='name expandable'>startDisplayControl</a>( <span class='pre'>displayState</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell Sidekick it can start controlling the display. ...</div><div class='long'><p>Tell Sidekick it can start controlling the display.</p>\n\n<p> SidekickServer may choose not to actually control the display, if it's been told\n via other channels to leave the previous image on the display (same as SUSPEND in\n a non-Sidekick system).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayState</span> : Number<div class='sub-desc'><ul>\n<li>one of Display.STATE_DOZE_SUSPEND, Display.STATE_ON_SUSPEND</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true on success, false on failure (no sidekick available)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});