Ext.data.JsonP.org_xml_sax_ext_Locator2({"tagname":"class","name":"org.xml.sax.ext.Locator2","autodetected":{},"files":[{"filename":"Locator2.js","href":"Locator2.html#org-xml-sax-ext-Locator2"}],"since":"SAX 2.0 (extensions 1.1 alpha)","author":[{"tagname":"author","name":"David Brownell","email":null}],"members":[{"name":"getEncoding","tagname":"method","owner":"org.xml.sax.ext.Locator2","id":"method-getEncoding","meta":{}},{"name":"getXMLVersion","tagname":"method","owner":"org.xml.sax.ext.Locator2","id":"method-getXMLVersion","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-org.xml.sax.ext.Locator2","short_doc":"implements org.xml.sax.Locator\n\n SAX2 extension to augment the entity information provided\n though a Locator. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Locator2.html#org-xml-sax-ext-Locator2' target='_blank'>Locator2.js</a></div></pre><div class='doc-contents'><p>implements org.xml.sax.Locator</p>\n\n<p> SAX2 extension to augment the entity information provided\n though a Locator.\n If an implementation supports this extension, the Locator\n provided in ContentHandler.setDocumentLocator()  will implement this\n interface, and the\n <em>http://xml.org/sax/features/use-locator2</em> feature\n flag will have the value <em>true</em>.</p>\n\n<p> <blockquote>\n <em>This module, both source code and documentation, is in the\n Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n </blockquote></p>\n\n<p> <p> XMLReader implementations are not required to support this\n information, and it is not part of core-only SAX2 distributions.</p></p>\n\n<p> @version TBS</p>\n        <p>Available since: <b>SAX 2.0 (extensions 1.1 alpha)</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getEncoding' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xml.sax.ext.Locator2'>org.xml.sax.ext.Locator2</span><br/><a href='source/Locator2.html#org-xml-sax-ext-Locator2-method-getEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xml.sax.ext.Locator2-method-getEncoding' class='name expandable'>getEncoding</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the character encoding for the entity. ...</div><div class='long'><p>Returns the name of the character encoding for the entity.\n If the encoding was declared externally (for example, in a MIME\n Content-Type header), that will be the name returned.  Else if there\n was an <em>&lt;?xml&nbsp;...encoding='...'?&gt;</em> declaration at\n the start of the document, that encoding name will be returned.\n Otherwise the encoding will been inferred (normally to be UTF-8, or\n some UTF-16 variant), and that inferred name will be returned.</p>\n\n<p> <p>When an InputSource is used\n to provide an entity's character stream, this method returns the\n encoding provided in that input stream.</p>\n\n<p> <p> Note that some recent W3C specifications require that text\n in some encodings be normalized, using Unicode Normalization\n Form C, before processing.  Such normalization must be performed\n by applications, and would normally be triggered based on the\n value returned by this method.</p>\n\n<p> <p> Encoding names may be those used by the underlying JVM,\n and comparisons should be case-insensitive.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Name of the character encoding being used to interpret\nthe entity's text, or null if this was not provided for a *\n character stream passed through an InputSource or is otherwise\n not yet available in the current parsing state.</p>\n</div></li></ul></div></div></div><div id='method-getXMLVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xml.sax.ext.Locator2'>org.xml.sax.ext.Locator2</span><br/><a href='source/Locator2.html#org-xml-sax-ext-Locator2-method-getXMLVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xml.sax.ext.Locator2-method-getXMLVersion' class='name expandable'>getXMLVersion</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the version of XML used for the entity. ...</div><div class='long'><p>Returns the version of XML used for the entity.  This will\n normally be the identifier from the current entity's\n <em>&lt;?xml&nbsp;version='...'&nbsp;...?&gt;</em> declaration,\n or be defaulted by the parser.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Identifier for the XML version being used to interpret\n the entity's text, or null if that information is not yet\n available in the current parsing state.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});