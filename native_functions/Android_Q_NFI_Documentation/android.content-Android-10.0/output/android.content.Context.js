Ext.data.JsonP.android_content_Context({"tagname":"class","name":"android.content.Context","autodetected":{},"files":[{"filename":"Context.js","href":"Context.html#android-content-Context"}],"extends":"java.lang.Object","members":[{"name":"ACCESSIBILITY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-ACCESSIBILITY_SERVICE","meta":{}},{"name":"ACCOUNT_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-ACCOUNT_SERVICE","meta":{}},{"name":"ACTIVITY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-ACTIVITY_SERVICE","meta":{}},{"name":"ALARM_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-ALARM_SERVICE","meta":{}},{"name":"APPWIDGET_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-APPWIDGET_SERVICE","meta":{}},{"name":"APP_OPS_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-APP_OPS_SERVICE","meta":{}},{"name":"AUDIO_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-AUDIO_SERVICE","meta":{}},{"name":"BATTERY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-BATTERY_SERVICE","meta":{}},{"name":"BIND_ABOVE_CLIENT","tagname":"property","owner":"android.content.Context","id":"property-BIND_ABOVE_CLIENT","meta":{}},{"name":"BIND_ADJUST_WITH_ACTIVITY","tagname":"property","owner":"android.content.Context","id":"property-BIND_ADJUST_WITH_ACTIVITY","meta":{}},{"name":"BIND_ALLOW_OOM_MANAGEMENT","tagname":"property","owner":"android.content.Context","id":"property-BIND_ALLOW_OOM_MANAGEMENT","meta":{}},{"name":"BIND_AUTO_CREATE","tagname":"property","owner":"android.content.Context","id":"property-BIND_AUTO_CREATE","meta":{}},{"name":"BIND_DEBUG_UNBIND","tagname":"property","owner":"android.content.Context","id":"property-BIND_DEBUG_UNBIND","meta":{}},{"name":"BIND_EXTERNAL_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-BIND_EXTERNAL_SERVICE","meta":{}},{"name":"BIND_IMPORTANT","tagname":"property","owner":"android.content.Context","id":"property-BIND_IMPORTANT","meta":{}},{"name":"BIND_INCLUDE_CAPABILITIES","tagname":"property","owner":"android.content.Context","id":"property-BIND_INCLUDE_CAPABILITIES","meta":{}},{"name":"BIND_NOT_FOREGROUND","tagname":"property","owner":"android.content.Context","id":"property-BIND_NOT_FOREGROUND","meta":{}},{"name":"BIND_NOT_PERCEPTIBLE","tagname":"property","owner":"android.content.Context","id":"property-BIND_NOT_PERCEPTIBLE","meta":{}},{"name":"BIND_WAIVE_PRIORITY","tagname":"property","owner":"android.content.Context","id":"property-BIND_WAIVE_PRIORITY","meta":{}},{"name":"BIOMETRIC_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-BIOMETRIC_SERVICE","meta":{}},{"name":"BLUETOOTH_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-BLUETOOTH_SERVICE","meta":{}},{"name":"CAMERA_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-CAMERA_SERVICE","meta":{}},{"name":"CAPTIONING_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-CAPTIONING_SERVICE","meta":{}},{"name":"CARRIER_CONFIG_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-CARRIER_CONFIG_SERVICE","meta":{}},{"name":"CLIPBOARD_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-CLIPBOARD_SERVICE","meta":{}},{"name":"COMPANION_DEVICE_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-COMPANION_DEVICE_SERVICE","meta":{}},{"name":"CONNECTIVITY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-CONNECTIVITY_SERVICE","meta":{}},{"name":"CONSUMER_IR_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-CONSUMER_IR_SERVICE","meta":{}},{"name":"CONTEXT_IGNORE_SECURITY","tagname":"property","owner":"android.content.Context","id":"property-CONTEXT_IGNORE_SECURITY","meta":{}},{"name":"CONTEXT_INCLUDE_CODE","tagname":"property","owner":"android.content.Context","id":"property-CONTEXT_INCLUDE_CODE","meta":{}},{"name":"CONTEXT_RESTRICTED","tagname":"property","owner":"android.content.Context","id":"property-CONTEXT_RESTRICTED","meta":{}},{"name":"CROSS_PROFILE_APPS_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-CROSS_PROFILE_APPS_SERVICE","meta":{}},{"name":"DEVICE_POLICY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-DEVICE_POLICY_SERVICE","meta":{}},{"name":"DISPLAY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-DISPLAY_SERVICE","meta":{}},{"name":"DOWNLOAD_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-DOWNLOAD_SERVICE","meta":{}},{"name":"DROPBOX_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-DROPBOX_SERVICE","meta":{}},{"name":"EUICC_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-EUICC_SERVICE","meta":{}},{"name":"FINGERPRINT_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-FINGERPRINT_SERVICE","meta":{}},{"name":"HARDWARE_PROPERTIES_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-HARDWARE_PROPERTIES_SERVICE","meta":{}},{"name":"INPUT_METHOD_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-INPUT_METHOD_SERVICE","meta":{}},{"name":"INPUT_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-INPUT_SERVICE","meta":{}},{"name":"IPSEC_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-IPSEC_SERVICE","meta":{}},{"name":"JOB_SCHEDULER_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-JOB_SCHEDULER_SERVICE","meta":{}},{"name":"KEYGUARD_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-KEYGUARD_SERVICE","meta":{}},{"name":"LAUNCHER_APPS_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-LAUNCHER_APPS_SERVICE","meta":{}},{"name":"LAYOUT_INFLATER_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-LAYOUT_INFLATER_SERVICE","meta":{}},{"name":"LOCATION_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-LOCATION_SERVICE","meta":{}},{"name":"MEDIA_PROJECTION_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-MEDIA_PROJECTION_SERVICE","meta":{}},{"name":"MEDIA_ROUTER_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-MEDIA_ROUTER_SERVICE","meta":{}},{"name":"MEDIA_SESSION_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-MEDIA_SESSION_SERVICE","meta":{}},{"name":"MIDI_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-MIDI_SERVICE","meta":{}},{"name":"MODE_APPEND","tagname":"property","owner":"android.content.Context","id":"property-MODE_APPEND","meta":{}},{"name":"MODE_ENABLE_WRITE_AHEAD_LOGGING","tagname":"property","owner":"android.content.Context","id":"property-MODE_ENABLE_WRITE_AHEAD_LOGGING","meta":{}},{"name":"MODE_MULTI_PROCESS","tagname":"property","owner":"android.content.Context","id":"property-MODE_MULTI_PROCESS","meta":{"deprecated":{"text":"<p>MODE_MULTI_PROCESS does not work reliably in\nsome versions of Android, and furthermore does not provide any\nmechanism for reconciling concurrent modifications across\nprocesses.  Applications should not attempt to use it.  Instead,\nthey should use an explicit cross-process data management\napproach such as <a href=\"#!/api/android.content.ContentProvider\" rel=\"android.content.ContentProvider\" class=\"docClass\">ContentProvider</a>.</p>\n"}}},{"name":"MODE_NO_LOCALIZED_COLLATORS","tagname":"property","owner":"android.content.Context","id":"property-MODE_NO_LOCALIZED_COLLATORS","meta":{}},{"name":"MODE_PRIVATE","tagname":"property","owner":"android.content.Context","id":"property-MODE_PRIVATE","meta":{}},{"name":"MODE_WORLD_READABLE","tagname":"property","owner":"android.content.Context","id":"property-MODE_WORLD_READABLE","meta":{"deprecated":{"text":"<p>Creating world-readable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as <a href=\"#!/api/android.content.ContentProvider\" rel=\"android.content.ContentProvider\" class=\"docClass\">android.content.ContentProvider</a>,\n            <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a>, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.\n@see android.support.v4.content.FileProvider\n@see Intent#FLAG_GRANT_WRITE_URI_PERMISSION</p>\n"}}},{"name":"MODE_WORLD_WRITEABLE","tagname":"property","owner":"android.content.Context","id":"property-MODE_WORLD_WRITEABLE","meta":{"deprecated":{"text":"<p>Creating world-writable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as <a href=\"#!/api/android.content.ContentProvider\" rel=\"android.content.ContentProvider\" class=\"docClass\">android.content.ContentProvider</a>,\n            <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a>, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.\n@see android.support.v4.content.FileProvider\n@see Intent#FLAG_GRANT_WRITE_URI_PERMISSION</p>\n"}}},{"name":"NETWORK_POLICY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-NETWORK_POLICY_SERVICE","meta":{}},{"name":"NETWORK_STATS_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-NETWORK_STATS_SERVICE","meta":{}},{"name":"NETWORK_WATCHLIST_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-NETWORK_WATCHLIST_SERVICE","meta":{}},{"name":"NFC_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-NFC_SERVICE","meta":{}},{"name":"NOTIFICATION_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-NOTIFICATION_SERVICE","meta":{}},{"name":"NSD_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-NSD_SERVICE","meta":{}},{"name":"POWER_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-POWER_SERVICE","meta":{}},{"name":"PRINT_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-PRINT_SERVICE","meta":{}},{"name":"RECEIVER_VISIBLE_TO_INSTANT_APPS","tagname":"property","owner":"android.content.Context","id":"property-RECEIVER_VISIBLE_TO_INSTANT_APPS","meta":{}},{"name":"RESTRICTIONS_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-RESTRICTIONS_SERVICE","meta":{}},{"name":"ROLE_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-ROLE_SERVICE","meta":{}},{"name":"SEARCH_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-SEARCH_SERVICE","meta":{}},{"name":"SENSOR_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-SENSOR_SERVICE","meta":{}},{"name":"SHORTCUT_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-SHORTCUT_SERVICE","meta":{}},{"name":"STORAGE_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-STORAGE_SERVICE","meta":{}},{"name":"STORAGE_STATS_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-STORAGE_STATS_SERVICE","meta":{}},{"name":"SYSTEM_HEALTH_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-SYSTEM_HEALTH_SERVICE","meta":{}},{"name":"TELECOM_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-TELECOM_SERVICE","meta":{}},{"name":"TELEPHONY_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-TELEPHONY_SERVICE","meta":{}},{"name":"TELEPHONY_SUBSCRIPTION_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-TELEPHONY_SUBSCRIPTION_SERVICE","meta":{}},{"name":"TEXT_CLASSIFICATION_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-TEXT_CLASSIFICATION_SERVICE","meta":{}},{"name":"TEXT_SERVICES_MANAGER_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-TEXT_SERVICES_MANAGER_SERVICE","meta":{}},{"name":"TV_INPUT_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-TV_INPUT_SERVICE","meta":{}},{"name":"UI_MODE_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-UI_MODE_SERVICE","meta":{}},{"name":"USAGE_STATS_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-USAGE_STATS_SERVICE","meta":{}},{"name":"USB_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-USB_SERVICE","meta":{}},{"name":"USER_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-USER_SERVICE","meta":{}},{"name":"VIBRATOR_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-VIBRATOR_SERVICE","meta":{}},{"name":"WALLPAPER_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-WALLPAPER_SERVICE","meta":{}},{"name":"WIFI_AWARE_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-WIFI_AWARE_SERVICE","meta":{}},{"name":"WIFI_P2P_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-WIFI_P2P_SERVICE","meta":{}},{"name":"WIFI_RTT_RANGING_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-WIFI_RTT_RANGING_SERVICE","meta":{}},{"name":"WIFI_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-WIFI_SERVICE","meta":{}},{"name":"WINDOW_SERVICE","tagname":"property","owner":"android.content.Context","id":"property-WINDOW_SERVICE","meta":{}},{"name":"bindIsolatedService","tagname":"method","owner":"android.content.Context","id":"method-bindIsolatedService","meta":{}},{"name":"bindService","tagname":"method","owner":"android.content.Context","id":"method-bindService","meta":{}},{"name":"checkCallingOrSelfPermission","tagname":"method","owner":"android.content.Context","id":"method-checkCallingOrSelfPermission","meta":{}},{"name":"checkCallingOrSelfUriPermission","tagname":"method","owner":"android.content.Context","id":"method-checkCallingOrSelfUriPermission","meta":{}},{"name":"checkCallingPermission","tagname":"method","owner":"android.content.Context","id":"method-checkCallingPermission","meta":{}},{"name":"checkCallingUriPermission","tagname":"method","owner":"android.content.Context","id":"method-checkCallingUriPermission","meta":{}},{"name":"checkSelfPermission","tagname":"method","owner":"android.content.Context","id":"method-checkSelfPermission","meta":{}},{"name":"checkUriPermission","tagname":"method","owner":"android.content.Context","id":"method-checkUriPermission","meta":{}},{"name":"clearWallpaper","tagname":"method","owner":"android.content.Context","id":"method-clearWallpaper","meta":{"deprecated":{"text":"<p>Use WallpaperManager.clear() instead.\n <p>This method requires the caller to hold the permission\n android.Manifest.permission.SET_WALLPAPER.</p>\n"}}},{"name":"createConfigurationContext","tagname":"method","owner":"android.content.Context","id":"method-createConfigurationContext","meta":{}},{"name":"createContextForSplit","tagname":"method","owner":"android.content.Context","id":"method-createContextForSplit","meta":{}},{"name":"createDeviceProtectedStorageContext","tagname":"method","owner":"android.content.Context","id":"method-createDeviceProtectedStorageContext","meta":{}},{"name":"createDisplayContext","tagname":"method","owner":"android.content.Context","id":"method-createDisplayContext","meta":{}},{"name":"createPackageContext","tagname":"method","owner":"android.content.Context","id":"method-createPackageContext","meta":{}},{"name":"databaseList","tagname":"method","owner":"android.content.Context","id":"method-databaseList","meta":{}},{"name":"deleteDatabase","tagname":"method","owner":"android.content.Context","id":"method-deleteDatabase","meta":{}},{"name":"deleteFile","tagname":"method","owner":"android.content.Context","id":"method-deleteFile","meta":{}},{"name":"deleteSharedPreferences","tagname":"method","owner":"android.content.Context","id":"method-deleteSharedPreferences","meta":{}},{"name":"enforceCallingOrSelfPermission","tagname":"method","owner":"android.content.Context","id":"method-enforceCallingOrSelfPermission","meta":{}},{"name":"enforceCallingOrSelfUriPermission","tagname":"method","owner":"android.content.Context","id":"method-enforceCallingOrSelfUriPermission","meta":{}},{"name":"enforceCallingPermission","tagname":"method","owner":"android.content.Context","id":"method-enforceCallingPermission","meta":{}},{"name":"enforceCallingUriPermission","tagname":"method","owner":"android.content.Context","id":"method-enforceCallingUriPermission","meta":{}},{"name":"enforcePermission","tagname":"method","owner":"android.content.Context","id":"method-enforcePermission","meta":{}},{"name":"enforceUriPermission","tagname":"method","owner":"android.content.Context","id":"method-enforceUriPermission","meta":{}},{"name":"fileList","tagname":"method","owner":"android.content.Context","id":"method-fileList","meta":{}},{"name":"getApplicationContext","tagname":"method","owner":"android.content.Context","id":"method-getApplicationContext","meta":{}},{"name":"getApplicationInfo","tagname":"method","owner":"android.content.Context","id":"method-getApplicationInfo","meta":{}},{"name":"getAssets","tagname":"method","owner":"android.content.Context","id":"method-getAssets","meta":{}},{"name":"getCacheDir","tagname":"method","owner":"android.content.Context","id":"method-getCacheDir","meta":{}},{"name":"getClassLoader","tagname":"method","owner":"android.content.Context","id":"method-getClassLoader","meta":{}},{"name":"getCodeCacheDir","tagname":"method","owner":"android.content.Context","id":"method-getCodeCacheDir","meta":{}},{"name":"getColor","tagname":"method","owner":"android.content.Context","id":"method-getColor","meta":{}},{"name":"getColorStateList","tagname":"method","owner":"android.content.Context","id":"method-getColorStateList","meta":{}},{"name":"getContentResolver","tagname":"method","owner":"android.content.Context","id":"method-getContentResolver","meta":{}},{"name":"getDataDir","tagname":"method","owner":"android.content.Context","id":"method-getDataDir","meta":{}},{"name":"getDatabasePath","tagname":"method","owner":"android.content.Context","id":"method-getDatabasePath","meta":{}},{"name":"getDir","tagname":"method","owner":"android.content.Context","id":"method-getDir","meta":{}},{"name":"getDrawable","tagname":"method","owner":"android.content.Context","id":"method-getDrawable","meta":{}},{"name":"getExternalCacheDir","tagname":"method","owner":"android.content.Context","id":"method-getExternalCacheDir","meta":{}},{"name":"getExternalCacheDirs","tagname":"method","owner":"android.content.Context","id":"method-getExternalCacheDirs","meta":{}},{"name":"getExternalFilesDir","tagname":"method","owner":"android.content.Context","id":"method-getExternalFilesDir","meta":{}},{"name":"getExternalFilesDirs","tagname":"method","owner":"android.content.Context","id":"method-getExternalFilesDirs","meta":{}},{"name":"getExternalMediaDirs","tagname":"method","owner":"android.content.Context","id":"method-getExternalMediaDirs","meta":{}},{"name":"getFileStreamPath","tagname":"method","owner":"android.content.Context","id":"method-getFileStreamPath","meta":{}},{"name":"getFilesDir","tagname":"method","owner":"android.content.Context","id":"method-getFilesDir","meta":{}},{"name":"getMainExecutor","tagname":"method","owner":"android.content.Context","id":"method-getMainExecutor","meta":{}},{"name":"getMainLooper","tagname":"method","owner":"android.content.Context","id":"method-getMainLooper","meta":{}},{"name":"getNextAutofillId","tagname":"method","owner":"android.content.Context","id":"method-getNextAutofillId","meta":{}},{"name":"getNoBackupFilesDir","tagname":"method","owner":"android.content.Context","id":"method-getNoBackupFilesDir","meta":{}},{"name":"getObbDir","tagname":"method","owner":"android.content.Context","id":"method-getObbDir","meta":{}},{"name":"getObbDirs","tagname":"method","owner":"android.content.Context","id":"method-getObbDirs","meta":{}},{"name":"getOpPackageName","tagname":"method","owner":"android.content.Context","id":"method-getOpPackageName","meta":{}},{"name":"getPackageCodePath","tagname":"method","owner":"android.content.Context","id":"method-getPackageCodePath","meta":{}},{"name":"getPackageManager","tagname":"method","owner":"android.content.Context","id":"method-getPackageManager","meta":{}},{"name":"getPackageName","tagname":"method","owner":"android.content.Context","id":"method-getPackageName","meta":{}},{"name":"getPackageResourcePath","tagname":"method","owner":"android.content.Context","id":"method-getPackageResourcePath","meta":{}},{"name":"getResources","tagname":"method","owner":"android.content.Context","id":"method-getResources","meta":{}},{"name":"getSharedPreferences","tagname":"method","owner":"android.content.Context","id":"method-getSharedPreferences","meta":{"removed":{"text":"\n"}}},{"name":"getSharedPreferencesPath","tagname":"method","owner":"android.content.Context","id":"method-getSharedPreferencesPath","meta":{"removed":{"text":"\n"}}},{"name":"getString","tagname":"method","owner":"android.content.Context","id":"method-getString","meta":{}},{"name":"getSystemService","tagname":"method","owner":"android.content.Context","id":"method-getSystemService","meta":{}},{"name":"getSystemServiceName","tagname":"method","owner":"android.content.Context","id":"method-getSystemServiceName","meta":{}},{"name":"getText","tagname":"method","owner":"android.content.Context","id":"method-getText","meta":{}},{"name":"getTheme","tagname":"method","owner":"android.content.Context","id":"method-getTheme","meta":{}},{"name":"getWallpaper","tagname":"method","owner":"android.content.Context","id":"method-getWallpaper","meta":{"deprecated":{"text":"<p>Use WallpaperManager.get() instead.</p>\n"}}},{"name":"getWallpaperDesiredMinimumHeight","tagname":"method","owner":"android.content.Context","id":"method-getWallpaperDesiredMinimumHeight","meta":{"deprecated":{"text":"<p>Use WallpaperManager.getDesiredMinimumHeight() instead.</p>\n"}}},{"name":"getWallpaperDesiredMinimumWidth","tagname":"method","owner":"android.content.Context","id":"method-getWallpaperDesiredMinimumWidth","meta":{"deprecated":{"text":"<p>Use WallpaperManager.getDesiredMinimumWidth() instead.</p>\n"}}},{"name":"grantUriPermission","tagname":"method","owner":"android.content.Context","id":"method-grantUriPermission","meta":{}},{"name":"isDeviceProtectedStorage","tagname":"method","owner":"android.content.Context","id":"method-isDeviceProtectedStorage","meta":{}},{"name":"isRestricted","tagname":"method","owner":"android.content.Context","id":"method-isRestricted","meta":{}},{"name":"moveDatabaseFrom","tagname":"method","owner":"android.content.Context","id":"method-moveDatabaseFrom","meta":{}},{"name":"moveSharedPreferencesFrom","tagname":"method","owner":"android.content.Context","id":"method-moveSharedPreferencesFrom","meta":{}},{"name":"obtainStyledAttributes","tagname":"method","owner":"android.content.Context","id":"method-obtainStyledAttributes","meta":{}},{"name":"openFileInput","tagname":"method","owner":"android.content.Context","id":"method-openFileInput","meta":{}},{"name":"openFileOutput","tagname":"method","owner":"android.content.Context","id":"method-openFileOutput","meta":{}},{"name":"openOrCreateDatabase","tagname":"method","owner":"android.content.Context","id":"method-openOrCreateDatabase","meta":{}},{"name":"peekWallpaper","tagname":"method","owner":"android.content.Context","id":"method-peekWallpaper","meta":{"deprecated":{"text":"<p>Use WallpaperManager.peek() instead.</p>\n"}}},{"name":"registerComponentCallbacks","tagname":"method","owner":"android.content.Context","id":"method-registerComponentCallbacks","meta":{}},{"name":"registerReceiver","tagname":"method","owner":"android.content.Context","id":"method-registerReceiver","meta":{}},{"name":"registerReceiverAsUser","tagname":"method","owner":"android.content.Context","id":"method-registerReceiverAsUser","meta":{}},{"name":"removeStickyBroadcast","tagname":"method","owner":"android.content.Context","id":"method-removeStickyBroadcast","meta":{}},{"name":"removeStickyBroadcastAsUser","tagname":"method","owner":"android.content.Context","id":"method-removeStickyBroadcastAsUser","meta":{}},{"name":"revokeUriPermission","tagname":"method","owner":"android.content.Context","id":"method-revokeUriPermission","meta":{}},{"name":"sendStickyBroadcast","tagname":"method","owner":"android.content.Context","id":"method-sendStickyBroadcast","meta":{}},{"name":"sendStickyOrderedBroadcast","tagname":"method","owner":"android.content.Context","id":"method-sendStickyOrderedBroadcast","meta":{}},{"name":"sendStickyOrderedBroadcastAsUser","tagname":"method","owner":"android.content.Context","id":"method-sendStickyOrderedBroadcastAsUser","meta":{}},{"name":"setTheme","tagname":"method","owner":"android.content.Context","id":"method-setTheme","meta":{}},{"name":"setWallpaper","tagname":"method","owner":"android.content.Context","id":"method-setWallpaper","meta":{"deprecated":{"text":"<p>Use WallpaperManager.set() instead.\n <p>This method requires the caller to hold the permission\n android.Manifest.permission.SET_WALLPAPER.</p>\n"}}},{"name":"startActivities","tagname":"method","owner":"android.content.Context","id":"method-startActivities","meta":{}},{"name":"startActivitiesAsUser","tagname":"method","owner":"android.content.Context","id":"method-startActivitiesAsUser","meta":{}},{"name":"startActivity","tagname":"method","owner":"android.content.Context","id":"method-startActivity","meta":{}},{"name":"startForegroundService","tagname":"method","owner":"android.content.Context","id":"method-startForegroundService","meta":{}},{"name":"startInstrumentation","tagname":"method","owner":"android.content.Context","id":"method-startInstrumentation","meta":{}},{"name":"startIntentSender","tagname":"method","owner":"android.content.Context","id":"method-startIntentSender","meta":{}},{"name":"startService","tagname":"method","owner":"android.content.Context","id":"method-startService","meta":{}},{"name":"stopService","tagname":"method","owner":"android.content.Context","id":"method-stopService","meta":{}},{"name":"unbindService","tagname":"method","owner":"android.content.Context","id":"method-unbindService","meta":{}},{"name":"unregisterComponentCallbacks","tagname":"method","owner":"android.content.Context","id":"method-unregisterComponentCallbacks","meta":{}},{"name":"unregisterReceiver","tagname":"method","owner":"android.content.Context","id":"method-unregisterReceiver","meta":{}},{"name":"updateServiceGroup","tagname":"method","owner":"android.content.Context","id":"method-updateServiceGroup","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.Context","short_doc":"Interface to global information about an application environment. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.content.ContextWrapper"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.Context</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.content.ContextWrapper' rel='android.content.ContextWrapper' class='docClass'>android.content.ContextWrapper</a></div><h4>Files</h4><div class='dependency'><a href='source/Context.html#android-content-Context' target='_blank'>Context.js</a></div></pre><div class='doc-contents'><p>Interface to global information about an application environment.  This is\n an abstract class whose implementation is provided by\n the Android system.  It\n allows access to application-specific resources and classes, as well as\n up-calls for application-level operations such as launching activities,\n broadcasting and receiving intents, etc.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACCESSIBILITY_SERVICE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-ACCESSIBILITY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-ACCESSIBILITY_SERVICE' class='name expandable'>ACCESSIBILITY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.view.accessibility.AccessibilityManager for giving the user\nf...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.view.accessibility.AccessibilityManager for giving the user\nfeedback for UI events through the registered event listeners.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.view.accessibility.AccessibilityManager</p>\n<p>Defaults to: <code>&quot;accessibility&quot;</code></p></div></div></div><div id='property-ACCOUNT_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-ACCOUNT_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-ACCOUNT_SERVICE' class='name expandable'>ACCOUNT_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.accounts.AccountManager for receiving intents at a\ntime of yo...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.accounts.AccountManager for receiving intents at a\ntime of your choosing.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.accounts.AccountManager</p>\n<p>Defaults to: <code>&quot;account&quot;</code></p></div></div></div><div id='property-ACTIVITY_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-ACTIVITY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-ACTIVITY_SERVICE' class='name expandable'>ACTIVITY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.ActivityManager for interacting with the global\nsystem st...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.ActivityManager for interacting with the global\nsystem state.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.ActivityManager</p>\n<p>Defaults to: <code>&quot;activity&quot;</code></p></div></div></div><div id='property-ALARM_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-ALARM_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-ALARM_SERVICE' class='name expandable'>ALARM_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.AlarmManager for receiving intents at a\ntime of your choo...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.AlarmManager for receiving intents at a\ntime of your choosing.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.AlarmManager</p>\n<p>Defaults to: <code>&quot;alarm&quot;</code></p></div></div></div><div id='property-APPWIDGET_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-APPWIDGET_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-APPWIDGET_SERVICE' class='name expandable'>APPWIDGET_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.appwidget.AppWidgetManager for accessing AppWidgets. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.appwidget.AppWidgetManager for accessing AppWidgets.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;appwidget&quot;</code></p></div></div></div><div id='property-APP_OPS_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-APP_OPS_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-APP_OPS_SERVICE' class='name expandable'>APP_OPS_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.AppOpsManager for tracking application operations\non the ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.AppOpsManager for tracking application operations\non the device.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.AppOpsManager</p>\n<p>Defaults to: <code>&quot;appops&quot;</code></p></div></div></div><div id='property-AUDIO_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-AUDIO_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-AUDIO_SERVICE' class='name expandable'>AUDIO_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.media.AudioManager for handling management of volume,\nringer ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.media.AudioManager for handling management of volume,\nringer modes and audio routing.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.media.AudioManager</p>\n<p>Defaults to: <code>&quot;audio&quot;</code></p></div></div></div><div id='property-BATTERY_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BATTERY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BATTERY_SERVICE' class='name expandable'>BATTERY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.os.BatteryManager for managing battery state. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.os.BatteryManager for managing battery state.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;batterymanager&quot;</code></p></div></div></div><div id='property-BIND_ABOVE_CLIENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_ABOVE_CLIENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_ABOVE_CLIENT' class='name expandable'>BIND_ABOVE_CLIENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: indicates that the client application\nbinding to this service considers the service to be more ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: indicates that the client application\nbinding to this service considers the service to be more important than\nthe app itself.  When set, the platform will try to have the out of\nmemory killer kill the app before it kills the service it is bound to, though\nthis is not guaranteed to be the case.</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-BIND_ADJUST_WITH_ACTIVITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_ADJUST_WITH_ACTIVITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_ADJUST_WITH_ACTIVITY' class='name expandable'>BIND_ADJUST_WITH_ACTIVITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: If binding from an activity, allow the\ntarget service's process importance to be raised based o...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: If binding from an activity, allow the\ntarget service's process importance to be raised based on whether the\nactivity is visible to the user, regardless whether another flag is\nused to reduce the amount that the client process's overall importance\nis used to impact it.</p>\n<p>Defaults to: <code>&quot;128&quot;</code></p></div></div></div><div id='property-BIND_ALLOW_OOM_MANAGEMENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_ALLOW_OOM_MANAGEMENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_ALLOW_OOM_MANAGEMENT' class='name expandable'>BIND_ALLOW_OOM_MANAGEMENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: allow the process hosting the bound\nservice to go through its normal memory management. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: allow the process hosting the bound\nservice to go through its normal memory management.  It will be\ntreated more like a running service, allowing the system to\n(temporarily) expunge the process if low on memory or for some other\nwhim it may have, and being more aggressive about making it a candidate\nto be killed (and restarted) if running for a long time.</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p></div></div></div><div id='property-BIND_AUTO_CREATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_AUTO_CREATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_AUTO_CREATE' class='name expandable'>BIND_AUTO_CREATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: automatically create the service as long\nas the binding exists. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: automatically create the service as long\nas the binding exists.  Note that while this will create the service,\nits android.app.Service.onStartCommand\nmethod will still only be called due to an\nexplicit call to <a href=\"#!/api/android.content.Context-method-startService\" rel=\"android.content.Context-method-startService\" class=\"docClass\">startService</a>.  Even without that, though,\nthis still provides you with access to the service object while the\nservice is created.</p>\n\n<p><p>Note that prior to android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH,\nnot supplying this flag would also impact how important the system\nconsider's the target service's process to be.  When set, the only way\nfor it to be raised was by binding from a service in which case it will\nonly be important when that activity is in the foreground.  Now to\nachieve this behavior you must explicitly supply the new flag\n<a href=\"#!/api/android.content.Context-property-BIND_ADJUST_WITH_ACTIVITY\" rel=\"android.content.Context-property-BIND_ADJUST_WITH_ACTIVITY\" class=\"docClass\">BIND_ADJUST_WITH_ACTIVITY</a>.  For compatibility, old applications\nthat don't specify <a href=\"#!/api/android.content.Context-property-BIND_AUTO_CREATE\" rel=\"android.content.Context-property-BIND_AUTO_CREATE\" class=\"docClass\">BIND_AUTO_CREATE</a> will automatically have\nthe flags <a href=\"#!/api/android.content.Context-property-BIND_WAIVE_PRIORITY\" rel=\"android.content.Context-property-BIND_WAIVE_PRIORITY\" class=\"docClass\">BIND_WAIVE_PRIORITY</a> and\n<a href=\"#!/api/android.content.Context-property-BIND_ADJUST_WITH_ACTIVITY\" rel=\"android.content.Context-property-BIND_ADJUST_WITH_ACTIVITY\" class=\"docClass\">BIND_ADJUST_WITH_ACTIVITY</a> set for them in order to achieve\nthe same result.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-BIND_DEBUG_UNBIND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_DEBUG_UNBIND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_DEBUG_UNBIND' class='name expandable'>BIND_DEBUG_UNBIND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: include debugging help for mismatched\ncalls to unbind. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: include debugging help for mismatched\ncalls to unbind.  When this flag is set, the callstack of the following\n<a href=\"#!/api/android.content.Context-method-unbindService\" rel=\"android.content.Context-method-unbindService\" class=\"docClass\">unbindService</a> call is retained, to be printed if a later\nincorrect unbind call is made.  Note that doing this requires retaining\ninformation about the binding that was made for the lifetime of the app,\nresulting in a leak -- this should only be used for debugging.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-BIND_EXTERNAL_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_EXTERNAL_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_EXTERNAL_SERVICE' class='name expandable'>BIND_EXTERNAL_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: The service being bound is an\nisolated,\nexternal service. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: The service being bound is an\nisolated,\nexternal service.  This binds the service into the\ncalling application's package, rather than the package in which the service is declared.</p>\n\n<p>\nWhen using this flag, the code for the service being bound will execute under the calling\napplication's package name and user ID.  Because the service must be an isolated process,\nit will not have direct access to the application's data, though.\n\nThe purpose of this flag is to allow applications to provide services that are attributed\nto the app using the service, rather than the application providing the service.\n</p>\n\n<p>Defaults to: <code>&quot;-2147483648&quot;</code></p></div></div></div><div id='property-BIND_IMPORTANT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_IMPORTANT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_IMPORTANT' class='name expandable'>BIND_IMPORTANT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: this service is very important to\nthe client, so should be brought to the foreground process le...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: this service is very important to\nthe client, so should be brought to the foreground process level\nwhen the client is.  Normally a process can only be raised to the\nvisibility level by a client, even if that client is in the foreground.</p>\n<p>Defaults to: <code>&quot;64&quot;</code></p></div></div></div><div id='property-BIND_INCLUDE_CAPABILITIES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_INCLUDE_CAPABILITIES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_INCLUDE_CAPABILITIES' class='name expandable'>BIND_INCLUDE_CAPABILITIES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: If binding from an app that has specific capabilities\ndue to its foreground state such as an ac...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: If binding from an app that has specific capabilities\ndue to its foreground state such as an activity or foreground service, then this flag will\nallow the bound app to get the same capabilities, as long as it has the required permissions\nas well.</p>\n<p>Defaults to: <code>&quot;4096&quot;</code></p></div></div></div><div id='property-BIND_NOT_FOREGROUND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_NOT_FOREGROUND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_NOT_FOREGROUND' class='name expandable'>BIND_NOT_FOREGROUND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: don't allow this binding to raise\nthe target service's process to the foreground scheduling pri...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: don't allow this binding to raise\nthe target service's process to the foreground scheduling priority.\nIt will still be raised to at least the same memory priority\nas the client (so that its process will not be killable in any\nsituation where the client is not killable), but for CPU scheduling\npurposes it may be left in the background.  This only has an impact\nin the situation where the binding client is a foreground process\nand the target service is in a background process.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-BIND_NOT_PERCEPTIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_NOT_PERCEPTIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_NOT_PERCEPTIBLE' class='name expandable'>BIND_NOT_PERCEPTIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: If binding from an app that is visible or user-perceptible,\nlower the target service's importan...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: If binding from an app that is visible or user-perceptible,\nlower the target service's importance to below the perceptible level. This allows\nthe system to (temporarily) expunge the bound process from memory to make room for more\nimportant user-perceptible processes.</p>\n<p>Defaults to: <code>&quot;256&quot;</code></p></div></div></div><div id='property-BIND_WAIVE_PRIORITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIND_WAIVE_PRIORITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIND_WAIVE_PRIORITY' class='name expandable'>BIND_WAIVE_PRIORITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for bindService: don't impact the scheduling or\nmemory management priority of the target service's hosting process. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: don't impact the scheduling or\nmemory management priority of the target service's hosting process.\nAllows the service's process to be managed on the background LRU list\njust like a regular application process in the background.</p>\n<p>Defaults to: <code>&quot;32&quot;</code></p></div></div></div><div id='property-BIOMETRIC_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BIOMETRIC_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BIOMETRIC_SERVICE' class='name expandable'>BIOMETRIC_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.hardware.biometrics.BiometricManager for handling management\n...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.hardware.biometrics.BiometricManager for handling management\nof face authentication.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>\n@see android.hardware.biometrics.BiometricManager</p>\n<p>Defaults to: <code>&quot;biometric&quot;</code></p></div></div></div><div id='property-BLUETOOTH_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-BLUETOOTH_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-BLUETOOTH_SERVICE' class='name expandable'>BLUETOOTH_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.bluetooth.BluetoothManager for using Bluetooth. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.bluetooth.BluetoothManager for using Bluetooth.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;bluetooth&quot;</code></p></div></div></div><div id='property-CAMERA_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CAMERA_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CAMERA_SERVICE' class='name expandable'>CAMERA_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.hardware.camera2.CameraManager for interacting with\ncamera de...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.hardware.camera2.CameraManager for interacting with\ncamera devices.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.hardware.camera2.CameraManager</p>\n<p>Defaults to: <code>&quot;camera&quot;</code></p></div></div></div><div id='property-CAPTIONING_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CAPTIONING_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CAPTIONING_SERVICE' class='name expandable'>CAPTIONING_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.view.accessibility.CaptioningManager for obtaining\ncaptioning...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.view.accessibility.CaptioningManager for obtaining\ncaptioning properties and listening for changes in captioning\npreferences.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.view.accessibility.CaptioningManager</p>\n<p>Defaults to: <code>&quot;captioning&quot;</code></p></div></div></div><div id='property-CARRIER_CONFIG_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CARRIER_CONFIG_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CARRIER_CONFIG_SERVICE' class='name expandable'>CARRIER_CONFIG_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.telephony.CarrierConfigManager for reading carrier configurat...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.telephony.CarrierConfigManager for reading carrier configuration values.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.telephony.CarrierConfigManager</p>\n<p>Defaults to: <code>&quot;carrier_config&quot;</code></p></div></div></div><div id='property-CLIPBOARD_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CLIPBOARD_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CLIPBOARD_SERVICE' class='name expandable'>CLIPBOARD_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.content.ClipboardManager for accessing and modifying\nthe cont...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\n<a href=\"#!/api/android.content.ClipboardManager\" rel=\"android.content.ClipboardManager\" class=\"docClass\">android.content.ClipboardManager</a> for accessing and modifying\nthe contents of the global clipboard.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see <a href=\"#!/api/android.content.ClipboardManager\" rel=\"android.content.ClipboardManager\" class=\"docClass\">android.content.ClipboardManager</a></p>\n<p>Defaults to: <code>&quot;clipboard&quot;</code></p></div></div></div><div id='property-COMPANION_DEVICE_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-COMPANION_DEVICE_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-COMPANION_DEVICE_SERVICE' class='name expandable'>COMPANION_DEVICE_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.companion.CompanionDeviceManager for managing companion devic...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.companion.CompanionDeviceManager for managing companion devices</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.companion.CompanionDeviceManager</p>\n<p>Defaults to: <code>&quot;companiondevice&quot;</code></p></div></div></div><div id='property-CONNECTIVITY_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CONNECTIVITY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CONNECTIVITY_SERVICE' class='name expandable'>CONNECTIVITY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.net.ConnectivityManager for handling management of\nnetwork co...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.net.ConnectivityManager for handling management of\nnetwork connections.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.net.ConnectivityManager</p>\n<p>Defaults to: <code>&quot;connectivity&quot;</code></p></div></div></div><div id='property-CONSUMER_IR_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CONSUMER_IR_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CONSUMER_IR_SERVICE' class='name expandable'>CONSUMER_IR_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.hardware.ConsumerIrManager for transmitting infrared\nsignals ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.hardware.ConsumerIrManager for transmitting infrared\nsignals from the device.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.hardware.ConsumerIrManager</p>\n<p>Defaults to: <code>&quot;consumer_ir&quot;</code></p></div></div></div><div id='property-CONTEXT_IGNORE_SECURITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CONTEXT_IGNORE_SECURITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CONTEXT_IGNORE_SECURITY' class='name expandable'>CONTEXT_IGNORE_SECURITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for use with createPackageContext: ignore any security\nrestrictions on the Context being requested, allowing it ...</div><div class='long'><p>Flag for use with <a href=\"#!/api/android.content.Context-method-createPackageContext\" rel=\"android.content.Context-method-createPackageContext\" class=\"docClass\">createPackageContext</a>: ignore any security\nrestrictions on the Context being requested, allowing it to always\nbe loaded.  For use with <a href=\"#!/api/android.content.Context-property-CONTEXT_INCLUDE_CODE\" rel=\"android.content.Context-property-CONTEXT_INCLUDE_CODE\" class=\"docClass\">CONTEXT_INCLUDE_CODE</a> to allow code\nto be loaded into a process even when it isn't safe to do so.  Use\nwith extreme care!</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-CONTEXT_INCLUDE_CODE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CONTEXT_INCLUDE_CODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CONTEXT_INCLUDE_CODE' class='name expandable'>CONTEXT_INCLUDE_CODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for use with createPackageContext: include the application\ncode with the context. ...</div><div class='long'><p>Flag for use with <a href=\"#!/api/android.content.Context-method-createPackageContext\" rel=\"android.content.Context-method-createPackageContext\" class=\"docClass\">createPackageContext</a>: include the application\ncode with the context.  This means loading code into the caller's\nprocess, so that <a href=\"#!/api/android.content.Context-method-getClassLoader\" rel=\"android.content.Context-method-getClassLoader\" class=\"docClass\">getClassLoader</a>() can be used to instantiate\nthe application's classes.  Setting this flags imposes security\nrestrictions on what application context you can access; if the\nrequested application can not be safely loaded into your process,\njava.lang.SecurityException will be thrown.  If this flag is not set,\nthere will be no restrictions on the packages that can be loaded,\nbut <a href=\"#!/api/android.content.Context-method-getClassLoader\" rel=\"android.content.Context-method-getClassLoader\" class=\"docClass\">getClassLoader</a> will always return the default system\nclass loader.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-CONTEXT_RESTRICTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CONTEXT_RESTRICTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CONTEXT_RESTRICTED' class='name expandable'>CONTEXT_RESTRICTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for use with createPackageContext: a restricted context may\ndisable specific features. ...</div><div class='long'><p>Flag for use with <a href=\"#!/api/android.content.Context-method-createPackageContext\" rel=\"android.content.Context-method-createPackageContext\" class=\"docClass\">createPackageContext</a>: a restricted context may\ndisable specific features. For instance, a View associated with a restricted\ncontext would ignore particular XML attributes.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-CROSS_PROFILE_APPS_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-CROSS_PROFILE_APPS_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-CROSS_PROFILE_APPS_SERVICE' class='name expandable'>CROSS_PROFILE_APPS_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.content.pm.CrossProfileApps for cross profile operations. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.content.pm.CrossProfileApps for cross profile operations.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;crossprofileapps&quot;</code></p></div></div></div><div id='property-DEVICE_POLICY_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-DEVICE_POLICY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-DEVICE_POLICY_SERVICE' class='name expandable'>DEVICE_POLICY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.admin.DevicePolicyManager for working with global\ndevice ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.admin.DevicePolicyManager for working with global\ndevice policy management.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;device_policy&quot;</code></p></div></div></div><div id='property-DISPLAY_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-DISPLAY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-DISPLAY_SERVICE' class='name expandable'>DISPLAY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.hardware.display.DisplayManager for interacting with display ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.hardware.display.DisplayManager for interacting with display devices.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.hardware.display.DisplayManager</p>\n<p>Defaults to: <code>&quot;display&quot;</code></p></div></div></div><div id='property-DOWNLOAD_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-DOWNLOAD_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-DOWNLOAD_SERVICE' class='name expandable'>DOWNLOAD_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.DownloadManager for requesting HTTP downloads. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.DownloadManager for requesting HTTP downloads.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;download&quot;</code></p></div></div></div><div id='property-DROPBOX_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-DROPBOX_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-DROPBOX_SERVICE' class='name expandable'>DROPBOX_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.os.DropBoxManager instance for recording\ndiagnostic logs. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.os.DropBoxManager instance for recording\ndiagnostic logs.\n@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;dropbox&quot;</code></p></div></div></div><div id='property-EUICC_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-EUICC_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-EUICC_SERVICE' class='name expandable'>EUICC_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.telephony.euicc.EuiccManager to manage the device eUICC (embe...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.telephony.euicc.EuiccManager to manage the device eUICC (embedded SIM).</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.telephony.euicc.EuiccManager</p>\n<p>Defaults to: <code>&quot;euicc&quot;</code></p></div></div></div><div id='property-FINGERPRINT_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-FINGERPRINT_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-FINGERPRINT_SERVICE' class='name expandable'>FINGERPRINT_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.hardware.fingerprint.FingerprintManager for handling manageme...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.hardware.fingerprint.FingerprintManager for handling management\nof fingerprints.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.hardware.fingerprint.FingerprintManager</p>\n<p>Defaults to: <code>&quot;fingerprint&quot;</code></p></div></div></div><div id='property-HARDWARE_PROPERTIES_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-HARDWARE_PROPERTIES_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-HARDWARE_PROPERTIES_SERVICE' class='name expandable'>HARDWARE_PROPERTIES_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.os.HardwarePropertiesManager for accessing the hardware prope...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.os.HardwarePropertiesManager for accessing the hardware properties service.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;hardware_properties&quot;</code></p></div></div></div><div id='property-INPUT_METHOD_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-INPUT_METHOD_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-INPUT_METHOD_SERVICE' class='name expandable'>INPUT_METHOD_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.view.inputmethod.InputMethodManager for accessing input\nmethods. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.view.inputmethod.InputMethodManager for accessing input\nmethods.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;input_method&quot;</code></p></div></div></div><div id='property-INPUT_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-INPUT_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-INPUT_SERVICE' class='name expandable'>INPUT_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.hardware.input.InputManager for interacting with input devices. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.hardware.input.InputManager for interacting with input devices.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.hardware.input.InputManager</p>\n<p>Defaults to: <code>&quot;input&quot;</code></p></div></div></div><div id='property-IPSEC_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-IPSEC_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-IPSEC_SERVICE' class='name expandable'>IPSEC_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.net.IpSecManager for encrypting Sockets or Networks with\nIPSec. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.net.IpSecManager for encrypting Sockets or Networks with\nIPSec.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;ipsec&quot;</code></p></div></div></div><div id='property-JOB_SCHEDULER_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-JOB_SCHEDULER_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-JOB_SCHEDULER_SERVICE' class='name expandable'>JOB_SCHEDULER_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.app.job.JobScheduler instance for managing occasional\nbackgro...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.app.job.JobScheduler instance for managing occasional\nbackground tasks.\n@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.job.JobScheduler</p>\n<p>Defaults to: <code>&quot;jobscheduler&quot;</code></p></div></div></div><div id='property-KEYGUARD_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-KEYGUARD_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-KEYGUARD_SERVICE' class='name expandable'>KEYGUARD_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.KeyguardManager for controlling keyguard. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.KeyguardManager for controlling keyguard.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.KeyguardManager</p>\n<p>Defaults to: <code>&quot;keyguard&quot;</code></p></div></div></div><div id='property-LAUNCHER_APPS_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-LAUNCHER_APPS_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-LAUNCHER_APPS_SERVICE' class='name expandable'>LAUNCHER_APPS_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.content.pm.LauncherApps for querying and monitoring launchabl...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.content.pm.LauncherApps for querying and monitoring launchable apps across\nprofiles of a user.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.content.pm.LauncherApps</p>\n<p>Defaults to: <code>&quot;launcherapps&quot;</code></p></div></div></div><div id='property-LAYOUT_INFLATER_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-LAYOUT_INFLATER_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-LAYOUT_INFLATER_SERVICE' class='name expandable'>LAYOUT_INFLATER_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.view.LayoutInflater for inflating layout resources in this\nco...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.view.LayoutInflater for inflating layout resources in this\ncontext.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.view.LayoutInflater</p>\n<p>Defaults to: <code>&quot;layout_inflater&quot;</code></p></div></div></div><div id='property-LOCATION_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-LOCATION_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-LOCATION_SERVICE' class='name expandable'>LOCATION_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.location.LocationManager for controlling location\nupdates. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.location.LocationManager for controlling location\nupdates.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.location.LocationManager</p>\n<p>Defaults to: <code>&quot;location&quot;</code></p></div></div></div><div id='property-MEDIA_PROJECTION_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MEDIA_PROJECTION_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MEDIA_PROJECTION_SERVICE' class='name expandable'>MEDIA_PROJECTION_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.media.projection.MediaProjectionManager instance for managing...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.media.projection.MediaProjectionManager instance for managing\nmedia projection sessions.\n@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.media.projection.MediaProjectionManager</p>\n<p>Defaults to: <code>&quot;media_projection&quot;</code></p></div></div></div><div id='property-MEDIA_ROUTER_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MEDIA_ROUTER_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MEDIA_ROUTER_SERVICE' class='name expandable'>MEDIA_ROUTER_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService to retrieve a\nandroid.media.MediaRouter for controlling and managing\nrouting of media. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a> to retrieve a\nandroid.media.MediaRouter for controlling and managing\nrouting of media.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.media.MediaRouter</p>\n<p>Defaults to: <code>&quot;media_router&quot;</code></p></div></div></div><div id='property-MEDIA_SESSION_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MEDIA_SESSION_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MEDIA_SESSION_SERVICE' class='name expandable'>MEDIA_SESSION_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.media.session.MediaSessionManager for managing media Sessions. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.media.session.MediaSessionManager for managing media Sessions.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.media.session.MediaSessionManager</p>\n<p>Defaults to: <code>&quot;media_session&quot;</code></p></div></div></div><div id='property-MIDI_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MIDI_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MIDI_SERVICE' class='name expandable'>MIDI_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.media.midi.MidiManager for accessing the MIDI service. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.media.midi.MidiManager for accessing the MIDI service.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;midi&quot;</code></p></div></div></div><div id='property-MODE_APPEND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MODE_APPEND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MODE_APPEND' class='name expandable'>MODE_APPEND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>File creation mode: for use with openFileOutput, if the file\nalready exists then write data to the end of the existin...</div><div class='long'><p>File creation mode: for use with <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>, if the file\nalready exists then write data to the end of the existing file\ninstead of erasing it.\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a></p>\n<p>Defaults to: <code>&quot;32768&quot;</code></p></div></div></div><div id='property-MODE_ENABLE_WRITE_AHEAD_LOGGING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MODE_ENABLE_WRITE_AHEAD_LOGGING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MODE_ENABLE_WRITE_AHEAD_LOGGING' class='name expandable'>MODE_ENABLE_WRITE_AHEAD_LOGGING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Database open flag: when set, the database is opened with write-ahead\nlogging enabled by default. ...</div><div class='long'><p>Database open flag: when set, the database is opened with write-ahead\nlogging enabled by default.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a>(String, int, CursorFactory)\n@see <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a>(String, int, CursorFactory, DatabaseErrorHandler)\n@see SQLiteDatabase#enableWriteAheadLogging</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-MODE_MULTI_PROCESS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MODE_MULTI_PROCESS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MODE_MULTI_PROCESS' class='name expandable'>MODE_MULTI_PROCESS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>SharedPreference loading flag: when set, the file on disk will\nbe checked for modification even if the shared prefere...</div><div class='long'><p>SharedPreference loading flag: when set, the file on disk will\nbe checked for modification even if the shared preferences\ninstance is already loaded in this process.  This behavior is\nsometimes desired in cases where the application has multiple\nprocesses, all writing to the same SharedPreferences file.\nGenerally there are better forms of communication between\nprocesses, though.</p>\n\n<p><p>This was the legacy (but undocumented) behavior in and\nbefore Gingerbread (Android 2.3) and this flag is implied when\ntargeting such releases.  For applications targeting SDK\nversions <em>greater than</em> Android 2.3, this flag must be\nexplicitly set if desired.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSharedPreferences\" rel=\"android.content.Context-method-getSharedPreferences\" class=\"docClass\">getSharedPreferences</a></p>\n<p>Defaults to: <code>&quot;4&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>MODE_MULTI_PROCESS does not work reliably in\nsome versions of Android, and furthermore does not provide any\nmechanism for reconciling concurrent modifications across\nprocesses.  Applications should not attempt to use it.  Instead,\nthey should use an explicit cross-process data management\napproach such as <a href=\"#!/api/android.content.ContentProvider\" rel=\"android.content.ContentProvider\" class=\"docClass\">ContentProvider</a>.</p>\n\n        </div>\n</div></div></div><div id='property-MODE_NO_LOCALIZED_COLLATORS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MODE_NO_LOCALIZED_COLLATORS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MODE_NO_LOCALIZED_COLLATORS' class='name expandable'>MODE_NO_LOCALIZED_COLLATORS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Database open flag: when set, the database is opened without support for\nlocalized collators. ...</div><div class='long'><p>Database open flag: when set, the database is opened without support for\nlocalized collators.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a>(String, int, CursorFactory)\n@see <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a>(String, int, CursorFactory, DatabaseErrorHandler)\n@see SQLiteDatabase#NO_LOCALIZED_COLLATORS</p>\n<p>Defaults to: <code>&quot;16&quot;</code></p></div></div></div><div id='property-MODE_PRIVATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MODE_PRIVATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MODE_PRIVATE' class='name expandable'>MODE_PRIVATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>File creation mode: the default mode, where the created file can only\nbe accessed by the calling application (or all ...</div><div class='long'><p>File creation mode: the default mode, where the created file can only\nbe accessed by the calling application (or all applications sharing the\nsame user ID).</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-MODE_WORLD_READABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MODE_WORLD_READABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MODE_WORLD_READABLE' class='name expandable'>MODE_WORLD_READABLE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>File creation mode: allow all other applications to have read access to\nthe created file. ...</div><div class='long'><p>File creation mode: allow all other applications to have read access to\nthe created file.</p>\n\n<p><p>\nStarting from android.os.Build.VERSION_CODES.N, attempting to use this\nmode throws a SecurityException.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Creating world-readable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as <a href=\"#!/api/android.content.ContentProvider\" rel=\"android.content.ContentProvider\" class=\"docClass\">android.content.ContentProvider</a>,\n            <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a>, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.\n@see android.support.v4.content.FileProvider\n@see Intent#FLAG_GRANT_WRITE_URI_PERMISSION</p>\n\n        </div>\n</div></div></div><div id='property-MODE_WORLD_WRITEABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-MODE_WORLD_WRITEABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-MODE_WORLD_WRITEABLE' class='name expandable'>MODE_WORLD_WRITEABLE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>File creation mode: allow all other applications to have write access to\nthe created file. ...</div><div class='long'><p>File creation mode: allow all other applications to have write access to\nthe created file.</p>\n\n<p><p>\nStarting from android.os.Build.VERSION_CODES.N, attempting to use this\nmode will throw a SecurityException.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Creating world-writable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as <a href=\"#!/api/android.content.ContentProvider\" rel=\"android.content.ContentProvider\" class=\"docClass\">android.content.ContentProvider</a>,\n            <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a>, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.\n@see android.support.v4.content.FileProvider\n@see Intent#FLAG_GRANT_WRITE_URI_PERMISSION</p>\n\n        </div>\n</div></div></div><div id='property-NETWORK_POLICY_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-NETWORK_POLICY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-NETWORK_POLICY_SERVICE' class='name expandable'>NETWORK_POLICY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;netpolicy&quot;</code></p></div></div></div><div id='property-NETWORK_STATS_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-NETWORK_STATS_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-NETWORK_STATS_SERVICE' class='name expandable'>NETWORK_STATS_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.app.usage.NetworkStatsManager for querying network usage stats. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.app.usage.NetworkStatsManager for querying network usage stats.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.usage.NetworkStatsManager</p>\n<p>Defaults to: <code>&quot;netstats&quot;</code></p></div></div></div><div id='property-NETWORK_WATCHLIST_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-NETWORK_WATCHLIST_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-NETWORK_WATCHLIST_SERVICE' class='name expandable'>NETWORK_WATCHLIST_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;network_watchlist&quot;</code></p></div></div></div><div id='property-NFC_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-NFC_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-NFC_SERVICE' class='name expandable'>NFC_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.nfc.NfcManager for using NFC. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.nfc.NfcManager for using NFC.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;nfc&quot;</code></p></div></div></div><div id='property-NOTIFICATION_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-NOTIFICATION_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-NOTIFICATION_SERVICE' class='name expandable'>NOTIFICATION_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.NotificationManager for informing the user of\nbackground ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.NotificationManager for informing the user of\nbackground events.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.NotificationManager</p>\n<p>Defaults to: <code>&quot;notification&quot;</code></p></div></div></div><div id='property-NSD_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-NSD_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-NSD_SERVICE' class='name expandable'>NSD_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.net.nsd.NsdManager for handling management of network service...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.net.nsd.NsdManager for handling management of network service\ndiscovery</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.net.nsd.NsdManager</p>\n<p>Defaults to: <code>&quot;servicediscovery&quot;</code></p></div></div></div><div id='property-POWER_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-POWER_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-POWER_SERVICE' class='name expandable'>POWER_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.os.PowerManager for controlling power management,\nincluding \"...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.os.PowerManager for controlling power management,\nincluding \"wake locks,\" which let you keep the device on while\nyou're running long tasks.</p>\n<p>Defaults to: <code>&quot;power&quot;</code></p></div></div></div><div id='property-PRINT_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-PRINT_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-PRINT_SERVICE' class='name expandable'>PRINT_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>android.print.PrintManager for printing and managing\nprinters and print tasks. ...</div><div class='long'><p>android.print.PrintManager for printing and managing\nprinters and print tasks.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.print.PrintManager</p>\n<p>Defaults to: <code>&quot;print&quot;</code></p></div></div></div><div id='property-RECEIVER_VISIBLE_TO_INSTANT_APPS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-RECEIVER_VISIBLE_TO_INSTANT_APPS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-RECEIVER_VISIBLE_TO_INSTANT_APPS' class='name expandable'>RECEIVER_VISIBLE_TO_INSTANT_APPS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for registerReceiver: The receiver can receive broadcasts from Instant Apps. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">registerReceiver</a>: The receiver can receive broadcasts from Instant Apps.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-RESTRICTIONS_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-RESTRICTIONS_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-RESTRICTIONS_SERVICE' class='name expandable'>RESTRICTIONS_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.content.RestrictionsManager for retrieving application restri...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\n<a href=\"#!/api/android.content.RestrictionsManager\" rel=\"android.content.RestrictionsManager\" class=\"docClass\">android.content.RestrictionsManager</a> for retrieving application restrictions\nand requesting permissions for restricted operations.\n@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see <a href=\"#!/api/android.content.RestrictionsManager\" rel=\"android.content.RestrictionsManager\" class=\"docClass\">android.content.RestrictionsManager</a></p>\n<p>Defaults to: <code>&quot;restrictions&quot;</code></p></div></div></div><div id='property-ROLE_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-ROLE_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-ROLE_SERVICE' class='name expandable'>ROLE_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.app.role.RoleManager\nfor managing roles. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.app.role.RoleManager\nfor managing roles.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.role.RoleManager</p>\n<p>Defaults to: <code>&quot;role&quot;</code></p></div></div></div><div id='property-SEARCH_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-SEARCH_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-SEARCH_SERVICE' class='name expandable'>SEARCH_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.app.SearchManager for handling searches. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.app.SearchManager for handling searches.</p>\n\n<p><p>\nConfiguration.UI_MODE_TYPE_WATCH does not support\nandroid.app.SearchManager.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>\n@see android.app.SearchManager</p>\n<p>Defaults to: <code>&quot;search&quot;</code></p></div></div></div><div id='property-SENSOR_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-SENSOR_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-SENSOR_SERVICE' class='name expandable'>SENSOR_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.hardware.SensorManager for accessing sensors. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.hardware.SensorManager for accessing sensors.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.hardware.SensorManager</p>\n<p>Defaults to: <code>&quot;sensor&quot;</code></p></div></div></div><div id='property-SHORTCUT_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-SHORTCUT_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-SHORTCUT_SERVICE' class='name expandable'>SHORTCUT_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.content.pm.ShortcutManager for accessing the launcher shortcu...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.content.pm.ShortcutManager for accessing the launcher shortcut service.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.content.pm.ShortcutManager</p>\n<p>Defaults to: <code>&quot;shortcut&quot;</code></p></div></div></div><div id='property-STORAGE_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-STORAGE_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-STORAGE_SERVICE' class='name expandable'>STORAGE_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.os.storage.StorageManager for accessing system storage\nfuncti...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.os.storage.StorageManager for accessing system storage\nfunctions.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.os.storage.StorageManager</p>\n<p>Defaults to: <code>&quot;storage&quot;</code></p></div></div></div><div id='property-STORAGE_STATS_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-STORAGE_STATS_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-STORAGE_STATS_SERVICE' class='name expandable'>STORAGE_STATS_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.app.usage.StorageStatsManager for accessing system storage\nst...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.app.usage.StorageStatsManager for accessing system storage\nstatistics.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.usage.StorageStatsManager</p>\n<p>Defaults to: <code>&quot;storagestats&quot;</code></p></div></div></div><div id='property-SYSTEM_HEALTH_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-SYSTEM_HEALTH_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-SYSTEM_HEALTH_SERVICE' class='name expandable'>SYSTEM_HEALTH_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.os.health.SystemHealthManager for accessing system health (ba...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.os.health.SystemHealthManager for accessing system health (battery, power,\nmemory, etc) metrics.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;systemhealth&quot;</code></p></div></div></div><div id='property-TELECOM_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-TELECOM_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-TELECOM_SERVICE' class='name expandable'>TELECOM_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.telecom.TelecomManager to manage telecom-related features\nof ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.telecom.TelecomManager to manage telecom-related features\nof the device.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.telecom.TelecomManager</p>\n<p>Defaults to: <code>&quot;telecom&quot;</code></p></div></div></div><div id='property-TELEPHONY_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-TELEPHONY_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-TELEPHONY_SERVICE' class='name expandable'>TELEPHONY_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.telephony.TelephonyManager for handling management the\nteleph...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.telephony.TelephonyManager for handling management the\ntelephony features of the device.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.telephony.TelephonyManager</p>\n<p>Defaults to: <code>&quot;phone&quot;</code></p></div></div></div><div id='property-TELEPHONY_SUBSCRIPTION_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-TELEPHONY_SUBSCRIPTION_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-TELEPHONY_SUBSCRIPTION_SERVICE' class='name expandable'>TELEPHONY_SUBSCRIPTION_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.telephony.SubscriptionManager for handling management the\ntel...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.telephony.SubscriptionManager for handling management the\ntelephony subscriptions of the device.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.telephony.SubscriptionManager</p>\n<p>Defaults to: <code>&quot;telephony_subscription_service&quot;</code></p></div></div></div><div id='property-TEXT_CLASSIFICATION_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-TEXT_CLASSIFICATION_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-TEXT_CLASSIFICATION_SERVICE' class='name expandable'>TEXT_CLASSIFICATION_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nTextClassificationManager for text classification services. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nTextClassificationManager for text classification services.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see TextClassificationManager</p>\n<p>Defaults to: <code>&quot;textclassification&quot;</code></p></div></div></div><div id='property-TEXT_SERVICES_MANAGER_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-TEXT_SERVICES_MANAGER_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-TEXT_SERVICES_MANAGER_SERVICE' class='name expandable'>TEXT_SERVICES_MANAGER_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.view.textservice.TextServicesManager for accessing\ntext servi...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.view.textservice.TextServicesManager for accessing\ntext services.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;textservices&quot;</code></p></div></div></div><div id='property-TV_INPUT_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-TV_INPUT_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-TV_INPUT_SERVICE' class='name expandable'>TV_INPUT_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.media.tv.TvInputManager for interacting with TV inputs\non the...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.media.tv.TvInputManager for interacting with TV inputs\non the device.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.media.tv.TvInputManager</p>\n<p>Defaults to: <code>&quot;tv_input&quot;</code></p></div></div></div><div id='property-UI_MODE_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-UI_MODE_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-UI_MODE_SERVICE' class='name expandable'>UI_MODE_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.app.UiModeManager for controlling UI modes. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.app.UiModeManager for controlling UI modes.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;uimode&quot;</code></p></div></div></div><div id='property-USAGE_STATS_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-USAGE_STATS_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-USAGE_STATS_SERVICE' class='name expandable'>USAGE_STATS_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.app.usage.UsageStatsManager for querying device usage stats. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.app.usage.UsageStatsManager for querying device usage stats.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.app.usage.UsageStatsManager</p>\n<p>Defaults to: <code>&quot;usagestats&quot;</code></p></div></div></div><div id='property-USB_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-USB_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-USB_SERVICE' class='name expandable'>USB_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.hardware.usb.UsbManager for access to USB devices (as a USB h...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.hardware.usb.UsbManager for access to USB devices (as a USB host)\nand for controlling this device's behavior as a USB device.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.hardware.usb.UsbManager</p>\n<p>Defaults to: <code>&quot;usb&quot;</code></p></div></div></div><div id='property-USER_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-USER_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-USER_SERVICE' class='name expandable'>USER_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.os.UserManager for managing users on devices that support mul...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.os.UserManager for managing users on devices that support multiple users.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.os.UserManager</p>\n<p>Defaults to: <code>&quot;user&quot;</code></p></div></div></div><div id='property-VIBRATOR_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-VIBRATOR_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-VIBRATOR_SERVICE' class='name expandable'>VIBRATOR_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.os.Vibrator for interacting with the vibration hardware. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.os.Vibrator for interacting with the vibration hardware.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.os.Vibrator</p>\n<p>Defaults to: <code>&quot;vibrator&quot;</code></p></div></div></div><div id='property-WALLPAPER_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-WALLPAPER_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-WALLPAPER_SERVICE' class='name expandable'>WALLPAPER_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\ncom.android.server.WallpaperService for accessing wallpapers. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\ncom.android.server.WallpaperService for accessing wallpapers.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)</p>\n<p>Defaults to: <code>&quot;wallpaper&quot;</code></p></div></div></div><div id='property-WIFI_AWARE_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-WIFI_AWARE_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-WIFI_AWARE_SERVICE' class='name expandable'>WIFI_AWARE_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.net.wifi.aware.WifiAwareManager for handling management of\nWi...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.net.wifi.aware.WifiAwareManager for handling management of\nWi-Fi Aware.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.net.wifi.aware.WifiAwareManager</p>\n<p>Defaults to: <code>&quot;wifiaware&quot;</code></p></div></div></div><div id='property-WIFI_P2P_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-WIFI_P2P_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-WIFI_P2P_SERVICE' class='name expandable'>WIFI_P2P_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.net.wifi.p2p.WifiP2pManager for handling management of\nWi-Fi ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.net.wifi.p2p.WifiP2pManager for handling management of\nWi-Fi peer-to-peer connections.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.net.wifi.p2p.WifiP2pManager</p>\n<p>Defaults to: <code>&quot;wifip2p&quot;</code></p></div></div></div><div id='property-WIFI_RTT_RANGING_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-WIFI_RTT_RANGING_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-WIFI_RTT_RANGING_SERVICE' class='name expandable'>WIFI_RTT_RANGING_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.net.wifi.rtt.WifiRttManager for ranging devices with wifi. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.net.wifi.rtt.WifiRttManager for ranging devices with wifi.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.net.wifi.rtt.WifiRttManager</p>\n<p>Defaults to: <code>&quot;wifirtt&quot;</code></p></div></div></div><div id='property-WIFI_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-WIFI_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-WIFI_SERVICE' class='name expandable'>WIFI_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a android.net.wifi.WifiManager for handling management of\nWi-Fi access. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a android.net.wifi.WifiManager for handling management of\nWi-Fi access.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.net.wifi.WifiManager</p>\n<p>Defaults to: <code>&quot;wifi&quot;</code></p></div></div></div><div id='property-WINDOW_SERVICE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-property-WINDOW_SERVICE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-property-WINDOW_SERVICE' class='name expandable'>WINDOW_SERVICE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with getSystemService(String) to retrieve a\nandroid.view.WindowManager for accessing the system's window\nmanager. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String) to retrieve a\nandroid.view.WindowManager for accessing the system's window\nmanager.</p>\n\n<p>@see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)\n@see android.view.WindowManager</p>\n<p>Defaults to: <code>&quot;window&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-bindIsolatedService' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-bindIsolatedService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-bindIsolatedService' class='name expandable'>bindIsolatedService</a>( <span class='pre'>service, flags, instanceName, executor, conn, conn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Variation of bindService that, in the specific case of isolated\n services, allows the caller to generate multiple ins...</div><div class='long'><p>Variation of <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a> that, in the specific case of isolated\n services, allows the caller to generate multiple instances of a service\n from a single component declaration.  In other words, you can use this to bind\n to a service that has specified android.R.attr.isolatedProcess and, in\n addition to the existing behavior of running in an isolated process, you can\n also through the arguments here have the system bring up multiple concurrent\n processes hosting their own instances of that service.  The <var>instanceName</var>\n you provide here identifies the different instances, and you can use\n int, int) to tell the system how it\n should manage each of these instances.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>service</span> : Object {Intent}<div class='sub-desc'><p>Identifies the service to connect to.  The Intent must\n      specify an explicit component name.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Operation options for the binding as per <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>.</p>\n</div></li><li><span class='pre'>instanceName</span> : String<div class='sub-desc'><p>Unique identifier for the service instance.  Each unique\n      name here will result in a different service instance being created.  Identifiers\n      must only contain ASCII letters, digits, underscores, and periods.</p>\n</div></li><li><span class='pre'>executor</span> : Object {Executor}<div class='sub-desc'><p>Callbacks on ServiceConnection will be called on executor.\n      Must use same instance for the same instance of ServiceConnection.</p>\n</div></li><li><span class='pre'>conn</span> : Object {ServiceConnection}<div class='sub-desc'><p>Receives information as the service is started and stopped.\n      This must be a valid ServiceConnection object; it must not be null.</p>\n</div></li><li><span class='pre'>conn</span> : Object<div class='sub-desc'><p>Receives information as the service is started and stopped.\n      This must be a valid ServiceConnection object; it must not be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException If the caller does not have permission to access the service</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException If the instanceName is invalid.\n@see <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>\n@see <a href=\"#!/api/android.content.Context-method-updateServiceGroup\" rel=\"android.content.Context-method-updateServiceGroup\" class=\"docClass\">updateServiceGroup</a>\n@see android.R.attr#isolatedProcess</p>\n</div></li></ul></div></div></div><div id='method-bindService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-bindService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-bindService' class='name expandable'>bindService</a>( <span class='pre'>executor</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Same as android.content.ServiceConnection, int) with executor to control\n ServiceConnection callbacks. ...</div><div class='long'><p>Same as android.content.ServiceConnection, int) with executor to control\n ServiceConnection callbacks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>executor</span> : Object {Intent}<div class='sub-desc'><p>Callbacks on ServiceConnection will be called on executor. Must use same\n      instance for the same instance of ServiceConnection.</p>\n</div></li></ul></div></div></div><div id='method-checkCallingOrSelfPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-checkCallingOrSelfPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-checkCallingOrSelfPermission' class='name expandable'>checkCallingOrSelfPermission</a>( <span class='pre'>permission</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine whether the calling process of an IPC or you have been\n granted a particular permission. ...</div><div class='long'><p>Determine whether the calling process of an IPC <em>or you</em> have been\n granted a particular permission.  This is the same as\n <a href=\"#!/api/android.content.Context-method-checkCallingPermission\" rel=\"android.content.Context-method-checkCallingPermission\" class=\"docClass\">checkCallingPermission</a>, except it grants your own permissions\n if you are not currently processing an IPC.  Use with care!</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>The name of the permission being checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>PackageManager.PERMISSION_GRANTED if the calling\n pid/uid is allowed that permission, or\n PackageManager.PERMISSION_DENIED if it is not.\n@see PackageManager#checkPermission(String, String)\n@see #checkPermission\n@see <a href=\"#!/api/android.content.Context-method-checkCallingPermission\" rel=\"android.content.Context-method-checkCallingPermission\" class=\"docClass\">checkCallingPermission</a></p>\n</div></li></ul></div></div></div><div id='method-checkCallingOrSelfUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-checkCallingOrSelfUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-checkCallingOrSelfUriPermission' class='name expandable'>checkCallingOrSelfUriPermission</a>( <span class='pre'>uri, modeFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine whether the calling process of an IPC or you has been granted\n permission to access a specific URI. ...</div><div class='long'><p>Determine whether the calling process of an IPC <em>or you</em> has been granted\n permission to access a specific URI.  This is the same as\n <a href=\"#!/api/android.content.Context-method-checkCallingUriPermission\" rel=\"android.content.Context-method-checkCallingUriPermission\" class=\"docClass\">checkCallingUriPermission</a>, except it grants your own permissions\n if you are not currently processing an IPC.  Use with care!</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The uri that is being checked.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The access modes to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>PackageManager.PERMISSION_GRANTED if the caller\n is allowed to access that uri, or\n PackageManager.PERMISSION_DENIED if it is not.\n@see <a href=\"#!/api/android.content.Context-method-checkCallingUriPermission\" rel=\"android.content.Context-method-checkCallingUriPermission\" class=\"docClass\">checkCallingUriPermission</a></p>\n</div></li></ul></div></div></div><div id='method-checkCallingPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-checkCallingPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-checkCallingPermission' class='name expandable'>checkCallingPermission</a>( <span class='pre'>permission</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine whether the calling process of an IPC you are handling has been\n granted a particular permission. ...</div><div class='long'><p>Determine whether the calling process of an IPC you are handling has been\n granted a particular permission.  This is basically the same as calling\n int, int) with the pid and uid returned\n by android.os.Binder.getCallingPid and\n android.os.Binder.getCallingUid.  One important difference\n is that if you are not currently processing an IPC, this function\n will always fail.  This is done to protect against accidentally\n leaking permissions; you can use <a href=\"#!/api/android.content.Context-method-checkCallingOrSelfPermission\" rel=\"android.content.Context-method-checkCallingOrSelfPermission\" class=\"docClass\">checkCallingOrSelfPermission</a>\n to avoid this protection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>The name of the permission being checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>PackageManager.PERMISSION_GRANTED if the calling\n pid/uid is allowed that permission, or\n PackageManager.PERMISSION_DENIED if it is not.\n@see PackageManager#checkPermission(String, String)\n@see #checkPermission\n@see <a href=\"#!/api/android.content.Context-method-checkCallingOrSelfPermission\" rel=\"android.content.Context-method-checkCallingOrSelfPermission\" class=\"docClass\">checkCallingOrSelfPermission</a></p>\n</div></li></ul></div></div></div><div id='method-checkCallingUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-checkCallingUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-checkCallingUriPermission' class='name expandable'>checkCallingUriPermission</a>( <span class='pre'>uri, modeFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine whether the calling process and user ID has been\n granted permission to access a specific URI. ...</div><div class='long'><p>Determine whether the calling process and user ID has been\n granted permission to access a specific URI.  This is basically\n the same as calling int, int,\n int) with the pid and uid returned by android.os.Binder.getCallingPid and android.os.Binder.getCallingUid.  One important difference is\n that if you are not currently processing an IPC, this function\n will always fail.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The uri that is being checked.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The access modes to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>PackageManager.PERMISSION_GRANTED if the caller\n is allowed to access that uri, or\n PackageManager.PERMISSION_DENIED if it is not.\n@see <a href=\"#!/api/android.content.Context-method-checkUriPermission\" rel=\"android.content.Context-method-checkUriPermission\" class=\"docClass\">checkUriPermission</a>(Uri, int, int, int)</p>\n</div></li></ul></div></div></div><div id='method-checkSelfPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-checkSelfPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-checkSelfPermission' class='name expandable'>checkSelfPermission</a>( <span class='pre'>permission</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine whether you have been granted a particular permission. ...</div><div class='long'><p>Determine whether <em>you</em> have been granted a particular permission.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>The name of the permission being checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>PackageManager.PERMISSION_GRANTED if you have the\n permission, or PackageManager.PERMISSION_DENIED if not.\n@see PackageManager#checkPermission(String, String)\n@see <a href=\"#!/api/android.content.Context-method-checkCallingPermission\" rel=\"android.content.Context-method-checkCallingPermission\" class=\"docClass\">checkCallingPermission</a>(String)</p>\n</div></li></ul></div></div></div><div id='method-checkUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-checkUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-checkUriPermission' class='name expandable'>checkUriPermission</a>( <span class='pre'>uri, readPermission, writePermission, pid, uid, modeFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Check both a Uri and normal permission. ...</div><div class='long'><p>Check both a Uri and normal permission.  This allows you to perform\n both checkPermission and <a href=\"#!/api/android.content.Context-method-checkUriPermission\" rel=\"android.content.Context-method-checkUriPermission\" class=\"docClass\">checkUriPermission</a> in one\n call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The Uri whose permission is to be checked, or null to not\n do this check.</p>\n</div></li><li><span class='pre'>readPermission</span> : String<div class='sub-desc'><p>The permission that provides overall read access,\n or null to not do this check.</p>\n</div></li><li><span class='pre'>writePermission</span> : String<div class='sub-desc'><p>The permission that provides overall write\n access, or null to not do this check.</p>\n</div></li><li><span class='pre'>pid</span> : Number<div class='sub-desc'><p>The process ID being checked against.  Must be &gt; 0.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>The user ID being checked against.  A uid of 0 is the root\n user, which will pass every permission check.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The access modes to check.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>PackageManager.PERMISSION_GRANTED if the caller\n is allowed to access that uri or holds one of the given permissions, or\n PackageManager.PERMISSION_DENIED if it is not.</p>\n</div></li></ul></div></div></div><div id='method-clearWallpaper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-clearWallpaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-clearWallpaper' class='name expandable'>clearWallpaper</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use WallpaperManager.clear() instead.\n <p>This method requires the caller to hold the permission\n android.Manifest.permission.SET_WALLPAPER.</p>\n\n        </div>\n</div></div></div><div id='method-createConfigurationContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-createConfigurationContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-createConfigurationContext' class='name expandable'>createConfigurationContext</a>( <span class='pre'>overrideConfiguration</span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a new Context object for the current Context but whose resources\n are adjusted to match the given Configuration. ...</div><div class='long'><p>Return a new Context object for the current Context but whose resources\n are adjusted to match the given Configuration.  Each call to this method\n returns a new instance of a Context object; Context objects are not\n shared, however common state (ClassLoader, other Resources for the\n same configuration) may be so the Context itself can be fairly lightweight.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>overrideConfiguration</span> : Object {Configuration}<div class='sub-desc'><p>A Configuration specifying what\n values to modify in the base Configuration of the original Context's\n resources.  If the base configuration changes (such as due to an\n orientation change), the resources of this context will also change except\n for those that have been explicitly overridden with a value here.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>A Context with the given configuration override.</p>\n</div></li></ul></div></div></div><div id='method-createContextForSplit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-createContextForSplit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-createContextForSplit' class='name expandable'>createContextForSplit</a>( <span class='pre'>splitName</span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a new Context object for the given split name. ...</div><div class='long'><p>Return a new Context object for the given split name. The new Context has a ClassLoader and\n Resources object that can access the split's and all of its dependencies' code/resources.\n Each call to this method returns a new instance of a Context object;\n Context objects are not shared, however common state (ClassLoader, other Resources for\n the same split) may be so the Context itself can be fairly lightweight.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>splitName</span> : String<div class='sub-desc'><p>The name of the split to include, as declared in the split's\n                  <code>AndroidManifest.xml</code>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>A Context with the given split's code and/or resources loaded.</p>\n</div></li></ul></div></div></div><div id='method-createDeviceProtectedStorageContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-createDeviceProtectedStorageContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-createDeviceProtectedStorageContext' class='name expandable'>createDeviceProtectedStorageContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a new Context object for the current Context but whose storage\n APIs are backed by device-protected storage. ...</div><div class='long'><p>Return a new Context object for the current Context but whose storage\n APIs are backed by device-protected storage.\n <p>\n On devices with direct boot, data stored in this location is encrypted\n with a key tied to the physical device, and it can be accessed\n immediately after the device has booted successfully, both\n <em>before and after</em> the user has authenticated with their\n credentials (such as a lock pattern or PIN).\n <p>\n Because device-protected data is available without user authentication,\n you should carefully limit the data you store using this Context. For\n example, storing sensitive authentication tokens or passwords in the\n device-protected area is strongly discouraged.\n <p>\n If the underlying device does not have the ability to store\n device-protected and credential-protected data using different keys, then\n both storage areas will become available at the same time. They remain as\n two distinct storage locations on disk, and only the window of\n availability changes.\n <p>\n Each call to this method returns a new instance of a Context object;\n Context objects are not shared, however common state (ClassLoader, other\n Resources for the same configuration) may be so the Context itself can be\n fairly lightweight.\n@see <a href=\"#!/api/android.content.Context-method-isDeviceProtectedStorage\" rel=\"android.content.Context-method-isDeviceProtectedStorage\" class=\"docClass\">isDeviceProtectedStorage</a>()</p>\n</div></div></div><div id='method-createDisplayContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-createDisplayContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-createDisplayContext' class='name expandable'>createDisplayContext</a>( <span class='pre'>display</span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a new Context object for the current Context but whose resources\n are adjusted to match the metrics of the giv...</div><div class='long'><p>Return a new Context object for the current Context but whose resources\n are adjusted to match the metrics of the given Display.  Each call to this method\n returns a new instance of a Context object; Context objects are not\n shared, however common state (ClassLoader, other Resources for the\n same configuration) may be so the Context itself can be fairly lightweight.</p>\n\n<p> The returned display Context provides a WindowManager\n (see <a href=\"#!/api/android.content.Context-method-getSystemService\" rel=\"android.content.Context-method-getSystemService\" class=\"docClass\">getSystemService</a>(String)) that is configured to show windows\n on the given display.  The WindowManager's WindowManager.getDefaultDisplay\n method can be used to retrieve the Display from the returned Context.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>display</span> : Object {Display}<div class='sub-desc'><p>A Display object specifying the display\n for whose metrics the Context's resources should be tailored and upon which\n new windows should be shown.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>A Context for the display.</p>\n</div></li></ul></div></div></div><div id='method-createPackageContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-createPackageContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-createPackageContext' class='name expandable'>createPackageContext</a>( <span class='pre'>packageName, flags</span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a new Context object for the given application name. ...</div><div class='long'><p>Return a new Context object for the given application name.  This\n Context is the same as what the named application gets when it is\n launched, containing the same resources and class loader.  Each call to\n this method returns a new instance of a Context object; Context objects\n are not shared, however they share common state (Resources, ClassLoader,\n etc) so the Context instance itself is fairly lightweight.</p>\n\n<p> <p>Throws android.content.pm.PackageManager.NameNotFoundException if there is no\n application with the given package name.</p>\n\n<p> <p>Throws java.lang.SecurityException if the Context requested\n can not be loaded into the caller's process for security reasons (see\n <a href=\"#!/api/android.content.Context-property-CONTEXT_INCLUDE_CODE\" rel=\"android.content.Context-property-CONTEXT_INCLUDE_CODE\" class=\"docClass\">CONTEXT_INCLUDE_CODE</a> for more information}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>Name of the application's package.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Option flags.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>A Context for the application.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException &nbsp;</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>PackageManager.NameNotFoundException if there is no application with\n the given package name.</p>\n</div></li></ul></div></div></div><div id='method-databaseList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-databaseList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-databaseList' class='name expandable'>databaseList</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array of strings naming the private databases associated with\n this Context's application package. ...</div><div class='long'><p>Returns an array of strings naming the private databases associated with\n this Context's application package.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Array of strings naming the private databases.\n@see <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a>\n@see <a href=\"#!/api/android.content.Context-method-deleteDatabase\" rel=\"android.content.Context-method-deleteDatabase\" class=\"docClass\">deleteDatabase</a></p>\n</div></li></ul></div></div></div><div id='method-deleteDatabase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-deleteDatabase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-deleteDatabase' class='name expandable'>deleteDatabase</a>( <span class='pre'>name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Delete an existing private SQLiteDatabase associated with this Context's\n application package. ...</div><div class='long'><p>Delete an existing private SQLiteDatabase associated with this Context's\n application package.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name (unique in the application package) of the\n             database.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the database was successfully deleted; else {@code false}.\n@see <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a></p>\n</div></li></ul></div></div></div><div id='method-deleteFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-deleteFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-deleteFile' class='name expandable'>deleteFile</a>( <span class='pre'>name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Delete the given private file associated with this Context's\n application package. ...</div><div class='long'><p>Delete the given private file associated with this Context's\n application package.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the file to delete; can not contain path\n             separators.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the file was successfully deleted; else\n         {@code false}.\n@see <a href=\"#!/api/android.content.Context-method-openFileInput\" rel=\"android.content.Context-method-openFileInput\" class=\"docClass\">openFileInput</a>\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>\n@see <a href=\"#!/api/android.content.Context-method-fileList\" rel=\"android.content.Context-method-fileList\" class=\"docClass\">fileList</a>\n@see java.io.File#delete()</p>\n</div></li></ul></div></div></div><div id='method-deleteSharedPreferences' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-deleteSharedPreferences' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-deleteSharedPreferences' class='name expandable'>deleteSharedPreferences</a>( <span class='pre'>name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Delete an existing shared preferences file. ...</div><div class='long'><p>Delete an existing shared preferences file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name (unique in the application package) of the shared\n            preferences file.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the shared preferences file was successfully\n         deleted; else {@code false}.\n@see <a href=\"#!/api/android.content.Context-method-getSharedPreferences\" rel=\"android.content.Context-method-getSharedPreferences\" class=\"docClass\">getSharedPreferences</a>(String, int)</p>\n</div></li></ul></div></div></div><div id='method-enforceCallingOrSelfPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-enforceCallingOrSelfPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-enforceCallingOrSelfPermission' class='name expandable'>enforceCallingOrSelfPermission</a>( <span class='pre'>permission, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If neither you nor the calling process of an IPC you are\n handling has been granted a particular permission, throw a\n...</div><div class='long'><p>If neither you nor the calling process of an IPC you are\n handling has been granted a particular permission, throw a\n SecurityException.  This is the same as <a href=\"#!/api/android.content.Context-method-enforceCallingPermission\" rel=\"android.content.Context-method-enforceCallingPermission\" class=\"docClass\">enforceCallingPermission</a>, except it grants your own\n permissions if you are not currently processing an IPC.  Use\n with care!</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>The name of the permission being checked.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>A message to include in the exception if it is thrown.\n@see <a href=\"#!/api/android.content.Context-method-checkCallingOrSelfPermission\" rel=\"android.content.Context-method-checkCallingOrSelfPermission\" class=\"docClass\">checkCallingOrSelfPermission</a>(String)</p>\n</div></li></ul></div></div></div><div id='method-enforceCallingOrSelfUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-enforceCallingOrSelfUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-enforceCallingOrSelfUriPermission' class='name expandable'>enforceCallingOrSelfUriPermission</a>( <span class='pre'>uri, modeFlags, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If the calling process of an IPC or you has not been\n granted permission to access a specific URI, throw SecurityExce...</div><div class='long'><p>If the calling process of an IPC <em>or you</em> has not been\n granted permission to access a specific URI, throw SecurityException.  This is the same as <a href=\"#!/api/android.content.Context-method-enforceCallingUriPermission\" rel=\"android.content.Context-method-enforceCallingUriPermission\" class=\"docClass\">enforceCallingUriPermission</a>, except it grants your own\n permissions if you are not currently processing an IPC.  Use\n with care!</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The uri that is being checked.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The access modes to enforce.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>A message to include in the exception if it is thrown.\n@see <a href=\"#!/api/android.content.Context-method-checkCallingOrSelfUriPermission\" rel=\"android.content.Context-method-checkCallingOrSelfUriPermission\" class=\"docClass\">checkCallingOrSelfUriPermission</a>(Uri, int)</p>\n</div></li></ul></div></div></div><div id='method-enforceCallingPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-enforceCallingPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-enforceCallingPermission' class='name expandable'>enforceCallingPermission</a>( <span class='pre'>permission, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If the calling process of an IPC you are handling has not been\n granted a particular permission, throw a SecurityExce...</div><div class='long'><p>If the calling process of an IPC you are handling has not been\n granted a particular permission, throw a SecurityException.  This is basically the same as calling\n int, int, String) with the\n pid and uid returned by android.os.Binder.getCallingPid\n and android.os.Binder.getCallingUid.  One important\n difference is that if you are not currently processing an IPC,\n this function will always throw the SecurityException.  This is\n done to protect against accidentally leaking permissions; you\n can use <a href=\"#!/api/android.content.Context-method-enforceCallingOrSelfPermission\" rel=\"android.content.Context-method-enforceCallingOrSelfPermission\" class=\"docClass\">enforceCallingOrSelfPermission</a> to avoid this\n protection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>The name of the permission being checked.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>A message to include in the exception if it is thrown.\n@see <a href=\"#!/api/android.content.Context-method-checkCallingPermission\" rel=\"android.content.Context-method-checkCallingPermission\" class=\"docClass\">checkCallingPermission</a>(String)</p>\n</div></li></ul></div></div></div><div id='method-enforceCallingUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-enforceCallingUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-enforceCallingUriPermission' class='name expandable'>enforceCallingUriPermission</a>( <span class='pre'>uri, modeFlags, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If the calling process and user ID has not been granted\n permission to access a specific URI, throw SecurityException. ...</div><div class='long'><p>If the calling process and user ID has not been granted\n permission to access a specific URI, throw SecurityException.  This is basically the same as calling\n int, int, int, String) with\n the pid and uid returned by android.os.Binder.getCallingPid and android.os.Binder.getCallingUid.  One important difference is\n that if you are not currently processing an IPC, this function\n will always throw a SecurityException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The uri that is being checked.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The access modes to enforce.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>A message to include in the exception if it is thrown.\n@see <a href=\"#!/api/android.content.Context-method-checkCallingUriPermission\" rel=\"android.content.Context-method-checkCallingUriPermission\" class=\"docClass\">checkCallingUriPermission</a>(Uri, int)</p>\n</div></li></ul></div></div></div><div id='method-enforcePermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-enforcePermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-enforcePermission' class='name expandable'>enforcePermission</a>( <span class='pre'>permission, pid, uid, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If the given permission is not allowed for a particular process\n and user ID running in the system, throw a SecurityE...</div><div class='long'><p>If the given permission is not allowed for a particular process\n and user ID running in the system, throw a SecurityException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>The name of the permission being checked.</p>\n</div></li><li><span class='pre'>pid</span> : Number<div class='sub-desc'><p>The process ID being checked against.  Must be &gt; 0.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>The user ID being checked against.  A uid of 0 is the root\n user, which will pass every permission check.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>A message to include in the exception if it is thrown.\n@see #checkPermission(String, int, int)</p>\n</div></li></ul></div></div></div><div id='method-enforceUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-enforceUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-enforceUriPermission' class='name expandable'>enforceUriPermission</a>( <span class='pre'>uri, readPermission, writePermission, pid, uid, modeFlags, message</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enforce both a Uri and normal permission. ...</div><div class='long'><p>Enforce both a Uri and normal permission.  This allows you to perform\n both <a href=\"#!/api/android.content.Context-method-enforcePermission\" rel=\"android.content.Context-method-enforcePermission\" class=\"docClass\">enforcePermission</a> and <a href=\"#!/api/android.content.Context-method-enforceUriPermission\" rel=\"android.content.Context-method-enforceUriPermission\" class=\"docClass\">enforceUriPermission</a> in one\n call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The Uri whose permission is to be checked, or null to not\n do this check.</p>\n</div></li><li><span class='pre'>readPermission</span> : String<div class='sub-desc'><p>The permission that provides overall read access,\n or null to not do this check.</p>\n</div></li><li><span class='pre'>writePermission</span> : String<div class='sub-desc'><p>The permission that provides overall write\n access, or null to not do this check.</p>\n</div></li><li><span class='pre'>pid</span> : Number<div class='sub-desc'><p>The process ID being checked against.  Must be &gt; 0.</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>The user ID being checked against.  A uid of 0 is the root\n user, which will pass every permission check.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The access modes to enforce.</p>\n</div></li><li><span class='pre'>message</span> : String<div class='sub-desc'><p>A message to include in the exception if it is thrown.\n@see <a href=\"#!/api/android.content.Context-method-checkUriPermission\" rel=\"android.content.Context-method-checkUriPermission\" class=\"docClass\">checkUriPermission</a>(Uri, String, String, int, int, int)</p>\n</div></li></ul></div></div></div><div id='method-fileList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-fileList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-fileList' class='name expandable'>fileList</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array of strings naming the private files associated with\n this Context's application package. ...</div><div class='long'><p>Returns an array of strings naming the private files associated with\n this Context's application package.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Array of strings naming the private files.\n@see <a href=\"#!/api/android.content.Context-method-openFileInput\" rel=\"android.content.Context-method-openFileInput\" class=\"docClass\">openFileInput</a>\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>\n@see <a href=\"#!/api/android.content.Context-method-deleteFile\" rel=\"android.content.Context-method-deleteFile\" class=\"docClass\">deleteFile</a></p>\n</div></li></ul></div></div></div><div id='method-getApplicationContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getApplicationContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getApplicationContext' class='name expandable'>getApplicationContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the context of the single, global Application object of the\n current process. ...</div><div class='long'><p>Return the context of the single, global Application object of the\n current process.  This generally should only be used if you need a\n Context whose lifecycle is separate from the current context, that is\n tied to the lifetime of the process rather than the current component.</p>\n\n<p> <p>Consider for example how this interacts with\n android.content.IntentFilter):\n <ul>\n <li> <p>If used from an Activity context, the receiver is being registered\n within that activity.  This means that you are expected to unregister\n before the activity is done being destroyed; in fact if you do not do\n so, the framework will clean up your leaked registration as it removes\n the activity and log an error.  Thus, if you use the Activity context\n to register a receiver that is static (global to the process, not\n associated with an Activity instance) then that registration will be\n removed on you at whatever point the activity you used is destroyed.\n <li> <p>If used from the Context returned here, the receiver is being\n registered with the global state associated with your application.  Thus\n it will never be unregistered for you.  This is necessary if the receiver\n is associated with static data, not a particular component.  However\n using the ApplicationContext elsewhere can easily lead to serious leaks\n if you forget to unregister, unbind, etc.\n </p></li></p></li></ul></p>\n</div></div></div><div id='method-getApplicationInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getApplicationInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getApplicationInfo' class='name expandable'>getApplicationInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the full application info for this context's package. ...</div><div class='long'><p>Return the full application info for this context's package.</p>\n</div></div></div><div id='method-getAssets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getAssets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getAssets' class='name expandable'>getAssets</a>( <span class='pre'></span> ) : Object {android.content.res.AssetManager}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an AssetManager instance for the application's package. ...</div><div class='long'><p>Returns an AssetManager instance for the application's package.\n <p>\n <strong>Note:</strong> Implementations of this method should return\n an AssetManager instance that is consistent with the Resources instance\n returned by <a href=\"#!/api/android.content.Context-method-getResources\" rel=\"android.content.Context-method-getResources\" class=\"docClass\">getResources</a>(). For example, they should share the\n same Configuration object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.res.AssetManager}</span><div class='sub-desc'><p>an AssetManager instance for the application's package\n@see <a href=\"#!/api/android.content.Context-method-getResources\" rel=\"android.content.Context-method-getResources\" class=\"docClass\">getResources</a>()</p>\n</div></li></ul></div></div></div><div id='method-getCacheDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getCacheDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getCacheDir' class='name expandable'>getCacheDir</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path to the application specific cache directory on\n the filesystem. ...</div><div class='long'><p>Returns the absolute path to the application specific cache directory on\n the filesystem.\n <p>\n The system will automatically delete files in this directory as disk\n space is needed elsewhere on the device. The system will always delete\n older files first, as reported by File.lastModified(). If\n desired, you can exert more control over how files are deleted using\n boolean) and\n boolean).\n <p>\n Apps are strongly encouraged to keep their usage of cache space below the\n quota returned by\n StorageManager.getCacheQuotaBytes(java.util.UUID). If your app\n goes above this quota, your cached files will be some of the first to be\n deleted when additional disk space is needed. Conversely, if your app\n stays under this quota, your cached files will be some of the last to be\n deleted when additional disk space is needed.\n <p>\n Note that your cache quota will change over time depending on how\n frequently the user interacts with your app, and depending on how much\n system-wide disk space is used.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.\n <p>\n Apps require no extra permissions to read or write to the returned path,\n since this path lives in their private storage.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>The path of the directory holding application cache files.\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>\n@see <a href=\"#!/api/android.content.Context-method-getFileStreamPath\" rel=\"android.content.Context-method-getFileStreamPath\" class=\"docClass\">getFileStreamPath</a>\n@see <a href=\"#!/api/android.content.Context-method-getDir\" rel=\"android.content.Context-method-getDir\" class=\"docClass\">getDir</a>\n@see <a href=\"#!/api/android.content.Context-method-getExternalCacheDir\" rel=\"android.content.Context-method-getExternalCacheDir\" class=\"docClass\">getExternalCacheDir</a></p>\n</div></li></ul></div></div></div><div id='method-getClassLoader' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getClassLoader' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getClassLoader' class='name expandable'>getClassLoader</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a class loader you can use to retrieve classes in this package. ...</div><div class='long'><p>Return a class loader you can use to retrieve classes in this package.</p>\n</div></div></div><div id='method-getCodeCacheDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getCodeCacheDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getCodeCacheDir' class='name expandable'>getCodeCacheDir</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path to the application specific cache directory on\n the filesystem designed for storing cached ...</div><div class='long'><p>Returns the absolute path to the application specific cache directory on\n the filesystem designed for storing cached code.\n <p>\n The system will delete any files stored in this location both when your\n specific application is upgraded, and when the entire platform is\n upgraded.\n <p>\n This location is optimal for storing compiled or optimized code generated\n by your application at runtime.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.\n <p>\n Apps require no extra permissions to read or write to the returned path,\n since this path lives in their private storage.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>The path of the directory holding application code cache files.</p>\n</div></li></ul></div></div></div><div id='method-getColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getColor' class='name expandable'>getColor</a>( <span class='pre'>id</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a color associated with a particular resource ID and styled for\n the current theme. ...</div><div class='long'><p>Returns a color associated with a particular resource ID and styled for\n the current theme.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The desired resource identifier, as generated by the aapt\n           tool. This integer encodes the package, type, and resource\n           entry. The value 0 is an invalid identifier.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A single color value in the form 0xAARRGGBB.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.res.Resources.NotFoundException if the given ID\n         does not exist.</p>\n</div></li></ul></div></div></div><div id='method-getColorStateList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getColorStateList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getColorStateList' class='name expandable'>getColorStateList</a>( <span class='pre'>id</span> ) : Object {android.content.res.ColorStateList}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a color state list associated with a particular resource ID and\n styled for the current theme. ...</div><div class='long'><p>Returns a color state list associated with a particular resource ID and\n styled for the current theme.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The desired resource identifier, as generated by the aapt\n           tool. This integer encodes the package, type, and resource\n           entry. The value 0 is an invalid identifier.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.res.ColorStateList}</span><div class='sub-desc'><p>A color state list.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.res.Resources.NotFoundException if the given ID\n         does not exist.</p>\n</div></li></ul></div></div></div><div id='method-getContentResolver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getContentResolver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getContentResolver' class='name expandable'>getContentResolver</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a ContentResolver instance for your application's package. ...</div><div class='long'><p>Return a ContentResolver instance for your application's package.</p>\n</div></div></div><div id='method-getDataDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getDataDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getDataDir' class='name expandable'>getDataDir</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path to the directory on the filesystem where all\n private files belonging to this app are stored. ...</div><div class='long'><p>Returns the absolute path to the directory on the filesystem where all\n private files belonging to this app are stored. Apps should not use this\n path directly; they should instead use <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>(),\n <a href=\"#!/api/android.content.Context-method-getCacheDir\" rel=\"android.content.Context-method-getCacheDir\" class=\"docClass\">getCacheDir</a>(), int), or other storage\n APIs on this class.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.\n <p>\n No additional permissions are required for the calling app to read or\n write files under the returned path.\n@see ApplicationInfo#dataDir</p>\n</div></div></div><div id='method-getDatabasePath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getDatabasePath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getDatabasePath' class='name expandable'>getDatabasePath</a>( <span class='pre'>name</span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path on the filesystem where a database created with\n openOrCreateDatabase is stored. ...</div><div class='long'><p>Returns the absolute path on the filesystem where a database created with\n <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a> is stored.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the database for which you would like to get\n          its path.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>An absolute path to the given database.\n@see <a href=\"#!/api/android.content.Context-method-openOrCreateDatabase\" rel=\"android.content.Context-method-openOrCreateDatabase\" class=\"docClass\">openOrCreateDatabase</a></p>\n</div></li></ul></div></div></div><div id='method-getDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getDir' class='name expandable'>getDir</a>( <span class='pre'>name, mode</span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve, creating if needed, a new directory in which the application\n can place its own custom data files. ...</div><div class='long'><p>Retrieve, creating if needed, a new directory in which the application\n can place its own custom data files.  You can use the returned File\n object to create and access files in this directory.  Note that files\n created through a File object will only be accessible by your own\n application; you can only set the mode of the entire directory, not\n of individual files.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.\n <p>\n Apps require no extra permissions to read or write to the returned path,\n since this path lives in their private storage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name of the directory to retrieve.  This is a directory\n that is created as part of your application data.</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>Operating mode.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>A File object for the requested directory.  The directory\n will have been created if it does not already exist.\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>(String, int)</p>\n</div></li></ul></div></div></div><div id='method-getDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getDrawable' class='name expandable'>getDrawable</a>( <span class='pre'>id</span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a drawable object associated with a particular resource ID and\n styled for the current theme. ...</div><div class='long'><p>Returns a drawable object associated with a particular resource ID and\n styled for the current theme.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The desired resource identifier, as generated by the aapt\n           tool. This integer encodes the package, type, and resource\n           entry. The value 0 is an invalid identifier.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>An object that can be used to draw this resource.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.res.Resources.NotFoundException if the given ID\n         does not exist.</p>\n</div></li></ul></div></div></div><div id='method-getExternalCacheDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getExternalCacheDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getExternalCacheDir' class='name expandable'>getExternalCacheDir</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns absolute path to application-specific directory on the primary\n shared/external storage device where the appl...</div><div class='long'><p>Returns absolute path to application-specific directory on the primary\n shared/external storage device where the application can place cache\n files it owns. These files are internal to the application, and not\n typically visible to the user as media.\n <p>\n This is like <a href=\"#!/api/android.content.Context-method-getCacheDir\" rel=\"android.content.Context-method-getCacheDir\" class=\"docClass\">getCacheDir</a>() in that these files will be deleted\n when the application is uninstalled, however there are some important\n differences:\n <ul>\n <li>The platform does not always monitor the space available in shared\n storage, and thus may not automatically delete these files. Apps should\n always manage the maximum space used in this location. Currently the only\n time files here will be deleted by the platform is when running on\n android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 or later and\n Environment.isExternalStorageEmulated(File) returns true.\n <li>Shared storage may not always be available, since removable media can\n be ejected by the user. Media state can be checked using\n Environment.getExternalStorageState(File).\n <li>There is no security enforced with these files. For example, any\n application holding\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE can write to\n these files.\n </li></li></li></ul>\n <p>\n If a shared storage device is emulated (as determined by\n Environment.isExternalStorageEmulated(File)), its contents are\n backed by a private user data partition, which means there is little\n benefit to storing data here instead of the private directory returned by\n <a href=\"#!/api/android.content.Context-method-getCacheDir\" rel=\"android.content.Context-method-getCacheDir\" class=\"docClass\">getCacheDir</a>().\n <p>\n Starting in android.os.Build.VERSION_CODES.KITKAT, no permissions\n are required to read or write to the returned path; it's always\n accessible to the calling app. This only applies to paths generated for\n package name of the calling application. To access paths belonging to\n other packages,\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE and/or\n android.Manifest.permission.READ_EXTERNAL_STORAGE are required.\n <p>\n On devices with multiple users (as described by UserManager),\n each user has their own isolated shared storage. Applications only have\n access to the shared storage for the user they're running as.\n <p>\n The returned path may change over time if different shared storage media\n is inserted, so only relative paths should be persisted.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>the absolute path to application-specific directory. May return\n         {@code null} if shared storage is not currently available.\n@see <a href=\"#!/api/android.content.Context-method-getCacheDir\" rel=\"android.content.Context-method-getCacheDir\" class=\"docClass\">getCacheDir</a>\n@see <a href=\"#!/api/android.content.Context-method-getExternalCacheDirs\" rel=\"android.content.Context-method-getExternalCacheDirs\" class=\"docClass\">getExternalCacheDirs</a>()\n@see Environment#getExternalStorageState(File)\n@see Environment#isExternalStorageEmulated(File)\n@see Environment#isExternalStorageRemovable(File)</p>\n</div></li></ul></div></div></div><div id='method-getExternalCacheDirs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getExternalCacheDirs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getExternalCacheDirs' class='name expandable'>getExternalCacheDirs</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the applicat...</div><div class='long'><p>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the application can place cache\n files it owns. These files are internal to the application, and not\n typically visible to the user as media.\n <p>\n This is like <a href=\"#!/api/android.content.Context-method-getCacheDir\" rel=\"android.content.Context-method-getCacheDir\" class=\"docClass\">getCacheDir</a>() in that these files will be deleted\n when the application is uninstalled, however there are some important\n differences:\n <ul>\n <li>The platform does not always monitor the space available in shared\n storage, and thus may not automatically delete these files. Apps should\n always manage the maximum space used in this location. Currently the only\n time files here will be deleted by the platform is when running on\n android.os.Build.VERSION_CODES.JELLY_BEAN_MR1 or later and\n Environment.isExternalStorageEmulated(File) returns true.\n <li>Shared storage may not always be available, since removable media can\n be ejected by the user. Media state can be checked using\n Environment.getExternalStorageState(File).\n <li>There is no security enforced with these files. For example, any\n application holding\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE can write to\n these files.\n </li></li></li></ul>\n <p>\n If a shared storage device is emulated (as determined by\n Environment.isExternalStorageEmulated(File)), it's contents are\n backed by a private user data partition, which means there is little\n benefit to storing data here instead of the private directory returned by\n <a href=\"#!/api/android.content.Context-method-getCacheDir\" rel=\"android.content.Context-method-getCacheDir\" class=\"docClass\">getCacheDir</a>().\n <p>\n Shared storage devices returned here are considered a stable part of the\n device, including physical media slots under a protective cover. The\n returned paths do not include transient devices, such as USB flash drives\n connected to handheld devices.\n <p>\n An application may store data on any or all of the returned devices. For\n example, an app may choose to store large files on the device with the\n most available space, as measured by StatFs.\n <p>\n No additional permissions are required for the calling app to read or\n write files under the returned path. Write access outside of these paths\n on secondary external storage devices is not available.\n <p>\n The returned paths may change over time if different shared storage media\n is inserted, so only relative paths should be persisted.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>the absolute paths to application-specific directories. Some\n         individual paths may be {@code null} if that shared storage is\n         not currently available. The first path returned is the same as\n         getExternalCacheDir().\n@see <a href=\"#!/api/android.content.Context-method-getExternalCacheDir\" rel=\"android.content.Context-method-getExternalCacheDir\" class=\"docClass\">getExternalCacheDir</a>()\n@see Environment#getExternalStorageState(File)\n@see Environment#isExternalStorageEmulated(File)\n@see Environment#isExternalStorageRemovable(File)</p>\n</div></li></ul></div></div></div><div id='method-getExternalFilesDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getExternalFilesDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getExternalFilesDir' class='name expandable'>getExternalFilesDir</a>( <span class='pre'>type</span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path to the directory on the primary shared/external\n storage device where the application can p...</div><div class='long'><p>Returns the absolute path to the directory on the primary shared/external\n storage device where the application can place persistent files it owns.\n These files are internal to the applications, and not typically visible\n to the user as media.\n <p>\n This is like <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>() in that these files will be deleted\n when the application is uninstalled, however there are some important\n differences:\n <ul>\n <li>Shared storage may not always be available, since removable media can\n be ejected by the user. Media state can be checked using\n Environment.getExternalStorageState(File).\n <li>There is no security enforced with these files. For example, any\n application holding\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE can write to\n these files.\n </li></li></ul>\n <p>\n If a shared storage device is emulated (as determined by\n Environment.isExternalStorageEmulated(File)), it's contents are\n backed by a private user data partition, which means there is little\n benefit to storing data here instead of the private directories returned\n by <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>(), etc.\n <p>\n Starting in android.os.Build.VERSION_CODES.KITKAT, no permissions\n are required to read or write to the returned path; it's always\n accessible to the calling app. This only applies to paths generated for\n package name of the calling application. To access paths belonging to\n other packages,\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE and/or\n android.Manifest.permission.READ_EXTERNAL_STORAGE are required.\n <p>\n On devices with multiple users (as described by UserManager),\n each user has their own isolated shared storage. Applications only have\n access to the shared storage for the user they're running as.\n <p>\n The returned path may change over time if different shared storage media\n is inserted, so only relative paths should be persisted.\n <p>\n Here is an example of typical code to manipulate a file in an\n application's shared storage:\n </p>\n {@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java\n private_file}\n <p>\n If you supply a non-null <var>type</var> to this function, the returned\n file will be a path to a sub-directory of the given type. Though these\n files are not automatically scanned by the media scanner, you can\n explicitly add them to the media database with\n String[], String[], android.media.MediaScannerConnection.OnScanCompletedListener)\n MediaScannerConnection.scanFile. Note that this is not the same as\n Environment.getExternalStoragePublicDirectory(), which provides\n directories of media shared by all applications. The directories returned\n here are owned by the application, and their contents will be removed\n when the application is uninstalled. Unlike\n Environment.getExternalStoragePublicDirectory(), the directory returned\n here will be automatically created for you.\n <p>\n Here is an example of typical code to manipulate a picture in an\n application's shared storage and add it to the media database:\n </p>\n {@sample development/samples/ApiDemos/src/com/example/android/apis/content/ExternalStorage.java\n private_picture}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type of files directory to return. May be {@code null}\n            for the root of the files directory or one of the following\n            constants for a subdirectory:\n            android.os.Environment.DIRECTORY_MUSIC,\n            android.os.Environment.DIRECTORY_PODCASTS,\n            android.os.Environment.DIRECTORY_RINGTONES,\n            android.os.Environment.DIRECTORY_ALARMS,\n            android.os.Environment.DIRECTORY_NOTIFICATIONS,\n            android.os.Environment.DIRECTORY_PICTURES, or\n            android.os.Environment.DIRECTORY_MOVIES.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>the absolute path to application-specific directory. May return\n         {@code null} if shared storage is not currently available.\n@see <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>\n@see <a href=\"#!/api/android.content.Context-method-getExternalFilesDirs\" rel=\"android.content.Context-method-getExternalFilesDirs\" class=\"docClass\">getExternalFilesDirs</a>(String)\n@see Environment#getExternalStorageState(File)\n@see Environment#isExternalStorageEmulated(File)\n@see Environment#isExternalStorageRemovable(File)</p>\n</div></li></ul></div></div></div><div id='method-getExternalFilesDirs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getExternalFilesDirs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getExternalFilesDirs' class='name expandable'>getExternalFilesDirs</a>( <span class='pre'>type</span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the applicat...</div><div class='long'><p>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the application can place\n persistent files it owns. These files are internal to the application,\n and not typically visible to the user as media.\n <p>\n This is like <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>() in that these files will be deleted\n when the application is uninstalled, however there are some important\n differences:\n <ul>\n <li>Shared storage may not always be available, since removable media can\n be ejected by the user. Media state can be checked using\n Environment.getExternalStorageState(File).\n <li>There is no security enforced with these files. For example, any\n application holding\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE can write to\n these files.\n </li></li></ul>\n <p>\n If a shared storage device is emulated (as determined by\n Environment.isExternalStorageEmulated(File)), it's contents are\n backed by a private user data partition, which means there is little\n benefit to storing data here instead of the private directories returned\n by <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>(), etc.\n <p>\n Shared storage devices returned here are considered a stable part of the\n device, including physical media slots under a protective cover. The\n returned paths do not include transient devices, such as USB flash drives\n connected to handheld devices.\n <p>\n An application may store data on any or all of the returned devices. For\n example, an app may choose to store large files on the device with the\n most available space, as measured by StatFs.\n <p>\n No additional permissions are required for the calling app to read or\n write files under the returned path. Write access outside of these paths\n on secondary external storage devices is not available.\n <p>\n The returned path may change over time if different shared storage media\n is inserted, so only relative paths should be persisted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The type of files directory to return. May be {@code null}\n            for the root of the files directory or one of the following\n            constants for a subdirectory:\n            android.os.Environment.DIRECTORY_MUSIC,\n            android.os.Environment.DIRECTORY_PODCASTS,\n            android.os.Environment.DIRECTORY_RINGTONES,\n            android.os.Environment.DIRECTORY_ALARMS,\n            android.os.Environment.DIRECTORY_NOTIFICATIONS,\n            android.os.Environment.DIRECTORY_PICTURES, or\n            android.os.Environment.DIRECTORY_MOVIES.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>the absolute paths to application-specific directories. Some\n         individual paths may be {@code null} if that shared storage is\n         not currently available. The first path returned is the same as\n         getExternalFilesDir(String).\n@see <a href=\"#!/api/android.content.Context-method-getExternalFilesDir\" rel=\"android.content.Context-method-getExternalFilesDir\" class=\"docClass\">getExternalFilesDir</a>(String)\n@see Environment#getExternalStorageState(File)\n@see Environment#isExternalStorageEmulated(File)\n@see Environment#isExternalStorageRemovable(File)</p>\n</div></li></ul></div></div></div><div id='method-getExternalMediaDirs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getExternalMediaDirs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getExternalMediaDirs' class='name expandable'>getExternalMediaDirs</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the applicat...</div><div class='long'><p>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the application can place media\n files. These files are scanned and made available to other apps through\n MediaStore.\n <p>\n This is like <a href=\"#!/api/android.content.Context-method-getExternalFilesDirs\" rel=\"android.content.Context-method-getExternalFilesDirs\" class=\"docClass\">getExternalFilesDirs</a> in that these files will be\n deleted when the application is uninstalled, however there are some\n important differences:\n <ul>\n <li>Shared storage may not always be available, since removable media can\n be ejected by the user. Media state can be checked using\n Environment.getExternalStorageState(File).\n <li>There is no security enforced with these files. For example, any\n application holding\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE can write to\n these files.\n </li></li></ul>\n <p>\n Shared storage devices returned here are considered a stable part of the\n device, including physical media slots under a protective cover. The\n returned paths do not include transient devices, such as USB flash drives\n connected to handheld devices.\n <p>\n An application may store data on any or all of the returned devices. For\n example, an app may choose to store large files on the device with the\n most available space, as measured by StatFs.\n <p>\n No additional permissions are required for the calling app to read or\n write files under the returned path. Write access outside of these paths\n on secondary external storage devices is not available.\n <p>\n The returned paths may change over time if different shared storage media\n is inserted, so only relative paths should be persisted.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>the absolute paths to application-specific directories. Some\n         individual paths may be {@code null} if that shared storage is\n         not currently available.\n@see Environment#getExternalStorageState(File)\n@see Environment#isExternalStorageEmulated(File)\n@see Environment#isExternalStorageRemovable(File)</p>\n</div></li></ul></div></div></div><div id='method-getFileStreamPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getFileStreamPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getFileStreamPath' class='name expandable'>getFileStreamPath</a>( <span class='pre'>name</span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path on the filesystem where a file created with\n openFileOutput is stored. ...</div><div class='long'><p>Returns the absolute path on the filesystem where a file created with\n <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a> is stored.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the file for which you would like to get\n          its path.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>An absolute path to the given file.\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>\n@see <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>\n@see <a href=\"#!/api/android.content.Context-method-getDir\" rel=\"android.content.Context-method-getDir\" class=\"docClass\">getDir</a></p>\n</div></li></ul></div></div></div><div id='method-getFilesDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getFilesDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getFilesDir' class='name expandable'>getFilesDir</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path to the directory on the filesystem where files\n created with openFileOutput are stored. ...</div><div class='long'><p>Returns the absolute path to the directory on the filesystem where files\n created with <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a> are stored.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.\n <p>\n No additional permissions are required for the calling app to read or\n write files under the returned path.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>The path of the directory holding application files.\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>\n@see <a href=\"#!/api/android.content.Context-method-getFileStreamPath\" rel=\"android.content.Context-method-getFileStreamPath\" class=\"docClass\">getFileStreamPath</a>\n@see <a href=\"#!/api/android.content.Context-method-getDir\" rel=\"android.content.Context-method-getDir\" class=\"docClass\">getDir</a></p>\n</div></li></ul></div></div></div><div id='method-getMainExecutor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getMainExecutor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getMainExecutor' class='name expandable'>getMainExecutor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return an Executor that will run enqueued tasks on the main\n thread associated with this context. ...</div><div class='long'><p>Return an Executor that will run enqueued tasks on the main\n thread associated with this context. This is the thread used to dispatch\n calls to application components (activities, services, etc).</p>\n</div></div></div><div id='method-getMainLooper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getMainLooper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getMainLooper' class='name expandable'>getMainLooper</a>( <span class='pre'></span> ) : Object {android.os.Looper}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Looper for the main thread of the current process. ...</div><div class='long'><p>Return the Looper for the main thread of the current process.  This is\n the thread used to dispatch calls to application components (activities,\n services, etc).\n <p>\n By definition, this method returns the same result as would be obtained\n by calling Looper.getMainLooper().\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Looper}</span><div class='sub-desc'><p>The main looper.</p>\n</div></li></ul></div></div></div><div id='method-getNextAutofillId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getNextAutofillId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getNextAutofillId' class='name expandable'>getNextAutofillId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the next autofill ID. ...</div><div class='long'><p>Gets the next autofill ID.</p>\n\n<p> <p>All IDs will be smaller or the same as View.LAST_APP_AUTOFILL_ID. All IDs\n returned will be unique.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A ID that is unique in the process</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getNoBackupFilesDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getNoBackupFilesDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getNoBackupFilesDir' class='name expandable'>getNoBackupFilesDir</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path to the directory on the filesystem similar to\n getFilesDir(). ...</div><div class='long'><p>Returns the absolute path to the directory on the filesystem similar to\n <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>(). The difference is that files placed under this\n directory will be excluded from automatic backup to remote storage. See\n BackupAgent for a full discussion\n of the automatic backup mechanism in Android.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.\n <p>\n No additional permissions are required for the calling app to read or\n write files under the returned path.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>The path of the directory holding application files that will not\n         be automatically backed up to remote storage.\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>\n@see <a href=\"#!/api/android.content.Context-method-getFileStreamPath\" rel=\"android.content.Context-method-getFileStreamPath\" class=\"docClass\">getFileStreamPath</a>\n@see <a href=\"#!/api/android.content.Context-method-getDir\" rel=\"android.content.Context-method-getDir\" class=\"docClass\">getDir</a>\n@see android.app.backup.BackupAgent</p>\n</div></li></ul></div></div></div><div id='method-getObbDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getObbDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getObbDir' class='name expandable'>getObbDir</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the primary shared/external storage directory where this\n application's OBB files (if there are any) can be fo...</div><div class='long'><p>Return the primary shared/external storage directory where this\n application's OBB files (if there are any) can be found. Note if the\n application does not have any OBB files, this directory may not exist.\n <p>\n This is like <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>() in that these files will be deleted\n when the application is uninstalled, however there are some important\n differences:\n <ul>\n <li>Shared storage may not always be available, since removable media can\n be ejected by the user. Media state can be checked using\n Environment.getExternalStorageState(File).\n <li>There is no security enforced with these files. For example, any\n application holding\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE can write to\n these files.\n </li></li></ul>\n <p>\n Starting in android.os.Build.VERSION_CODES.KITKAT, no permissions\n are required to read or write to the path that this method returns.\n However, starting from android.os.Build.VERSION_CODES.M,\n to read the OBB expansion files, you must declare the\n android.Manifest.permission.READ_EXTERNAL_STORAGE permission in the app manifest and ask for\n permission at runtime as follows:\n </p>\n <p>\n {@code <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\"\n android:maxSdkVersion=\"23\" />}\n </uses></p>\n <p>\n Starting from android.os.Build.VERSION_CODES.N,\n android.Manifest.permission.READ_EXTERNAL_STORAGE\n permission is not required, so don’t ask for this\n permission at runtime. To handle both cases, your app must first try to read the OBB file,\n and if it fails, you must request\n android.Manifest.permission.READ_EXTERNAL_STORAGE permission at runtime.\n </p></p>\n\n<p> <p>\n The following code snippet shows how to do this:\n </p></p>\n\n<pre> File obb = new File(obb_filename);\n boolean open_failed = false;\n\n try {\n     BufferedReader br = new BufferedReader(new FileReader(obb));\n     open_failed = false;\n     ReadObbFile(br);\n } catch (IOException e) {\n     open_failed = true;\n }\n\n if (open_failed) {\n     // request READ_EXTERNAL_STORAGE permission before reading OBB file\n     ReadObbFileWithPermission();\n }\n </pre>\n\n\n<p> On devices with multiple users (as described by UserManager),\n multiple users may share the same OBB storage location. Applications\n should ensure that multiple instances running under different users don't\n interfere with each other.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>the absolute path to application-specific directory. May return\n         {@code null} if shared storage is not currently available.\n@see <a href=\"#!/api/android.content.Context-method-getObbDirs\" rel=\"android.content.Context-method-getObbDirs\" class=\"docClass\">getObbDirs</a>()\n@see Environment#getExternalStorageState(File)\n@see Environment#isExternalStorageEmulated(File)\n@see Environment#isExternalStorageRemovable(File)</p>\n</div></li></ul></div></div></div><div id='method-getObbDirs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getObbDirs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getObbDirs' class='name expandable'>getObbDirs</a>( <span class='pre'></span> ) : Object {java.io.File}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the applicat...</div><div class='long'><p>Returns absolute paths to application-specific directories on all\n shared/external storage devices where the application's OBB files (if\n there are any) can be found. Note if the application does not have any\n OBB files, these directories may not exist.\n <p>\n This is like <a href=\"#!/api/android.content.Context-method-getFilesDir\" rel=\"android.content.Context-method-getFilesDir\" class=\"docClass\">getFilesDir</a>() in that these files will be deleted\n when the application is uninstalled, however there are some important\n differences:\n <ul>\n <li>Shared storage may not always be available, since removable media can\n be ejected by the user. Media state can be checked using\n Environment.getExternalStorageState(File).\n <li>There is no security enforced with these files. For example, any\n application holding\n android.Manifest.permission.WRITE_EXTERNAL_STORAGE can write to\n these files.\n </li></li></ul>\n <p>\n Shared storage devices returned here are considered a stable part of the\n device, including physical media slots under a protective cover. The\n returned paths do not include transient devices, such as USB flash drives\n connected to handheld devices.\n <p>\n An application may store data on any or all of the returned devices. For\n example, an app may choose to store large files on the device with the\n most available space, as measured by StatFs.\n <p>\n No additional permissions are required for the calling app to read or\n write files under the returned path. Write access outside of these paths\n on secondary external storage devices is not available.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>the absolute paths to application-specific directories. Some\n         individual paths may be {@code null} if that shared storage is\n         not currently available. The first path returned is the same as\n         getObbDir()\n@see <a href=\"#!/api/android.content.Context-method-getObbDir\" rel=\"android.content.Context-method-getObbDir\" class=\"docClass\">getObbDir</a>()\n@see Environment#getExternalStorageState(File)\n@see Environment#isExternalStorageEmulated(File)\n@see Environment#isExternalStorageRemovable(File)</p>\n</div></li></ul></div></div></div><div id='method-getOpPackageName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getOpPackageName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getOpPackageName' class='name expandable'>getOpPackageName</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the package name that should be used for android.app.AppOpsManager calls from\n this context, so that app ops m...</div><div class='long'><p>Return the package name that should be used for android.app.AppOpsManager calls from\n this context, so that app ops manager's uid verification will work with the name.\n <p>\n This is not generally intended for third party application developers.</p>\n</div></div></div><div id='method-getPackageCodePath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getPackageCodePath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getPackageCodePath' class='name expandable'>getPackageCodePath</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the full path to this context's primary Android package. ...</div><div class='long'><p>Return the full path to this context's primary Android package.\n The Android package is a ZIP file which contains application's\n primary code and assets.</p>\n\n<p> <p>Note: this is not generally useful for applications, since they should\n not be directly accessing the file system.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>String Path to the code and assets.</p>\n</div></li></ul></div></div></div><div id='method-getPackageManager' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getPackageManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getPackageManager' class='name expandable'>getPackageManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return PackageManager instance to find global package information. ...</div><div class='long'><p>Return PackageManager instance to find global package information.</p>\n</div></div></div><div id='method-getPackageName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getPackageName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getPackageName' class='name expandable'>getPackageName</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the name of this application's package. ...</div><div class='long'><p>Return the name of this application's package.</p>\n</div></div></div><div id='method-getPackageResourcePath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getPackageResourcePath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getPackageResourcePath' class='name expandable'>getPackageResourcePath</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the full path to this context's primary Android package. ...</div><div class='long'><p>Return the full path to this context's primary Android package.\n The Android package is a ZIP file which contains the application's\n primary resources.</p>\n\n<p> <p>Note: this is not generally useful for applications, since they should\n not be directly accessing the file system.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>String Path to the resources.</p>\n</div></li></ul></div></div></div><div id='method-getResources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getResources' class='name expandable'>getResources</a>( <span class='pre'></span> ) : Object {android.content.res.Resources}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Resources instance for the application's package. ...</div><div class='long'><p>Returns a Resources instance for the application's package.\n <p>\n <strong>Note:</strong> Implementations of this method should return\n a Resources instance that is consistent with the AssetManager instance\n returned by <a href=\"#!/api/android.content.Context-method-getAssets\" rel=\"android.content.Context-method-getAssets\" class=\"docClass\">getAssets</a>(). For example, they should share the\n same Configuration object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.res.Resources}</span><div class='sub-desc'><p>a Resources instance for the application's package\n@see <a href=\"#!/api/android.content.Context-method-getAssets\" rel=\"android.content.Context-method-getAssets\" class=\"docClass\">getAssets</a>()</p>\n</div></li></ul></div></div></div><div id='method-getSharedPreferences' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getSharedPreferences' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getSharedPreferences' class='name expandable'>getSharedPreferences</a>( <span class='pre'>file, mode</span> ) : Object {android.content.SharedPreferences}<span class=\"signature\"><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Retrieve and hold the contents of the preferences file, returning\n a SharedPreferences through which you can retrieve...</div><div class='long'><p>Retrieve and hold the contents of the preferences file, returning\n a SharedPreferences through which you can retrieve and modify its\n values.  Only one instance of the SharedPreferences object is returned\n to any callers for the same name, meaning they will see each other's\n edits as soon as they are made.</p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file</span> : Object {File}<div class='sub-desc'><p>Desired preferences file. If a preferences file by this name\n does not exist, it will be created when you retrieve an\n editor (SharedPreferences.edit()) and then commit changes (Editor.commit()).</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>Operating mode.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.SharedPreferences}</span><div class='sub-desc'><p>The single SharedPreferences instance that can be used\n         to retrieve and modify the preference values.\n@see <a href=\"#!/api/android.content.Context-method-getSharedPreferencesPath\" rel=\"android.content.Context-method-getSharedPreferencesPath\" class=\"docClass\">getSharedPreferencesPath</a>(String)\n@see <a href=\"#!/api/android.content.Context-property-MODE_PRIVATE\" rel=\"android.content.Context-property-MODE_PRIVATE\" class=\"docClass\">MODE_PRIVATE</a></p>\n</div></li></ul></div></div></div><div id='method-getSharedPreferencesPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getSharedPreferencesPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getSharedPreferencesPath' class='name expandable'>getSharedPreferencesPath</a>( <span class='pre'>name</span> ) : Object {java.io.File}<span class=\"signature\"><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Returns the absolute path on the filesystem where a file created with\n int) is stored. ...</div><div class='long'><p>Returns the absolute path on the filesystem where a file created with\n int) is stored.\n <p>\n The returned path may change over time if the calling app is moved to an\n adopted storage device, so only relative paths should be persisted.</p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the shared preferences for which you would like\n            to get a path.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.File}</span><div class='sub-desc'><p>An absolute path to the given file.\n@see <a href=\"#!/api/android.content.Context-method-getSharedPreferences\" rel=\"android.content.Context-method-getSharedPreferences\" class=\"docClass\">getSharedPreferences</a>(String, int)</p>\n</div></li></ul></div></div></div><div id='method-getString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getString' class='name expandable'>getString</a>( <span class='pre'>resId, formatArgs</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a localized formatted string from the application's package's\n default string table, substituting the format ...</div><div class='long'><p>Returns a localized formatted string from the application's package's\n default string table, substituting the format arguments as defined in\n java.util.Formatter and java.lang.String.format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resId</span> : Number<div class='sub-desc'><p>Resource id for the format string</p>\n</div></li><li><span class='pre'>formatArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The format arguments that will be used for\n                   substitution.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The string data associated with the resource, formatted and\n         stripped of styled text information.</p>\n</div></li></ul></div></div></div><div id='method-getSystemService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getSystemService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getSystemService' class='name expandable'>getSystemService</a>( <span class='pre'>serviceClass</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the handle to a system-level service by class. ...</div><div class='long'><p>Return the handle to a system-level service by class.\n <p>\n Currently available classes are:\n android.view.WindowManager, android.view.LayoutInflater,\n android.app.ActivityManager, android.os.PowerManager,\n android.app.AlarmManager, android.app.NotificationManager,\n android.app.KeyguardManager, android.location.LocationManager,\n android.app.SearchManager, android.os.Vibrator,\n android.net.ConnectivityManager,\n android.net.wifi.WifiManager,\n android.media.AudioManager, android.media.MediaRouter,\n android.telephony.TelephonyManager, android.telephony.SubscriptionManager,\n android.view.inputmethod.InputMethodManager,\n android.app.UiModeManager, android.app.DownloadManager,\n android.os.BatteryManager, android.app.job.JobScheduler,\n android.app.usage.NetworkStatsManager.\n </p></p>\n\n<p> <p>\n Note: System services obtained via this API may be closely associated with\n the Context in which they are obtained from.  In general, do not share the\n service objects between various different contexts (Activities, Applications,\n Services, Providers, etc.)\n </p></p>\n\n<p> <p>Note: Instant apps, for which PackageManager.isInstantApp() returns true,\n don't have access to the following system services: <a href=\"#!/api/android.content.Context-property-DEVICE_POLICY_SERVICE\" rel=\"android.content.Context-property-DEVICE_POLICY_SERVICE\" class=\"docClass\">DEVICE_POLICY_SERVICE</a>,\n <a href=\"#!/api/android.content.Context-property-FINGERPRINT_SERVICE\" rel=\"android.content.Context-property-FINGERPRINT_SERVICE\" class=\"docClass\">FINGERPRINT_SERVICE</a>, <a href=\"#!/api/android.content.Context-property-KEYGUARD_SERVICE\" rel=\"android.content.Context-property-KEYGUARD_SERVICE\" class=\"docClass\">KEYGUARD_SERVICE</a>, <a href=\"#!/api/android.content.Context-property-SHORTCUT_SERVICE\" rel=\"android.content.Context-property-SHORTCUT_SERVICE\" class=\"docClass\">SHORTCUT_SERVICE</a>,\n <a href=\"#!/api/android.content.Context-property-USB_SERVICE\" rel=\"android.content.Context-property-USB_SERVICE\" class=\"docClass\">USB_SERVICE</a>, <a href=\"#!/api/android.content.Context-property-WALLPAPER_SERVICE\" rel=\"android.content.Context-property-WALLPAPER_SERVICE\" class=\"docClass\">WALLPAPER_SERVICE</a>, <a href=\"#!/api/android.content.Context-property-WIFI_P2P_SERVICE\" rel=\"android.content.Context-property-WIFI_P2P_SERVICE\" class=\"docClass\">WIFI_P2P_SERVICE</a>,\n <a href=\"#!/api/android.content.Context-property-WIFI_SERVICE\" rel=\"android.content.Context-property-WIFI_SERVICE\" class=\"docClass\">WIFI_SERVICE</a>, <a href=\"#!/api/android.content.Context-property-WIFI_AWARE_SERVICE\" rel=\"android.content.Context-property-WIFI_AWARE_SERVICE\" class=\"docClass\">WIFI_AWARE_SERVICE</a>. For these services this method will\n return {@code null}. Generally, if you are running as an instant app you should always\n check whether the result of this method is {@code null}.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>serviceClass</span> : Object {java.lang.Class}<div class='sub-desc'><p>The class of the desired service.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>The service or {@code null} if the class is not a supported system service. Note:\n <b>never</b> throw a RuntimeException if the name is not supported.</p>\n</div></li></ul></div></div></div><div id='method-getSystemServiceName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getSystemServiceName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getSystemServiceName' class='name expandable'>getSystemServiceName</a>( <span class='pre'>serviceClass</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the name of the system-level service that is represented by the specified class. ...</div><div class='long'><p>Gets the name of the system-level service that is represented by the specified class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>serviceClass</span> : Object {java.lang.Class}<div class='sub-desc'><p>The class of the desired service.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The service name or null if the class is not a supported system service.</p>\n</div></li></ul></div></div></div><div id='method-getText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getText' class='name expandable'>getText</a>( <span class='pre'>resId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a localized, styled CharSequence from the application's package's\n default string table. ...</div><div class='long'><p>Return a localized, styled CharSequence from the application's package's\n default string table.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resId</span> : Number<div class='sub-desc'><p>Resource id for the CharSequence text</p>\n</div></li></ul></div></div></div><div id='method-getTheme' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getTheme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getTheme' class='name expandable'>getTheme</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Theme object associated with this Context. ...</div><div class='long'><p>Return the Theme object associated with this Context.</p>\n</div></div></div><div id='method-getWallpaper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getWallpaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getWallpaper' class='name expandable'>getWallpaper</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use WallpaperManager.get() instead.</p>\n\n        </div>\n</div></div></div><div id='method-getWallpaperDesiredMinimumHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getWallpaperDesiredMinimumHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getWallpaperDesiredMinimumHeight' class='name expandable'>getWallpaperDesiredMinimumHeight</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use WallpaperManager.getDesiredMinimumHeight() instead.</p>\n\n        </div>\n</div></div></div><div id='method-getWallpaperDesiredMinimumWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-getWallpaperDesiredMinimumWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-getWallpaperDesiredMinimumWidth' class='name expandable'>getWallpaperDesiredMinimumWidth</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use WallpaperManager.getDesiredMinimumWidth() instead.</p>\n\n        </div>\n</div></div></div><div id='method-grantUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-grantUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-grantUriPermission' class='name expandable'>grantUriPermission</a>( <span class='pre'>toPackage, uri, modeFlags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Grant permission to access a specific Uri to another package, regardless\n of whether that package has general permiss...</div><div class='long'><p>Grant permission to access a specific Uri to another package, regardless\n of whether that package has general permission to access the Uri's\n content provider.  This can be used to grant specific, temporary\n permissions, typically in response to user interaction (such as the\n user opening an attachment that you would like someone else to\n display).</p>\n\n<p> <p>Normally you should use <a href=\"#!/api/android.content.Intent-property-FLAG_GRANT_READ_URI_PERMISSION\" rel=\"android.content.Intent-property-FLAG_GRANT_READ_URI_PERMISSION\" class=\"docClass\">android.content.Intent.FLAG_GRANT_READ_URI_PERMISSION</a> or\n <a href=\"#!/api/android.content.Intent-property-FLAG_GRANT_WRITE_URI_PERMISSION\" rel=\"android.content.Intent-property-FLAG_GRANT_WRITE_URI_PERMISSION\" class=\"docClass\">android.content.Intent.FLAG_GRANT_WRITE_URI_PERMISSION</a> with the Intent being used to\n start an activity instead of this function directly.  If you use this\n function directly, you should be sure to call\n <a href=\"#!/api/android.content.Context-method-revokeUriPermission\" rel=\"android.content.Context-method-revokeUriPermission\" class=\"docClass\">revokeUriPermission</a> when the target should no longer be allowed\n to access it.</p>\n\n<p> <p>To succeed, the content provider owning the Uri must have set the\n grantUriPermissions attribute in its manifest or included the\n &lt;grant-uri-permissions&gt; tag.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toPackage</span> : String<div class='sub-desc'><p>The package you would like to allow to access the Uri.</p>\n</div></li><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The Uri you would like to grant access to.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The desired access modes.\n@see <a href=\"#!/api/android.content.Context-method-revokeUriPermission\" rel=\"android.content.Context-method-revokeUriPermission\" class=\"docClass\">revokeUriPermission</a></p>\n</div></li></ul></div></div></div><div id='method-isDeviceProtectedStorage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-isDeviceProtectedStorage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-isDeviceProtectedStorage' class='name expandable'>isDeviceProtectedStorage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates if the storage APIs of this Context are backed by\n device-protected storage. ...</div><div class='long'><p>Indicates if the storage APIs of this Context are backed by\n device-protected storage.\n@see <a href=\"#!/api/android.content.Context-method-createDeviceProtectedStorageContext\" rel=\"android.content.Context-method-createDeviceProtectedStorageContext\" class=\"docClass\">createDeviceProtectedStorageContext</a>()</p>\n</div></div></div><div id='method-isRestricted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-isRestricted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-isRestricted' class='name expandable'>isRestricted</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether this Context is restricted. ...</div><div class='long'><p>Indicates whether this Context is restricted.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this Context is restricted, {@code false} otherwise.\n@see <a href=\"#!/api/android.content.Context-property-CONTEXT_RESTRICTED\" rel=\"android.content.Context-property-CONTEXT_RESTRICTED\" class=\"docClass\">CONTEXT_RESTRICTED</a></p>\n</div></li></ul></div></div></div><div id='method-moveDatabaseFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-moveDatabaseFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-moveDatabaseFrom' class='name expandable'>moveDatabaseFrom</a>( <span class='pre'>sourceContext, name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Move an existing database file from the given source storage context to\n this context. ...</div><div class='long'><p>Move an existing database file from the given source storage context to\n this context. This is typically used to migrate data between storage\n locations after an upgrade, such as migrating to device protected\n storage.\n <p>\n The database must be closed before being moved.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sourceContext</span> : Object {Context}<div class='sub-desc'><p>The source context which contains the existing\n            database to move.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the database file.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the move was successful or if the database didn't\n         exist in the source context, otherwise {@code false}.\n@see <a href=\"#!/api/android.content.Context-method-createDeviceProtectedStorageContext\" rel=\"android.content.Context-method-createDeviceProtectedStorageContext\" class=\"docClass\">createDeviceProtectedStorageContext</a>()</p>\n</div></li></ul></div></div></div><div id='method-moveSharedPreferencesFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-moveSharedPreferencesFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-moveSharedPreferencesFrom' class='name expandable'>moveSharedPreferencesFrom</a>( <span class='pre'>sourceContext, name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Move an existing shared preferences file from the given source storage\n context to this context. ...</div><div class='long'><p>Move an existing shared preferences file from the given source storage\n context to this context. This is typically used to migrate data between\n storage locations after an upgrade, such as moving to device protected\n storage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sourceContext</span> : Object {Context}<div class='sub-desc'><p>The source context which contains the existing\n            shared preferences to move.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the shared preferences file.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the move was successful or if the shared\n         preferences didn't exist in the source context, otherwise\n         {@code false}.\n@see <a href=\"#!/api/android.content.Context-method-createDeviceProtectedStorageContext\" rel=\"android.content.Context-method-createDeviceProtectedStorageContext\" class=\"docClass\">createDeviceProtectedStorageContext</a>()</p>\n</div></li></ul></div></div></div><div id='method-obtainStyledAttributes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-obtainStyledAttributes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-obtainStyledAttributes' class='name expandable'>obtainStyledAttributes</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve styled attribute information in this Context's theme. ...</div><div class='long'><p>Retrieve styled attribute information in this Context's theme.  See\n int[], int, int)\n for more information.\n@see android.content.res.Resources.Theme#obtainStyledAttributes(AttributeSet, int[], int, int)</p>\n</div></div></div><div id='method-openFileInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-openFileInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-openFileInput' class='name expandable'>openFileInput</a>( <span class='pre'>name</span> ) : Object {java.io.FileInputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Open a private file associated with this Context's application package\n for reading. ...</div><div class='long'><p>Open a private file associated with this Context's application package\n for reading.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the file to open; can not contain path\n             separators.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.FileInputStream}</span><div class='sub-desc'><p>The resulting FileInputStream.\n@see <a href=\"#!/api/android.content.Context-method-openFileOutput\" rel=\"android.content.Context-method-openFileOutput\" class=\"docClass\">openFileOutput</a>\n@see <a href=\"#!/api/android.content.Context-method-fileList\" rel=\"android.content.Context-method-fileList\" class=\"docClass\">fileList</a>\n@see <a href=\"#!/api/android.content.Context-method-deleteFile\" rel=\"android.content.Context-method-deleteFile\" class=\"docClass\">deleteFile</a>\n@see java.io.FileInputStream#FileInputStream(String)</p>\n</div></li></ul></div></div></div><div id='method-openFileOutput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-openFileOutput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-openFileOutput' class='name expandable'>openFileOutput</a>( <span class='pre'>name, mode</span> ) : Object {java.io.FileOutputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Open a private file associated with this Context's application package\n for writing. ...</div><div class='long'><p>Open a private file associated with this Context's application package\n for writing. Creates the file if it doesn't already exist.\n <p>\n No additional permissions are required for the calling app to read or\n write the returned file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of the file to open; can not contain path\n            separators.</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>Operating mode.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.FileOutputStream}</span><div class='sub-desc'><p>The resulting FileOutputStream.\n@see <a href=\"#!/api/android.content.Context-property-MODE_APPEND\" rel=\"android.content.Context-property-MODE_APPEND\" class=\"docClass\">MODE_APPEND</a>\n@see <a href=\"#!/api/android.content.Context-property-MODE_PRIVATE\" rel=\"android.content.Context-property-MODE_PRIVATE\" class=\"docClass\">MODE_PRIVATE</a>\n@see <a href=\"#!/api/android.content.Context-method-openFileInput\" rel=\"android.content.Context-method-openFileInput\" class=\"docClass\">openFileInput</a>\n@see <a href=\"#!/api/android.content.Context-method-fileList\" rel=\"android.content.Context-method-fileList\" class=\"docClass\">fileList</a>\n@see <a href=\"#!/api/android.content.Context-method-deleteFile\" rel=\"android.content.Context-method-deleteFile\" class=\"docClass\">deleteFile</a>\n@see java.io.FileOutputStream#FileOutputStream(String)</p>\n</div></li></ul></div></div></div><div id='method-openOrCreateDatabase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-openOrCreateDatabase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-openOrCreateDatabase' class='name expandable'>openOrCreateDatabase</a>( <span class='pre'>name, mode, factory, errorHandler</span> ) : Object {android.database.sqlite.SQLiteDatabase}<span class=\"signature\"></span></div><div class='description'><div class='short'>Open a new private SQLiteDatabase associated with this Context's\n application package. ...</div><div class='long'><p>Open a new private SQLiteDatabase associated with this Context's\n application package. Creates the database file if it doesn't exist.\n <p>\n Accepts input param: a concrete instance of DatabaseErrorHandler\n to be used to handle corruption when sqlite reports database corruption.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name (unique in the application package) of the database.</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>Operating mode.</p>\n</div></li><li><span class='pre'>factory</span> : Object {SQLiteDatabase.CursorFactory}<div class='sub-desc'><p>An optional factory class that is called to instantiate a\n            cursor when query is called.</p>\n</div></li><li><span class='pre'>errorHandler</span> : Object {DatabaseErrorHandler}<div class='sub-desc'><p>the DatabaseErrorHandler to be used when\n            sqlite reports database corruption. if null,\n            android.database.DefaultDatabaseErrorHandler is\n            assumed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.database.sqlite.SQLiteDatabase}</span><div class='sub-desc'><p>The contents of a newly created database with the given name.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.database.sqlite.SQLiteException if the database file\n             could not be opened.\n@see <a href=\"#!/api/android.content.Context-property-MODE_PRIVATE\" rel=\"android.content.Context-property-MODE_PRIVATE\" class=\"docClass\">MODE_PRIVATE</a>\n@see <a href=\"#!/api/android.content.Context-property-MODE_ENABLE_WRITE_AHEAD_LOGGING\" rel=\"android.content.Context-property-MODE_ENABLE_WRITE_AHEAD_LOGGING\" class=\"docClass\">MODE_ENABLE_WRITE_AHEAD_LOGGING</a>\n@see <a href=\"#!/api/android.content.Context-property-MODE_NO_LOCALIZED_COLLATORS\" rel=\"android.content.Context-property-MODE_NO_LOCALIZED_COLLATORS\" class=\"docClass\">MODE_NO_LOCALIZED_COLLATORS</a>\n@see <a href=\"#!/api/android.content.Context-method-deleteDatabase\" rel=\"android.content.Context-method-deleteDatabase\" class=\"docClass\">deleteDatabase</a></p>\n</div></li></ul></div></div></div><div id='method-peekWallpaper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-peekWallpaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-peekWallpaper' class='name expandable'>peekWallpaper</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use WallpaperManager.peek() instead.</p>\n\n        </div>\n</div></div></div><div id='method-registerComponentCallbacks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-registerComponentCallbacks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-registerComponentCallbacks' class='name expandable'>registerComponentCallbacks</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a new android.content.ComponentCallbacks to the base application of the\n Context, which will be called at the sam...</div><div class='long'><p>Add a new <a href=\"#!/api/android.content.ComponentCallbacks\" rel=\"android.content.ComponentCallbacks\" class=\"docClass\">android.content.ComponentCallbacks</a> to the base application of the\n Context, which will be called at the same times as the ComponentCallbacks\n methods of activities and other components are called.  Note that you\n <em>must</em> be sure to use <a href=\"#!/api/android.content.Context-method-unregisterComponentCallbacks\" rel=\"android.content.Context-method-unregisterComponentCallbacks\" class=\"docClass\">unregisterComponentCallbacks</a> when\n appropriate in the future; this will not be removed for you.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {ComponentCallbacks}<div class='sub-desc'><p>The interface to call.  This can be either a\n ComponentCallbacks or ComponentCallbacks2 interface.</p>\n</div></li></ul></div></div></div><div id='method-registerReceiver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-registerReceiver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-registerReceiver' class='name expandable'>registerReceiver</a>( <span class='pre'>receiver, filter, broadcastPermission, scheduler, flags</span> ) : Object {android.content.Intent}<span class=\"signature\"></span></div><div class='description'><div class='short'>Register to receive intent broadcasts, to run in the context of\n scheduler. ...</div><div class='long'><p>Register to receive intent broadcasts, to run in the context of\n <var>scheduler</var>. See\n android.content.IntentFilter, int) and\n android.content.IntentFilter, String, Handler)\n for more information.</p>\n\n<p> <p>See <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a> for more information on Intent broadcasts.</p>\n\n<p> <p>As of android.os.Build.VERSION_CODES.ICE_CREAM_SANDWICH, receivers\n registered with this method will correctly respect the\n android.content.Intent.setPackage(String) specified for an Intent being broadcast.\n Prior to that, it would be ignored and delivered to all matching registered\n receivers.  Be careful if using this for security.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>receiver</span> : Object {BroadcastReceiver}<div class='sub-desc'><p>The BroadcastReceiver to handle the broadcast.</p>\n</div></li><li><span class='pre'>filter</span> : Object {IntentFilter}<div class='sub-desc'><p>Selects the Intent broadcasts to be received.</p>\n</div></li><li><span class='pre'>broadcastPermission</span> : String<div class='sub-desc'><p>String naming a permissions that a\n      broadcaster must hold in order to send an Intent to you.  If null,\n      no permission is required.</p>\n</div></li><li><span class='pre'>scheduler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the thread that will receive\n      the Intent.  If null, the main thread of the process will be used.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Additional options for the receiver. May be 0 or\n      <a href=\"#!/api/android.content.Context-property-RECEIVER_VISIBLE_TO_INSTANT_APPS\" rel=\"android.content.Context-property-RECEIVER_VISIBLE_TO_INSTANT_APPS\" class=\"docClass\">RECEIVER_VISIBLE_TO_INSTANT_APPS</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Intent}</span><div class='sub-desc'><p>The first sticky intent found that matches <var>filter</var>,\n         or null if there are none.\n@see <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">registerReceiver</a>(BroadcastReceiver, IntentFilter, int)\n@see <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">registerReceiver</a>(BroadcastReceiver, IntentFilter, String, Handler)\n@see #sendBroadcast\n@see <a href=\"#!/api/android.content.Context-method-unregisterReceiver\" rel=\"android.content.Context-method-unregisterReceiver\" class=\"docClass\">unregisterReceiver</a></p>\n</div></li></ul></div></div></div><div id='method-registerReceiverAsUser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-registerReceiverAsUser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-registerReceiverAsUser' class='name expandable'>registerReceiverAsUser</a>( <span class='pre'>receiver, user, filter, broadcastPermission, scheduler, scheduler</span> ) : Object {android.content.Intent}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>receiver</span> : Object {BroadcastReceiver}<div class='sub-desc'><p>The BroadcastReceiver to handle the broadcast.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>UserHandle to send the intent to.</p>\n</div></li><li><span class='pre'>filter</span> : Object {IntentFilter}<div class='sub-desc'><p>Selects the Intent broadcasts to be received.</p>\n</div></li><li><span class='pre'>broadcastPermission</span> : String<div class='sub-desc'><p>String naming a permissions that a\n      broadcaster must hold in order to send an Intent to you.  If null,\n      no permission is required.</p>\n</div></li><li><span class='pre'>scheduler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the thread that will receive\n      the Intent.  If null, the main thread of the process will be used.</p>\n</div></li><li><span class='pre'>scheduler</span> : Object<div class='sub-desc'><p>Handler identifying the thread that will receive\n      the Intent.  If null, the main thread of the process will be used.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Intent}</span><div class='sub-desc'><p>The first sticky intent found that matches <var>filter</var>,\n         or null if there are none.\n@see <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">registerReceiver</a>(BroadcastReceiver, IntentFilter, String, Handler)\n@see #sendBroadcast\n@see <a href=\"#!/api/android.content.Context-method-unregisterReceiver\" rel=\"android.content.Context-method-unregisterReceiver\" class=\"docClass\">unregisterReceiver</a></p>\n</div></li></ul></div></div></div><div id='method-removeStickyBroadcast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-removeStickyBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-removeStickyBroadcast' class='name expandable'>removeStickyBroadcast</a>( <span class='pre'>intent, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove the data previously sent with sendStickyBroadcast,\n so that it is as if the sticky broadcast had never happened. ...</div><div class='long'><p><p>Remove the data previously sent with <a href=\"#!/api/android.content.Context-method-sendStickyBroadcast\" rel=\"android.content.Context-method-sendStickyBroadcast\" class=\"docClass\">sendStickyBroadcast</a>,\n so that it is as if the sticky broadcast had never happened.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent that was previously broadcast.</p>\n</div></li><li><span class='pre'>intent</span> : Object<div class='sub-desc'><p>The Intent that was previously broadcast.\n@see <a href=\"#!/api/android.content.Context-method-sendStickyBroadcast\" rel=\"android.content.Context-method-sendStickyBroadcast\" class=\"docClass\">sendStickyBroadcast</a></p>\n</div></li></ul></div></div></div><div id='method-removeStickyBroadcastAsUser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-removeStickyBroadcastAsUser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-removeStickyBroadcastAsUser' class='name expandable'>removeStickyBroadcastAsUser</a>( <span class='pre'>intent, user, user</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Version of removeStickyBroadcast(Intent) that allows you to specify the\n user the broadcast will be sent to. ...</div><div class='long'><p><p>Version of <a href=\"#!/api/android.content.Context-method-removeStickyBroadcast\" rel=\"android.content.Context-method-removeStickyBroadcast\" class=\"docClass\">removeStickyBroadcast</a>(Intent) that allows you to specify the\n user the broadcast will be sent to.  This is not available to applications\n that are not pre-installed on the system image.</p>\n\n<p> <p>You must hold the android.Manifest.permission.BROADCAST_STICKY\n permission in order to use this API.  If you do not hold that\n permission, SecurityException will be thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent that was previously broadcast.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>UserHandle to remove the sticky broadcast from.</p>\n</div></li><li><span class='pre'>user</span> : Object<div class='sub-desc'><p>UserHandle to remove the sticky broadcast from.\n@see #sendStickyBroadcastAsUser</p>\n</div></li></ul></div></div></div><div id='method-revokeUriPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-revokeUriPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-revokeUriPermission' class='name expandable'>revokeUriPermission</a>( <span class='pre'>toPackage, uri, modeFlags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove permissions to access a particular content provider Uri\n that were previously added with grantUriPermission fo...</div><div class='long'><p>Remove permissions to access a particular content provider Uri\n that were previously added with <a href=\"#!/api/android.content.Context-method-grantUriPermission\" rel=\"android.content.Context-method-grantUriPermission\" class=\"docClass\">grantUriPermission</a> for a specific target\n package.  The given Uri will match all previously granted Uris that are the same or a\n sub-path of the given Uri.  That is, revoking \"content://foo/target\" will\n revoke both \"content://foo/target\" and \"content://foo/target/sub\", but not\n \"content://foo\".  It will not remove any prefix grants that exist at a\n higher level.</p>\n\n<p> <p>Unlike int), this method will <em>only</em>\n revoke permissions that had been explicitly granted through <a href=\"#!/api/android.content.Context-method-grantUriPermission\" rel=\"android.content.Context-method-grantUriPermission\" class=\"docClass\">grantUriPermission</a>\n and only for the package specified.  Any matching grants that have happened through\n other mechanisms (clipboard, activity launching, service starting, etc) will not be\n removed.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toPackage</span> : String<div class='sub-desc'><p>The package you had previously granted access to.</p>\n</div></li><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The Uri you would like to revoke access to.</p>\n</div></li><li><span class='pre'>modeFlags</span> : Number<div class='sub-desc'><p>The access modes to revoke.\n@see <a href=\"#!/api/android.content.Context-method-grantUriPermission\" rel=\"android.content.Context-method-grantUriPermission\" class=\"docClass\">grantUriPermission</a></p>\n</div></li></ul></div></div></div><div id='method-sendStickyBroadcast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-sendStickyBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-sendStickyBroadcast' class='name expandable'>sendStickyBroadcast</a>( <span class='pre'>intent, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform a sendBroadcast(Intent) that is \"sticky,\" meaning the\n Intent you are sending stays around after the broadcas...</div><div class='long'><p><p>Perform a sendBroadcast(Intent) that is \"sticky,\" meaning the\n Intent you are sending stays around after the broadcast is complete,\n so that others can quickly retrieve that data through the return\n value of android.content.IntentFilter).  In\n all other ways, this behaves the same as\n sendBroadcast(Intent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent to broadcast; all receivers matching this\n Intent will receive the broadcast, and the Intent will be held to\n be re-broadcast to future receivers.</p>\n</div></li><li><span class='pre'>intent</span> : Object<div class='sub-desc'><p>The Intent to broadcast; all receivers matching this\n Intent will receive the broadcast, and the Intent will be held to\n be re-broadcast to future receivers.\n@see #sendBroadcast(Intent)\n@see <a href=\"#!/api/android.content.Context-method-sendStickyOrderedBroadcast\" rel=\"android.content.Context-method-sendStickyOrderedBroadcast\" class=\"docClass\">sendStickyOrderedBroadcast</a>(Intent, BroadcastReceiver, Handler, int, String, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-sendStickyOrderedBroadcast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-sendStickyOrderedBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-sendStickyOrderedBroadcast' class='name expandable'>sendStickyOrderedBroadcast</a>( <span class='pre'>intent, resultReceiver, scheduler, initialCode, initialData, initialExtras, initialExtras</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Version of sendStickyBroadcast that allows you to\n receive data back from the broadcast. ...</div><div class='long'><p><p>Version of <a href=\"#!/api/android.content.Context-method-sendStickyBroadcast\" rel=\"android.content.Context-method-sendStickyBroadcast\" class=\"docClass\">sendStickyBroadcast</a> that allows you to\n receive data back from the broadcast.  This is accomplished by\n supplying your own BroadcastReceiver when calling, which will be\n treated as a final receiver at the end of the broadcast -- its\n <a href=\"#!/api/android.content.BroadcastReceiver-method-onReceive\" rel=\"android.content.BroadcastReceiver-method-onReceive\" class=\"docClass\">android.content.BroadcastReceiver.onReceive</a> method will be called with\n the result values collected from the other receivers.  The broadcast will\n be serialized in the same way as calling\n String).</p>\n\n<p> <p>Like sendBroadcast(Intent), this method is\n asynchronous; it will return before\n resultReceiver.onReceive() is called.  Note that the sticky data\n stored is only the data you initially supply to the broadcast, not\n the result of any changes made by the receivers.</p>\n\n<p> <p>See <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a> for more information on Intent broadcasts.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent to broadcast; all receivers matching this\n               Intent will receive the broadcast.</p>\n</div></li><li><span class='pre'>resultReceiver</span> : Object {BroadcastReceiver}<div class='sub-desc'><p>Your own BroadcastReceiver to treat as the final\n                       receiver of the broadcast.</p>\n</div></li><li><span class='pre'>scheduler</span> : Object {Handler}<div class='sub-desc'><p>A custom Handler with which to schedule the\n                  resultReceiver callback; if null it will be\n                  scheduled in the Context's main thread.</p>\n</div></li><li><span class='pre'>initialCode</span> : Number<div class='sub-desc'><p>An initial value for the result code.  Often\n                    Activity.RESULT_OK.</p>\n</div></li><li><span class='pre'>initialData</span> : String<div class='sub-desc'><p>An initial value for the result data.  Often\n                    null.</p>\n</div></li><li><span class='pre'>initialExtras</span> : Object {Bundle}<div class='sub-desc'><p>An initial value for the result extras.  Often\n                      null.</p>\n</div></li><li><span class='pre'>initialExtras</span> : Object<div class='sub-desc'><p>An initial value for the result extras.  Often\n                      null.\n@see #sendBroadcast(Intent)\n@see #sendBroadcast(Intent, String)\n@see #sendOrderedBroadcast(Intent, String)\n@see <a href=\"#!/api/android.content.Context-method-sendStickyBroadcast\" rel=\"android.content.Context-method-sendStickyBroadcast\" class=\"docClass\">sendStickyBroadcast</a>(Intent)\n@see <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a>\n@see <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">registerReceiver</a>\n@see android.app.Activity#RESULT_OK</p>\n</div></li></ul></div></div></div><div id='method-sendStickyOrderedBroadcastAsUser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-sendStickyOrderedBroadcastAsUser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-sendStickyOrderedBroadcastAsUser' class='name expandable'>sendStickyOrderedBroadcastAsUser</a>( <span class='pre'>intent, user, resultReceiver, scheduler, initialCode, initialData, initialExtras, initialExtras</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Version of\n android.content.BroadcastReceiver, Handler, int, String, Bundle)\n that allows you to specify the\n user th...</div><div class='long'><p><p>Version of\n android.content.BroadcastReceiver, Handler, int, String, Bundle)\n that allows you to specify the\n user the broadcast will be sent to.  This is not available to applications\n that are not pre-installed on the system image.</p>\n\n<p> <p>See <a href=\"#!/api/android.content.BroadcastReceiver\" rel=\"android.content.BroadcastReceiver\" class=\"docClass\">android.content.BroadcastReceiver</a> for more information on Intent broadcasts.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent to broadcast; all receivers matching this\n               Intent will receive the broadcast.</p>\n</div></li><li><span class='pre'>user</span> : Object {UserHandle}<div class='sub-desc'><p>UserHandle to send the intent to.</p>\n</div></li><li><span class='pre'>resultReceiver</span> : Object {BroadcastReceiver}<div class='sub-desc'><p>Your own BroadcastReceiver to treat as the final\n                       receiver of the broadcast.</p>\n</div></li><li><span class='pre'>scheduler</span> : Object {Handler}<div class='sub-desc'><p>A custom Handler with which to schedule the\n                  resultReceiver callback; if null it will be\n                  scheduled in the Context's main thread.</p>\n</div></li><li><span class='pre'>initialCode</span> : Number<div class='sub-desc'><p>An initial value for the result code.  Often\n                    Activity.RESULT_OK.</p>\n</div></li><li><span class='pre'>initialData</span> : String<div class='sub-desc'><p>An initial value for the result data.  Often\n                    null.</p>\n</div></li><li><span class='pre'>initialExtras</span> : Object {Bundle}<div class='sub-desc'><p>An initial value for the result extras.  Often\n                      null.</p>\n</div></li><li><span class='pre'>initialExtras</span> : Object<div class='sub-desc'><p>An initial value for the result extras.  Often\n                      null.\n@see <a href=\"#!/api/android.content.Context-method-sendStickyOrderedBroadcast\" rel=\"android.content.Context-method-sendStickyOrderedBroadcast\" class=\"docClass\">sendStickyOrderedBroadcast</a>(Intent, BroadcastReceiver, Handler, int, String, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-setTheme' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-setTheme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-setTheme' class='name expandable'>setTheme</a>( <span class='pre'>resid</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the base theme for this context. ...</div><div class='long'><p>Set the base theme for this context.  Note that this should be called\n before any views are instantiated in the Context (for example before\n calling android.app.Activity.setContentView or\n android.view.LayoutInflater.inflate).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resid</span> : Number<div class='sub-desc'><p>The style resource describing the theme.</p>\n</div></li></ul></div></div></div><div id='method-setWallpaper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-setWallpaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-setWallpaper' class='name expandable'>setWallpaper</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use WallpaperManager.set() instead.\n <p>This method requires the caller to hold the permission\n android.Manifest.permission.SET_WALLPAPER.</p>\n\n        </div>\n</div></div></div><div id='method-startActivities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-startActivities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-startActivities' class='name expandable'>startActivities</a>( <span class='pre'>intents, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Launch multiple new activities. ...</div><div class='long'><p>Launch multiple new activities.  This is generally the same as calling\n <a href=\"#!/api/android.content.Context-method-startActivity\" rel=\"android.content.Context-method-startActivity\" class=\"docClass\">startActivity</a>(Intent) for the first Intent in the array,\n that activity during its creation calling <a href=\"#!/api/android.content.Context-method-startActivity\" rel=\"android.content.Context-method-startActivity\" class=\"docClass\">startActivity</a>(Intent)\n for the second entry, etc.  Note that unlike that approach, generally\n none of the activities except the last in the array will be created\n at this point, but rather will be created when the user first visits\n them (due to pressing back from the activity on top).</p>\n\n<p> <p>This method throws <a href=\"#!/api/android.content.ActivityNotFoundException\" rel=\"android.content.ActivityNotFoundException\" class=\"docClass\">android.content.ActivityNotFoundException</a>\n if there was no Activity found for <em>any</em> given Intent.  In this\n case the state of the activity stack is undefined (some Intents in the\n list may be on it, some not), so you probably want to avoid such situations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intents</span> : Object {android.content.Intent[]}<div class='sub-desc'><p>An array of Intents to be started.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ActivityNotFoundException &nbsp;\n@see <a href=\"#!/api/android.content.Context-method-startActivities\" rel=\"android.content.Context-method-startActivities\" class=\"docClass\">startActivities</a>(Intent[])\n@see PackageManager#resolveActivity</p>\n</div></li></ul></div></div></div><div id='method-startActivitiesAsUser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-startActivitiesAsUser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-startActivitiesAsUser' class='name expandable'>startActivitiesAsUser</a>( <span class='pre'>intents, options, userHandle, userHandle</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intents</span> : Object {android.content.Intent[]}<div class='sub-desc'><p>An array of Intents to be started.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.</p>\n</div></li><li><span class='pre'>userHandle</span> : Object {UserHandle}<div class='sub-desc'><p>The user for whom to launch the activities\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li><li><span class='pre'>userHandle</span> : Object<div class='sub-desc'><p>The user for whom to launch the activities\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The corresponding flag ActivityManager.START_CANCELED,\n         ActivityManager.START_SUCCESS etc. indicating whether the launch was\n         successful.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ActivityNotFoundException &nbsp;\n@see <a href=\"#!/api/android.content.Context-method-startActivities\" rel=\"android.content.Context-method-startActivities\" class=\"docClass\">startActivities</a>(Intent[])\n@see PackageManager#resolveActivity</p>\n</div></li></ul></div></div></div><div id='method-startActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-startActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-startActivity' class='name expandable'>startActivity</a>( <span class='pre'>intent, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Launch a new activity. ...</div><div class='long'><p>Launch a new activity.  You will not receive any information about when\n the activity exits.</p>\n\n<p> <p>Note that if this method is being called from outside of an\n android.app.Activity Context, then the Intent must include\n the <a href=\"#!/api/android.content.Intent-property-FLAG_ACTIVITY_NEW_TASK\" rel=\"android.content.Intent-property-FLAG_ACTIVITY_NEW_TASK\" class=\"docClass\">android.content.Intent.FLAG_ACTIVITY_NEW_TASK</a> launch flag.  This is because,\n without being started from an existing Activity, there is no existing\n task in which to place the new activity and thus it needs to be placed\n in its own separate task.</p>\n\n<p> <p>This method throws <a href=\"#!/api/android.content.ActivityNotFoundException\" rel=\"android.content.ActivityNotFoundException\" class=\"docClass\">android.content.ActivityNotFoundException</a>\n if there was no Activity found to run the given Intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The description of the activity to start.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n May be null if there are no options.  See android.app.ActivityOptions\n for how to build the Bundle supplied here; there are no supported definitions\n for building it manually.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ActivityNotFoundException &nbsp;\n@see <a href=\"#!/api/android.content.Context-method-startActivity\" rel=\"android.content.Context-method-startActivity\" class=\"docClass\">startActivity</a>(Intent)\n@see PackageManager#resolveActivity</p>\n</div></li></ul></div></div></div><div id='method-startForegroundService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-startForegroundService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-startForegroundService' class='name expandable'>startForegroundService</a>( <span class='pre'>service</span> ) : Object {android.content.ComponentName}<span class=\"signature\"></span></div><div class='description'><div class='short'>Similar to startService(Intent), but with an implicit promise that the\n Service will call android.app.Notification)\n ...</div><div class='long'><p>Similar to <a href=\"#!/api/android.content.Context-method-startService\" rel=\"android.content.Context-method-startService\" class=\"docClass\">startService</a>(Intent), but with an implicit promise that the\n Service will call android.app.Notification)\n startForeground(int, android.app.Notification) once it begins running.  The service is given\n an amount of time comparable to the ANR interval to do this, otherwise the system\n will automatically stop the service and declare the app ANR.</p>\n\n<p> <p>Unlike the ordinary <a href=\"#!/api/android.content.Context-method-startService\" rel=\"android.content.Context-method-startService\" class=\"docClass\">startService</a>(Intent), this method can be used\n at any time, regardless of whether the app hosting the service is in a foreground\n state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>service</span> : Object {Intent}<div class='sub-desc'><p>Identifies the service to be started.  The Intent must be\n      fully explicit (supplying a component name).  Additional values\n      may be included in the Intent extras to supply arguments along with\n      this specific start call.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.ComponentName}</span><div class='sub-desc'><p>If the service is being started or is already running, the\n ComponentName of the actual service that was started is\n returned; else if the service does not exist null is returned.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException If the caller does not have permission to access the service\n or the service can not be found.\n@see <a href=\"#!/api/android.content.Context-method-stopService\" rel=\"android.content.Context-method-stopService\" class=\"docClass\">stopService</a>\n@see android.app.Service#startForeground(int, android.app.Notification)</p>\n</div></li></ul></div></div></div><div id='method-startInstrumentation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-startInstrumentation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-startInstrumentation' class='name expandable'>startInstrumentation</a>( <span class='pre'>className, profileFile, arguments</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Start executing an android.app.Instrumentation class. ...</div><div class='long'><p>Start executing an android.app.Instrumentation class.  The given\n Instrumentation component will be run by killing its target application\n (if currently running), starting the target process, instantiating the\n instrumentation component, and then letting it drive the application.</p>\n\n<p> <p>This function is not synchronous -- it returns as soon as the\n instrumentation has started and while it is running.</p>\n\n<p> <p>Instrumentation is normally only allowed to run against a package\n that is either unsigned or signed with a signature that the\n the instrumentation package is also signed with (ensuring the target\n trusts the instrumentation).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : Object {ComponentName}<div class='sub-desc'><p>Name of the Instrumentation component to be run.</p>\n</div></li><li><span class='pre'>profileFile</span> : String<div class='sub-desc'><p>Optional path to write profiling data as the\n instrumentation runs, or null for no profiling.</p>\n</div></li><li><span class='pre'>arguments</span> : Object {Bundle}<div class='sub-desc'><p>Additional optional arguments to pass to the\n instrumentation, or null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the instrumentation was successfully started,\n else {@code false} if it could not be found.</p>\n</div></li></ul></div></div></div><div id='method-startIntentSender' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-startIntentSender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-startIntentSender' class='name expandable'>startIntentSender</a>( <span class='pre'>intent, fillInIntent, flagsMask, flagsValues, extraFlags, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like Bundle), but taking a IntentSender\n to start. ...</div><div class='long'><p>Like Bundle), but taking a IntentSender\n to start.  If the IntentSender is for an activity, that activity will be started\n as if you had called the regular <a href=\"#!/api/android.content.Context-method-startActivity\" rel=\"android.content.Context-method-startActivity\" class=\"docClass\">startActivity</a>(Intent)\n here; otherwise, its associated action will be executed (such as\n sending a broadcast) as if you had called\n android.content.IntentSender.sendandroid.content.Intent on it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {IntentSender}<div class='sub-desc'><p>The IntentSender to launch.</p>\n</div></li><li><span class='pre'>fillInIntent</span> : Object {Intent}<div class='sub-desc'><p>If non-null, this will be provided as the\n intent parameter to IntentSender.sendIntent.</p>\n</div></li><li><span class='pre'>flagsMask</span> : Number<div class='sub-desc'><p>Intent flags in the original IntentSender that you\n would like to change.</p>\n</div></li><li><span class='pre'>flagsValues</span> : Number<div class='sub-desc'><p>Desired values for any bits set in\n <var>flagsMask</var></p>\n</div></li><li><span class='pre'>extraFlags</span> : Number<div class='sub-desc'><p>Always set to 0.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.  If options\n have also been supplied by the IntentSender, options given here will\n override any that conflict with those given by the IntentSender.\n@see <a href=\"#!/api/android.content.Context-method-startActivity\" rel=\"android.content.Context-method-startActivity\" class=\"docClass\">startActivity</a>(Intent, Bundle)\n@see <a href=\"#!/api/android.content.Context-method-startIntentSender\" rel=\"android.content.Context-method-startIntentSender\" class=\"docClass\">startIntentSender</a>(IntentSender, Intent, int, int, int)</p>\n</div></li></ul></div></div></div><div id='method-startService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-startService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-startService' class='name expandable'>startService</a>( <span class='pre'>service</span> ) : Object {android.content.ComponentName}<span class=\"signature\"></span></div><div class='description'><div class='short'>Request that a given application service be started. ...</div><div class='long'><p>Request that a given application service be started.  The Intent\n should either contain the complete class name of a specific service\n implementation to start, or a specific package name to target.  If the\n Intent is less specified, it logs a warning about this.  In this case any of the\n multiple matching services may be used.  If this service\n is not already running, it will be instantiated and started (creating a\n process for it if needed); if it is running then it remains running.</p>\n\n<p> <p>Every call to this method will result in a corresponding call to\n the target service's android.app.Service.onStartCommand method,\n with the <var>intent</var> given here.  This provides a convenient way\n to submit jobs to a service without having to bind and call on to its\n interface.</p>\n\n<p> <p>Using startService() overrides the default service lifetime that is\n managed by <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a>: it requires the service to remain\n running until <a href=\"#!/api/android.content.Context-method-stopService\" rel=\"android.content.Context-method-stopService\" class=\"docClass\">stopService</a> is called, regardless of whether\n any clients are connected to it.  Note that calls to startService()\n do not nest: no matter how many times you call startService(),\n a single call to <a href=\"#!/api/android.content.Context-method-stopService\" rel=\"android.content.Context-method-stopService\" class=\"docClass\">stopService</a> will stop it.</p>\n\n<p> <p>The system attempts to keep running services around as much as\n possible.  The only time they should be stopped is if the current\n foreground application is using so many resources that the service needs\n to be killed.  If any errors happen in the service's process, it will\n automatically be restarted.</p>\n\n<p> <p>This function will throw SecurityException if you do not\n have permission to start the given service.</p>\n\n<p> <p class=\"note\"><strong>Note:</strong> Each call to startService()\n results in significant work done by the system to manage service\n lifecycle surrounding the processing of the intent, which can take\n multiple milliseconds of CPU time. Due to this cost, startService()\n should not be used for frequent intent delivery to a service, and only\n for scheduling significant work. Use <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bound services</a>\n for high frequency calls.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>service</span> : Object {Intent}<div class='sub-desc'><p>Identifies the service to be started.  The Intent must be\n      fully explicit (supplying a component name).  Additional values\n      may be included in the Intent extras to supply arguments along with\n      this specific start call.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.ComponentName}</span><div class='sub-desc'><p>If the service is being started or is already running, the\n ComponentName of the actual service that was started is\n returned; else if the service does not exist null is returned.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException If the caller does not have permission to access the service\n or the service can not be found.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If the application is in a state where the service\n can not be started (such as not in the foreground in a state when services are allowed).\n@see <a href=\"#!/api/android.content.Context-method-stopService\" rel=\"android.content.Context-method-stopService\" class=\"docClass\">stopService</a>\n@see <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a></p>\n</div></li></ul></div></div></div><div id='method-stopService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-stopService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-stopService' class='name expandable'>stopService</a>( <span class='pre'>service</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Request that a given application service be stopped. ...</div><div class='long'><p>Request that a given application service be stopped.  If the service is\n not running, nothing happens.  Otherwise it is stopped.  Note that calls\n to startService() are not counted -- this stops the service no matter\n how many times it was started.</p>\n\n<p> <p>Note that if a stopped service still has <a href=\"#!/api/android.content.ServiceConnection\" rel=\"android.content.ServiceConnection\" class=\"docClass\">android.content.ServiceConnection</a>\n objects bound to it with the <a href=\"#!/api/android.content.Context-property-BIND_AUTO_CREATE\" rel=\"android.content.Context-property-BIND_AUTO_CREATE\" class=\"docClass\">BIND_AUTO_CREATE</a> set, it will\n not be destroyed until all of these bindings are removed.  See\n the android.app.Service documentation for more details on a\n service's lifecycle.</p>\n\n<p> <p>This function will throw SecurityException if you do not\n have permission to stop the given service.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>service</span> : Object {Intent}<div class='sub-desc'><p>Description of the service to be stopped.  The Intent must be either\n      fully explicit (supplying a component name) or specify a specific package\n      name it is targeted to.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If there is a service matching the given Intent that is already\n running, then it is stopped and {@code true} is returned; else {@code false} is returned.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException If the caller does not have permission to access the service\n or the service can not be found.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If the application is in a state where the service\n can not be started (such as not in the foreground in a state when services are allowed).\n@see <a href=\"#!/api/android.content.Context-method-startService\" rel=\"android.content.Context-method-startService\" class=\"docClass\">startService</a></p>\n</div></li></ul></div></div></div><div id='method-unbindService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-unbindService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-unbindService' class='name expandable'>unbindService</a>( <span class='pre'>conn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Disconnect from an application service. ...</div><div class='long'><p>Disconnect from an application service.  You will no longer receive\n calls as the service is restarted, and the service is now allowed to\n stop at any time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>conn</span> : Object {ServiceConnection}<div class='sub-desc'><p>The connection interface previously supplied to\n             bindService().  This parameter must not be null.\n@see <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a></p>\n</div></li></ul></div></div></div><div id='method-unregisterComponentCallbacks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-unregisterComponentCallbacks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-unregisterComponentCallbacks' class='name expandable'>unregisterComponentCallbacks</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove a android.content.ComponentCallbacks object that was previously registered\n with registerComponentCallbacks(Co...</div><div class='long'><p>Remove a <a href=\"#!/api/android.content.ComponentCallbacks\" rel=\"android.content.ComponentCallbacks\" class=\"docClass\">android.content.ComponentCallbacks</a> object that was previously registered\n with <a href=\"#!/api/android.content.Context-method-registerComponentCallbacks\" rel=\"android.content.Context-method-registerComponentCallbacks\" class=\"docClass\">registerComponentCallbacks</a>(ComponentCallbacks).</p>\n</div></div></div><div id='method-unregisterReceiver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-unregisterReceiver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-unregisterReceiver' class='name expandable'>unregisterReceiver</a>( <span class='pre'>receiver</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregister a previously registered BroadcastReceiver. ...</div><div class='long'><p>Unregister a previously registered BroadcastReceiver.  <em>All</em>\n filters that have been registered for this BroadcastReceiver will be\n removed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>receiver</span> : Object {BroadcastReceiver}<div class='sub-desc'><p>The BroadcastReceiver to unregister.\n@see <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">registerReceiver</a></p>\n</div></li></ul></div></div></div><div id='method-updateServiceGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Context'>android.content.Context</span><br/><a href='source/Context.html#android-content-Context-method-updateServiceGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Context-method-updateServiceGroup' class='name expandable'>updateServiceGroup</a>( <span class='pre'>conn, group, importance</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>For a service previously bound with bindService or a related method, change\n how the system manages that service's pr...</div><div class='long'><p>For a service previously bound with <a href=\"#!/api/android.content.Context-method-bindService\" rel=\"android.content.Context-method-bindService\" class=\"docClass\">bindService</a> or a related method, change\n how the system manages that service's process in relation to other processes.  This\n doesn't modify the original bind flags that were passed in when binding, but adjusts\n how the process will be managed in some cases based on those flags.  Currently only\n works on isolated processes (will be ignored for non-isolated processes).</p>\n\n<p> <p>Note that this call does not take immediate effect, but will be applied the next\n time the impacted process is adjusted for some other reason.  Typically you would\n call this before then calling a new <a href=\"#!/api/android.content.Context-method-bindIsolatedService\" rel=\"android.content.Context-method-bindIsolatedService\" class=\"docClass\">bindIsolatedService</a> on the service\n of interest, with that binding causing the process to be shuffled accordingly.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>conn</span> : Object {ServiceConnection}<div class='sub-desc'><p>The connection interface previously supplied to bindService().  This\n             parameter must not be null.</p>\n</div></li><li><span class='pre'>group</span> : Number<div class='sub-desc'><p>A group to put this connection's process in.  Upon calling here, this\n              will override any previous group that was set for that process.  The group\n              tells the system about processes that are logically grouped together, so\n              should be managed as one unit of importance (such as when being considered\n              a recently used app).  All processes in the same app with the same group\n              are considered to be related.  Supplying 0 reverts to the default behavior\n              of not grouping.</p>\n</div></li><li><span class='pre'>importance</span> : Number<div class='sub-desc'><p>Additional importance of the processes within a group.  Upon calling\n                   here, this will override any previous importance that was set for that\n                   process.  The most important process is 0, and higher values are\n                   successively less important.  You can view this as describing how\n                   to order the processes in an array, with the processes at the end of\n                   the array being the least important.  This value has no meaning besides\n                   indicating how processes should be ordered in that array one after the\n                   other.  This provides a way to fine-tune the system's process killing,\n                   guiding it to kill processes at the end of the array first.\n@see <a href=\"#!/api/android.content.Context-method-bindIsolatedService\" rel=\"android.content.Context-method-bindIsolatedService\" class=\"docClass\">bindIsolatedService</a></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});