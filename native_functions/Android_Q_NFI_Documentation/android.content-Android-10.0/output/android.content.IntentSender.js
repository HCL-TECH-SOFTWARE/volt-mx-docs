Ext.data.JsonP.android_content_IntentSender({"tagname":"class","name":"android.content.IntentSender","autodetected":{},"files":[{"filename":"IntentSender.js","href":"IntentSender.html#android-content-IntentSender"}],"extends":"java.lang.Object","members":[{"name":"CREATOR","tagname":"property","owner":"android.content.IntentSender","id":"property-CREATOR","meta":{}},{"name":"describeContents","tagname":"method","owner":"android.content.IntentSender","id":"method-describeContents","meta":{}},{"name":"equals","tagname":"method","owner":"android.content.IntentSender","id":"method-equals","meta":{}},{"name":"getCreatorPackage","tagname":"method","owner":"android.content.IntentSender","id":"method-getCreatorPackage","meta":{}},{"name":"getCreatorUid","tagname":"method","owner":"android.content.IntentSender","id":"method-getCreatorUid","meta":{}},{"name":"getCreatorUserHandle","tagname":"method","owner":"android.content.IntentSender","id":"method-getCreatorUserHandle","meta":{}},{"name":"getTargetPackage","tagname":"method","owner":"android.content.IntentSender","id":"method-getTargetPackage","meta":{"deprecated":{"text":"<p>Renamed to getCreatorPackage().</p>\n"}}},{"name":"hashCode","tagname":"method","owner":"android.content.IntentSender","id":"method-hashCode","meta":{}},{"name":"readIntentSenderOrNullFromParcel","tagname":"method","owner":"android.content.IntentSender","id":"method-readIntentSenderOrNullFromParcel","meta":{}},{"name":"sendIntent","tagname":"method","owner":"android.content.IntentSender","id":"method-sendIntent","meta":{}},{"name":"toString","tagname":"method","owner":"android.content.IntentSender","id":"method-toString","meta":{}},{"name":"writeIntentSenderOrNullToParcel","tagname":"method","owner":"android.content.IntentSender","id":"method-writeIntentSenderOrNullToParcel","meta":{}},{"name":"writeToParcel","tagname":"method","owner":"android.content.IntentSender","id":"method-writeToParcel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.IntentSender","short_doc":"implements android.os.Parcelable\n\nA description of an Intent and target action to perform with it. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.IntentSender</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/IntentSender.html#android-content-IntentSender' target='_blank'>IntentSender.js</a></div></pre><div class='doc-contents'><p>implements android.os.Parcelable</p>\n\n<p>A description of an Intent and target action to perform with it.\n The returned object can be\n handed to other applications so that they can perform the action you\n described on your behalf at a later time.</p>\n\n<p> <p>By giving a IntentSender to another application,\n you are granting it the right to perform the operation you have specified\n as if the other application was yourself (with the same permissions and\n identity).  As such, you should be careful about how you build the IntentSender:\n often, for example, the base Intent you supply will have the component\n name explicitly set to one of your own components, to ensure it is ultimately\n sent there and nowhere else.</p>\n\n<p> <p>A IntentSender itself is simply a reference to a token maintained by\n the system describing the original data used to retrieve it.  This means\n that, even if its owning application's process is killed, the\n IntentSender itself will remain usable from other processes that\n have been given it.  If the creating application later re-retrieves the\n same kind of IntentSender (same operation, same Intent action, data,\n categories, and components, and same flags), it will receive a IntentSender\n representing the same token if that is still valid.</p>\n\n<p> <p>Instances of this class can not be made directly, but rather must be\n created from an existing android.app.PendingIntent with\n PendingIntent.getIntentSender().</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CREATOR' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-property-CREATOR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-property-CREATOR' class='name expandable'>CREATOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-describeContents' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-describeContents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-describeContents' class='name expandable'>describeContents</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Comparison operator on two IntentSender objects, such that true\n is returned then they both represent the same operat...</div><div class='long'><p>Comparison operator on two IntentSender objects, such that true\n is returned then they both represent the same operation from the\n same package.</p>\n</div></div></div><div id='method-getCreatorPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-getCreatorPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-getCreatorPackage' class='name expandable'>getCreatorPackage</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the package name of the application that created this\n IntentSender, that is the identity under which you will...</div><div class='long'><p>Return the package name of the application that created this\n IntentSender, that is the identity under which you will actually be\n sending the Intent.  The returned string is supplied by the system, so\n that an application can not spoof its package.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The package name of the PendingIntent, or null if there is\n none associated with it.</p>\n</div></li></ul></div></div></div><div id='method-getCreatorUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-getCreatorUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-getCreatorUid' class='name expandable'>getCreatorUid</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the uid of the application that created this\n PendingIntent, that is the identity under which you will actuall...</div><div class='long'><p>Return the uid of the application that created this\n PendingIntent, that is the identity under which you will actually be\n sending the Intent.  The returned integer is supplied by the system, so\n that an application can not spoof its uid.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The uid of the PendingIntent, or -1 if there is\n none associated with it.</p>\n</div></li></ul></div></div></div><div id='method-getCreatorUserHandle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-getCreatorUserHandle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-getCreatorUserHandle' class='name expandable'>getCreatorUserHandle</a>( <span class='pre'></span> ) : Object {android.os.UserHandle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the user handle of the application that created this\n PendingIntent, that is the user under which you will act...</div><div class='long'><p>Return the user handle of the application that created this\n PendingIntent, that is the user under which you will actually be\n sending the Intent.  The returned UserHandle is supplied by the system, so\n that an application can not spoof its user.  See\n Process.myUserHandle() for\n more explanation of user handles.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.UserHandle}</span><div class='sub-desc'><p>The user handle of the PendingIntent, or null if there is\n none associated with it.</p>\n</div></li></ul></div></div></div><div id='method-getTargetPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-getTargetPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-getTargetPackage' class='name expandable'>getTargetPackage</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Renamed to getCreatorPackage().</p>\n\n        </div>\n</div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-readIntentSenderOrNullFromParcel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-readIntentSenderOrNullFromParcel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-readIntentSenderOrNullFromParcel' class='name expandable'>readIntentSenderOrNullFromParcel</a>( <span class='pre'>in</span> ) : Object {android.content.IntentSender}<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience function for reading either a Messenger or null pointer from\n a Parcel. ...</div><div class='long'><p>Convenience function for reading either a Messenger or null pointer from\n a Parcel.  You must have previously written the Messenger with\n <a href=\"#!/api/android.content.IntentSender-method-writeIntentSenderOrNullToParcel\" rel=\"android.content.IntentSender-method-writeIntentSenderOrNullToParcel\" class=\"docClass\">writeIntentSenderOrNullToParcel</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>in</span> : Object {Parcel}<div class='sub-desc'><p>The Parcel containing the written Messenger.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.IntentSender}</span><div class='sub-desc'><p>Returns the Messenger read from the Parcel, or null if null had\n been written.</p>\n</div></li></ul></div></div></div><div id='method-sendIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-sendIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-sendIntent' class='name expandable'>sendIntent</a>( <span class='pre'>context, code, intent, onFinished, handler, requiredPermission</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform the operation associated with this IntentSender, allowing the\n caller to specify information about the Intent...</div><div class='long'><p>Perform the operation associated with this IntentSender, allowing the\n caller to specify information about the Intent to use and be notified\n when the send has completed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The Context of the caller.  This may be null if\n <var>intent</var> is also null.</p>\n</div></li><li><span class='pre'>code</span> : Number<div class='sub-desc'><p>Result code to supply back to the IntentSender's target.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>Additional Intent data.  See Intent.fillIn() for information on how this is applied to the\n original Intent.  Use null to not modify the original Intent.</p>\n</div></li><li><span class='pre'>onFinished</span> : Object {IntentSender.OnFinished}<div class='sub-desc'><p>The object to call back on when the send has\n completed, or null for no callback.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler identifying the thread on which the callback\n should happen.  If null, the callback will happen from the thread\n pool of the process.</p>\n</div></li><li><span class='pre'>requiredPermission</span> : String<div class='sub-desc'><p>Name of permission that a recipient of the PendingIntent\n is required to hold.  This is only valid for broadcast intents, and\n corresponds to the permission argument in\n String) Context.sendOrderedBroadcast(Intent, String).\n If null, no permission is required.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SendIntentException Throws CanceledIntentException if the IntentSender\n is no longer allowing more intents to be sent through it.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-writeIntentSenderOrNullToParcel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-writeIntentSenderOrNullToParcel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-writeIntentSenderOrNullToParcel' class='name expandable'>writeIntentSenderOrNullToParcel</a>( <span class='pre'>sender, out</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience function for writing either a IntentSender or null pointer to\n a Parcel. ...</div><div class='long'><p>Convenience function for writing either a IntentSender or null pointer to\n a Parcel.  You must use this with <a href=\"#!/api/android.content.IntentSender-method-readIntentSenderOrNullFromParcel\" rel=\"android.content.IntentSender-method-readIntentSenderOrNullFromParcel\" class=\"docClass\">readIntentSenderOrNullFromParcel</a>\n for later reading it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sender</span> : Object {IntentSender}<div class='sub-desc'><p>The IntentSender to write, or null.</p>\n</div></li><li><span class='pre'>out</span> : Object {Parcel}<div class='sub-desc'><p>Where to write the IntentSender.</p>\n</div></li></ul></div></div></div><div id='method-writeToParcel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.IntentSender'>android.content.IntentSender</span><br/><a href='source/IntentSender.html#android-content-IntentSender-method-writeToParcel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.IntentSender-method-writeToParcel' class='name expandable'>writeToParcel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});