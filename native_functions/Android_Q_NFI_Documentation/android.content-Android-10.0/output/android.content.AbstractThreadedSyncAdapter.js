Ext.data.JsonP.android_content_AbstractThreadedSyncAdapter({"tagname":"class","name":"android.content.AbstractThreadedSyncAdapter","autodetected":{},"files":[{"filename":"AbstractThreadedSyncAdapter.js","href":"AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter"}],"extends":"java.lang.Object","members":[{"name":"LOG_SYNC_DETAILS","tagname":"property","owner":"android.content.AbstractThreadedSyncAdapter","id":"property-LOG_SYNC_DETAILS","meta":{"deprecated":{"text":"<p>Private constant.  May go away in the next release.</p>\n"}}},{"name":"getContext","tagname":"method","owner":"android.content.AbstractThreadedSyncAdapter","id":"method-getContext","meta":{}},{"name":"getSyncAdapterBinder","tagname":"method","owner":"android.content.AbstractThreadedSyncAdapter","id":"method-getSyncAdapterBinder","meta":{}},{"name":"onPerformSync","tagname":"method","owner":"android.content.AbstractThreadedSyncAdapter","id":"method-onPerformSync","meta":{}},{"name":"onSecurityException","tagname":"method","owner":"android.content.AbstractThreadedSyncAdapter","id":"method-onSecurityException","meta":{}},{"name":"onSyncCanceled","tagname":"method","owner":"android.content.AbstractThreadedSyncAdapter","id":"method-onSyncCanceled","meta":{}},{"name":"onUnsyncableAccount","tagname":"method","owner":"android.content.AbstractThreadedSyncAdapter","id":"method-onUnsyncableAccount","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.AbstractThreadedSyncAdapter","short_doc":"An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.AbstractThreadedSyncAdapter</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter' target='_blank'>AbstractThreadedSyncAdapter.js</a></div></pre><div class='doc-contents'><p>An abstract implementation of a SyncAdapter that spawns a thread to invoke a sync operation.\n If a sync operation is already in progress when a sync request is received, an error will be\n returned to the new request and the existing request will be allowed to continue.\n However if there is no sync in progress then a thread will be spawned and <a href=\"#!/api/android.content.AbstractThreadedSyncAdapter-method-onPerformSync\" rel=\"android.content.AbstractThreadedSyncAdapter-method-onPerformSync\" class=\"docClass\">onPerformSync</a>\n will be invoked on that thread.\n <p>\n Syncs can be cancelled at any time by the framework. For example a sync that was not\n user-initiated and lasts longer than 30 minutes will be considered timed-out and cancelled.\n Similarly the framework will attempt to determine whether or not an adapter is making progress\n by monitoring its network activity over the course of a minute. If the network traffic over this\n window is close enough to zero the sync will be cancelled. You can also request the sync be\n cancelled via String) or\n android.content.ContentResolver.cancelSync(SyncRequest).\n <p>\n A sync is cancelled by issuing a Thread.interrupt() on the syncing thread. <strong>Either\n your code in Bundle, String, ContentProviderClient, android.content.SyncResult)\n must check Thread.interrupted(), or you you must override one of\n <a href=\"#!/api/android.content.AbstractThreadedSyncAdapter-method-onSyncCanceled\" rel=\"android.content.AbstractThreadedSyncAdapter-method-onSyncCanceled\" class=\"docClass\">onSyncCanceled</a>(Thread)/<a href=\"#!/api/android.content.AbstractThreadedSyncAdapter-method-onSyncCanceled\" rel=\"android.content.AbstractThreadedSyncAdapter-method-onSyncCanceled\" class=\"docClass\">onSyncCanceled</a>()</strong> (depending on whether or not\n your adapter supports syncing of multiple accounts in parallel). If your adapter does not\n respect the cancel issued by the framework you run the risk of your app's entire process being\n killed.\n <p>\n In order to be a sync adapter one must extend this class, provide implementations for the\n abstract methods and write a service that returns the result of <a href=\"#!/api/android.content.AbstractThreadedSyncAdapter-method-getSyncAdapterBinder\" rel=\"android.content.AbstractThreadedSyncAdapter-method-getSyncAdapterBinder\" class=\"docClass\">getSyncAdapterBinder</a>()\n in the service's android.app.Service.onBind(android.content.Intent) when invoked\n with an intent with action <code>android.content.SyncAdapter</code>. This service\n must specify the following intent filter and metadata tags in its AndroidManifest.xml file</p>\n\n<pre>   &lt;intent-filter&gt;\n     &lt;action android:name=\"android.content.SyncAdapter\" /&gt;\n   &lt;/intent-filter&gt;\n   &lt;meta-data android:name=\"android.content.SyncAdapter\"\n             android:resource=\"@xml/syncadapter\" /&gt;\n </pre>\n\n\n<p> The <code>android:resource</code> attribute must point to a resource that looks like:</p>\n\n<pre> &lt;sync-adapter xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:contentAuthority=\"authority\"\n    android:accountType=\"accountType\"\n    android:userVisible=\"true|false\"\n    android:supportsUploading=\"true|false\"\n    android:allowParallelSyncs=\"true|false\"\n    android:isAlwaysSyncable=\"true|false\"\n    android:syncAdapterSettingsAction=\"ACTION_OF_SETTINGS_ACTIVITY\"\n /&gt;\n </pre>\n\n\n<p> <ul>\n <li>The <code>android:contentAuthority</code> and <code>android:accountType</code> attributes\n indicate which content authority and for which account types this sync adapter serves.\n <li><code>android:userVisible</code> defaults to true and controls whether or not this sync\n adapter shows up in the Sync Settings screen.\n <li><code>android:supportsUploading</code> defaults\n to true and if true an upload-only sync will be requested for all syncadapters associated\n with an authority whenever that authority's content provider does a\n android.database.ContentObserver, boolean)\n with syncToNetwork set to true.\n <li><code>android:allowParallelSyncs</code> defaults to false and if true indicates that\n the sync adapter can handle syncs for multiple accounts at the same time. Otherwise\n the SyncManager will wait until the sync adapter is not in use before requesting that\n it sync an account's data.\n <li><code>android:isAlwaysSyncable</code> defaults to false and if true tells the SyncManager\n to initialize the isSyncable state to 1 for that sync adapter for each account that is added.\n <li><code>android:syncAdapterSettingsAction</code> defaults to null and if supplied it\n specifies an Intent action of an activity that can be used to adjust the sync adapter's\n sync settings. The activity must live in the same package as the sync adapter.\n </li></li></li></li></li></li></ul></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-LOG_SYNC_DETAILS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.AbstractThreadedSyncAdapter'>android.content.AbstractThreadedSyncAdapter</span><br/><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter-property-LOG_SYNC_DETAILS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.AbstractThreadedSyncAdapter-property-LOG_SYNC_DETAILS' class='name expandable'>LOG_SYNC_DETAILS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Kernel event log tag. ...</div><div class='long'><p>Kernel event log tag.  Also listed in data/etc/event-log-tags.</p>\n<p>Defaults to: <code>&quot;2743&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Private constant.  May go away in the next release.</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getContext' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.AbstractThreadedSyncAdapter'>android.content.AbstractThreadedSyncAdapter</span><br/><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter-method-getContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.AbstractThreadedSyncAdapter-method-getContext' class='name expandable'>getContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getSyncAdapterBinder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.AbstractThreadedSyncAdapter'>android.content.AbstractThreadedSyncAdapter</span><br/><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter-method-getSyncAdapterBinder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.AbstractThreadedSyncAdapter-method-getSyncAdapterBinder' class='name expandable'>getSyncAdapterBinder</a>( <span class='pre'></span> ) : Object {android.os.IBinder}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.IBinder}</span><div class='sub-desc'><p>a reference to the IBinder of the SyncAdapter service.</p>\n</div></li></ul></div></div></div><div id='method-onPerformSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.AbstractThreadedSyncAdapter'>android.content.AbstractThreadedSyncAdapter</span><br/><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter-method-onPerformSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.AbstractThreadedSyncAdapter-method-onPerformSync' class='name expandable'>onPerformSync</a>( <span class='pre'>account, extras, authority, provider, syncResult</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform a sync for this account. ...</div><div class='long'><p>Perform a sync for this account. SyncAdapter-specific parameters may\n be specified in extras, which is guaranteed to not be null. Invocations\n of this method are guaranteed to be serialized.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account that should be synced</p>\n</div></li><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>SyncAdapter-specific parameters</p>\n</div></li><li><span class='pre'>authority</span> : String<div class='sub-desc'><p>the authority of this sync request</p>\n</div></li><li><span class='pre'>provider</span> : Object {ContentProviderClient}<div class='sub-desc'><p>a ContentProviderClient that points to the ContentProvider for this\n   authority</p>\n</div></li><li><span class='pre'>syncResult</span> : Object {SyncResult}<div class='sub-desc'><p>SyncAdapter-specific parameters</p>\n</div></li></ul></div></div></div><div id='method-onSecurityException' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.AbstractThreadedSyncAdapter'>android.content.AbstractThreadedSyncAdapter</span><br/><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter-method-onSecurityException' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.AbstractThreadedSyncAdapter-method-onSecurityException' class='name expandable'>onSecurityException</a>( <span class='pre'>account, extras, authority, syncResult</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report that there was a security exception when opening the content provider\n prior to calling onPerformSync. ...</div><div class='long'><p>Report that there was a security exception when opening the content provider\n prior to calling <a href=\"#!/api/android.content.AbstractThreadedSyncAdapter-method-onPerformSync\" rel=\"android.content.AbstractThreadedSyncAdapter-method-onPerformSync\" class=\"docClass\">onPerformSync</a>.  This will be treated as a sync\n database failure.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>account</span> : Object {Account}<div class='sub-desc'><p>the account that attempted to sync</p>\n</div></li><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>SyncAdapter-specific parameters</p>\n</div></li><li><span class='pre'>authority</span> : String<div class='sub-desc'><p>the authority of the failed sync request</p>\n</div></li><li><span class='pre'>syncResult</span> : Object {SyncResult}<div class='sub-desc'><p>SyncAdapter-specific parameters</p>\n</div></li></ul></div></div></div><div id='method-onSyncCanceled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.AbstractThreadedSyncAdapter'>android.content.AbstractThreadedSyncAdapter</span><br/><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter-method-onSyncCanceled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.AbstractThreadedSyncAdapter-method-onSyncCanceled' class='name expandable'>onSyncCanceled</a>( <span class='pre'>thread</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that a sync operation has been canceled. ...</div><div class='long'><p>Indicates that a sync operation has been canceled. This will be invoked on a separate\n thread than the sync thread and so you must consider the multi-threaded implications\n of the work that you do in this method.\n <p>\n This will only be invoked when the SyncAdapter indicates that it does support\n parallel syncs.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>thread</span> : Object {Thread}<div class='sub-desc'><p>the Thread of the sync that is to be canceled.</p>\n</div></li></ul></div></div></div><div id='method-onUnsyncableAccount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.AbstractThreadedSyncAdapter'>android.content.AbstractThreadedSyncAdapter</span><br/><a href='source/AbstractThreadedSyncAdapter.html#android-content-AbstractThreadedSyncAdapter-method-onUnsyncableAccount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.AbstractThreadedSyncAdapter-method-onUnsyncableAccount' class='name expandable'>onUnsyncableAccount</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows to defer syncing until all accounts are properly set up. ...</div><div class='long'><p>Allows to defer syncing until all accounts are properly set up.</p>\n\n<p> <p>Called when a account / authority pair\n <ul>\n <li>that can be handled by this adapter</li>\n <li>is synced</li>\n <li>and the account/provider String) has\n unknown state (&lt;0).</li>\n </ul></p>\n\n<p> <p>This might be called on a different service connection as <a href=\"#!/api/android.content.AbstractThreadedSyncAdapter-method-onPerformSync\" rel=\"android.content.AbstractThreadedSyncAdapter-method-onPerformSync\" class=\"docClass\">onPerformSync</a>.</p>\n\n<p> <p>The system expects this method to immediately return. If the call stalls the system\n behaves as if this method returned {@code true}. If it is required to perform a longer task\n (such as interacting with the user), return {@code false} and proceed in a difference\n context, such as an android.app.Activity, or foreground service. The sync can then be\n rescheduled once the account becomes syncable.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If {@code false} syncing is deferred. Returns {@code true} by default, i.e. by\n         default syncing starts immediately.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});