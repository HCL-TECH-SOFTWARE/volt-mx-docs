Ext.data.JsonP.android_content_ClipData_Item({"tagname":"class","name":"android.content.ClipData.Item","autodetected":{},"files":[{"filename":"Item.js","href":"Item.html#android-content-ClipData-Item"}],"extends":"java.lang.Object","members":[{"name":"coerceToHtmlText","tagname":"method","owner":"android.content.ClipData.Item","id":"method-coerceToHtmlText","meta":{}},{"name":"coerceToStyledText","tagname":"method","owner":"android.content.ClipData.Item","id":"method-coerceToStyledText","meta":{}},{"name":"coerceToText","tagname":"method","owner":"android.content.ClipData.Item","id":"method-coerceToText","meta":{}},{"name":"getHtmlText","tagname":"method","owner":"android.content.ClipData.Item","id":"method-getHtmlText","meta":{}},{"name":"getIntent","tagname":"method","owner":"android.content.ClipData.Item","id":"method-getIntent","meta":{}},{"name":"getText","tagname":"method","owner":"android.content.ClipData.Item","id":"method-getText","meta":{}},{"name":"getUri","tagname":"method","owner":"android.content.ClipData.Item","id":"method-getUri","meta":{}},{"name":"toString","tagname":"method","owner":"android.content.ClipData.Item","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.ClipData.Item","short_doc":"Description of a single item in a ClipData. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.ClipData.Item</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Item.html#android-content-ClipData-Item' target='_blank'>Item.js</a></div></pre><div class='doc-contents'><p>Description of a single item in a ClipData.</p>\n\n<p> <p>The types than an individual item can currently contain are:</p></p>\n\n<p> <ul>\n <li> Text: a basic string of text.  This is actually a CharSequence,\n so it can be formatted text supported by corresponding Android built-in\n style spans.  (Custom application spans are not supported and will be\n stripped when transporting through the clipboard.)\n <li> Intent: an arbitrary Intent object.  A typical use is the shortcut\n to create when pasting a clipped item on to the home screen.\n <li> Uri: a URI reference.  This may be any URI (such as an http: URI\n representing a bookmark), however it is often a content: URI.  Using\n content provider references as clips like this allows an application to\n share complex or large clips through the standard content provider\n facilities.\n </li></li></li></ul></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-coerceToHtmlText' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-coerceToHtmlText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-coerceToHtmlText' class='name expandable'>coerceToHtmlText</a>( <span class='pre'>context</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Turn this item into HTML text, regardless of the type of data it\n actually contains. ...</div><div class='long'><p>Turn this item into HTML text, regardless of the type of data it\n actually contains.</p>\n\n<p> <p>The algorithm for deciding what text to return is:\n <ul>\n <li> If <a href=\"#!/api/android.content.ClipData.Item-method-getHtmlText\" rel=\"android.content.ClipData.Item-method-getHtmlText\" class=\"docClass\">getHtmlText</a> is non-null, return that.\n <li> If <a href=\"#!/api/android.content.ClipData.Item-method-getText\" rel=\"android.content.ClipData.Item-method-getText\" class=\"docClass\">getText</a> is non-null, return that, converting to\n valid HTML text.  If this text contains style spans,\n Html.toHtml(Spanned) is used to\n convert them to HTML formatting.\n <li> If <a href=\"#!/api/android.content.ClipData.Item-method-getUri\" rel=\"android.content.ClipData.Item-method-getUri\" class=\"docClass\">getUri</a> is non-null, try to retrieve its data\n as a text stream from its content provider.  If the provider can\n supply text/html data, that will be preferred and returned as-is.\n Otherwise, any text/* data will be returned and escaped to HTML.\n If it is not a content: URI or the content provider does not supply\n a text representation, HTML text containing a link to the URI\n will be returned.\n <li> If <a href=\"#!/api/android.content.ClipData.Item-method-getIntent\" rel=\"android.content.ClipData.Item-method-getIntent\" class=\"docClass\">getIntent</a> is non-null, convert that to an intent:\n URI and return as an HTML link.\n <li> Otherwise, return an empty string.\n </li></li></li></li></li></ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The caller's Context, from which its ContentResolver\n and other things can be retrieved.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>Returns the item's representation as HTML text.</p>\n</div></li></ul></div></div></div><div id='method-coerceToStyledText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-coerceToStyledText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-coerceToStyledText' class='name expandable'>coerceToStyledText</a>( <span class='pre'>context</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Like coerceToHtmlText(Context), but any text that would\n be returned as HTML formatting will be returned as text with...</div><div class='long'><p>Like <a href=\"#!/api/android.content.ClipData.Item-method-coerceToHtmlText\" rel=\"android.content.ClipData.Item-method-coerceToHtmlText\" class=\"docClass\">coerceToHtmlText</a>(Context), but any text that would\n be returned as HTML formatting will be returned as text with\n style spans.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The caller's Context, from which its ContentResolver\n and other things can be retrieved.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>Returns the item's textual representation.</p>\n</div></li></ul></div></div></div><div id='method-coerceToText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-coerceToText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-coerceToText' class='name expandable'>coerceToText</a>( <span class='pre'>context</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Turn this item into text, regardless of the type of data it\n actually contains. ...</div><div class='long'><p>Turn this item into text, regardless of the type of data it\n actually contains.</p>\n\n<p> <p>The algorithm for deciding what text to return is:\n <ul>\n <li> If <a href=\"#!/api/android.content.ClipData.Item-method-getText\" rel=\"android.content.ClipData.Item-method-getText\" class=\"docClass\">getText</a> is non-null, return that.\n <li> If <a href=\"#!/api/android.content.ClipData.Item-method-getUri\" rel=\"android.content.ClipData.Item-method-getUri\" class=\"docClass\">getUri</a> is non-null, try to retrieve its data\n as a text stream from its content provider.  If this succeeds, copy\n the text into a String and return it.  If it is not a content: URI or\n the content provider does not supply a text representation, return\n the raw URI as a string.\n <li> If <a href=\"#!/api/android.content.ClipData.Item-method-getIntent\" rel=\"android.content.ClipData.Item-method-getIntent\" class=\"docClass\">getIntent</a> is non-null, convert that to an intent:\n URI and return it.\n <li> Otherwise, return an empty string.\n </li></li></li></li></ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The caller's Context, from which its ContentResolver\n and other things can be retrieved.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>Returns the item's textual representation.</p>\n</div></li></ul></div></div></div><div id='method-getHtmlText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-getHtmlText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-getHtmlText' class='name expandable'>getHtmlText</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the raw HTML text contained in this Item. ...</div><div class='long'><p>Retrieve the raw HTML text contained in this Item.</p>\n</div></div></div><div id='method-getIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-getIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-getIntent' class='name expandable'>getIntent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the raw Intent contained in this Item. ...</div><div class='long'><p>Retrieve the raw Intent contained in this Item.</p>\n</div></div></div><div id='method-getText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-getText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-getText' class='name expandable'>getText</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the raw text contained in this Item. ...</div><div class='long'><p>Retrieve the raw text contained in this Item.</p>\n</div></div></div><div id='method-getUri' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-getUri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-getUri' class='name expandable'>getUri</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the raw URI contained in this Item. ...</div><div class='long'><p>Retrieve the raw URI contained in this Item.</p>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.ClipData.Item'>android.content.ClipData.Item</span><br/><a href='source/Item.html#android-content-ClipData-Item-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.ClipData.Item-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});