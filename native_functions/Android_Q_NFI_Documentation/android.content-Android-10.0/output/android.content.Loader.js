Ext.data.JsonP.android_content_Loader({"tagname":"class","name":"android.content.Loader","autodetected":{},"files":[{"filename":"Loader.js","href":"Loader.html#android-content-Loader"}],"extends":"java.lang.Object","params":[{"tagname":"params","doc":"<p><D> The result returned when the load is complete</D></p>\n"}],"deprecated":{"text":"<p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.content.Loader</p>\n"},"members":[{"name":"abandon","tagname":"method","owner":"android.content.Loader","id":"method-abandon","meta":{}},{"name":"cancelLoad","tagname":"method","owner":"android.content.Loader","id":"method-cancelLoad","meta":{}},{"name":"commitContentChanged","tagname":"method","owner":"android.content.Loader","id":"method-commitContentChanged","meta":{}},{"name":"dataToString","tagname":"method","owner":"android.content.Loader","id":"method-dataToString","meta":{}},{"name":"deliverCancellation","tagname":"method","owner":"android.content.Loader","id":"method-deliverCancellation","meta":{}},{"name":"deliverResult","tagname":"method","owner":"android.content.Loader","id":"method-deliverResult","meta":{}},{"name":"dump","tagname":"method","owner":"android.content.Loader","id":"method-dump","meta":{}},{"name":"forceLoad","tagname":"method","owner":"android.content.Loader","id":"method-forceLoad","meta":{}},{"name":"getContext","tagname":"method","owner":"android.content.Loader","id":"method-getContext","meta":{}},{"name":"getId","tagname":"method","owner":"android.content.Loader","id":"method-getId","meta":{}},{"name":"isAbandoned","tagname":"method","owner":"android.content.Loader","id":"method-isAbandoned","meta":{}},{"name":"isReset","tagname":"method","owner":"android.content.Loader","id":"method-isReset","meta":{}},{"name":"isStarted","tagname":"method","owner":"android.content.Loader","id":"method-isStarted","meta":{}},{"name":"onContentChanged","tagname":"method","owner":"android.content.Loader","id":"method-onContentChanged","meta":{}},{"name":"registerListener","tagname":"method","owner":"android.content.Loader","id":"method-registerListener","meta":{}},{"name":"registerOnLoadCanceledListener","tagname":"method","owner":"android.content.Loader","id":"method-registerOnLoadCanceledListener","meta":{}},{"name":"reset","tagname":"method","owner":"android.content.Loader","id":"method-reset","meta":{}},{"name":"rollbackContentChanged","tagname":"method","owner":"android.content.Loader","id":"method-rollbackContentChanged","meta":{}},{"name":"startLoading","tagname":"method","owner":"android.content.Loader","id":"method-startLoading","meta":{}},{"name":"stopLoading","tagname":"method","owner":"android.content.Loader","id":"method-stopLoading","meta":{}},{"name":"takeContentChanged","tagname":"method","owner":"android.content.Loader","id":"method-takeContentChanged","meta":{}},{"name":"toString","tagname":"method","owner":"android.content.Loader","id":"method-toString","meta":{}},{"name":"unregisterListener","tagname":"method","owner":"android.content.Loader","id":"method-unregisterListener","meta":{}},{"name":"unregisterOnLoadCanceledListener","tagname":"method","owner":"android.content.Loader","id":"method-unregisterOnLoadCanceledListener","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.Loader","short_doc":"A class that performs asynchronous loading of data. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.content.AsyncTaskLoader"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.Loader</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.content.AsyncTaskLoader' rel='android.content.AsyncTaskLoader' class='docClass'>android.content.AsyncTaskLoader</a></div><h4>Files</h4><div class='dependency'><a href='source/Loader.html#android-content-Loader' target='_blank'>Loader.js</a></div></pre><div class='doc-contents'><p>A class that performs asynchronous loading of data. While Loaders are active\n they should monitor the source of their data and deliver new results when the contents\n change.  See android.app.LoaderManager for more detail.</p>\n\n<p> <p><b>Note on threading:</b> Clients of loaders should as a rule perform\n any calls on to a Loader from the main thread of their process (that is,\n the thread the Activity callbacks and other things occur on).  Subclasses\n of Loader (such as <a href=\"#!/api/android.content.AsyncTaskLoader\" rel=\"android.content.AsyncTaskLoader\" class=\"docClass\">android.content.AsyncTaskLoader</a>) will often perform their work\n in a separate thread, but when delivering their results this too should\n be done on the main thread.</p></p>\n\n<p> <p>Subclasses generally must implement at least onStartLoading(),\n onStopLoading(), onForceLoad(), and onReset().</p></p>\n\n<p> <p>Most implementations should not derive directly from this class, but\n instead inherit from <a href=\"#!/api/android.content.AsyncTaskLoader\" rel=\"android.content.AsyncTaskLoader\" class=\"docClass\">android.content.AsyncTaskLoader</a>.</p></p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about using loaders, read the\n <a href=\"{@docRoot}guide/components/loaders.html\">Loaders</a> developer guide.</p>\n </div></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.content.Loader</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><D> The result returned when the load is complete</D></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abandon' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-abandon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-abandon' class='name expandable'>abandon</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This function will normally be called for you automatically by\n android.app.LoaderManager when restarting a Loader. ...</div><div class='long'><p>This function will normally be called for you automatically by\n android.app.LoaderManager when restarting a Loader.  When using\n a Loader with android.app.LoaderManager,\n you <em>must not</em> call this method yourself, or you will conflict\n with its management of the Loader.</p>\n\n<p> Tell the Loader that it is being abandoned.  This is called prior\n to <a href=\"#!/api/android.content.Loader-method-reset\" rel=\"android.content.Loader-method-reset\" class=\"docClass\">reset</a> to have it retain its current data but not report\n any new data.</p>\n</div></div></div><div id='method-cancelLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-cancelLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-cancelLoad' class='name expandable'>cancelLoad</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempt to cancel the current load task. ...</div><div class='long'><p>Attempt to cancel the current load task.\n Must be called on the main thread of the process.</p>\n\n<p> <p>Cancellation is not an immediate operation, since the load is performed\n in a background thread.  If there is currently a load in progress, this\n method requests that the load be canceled, and notes this is the case;\n once the background thread has completed its work its remaining state\n will be cleared.  If another load request comes in during this time,\n it will be held until the canceled load is complete.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns <tt>false</tt> if the task could not be canceled,\n typically because it has already completed normally, or\n because startLoading() hasn't been called; returns\n <tt>true</tt> otherwise.  When <tt>true</tt> is returned, the task\n is still running and the OnLoadCanceledListener will be called\n when the task completes.</p>\n</div></li></ul></div></div></div><div id='method-commitContentChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-commitContentChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-commitContentChanged' class='name expandable'>commitContentChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Commit that you have actually fully processed a content change that\n was returned by takeContentChanged. ...</div><div class='long'><p>Commit that you have actually fully processed a content change that\n was returned by <a href=\"#!/api/android.content.Loader-method-takeContentChanged\" rel=\"android.content.Loader-method-takeContentChanged\" class=\"docClass\">takeContentChanged</a>.  This is for use with\n <a href=\"#!/api/android.content.Loader-method-rollbackContentChanged\" rel=\"android.content.Loader-method-rollbackContentChanged\" class=\"docClass\">rollbackContentChanged</a>() to handle situations where a load\n is cancelled.  Call this when you have completely processed a load\n without it being cancelled.</p>\n</div></div></div><div id='method-dataToString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-dataToString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-dataToString' class='name expandable'>dataToString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>For debugging, converts an instance of the Loader's data class to\n a string that can be printed. ...</div><div class='long'><p>For debugging, converts an instance of the Loader's data class to\n a string that can be printed.  Must handle a null data.</p>\n</div></div></div><div id='method-deliverCancellation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-deliverCancellation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-deliverCancellation' class='name expandable'>deliverCancellation</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs the registered android.content.Loader.OnLoadCanceledListener that the load has been canceled. ...</div><div class='long'><p>Informs the registered <a href=\"#!/api/android.content.Loader.OnLoadCanceledListener\" rel=\"android.content.Loader.OnLoadCanceledListener\" class=\"docClass\">android.content.Loader.OnLoadCanceledListener</a> that the load has been canceled.\n Should only be called by subclasses.</p>\n\n<p> Must be called from the process's main thread.</p>\n</div></div></div><div id='method-deliverResult' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-deliverResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-deliverResult' class='name expandable'>deliverResult</a>( <span class='pre'>data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends the result of the load to the registered listener. ...</div><div class='long'><p>Sends the result of the load to the registered listener. Should only be called by subclasses.</p>\n\n<p> Must be called from the process's main thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object {Object}<div class='sub-desc'><p>the result of the load</p>\n</div></li></ul></div></div></div><div id='method-dump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-dump' class='name expandable'>dump</a>( <span class='pre'>prefix, fd, writer, args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Print the Loader's state into the given stream. ...</div><div class='long'><p>Print the Loader's state into the given stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : String<div class='sub-desc'><p>Text to print at the front of each line.</p>\n</div></li><li><span class='pre'>fd</span> : Object {FileDescriptor}<div class='sub-desc'><p>The raw file descriptor that the dump is being sent to.</p>\n</div></li><li><span class='pre'>writer</span> : Object {PrintWriter}<div class='sub-desc'><p>A PrintWriter to which the dump is to be set.</p>\n</div></li><li><span class='pre'>args</span> : Object {java.lang.String[]}<div class='sub-desc'><p>Additional arguments to the dump request.</p>\n</div></li></ul></div></div></div><div id='method-forceLoad' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-forceLoad' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-forceLoad' class='name expandable'>forceLoad</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Force an asynchronous load. ...</div><div class='long'><p>Force an asynchronous load. Unlike <a href=\"#!/api/android.content.Loader-method-startLoading\" rel=\"android.content.Loader-method-startLoading\" class=\"docClass\">startLoading</a>() this will ignore a previously\n loaded data set and load a new one.  This simply calls through to the\n implementation's onForceLoad().  You generally should only call this\n when the loader is started -- that is, <a href=\"#!/api/android.content.Loader-method-isStarted\" rel=\"android.content.Loader-method-isStarted\" class=\"docClass\">isStarted</a>() returns true.</p>\n\n<p> <p>Must be called from the process's main thread.</p>\n</div></div></div><div id='method-getContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-getContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-getContext' class='name expandable'>getContext</a>( <span class='pre'></span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>an application context retrieved from the Context passed to the constructor.</p>\n</div></li></ul></div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the ID of this loader</p>\n</div></li></ul></div></div></div><div id='method-isAbandoned' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-isAbandoned' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-isAbandoned' class='name expandable'>isAbandoned</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether this loader has been abandoned. ...</div><div class='long'><p>Return whether this loader has been abandoned.  In this state, the\n loader <em>must not</em> report any new data, and <em>must</em> keep\n its last reported data valid until it is finally reset.</p>\n</div></div></div><div id='method-isReset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-isReset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-isReset' class='name expandable'>isReset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether this load has been reset. ...</div><div class='long'><p>Return whether this load has been reset.  That is, either the loader\n has not yet been started for the first time, or its <a href=\"#!/api/android.content.Loader-method-reset\" rel=\"android.content.Loader-method-reset\" class=\"docClass\">reset</a>()\n has been called.</p>\n</div></div></div><div id='method-isStarted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-isStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-isStarted' class='name expandable'>isStarted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether this load has been started. ...</div><div class='long'><p>Return whether this load has been started.  That is, its <a href=\"#!/api/android.content.Loader-method-startLoading\" rel=\"android.content.Loader-method-startLoading\" class=\"docClass\">startLoading</a>()\n has been called and no calls to <a href=\"#!/api/android.content.Loader-method-stopLoading\" rel=\"android.content.Loader-method-stopLoading\" class=\"docClass\">stopLoading</a>() or\n <a href=\"#!/api/android.content.Loader-method-reset\" rel=\"android.content.Loader-method-reset\" class=\"docClass\">reset</a>() have yet been made.</p>\n</div></div></div><div id='method-onContentChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-onContentChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-onContentChanged' class='name expandable'>onContentChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when android.content.Loader.ForceLoadContentObserver detects a change. ...</div><div class='long'><p>Called when <a href=\"#!/api/android.content.Loader.ForceLoadContentObserver\" rel=\"android.content.Loader.ForceLoadContentObserver\" class=\"docClass\">android.content.Loader.ForceLoadContentObserver</a> detects a change.  The\n default implementation checks to see if the loader is currently started;\n if so, it simply calls <a href=\"#!/api/android.content.Loader-method-forceLoad\" rel=\"android.content.Loader-method-forceLoad\" class=\"docClass\">forceLoad</a>(); otherwise, it sets a flag\n so that <a href=\"#!/api/android.content.Loader-method-takeContentChanged\" rel=\"android.content.Loader-method-takeContentChanged\" class=\"docClass\">takeContentChanged</a>() returns true.</p>\n\n<p> <p>Must be called from the process's main thread.</p>\n</div></div></div><div id='method-registerListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-registerListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-registerListener' class='name expandable'>registerListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a class that will receive callbacks when a load is complete. ...</div><div class='long'><p>Registers a class that will receive callbacks when a load is complete.\n The callback will be called on the process's main thread so it's safe to\n pass the results to widgets.</p>\n\n<p> <p>Must be called from the process's main thread.</p>\n</div></div></div><div id='method-registerOnLoadCanceledListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-registerOnLoadCanceledListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-registerOnLoadCanceledListener' class='name expandable'>registerOnLoadCanceledListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a listener that will receive callbacks when a load is canceled. ...</div><div class='long'><p>Registers a listener that will receive callbacks when a load is canceled.\n The callback will be called on the process's main thread so it's safe to\n pass the results to widgets.</p>\n\n<p> Must be called from the process's main thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {android.content.Loader.OnLoadCanceledListener}<div class='sub-desc'><p>The listener to register.</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This function will normally be called for you automatically by\n android.app.LoaderManager when destroying a Loader. ...</div><div class='long'><p>This function will normally be called for you automatically by\n android.app.LoaderManager when destroying a Loader.  When using\n a Loader with android.app.LoaderManager,\n you <em>must not</em> call this method yourself, or you will conflict\n with its management of the Loader.</p>\n\n<p> Resets the state of the Loader.  The Loader should at this point free\n all of its resources, since it may never be called again; however, its\n <a href=\"#!/api/android.content.Loader-method-startLoading\" rel=\"android.content.Loader-method-startLoading\" class=\"docClass\">startLoading</a>() may later be called at which point it must be\n able to start running again.</p>\n\n<p> <p>This updates the Loader's internal state so that\n <a href=\"#!/api/android.content.Loader-method-isStarted\" rel=\"android.content.Loader-method-isStarted\" class=\"docClass\">isStarted</a>() and <a href=\"#!/api/android.content.Loader-method-isReset\" rel=\"android.content.Loader-method-isReset\" class=\"docClass\">isReset</a>() will return the correct\n values, and then calls the implementation's onReset().</p>\n\n<p> <p>Must be called from the process's main thread.</p>\n</div></div></div><div id='method-rollbackContentChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-rollbackContentChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-rollbackContentChanged' class='name expandable'>rollbackContentChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report that you have abandoned the processing of a content change that\n was returned by takeContentChanged() and woul...</div><div class='long'><p>Report that you have abandoned the processing of a content change that\n was returned by <a href=\"#!/api/android.content.Loader-method-takeContentChanged\" rel=\"android.content.Loader-method-takeContentChanged\" class=\"docClass\">takeContentChanged</a>() and would like to rollback\n to the state where there is again a pending content change.  This is\n to handle the case where a data load due to a content change has been\n canceled before its data was delivered back to the loader.</p>\n</div></div></div><div id='method-startLoading' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-startLoading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-startLoading' class='name expandable'>startLoading</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This function will normally be called for you automatically by\n android.app.LoaderManager when the associated fragmen...</div><div class='long'><p>This function will normally be called for you automatically by\n android.app.LoaderManager when the associated fragment/activity\n is being started.  When using a Loader with android.app.LoaderManager,\n you <em>must not</em> call this method yourself, or you will conflict\n with its management of the Loader.</p>\n\n<p> Starts an asynchronous load of the Loader's data. When the result\n is ready the callbacks will be called on the process's main thread.\n If a previous load has been completed and is still valid\n the result may be passed to the callbacks immediately.\n The loader will monitor the source of\n the data set and may deliver future callbacks if the source changes.\n Calling <a href=\"#!/api/android.content.Loader-method-stopLoading\" rel=\"android.content.Loader-method-stopLoading\" class=\"docClass\">stopLoading</a> will stop the delivery of callbacks.</p>\n\n<p> <p>This updates the Loader's internal state so that\n <a href=\"#!/api/android.content.Loader-method-isStarted\" rel=\"android.content.Loader-method-isStarted\" class=\"docClass\">isStarted</a>() and <a href=\"#!/api/android.content.Loader-method-isReset\" rel=\"android.content.Loader-method-isReset\" class=\"docClass\">isReset</a>() will return the correct\n values, and then calls the implementation's onStartLoading().</p>\n\n<p> <p>Must be called from the process's main thread.</p>\n</div></div></div><div id='method-stopLoading' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-stopLoading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-stopLoading' class='name expandable'>stopLoading</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This function will normally be called for you automatically by\n android.app.LoaderManager when the associated fragmen...</div><div class='long'><p>This function will normally be called for you automatically by\n android.app.LoaderManager when the associated fragment/activity\n is being stopped.  When using a Loader with android.app.LoaderManager,\n you <em>must not</em> call this method yourself, or you will conflict\n with its management of the Loader.</p>\n\n<p> <p>Stops delivery of updates until the next time <a href=\"#!/api/android.content.Loader-method-startLoading\" rel=\"android.content.Loader-method-startLoading\" class=\"docClass\">startLoading</a>() is called.\n Implementations should <em>not</em> invalidate their data at this point --\n clients are still free to use the last data the loader reported.  They will,\n however, typically stop reporting new data if the data changes; they can\n still monitor for changes, but must not report them to the client until and\n if <a href=\"#!/api/android.content.Loader-method-startLoading\" rel=\"android.content.Loader-method-startLoading\" class=\"docClass\">startLoading</a>() is later called.</p>\n\n<p> <p>This updates the Loader's internal state so that\n <a href=\"#!/api/android.content.Loader-method-isStarted\" rel=\"android.content.Loader-method-isStarted\" class=\"docClass\">isStarted</a>() will return the correct\n value, and then calls the implementation's onStopLoading().</p>\n\n<p> <p>Must be called from the process's main thread.</p>\n</div></div></div><div id='method-takeContentChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-takeContentChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-takeContentChanged' class='name expandable'>takeContentChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Take the current flag indicating whether the loader's content had\n changed while it was stopped. ...</div><div class='long'><p>Take the current flag indicating whether the loader's content had\n changed while it was stopped.  If it had, true is returned and the\n flag is cleared.</p>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-unregisterListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-unregisterListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-unregisterListener' class='name expandable'>unregisterListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove a listener that was previously added with registerListener. ...</div><div class='long'><p>Remove a listener that was previously added with <a href=\"#!/api/android.content.Loader-method-registerListener\" rel=\"android.content.Loader-method-registerListener\" class=\"docClass\">registerListener</a>.</p>\n\n<p> Must be called from the process's main thread.</p>\n</div></div></div><div id='method-unregisterOnLoadCanceledListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.Loader'>android.content.Loader</span><br/><a href='source/Loader.html#android-content-Loader-method-unregisterOnLoadCanceledListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.Loader-method-unregisterOnLoadCanceledListener' class='name expandable'>unregisterOnLoadCanceledListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters a listener that was previously added with\n registerOnLoadCanceledListener. ...</div><div class='long'><p>Unregisters a listener that was previously added with\n <a href=\"#!/api/android.content.Loader-method-registerOnLoadCanceledListener\" rel=\"android.content.Loader-method-registerOnLoadCanceledListener\" class=\"docClass\">registerOnLoadCanceledListener</a>.</p>\n\n<p> Must be called from the process's main thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {android.content.Loader.OnLoadCanceledListener}<div class='sub-desc'><p>The listener to unregister.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.content.Loader</p>\n"}}});