Ext.data.JsonP.android_content_BroadcastReceiver({"tagname":"class","name":"android.content.BroadcastReceiver","autodetected":{},"files":[{"filename":"BroadcastReceiver.js","href":"BroadcastReceiver.html#android-content-BroadcastReceiver"}],"extends":"java.lang.Object","members":[{"name":"abortBroadcast","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-abortBroadcast","meta":{}},{"name":"clearAbortBroadcast","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-clearAbortBroadcast","meta":{}},{"name":"getAbortBroadcast","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-getAbortBroadcast","meta":{}},{"name":"getDebugUnregister","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-getDebugUnregister","meta":{}},{"name":"getResultCode","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-getResultCode","meta":{}},{"name":"getResultData","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-getResultData","meta":{}},{"name":"getResultExtras","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-getResultExtras","meta":{}},{"name":"goAsync","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-goAsync","meta":{}},{"name":"isInitialStickyBroadcast","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-isInitialStickyBroadcast","meta":{}},{"name":"isOrderedBroadcast","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-isOrderedBroadcast","meta":{}},{"name":"onReceive","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-onReceive","meta":{}},{"name":"peekService","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-peekService","meta":{}},{"name":"setDebugUnregister","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-setDebugUnregister","meta":{}},{"name":"setOrderedHint","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-setOrderedHint","meta":{}},{"name":"setResult","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-setResult","meta":{}},{"name":"setResultCode","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-setResultCode","meta":{}},{"name":"setResultData","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-setResultData","meta":{}},{"name":"setResultExtras","tagname":"method","owner":"android.content.BroadcastReceiver","id":"method-setResultExtras","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.BroadcastReceiver","short_doc":"Base class for code that receives and handles broadcast intents sent by\n android.content.Context.sendBroadcast(Intent). ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.BroadcastReceiver</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver' target='_blank'>BroadcastReceiver.js</a></div></pre><div class='doc-contents'><p>Base class for code that receives and handles broadcast intents sent by\n android.content.Context.sendBroadcast(Intent).</p>\n\n<p> <p>You can either dynamically register an instance of this class with\n <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">android.content.Context.registerReceiver()</a>\n or statically declare an implementation with the\n &lt;receiver&gt;\n tag in your <code>AndroidManifest.xml</code>.</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about using BroadcastReceiver, read the\n <a href=\"{@docRoot}guide/components/broadcasts.html\">Broadcasts</a> developer guide.</p></div></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abortBroadcast' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-abortBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-abortBroadcast' class='name expandable'>abortBroadcast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the flag indicating that this receiver should abort the\n current broadcast; only works with broadcasts sent thro...</div><div class='long'><p>Sets the flag indicating that this receiver should abort the\n current broadcast; only works with broadcasts sent through\n String)\n android.content.Context.sendOrderedBroadcast.  This will prevent\n any other broadcast receivers from receiving the broadcast. It will still\n call <a href=\"#!/api/android.content.BroadcastReceiver-method-onReceive\" rel=\"android.content.BroadcastReceiver-method-onReceive\" class=\"docClass\">onReceive</a> of the BroadcastReceiver that the caller of\n String)\n android.content.Context.sendOrderedBroadcast passed in.</p>\n\n<p> <p><strong>This method does not work with non-ordered broadcasts such\n as those sent with android.content.Context.sendBroadcast</strong></p></p>\n</div></div></div><div id='method-clearAbortBroadcast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-clearAbortBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-clearAbortBroadcast' class='name expandable'>clearAbortBroadcast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clears the flag indicating that this receiver should abort the current\n broadcast. ...</div><div class='long'><p>Clears the flag indicating that this receiver should abort the current\n broadcast.</p>\n</div></div></div><div id='method-getAbortBroadcast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-getAbortBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-getAbortBroadcast' class='name expandable'>getAbortBroadcast</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the flag indicating whether or not this receiver should\n abort the current broadcast. ...</div><div class='long'><p>Returns the flag indicating whether or not this receiver should\n abort the current broadcast.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the broadcast should be aborted.</p>\n</div></li></ul></div></div></div><div id='method-getDebugUnregister' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-getDebugUnregister' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-getDebugUnregister' class='name expandable'>getDebugUnregister</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the last value given to setDebugUnregister. ...</div><div class='long'><p>Return the last value given to <a href=\"#!/api/android.content.BroadcastReceiver-method-setDebugUnregister\" rel=\"android.content.BroadcastReceiver-method-setDebugUnregister\" class=\"docClass\">setDebugUnregister</a>.</p>\n</div></div></div><div id='method-getResultCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-getResultCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-getResultCode' class='name expandable'>getResultCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current result code, as set by the previous receiver. ...</div><div class='long'><p>Retrieve the current result code, as set by the previous receiver.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int The current result code.</p>\n</div></li></ul></div></div></div><div id='method-getResultData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-getResultData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-getResultData' class='name expandable'>getResultData</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current result data, as set by the previous receiver. ...</div><div class='long'><p>Retrieve the current result data, as set by the previous receiver.\n Often this is null.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>String The current result data; may be null.</p>\n</div></li></ul></div></div></div><div id='method-getResultExtras' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-getResultExtras' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-getResultExtras' class='name expandable'>getResultExtras</a>( <span class='pre'>makeMap</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current result extra data, as set by the previous receiver. ...</div><div class='long'><p>Retrieve the current result extra data, as set by the previous receiver.\n Any changes you make to the returned Map will be propagated to the next\n receiver.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>makeMap</span> : Boolean<div class='sub-desc'><p>If true then a new empty Map will be made for you if the\n                current Map is null; if false you should be prepared to\n                receive a null Map.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>Map The current extras map.</p>\n</div></li></ul></div></div></div><div id='method-goAsync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-goAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-goAsync' class='name expandable'>goAsync</a>( <span class='pre'></span> ) : Object {android.content.BroadcastReceiver.PendingResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>This can be called by an application in onReceive to allow\n it to keep the broadcast active after returning from that...</div><div class='long'><p>This can be called by an application in <a href=\"#!/api/android.content.BroadcastReceiver-method-onReceive\" rel=\"android.content.BroadcastReceiver-method-onReceive\" class=\"docClass\">onReceive</a> to allow\n it to keep the broadcast active after returning from that function.\n This does <em>not</em> change the expectation of being relatively\n responsive to the broadcast, but does allow\n the implementation to move work related to it over to another thread\n to avoid glitching the main UI thread due to disk IO.</p>\n\n<p> <p>As a general rule, broadcast receivers are allowed to run for up to 10 seconds\n before they system will consider them non-responsive and ANR the app.  Since these usually\n execute on the app's main thread, they are already bound by the ~5 second time limit\n of various operations that can happen there (not to mention just avoiding UI jank), so\n the receive limit is generally not of concern.  However, once you use {@code goAsync}, though\n able to be off the main thread, the broadcast execution limit still applies, and that\n includes the time spent between calling this method and ultimately\n android.content.BroadcastReceiver.PendingResult.finish().</p></p>\n\n<p> <p>If you are taking advantage of this method to have more time to execute, it is useful\n to know that the available time can be longer in certain situations.  In particular, if\n the broadcast you are receiving is not a foreground broadcast (that is, the sender has not\n used <a href=\"#!/api/android.content.Intent-property-FLAG_RECEIVER_FOREGROUND\" rel=\"android.content.Intent-property-FLAG_RECEIVER_FOREGROUND\" class=\"docClass\">android.content.Intent.FLAG_RECEIVER_FOREGROUND</a>), then more time is allowed for the receivers\n to run, allowing them to execute for 30 seconds or even a bit more.  This is something that\n receivers should rarely take advantage of (long work should be punted to another system\n facility such as android.app.job.JobScheduler, android.app.Service, or\n see especially android.support.v4.app.JobIntentService), but can be useful in\n certain rare cases where it is necessary to do some work as soon as the broadcast is\n delivered.  Keep in mind that the work you do here will block further broadcasts until\n it completes, so taking advantage of this at all excessively can be counter-productive\n and cause later events to be received more slowly.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.BroadcastReceiver.PendingResult}</span><div class='sub-desc'><p>Returns a PendingResult representing the result of\n the active broadcast.  The BroadcastRecord itself is no longer active;\n all data and other interaction must go through PendingResult\n APIs.  The PendingResult.finish() method\n must be called once processing of the broadcast is done.</p>\n</div></li></ul></div></div></div><div id='method-isInitialStickyBroadcast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-isInitialStickyBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-isInitialStickyBroadcast' class='name expandable'>isInitialStickyBroadcast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the receiver is currently processing the initial\n value of a sticky broadcast -- that is, the value t...</div><div class='long'><p>Returns true if the receiver is currently processing the initial\n value of a sticky broadcast -- that is, the value that was last\n broadcast and is currently held in the sticky cache, so this is\n not directly the result of a broadcast right now.</p>\n</div></div></div><div id='method-isOrderedBroadcast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-isOrderedBroadcast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-isOrderedBroadcast' class='name expandable'>isOrderedBroadcast</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the receiver is currently processing an ordered\n broadcast. ...</div><div class='long'><p>Returns true if the receiver is currently processing an ordered\n broadcast.</p>\n</div></div></div><div id='method-onReceive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-onReceive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-onReceive' class='name expandable'>onReceive</a>( <span class='pre'>context, intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called when the BroadcastReceiver is receiving an Intent\n broadcast. ...</div><div class='long'><p>This method is called when the BroadcastReceiver is receiving an Intent\n broadcast.  During this time you can use the other methods on\n BroadcastReceiver to view/modify the current result values.  This method\n is always called within the main thread of its process, unless you\n explicitly asked for it to be scheduled on a different thread using\n IntentFilter, String, android.os.Handler). When it runs on the main\n thread you should\n never perform long-running operations in it (there is a timeout of\n 10 seconds that the system allows before considering the receiver to\n be blocked and a candidate to be killed). You cannot launch a popup dialog\n in your implementation of onReceive().</p>\n\n<p> <p><b>If this BroadcastReceiver was launched through a &lt;receiver&gt; tag,\n then the object is no longer alive after returning from this\n function.</b> This means you should not perform any operations that\n return a result to you asynchronously. If you need to perform any follow up\n background work, schedule a android.app.job.JobService with\n android.app.job.JobScheduler.</p>\n\n<p> If you wish to interact with a service that is already running and previously\n bound using ServiceConnection, int) bindService(),\n you can use <a href=\"#!/api/android.content.BroadcastReceiver-method-peekService\" rel=\"android.content.BroadcastReceiver-method-peekService\" class=\"docClass\">peekService</a>.</p>\n\n<p> <p>The Intent filters used in <a href=\"#!/api/android.content.Context-method-registerReceiver\" rel=\"android.content.Context-method-registerReceiver\" class=\"docClass\">android.content.Context.registerReceiver</a>\n and in application manifests are <em>not</em> guaranteed to be exclusive. They\n are hints to the operating system about how to find suitable recipients. It is\n possible for senders to force delivery to specific recipients, bypassing filter\n resolution.  For this reason, android.content.Intent) onReceive()\n implementations should respond only to known actions, ignoring any unexpected\n Intents that they may receive.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The Context in which the receiver is running.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent being received.</p>\n</div></li></ul></div></div></div><div id='method-peekService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-peekService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-peekService' class='name expandable'>peekService</a>( <span class='pre'>myContext, service</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide a binder to an already-bound service. ...</div><div class='long'><p>Provide a binder to an already-bound service.  This method is synchronous\n and will not start the target service if it is not present, so it is safe\n to call from <a href=\"#!/api/android.content.BroadcastReceiver-method-onReceive\" rel=\"android.content.BroadcastReceiver-method-onReceive\" class=\"docClass\">onReceive</a>.</p>\n\n<p> For peekService() to return a non null android.os.IBinder interface\n the service must have published it before. In other words some component\n must have called ServiceConnection, int) on it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>myContext</span> : Object {Context}<div class='sub-desc'><p>The Context that had been passed to Intent)</p>\n</div></li><li><span class='pre'>service</span> : Object {Intent}<div class='sub-desc'><p>Identifies the already-bound service you wish to use. See\n ServiceConnection, int)\n for more information.</p>\n</div></li></ul></div></div></div><div id='method-setDebugUnregister' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-setDebugUnregister' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-setDebugUnregister' class='name expandable'>setDebugUnregister</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control inclusion of debugging help for mismatched\n calls to IntentFilter)\n android.content.Context.registerReceiver(). ...</div><div class='long'><p>Control inclusion of debugging help for mismatched\n calls to IntentFilter)\n android.content.Context.registerReceiver().\n If called with true, before given to registerReceiver(), then the\n callstack of the following android.content.Context.unregisterReceiver() call is retained, to be printed if a later\n incorrect unregister call is made.  Note that doing this requires retaining\n information about the BroadcastReceiver for the lifetime of the app,\n resulting in a leak -- this should only be used for debugging.</p>\n</div></div></div><div id='method-setOrderedHint' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-setOrderedHint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-setOrderedHint' class='name expandable'>setOrderedHint</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>For internal use, sets the hint about whether this BroadcastReceiver is\n running in ordered mode. ...</div><div class='long'><p>For internal use, sets the hint about whether this BroadcastReceiver is\n running in ordered mode.</p>\n</div></div></div><div id='method-setResult' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-setResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-setResult' class='name expandable'>setResult</a>( <span class='pre'>code, data, extras</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change all of the result data returned from this broadcasts; only works\n with broadcasts sent through\n String)\n andro...</div><div class='long'><p>Change all of the result data returned from this broadcasts; only works\n with broadcasts sent through\n String)\n android.content.Context.sendOrderedBroadcast.  All current result data is replaced\n by the value given to this method.</p>\n\n<p> <p><strong>This method does not work with non-ordered broadcasts such\n as those sent with android.content.Context.sendBroadcast</strong></p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>code</span> : Number<div class='sub-desc'><p>The new result code.  Often uses the\n Activity android.app.Activity.RESULT_CANCELED and\n android.app.Activity.RESULT_OK constants, though the\n actual meaning of this value is ultimately up to the broadcaster.</p>\n</div></li><li><span class='pre'>data</span> : String<div class='sub-desc'><p>The new result data.  This is an arbitrary\n string whose interpretation is up to the broadcaster; may be null.</p>\n</div></li><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>The new extra data map.  This is a Bundle\n holding arbitrary data, whose interpretation is up to the\n broadcaster.  Can be set to null.  This completely\n replaces the current map (if any).</p>\n</div></li></ul></div></div></div><div id='method-setResultCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-setResultCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-setResultCode' class='name expandable'>setResultCode</a>( <span class='pre'>code</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the current result code of this broadcast; only works with\n broadcasts sent through\n String)\n android.content....</div><div class='long'><p>Change the current result code of this broadcast; only works with\n broadcasts sent through\n String)\n android.content.Context.sendOrderedBroadcast.  Often uses the\n Activity android.app.Activity.RESULT_CANCELED and\n android.app.Activity.RESULT_OK constants, though the\n actual meaning of this value is ultimately up to the broadcaster.</p>\n\n<p> <p class=\"note\">This method does not work with non-ordered broadcasts such\n as those sent with android.content.Context.sendBroadcast</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>code</span> : Number<div class='sub-desc'><p>The new result code.\n@see <a href=\"#!/api/android.content.BroadcastReceiver-method-setResult\" rel=\"android.content.BroadcastReceiver-method-setResult\" class=\"docClass\">setResult</a>(int, String, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-setResultData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-setResultData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-setResultData' class='name expandable'>setResultData</a>( <span class='pre'>data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the current result data of this broadcast; only works with\n broadcasts sent through\n String)\n android.content....</div><div class='long'><p>Change the current result data of this broadcast; only works with\n broadcasts sent through\n String)\n android.content.Context.sendOrderedBroadcast.  This is an arbitrary\n string whose interpretation is up to the broadcaster.</p>\n\n<p> <p><strong>This method does not work with non-ordered broadcasts such\n as those sent with android.content.Context.sendBroadcast</strong></p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : String<div class='sub-desc'><p>The new result data; may be null.\n@see <a href=\"#!/api/android.content.BroadcastReceiver-method-setResult\" rel=\"android.content.BroadcastReceiver-method-setResult\" class=\"docClass\">setResult</a>(int, String, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-setResultExtras' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.BroadcastReceiver'>android.content.BroadcastReceiver</span><br/><a href='source/BroadcastReceiver.html#android-content-BroadcastReceiver-method-setResultExtras' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.BroadcastReceiver-method-setResultExtras' class='name expandable'>setResultExtras</a>( <span class='pre'>extras</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the current result extras of this broadcast; only works with\n broadcasts sent through\n String)\n android.conten...</div><div class='long'><p>Change the current result extras of this broadcast; only works with\n broadcasts sent through\n String)\n android.content.Context.sendOrderedBroadcast.  This is a Bundle\n holding arbitrary data, whose interpretation is up to the\n broadcaster.  Can be set to null.  Calling this method completely\n replaces the current map (if any).</p>\n\n<p> <p><strong>This method does not work with non-ordered broadcasts such\n as those sent with android.content.Context.sendBroadcast</strong></p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>The new extra data map; may be null.\n@see <a href=\"#!/api/android.content.BroadcastReceiver-method-setResult\" rel=\"android.content.BroadcastReceiver-method-setResult\" class=\"docClass\">setResult</a>(int, String, Bundle)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});