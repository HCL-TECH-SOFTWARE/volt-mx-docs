Ext.data.JsonP.android_content_UriMatcher({"tagname":"class","name":"android.content.UriMatcher","autodetected":{},"files":[{"filename":"UriMatcher.js","href":"UriMatcher.html#android-content-UriMatcher"}],"extends":"java.lang.Object","members":[{"name":"NO_MATCH","tagname":"property","owner":"android.content.UriMatcher","id":"property-NO_MATCH","meta":{}},{"name":"addURI","tagname":"method","owner":"android.content.UriMatcher","id":"method-addURI","meta":{}},{"name":"match","tagname":"method","owner":"android.content.UriMatcher","id":"method-match","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.content.UriMatcher","short_doc":"Utility class to aid in matching URIs in content providers. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.content.UriMatcher</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UriMatcher.html#android-content-UriMatcher' target='_blank'>UriMatcher.js</a></div></pre><div class='doc-contents'><p>Utility class to aid in matching URIs in content providers.</p>\n\n<p><p>To use this class, build up a tree of <code>UriMatcher</code> objects.\nFor example:\n<pre>    private static final int PEOPLE = 1;\n    private static final int PEOPLE_ID = 2;\n    private static final int PEOPLE_PHONES = 3;\n    private static final int PEOPLE_PHONES_ID = 4;\n    private static final int PEOPLE_CONTACTMETHODS = 7;\n    private static final int PEOPLE_CONTACTMETHODS_ID = 8;</pre></p>\n\n<pre><code>private static final int DELETED_PEOPLE = 20;\n\nprivate static final int PHONES = 9;\nprivate static final int PHONES_ID = 10;\nprivate static final int PHONES_FILTER = 14;\n\nprivate static final int CONTACTMETHODS = 18;\nprivate static final int CONTACTMETHODS_ID = 19;\n\nprivate static final int CALLS = 11;\nprivate static final int CALLS_ID = 12;\nprivate static final int CALLS_FILTER = 15;\n\nprivate static final UriMatcher sURIMatcher = new UriMatcher(UriMatcher.NO_MATCH);\n\nstatic\n{\n    sURIMatcher.addURI(\"contacts\", \"people\", PEOPLE);\n    sURIMatcher.addURI(\"contacts\", \"people/#\", PEOPLE_ID);\n    sURIMatcher.addURI(\"contacts\", \"people/#/phones\", PEOPLE_PHONES);\n    sURIMatcher.addURI(\"contacts\", \"people/#/phones/#\", PEOPLE_PHONES_ID);\n    sURIMatcher.addURI(\"contacts\", \"people/#/contact_methods\", PEOPLE_CONTACTMETHODS);\n    sURIMatcher.addURI(\"contacts\", \"people/#/contact_methods/#\", PEOPLE_CONTACTMETHODS_ID);\n    sURIMatcher.addURI(\"contacts\", \"deleted_people\", DELETED_PEOPLE);\n    sURIMatcher.addURI(\"contacts\", \"phones\", PHONES);\n    sURIMatcher.addURI(\"contacts\", \"phones/filter/*\", PHONES_FILTER);\n    sURIMatcher.addURI(\"contacts\", \"phones/#\", PHONES_ID);\n    sURIMatcher.addURI(\"contacts\", \"contact_methods\", CONTACTMETHODS);\n    sURIMatcher.addURI(\"contacts\", \"contact_methods/#\", CONTACTMETHODS_ID);\n    sURIMatcher.addURI(\"call_log\", \"calls\", CALLS);\n    sURIMatcher.addURI(\"call_log\", \"calls/filter/*\", CALLS_FILTER);\n    sURIMatcher.addURI(\"call_log\", \"calls/#\", CALLS_ID);\n}\n</code></pre>\n\n<p>\n<p>Starting from API level android.os.Build.VERSION_CODES.JELLY_BEAN_MR2, paths can start\n with a leading slash.  For example:\n<pre>        sURIMatcher.addURI(\"contacts\", \"/people\", PEOPLE);\n</pre>\n<p>Then when you need to match against a URI, call <a href=\"#!/api/android.content.UriMatcher-method-match\" rel=\"android.content.UriMatcher-method-match\" class=\"docClass\">match</a>, providing\nthe URL that you have been given.  You can use the result to build a query,\nreturn a type, insert or delete a row, or whatever you need, without duplicating\nall of the if-else logic that you would otherwise need.  For example:\n<pre>    public String getType(Uri url)\n    {\n        int match = sURIMatcher.match(url);\n        switch (match)\n        {\n            case PEOPLE:\n                return \"vnd.android.cursor.dir/person\";\n            case PEOPLE_ID:\n                return \"vnd.android.cursor.item/person\";\n... snip ...\n                return \"vnd.android.cursor.dir/snail-mail\";\n            case PEOPLE_ADDRESS_ID:\n                return \"vnd.android.cursor.item/snail-mail\";\n            default:\n                return null;\n        }\n    }\n</pre>\ninstead of:\n<pre>    public String getType(Uri url)\n    {\n        List<String> pathSegments = url.getPathSegments();\n        if (pathSegments.size() >= 2) {\n            if (\"people\".equals(pathSegments.get(1))) {\n                if (pathSegments.size() == 2) {\n                    return \"vnd.android.cursor.dir/person\";\n                } else if (pathSegments.size() == 3) {\n                    return \"vnd.android.cursor.item/person\";\n... snip ...\n                    return \"vnd.android.cursor.dir/snail-mail\";\n                } else if (pathSegments.size() == 3) {\n                    return \"vnd.android.cursor.item/snail-mail\";\n                }\n            }\n        }\n        return null;\n    }\n</String></pre></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-NO_MATCH' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.UriMatcher'>android.content.UriMatcher</span><br/><a href='source/UriMatcher.html#android-content-UriMatcher-property-NO_MATCH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.UriMatcher-property-NO_MATCH' class='name expandable'>NO_MATCH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addURI' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.UriMatcher'>android.content.UriMatcher</span><br/><a href='source/UriMatcher.html#android-content-UriMatcher-method-addURI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.UriMatcher-method-addURI' class='name expandable'>addURI</a>( <span class='pre'>authority, path, code</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a URI to match, and the code to return when this URI is\n matched. ...</div><div class='long'><p>Add a URI to match, and the code to return when this URI is\n matched. URI nodes may be exact match string, the token \"*\"\n that matches any text, or the token \"#\" that matches only\n numbers.\n <p>\n Starting from API level android.os.Build.VERSION_CODES.JELLY_BEAN_MR2,\n this method will accept a leading slash in the path.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>authority</span> : String<div class='sub-desc'><p>the authority to match</p>\n</div></li><li><span class='pre'>path</span> : String<div class='sub-desc'><p>the path to match. * may be used as a wild card for\n any text, and # may be used as a wild card for numbers.</p>\n</div></li><li><span class='pre'>code</span> : Number<div class='sub-desc'><p>the code that is returned when a URI is matched\n against the given components. Must be positive.</p>\n</div></li></ul></div></div></div><div id='method-match' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.content.UriMatcher'>android.content.UriMatcher</span><br/><a href='source/UriMatcher.html#android-content-UriMatcher-method-match' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.content.UriMatcher-method-match' class='name expandable'>match</a>( <span class='pre'>uri</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Try to match against the path in a url. ...</div><div class='long'><p>Try to match against the path in a url.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The url whose path we will match against.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The code for the matched node (added using addURI),\n or -1 if there is no matched node.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});