Ext.data.JsonP.com_android_server_connectivity_Vpn({"tagname":"class","name":"com.android.server.connectivity.Vpn","autodetected":{},"files":[{"filename":"Vpn.js","href":"Vpn.html#com-android-server-connectivity-Vpn"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"addAddress","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-addAddress","meta":{}},{"name":"appliesToUid","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-appliesToUid","meta":{}},{"name":"applyUnderlyingCapabilities","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-applyUnderlyingCapabilities","meta":{}},{"name":"establish","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-establish","meta":{}},{"name":"getAlwaysOn","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getAlwaysOn","meta":{}},{"name":"getAlwaysOnPackage","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getAlwaysOnPackage","meta":{}},{"name":"getLegacyVpnConfig","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getLegacyVpnConfig","meta":{}},{"name":"getLegacyVpnInfo","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getLegacyVpnInfo","meta":{}},{"name":"getLegacyVpnInfoPrivileged","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getLegacyVpnInfoPrivileged","meta":{}},{"name":"getLockdown","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getLockdown","meta":{}},{"name":"getLockdownWhitelist","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getLockdownWhitelist","meta":{}},{"name":"getNetId","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getNetId","meta":{}},{"name":"getNetworkInfo","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getNetworkInfo","meta":{}},{"name":"getUnderlyingNetworks","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getUnderlyingNetworks","meta":{}},{"name":"getVpnConfig","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getVpnConfig","meta":{}},{"name":"getVpnInfo","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-getVpnInfo","meta":{}},{"name":"interfaceStatusChanged","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-interfaceStatusChanged","meta":{}},{"name":"isAlwaysOnPackageSupported","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-isAlwaysOnPackageSupported","meta":{}},{"name":"isBlockingUid","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-isBlockingUid","meta":{}},{"name":"onUserAdded","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-onUserAdded","meta":{}},{"name":"onUserRemoved","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-onUserRemoved","meta":{}},{"name":"onUserStopped","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-onUserStopped","meta":{}},{"name":"prepare","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-prepare","meta":{}},{"name":"removeAddress","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-removeAddress","meta":{}},{"name":"setAlwaysOnPackage","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-setAlwaysOnPackage","meta":{}},{"name":"setEnableTeardown","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-setEnableTeardown","meta":{}},{"name":"setLockdown","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-setLockdown","meta":{}},{"name":"setPackageAuthorization","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-setPackageAuthorization","meta":{}},{"name":"setUnderlyingNetworks","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-setUnderlyingNetworks","meta":{}},{"name":"startAlwaysOnVpn","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-startAlwaysOnVpn","meta":{}},{"name":"startLegacyVpn","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-startLegacyVpn","meta":{}},{"name":"startLegacyVpnPrivileged","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-startLegacyVpnPrivileged","meta":{}},{"name":"stopLegacyVpnPrivileged","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-stopLegacyVpnPrivileged","meta":{}},{"name":"updateCapabilities","tagname":"method","owner":"com.android.server.connectivity.Vpn","id":"method-updateCapabilities","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.connectivity.Vpn","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.connectivity.Vpn</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Vpn.html#com-android-server-connectivity-Vpn' target='_blank'>Vpn.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addAddress' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-addAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-addAddress' class='name expandable'>addAddress</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-appliesToUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-appliesToUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-appliesToUid' class='name expandable'>appliesToUid</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-applyUnderlyingCapabilities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-applyUnderlyingCapabilities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-applyUnderlyingCapabilities' class='name expandable'>applyUnderlyingCapabilities</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-establish' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-establish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-establish' class='name expandable'>establish</a>( <span class='pre'>config</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Establish a VPN network and return the file descriptor of the VPN interface. ...</div><div class='long'><p>Establish a VPN network and return the file descriptor of the VPN interface. This methods\n returns {@code null} if the application is revoked or not prepared.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {VpnConfig}<div class='sub-desc'><p>The parameters to configure the network.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>The file descriptor of the VPN interface.</p>\n</div></li></ul></div></div></div><div id='method-getAlwaysOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getAlwaysOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getAlwaysOn' class='name expandable'>getAlwaysOn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether VPN is configured as always-on. ...</div><div class='long'><p>Returns whether VPN is configured as always-on.</p>\n</div></div></div><div id='method-getAlwaysOnPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getAlwaysOnPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getAlwaysOnPackage' class='name expandable'>getAlwaysOnPackage</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the package name of the VPN controller responsible for always-on VPN,\n         or {@code null} if none is set or always-on VPN is controlled through\n         lockdown instead.</p>\n</div></li></ul></div></div></div><div id='method-getLegacyVpnConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getLegacyVpnConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getLegacyVpnConfig' class='name expandable'>getLegacyVpnConfig</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getLegacyVpnInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getLegacyVpnInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getLegacyVpnInfo' class='name expandable'>getLegacyVpnInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the information of the current ongoing legacy VPN. ...</div><div class='long'><p>Return the information of the current ongoing legacy VPN.</p>\n</div></div></div><div id='method-getLegacyVpnInfoPrivileged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getLegacyVpnInfoPrivileged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getLegacyVpnInfoPrivileged' class='name expandable'>getLegacyVpnInfoPrivileged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the information of the current ongoing legacy VPN. ...</div><div class='long'><p>Return the information of the current ongoing legacy VPN.\n Callers are responsible for checking permissions if needed.</p>\n</div></div></div><div id='method-getLockdown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getLockdown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getLockdown' class='name expandable'>getLockdown</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check whether to prevent all traffic outside of a VPN even when the VPN is not connected. ...</div><div class='long'><p>Check whether to prevent all traffic outside of a VPN even when the VPN is not connected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if VPN lockdown is enabled.</p>\n</div></li></ul></div></div></div><div id='method-getLockdownWhitelist' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getLockdownWhitelist' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getLockdownWhitelist' class='name expandable'>getLockdownWhitelist</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>an immutable list of packages whitelisted from always-on VPN lockdown.</p>\n</div></li></ul></div></div></div><div id='method-getNetId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getNetId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getNetId' class='name expandable'>getNetId</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getNetworkInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getNetworkInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getNetworkInfo' class='name expandable'>getNetworkInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getUnderlyingNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getUnderlyingNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getUnderlyingNetworks' class='name expandable'>getUnderlyingNetworks</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getVpnConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getVpnConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getVpnConfig' class='name expandable'>getVpnConfig</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the configuration of the currently running VPN. ...</div><div class='long'><p>Return the configuration of the currently running VPN.</p>\n</div></div></div><div id='method-getVpnInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-getVpnInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-getVpnInfo' class='name expandable'>getVpnInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method should only be called by ConnectivityService because it doesn't\n have enough data to fill VpnInfo.primary...</div><div class='long'><p>This method should only be called by ConnectivityService because it doesn't\n have enough data to fill VpnInfo.primaryUnderlyingIface field.</p>\n</div></div></div><div id='method-interfaceStatusChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-interfaceStatusChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-interfaceStatusChanged' class='name expandable'>interfaceStatusChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-isAlwaysOnPackageSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-isAlwaysOnPackageSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-isAlwaysOnPackageSupported' class='name expandable'>isAlwaysOnPackageSupported</a>( <span class='pre'>packageName</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if a VPN app supports always-on mode. ...</div><div class='long'><p>Checks if a VPN app supports always-on mode.</p>\n\n<p> In order to support the always-on feature, an app has to\n <ul>\n     <li>target API 24 or above, and\n     <li>not opt out through the com.android.server.connectivity.VpnService.SERVICE_META_DATA_SUPPORTS_ALWAYS_ON\n         meta-data field.\n </li></li></ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>the canonical package name of the VPN app</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if and only if the VPN app exists and supports always-on mode</p>\n</div></li></ul></div></div></div><div id='method-isBlockingUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-isBlockingUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-isBlockingUid' class='name expandable'>isBlockingUid</a>( <span class='pre'>uid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>The target uid.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if {@code uid} is included in one of the mBlockedUsers ranges and the\n VPN is not connected, or if the VPN is connected but does not apply to the {@code uid}.\n@apiNote This method don't check VPN lockdown status.\n@see #mBlockedUsers</p>\n</div></li></ul></div></div></div><div id='method-onUserAdded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-onUserAdded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-onUserAdded' class='name expandable'>onUserAdded</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates UID ranges for this VPN and also updates its internal capabilities. ...</div><div class='long'><p>Updates UID ranges for this VPN and also updates its internal capabilities.</p>\n\n<p> <p>Should be called on primary ConnectivityService thread.</p>\n</div></div></div><div id='method-onUserRemoved' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-onUserRemoved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-onUserRemoved' class='name expandable'>onUserRemoved</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates UID ranges for this VPN and also updates its capabilities. ...</div><div class='long'><p>Updates UID ranges for this VPN and also updates its capabilities.</p>\n\n<p> <p>Should be called on primary ConnectivityService thread.</p>\n</div></div></div><div id='method-onUserStopped' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-onUserStopped' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-onUserStopped' class='name expandable'>onUserStopped</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the user associated with this VPN has just been stopped. ...</div><div class='long'><p>Called when the user associated with this VPN has just been stopped.</p>\n</div></div></div><div id='method-prepare' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-prepare' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-prepare' class='name expandable'>prepare</a>( <span class='pre'>oldPackage, newPackage</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepare for a VPN application. ...</div><div class='long'><p>Prepare for a VPN application. This method is designed to solve\n race conditions. It first compares the current prepared package\n with {@code oldPackage}. If they are the same, the prepared\n package is revoked and replaced with {@code newPackage}. If\n {@code oldPackage} is {@code null}, the comparison is omitted.\n If {@code newPackage} is the same package or {@code null}, the\n revocation is omitted. This method returns {@code true} if the\n operation is succeeded.</p>\n\n<p> Legacy VPN is handled specially since it is not a real package.\n It uses com.android.server.connectivity.VpnConfig.LEGACY_VPN as its package name, and\n it can be revoked by itself.</p>\n\n<p> Note: when we added VPN pre-consent in\n https://android.googlesource.com/platform/frameworks/base/+/0554260\n the names oldPackage and newPackage became misleading, because when\n an app is pre-consented, we actually prepare oldPackage, not newPackage.</p>\n\n<p> Their meanings actually are:</p>\n\n<ul>\n<li>oldPackage non-null, newPackage null: App calling VpnService#prepare().</li>\n<li>oldPackage null, newPackage non-null: ConfirmDialog calling prepareVpn().</li>\n<li>oldPackage null, newPackage=LEGACY_VPN: Used internally to disconnect\nand revoke any current app VPN and re-prepare legacy vpn.</li>\n</ul>\n\n\n<p> TODO: Rename the variables - or split this method into two - and end this confusion.\n TODO: b/29032008 Migrate code from prepare(oldPackage=non-null, newPackage=LEGACY_VPN)\n to prepare(oldPackage=null, newPackage=LEGACY_VPN)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>oldPackage</span> : String<div class='sub-desc'><p>The package name of the old VPN application</p>\n</div></li><li><span class='pre'>newPackage</span> : String<div class='sub-desc'><p>The package name of the new VPN application</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the operation succeeded.</p>\n</div></li></ul></div></div></div><div id='method-removeAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-removeAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-removeAddress' class='name expandable'>removeAddress</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setAlwaysOnPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-setAlwaysOnPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-setAlwaysOnPackage' class='name expandable'>setAlwaysOnPackage</a>( <span class='pre'>packageName, lockdown, lockdownWhitelist</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Configures an always-on VPN connection through a specific application. ...</div><div class='long'><p>Configures an always-on VPN connection through a specific application.\n This connection is automatically granted and persisted after a reboot.</p>\n\n<p> <p>The designated package should exist and declare a com.android.server.connectivity.VpnService in its\n    manifest guarded by android.Manifest.permission.BIND_VPN_SERVICE,\n    otherwise the call will fail.</p>\n\n<p> <p>Note that this method does not check if the VPN app supports always-on mode. The check is\n    delayed to <a href=\"#!/api/com.android.server.connectivity.Vpn-method-startAlwaysOnVpn\" rel=\"com.android.server.connectivity.Vpn-method-startAlwaysOnVpn\" class=\"docClass\">startAlwaysOnVpn</a>(), which is always called immediately after this\n    method in android.net.IConnectivityManager.setAlwaysOnVpnPackage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>the package to designate as always-on VPN supplier.</p>\n</div></li><li><span class='pre'>lockdown</span> : Boolean<div class='sub-desc'><p>whether to prevent traffic outside of a VPN, for example while connecting.</p>\n</div></li><li><span class='pre'>lockdownWhitelist</span> : Object {java.util.List}<div class='sub-desc'><p>packages to be whitelisted from lockdown.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the package has been set as always-on, {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setEnableTeardown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-setEnableTeardown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-setEnableTeardown' class='name expandable'>setEnableTeardown</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set whether this object is responsible for watching for NetworkInfo\n teardown. ...</div><div class='long'><p>Set whether this object is responsible for watching for NetworkInfo\n teardown. When {@code false}, teardown is handled externally by someone\n else.</p>\n</div></div></div><div id='method-setLockdown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-setLockdown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-setLockdown' class='name expandable'>setLockdown</a>( <span class='pre'>lockdown</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Chooses whether to force all connections to go though VPN. ...</div><div class='long'><p>Chooses whether to force all connections to go though VPN.</p>\n\n<p> Used to enable/disable legacy VPN lockdown.</p>\n\n<p> This uses the same ip rule mechanism as\n boolean, List<String>); previous settings from calling\n that function will be replaced and saved with the always-on state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lockdown</span> : Boolean<div class='sub-desc'><p>whether to prevent all traffic outside of a VPN.</p>\n</div></li></ul></div></div></div><div id='method-setPackageAuthorization' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-setPackageAuthorization' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-setPackageAuthorization' class='name expandable'>setPackageAuthorization</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set whether a package has the ability to launch VPNs without user intervention. ...</div><div class='long'><p>Set whether a package has the ability to launch VPNs without user intervention.</p>\n</div></div></div><div id='method-setUnderlyingNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-setUnderlyingNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-setUnderlyingNetworks' class='name expandable'>setUnderlyingNetworks</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates underlying network set. ...</div><div class='long'><p>Updates underlying network set.</p>\n\n<p> <p>Note: Does not updates capabilities. Call <a href=\"#!/api/com.android.server.connectivity.Vpn-method-updateCapabilities\" rel=\"com.android.server.connectivity.Vpn-method-updateCapabilities\" class=\"docClass\">updateCapabilities</a> from\n ConnectivityService thread to get updated capabilities.</p>\n</div></div></div><div id='method-startAlwaysOnVpn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-startAlwaysOnVpn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-startAlwaysOnVpn' class='name expandable'>startAlwaysOnVpn</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the service was started, the service was already connected, or there\n         was no always-on VPN to start. {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-startLegacyVpn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-startLegacyVpn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-startLegacyVpn' class='name expandable'>startLegacyVpn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Start legacy VPN, controlling native daemons as needed. ...</div><div class='long'><p>Start legacy VPN, controlling native daemons as needed. Creates a\n secondary thread to perform connection work, returning quickly.</p>\n\n<p> Should only be called to respond to Binder requests as this enforces caller permission. Use\n KeyStore, LinkProperties) to skip the\n permission check only when the caller is trusted (or the call is initiated by the system).</p>\n</div></div></div><div id='method-startLegacyVpnPrivileged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-startLegacyVpnPrivileged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-startLegacyVpnPrivileged' class='name expandable'>startLegacyVpnPrivileged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like KeyStore, LinkProperties), but does not check\n permissions under the assumption that the caller is the system. ...</div><div class='long'><p>Like KeyStore, LinkProperties), but does not check\n permissions under the assumption that the caller is the system.</p>\n\n<p> Callers are responsible for checking permissions if needed.</p>\n</div></div></div><div id='method-stopLegacyVpnPrivileged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-stopLegacyVpnPrivileged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-stopLegacyVpnPrivileged' class='name expandable'>stopLegacyVpnPrivileged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop legacy VPN. ...</div><div class='long'><p>Stop legacy VPN. Permissions must be checked by callers.</p>\n</div></div></div><div id='method-updateCapabilities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.Vpn'>com.android.server.connectivity.Vpn</span><br/><a href='source/Vpn.html#com-android-server-connectivity-Vpn-method-updateCapabilities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.Vpn-method-updateCapabilities' class='name expandable'>updateCapabilities</a>( <span class='pre'>defaultNetwork</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates mNetworkCapabilities based on current underlying networks and returns a\n defensive copy. ...</div><div class='long'><p>Updates mNetworkCapabilities based on current underlying networks and returns a\n defensive copy.</p>\n\n<p> <p>Does not propagate updated capabilities to apps.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>defaultNetwork</span> : Object {Network}<div class='sub-desc'><p>underlying network for VPNs following platform's default</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});