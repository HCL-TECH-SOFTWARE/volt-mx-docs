Ext.data.JsonP.com_android_server_connectivity_TcpKeepaliveController({"tagname":"class","name":"com.android.server.connectivity.TcpKeepaliveController","autodetected":{},"files":[{"filename":"TcpKeepaliveController.js","href":"TcpKeepaliveController.html#com-android-server-connectivity-TcpKeepaliveController"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"getTcpKeepalivePacket","tagname":"method","owner":"com.android.server.connectivity.TcpKeepaliveController","id":"method-getTcpKeepalivePacket","meta":{}},{"name":"startSocketMonitor","tagname":"method","owner":"com.android.server.connectivity.TcpKeepaliveController","id":"method-startSocketMonitor","meta":{}},{"name":"stopSocketMonitor","tagname":"method","owner":"com.android.server.connectivity.TcpKeepaliveController","id":"method-stopSocketMonitor","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.connectivity.TcpKeepaliveController","short_doc":"Manage tcp socket which offloads tcp keepalive. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.connectivity.TcpKeepaliveController</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/TcpKeepaliveController.html#com-android-server-connectivity-TcpKeepaliveController' target='_blank'>TcpKeepaliveController.js</a></div></pre><div class='doc-contents'><p>Manage tcp socket which offloads tcp keepalive.</p>\n\n<p> The input socket will be changed to repair mode and the application\n will not have permission to read/write data. If the application wants\n to write data, it must stop tcp keepalive offload to leave repair mode\n first. If a remote packet arrives, repair mode will be turned off and\n offload will be stopped. The application will receive a callback to know\n it can start reading data.</p>\n\n<p> {start,stop}SocketMonitor are thread-safe, but care must be taken in the\n order in which they are called. Please note that while calling\n Messenger, int) multiple times\n with either the same slot or the same FileDescriptor without stopping it in\n between will result in an exception, calling <a href=\"#!/api/com.android.server.connectivity.TcpKeepaliveController-method-stopSocketMonitor\" rel=\"com.android.server.connectivity.TcpKeepaliveController-method-stopSocketMonitor\" class=\"docClass\">stopSocketMonitor</a>(int)\n multiple times with the same int is explicitly a no-op.\n Please also note that switching the socket to repair mode is not synchronized\n with either of these operations and has to be done in an orderly fashion\n with stopSocketMonitor. Take care in calling these in the right order.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getTcpKeepalivePacket' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.TcpKeepaliveController'>com.android.server.connectivity.TcpKeepaliveController</span><br/><a href='source/TcpKeepaliveController.html#com-android-server-connectivity-TcpKeepaliveController-method-getTcpKeepalivePacket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.TcpKeepaliveController-method-getTcpKeepalivePacket' class='name expandable'>getTcpKeepalivePacket</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Build tcp keepalive packet. ...</div><div class='long'><p>Build tcp keepalive packet.</p>\n</div></div></div><div id='method-startSocketMonitor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.TcpKeepaliveController'>com.android.server.connectivity.TcpKeepaliveController</span><br/><a href='source/TcpKeepaliveController.html#com-android-server-connectivity-TcpKeepaliveController-method-startSocketMonitor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.TcpKeepaliveController-method-startSocketMonitor' class='name expandable'>startSocketMonitor</a>( <span class='pre'>fd, ki, slot</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Start monitoring incoming packets. ...</div><div class='long'><p>Start monitoring incoming packets.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fd</span> : Object {FileDescriptor}<div class='sub-desc'><p>socket fd to monitor.</p>\n</div></li><li><span class='pre'>ki</span> : Object {KeepaliveTracker.KeepaliveInfo}<div class='sub-desc'><p>a KeepaliveInfo that tracks information about a socket keepalive.</p>\n</div></li><li><span class='pre'>slot</span> : Number<div class='sub-desc'><p>keepalive slot.</p>\n</div></li></ul></div></div></div><div id='method-stopSocketMonitor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.connectivity.TcpKeepaliveController'>com.android.server.connectivity.TcpKeepaliveController</span><br/><a href='source/TcpKeepaliveController.html#com-android-server-connectivity-TcpKeepaliveController-method-stopSocketMonitor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.connectivity.TcpKeepaliveController-method-stopSocketMonitor' class='name expandable'>stopSocketMonitor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop socket monitor ...</div><div class='long'><p>Stop socket monitor</p>\n</div></div></div></div></div></div></div>","meta":{}});