Ext.data.JsonP.com_android_server_wm_WindowManagerInternal({"tagname":"class","name":"com.android.server.wm.WindowManagerInternal","autodetected":{},"files":[{"filename":"WindowManagerInternal.js","href":"WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"addNonHighRefreshRatePackage","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-addNonHighRefreshRatePackage","meta":{}},{"name":"addWindowToken","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-addWindowToken","meta":{}},{"name":"clearForcedDisplaySize","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-clearForcedDisplaySize","meta":{}},{"name":"computeWindowsForAccessibility","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-computeWindowsForAccessibility","meta":{}},{"name":"getCompatibleMagnificationSpecForWindow","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getCompatibleMagnificationSpecForWindow","meta":{}},{"name":"getDisplayIdForWindow","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getDisplayIdForWindow","meta":{}},{"name":"getFocusedWindowToken","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getFocusedWindowToken","meta":{}},{"name":"getInputMethodWindowVisibleHeight","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getInputMethodWindowVisibleHeight","meta":{}},{"name":"getMagnificationRegion","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getMagnificationRegion","meta":{}},{"name":"getTopFocusedDisplayId","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getTopFocusedDisplayId","meta":{}},{"name":"getWindowFrame","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getWindowFrame","meta":{}},{"name":"getWindowOwnerUserId","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-getWindowOwnerUserId","meta":{}},{"name":"isHardKeyboardAvailable","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-isHardKeyboardAvailable","meta":{}},{"name":"isInputMethodClientFocus","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-isInputMethodClientFocus","meta":{}},{"name":"isKeyguardLocked","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-isKeyguardLocked","meta":{}},{"name":"isKeyguardShowingAndNotOccluded","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-isKeyguardShowingAndNotOccluded","meta":{}},{"name":"isStackVisibleLw","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-isStackVisibleLw","meta":{}},{"name":"isUidAllowedOnDisplay","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-isUidAllowedOnDisplay","meta":{}},{"name":"isUidFocused","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-isUidFocused","meta":{}},{"name":"lockNow","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-lockNow","meta":{}},{"name":"registerAppTransitionListener","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-registerAppTransitionListener","meta":{}},{"name":"registerDragDropControllerCallback","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-registerDragDropControllerCallback","meta":{}},{"name":"removeNonHighRefreshRatePackage","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-removeNonHighRefreshRatePackage","meta":{}},{"name":"removeWindowToken","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-removeWindowToken","meta":{}},{"name":"reportPasswordChanged","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-reportPasswordChanged","meta":{}},{"name":"requestTraversalFromDisplayManager","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-requestTraversalFromDisplayManager","meta":{}},{"name":"setForceShowMagnifiableBounds","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setForceShowMagnifiableBounds","meta":{}},{"name":"setForcedDisplaySize","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setForcedDisplaySize","meta":{}},{"name":"setInputFilter","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setInputFilter","meta":{}},{"name":"setMagnificationCallbacks","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setMagnificationCallbacks","meta":{}},{"name":"setMagnificationSpec","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setMagnificationSpec","meta":{}},{"name":"setOnHardKeyboardStatusChangeListener","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setOnHardKeyboardStatusChangeListener","meta":{}},{"name":"setVr2dDisplayId","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setVr2dDisplayId","meta":{}},{"name":"setWindowsForAccessibilityCallback","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-setWindowsForAccessibilityCallback","meta":{}},{"name":"shouldShowIme","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-shouldShowIme","meta":{}},{"name":"shouldShowSystemDecorOnDisplay","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-shouldShowSystemDecorOnDisplay","meta":{}},{"name":"showGlobalActions","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-showGlobalActions","meta":{}},{"name":"updateInputMethodTargetWindow","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-updateInputMethodTargetWindow","meta":{}},{"name":"updateInputMethodWindowStatus","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-updateInputMethodWindowStatus","meta":{}},{"name":"waitForAllWindowsDrawn","tagname":"method","owner":"com.android.server.wm.WindowManagerInternal","id":"method-waitForAllWindowsDrawn","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.wm.WindowManagerInternal","short_doc":"Window manager local system service interface. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.wm.WindowManagerInternal</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal' target='_blank'>WindowManagerInternal.js</a></div></pre><div class='doc-contents'><p>Window manager local system service interface.</p>\n\n<p> Only for use within the system server.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addNonHighRefreshRatePackage' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-addNonHighRefreshRatePackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-addNonHighRefreshRatePackage' class='name expandable'>addNonHighRefreshRatePackage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell window manager about a package that should not be running with high refresh rate\n setting until removeNonHighRef...</div><div class='long'><p>Tell window manager about a package that should not be running with high refresh rate\n setting until removeNonHighRefreshRatePackage is called for the same package.</p>\n\n<p> This must not be called again for the same package.</p>\n</div></div></div><div id='method-addWindowToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-addWindowToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-addWindowToken' class='name expandable'>addWindowToken</a>( <span class='pre'>token, type, displayId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a window token for a given window type. ...</div><div class='long'><p>Adds a window token for a given window type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>The token to add.</p>\n</div></li><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>The window type.</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The display to add the token to.</p>\n</div></li></ul></div></div></div><div id='method-clearForcedDisplaySize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-clearForcedDisplaySize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-clearForcedDisplaySize' class='name expandable'>clearForcedDisplaySize</a>( <span class='pre'>displayId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Recover the display size to real display size. ...</div><div class='long'><p>Recover the display size to real display size.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The display to recover the display size.</p>\n</div></li></ul></div></div></div><div id='method-computeWindowsForAccessibility' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-computeWindowsForAccessibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-computeWindowsForAccessibility' class='name expandable'>computeWindowsForAccessibility</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Requests the window manager to resend the windows for accessibility. ...</div><div class='long'><p>Requests the window manager to resend the windows for accessibility.</p>\n</div></div></div><div id='method-getCompatibleMagnificationSpecForWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getCompatibleMagnificationSpecForWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getCompatibleMagnificationSpecForWindow' class='name expandable'>getCompatibleMagnificationSpecForWindow</a>( <span class='pre'>windowToken</span> ) : Object {android.view.MagnificationSpec}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the magnification and translation applied to a window given its token. ...</div><div class='long'><p>Gets the magnification and translation applied to a window given its token.\n Not all windows are magnified and the window manager policy determines which\n windows are magnified. The returned result also takes into account the compat\n scale if necessary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>windowToken</span> : Object {IBinder}<div class='sub-desc'><p>The window's token.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.MagnificationSpec}</span><div class='sub-desc'><p>The magnification spec for the window.\n@see <a href=\"#!/api/com.android.server.wm.WindowManagerInternal-method-setMagnificationCallbacks\" rel=\"com.android.server.wm.WindowManagerInternal-method-setMagnificationCallbacks\" class=\"docClass\">setMagnificationCallbacks</a>(int, MagnificationCallbacks)</p>\n</div></li></ul></div></div></div><div id='method-getDisplayIdForWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getDisplayIdForWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getDisplayIdForWindow' class='name expandable'>getDisplayIdForWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the display Id for given window. ...</div><div class='long'><p>Return the display Id for given window.</p>\n</div></div></div><div id='method-getFocusedWindowToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getFocusedWindowToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getFocusedWindowToken' class='name expandable'>getFocusedWindowToken</a>( <span class='pre'></span> ) : Object {android.os.IBinder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the token of the window that has input focus. ...</div><div class='long'><p>Gets the token of the window that has input focus.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.IBinder}</span><div class='sub-desc'><p>The token.</p>\n</div></li></ul></div></div></div><div id='method-getInputMethodWindowVisibleHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getInputMethodWindowVisibleHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getInputMethodWindowVisibleHeight' class='name expandable'>getInputMethodWindowVisibleHeight</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a height of input method window for given display. ...</div><div class='long'><p>Retrieves a height of input method window for given display.</p>\n</div></div></div><div id='method-getMagnificationRegion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getMagnificationRegion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getMagnificationRegion' class='name expandable'>getMagnificationRegion</a>( <span class='pre'>displayId, magnificationRegion</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains the magnification regions. ...</div><div class='long'><p>Obtains the magnification regions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The logical display id.</p>\n</div></li><li><span class='pre'>magnificationRegion</span> : Object {Region}<div class='sub-desc'><p>the current magnification region</p>\n</div></li></ul></div></div></div><div id='method-getTopFocusedDisplayId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getTopFocusedDisplayId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getTopFocusedDisplayId' class='name expandable'>getTopFocusedDisplayId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The top focused display ID.</p>\n</div></li></ul></div></div></div><div id='method-getWindowFrame' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getWindowFrame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getWindowFrame' class='name expandable'>getWindowFrame</a>( <span class='pre'>token, outBounds</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the frame of a window given its token. ...</div><div class='long'><p>Gets the frame of a window given its token.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>The token.</p>\n</div></li><li><span class='pre'>outBounds</span> : Object {Rect}<div class='sub-desc'><p>The frame to populate.</p>\n</div></li></ul></div></div></div><div id='method-getWindowOwnerUserId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-getWindowOwnerUserId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-getWindowOwnerUserId' class='name expandable'>getWindowOwnerUserId</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the user that owns the given window, android.os.UserHandle.USER_NULL if\n the window token is not found. ...</div><div class='long'><p>Return the user that owns the given window, android.os.UserHandle.USER_NULL if\n the window token is not found.</p>\n</div></div></div><div id='method-isHardKeyboardAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-isHardKeyboardAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-isHardKeyboardAvailable' class='name expandable'>isHardKeyboardAvailable</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true when the hardware keyboard is available. ...</div><div class='long'><p>Returns true when the hardware keyboard is available.</p>\n</div></div></div><div id='method-isInputMethodClientFocus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-isInputMethodClientFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-isInputMethodClientFocus' class='name expandable'>isInputMethodClientFocus</a>( <span class='pre'>uid, pid, displayId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the specified IME client has IME focus or not. ...</div><div class='long'><p>Checks whether the specified IME client has IME focus or not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>UID of the process to be queried</p>\n</div></li><li><span class='pre'>pid</span> : Number<div class='sub-desc'><p>PID of the process to be queried</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>Display ID reported from the client. Note that this method also verifies\n                  whether the specified process is allowed to access to this display or not</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the IME client specified with {@code uid}, {@code pid}, and\n         {@code displayId} has IME focus</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardLocked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-isKeyguardLocked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-isKeyguardLocked' class='name expandable'>isKeyguardLocked</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the keyguard is engaged.</p>\n</div></li></ul></div></div></div><div id='method-isKeyguardShowingAndNotOccluded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-isKeyguardShowingAndNotOccluded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-isKeyguardShowingAndNotOccluded' class='name expandable'>isKeyguardShowingAndNotOccluded</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the keyguard is showing and not occluded.</p>\n</div></li></ul></div></div></div><div id='method-isStackVisibleLw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-isStackVisibleLw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-isStackVisibleLw' class='name expandable'>isStackVisibleLw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if a stack in the windowing mode is currently visible. ...</div><div class='long'><p>Returns true if a stack in the windowing mode is currently visible.</p>\n</div></div></div><div id='method-isUidAllowedOnDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-isUidAllowedOnDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-isUidAllowedOnDisplay' class='name expandable'>isUidAllowedOnDisplay</a>( <span class='pre'>displayId, uid</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the given {@code uid} is allowed to use the given {@code displayId} or not. ...</div><div class='long'><p>Checks whether the given {@code uid} is allowed to use the given {@code displayId} or not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>Display ID to be checked</p>\n</div></li><li><span class='pre'>uid</span> : Number<div class='sub-desc'><p>UID to be checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the given {@code uid} is allowed to use the given {@code displayId}</p>\n</div></li></ul></div></div></div><div id='method-isUidFocused' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-isUidFocused' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-isUidFocused' class='name expandable'>isUidFocused</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns {@code true} if a Window owned by {@code uid} has focus. ...</div><div class='long'><p>Returns {@code true} if a Window owned by {@code uid} has focus.</p>\n</div></div></div><div id='method-lockNow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-lockNow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-lockNow' class='name expandable'>lockNow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>@see android.view.IWindowManager#lockNow ...</div><div class='long'><p>@see android.view.IWindowManager#lockNow</p>\n</div></div></div><div id='method-registerAppTransitionListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-registerAppTransitionListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-registerAppTransitionListener' class='name expandable'>registerAppTransitionListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a listener to be notified about app transition events. ...</div><div class='long'><p>Registers a listener to be notified about app transition events.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {WindowManagerInternal.AppTransitionListener}<div class='sub-desc'><p>The listener to register.</p>\n</div></li></ul></div></div></div><div id='method-registerDragDropControllerCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-registerDragDropControllerCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-registerDragDropControllerCallback' class='name expandable'>registerDragDropControllerCallback</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets callback to DragDropController. ...</div><div class='long'><p>Sets callback to DragDropController.</p>\n</div></div></div><div id='method-removeNonHighRefreshRatePackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-removeNonHighRefreshRatePackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-removeNonHighRefreshRatePackage' class='name expandable'>removeNonHighRefreshRatePackage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tell window manager to stop constraining refresh rate for the given package. ...</div><div class='long'><p>Tell window manager to stop constraining refresh rate for the given package.</p>\n</div></div></div><div id='method-removeWindowToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-removeWindowToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-removeWindowToken' class='name expandable'>removeWindowToken</a>( <span class='pre'>token, removeWindows, displayId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a window token. ...</div><div class='long'><p>Removes a window token.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>The toke to remove.</p>\n</div></li><li><span class='pre'>removeWindows</span> : Boolean<div class='sub-desc'><p>Whether to also remove the windows associated with the token.</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The display to remove the token from.</p>\n</div></li></ul></div></div></div><div id='method-reportPasswordChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-reportPasswordChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-reportPasswordChanged' class='name expandable'>reportPasswordChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reports that the password for the given user has changed. ...</div><div class='long'><p>Reports that the password for the given user has changed.</p>\n</div></div></div><div id='method-requestTraversalFromDisplayManager' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-requestTraversalFromDisplayManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-requestTraversalFromDisplayManager' class='name expandable'>requestTraversalFromDisplayManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request that the window manager call\n DisplayManagerInternal.performTraversalInTransactionFromWindowManager\n within a...</div><div class='long'><p>Request that the window manager call\n DisplayManagerInternal.performTraversalInTransactionFromWindowManager\n within a surface transaction at a later time.</p>\n</div></div></div><div id='method-setForceShowMagnifiableBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setForceShowMagnifiableBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setForceShowMagnifiableBounds' class='name expandable'>setForceShowMagnifiableBounds</a>( <span class='pre'>displayId, show</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set by the accessibility framework to indicate whether the magnifiable regions of the display\n should be shown. ...</div><div class='long'><p>Set by the accessibility framework to indicate whether the magnifiable regions of the display\n should be shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The logical display id.</p>\n</div></li><li><span class='pre'>show</span> : Boolean<div class='sub-desc'><p>{@code true} to show magnifiable region bounds, {@code false} to hide</p>\n</div></li></ul></div></div></div><div id='method-setForcedDisplaySize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setForcedDisplaySize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setForcedDisplaySize' class='name expandable'>setForcedDisplaySize</a>( <span class='pre'>displayId, width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Overrides the display size. ...</div><div class='long'><p>Overrides the display size.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The display to override the display size.</p>\n</div></li><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The width to override.</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>The height to override.</p>\n</div></li></ul></div></div></div><div id='method-setInputFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setInputFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setInputFilter' class='name expandable'>setInputFilter</a>( <span class='pre'>filter</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a filter for manipulating the input event stream. ...</div><div class='long'><p>Sets a filter for manipulating the input event stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>filter</span> : Object {IInputFilter}<div class='sub-desc'><p>The filter implementation.</p>\n</div></li></ul></div></div></div><div id='method-setMagnificationCallbacks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setMagnificationCallbacks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setMagnificationCallbacks' class='name expandable'>setMagnificationCallbacks</a>( <span class='pre'>displayId, callbacks</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set by the accessibility layer to observe changes in the magnified region,\n rotation, and other window transformation...</div><div class='long'><p>Set by the accessibility layer to observe changes in the magnified region,\n rotation, and other window transformations related to display magnification\n as the window manager is responsible for doing the actual magnification\n and has access to the raw window data while the accessibility layer serves\n as a controller.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The logical display id.</p>\n</div></li><li><span class='pre'>callbacks</span> : Object {WindowManagerInternal.MagnificationCallbacks}<div class='sub-desc'><p>The callbacks to invoke.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false} if display id is not valid.</p>\n</div></li></ul></div></div></div><div id='method-setMagnificationSpec' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setMagnificationSpec' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setMagnificationSpec' class='name expandable'>setMagnificationSpec</a>( <span class='pre'>displayId, spec</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set by the accessibility layer to specify the magnification and panning to\n be applied to all windows that should be ...</div><div class='long'><p>Set by the accessibility layer to specify the magnification and panning to\n be applied to all windows that should be magnified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The logical display id.</p>\n</div></li><li><span class='pre'>spec</span> : Object {MagnificationSpec}<div class='sub-desc'><p>The MagnficationSpec to set.\n@see <a href=\"#!/api/com.android.server.wm.WindowManagerInternal-method-setMagnificationCallbacks\" rel=\"com.android.server.wm.WindowManagerInternal-method-setMagnificationCallbacks\" class=\"docClass\">setMagnificationCallbacks</a>(int, MagnificationCallbacks)</p>\n</div></li></ul></div></div></div><div id='method-setOnHardKeyboardStatusChangeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setOnHardKeyboardStatusChangeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setOnHardKeyboardStatusChangeListener' class='name expandable'>setOnHardKeyboardStatusChangeListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the callback listener for hardware keyboard status changes. ...</div><div class='long'><p>Sets the callback listener for hardware keyboard status changes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {WindowManagerInternal.OnHardKeyboardStatusChangeListener}<div class='sub-desc'><p>The listener to set.</p>\n</div></li></ul></div></div></div><div id='method-setVr2dDisplayId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setVr2dDisplayId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setVr2dDisplayId' class='name expandable'>setVr2dDisplayId</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called after virtual display Id is updated by\n com.android.server.vr.Vr2dDisplay with a specific\n {@param vr2dDisplay...</div><div class='long'><p>Called after virtual display Id is updated by\n com.android.server.vr.Vr2dDisplay with a specific\n {@param vr2dDisplayId}.</p>\n</div></div></div><div id='method-setWindowsForAccessibilityCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-setWindowsForAccessibilityCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-setWindowsForAccessibilityCallback' class='name expandable'>setWindowsForAccessibilityCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a callback for observing which windows are touchable for the purposes\n of accessibility. ...</div><div class='long'><p>Sets a callback for observing which windows are touchable for the purposes\n of accessibility.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {WindowManagerInternal.WindowsForAccessibilityCallback}<div class='sub-desc'><p>The callback.</p>\n</div></li></ul></div></div></div><div id='method-shouldShowIme' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-shouldShowIme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-shouldShowIme' class='name expandable'>shouldShowIme</a>( <span class='pre'>displayId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that the display should show IME. ...</div><div class='long'><p>Indicates that the display should show IME.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The id of the display.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the display should show IME when an input field become focused on it.</p>\n</div></li></ul></div></div></div><div id='method-shouldShowSystemDecorOnDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-shouldShowSystemDecorOnDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-shouldShowSystemDecorOnDisplay' class='name expandable'>shouldShowSystemDecorOnDisplay</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this display is configured and allowed to show system decorations. ...</div><div class='long'><p>Checks if this display is configured and allowed to show system decorations.</p>\n</div></div></div><div id='method-showGlobalActions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-showGlobalActions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-showGlobalActions' class='name expandable'>showGlobalActions</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens the global actions dialog. ...</div><div class='long'><p>Opens the global actions dialog.</p>\n</div></div></div><div id='method-updateInputMethodTargetWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-updateInputMethodTargetWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-updateInputMethodTargetWindow' class='name expandable'>updateInputMethodTargetWindow</a>( <span class='pre'>imeToken, imeTargetWindowToken</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies WindowManagerService that the current IME window status is being changed. ...</div><div class='long'><p>Notifies WindowManagerService that the current IME window status is being changed.</p>\n\n<p> <p>Only com.android.server.inputmethod.InputMethodManagerService is the expected and\n tested caller of this method.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imeToken</span> : Object {IBinder}<div class='sub-desc'><p>token to track the active input method. Corresponding IME windows can be\n                 identified by checking android.view.WindowManager.LayoutParams.token.\n                 Note that there is no guarantee that the corresponding window is already\n                 created</p>\n</div></li><li><span class='pre'>imeTargetWindowToken</span> : Object {IBinder}<div class='sub-desc'><p>token to identify the target window that the IME is associated\n                             with</p>\n</div></li></ul></div></div></div><div id='method-updateInputMethodWindowStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-updateInputMethodWindowStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-updateInputMethodWindowStatus' class='name expandable'>updateInputMethodWindowStatus</a>( <span class='pre'>imeToken, imeWindowVisible, dismissImeOnBackKeyPressed</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies WindowManagerService that the current IME window status is being changed. ...</div><div class='long'><p>Notifies WindowManagerService that the current IME window status is being changed.</p>\n\n<p> <p>Only com.android.server.inputmethod.InputMethodManagerService is the expected and\n tested caller of this method.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imeToken</span> : Object {IBinder}<div class='sub-desc'><p>token to track the active input method. Corresponding IME windows can be\n                 identified by checking android.view.WindowManager.LayoutParams.token.\n                 Note that there is no guarantee that the corresponding window is already\n                 created</p>\n</div></li><li><span class='pre'>imeWindowVisible</span> : Boolean<div class='sub-desc'><p>whether the active IME thinks that its window should be visible or\n                         hidden, no matter how WindowManagerService will react / has reacted\n                         to corresponding API calls.  Note that this state is not guaranteed\n                         to be synchronized with state in WindowManagerService.</p>\n</div></li><li><span class='pre'>dismissImeOnBackKeyPressed</span> : Boolean<div class='sub-desc'><p>{@code true} if the software keyboard is shown and the back\n                                   key is expected to dismiss the software keyboard.</p>\n</div></li></ul></div></div></div><div id='method-waitForAllWindowsDrawn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.wm.WindowManagerInternal'>com.android.server.wm.WindowManagerInternal</span><br/><a href='source/WindowManagerInternal.html#com-android-server-wm-WindowManagerInternal-method-waitForAllWindowsDrawn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.wm.WindowManagerInternal-method-waitForAllWindowsDrawn' class='name expandable'>waitForAllWindowsDrawn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Invalidate all visible windows. ...</div><div class='long'><p>Invalidate all visible windows. Then report back on the callback once all windows have\n redrawn.</p>\n</div></div></div></div></div></div></div>","meta":{}});