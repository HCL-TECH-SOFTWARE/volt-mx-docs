Ext.data.JsonP.java_lang_Readable({"tagname":"class","name":"java.lang.Readable","autodetected":{},"files":[{"filename":"Readable.js","href":"Readable.html#java-lang-Readable"}],"since":"1.5","members":[{"name":"read","tagname":"method","owner":"java.lang.Readable","id":"method-read","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.lang.Readable","short_doc":"A Readable is a source of characters. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Readable.html#java-lang-Readable' target='_blank'>Readable.js</a></div></pre><div class='doc-contents'><p>A <tt>Readable</tt> is a source of characters. Characters from\n a <tt>Readable</tt> are made available to callers of the read\n method via a CharBuffer.</p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-read' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.Readable'>java.lang.Readable</span><br/><a href='source/Readable.html#java-lang-Readable-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Readable-method-read' class='name expandable'>read</a>( <span class='pre'>cb</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to read characters into the specified character buffer. ...</div><div class='long'><p>Attempts to read characters into the specified character buffer.\n The buffer is used as a repository of characters as-is: the only\n changes made are the results of a put operation. No flipping or\n rewinding of the buffer is performed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {CharBuffer}<div class='sub-desc'><p>the buffer to read characters into</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of {@code char} values added to the buffer,\n                 or -1 if this source of characters is at its end</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if cb is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>java.nio.ReadOnlyBufferException if cb is a read only buffer</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});