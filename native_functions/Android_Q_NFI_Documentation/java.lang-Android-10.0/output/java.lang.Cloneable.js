Ext.data.JsonP.java_lang_Cloneable({"tagname":"class","name":"java.lang.Cloneable","autodetected":{},"files":[{"filename":"Cloneable.js","href":"Cloneable.html#java-lang-Cloneable"}],"author":[{"tagname":"author","name":"unascribed","email":null}],"since":"JDK1.0","members":[],"alternateClassNames":[],"aliases":{},"id":"class-java.lang.Cloneable","short_doc":"A class implements the Cloneable interface to\n indicate to the java.lang.Object.clone() method that it\n is legal for ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Cloneable.html#java-lang-Cloneable' target='_blank'>Cloneable.js</a></div></pre><div class='doc-contents'><p>A class implements the <code>Cloneable</code> interface to\n indicate to the java.lang.Object.clone() method that it\n is legal for that method to make a\n field-for-field copy of instances of that class.\n <p>\n Invoking Object's clone method on an instance that does not implement the\n <code>Cloneable</code> interface results in the exception\n <code>CloneNotSupportedException</code> being thrown.\n <p>\n By convention, classes that implement this interface should override\n <tt>Object.clone</tt> (which is protected) with a public method.\n See java.lang.Object.clone() for details on overriding this\n method.\n <p>\n Note that this interface does <i>not</i> contain the <tt>clone</tt> method.\n Therefore, it is not possible to clone an object merely by virtue of the\n fact that it implements this interface.  Even if the clone method is invoked\n reflectively, there is no guarantee that it will succeed.</p>\n\n<p> @see     <a href=\"#!/api/java.lang.CloneNotSupportedException\" rel=\"java.lang.CloneNotSupportedException\" class=\"docClass\">java.lang.CloneNotSupportedException</a>\n @see     java.lang.Object#clone()</p>\n        <p>Available since: <b>JDK1.0</b></p>\n</div><div class='members'></div></div>","meta":{}});