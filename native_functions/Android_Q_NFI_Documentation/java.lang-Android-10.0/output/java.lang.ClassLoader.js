Ext.data.JsonP.java_lang_ClassLoader({"tagname":"class","name":"java.lang.ClassLoader","autodetected":{},"files":[{"filename":"ClassLoader.js","href":"ClassLoader.html#java-lang-ClassLoader"}],"extends":"java.lang.Object","since":"1.0","members":[{"name":"clearAssertionStatus","tagname":"method","owner":"java.lang.ClassLoader","id":"method-clearAssertionStatus","meta":{}},{"name":"equals","tagname":"method","owner":"java.lang.Object","id":"method-equals","meta":{}},{"name":"getClass","tagname":"method","owner":"java.lang.Object","id":"method-getClass","meta":{}},{"name":"getParent","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getParent","meta":{}},{"name":"getResource","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getResource","meta":{}},{"name":"getResourceAsStream","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getResourceAsStream","meta":{}},{"name":"getResources","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getResources","meta":{}},{"name":"getSystemClassLoader","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getSystemClassLoader","meta":{}},{"name":"getSystemResource","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getSystemResource","meta":{}},{"name":"getSystemResourceAsStream","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getSystemResourceAsStream","meta":{}},{"name":"getSystemResources","tagname":"method","owner":"java.lang.ClassLoader","id":"method-getSystemResources","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.lang.Object","id":"method-hashCode","meta":{}},{"name":"loadClass","tagname":"method","owner":"java.lang.ClassLoader","id":"method-loadClass","meta":{}},{"name":"notify","tagname":"method","owner":"java.lang.Object","id":"method-notify","meta":{}},{"name":"notifyAll","tagname":"method","owner":"java.lang.Object","id":"method-notifyAll","meta":{}},{"name":"setClassAssertionStatus","tagname":"method","owner":"java.lang.ClassLoader","id":"method-setClassAssertionStatus","meta":{}},{"name":"setDefaultAssertionStatus","tagname":"method","owner":"java.lang.ClassLoader","id":"method-setDefaultAssertionStatus","meta":{}},{"name":"setPackageAssertionStatus","tagname":"method","owner":"java.lang.ClassLoader","id":"method-setPackageAssertionStatus","meta":{}},{"name":"toString","tagname":"method","owner":"java.lang.Object","id":"method-toString","meta":{}},{"name":"wait","tagname":"method","owner":"java.lang.Object","id":"method-wait","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.lang.ClassLoader","short_doc":"A class loader is an object that is responsible for loading classes. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='docClass'>java.lang.Object</a><div class='subclass '><strong>java.lang.ClassLoader</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ClassLoader.html#java-lang-ClassLoader' target='_blank'>ClassLoader.js</a></div></pre><div class='doc-contents'><p>A class loader is an object that is responsible for loading classes. The\n class <tt>ClassLoader</tt> is an abstract class.  Given the <a\n href=\"#name\">binary name</a> of a class, a class loader should attempt to\n locate or generate data that constitutes a definition for the class.  A\n typical strategy is to transform the name into a file name and then read a\n \"class file\" of that name from a file system.</p>\n\n<p> <p> Every <tt>Class</tt> object contains a reference to the <tt>ClassLoader</tt> that defined\n it.</p>\n\n<p> <p> <tt>Class</tt> objects for array classes are not created by class\n loaders, but are created automatically as required by the Java runtime.\n The class loader for an array class, as returned by java.lang.Class.getjava.lang.ClassLoader() is the same as the class loader for its element\n type; if the element type is a primitive type, then the array class has no\n class loader.</p>\n\n<p> <p> Applications implement subclasses of <tt>ClassLoader</tt> in order to\n extend the manner in which the Java virtual machine dynamically loads\n classes.</p>\n\n<p> <p> Class loaders may typically be used by security managers to indicate\n security domains.</p>\n\n<p> <p> The <tt>ClassLoader</tt> class uses a delegation model to search for\n classes and resources.  Each instance of <tt>ClassLoader</tt> has an\n associated parent class loader.  When requested to find a class or\n resource, a <tt>ClassLoader</tt> instance will delegate the search for the\n class or resource to its parent class loader before attempting to find the\n class or resource itself.  The virtual machine's built-in class loader,\n called the \"bootstrap class loader\", does not itself have a parent but may\n serve as the parent of a <tt>ClassLoader</tt> instance.</p>\n\n<p> <p> Class loaders that support concurrent loading of classes are known as\n <em>parallel capable</em> class loaders and are required to register\n themselves at their class initialization time by invoking the\n <tt>ClassLoader.registerAsParallelCapable</tt>\n method. Note that the <tt>ClassLoader</tt> class is registered as parallel\n capable by default. However, its subclasses still need to register themselves\n if they are parallel capable. <br>\n In environments in which the delegation model is not strictly\n hierarchical, class loaders need to be parallel capable, otherwise class\n loading can lead to deadlocks because the loader lock is held for the\n duration of the class loading process (see <a href=\"#!/api/java.lang.ClassLoader-method-loadClass\" rel=\"java.lang.ClassLoader-method-loadClass\" class=\"docClass\">&lt;tt&gt;loadClass&lt;/tt&gt;</a> methods).</p>\n\n<p> <p> Normally, the Java virtual machine loads classes from the local file\n system in a platform-dependent manner.  For example, on UNIX systems, the\n virtual machine loads classes from the directory defined by the\n <tt>CLASSPATH</tt> environment variable.</p>\n\n<p> <p> However, some classes may not originate from a file; they may originate\n from other sources, such as the network, or they could be constructed by an\n application.  The method byte[], int, int)\n <tt>defineClass</tt> converts an array of bytes into an instance of class\n <tt>Class</tt>. Instances of this newly defined class can be created using\n <tt>Class.newInstance</tt>.</p>\n\n<p> <p> The methods and constructors of objects created by a class loader may\n reference other classes.  To determine the class(es) referred to, the Java\n virtual machine invokes the <a href=\"#!/api/java.lang.ClassLoader-method-loadClass\" rel=\"java.lang.ClassLoader-method-loadClass\" class=\"docClass\">&lt;tt&gt;loadClass&lt;/tt&gt;</a> method of\n the class loader that originally created the class.</p>\n\n<p> <p> For example, an application could create a network class loader to\n download class files from a server.  Sample code might look like:</p>\n\n<p> <blockquote></blockquote></p>\n\n<pre>   ClassLoader loader&nbsp;= new NetworkClassLoader(host,&nbsp;port);\n   Object main&nbsp;= loader.loadClass(\"Main\", true).newInstance();\n       &nbsp;.&nbsp;.&nbsp;.\n </pre>\n\n\n<p></p>\n\n<p> <p> The network class loader subclass must define the methods <tt>findClass</tt> and <tt>loadClassData</tt> to load a class\n from the network.  Once it has downloaded the bytes that make up the class,\n it should use the method <tt>defineClass</tt> to\n create a class instance.  A sample implementation is:</p>\n\n<p> <blockquote></blockquote></p>\n\n<pre>     class NetworkClassLoader extends ClassLoader {\n         String host;\n         int port;\n\n         public Class findClass(String name) {\n             byte[] b = loadClassData(name);\n             return defineClass(name, b, 0, b.length);\n         }\n\n         private byte[] loadClassData(String name) {\n             // load the class data from the connection\n             &nbsp;.&nbsp;.&nbsp;.\n         }\n     }\n </pre>\n\n\n<p></p>\n\n<p> <h3> <a name=\"name\">Binary names</a> </h3></p>\n\n<p> <p> Any class name provided as a <a href=\"#!/api/java.lang.String\" rel=\"java.lang.String\" class=\"docClass\">java.lang.String</a> parameter to methods in\n <tt>ClassLoader</tt> must be a binary name as defined by\n <cite>The Java&trade; Language Specification</cite>.</p>\n\n<p> <p> Examples of valid class names include:\n <blockquote></blockquote></p>\n\n<pre>   \"<a href=\"#!/api/java.lang.String\" rel=\"java.lang.String\" class=\"docClass\">java.lang.String</a>\"\n   \"javax.swing.JSpinner$DefaultEditor\"\n   \"java.security.KeyStore$Builder$FileBuilder$1\"\n   \"java.net.URLClassLoader$3$1\"\n </pre>\n\n\n<p></p>\n\n<p> @see      #resolveClass(Class)</p>\n        <p>Available since: <b>1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clearAssertionStatus' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-clearAssertionStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-clearAssertionStatus' class='name expandable'>clearAssertionStatus</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the default assertion status for this class loader to\n false and discards any package defaults or class assertio...</div><div class='long'><p>Sets the default assertion status for this class loader to\n <tt>false</tt> and discards any package defaults or class assertion\n status settings associated with the class loader.  This method is\n provided so that class loaders can be made to ignore any command line or\n persistent assertion status settings and \"start with a clean slate.\"</p>\n        <p>Available since: <b>1.4</b></p>\n</div></div></div><div id='method-equals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='defined-in docClass'>java.lang.Object</a><br/><a href='source/Object.html#java-lang-Object-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Object-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getClass' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='defined-in docClass'>java.lang.Object</a><br/><a href='source/Object.html#java-lang-Object-method-getClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Object-method-getClass' class='name expandable'>getClass</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getParent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getParent' class='name expandable'>getParent</a>( <span class='pre'></span> ) : Object {java.lang.ClassLoader}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the parent class loader for delegation. ...</div><div class='long'><p>Returns the parent class loader for delegation. Some implementations may\n use <tt>null</tt> to represent the bootstrap class loader. This method\n will return <tt>null</tt> in such implementations if this class loader's\n parent is the bootstrap class loader.</p>\n\n<p> <p> If a security manager is present, and the invoker's class loader is\n not <tt>null</tt> and is not an ancestor of this class loader, then this\n method invokes the security manager's <tt>checkPermission</tt> method with a <tt>RuntimePermission(\"getClassLoader\")</tt> permission to verify\n access to the parent class loader is permitted.  If not, a\n <tt>SecurityException</tt> will be thrown.  </p></p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.ClassLoader}</span><div class='sub-desc'><p>The parent <tt>ClassLoader</tt></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          If a security manager exists and its <tt>checkPermission</tt>\n          method doesn't allow access to this class loader's parent class\n          loader.</p>\n</div></li></ul></div></div></div><div id='method-getResource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getResource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getResource' class='name expandable'>getResource</a>( <span class='pre'>name, name</span> ) : Object {java.net.URL}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds the resource with the given name. ...</div><div class='long'><p>Finds the resource with the given name.  A resource is some data\n (images, audio, text, etc) that can be accessed by class code in a way\n that is independent of the location of the code.</p>\n\n<p> <p> The name of a resource is a '<tt>/</tt>'-separated path name that\n identifies the resource.</p>\n\n<p> <p> This method will first search the parent class loader for the\n resource; if the parent is <tt>null</tt> the path of the class loader\n built-in to the virtual machine is searched.  That failing, this method\n will invoke findResource(String) to find the resource.  </p></p>\n        <p>Available since: <b>1.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The resource name</p>\n</div></li><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>The resource name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.URL}</span><div class='sub-desc'><p>A <tt>URL</tt> object for reading the resource, or\n          <tt>null</tt> if the resource could not be found or the invoker\n          doesn't have adequate  privileges to get the resource.</p>\n</div></li></ul></div></div></div><div id='method-getResourceAsStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getResourceAsStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getResourceAsStream' class='name expandable'>getResourceAsStream</a>( <span class='pre'>name</span> ) : Object {java.io.InputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an input stream for reading the specified resource. ...</div><div class='long'><p>Returns an input stream for reading the specified resource.</p>\n\n<p> <p> The search order is described in the documentation for <a href=\"#!/api/java.lang.ClassLoader-method-getResource\" rel=\"java.lang.ClassLoader-method-getResource\" class=\"docClass\">getResource</a>(String).  </p></p>\n        <p>Available since: <b>1.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The resource name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.InputStream}</span><div class='sub-desc'><p>An input stream for reading the resource, or <tt>null</tt>\n          if the resource could not be found</p>\n</div></li></ul></div></div></div><div id='method-getResources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getResources' class='name expandable'>getResources</a>( <span class='pre'>name, name</span> ) : Object {java.util.Enumeration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds all the resources with the given name. ...</div><div class='long'><p>Finds all the resources with the given name. A resource is some data\n (images, audio, text, etc) that can be accessed by class code in a way\n that is independent of the location of the code.</p>\n\n<p> <p>The name of a resource is a <tt>/</tt>-separated path name that\n identifies the resource.</p>\n\n<p> <p> The search order is described in the documentation for <a href=\"#!/api/java.lang.ClassLoader-method-getResource\" rel=\"java.lang.ClassLoader-method-getResource\" class=\"docClass\">getResource</a>(String).  </p></p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The resource name</p>\n</div></li><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>The resource name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Enumeration}</span><div class='sub-desc'><p>An enumeration of <tt>URL</tt> objects for\n          the resource.  If no resources could  be found, the enumeration\n          will be empty.  Resources that the class loader doesn't have\n          access to will not be in the enumeration.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If I/O errors occur\n@see #findResources(String)</p>\n</div></li></ul></div></div></div><div id='method-getSystemClassLoader' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getSystemClassLoader' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getSystemClassLoader' class='name expandable'>getSystemClassLoader</a>( <span class='pre'></span> ) : Object {java.lang.ClassLoader}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the system class loader for delegation. ...</div><div class='long'><p>Returns the system class loader for delegation.  This is the default\n delegation parent for new <tt>ClassLoader</tt> instances, and is\n typically the class loader used to start the application.</p>\n\n<p> <p> This method is first invoked early in the runtime's startup\n sequence, at which point it creates the system class loader and sets it\n as the context class loader of the invoking <tt>Thread</tt>.</p>\n\n<p> <p> The default system class loader is an implementation-dependent\n instance of this class.</p>\n\n<p> <p> If a security manager is present, and the invoker's class loader is\n not <tt>null</tt> and the invoker's class loader is not the same as or\n an ancestor of the system class loader, then this method invokes the\n security manager's <tt>checkPermission</tt> method with a <tt>RuntimePermission(\"getClassLoader\")</tt> permission to verify\n access to the system class loader.  If not, a\n <tt>SecurityException</tt> will be thrown.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.ClassLoader}</span><div class='sub-desc'><p>The system <tt>ClassLoader</tt> for delegation, or\n          <tt>null</tt> if none</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          If a security manager exists and its <tt>checkPermission</tt>\n          method doesn't allow access to the system class loader.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If invoked recursively during the construction of the class\n          loader specified by the \"<tt>java.system.class.loader</tt>\"\n          property.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>Error\n          If the system property \"<tt>java.system.class.loader</tt>\"\n          is defined but the named class could not be loaded, the\n          provider class does not define the required constructor, or an\n          exception is thrown by that constructor when it is invoked. The\n          underlying cause of the error can be retrieved via the\n          Throwable.getCause() method.\n@revised 1.4</p>\n</div></li></ul></div></div></div><div id='method-getSystemResource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getSystemResource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getSystemResource' class='name expandable'>getSystemResource</a>( <span class='pre'>name</span> ) : Object {java.net.URL}<span class=\"signature\"></span></div><div class='description'><div class='short'>Find a resource of the specified name from the search path used to load\n classes. ...</div><div class='long'><p>Find a resource of the specified name from the search path used to load\n classes.  This method locates the resource through the system class\n loader (see <a href=\"#!/api/java.lang.ClassLoader-method-getSystemClassLoader\" rel=\"java.lang.ClassLoader-method-getSystemClassLoader\" class=\"docClass\">getSystemClassLoader</a>()).</p>\n        <p>Available since: <b>1.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The resource name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.URL}</span><div class='sub-desc'><p>A <tt>URL</tt> object for reading the\n          resource, or <tt>null</tt> if the resource could not be found</p>\n</div></li></ul></div></div></div><div id='method-getSystemResourceAsStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getSystemResourceAsStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getSystemResourceAsStream' class='name expandable'>getSystemResourceAsStream</a>( <span class='pre'>name</span> ) : Object {java.io.InputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Open for reading, a resource of the specified name from the search path\n used to load classes. ...</div><div class='long'><p>Open for reading, a resource of the specified name from the search path\n used to load classes.  This method locates the resource through the\n system class loader (see <a href=\"#!/api/java.lang.ClassLoader-method-getSystemClassLoader\" rel=\"java.lang.ClassLoader-method-getSystemClassLoader\" class=\"docClass\">getSystemClassLoader</a>()).</p>\n        <p>Available since: <b>1.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The resource name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.InputStream}</span><div class='sub-desc'><p>An input stream for reading the resource, or <tt>null</tt>\n          if the resource could not be found</p>\n</div></li></ul></div></div></div><div id='method-getSystemResources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-getSystemResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-getSystemResources' class='name expandable'>getSystemResources</a>( <span class='pre'>name</span> ) : Object {java.util.Enumeration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds all resources of the specified name from the search path used to\n load classes. ...</div><div class='long'><p>Finds all resources of the specified name from the search path used to\n load classes.  The resources thus found are returned as an\n <tt>Enumeration</tt> of <tt>URL</tt> objects.</p>\n\n<p> <p> The search order is described in the documentation for <a href=\"#!/api/java.lang.ClassLoader-method-getSystemResource\" rel=\"java.lang.ClassLoader-method-getSystemResource\" class=\"docClass\">getSystemResource</a>(String).  </p></p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The resource name</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Enumeration}</span><div class='sub-desc'><p>An enumeration of resource <tt>URL</tt>\n          objects</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If I/O errors occur</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='defined-in docClass'>java.lang.Object</a><br/><a href='source/Object.html#java-lang-Object-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Object-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-loadClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-loadClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-loadClass' class='name expandable'>loadClass</a>( <span class='pre'>name</span> ) : Object {java.lang.Class}<span class=\"signature\"></span></div><div class='description'><div class='short'>Loads the class with the specified binary name. ...</div><div class='long'><p>Loads the class with the specified <a href=\"#name\">binary name</a>.\n This method searches for classes in the same manner as the boolean) method.  It is invoked by the Java virtual\n machine to resolve class references.  Invoking this method is equivalent\n to invoking boolean) <tt>loadClass(name,\n false)</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The <a href=\"#name\">binary name</a> of the class</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Class}</span><div class='sub-desc'><p>The resulting <tt>Class</tt> object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClassNotFoundException\n          If the class was not found</p>\n</div></li></ul></div></div></div><div id='method-notify' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='defined-in docClass'>java.lang.Object</a><br/><a href='source/Object.html#java-lang-Object-method-notify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Object-method-notify' class='name expandable'>notify</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-notifyAll' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='defined-in docClass'>java.lang.Object</a><br/><a href='source/Object.html#java-lang-Object-method-notifyAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Object-method-notifyAll' class='name expandable'>notifyAll</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setClassAssertionStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-setClassAssertionStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-setClassAssertionStatus' class='name expandable'>setClassAssertionStatus</a>( <span class='pre'>className, enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the desired assertion status for the named top-level class in this\n class loader and any nested classes containe...</div><div class='long'><p>Sets the desired assertion status for the named top-level class in this\n class loader and any nested classes contained therein.  This setting\n takes precedence over the class loader's default assertion status, and\n over any applicable per-package default.  This method has no effect if\n the named class has already been initialized.  (Once a class is\n initialized, its assertion status cannot change.)</p>\n\n<p> <p> If the named class is not a top-level class, this invocation will\n have no effect on the actual assertion status of any class. </p></p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : String<div class='sub-desc'><p>The fully qualified class name of the top-level class whose\n         assertion status is to be set.</p>\n</div></li><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p><tt>true</tt> if the named class is to have assertions\n         enabled when (and if) it is initialized, <tt>false</tt> if the\n         class is to have assertions disabled.</p>\n</div></li></ul></div></div></div><div id='method-setDefaultAssertionStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-setDefaultAssertionStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-setDefaultAssertionStatus' class='name expandable'>setDefaultAssertionStatus</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the default assertion status for this class loader. ...</div><div class='long'><p>Sets the default assertion status for this class loader.  This setting\n determines whether classes loaded by this class loader and initialized\n in the future will have assertions enabled or disabled by default.\n This setting may be overridden on a per-package or per-class basis by\n invoking boolean) or boolean).</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p><tt>true</tt> if classes loaded by this class loader will\n         henceforth have assertions enabled by default, <tt>false</tt>\n         if they will have assertions disabled by default.</p>\n</div></li></ul></div></div></div><div id='method-setPackageAssertionStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.ClassLoader'>java.lang.ClassLoader</span><br/><a href='source/ClassLoader.html#java-lang-ClassLoader-method-setPackageAssertionStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.ClassLoader-method-setPackageAssertionStatus' class='name expandable'>setPackageAssertionStatus</a>( <span class='pre'>packageName, enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the package default assertion status for the named package. ...</div><div class='long'><p>Sets the package default assertion status for the named package.  The\n package default assertion status determines the assertion status for\n classes initialized in the future that belong to the named package or\n any of its \"subpackages\".</p>\n\n<p> <p> A subpackage of a package named p is any package whose name begins\n with \"<tt>p.</tt>\".  For example, <tt>javax.swing.text</tt> is a\n subpackage of <tt>javax.swing</tt>, and both <tt>java.util</tt> and\n <tt>java.lang.reflect</tt> are subpackages of <tt>java</tt>.</p>\n\n<p> <p> In the event that multiple package defaults apply to a given class,\n the package default pertaining to the most specific package takes\n precedence over the others.  For example, if <tt>javax.lang</tt> and\n <tt>javax.lang.reflect</tt> both have package defaults associated with\n them, the latter package default applies to classes in\n <tt>javax.lang.reflect</tt>.</p>\n\n<p> <p> Package defaults take precedence over the class loader's default\n assertion status, and may be overridden on a per-class basis by invoking\n boolean).  </p></p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The name of the package whose package default assertion status\n         is to be set. A <tt>null</tt> value indicates the unnamed\n         package that is \"current\"\n         (see section 7.4.2 of\n         <cite>The Java&trade; Language Specification</cite>.)</p>\n</div></li><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p><tt>true</tt> if classes loaded by this classloader and\n         belonging to the named package or any of its subpackages will\n         have assertions enabled by default, <tt>false</tt> if they will\n         have assertions disabled by default.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='defined-in docClass'>java.lang.Object</a><br/><a href='source/Object.html#java-lang-Object-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Object-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-wait' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.lang.Object' rel='java.lang.Object' class='defined-in docClass'>java.lang.Object</a><br/><a href='source/Object.html#java-lang-Object-method-wait' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.Object-method-wait' class='name expandable'>wait</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});