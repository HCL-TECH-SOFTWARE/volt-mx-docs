Ext.data.JsonP.javax_security_auth_Subject({"tagname":"class","name":"javax.security.auth.Subject","autodetected":{},"files":[{"filename":"Subject.js","href":"Subject.html#javax-security-auth-Subject"}],"extends":"java.lang.Object","members":[{"name":"doAs","tagname":"method","owner":"javax.security.auth.Subject","id":"method-doAs","meta":{}},{"name":"doAsPrivileged","tagname":"method","owner":"javax.security.auth.Subject","id":"method-doAsPrivileged","meta":{}},{"name":"equals","tagname":"method","owner":"javax.security.auth.Subject","id":"method-equals","meta":{}},{"name":"getPrincipals","tagname":"method","owner":"javax.security.auth.Subject","id":"method-getPrincipals","meta":{}},{"name":"getPrivateCredentials","tagname":"method","owner":"javax.security.auth.Subject","id":"method-getPrivateCredentials","meta":{}},{"name":"getPublicCredentials","tagname":"method","owner":"javax.security.auth.Subject","id":"method-getPublicCredentials","meta":{}},{"name":"getSubject","tagname":"method","owner":"javax.security.auth.Subject","id":"method-getSubject","meta":{}},{"name":"hashCode","tagname":"method","owner":"javax.security.auth.Subject","id":"method-hashCode","meta":{}},{"name":"isReadOnly","tagname":"method","owner":"javax.security.auth.Subject","id":"method-isReadOnly","meta":{}},{"name":"setReadOnly","tagname":"method","owner":"javax.security.auth.Subject","id":"method-setReadOnly","meta":{}},{"name":"toString","tagname":"method","owner":"javax.security.auth.Subject","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.security.auth.Subject","short_doc":"implements java.io.Serializable\n\n A {@code Subject} represents a grouping of related information\n for a single entity...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.security.auth.Subject</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Subject.html#javax-security-auth-Subject' target='_blank'>Subject.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p><p> A {@code Subject} represents a grouping of related information\n for a single entity, such as a person.\n Such information includes the Subject's identities as well as\n its security-related attributes\n (passwords and cryptographic keys, for example).</p>\n\n<p> <p> Subjects may potentially have multiple identities.\n Each identity is represented as a {@code Principal}\n within the {@code Subject}.  Principals simply bind names to a\n {@code Subject}.  For example, a {@code Subject} that happens\n to be a person, Alice, might have two Principals:\n one which binds \"Alice Bar\", the name on her driver license,\n to the {@code Subject}, and another which binds,\n \"999-99-9999\", the number on her student identification card,\n to the {@code Subject}.  Both Principals refer to the same\n {@code Subject} even though each has a different name.</p>\n\n<p> <p> A {@code Subject} may also own security-related attributes,\n which are referred to as credentials.\n Sensitive credentials that require special protection, such as\n private cryptographic keys, are stored within a private credential\n {@code Set}.  Credentials intended to be shared, such as\n public key certificates or Kerberos server tickets are stored\n within a public credential {@code Set}.  Different permissions\n are required to access and modify the different credential Sets.</p>\n\n<p> <p> To retrieve all the Principals associated with a {@code Subject},\n invoke the {@code getPrincipals} method.  To retrieve\n all the public or private credentials belonging to a {@code Subject},\n invoke the {@code getPublicCredentials} method or\n {@code getPrivateCredentials} method, respectively.\n To modify the returned {@code Set} of Principals and credentials,\n use the methods defined in the {@code Set} class.\n For example:</p>\n\n<p><pre>      Subject subject;\n      Principal principal;\n      Object credential;</pre></p>\n\n<pre><code>  // add a Principal and credential to the Subject\n  subject.getPrincipals().add(principal);\n  subject.getPublicCredentials().add(credential);\n</code></pre>\n\n<p> </p>\n\n<p> <p> This {@code Subject} class implements {@code Serializable}.\n While the Principals associated with the {@code Subject} are serialized,\n the credentials associated with the {@code Subject} are not.\n Note that the {@code java.security.Principal} class\n does not implement {@code Serializable}.  Therefore all concrete\n {@code Principal} implementations associated with Subjects\n must implement {@code Serializable}.</p>\n\n<p> @see java.security.Principal\n @see java.security.DomainCombiner</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-doAs' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-doAs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-doAs' class='name expandable'>doAs</a>( <span class='pre'>subject, action, action</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform work as a particular {@code Subject}. ...</div><div class='long'><p>Perform work as a particular {@code Subject}.</p>\n\n<p> <p> This method first retrieves the current Thread's\n {@code AccessControlContext} via\n {@code AccessController.getContext},\n and then instantiates a new {@code AccessControlContext}\n using the retrieved context along with a new\n {@code SubjectDomainCombiner} (constructed using\n the provided {@code Subject}).\n Finally, this method invokes {@code AccessController.doPrivileged},\n passing it the provided {@code PrivilegedExceptionAction},\n as well as the newly constructed {@code AccessControlContext}.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>subject</span> : Object {Subject}<div class='sub-desc'><p>the {@code Subject} that the specified\n                  {@code action} will run as.  This parameter\n                  may be {@code null}. <p></p>\n</div></li><li><span class='pre'>action</span> : Object {java.security.PrivilegedExceptionAction}<div class='sub-desc'><p>the code to be run as the specified\n                  {@code Subject}. <p></p>\n</div></li><li><span class='pre'>action</span> : Object<div class='sub-desc'><p>the code to be run as the specified\n                  {@code Subject}. <p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the value returned by the\n                  PrivilegedExceptionAction's {@code run} method.\n@exception PrivilegedActionException if the\n                  {@code PrivilegedExceptionAction.run}\n                  method throws a checked exception. <p>\n@exception NullPointerException if the specified\n                  {@code PrivilegedExceptionAction} is\n                  {@code null}. <p>\n@exception SecurityException if the caller does not have permission\n                  to invoke this method.</p>\n</div></li></ul></div></div></div><div id='method-doAsPrivileged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-doAsPrivileged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-doAsPrivileged' class='name expandable'>doAsPrivileged</a>( <span class='pre'>subject, action, acc, acc</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform privileged work as a particular {@code Subject}. ...</div><div class='long'><p>Perform privileged work as a particular {@code Subject}.</p>\n\n<p> <p> This method behaves exactly as {@code Subject.doAs},\n except that instead of retrieving the current Thread's\n {@code AccessControlContext}, it uses the provided\n {@code AccessControlContext}.  If the provided\n {@code AccessControlContext} is {@code null},\n this method instantiates a new {@code AccessControlContext}\n with an empty collection of ProtectionDomains.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>subject</span> : Object {Subject}<div class='sub-desc'><p>the {@code Subject} that the specified\n                  {@code action} will run as.  This parameter\n                  may be {@code null}. <p></p>\n</div></li><li><span class='pre'>action</span> : Object {java.security.PrivilegedExceptionAction}<div class='sub-desc'><p>the code to be run as the specified\n                  {@code Subject}. <p></p>\n</div></li><li><span class='pre'>acc</span> : Object {AccessControlContext}<div class='sub-desc'><p>the {@code AccessControlContext} to be tied to the\n                  specified <i>subject</i> and <i>action</i>. <p></p>\n</div></li><li><span class='pre'>acc</span> : Object<div class='sub-desc'><p>the {@code AccessControlContext} to be tied to the\n                  specified <i>subject</i> and <i>action</i>. <p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the value returned by the\n                  PrivilegedExceptionAction's {@code run} method.\n@exception PrivilegedActionException if the\n                  {@code PrivilegedExceptionAction.run}\n                  method throws a checked exception. <p>\n@exception NullPointerException if the specified\n                  {@code PrivilegedExceptionAction} is\n                  {@code null}. <p>\n@exception SecurityException if the caller does not have permission\n                  to invoke this method.</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-equals' class='name expandable'>equals</a>( <span class='pre'>o</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares the specified Object with this {@code Subject}\n for equality. ...</div><div class='long'><p>Compares the specified Object with this {@code Subject}\n for equality.  Returns true if the given object is also a Subject\n and the two {@code Subject} instances are equivalent.\n More formally, two {@code Subject} instances are\n equal if their {@code Principal} and {@code Credential}\n Sets are equal.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>o</span> : Object {Object}<div class='sub-desc'><p>Object to be compared for equality with this\n          {@code Subject}.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the specified Object is equal to this\n          {@code Subject}.\n@exception SecurityException if the caller does not have permission\n          to access the private credentials for this {@code Subject},\n          or if the caller does not have permission to access the\n          private credentials for the provided {@code Subject}.</p>\n</div></li></ul></div></div></div><div id='method-getPrincipals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-getPrincipals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-getPrincipals' class='name expandable'>getPrincipals</a>( <span class='pre'>c, c</span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a {@code Set} of Principals associated with this\n {@code Subject} that are instances or subclasses of the spec...</div><div class='long'><p>Return a {@code Set} of Principals associated with this\n {@code Subject} that are instances or subclasses of the specified\n {@code Class}.</p>\n\n<p> <p> The returned {@code Set} is not backed by this Subject's\n internal {@code Principal} {@code Set}.  A new\n {@code Set} is created and returned for each method invocation.\n Modifications to the returned {@code Set}\n will not affect the internal {@code Principal} {@code Set}.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.lang.Class}<div class='sub-desc'><p>the returned {@code Set} of Principals will all be\n          instances of this class.</p>\n</div></li><li><span class='pre'>c</span> : Object<div class='sub-desc'><p>the returned {@code Set} of Principals will all be\n          instances of this class.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>a {@code Set} of Principals that are instances of the\n          specified {@code Class}.\n@exception NullPointerException if the specified {@code Class}\n                  is {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-getPrivateCredentials' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-getPrivateCredentials' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-getPrivateCredentials' class='name expandable'>getPrivateCredentials</a>( <span class='pre'>c, c</span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a {@code Set} of private credentials associated with this\n {@code Subject} that are instances or subclasses of...</div><div class='long'><p>Return a {@code Set} of private credentials associated with this\n {@code Subject} that are instances or subclasses of the specified\n {@code Class}.</p>\n\n<p> <p> The caller must have permission to access all of the\n requested Credentials, or a {@code SecurityException}\n will be thrown.</p>\n\n<p> <p> The returned {@code Set} is not backed by this Subject's\n internal private Credential {@code Set}.  A new\n {@code Set} is created and returned for each method invocation.\n Modifications to the returned {@code Set}\n will not affect the internal private Credential {@code Set}.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.lang.Class}<div class='sub-desc'><p>the returned {@code Set} of private credentials will all be\n          instances of this class.</p>\n</div></li><li><span class='pre'>c</span> : Object<div class='sub-desc'><p>the returned {@code Set} of private credentials will all be\n          instances of this class.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>a {@code Set} of private credentials that are instances\n          of the  specified {@code Class}.\n@exception NullPointerException if the specified {@code Class}\n          is {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-getPublicCredentials' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-getPublicCredentials' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-getPublicCredentials' class='name expandable'>getPublicCredentials</a>( <span class='pre'>c, c</span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a {@code Set} of public credentials associated with this\n {@code Subject} that are instances or subclasses of ...</div><div class='long'><p>Return a {@code Set} of public credentials associated with this\n {@code Subject} that are instances or subclasses of the specified\n {@code Class}.</p>\n\n<p> <p> The returned {@code Set} is not backed by this Subject's\n internal public Credential {@code Set}.  A new\n {@code Set} is created and returned for each method invocation.\n Modifications to the returned {@code Set}\n will not affect the internal public Credential {@code Set}.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.lang.Class}<div class='sub-desc'><p>the returned {@code Set} of public credentials will all be\n          instances of this class.</p>\n</div></li><li><span class='pre'>c</span> : Object<div class='sub-desc'><p>the returned {@code Set} of public credentials will all be\n          instances of this class.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>a {@code Set} of public credentials that are instances\n          of the  specified {@code Class}.\n@exception NullPointerException if the specified {@code Class}\n          is {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-getSubject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-getSubject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-getSubject' class='name expandable'>getSubject</a>( <span class='pre'>acc</span> ) : Object {javax.security.auth.Subject}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the {@code Subject} associated with the provided\n {@code AccessControlContext}. ...</div><div class='long'><p>Get the {@code Subject} associated with the provided\n {@code AccessControlContext}.</p>\n\n<p> <p> The {@code AccessControlContext} may contain many\n Subjects (from nested {@code doAs} calls).\n In this situation, the most recent {@code Subject} associated\n with the {@code AccessControlContext} is returned.</p>\n\n<p> <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>acc</span> : Object {AccessControlContext}<div class='sub-desc'><p>the {@code AccessControlContext} from which to retrieve\n          the {@code Subject}.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.security.auth.Subject}</span><div class='sub-desc'><p>the {@code Subject} associated with the provided\n          {@code AccessControlContext}, or {@code null}\n          if no {@code Subject} is associated\n          with the provided {@code AccessControlContext}.\n@exception SecurityException if the caller does not have permission\n          to get the {@code Subject}. <p>\n@exception NullPointerException if the provided\n          {@code AccessControlContext} is {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a hashcode for this {@code Subject}. ...</div><div class='long'><p>Returns a hashcode for this {@code Subject}.</p>\n\n<p> <p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a hashcode for this {@code Subject}.\n@exception SecurityException if the caller does not have permission\n          to access this Subject's private credentials.</p>\n</div></li></ul></div></div></div><div id='method-isReadOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-isReadOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-isReadOnly' class='name expandable'>isReadOnly</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Query whether this {@code Subject} is read-only. ...</div><div class='long'><p>Query whether this {@code Subject} is read-only.</p>\n\n<p> <p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this {@code Subject} is read-only, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setReadOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-setReadOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-setReadOnly' class='name expandable'>setReadOnly</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set this {@code Subject} to be read-only. ...</div><div class='long'><p>Set this {@code Subject} to be read-only.</p>\n\n<p> <p> Modifications (additions and removals) to this Subject's\n {@code Principal} {@code Set} and\n credential Sets will be disallowed.\n The {@code destroy} operation on this Subject's credentials will\n still be permitted.</p>\n\n<p> <p> Subsequent attempts to modify the Subject's {@code Principal}\n and credential Sets will result in an\n {@code IllegalStateException} being thrown.\n Also, once a {@code Subject} is read-only,\n it can not be reset to being writable again.</p>\n\n<p> <p>\n@exception SecurityException if the caller does not have permission\n          to set this {@code Subject} to be read-only.</p>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.auth.Subject'>javax.security.auth.Subject</span><br/><a href='source/Subject.html#javax-security-auth-Subject-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.auth.Subject-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the String representation of this {@code Subject}. ...</div><div class='long'><p>Return the String representation of this {@code Subject}.</p>\n\n<p> <p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the String representation of this {@code Subject}.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});