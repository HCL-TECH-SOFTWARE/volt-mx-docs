Ext.data.JsonP.java_lang_annotation_Target({"tagname":"class","name":"java.lang.annotation.Target","autodetected":{},"files":[{"filename":"Target.js","href":"Target.html#java-lang-annotation-Target"}],"since":"1.5","members":[{"name":"value","tagname":"method","owner":"java.lang.annotation.Target","id":"method-value","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.lang.annotation.Target","short_doc":"implements java.lang.annotation.Annotation\n\n Indicates the contexts in which an annotation type is applicable. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Target.html#java-lang-annotation-Target' target='_blank'>Target.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.lang.annotation.Annotation\" rel=\"java.lang.annotation.Annotation\" class=\"docClass\">java.lang.annotation.Annotation</a></p>\n\n<p> Indicates the contexts in which an annotation type is applicable. The\n declaration contexts and type contexts in which an annotation type may be\n applicable are specified in JLS 9.6.4.1, and denoted in source code by enum\n constants of java.lang.annotation.ElementType.</p>\n\n<p> <p>If an {@code @Target} meta-annotation is not present on an annotation type\n {@code T} , then an annotation of type {@code T} may be written as a\n modifier for any declaration except a type parameter declaration.</p>\n\n<p> <p>If an {@code @Target} meta-annotation is present, the compiler will enforce\n the usage restrictions indicated by {@code ElementType}\n enum constants, in line with JLS 9.7.4.</p>\n\n<p> <p>For example, this {@code @Target} meta-annotation indicates that the\n declared type is itself a meta-annotation type.  It can only be used on\n annotation type declarations:</p>\n\n<pre>    &#064;Target(ElementType.ANNOTATION_TYPE)\n    public &#064;interface MetaAnnotationType {\n        ...\n    }\n </pre>\n\n\n<p> <p>This {@code @Target} meta-annotation indicates that the declared type is\n intended solely for use as a member type in complex annotation type\n declarations.  It cannot be used to annotate anything directly:</p>\n\n<pre>    &#064;Target({})\n    public &#064;interface MemberType {\n        ...\n    }\n </pre>\n\n\n<p> <p>It is a compile-time error for a single {@code ElementType} constant to\n appear more than once in an {@code @Target} annotation.  For example, the\n following {@code @Target} meta-annotation is illegal:</p>\n\n<pre>    &#064;Target({ElementType.FIELD, ElementType.METHOD, ElementType.FIELD})\n    public &#064;interface Bogus {\n        ...\n    }\n </pre>\n\n\n<p> @jls 9.6.4.1 @Target\n @jls 9.7.4 Where Annotations May Appear</p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-value' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.annotation.Target'>java.lang.annotation.Target</span><br/><a href='source/Target.html#java-lang-annotation-Target-method-value' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.annotation.Target-method-value' class='name expandable'>value</a>( <span class='pre'></span> ) : Object {java.lang.annotation.ElementType}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array of the kinds of elements an annotation type\n can be applied to. ...</div><div class='long'><p>Returns an array of the kinds of elements an annotation type\n can be applied to.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.annotation.ElementType}</span><div class='sub-desc'><p>an array of the kinds of elements an annotation type\n can be applied to</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});