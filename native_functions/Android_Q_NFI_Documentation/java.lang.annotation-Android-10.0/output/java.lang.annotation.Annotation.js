Ext.data.JsonP.java_lang_annotation_Annotation({"tagname":"class","name":"java.lang.annotation.Annotation","autodetected":{},"files":[{"filename":"Annotation.js","href":"Annotation.html#java-lang-annotation-Annotation"}],"author":[{"tagname":"author","name":"Josh Bloch","email":null}],"since":"1.5","members":[{"name":"annotationType","tagname":"method","owner":"java.lang.annotation.Annotation","id":"method-annotationType","meta":{}},{"name":"equals","tagname":"method","owner":"java.lang.annotation.Annotation","id":"method-equals","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.lang.annotation.Annotation","id":"method-hashCode","meta":{}},{"name":"toString","tagname":"method","owner":"java.lang.annotation.Annotation","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.lang.annotation.Annotation","short_doc":"The common interface extended by all annotation types. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Annotation.html#java-lang-annotation-Annotation' target='_blank'>Annotation.js</a></div></pre><div class='doc-contents'><p>The common interface extended by all annotation types.  Note that an\n interface that manually extends this one does <i>not</i> define\n an annotation type.  Also note that this interface does not itself\n define an annotation type.</p>\n\n<p> More information about annotation types can be found in section 9.6 of\n <cite>The Java&trade; Language Specification</cite>.</p>\n\n<p> The java.lang.reflect.AnnotatedElement interface discusses\n compatibility concerns when evolving an annotation type from being\n non-repeatable to being repeatable.</p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-annotationType' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.annotation.Annotation'>java.lang.annotation.Annotation</span><br/><a href='source/Annotation.html#java-lang-annotation-Annotation-method-annotationType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.annotation.Annotation-method-annotationType' class='name expandable'>annotationType</a>( <span class='pre'></span> ) : Object {java.lang.Class}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the annotation type of this annotation. ...</div><div class='long'><p>Returns the annotation type of this annotation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Class}</span><div class='sub-desc'><p>the annotation type of this annotation</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.annotation.Annotation'>java.lang.annotation.Annotation</span><br/><a href='source/Annotation.html#java-lang-annotation-Annotation-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.annotation.Annotation-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the specified object represents an annotation\n that is logically equivalent to this one. ...</div><div class='long'><p>Returns true if the specified object represents an annotation\n that is logically equivalent to this one.  In other words,\n returns true if the specified object is an instance of the same\n annotation type as this instance, all of whose members are equal\n to the corresponding member of this annotation, as defined below:\n <ul>\n    <li>Two corresponding primitive typed members whose values are\n    <tt>x</tt> and <tt>y</tt> are considered equal if <tt>x == y</tt>,\n    unless their type is <tt>float</tt> or <tt>double</tt>.</li></ul></p>\n\n<pre><code>&lt;li&gt;Two corresponding &lt;tt&gt;float&lt;/tt&gt; members whose values\nare &lt;tt&gt;x&lt;/tt&gt; and &lt;tt&gt;y&lt;/tt&gt; are considered equal if\n&lt;tt&gt;Float.valueOf(x).equals(Float.valueOf(y))&lt;/tt&gt;.\n(Unlike the &lt;tt&gt;==&lt;/tt&gt; operator, NaN is considered equal\nto itself, and &lt;tt&gt;0.0f&lt;/tt&gt; unequal to &lt;tt&gt;-0.0f&lt;/tt&gt;.)\n\n&lt;li&gt;Two corresponding &lt;tt&gt;double&lt;/tt&gt; members whose values\nare &lt;tt&gt;x&lt;/tt&gt; and &lt;tt&gt;y&lt;/tt&gt; are considered equal if\n&lt;tt&gt;Double.valueOf(x).equals(Double.valueOf(y))&lt;/tt&gt;.\n(Unlike the &lt;tt&gt;==&lt;/tt&gt; operator, NaN is considered equal\nto itself, and &lt;tt&gt;0.0&lt;/tt&gt; unequal to &lt;tt&gt;-0.0&lt;/tt&gt;.)\n\n&lt;li&gt;Two corresponding &lt;tt&gt;String&lt;/tt&gt;, &lt;tt&gt;Class&lt;/tt&gt;, enum, or\nannotation typed members whose values are &lt;tt&gt;x&lt;/tt&gt; and &lt;tt&gt;y&lt;/tt&gt;\nare considered equal if &lt;tt&gt;x.equals(y)&lt;/tt&gt;.  (Note that this\ndefinition is recursive for annotation typed members.)\n\n&lt;li&gt;Two corresponding array typed members &lt;tt&gt;x&lt;/tt&gt; and &lt;tt&gt;y&lt;/tt&gt;\nare considered equal if &lt;tt&gt;Arrays.equals(x, y)&lt;/tt&gt;, for the\nappropriate overloading of java.util.Arrays.equals.\n</code></pre>\n\n<p> </p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the specified object represents an annotation\n     that is logically equivalent to this one, otherwise false</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.annotation.Annotation'>java.lang.annotation.Annotation</span><br/><a href='source/Annotation.html#java-lang-annotation-Annotation-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.annotation.Annotation-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the hash code of this annotation, as defined below:\n\n The hash code of an annotation is the sum of the hash c...</div><div class='long'><p>Returns the hash code of this annotation, as defined below:</p>\n\n<p> <p>The hash code of an annotation is the sum of the hash codes\n of its members (including those with default values), as defined\n below:</p>\n\n<p> The hash code of an annotation member is (127 times the hash code\n of the member-name as computed by String.hashCode()) XOR\n the hash code of the member-value, as defined below:</p>\n\n<p> <p>The hash code of a member-value depends on its type:\n <ul>\n <li>The hash code of a primitive value <tt><i>v</i></tt> is equal to\n     <tt><i>WrapperType</i>.valueOf(<i>v</i>).hashCode()</tt>, where\n     <tt><i>WrapperType</i></tt> is the wrapper type corresponding\n     to the primitive type of <tt><i>v</i></tt> (Byte,\n     Character, Double, Float, Integer,\n     Long, Short, or Boolean).</li></ul></p>\n\n<p> <li>The hash code of a string, enum, class, or annotation member-value\n     I     <tt><i>v</i></tt> is computed as by calling\n     <tt><i>v</i>.hashCode()</tt>.  (In the case of annotation\n     member values, this is a recursive definition.)</li></p>\n\n<p> <li>The hash code of an array member-value is computed by calling\n     the appropriate overloading of\n     Arrays.hashCode\n     on the value.  (There is one overloading for each primitive\n     type, and one for object reference types.)\n </li></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the hash code of this annotation</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.annotation.Annotation'>java.lang.annotation.Annotation</span><br/><a href='source/Annotation.html#java-lang-annotation-Annotation-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.annotation.Annotation-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representation of this annotation. ...</div><div class='long'><p>Returns a string representation of this annotation.  The details\n of the representation are implementation-dependent, but the following\n may be regarded as typical:</p>\n\n<pre>   &#064;com.acme.util.Name(first=Alfred, middle=E., last=Neuman)\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this annotation</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});