Ext.data.JsonP.java_nio_file_attribute_UserPrincipalLookupService({"tagname":"class","name":"java.nio.file.attribute.UserPrincipalLookupService","autodetected":{},"files":[{"filename":"UserPrincipalLookupService.js","href":"UserPrincipalLookupService.html#java-nio-file-attribute-UserPrincipalLookupService"}],"extends":"java.lang.Object","since":"1.7","members":[{"name":"lookupPrincipalByGroupName","tagname":"method","owner":"java.nio.file.attribute.UserPrincipalLookupService","id":"method-lookupPrincipalByGroupName","meta":{}},{"name":"lookupPrincipalByName","tagname":"method","owner":"java.nio.file.attribute.UserPrincipalLookupService","id":"method-lookupPrincipalByName","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.file.attribute.UserPrincipalLookupService","short_doc":"An object to lookup user and group principals by name. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.file.attribute.UserPrincipalLookupService</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UserPrincipalLookupService.html#java-nio-file-attribute-UserPrincipalLookupService' target='_blank'>UserPrincipalLookupService.js</a></div></pre><div class='doc-contents'><p>An object to lookup user and group principals by name. A <a href=\"#!/api/java.nio.file.attribute.UserPrincipal\" rel=\"java.nio.file.attribute.UserPrincipal\" class=\"docClass\">java.nio.file.attribute.UserPrincipal</a>\n represents an identity that may be used to determine access rights to objects\n in a file system. A <a href=\"#!/api/java.nio.file.attribute.GroupPrincipal\" rel=\"java.nio.file.attribute.GroupPrincipal\" class=\"docClass\">java.nio.file.attribute.GroupPrincipal</a> represents a <em>group identity</em>.\n A {@code UserPrincipalLookupService} defines methods to lookup identities by\n name or group name (which are typically user or account names). Whether names\n and group names are case sensitive or not depends on the implementation.\n The exact definition of a group is implementation specific but typically a\n group represents an identity created for administrative purposes so as to\n determine the access rights for the members of the group. In particular it is\n implementation specific if the <em>namespace</em> for names and groups is the\n same or is distinct. To ensure consistent and correct behavior across\n platforms it is recommended that this API be used as if the namespaces are\n distinct. In other words, the <a href=\"#!/api/java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByName\" rel=\"java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByName\" class=\"docClass\">lookupPrincipalByName</a> should be used to lookup users, and <a href=\"#!/api/java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByGroupName\" rel=\"java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByGroupName\" class=\"docClass\">lookupPrincipalByGroupName</a> should be used to\n lookup groups.</p>\n\n<p> @see java.nio.file.FileSystem#getUserPrincipalLookupService</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-lookupPrincipalByGroupName' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.UserPrincipalLookupService'>java.nio.file.attribute.UserPrincipalLookupService</span><br/><a href='source/UserPrincipalLookupService.html#java-nio-file-attribute-UserPrincipalLookupService-method-lookupPrincipalByGroupName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByGroupName' class='name expandable'>lookupPrincipalByGroupName</a>( <span class='pre'>group</span> ) : Object {java.nio.file.attribute.GroupPrincipal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Lookup a group principal by group name. ...</div><div class='long'><p>Lookup a group principal by group name.</p>\n\n<p> <p> Where an implementation does not support any notion of group then\n this method always throws <a href=\"#!/api/java.nio.file.attribute.UserPrincipalNotFoundException\" rel=\"java.nio.file.attribute.UserPrincipalNotFoundException\" class=\"docClass\">java.nio.file.attribute.UserPrincipalNotFoundException</a>. Where\n the namespace for user accounts and groups is the same, then this method\n is identical to invoking <a href=\"#!/api/java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByName\" rel=\"java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByName\" class=\"docClass\">lookupPrincipalByName</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>group</span> : String<div class='sub-desc'><p>the string representation of the group to lookup</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.file.attribute.GroupPrincipal}</span><div class='sub-desc'><p>a group principal</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UserPrincipalNotFoundException\n          the principal does not exist or is not a group</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          if an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          In the case of the default provider, and a security manager is\n          installed, it checks RuntimePermission<tt>(\"lookupUserInformation\")</tt></p>\n</div></li></ul></div></div></div><div id='method-lookupPrincipalByName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.UserPrincipalLookupService'>java.nio.file.attribute.UserPrincipalLookupService</span><br/><a href='source/UserPrincipalLookupService.html#java-nio-file-attribute-UserPrincipalLookupService-method-lookupPrincipalByName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.UserPrincipalLookupService-method-lookupPrincipalByName' class='name expandable'>lookupPrincipalByName</a>( <span class='pre'>name</span> ) : Object {java.nio.file.attribute.UserPrincipal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Lookup a user principal by name. ...</div><div class='long'><p>Lookup a user principal by name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>the string representation of the user principal to lookup</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.file.attribute.UserPrincipal}</span><div class='sub-desc'><p>a user principal</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UserPrincipalNotFoundException\n          the principal does not exist</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          if an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          In the case of the default provider, and a security manager is\n          installed, it checks RuntimePermission<tt>(\"lookupUserInformation\")</tt></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});