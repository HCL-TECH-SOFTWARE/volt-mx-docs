Ext.data.JsonP.java_nio_file_attribute_UserPrincipal({"tagname":"class","name":"java.nio.file.attribute.UserPrincipal","autodetected":{},"files":[{"filename":"UserPrincipal.js","href":"UserPrincipal.html#java-nio-file-attribute-UserPrincipal"}],"since":"1.7","members":[],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.file.attribute.UserPrincipal","short_doc":"implements java.security.Principal\n\n A {@code Principal} representing an identity used to determine access rights\n to...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/UserPrincipal.html#java-nio-file-attribute-UserPrincipal' target='_blank'>UserPrincipal.js</a></div></pre><div class='doc-contents'><p>implements java.security.Principal</p>\n\n<p> A {@code Principal} representing an identity used to determine access rights\n to objects in a file system.</p>\n\n<p> <p> On many platforms and file systems an entity requires appropriate access\n rights or permissions in order to access objects in a file system. The\n access rights are generally performed by checking the identity of the entity.\n For example, on implementations that use Access Control Lists (ACLs) to\n enforce privilege separation then a file in the file system may have an\n associated ACL that determines the access rights of identities specified in\n the ACL.</p>\n\n<p> <p> A {@code UserPrincipal} object is an abstract representation of an\n identity. It has a name that is typically the username or\n account name that it represents. User principal objects may be obtained using\n a <a href=\"#!/api/java.nio.file.attribute.UserPrincipalLookupService\" rel=\"java.nio.file.attribute.UserPrincipalLookupService\" class=\"docClass\">java.nio.file.attribute.UserPrincipalLookupService</a>, or returned by <a href=\"#!/api/java.nio.file.attribute.FileAttributeView\" rel=\"java.nio.file.attribute.FileAttributeView\" class=\"docClass\">java.nio.file.attribute.FileAttributeView</a> implementations that provide access to identity related\n attributes. For example, the <a href=\"#!/api/java.nio.file.attribute.AclFileAttributeView\" rel=\"java.nio.file.attribute.AclFileAttributeView\" class=\"docClass\">java.nio.file.attribute.AclFileAttributeView</a> and <a href=\"#!/api/java.nio.file.attribute.PosixFileAttributeView\" rel=\"java.nio.file.attribute.PosixFileAttributeView\" class=\"docClass\">java.nio.file.attribute.PosixFileAttributeView</a> provide access to a file's <a href=\"#!/api/java.nio.file.attribute.PosixFileAttributes-method-owner\" rel=\"java.nio.file.attribute.PosixFileAttributes-method-owner\" class=\"docClass\">owner</a>.</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'></div></div>","meta":{}});