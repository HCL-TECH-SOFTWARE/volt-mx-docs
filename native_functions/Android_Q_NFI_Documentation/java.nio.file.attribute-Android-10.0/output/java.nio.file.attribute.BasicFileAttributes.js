Ext.data.JsonP.java_nio_file_attribute_BasicFileAttributes({"tagname":"class","name":"java.nio.file.attribute.BasicFileAttributes","autodetected":{},"files":[{"filename":"BasicFileAttributes.js","href":"BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes"}],"since":"1.7","members":[{"name":"creationTime","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-creationTime","meta":{}},{"name":"fileKey","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-fileKey","meta":{}},{"name":"isDirectory","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-isDirectory","meta":{}},{"name":"isOther","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-isOther","meta":{}},{"name":"isRegularFile","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-isRegularFile","meta":{}},{"name":"isSymbolicLink","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-isSymbolicLink","meta":{}},{"name":"lastAccessTime","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-lastAccessTime","meta":{}},{"name":"lastModifiedTime","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-lastModifiedTime","meta":{}},{"name":"size","tagname":"method","owner":"java.nio.file.attribute.BasicFileAttributes","id":"method-size","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.file.attribute.BasicFileAttributes","short_doc":"Basic attributes associated with a file in a file system. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes' target='_blank'>BasicFileAttributes.js</a></div></pre><div class='doc-contents'><p>Basic attributes associated with a file in a file system.</p>\n\n<p> <p> Basic file attributes are attributes that are common to many file systems\n and consist of mandatory and optional file attributes as defined by this\n interface.</p>\n\n<p> <p> <b>Usage Example:</b></p>\n\n<pre>    Path file = ...\n    BasicFileAttributes attrs = Files.readAttributes(file, BasicFileAttributes.class);\n </pre>\n\n\n<p> @see BasicFileAttributeView</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-creationTime' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-creationTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-creationTime' class='name expandable'>creationTime</a>( <span class='pre'></span> ) : Object {java.nio.file.attribute.FileTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the creation time. ...</div><div class='long'><p>Returns the creation time. The creation time is the time that the file\n was created.</p>\n\n<p> <p> If the file system implementation does not support a time stamp\n to indicate the time when the file was created then this method returns\n an implementation specific default value, typically the last-modified-time or a {@code FileTime}\n representing the epoch (1970-01-01T00:00:00Z).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.file.attribute.FileTime}</span><div class='sub-desc'><p>a {@code FileTime} representing the time the file was created</p>\n</div></li></ul></div></div></div><div id='method-fileKey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-fileKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-fileKey' class='name expandable'>fileKey</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an object that uniquely identifies the given file, or {@code\n null} if a file key is not available. ...</div><div class='long'><p>Returns an object that uniquely identifies the given file, or {@code\n null} if a file key is not available. On some platforms or file systems\n it is possible to use an identifier, or a combination of identifiers to\n uniquely identify a file. Such identifiers are important for operations\n such as file tree traversal in file systems that support <a\n href=\"../package-summary.html#links\">symbolic links</a> or file systems\n that allow a file to be an entry in more than one directory. On UNIX file\n systems, for example, the <em>device ID</em> and <em>inode</em> are\n commonly used for such purposes.</p>\n\n<p> <p> The file key returned by this method can only be guaranteed to be\n unique if the file system and files remain static. Whether a file system\n re-uses identifiers after a file is deleted is implementation dependent and\n therefore unspecified.</p>\n\n<p> <p> File keys returned by this method can be compared for equality and are\n suitable for use in collections. If the file system and files remain static,\n and two files are the same with\n non-{@code null} file keys, then their file keys are equal.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>an object that uniquely identifies the given file, or {@code null}\n@see java.nio.file.Files#walkFileTree</p>\n</div></li></ul></div></div></div><div id='method-isDirectory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-isDirectory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-isDirectory' class='name expandable'>isDirectory</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether the file is a directory. ...</div><div class='long'><p>Tells whether the file is a directory.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the file is a directory</p>\n</div></li></ul></div></div></div><div id='method-isOther' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-isOther' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-isOther' class='name expandable'>isOther</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether the file is something other than a regular file, directory,\n or symbolic link. ...</div><div class='long'><p>Tells whether the file is something other than a regular file, directory,\n or symbolic link.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the file something other than a regular file,\n         directory or symbolic link</p>\n</div></li></ul></div></div></div><div id='method-isRegularFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-isRegularFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-isRegularFile' class='name expandable'>isRegularFile</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether the file is a regular file with opaque content. ...</div><div class='long'><p>Tells whether the file is a regular file with opaque content.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the file is a regular file with opaque content</p>\n</div></li></ul></div></div></div><div id='method-isSymbolicLink' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-isSymbolicLink' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-isSymbolicLink' class='name expandable'>isSymbolicLink</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether the file is a symbolic link. ...</div><div class='long'><p>Tells whether the file is a symbolic link.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the file is a symbolic link</p>\n</div></li></ul></div></div></div><div id='method-lastAccessTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-lastAccessTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-lastAccessTime' class='name expandable'>lastAccessTime</a>( <span class='pre'></span> ) : Object {java.nio.file.attribute.FileTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the time of last access. ...</div><div class='long'><p>Returns the time of last access.</p>\n\n<p> <p> If the file system implementation does not support a time stamp\n to indicate the time of last access then this method returns\n an implementation specific default value, typically the last-modified-time or a {@code FileTime}\n representing the epoch (1970-01-01T00:00:00Z).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.file.attribute.FileTime}</span><div class='sub-desc'><p>a {@code FileTime} representing the time of last access</p>\n</div></li></ul></div></div></div><div id='method-lastModifiedTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-lastModifiedTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-lastModifiedTime' class='name expandable'>lastModifiedTime</a>( <span class='pre'></span> ) : Object {java.nio.file.attribute.FileTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the time of last modification. ...</div><div class='long'><p>Returns the time of last modification.</p>\n\n<p> <p> If the file system implementation does not support a time stamp\n to indicate the time of last modification then this method returns an\n implementation specific default value, typically a {@code FileTime}\n representing the epoch (1970-01-01T00:00:00Z).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.file.attribute.FileTime}</span><div class='sub-desc'><p>a {@code FileTime} representing the time the file was last\n          modified</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.attribute.BasicFileAttributes'>java.nio.file.attribute.BasicFileAttributes</span><br/><a href='source/BasicFileAttributes.html#java-nio-file-attribute-BasicFileAttributes-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.attribute.BasicFileAttributes-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the size of the file (in bytes). ...</div><div class='long'><p>Returns the size of the file (in bytes). The size may differ from the\n actual size on the file system due to compression, support for sparse\n files, or other reasons. The size of files that are not <a href=\"#!/api/java.nio.file.attribute.BasicFileAttributes-method-isRegularFile\" rel=\"java.nio.file.attribute.BasicFileAttributes-method-isRegularFile\" class=\"docClass\">regular</a> files is implementation specific and\n therefore unspecified.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the file size, in bytes</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});