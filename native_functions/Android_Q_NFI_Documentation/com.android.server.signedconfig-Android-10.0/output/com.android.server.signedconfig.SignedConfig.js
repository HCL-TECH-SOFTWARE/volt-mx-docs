Ext.data.JsonP.com_android_server_signedconfig_SignedConfig({"tagname":"class","name":"com.android.server.signedconfig.SignedConfig","autodetected":{},"files":[{"filename":"SignedConfig.js","href":"SignedConfig.html#com-android-server-signedconfig-SignedConfig"}],"extends":"java.lang.Object","members":[{"name":"perSdkConfig","tagname":"property","owner":"com.android.server.signedconfig.SignedConfig","id":"property-perSdkConfig","meta":{}},{"name":"version","tagname":"property","owner":"com.android.server.signedconfig.SignedConfig","id":"property-version","meta":{}},{"name":"getMatchingConfig","tagname":"method","owner":"com.android.server.signedconfig.SignedConfig","id":"method-getMatchingConfig","meta":{}},{"name":"parse","tagname":"method","owner":"com.android.server.signedconfig.SignedConfig","id":"method-parse","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.signedconfig.SignedConfig","short_doc":"Represents signed configuration. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.signedconfig.SignedConfig</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SignedConfig.html#com-android-server-signedconfig-SignedConfig' target='_blank'>SignedConfig.js</a></div></pre><div class='doc-contents'><p>Represents signed configuration.</p>\n\n<p> <p>This configuration should only be used if the signature has already been verified.</p>\n\n<p> This class also parses signed config from JSON. The format expected is:</p>\n\n<pre> {\n   \"version\": 1\n   \"config\": [\n     {\n       \"min_sdk\": 28,\n       \"max_sdk\": 29,\n       \"values\": {\n         \"key\": \"value\",\n         \"key2\": \"value2\"\n         ...\n       }\n     },\n     ...\n   ],\n }\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-perSdkConfig' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.signedconfig.SignedConfig'>com.android.server.signedconfig.SignedConfig</span><br/><a href='source/SignedConfig.html#com-android-server-signedconfig-SignedConfig-property-perSdkConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.signedconfig.SignedConfig-property-perSdkConfig' class='name expandable'>perSdkConfig</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-version' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.signedconfig.SignedConfig'>com.android.server.signedconfig.SignedConfig</span><br/><a href='source/SignedConfig.html#com-android-server-signedconfig-SignedConfig-property-version' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.signedconfig.SignedConfig-property-version' class='name expandable'>version</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getMatchingConfig' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.signedconfig.SignedConfig'>com.android.server.signedconfig.SignedConfig</span><br/><a href='source/SignedConfig.html#com-android-server-signedconfig-SignedConfig-method-getMatchingConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.signedconfig.SignedConfig-method-getMatchingConfig' class='name expandable'>getMatchingConfig</a>( <span class='pre'>sdkVersion</span> ) : Object {com.android.server.signedconfig.SignedConfig.PerSdkConfig}<span class=\"signature\"></span></div><div class='description'><div class='short'>Find matching sdk config for a given SDK level. ...</div><div class='long'><p>Find matching sdk config for a given SDK level.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sdkVersion</span> : Number<div class='sub-desc'><p>SDK version of device.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.server.signedconfig.SignedConfig.PerSdkConfig}</span><div class='sub-desc'><p>Matching config, of {@code null} if there is none.</p>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.signedconfig.SignedConfig'>com.android.server.signedconfig.SignedConfig</span><br/><a href='source/SignedConfig.html#com-android-server-signedconfig-SignedConfig-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.signedconfig.SignedConfig-method-parse' class='name expandable'>parse</a>( <span class='pre'>config, allowedKeys, keyValueMappers</span> ) : Object {com.android.server.signedconfig.SignedConfig}<span class=\"signature\"></span></div><div class='description'><div class='short'>Parse configuration from an APK. ...</div><div class='long'><p>Parse configuration from an APK.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : String<div class='sub-desc'><p>Config string as read from the APK metadata.</p>\n</div></li><li><span class='pre'>allowedKeys</span> : Object {java.util.Set}<div class='sub-desc'><p>Set of allowed keys in the config. Any key/value mapping for a key not in\n                    this set will result in an InvalidConfigException being thrown.</p>\n</div></li><li><span class='pre'>keyValueMappers</span> : Object {java.util.Map}<div class='sub-desc'><p>Mappings for values per key. The keys in the top level map should be\n                        a subset of {@code allowedKeys}. The keys in the inner map indicate\n                        the set of allowed values for that keys value. This map will be\n                        applied to the value in the configuration. This is intended to allow\n                        enum-like values to be encoded as strings in the configuration, and\n                        mapped back to integers when the configuration is parsed.</p>\n\n<pre><code>                    &lt;p&gt;Any config key with a value that does not appear in the\n                    corresponding map will result in an InvalidConfigException\n                    being thrown.\n</code></pre>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.server.signedconfig.SignedConfig}</span><div class='sub-desc'><p>Parsed configuration.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>InvalidConfigException If there's a problem parsing the config.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});