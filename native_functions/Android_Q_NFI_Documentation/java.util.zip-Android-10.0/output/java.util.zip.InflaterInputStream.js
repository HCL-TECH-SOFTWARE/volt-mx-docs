Ext.data.JsonP.java_util_zip_InflaterInputStream({"tagname":"class","name":"java.util.zip.InflaterInputStream","autodetected":{},"files":[{"filename":"InflaterInputStream.js","href":"InflaterInputStream.html#java-util-zip-InflaterInputStream"}],"extends":"java.io.FilterInputStream","author":[{"tagname":"author","name":"David Connelly","email":null}],"members":[{"name":"available","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-close","meta":{}},{"name":"mark","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-read","meta":{}},{"name":"reset","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-skip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.zip.InflaterInputStream","short_doc":"This class implements a stream filter for uncompressing data in the\n \"deflate\" compression format. ...","classIcon":"icon-class","superclasses":["java.io.FilterInputStream"],"subclasses":["java.util.zip.GZIPInputStream","java.util.zip.ZipInputStream"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.io.FilterInputStream<div class='subclass '><strong>java.util.zip.InflaterInputStream</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.util.zip.GZIPInputStream' rel='java.util.zip.GZIPInputStream' class='docClass'>java.util.zip.GZIPInputStream</a></div><div class='dependency'><a href='#!/api/java.util.zip.ZipInputStream' rel='java.util.zip.ZipInputStream' class='docClass'>java.util.zip.ZipInputStream</a></div><h4>Files</h4><div class='dependency'><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream' target='_blank'>InflaterInputStream.js</a></div></pre><div class='doc-contents'><p>This class implements a stream filter for uncompressing data in the\n \"deflate\" compression format. It is also used as the basis for other\n decompression filters, such as GZIPInputStream.</p>\n\n<p> @see         Inflater</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.InflaterInputStream'>java.util.zip.InflaterInputStream</span><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns 0 after EOF has been reached, otherwise always return 1. ...</div><div class='long'><p>Returns 0 after EOF has been reached, otherwise always return 1.\n <p>\n Programs should not count on this method to return the actual number\n of bytes that could be read without blocking.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>1 before EOF and 0 after EOF.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.InflaterInputStream'>java.util.zip.InflaterInputStream</span><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this input stream and releases any system resources associated\n with the stream. ...</div><div class='long'><p>Closes this input stream and releases any system resources associated\n with the stream.\n@exception IOException if an I/O error has occurred</p>\n</div></div></div><div id='method-mark' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.InflaterInputStream'>java.util.zip.InflaterInputStream</span><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-mark' class='name expandable'>mark</a>( <span class='pre'>readlimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the current position in this input stream. ...</div><div class='long'><p>Marks the current position in this input stream.</p>\n\n<p> <p> The <code>mark</code> method of <code>InflaterInputStream</code>\n does nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readlimit</span> : Number<div class='sub-desc'><p>the maximum limit of bytes that can be read before\n                      the mark position becomes invalid.\n@see java.io.InputStream#reset()</p>\n</div></li></ul></div></div></div><div id='method-markSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.InflaterInputStream'>java.util.zip.InflaterInputStream</span><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if this input stream supports the mark and\n reset methods. ...</div><div class='long'><p>Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods. The <code>markSupported</code>\n method of <code>InflaterInputStream</code> returns\n <code>false</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>a <code>boolean</code> indicating if this stream type supports\n          the <code>mark</code> and <code>reset</code> methods.\n@see java.io.InputStream#mark(int)\n@see java.io.InputStream#reset()</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.InflaterInputStream'>java.util.zip.InflaterInputStream</span><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-read' class='name expandable'>read</a>( <span class='pre'>b, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads uncompressed data into an array of bytes. ...</div><div class='long'><p>Reads uncompressed data into an array of bytes. If <code>len</code> is not\n zero, the method will block until some input can be decompressed; otherwise,\n no bytes are read and <code>0</code> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the destination array <code>b</code></p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the maximum number of bytes read</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes read, or -1 if the end of the\n         compressed input is reached or a preset dictionary is needed\n@exception NullPointerException If <code>b</code> is <code>null</code>.\n@exception IndexOutOfBoundsException If <code>off</code> is negative,\n <code>len</code> is negative, or <code>len</code> is greater than\n <code>b.length - off</code>\n@exception ZipException if a ZIP format error has occurred\n@exception IOException if an I/O error has occurred</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.InflaterInputStream'>java.util.zip.InflaterInputStream</span><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Repositions this stream to the position at the time the\n mark method was last called on this input stream. ...</div><div class='long'><p>Repositions this stream to the position at the time the\n <code>mark</code> method was last called on this input stream.</p>\n\n<p> <p> The method <code>reset</code> for class\n <code>InflaterInputStream</code> does nothing except throw an\n <code>IOException</code>.\n@exception IOException  if this method is invoked.\n@see java.io.InputStream#mark(int)\n@see java.io.IOException</p>\n</div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.InflaterInputStream'>java.util.zip.InflaterInputStream</span><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips specified number of bytes of uncompressed data. ...</div><div class='long'><p>Skips specified number of bytes of uncompressed data.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>the number of bytes to skip</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes skipped.\n@exception IOException if an I/O error has occurred\n@exception IllegalArgumentException if {@code n &lt; 0}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});