Ext.data.JsonP.java_util_zip_ZipFile({"tagname":"class","name":"java.util.zip.ZipFile","autodetected":{},"files":[{"filename":"ZipFile.js","href":"ZipFile.html#java-util-zip-ZipFile"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"David Connelly","email":null}],"members":[{"name":"OPEN_DELETE","tagname":"property","owner":"java.util.zip.ZipFile","id":"property-OPEN_DELETE","meta":{}},{"name":"OPEN_READ","tagname":"property","owner":"java.util.zip.ZipFile","id":"property-OPEN_READ","meta":{}},{"name":"close","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-close","meta":{}},{"name":"entries","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-entries","meta":{}},{"name":"getComment","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-getComment","meta":{}},{"name":"getEntry","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-getEntry","meta":{}},{"name":"getInputStream","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-getInputStream","meta":{}},{"name":"getName","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-getName","meta":{}},{"name":"size","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-size","meta":{}},{"name":"stream","tagname":"method","owner":"java.util.zip.ZipFile","id":"method-stream","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.zip.ZipFile","short_doc":"implements java.util.zip.ZipConstants\n\n implements java.io.Closeable\n\nThis class is used to read entries from a zip f...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.util.zip.ZipFile</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ZipFile.html#java-util-zip-ZipFile' target='_blank'>ZipFile.js</a></div></pre><div class='doc-contents'><p>implements java.util.zip.ZipConstants</p>\n\n<p> implements java.io.Closeable</p>\n\n<p>This class is used to read entries from a zip file.</p>\n\n<p> <p> Unless otherwise noted, passing a <tt>null</tt> argument to a constructor\n or method in this class will cause a NullPointerException to be\n thrown.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-OPEN_DELETE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-property-OPEN_DELETE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-property-OPEN_DELETE' class='name expandable'>OPEN_DELETE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Mode flag to open a zip file and mark it for deletion. ...</div><div class='long'><p>Mode flag to open a zip file and mark it for deletion.  The file will be\ndeleted some time between the moment that it is opened and the moment\nthat it is closed, but its contents will remain accessible via the\n<tt>ZipFile</tt> object until either the close method is invoked or the\nvirtual machine exits.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-OPEN_READ' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-property-OPEN_READ' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-property-OPEN_READ' class='name expandable'>OPEN_READ</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Mode flag to open a zip file for reading. ...</div><div class='long'><p>Mode flag to open a zip file for reading.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the ZIP file. ...</div><div class='long'><p>Closes the ZIP file.\n <p> Closing this ZIP file will close all of the input streams\n previously returned by invocations of the <a href=\"#!/api/java.util.zip.ZipFile-method-getInputStream\" rel=\"java.util.zip.ZipFile-method-getInputStream\" class=\"docClass\">getInputStream</a> method.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error has occurred</p>\n</div></li></ul></div></div></div><div id='method-entries' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-entries' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-entries' class='name expandable'>entries</a>( <span class='pre'></span> ) : Object {java.util.Enumeration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an enumeration of the ZIP file entries. ...</div><div class='long'><p>Returns an enumeration of the ZIP file entries.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Enumeration}</span><div class='sub-desc'><p>an enumeration of the ZIP file entries</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the zip file has been closed</p>\n</div></li></ul></div></div></div><div id='method-getComment' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-getComment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-getComment' class='name expandable'>getComment</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the zip file comment, or null if none. ...</div><div class='long'><p>Returns the zip file comment, or null if none.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the comment string for the zip file, or null if none</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the zip file has been closed</p>\n\n<p> Since 1.7</p>\n</div></li></ul></div></div></div><div id='method-getEntry' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-getEntry' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-getEntry' class='name expandable'>getEntry</a>( <span class='pre'>name</span> ) : Object {java.util.zip.ZipEntry}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the zip file entry for the specified name, or null\n if not found. ...</div><div class='long'><p>Returns the zip file entry for the specified name, or null\n if not found.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>the name of the entry</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.zip.ZipEntry}</span><div class='sub-desc'><p>the zip file entry, or null if not found</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the zip file has been closed</p>\n</div></li></ul></div></div></div><div id='method-getInputStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-getInputStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-getInputStream' class='name expandable'>getInputStream</a>( <span class='pre'>entry</span> ) : Object {java.io.InputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an input stream for reading the contents of the specified\n zip file entry. ...</div><div class='long'><p>Returns an input stream for reading the contents of the specified\n zip file entry.</p>\n\n<p> <p> Closing this ZIP file will, in turn, close all input\n streams that have been returned by invocations of this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>entry</span> : Object {ZipEntry}<div class='sub-desc'><p>the zip file entry</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.InputStream}</span><div class='sub-desc'><p>the input stream for reading the contents of the specified\n zip file entry.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ZipException if a ZIP format error has occurred</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error has occurred</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the zip file has been closed</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the path name of the ZIP file. ...</div><div class='long'><p>Returns the path name of the ZIP file.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the path name of the ZIP file</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of entries in the ZIP file. ...</div><div class='long'><p>Returns the number of entries in the ZIP file.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of entries in the ZIP file</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the zip file has been closed</p>\n</div></li></ul></div></div></div><div id='method-stream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipFile'>java.util.zip.ZipFile</span><br/><a href='source/ZipFile.html#java-util-zip-ZipFile-method-stream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipFile-method-stream' class='name expandable'>stream</a>( <span class='pre'></span> ) : Object {java.util.stream.Stream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return an ordered {@code Stream} over the ZIP file entries. ...</div><div class='long'><p>Return an ordered {@code Stream} over the ZIP file entries.\n Entries appear in the {@code Stream} in the order they appear in\n the central directory of the ZIP file.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.stream.Stream}</span><div class='sub-desc'><p>an ordered {@code Stream} of entries in this ZIP file</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the zip file has been closed</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});