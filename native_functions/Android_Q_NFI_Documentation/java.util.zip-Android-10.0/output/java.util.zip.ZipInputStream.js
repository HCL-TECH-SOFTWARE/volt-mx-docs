Ext.data.JsonP.java_util_zip_ZipInputStream({"tagname":"class","name":"java.util.zip.ZipInputStream","autodetected":{},"files":[{"filename":"ZipInputStream.js","href":"ZipInputStream.html#java-util-zip-ZipInputStream"}],"extends":"java.util.zip.InflaterInputStream","author":[{"tagname":"author","name":"David Connelly","email":null}],"members":[{"name":"available","tagname":"method","owner":"java.util.zip.ZipInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"java.util.zip.ZipInputStream","id":"method-close","meta":{}},{"name":"closeEntry","tagname":"method","owner":"java.util.zip.ZipInputStream","id":"method-closeEntry","meta":{}},{"name":"getNextEntry","tagname":"method","owner":"java.util.zip.ZipInputStream","id":"method-getNextEntry","meta":{}},{"name":"mark","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.util.zip.ZipInputStream","id":"method-read","meta":{}},{"name":"reset","tagname":"method","owner":"java.util.zip.InflaterInputStream","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.util.zip.ZipInputStream","id":"method-skip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.zip.ZipInputStream","short_doc":"implements java.util.zip.ZipConstants\n\nThis class implements an input stream filter for reading files in the\n ZIP fil...","classIcon":"icon-class","superclasses":["java.io.FilterInputStream","java.util.zip.InflaterInputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.io.FilterInputStream<div class='subclass '><a href='#!/api/java.util.zip.InflaterInputStream' rel='java.util.zip.InflaterInputStream' class='docClass'>java.util.zip.InflaterInputStream</a><div class='subclass '><strong>java.util.zip.ZipInputStream</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ZipInputStream.html#java-util-zip-ZipInputStream' target='_blank'>ZipInputStream.js</a></div></pre><div class='doc-contents'><p>implements java.util.zip.ZipConstants</p>\n\n<p>This class implements an input stream filter for reading files in the\n ZIP file format. Includes support for both compressed and uncompressed\n entries.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipInputStream'>java.util.zip.ZipInputStream</span><br/><a href='source/ZipInputStream.html#java-util-zip-ZipInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns 0 after EOF has reached for the current entry data,\n otherwise always return 1. ...</div><div class='long'><p>Returns 0 after EOF has reached for the current entry data,\n otherwise always return 1.\n <p>\n Programs should not count on this method to return the actual number\n of bytes that could be read without blocking.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>1 before EOF and 0 after EOF has reached for current entry.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.zip.InflaterInputStream-method-available\" rel=\"java.util.zip.InflaterInputStream-method-available\" class=\"docClass\">java.util.zip.InflaterInputStream.available</a></p></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipInputStream'>java.util.zip.ZipInputStream</span><br/><a href='source/ZipInputStream.html#java-util-zip-ZipInputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipInputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this input stream and releases any system resources associated\n with the stream. ...</div><div class='long'><p>Closes this input stream and releases any system resources associated\n with the stream.\n@exception IOException if an I/O error has occurred</p>\n<p>Overrides: <a href=\"#!/api/java.util.zip.InflaterInputStream-method-close\" rel=\"java.util.zip.InflaterInputStream-method-close\" class=\"docClass\">java.util.zip.InflaterInputStream.close</a></p></div></div></div><div id='method-closeEntry' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipInputStream'>java.util.zip.ZipInputStream</span><br/><a href='source/ZipInputStream.html#java-util-zip-ZipInputStream-method-closeEntry' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipInputStream-method-closeEntry' class='name expandable'>closeEntry</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the current ZIP entry and positions the stream for reading the\n next entry. ...</div><div class='long'><p>Closes the current ZIP entry and positions the stream for reading the\n next entry.\n@exception ZipException if a ZIP file error has occurred\n@exception IOException if an I/O error has occurred</p>\n</div></div></div><div id='method-getNextEntry' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipInputStream'>java.util.zip.ZipInputStream</span><br/><a href='source/ZipInputStream.html#java-util-zip-ZipInputStream-method-getNextEntry' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipInputStream-method-getNextEntry' class='name expandable'>getNextEntry</a>( <span class='pre'></span> ) : Object {java.util.zip.ZipEntry}<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads the next ZIP file entry and positions the stream at the\n beginning of the entry data. ...</div><div class='long'><p>Reads the next ZIP file entry and positions the stream at the\n beginning of the entry data.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.zip.ZipEntry}</span><div class='sub-desc'><p>the next ZIP file entry, or null if there are no more entries\n@exception ZipException if a ZIP file error has occurred\n@exception IOException if an I/O error has occurred</p>\n</div></li></ul></div></div></div><div id='method-mark' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.zip.InflaterInputStream' rel='java.util.zip.InflaterInputStream' class='defined-in docClass'>java.util.zip.InflaterInputStream</a><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-mark' class='name expandable'>mark</a>( <span class='pre'>readlimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the current position in this input stream. ...</div><div class='long'><p>Marks the current position in this input stream.</p>\n\n<p> <p> The <code>mark</code> method of <code>InflaterInputStream</code>\n does nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readlimit</span> : Number<div class='sub-desc'><p>the maximum limit of bytes that can be read before\n                      the mark position becomes invalid.\n@see java.io.InputStream#reset()</p>\n</div></li></ul></div></div></div><div id='method-markSupported' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.zip.InflaterInputStream' rel='java.util.zip.InflaterInputStream' class='defined-in docClass'>java.util.zip.InflaterInputStream</a><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if this input stream supports the mark and\n reset methods. ...</div><div class='long'><p>Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods. The <code>markSupported</code>\n method of <code>InflaterInputStream</code> returns\n <code>false</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>a <code>boolean</code> indicating if this stream type supports\n          the <code>mark</code> and <code>reset</code> methods.\n@see java.io.InputStream#mark(int)\n@see java.io.InputStream#reset()</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipInputStream'>java.util.zip.ZipInputStream</span><br/><a href='source/ZipInputStream.html#java-util-zip-ZipInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipInputStream-method-read' class='name expandable'>read</a>( <span class='pre'>b, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads from the current ZIP entry into an array of bytes. ...</div><div class='long'><p>Reads from the current ZIP entry into an array of bytes.\n If <code>len</code> is not zero, the method\n blocks until some input is available; otherwise, no\n bytes are read and <code>0</code> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the destination array <code>b</code></p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the maximum number of bytes read</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes read, or -1 if the end of the\n         entry is reached\n@exception NullPointerException if <code>b</code> is <code>null</code>.\n@exception IndexOutOfBoundsException if <code>off</code> is negative,\n <code>len</code> is negative, or <code>len</code> is greater than\n <code>b.length - off</code>\n@exception ZipException if a ZIP file error has occurred\n@exception IOException if an I/O error has occurred</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.zip.InflaterInputStream-method-read\" rel=\"java.util.zip.InflaterInputStream-method-read\" class=\"docClass\">java.util.zip.InflaterInputStream.read</a></p></div></div></div><div id='method-reset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.zip.InflaterInputStream' rel='java.util.zip.InflaterInputStream' class='defined-in docClass'>java.util.zip.InflaterInputStream</a><br/><a href='source/InflaterInputStream.html#java-util-zip-InflaterInputStream-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.InflaterInputStream-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Repositions this stream to the position at the time the\n mark method was last called on this input stream. ...</div><div class='long'><p>Repositions this stream to the position at the time the\n <code>mark</code> method was last called on this input stream.</p>\n\n<p> <p> The method <code>reset</code> for class\n <code>InflaterInputStream</code> does nothing except throw an\n <code>IOException</code>.\n@exception IOException  if this method is invoked.\n@see java.io.InputStream#mark(int)\n@see java.io.IOException</p>\n</div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.ZipInputStream'>java.util.zip.ZipInputStream</span><br/><a href='source/ZipInputStream.html#java-util-zip-ZipInputStream-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.ZipInputStream-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips specified number of bytes in the current ZIP entry. ...</div><div class='long'><p>Skips specified number of bytes in the current ZIP entry.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>the number of bytes to skip</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes skipped\n@exception ZipException if a ZIP file error has occurred\n@exception IOException if an I/O error has occurred\n@exception IllegalArgumentException if {@code n &lt; 0}</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.zip.InflaterInputStream-method-skip\" rel=\"java.util.zip.InflaterInputStream-method-skip\" class=\"docClass\">java.util.zip.InflaterInputStream.skip</a></p></div></div></div></div></div></div></div>","meta":{}});