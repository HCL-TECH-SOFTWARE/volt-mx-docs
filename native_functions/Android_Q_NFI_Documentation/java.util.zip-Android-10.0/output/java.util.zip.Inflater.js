Ext.data.JsonP.java_util_zip_Inflater({"tagname":"class","name":"java.util.zip.Inflater","autodetected":{},"files":[{"filename":"Inflater.js","href":"Inflater.html#java-util-zip-Inflater"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"David Connelly","email":null}],"members":[{"name":"end","tagname":"method","owner":"java.util.zip.Inflater","id":"method-end","meta":{}},{"name":"finished","tagname":"method","owner":"java.util.zip.Inflater","id":"method-finished","meta":{}},{"name":"getAdler","tagname":"method","owner":"java.util.zip.Inflater","id":"method-getAdler","meta":{}},{"name":"getBytesRead","tagname":"method","owner":"java.util.zip.Inflater","id":"method-getBytesRead","meta":{}},{"name":"getBytesWritten","tagname":"method","owner":"java.util.zip.Inflater","id":"method-getBytesWritten","meta":{}},{"name":"getRemaining","tagname":"method","owner":"java.util.zip.Inflater","id":"method-getRemaining","meta":{}},{"name":"getTotalIn","tagname":"method","owner":"java.util.zip.Inflater","id":"method-getTotalIn","meta":{}},{"name":"getTotalOut","tagname":"method","owner":"java.util.zip.Inflater","id":"method-getTotalOut","meta":{}},{"name":"inflate","tagname":"method","owner":"java.util.zip.Inflater","id":"method-inflate","meta":{}},{"name":"needsDictionary","tagname":"method","owner":"java.util.zip.Inflater","id":"method-needsDictionary","meta":{}},{"name":"needsInput","tagname":"method","owner":"java.util.zip.Inflater","id":"method-needsInput","meta":{}},{"name":"reset","tagname":"method","owner":"java.util.zip.Inflater","id":"method-reset","meta":{}},{"name":"setDictionary","tagname":"method","owner":"java.util.zip.Inflater","id":"method-setDictionary","meta":{}},{"name":"setInput","tagname":"method","owner":"java.util.zip.Inflater","id":"method-setInput","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.zip.Inflater","short_doc":"This class provides support for general purpose decompression using the\n popular ZLIB compression library. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.util.zip.Inflater</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Inflater.html#java-util-zip-Inflater' target='_blank'>Inflater.js</a></div></pre><div class='doc-contents'><p>This class provides support for general purpose decompression using the\n popular ZLIB compression library. The ZLIB compression library was\n initially developed as part of the PNG graphics standard and is not\n protected by patents. It is fully described in the specifications at\n the <a href=\"package-summary.html#package_description\">java.util.zip\n package description</a>.</p>\n\n<p> <p>The following code fragment demonstrates a trivial compression\n and decompression of a string using <tt>Deflater</tt> and\n <tt>Inflater</tt>.</p>\n\n<p> <blockquote></blockquote></p>\n\n<pre> try {\n     // Encode a String into bytes\n     String inputString = \"blahblahblah€€\";\n     byte[] input = inputString.getBytes(\"UTF-8\");\n\n     // Compress the bytes\n     byte[] output = new byte[100];\n     Deflater compresser = new Deflater();\n     compresser.setInput(input);\n     compresser.finish();\n     int compressedDataLength = compresser.deflate(output);\n\n     // Decompress the bytes\n     Inflater decompresser = new Inflater();\n     decompresser.setInput(output, 0, compressedDataLength);\n     byte[] result = new byte[100];\n     int resultLength = decompresser.inflate(result);\n     decompresser.end();\n\n     // Decode the bytes into a String\n     String outputString = new String(result, 0, resultLength, \"UTF-8\");\n } catch(java.io.UnsupportedEncodingException ex) {\n     // handle\n } catch (<a href=\"#!/api/java.util.zip.DataFormatException\" rel=\"java.util.zip.DataFormatException\" class=\"docClass\">java.util.zip.DataFormatException</a> ex) {\n     // handle\n }\n </pre>\n\n\n<p></p>\n\n<p> @see         Deflater</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-end' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-end' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-end' class='name expandable'>end</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the decompressor and discards any unprocessed input. ...</div><div class='long'><p>Closes the decompressor and discards any unprocessed input.\n This method should be called when the decompressor is no longer\n being used, but will also be called automatically by the finalize()\n method. Once this method is called, the behavior of the Inflater\n object is undefined.</p>\n</div></div></div><div id='method-finished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-finished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-finished' class='name expandable'>finished</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the end of the compressed data stream has been\n reached. ...</div><div class='long'><p>Returns true if the end of the compressed data stream has been\n reached.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the end of the compressed data stream has been\n reached</p>\n</div></li></ul></div></div></div><div id='method-getAdler' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-getAdler' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-getAdler' class='name expandable'>getAdler</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the ADLER-32 value of the uncompressed data. ...</div><div class='long'><p>Returns the ADLER-32 value of the uncompressed data.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the ADLER-32 value of the uncompressed data</p>\n</div></li></ul></div></div></div><div id='method-getBytesRead' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-getBytesRead' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-getBytesRead' class='name expandable'>getBytesRead</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the total number of compressed bytes input so far. ...</div><div class='long'><p>Returns the total number of compressed bytes input so far.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total (non-negative) number of compressed bytes input so far</p>\n</div></li></ul></div></div></div><div id='method-getBytesWritten' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-getBytesWritten' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-getBytesWritten' class='name expandable'>getBytesWritten</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the total number of uncompressed bytes output so far. ...</div><div class='long'><p>Returns the total number of uncompressed bytes output so far.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total (non-negative) number of uncompressed bytes output so far</p>\n</div></li></ul></div></div></div><div id='method-getRemaining' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-getRemaining' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-getRemaining' class='name expandable'>getRemaining</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the total number of bytes remaining in the input buffer. ...</div><div class='long'><p>Returns the total number of bytes remaining in the input buffer.\n This can be used to find out what bytes still remain in the input\n buffer after decompression has finished.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of bytes remaining in the input buffer</p>\n</div></li></ul></div></div></div><div id='method-getTotalIn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-getTotalIn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-getTotalIn' class='name expandable'>getTotalIn</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the total number of compressed bytes input so far. ...</div><div class='long'><p>Returns the total number of compressed bytes input so far.</p>\n\n<p> <p>Since the number of bytes may be greater than\n Integer.MAX_VALUE, the <a href=\"#!/api/java.util.zip.Inflater-method-getBytesRead\" rel=\"java.util.zip.Inflater-method-getBytesRead\" class=\"docClass\">getBytesRead</a>() method is now\n the preferred means of obtaining this information.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of compressed bytes input so far</p>\n</div></li></ul></div></div></div><div id='method-getTotalOut' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-getTotalOut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-getTotalOut' class='name expandable'>getTotalOut</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the total number of uncompressed bytes output so far. ...</div><div class='long'><p>Returns the total number of uncompressed bytes output so far.</p>\n\n<p> <p>Since the number of bytes may be greater than\n Integer.MAX_VALUE, the <a href=\"#!/api/java.util.zip.Inflater-method-getBytesWritten\" rel=\"java.util.zip.Inflater-method-getBytesWritten\" class=\"docClass\">getBytesWritten</a>() method is now\n the preferred means of obtaining this information.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of uncompressed bytes output so far</p>\n</div></li></ul></div></div></div><div id='method-inflate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-inflate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-inflate' class='name expandable'>inflate</a>( <span class='pre'>b</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Uncompresses bytes into specified buffer. ...</div><div class='long'><p>Uncompresses bytes into specified buffer. Returns actual number\n of bytes uncompressed. A return value of 0 indicates that\n needsInput() or needsDictionary() should be called in order to\n determine if more input data or a preset dictionary is required.\n In the latter case, getAdler() can be used to get the Adler-32\n value of the dictionary required.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer for the uncompressed data</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of uncompressed bytes\n@exception DataFormatException if the compressed data format is invalid\n@see Inflater#needsInput\n@see Inflater#needsDictionary</p>\n</div></li></ul></div></div></div><div id='method-needsDictionary' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-needsDictionary' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-needsDictionary' class='name expandable'>needsDictionary</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if a preset dictionary is needed for decompression. ...</div><div class='long'><p>Returns true if a preset dictionary is needed for decompression.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a preset dictionary is needed for decompression\n@see Inflater#setDictionary</p>\n</div></li></ul></div></div></div><div id='method-needsInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-needsInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-needsInput' class='name expandable'>needsInput</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if no data remains in the input buffer. ...</div><div class='long'><p>Returns true if no data remains in the input buffer. This can\n be used to determine if <a href=\"#!/api/java.util.zip.Inflater-method-setInput\" rel=\"java.util.zip.Inflater-method-setInput\" class=\"docClass\">setInput</a> should be called in order\n to provide more input.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if no data remains in the input buffer</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets inflater so that a new set of input data can be processed. ...</div><div class='long'><p>Resets inflater so that a new set of input data can be processed.</p>\n</div></div></div><div id='method-setDictionary' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-setDictionary' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-setDictionary' class='name expandable'>setDictionary</a>( <span class='pre'>b</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the preset dictionary to the given array of bytes. ...</div><div class='long'><p>Sets the preset dictionary to the given array of bytes. Should be\n called when inflate() returns 0 and needsDictionary() returns true\n indicating that a preset dictionary is required. The method getAdler()\n can be used to get the Adler-32 value of the dictionary needed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the dictionary data bytes\n@see Inflater#needsDictionary\n@see Inflater#getAdler</p>\n</div></li></ul></div></div></div><div id='method-setInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.zip.Inflater'>java.util.zip.Inflater</span><br/><a href='source/Inflater.html#java-util-zip-Inflater-method-setInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.zip.Inflater-method-setInput' class='name expandable'>setInput</a>( <span class='pre'>b</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets input data for decompression. ...</div><div class='long'><p>Sets input data for decompression. Should be called whenever\n needsInput() returns true indicating that more input data is\n required.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the input data bytes\n@see Inflater#needsInput</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});