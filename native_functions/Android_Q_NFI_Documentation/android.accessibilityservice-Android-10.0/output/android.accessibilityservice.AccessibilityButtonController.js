Ext.data.JsonP.android_accessibilityservice_AccessibilityButtonController({"tagname":"class","name":"android.accessibilityservice.AccessibilityButtonController","autodetected":{},"files":[{"filename":"AccessibilityButtonController.js","href":"AccessibilityButtonController.html#android-accessibilityservice-AccessibilityButtonController"}],"extends":"java.lang.Object","members":[{"name":"isAccessibilityButtonAvailable","tagname":"method","owner":"android.accessibilityservice.AccessibilityButtonController","id":"method-isAccessibilityButtonAvailable","meta":{}},{"name":"registerAccessibilityButtonCallback","tagname":"method","owner":"android.accessibilityservice.AccessibilityButtonController","id":"method-registerAccessibilityButtonCallback","meta":{}},{"name":"unregisterAccessibilityButtonCallback","tagname":"method","owner":"android.accessibilityservice.AccessibilityButtonController","id":"method-unregisterAccessibilityButtonCallback","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.accessibilityservice.AccessibilityButtonController","short_doc":"Controller for the accessibility button within the system's navigation area\n \n This class may be used to query the ac...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.accessibilityservice.AccessibilityButtonController</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AccessibilityButtonController.html#android-accessibilityservice-AccessibilityButtonController' target='_blank'>AccessibilityButtonController.js</a></div></pre><div class='doc-contents'><p>Controller for the accessibility button within the system's navigation area\n <p>\n This class may be used to query the accessibility button's state and register\n callbacks for interactions with and state changes to the accessibility button when\n <a href=\"#!/api/android.accessibilityservice.AccessibilityServiceInfo-property-FLAG_REQUEST_ACCESSIBILITY_BUTTON\" rel=\"android.accessibilityservice.AccessibilityServiceInfo-property-FLAG_REQUEST_ACCESSIBILITY_BUTTON\" class=\"docClass\">android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_ACCESSIBILITY_BUTTON</a> is set.\n </p>\n <p>\n <strong>Note:</strong> This class and\n <a href=\"#!/api/android.accessibilityservice.AccessibilityServiceInfo-property-FLAG_REQUEST_ACCESSIBILITY_BUTTON\" rel=\"android.accessibilityservice.AccessibilityServiceInfo-property-FLAG_REQUEST_ACCESSIBILITY_BUTTON\" class=\"docClass\">android.accessibilityservice.AccessibilityServiceInfo.FLAG_REQUEST_ACCESSIBILITY_BUTTON</a> should not be used as\n the sole means for offering functionality to users via an <a href=\"#!/api/android.accessibilityservice.AccessibilityService\" rel=\"android.accessibilityservice.AccessibilityService\" class=\"docClass\">android.accessibilityservice.AccessibilityService</a>.\n Some device implementations may choose not to provide a software-rendered system\n navigation area, making this affordance permanently unavailable.\n </p>\n <p>\n <strong>Note:</strong> On device implementations where the accessibility button is\n supported, it may not be available at all times, such as when a foreground application uses\n android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION. A user may also choose to assign\n this button to another accessibility service or feature. In each of these cases, a\n registered <a href=\"#!/api/android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback\" rel=\"android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback\" class=\"docClass\">android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback</a>'s\n boolean)\n method will be invoked to provide notifications of changes in the accessibility button's\n availability to the registering service.\n </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-isAccessibilityButtonAvailable' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accessibilityservice.AccessibilityButtonController'>android.accessibilityservice.AccessibilityButtonController</span><br/><a href='source/AccessibilityButtonController.html#android-accessibilityservice-AccessibilityButtonController-method-isAccessibilityButtonAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accessibilityservice.AccessibilityButtonController-method-isAccessibilityButtonAvailable' class='name expandable'>isAccessibilityButtonAvailable</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves whether the accessibility button in the system's navigation area is\n available to the calling service. ...</div><div class='long'><p>Retrieves whether the accessibility button in the system's navigation area is\n available to the calling service.\n <p>\n <strong>Note:</strong> If the service is not yet connected (e.g.\n android.accessibilityservice.AccessibilityService.onServiceConnected() has not yet been called) or the\n service has been disconnected, this method will have no effect and return {@code false}.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the accessibility button in the system's navigation area is\n available to the calling service, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-registerAccessibilityButtonCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accessibilityservice.AccessibilityButtonController'>android.accessibilityservice.AccessibilityButtonController</span><br/><a href='source/AccessibilityButtonController.html#android-accessibilityservice-AccessibilityButtonController-method-registerAccessibilityButtonCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accessibilityservice.AccessibilityButtonController-method-registerAccessibilityButtonCallback' class='name expandable'>registerAccessibilityButtonCallback</a>( <span class='pre'>callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers the provided android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback for int...</div><div class='long'><p>Registers the provided <a href=\"#!/api/android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback\" rel=\"android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback\" class=\"docClass\">android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback</a> for interaction and state\n change callbacks related to the accessibility button. The callback will occur on the\n specified Handler's thread, or on the services's main thread if the handler is\n {@code null}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {AccessibilityButtonController.AccessibilityButtonCallback}<div class='sub-desc'><p>the callback to add, must be non-null</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>the handler on which the callback should execute, must be non-null</p>\n</div></li></ul></div></div></div><div id='method-unregisterAccessibilityButtonCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.accessibilityservice.AccessibilityButtonController'>android.accessibilityservice.AccessibilityButtonController</span><br/><a href='source/AccessibilityButtonController.html#android-accessibilityservice-AccessibilityButtonController-method-unregisterAccessibilityButtonCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.accessibilityservice.AccessibilityButtonController-method-unregisterAccessibilityButtonCallback' class='name expandable'>unregisterAccessibilityButtonCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters the provided android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback for i...</div><div class='long'><p>Unregisters the provided <a href=\"#!/api/android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback\" rel=\"android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback\" class=\"docClass\">android.accessibilityservice.AccessibilityButtonController.AccessibilityButtonCallback</a> for interaction and state\n change callbacks related to the accessibility button.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {AccessibilityButtonController.AccessibilityButtonCallback}<div class='sub-desc'><p>the callback to remove, must be non-null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});