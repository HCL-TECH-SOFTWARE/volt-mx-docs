Ext.data.JsonP.android_view_inspector_InspectableProperty_FlagEntry({"tagname":"class","name":"android.view.inspector.InspectableProperty.FlagEntry","autodetected":{},"files":[{"filename":"FlagEntry.js","href":"FlagEntry.html#android-view-inspector-InspectableProperty-FlagEntry"}],"hide":true,"members":[{"name":"mask","tagname":"method","owner":"android.view.inspector.InspectableProperty.FlagEntry","id":"method-mask","meta":{}},{"name":"name","tagname":"method","owner":"android.view.inspector.InspectableProperty.FlagEntry","id":"method-name","meta":{}},{"name":"target","tagname":"method","owner":"android.view.inspector.InspectableProperty.FlagEntry","id":"method-target","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.inspector.InspectableProperty.FlagEntry","short_doc":"implements java.lang.annotation.Annotation\n\n One flag value of many that may be packed into a primitive {int}. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/FlagEntry.html#android-view-inspector-InspectableProperty-FlagEntry' target='_blank'>FlagEntry.js</a></div></pre><div class='doc-contents'><p>implements java.lang.annotation.Annotation</p>\n\n<p> One flag value of many that may be packed into a primitive {int}.</p>\n\n<p> @see IntFlagMapping</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-mask' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inspector.InspectableProperty.FlagEntry'>android.view.inspector.InspectableProperty.FlagEntry</span><br/><a href='source/FlagEntry.html#android-view-inspector-InspectableProperty-FlagEntry-method-mask' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inspector.InspectableProperty.FlagEntry-method-mask' class='name expandable'>mask</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A mask that the property will be bitwise anded with before comparing to the target. ...</div><div class='long'><p>A mask that the property will be bitwise anded with before comparing to the target.</p>\n\n<p> If set to 0 (the default), the value of <a href=\"#!/api/android.view.inspector.InspectableProperty.FlagEntry-method-target\" rel=\"android.view.inspector.InspectableProperty.FlagEntry-method-target\" class=\"docClass\">target</a>() will be used as a mask. Zero\n was chosen as the default since bitwise and with zero is always zero.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A mask, or 0 to use the target as a mask</p>\n</div></li></ul></div></div></div><div id='method-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inspector.InspectableProperty.FlagEntry'>android.view.inspector.InspectableProperty.FlagEntry</span><br/><a href='source/FlagEntry.html#android-view-inspector-InspectableProperty-FlagEntry-method-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inspector.InspectableProperty.FlagEntry-method-name' class='name expandable'>name</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string name of this flag. ...</div><div class='long'><p>The string name of this flag.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A string name</p>\n</div></li></ul></div></div></div><div id='method-target' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inspector.InspectableProperty.FlagEntry'>android.view.inspector.InspectableProperty.FlagEntry</span><br/><a href='source/FlagEntry.html#android-view-inspector-InspectableProperty-FlagEntry-method-target' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inspector.InspectableProperty.FlagEntry-method-target' class='name expandable'>target</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A target value that the property's value must equal after masking. ...</div><div class='long'><p>A target value that the property's value must equal after masking.</p>\n\n<p> If a mask is not supplied (i.e., <a href=\"#!/api/android.view.inspector.InspectableProperty.FlagEntry-method-mask\" rel=\"android.view.inspector.InspectableProperty.FlagEntry-method-mask\" class=\"docClass\">mask</a>() is 0), the target will be reused as the\n mask. This handles the common case where no flags mutually exclude each other.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The target value to compare against</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});