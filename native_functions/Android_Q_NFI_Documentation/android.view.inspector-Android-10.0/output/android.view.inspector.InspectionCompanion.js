Ext.data.JsonP.android_view_inspector_InspectionCompanion({"tagname":"class","name":"android.view.inspector.InspectionCompanion","autodetected":{},"files":[{"filename":"InspectionCompanion.js","href":"InspectionCompanion.html#android-view-inspector-InspectionCompanion"}],"params":[{"tagname":"params","doc":"<p><T> The type of inspectable this is the companion to</T></p>\n"}],"members":[{"name":"mapProperties","tagname":"method","owner":"android.view.inspector.InspectionCompanion","id":"method-mapProperties","meta":{}},{"name":"readProperties","tagname":"method","owner":"android.view.inspector.InspectionCompanion","id":"method-readProperties","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.inspector.InspectionCompanion","short_doc":"An interface for companion objects used to inspect views. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/InspectionCompanion.html#android-view-inspector-InspectionCompanion' target='_blank'>InspectionCompanion.js</a></div></pre><div class='doc-contents'><p>An interface for companion objects used to inspect views.</p>\n\n<p> Inspection companions only need to handle the properties and node name of the specific class\n they are defined for, not anything from a parent class. At runtime, the inspector instantiates\n one instance of each inspection companion, and handles visiting them in the correct inheritance\n order for each type it inspects.</p>\n\n<p> Properties are read from the top of the type tree to the bottom, so that classes that override\n a property in their parent class can overwrite it in the reader. In general, properties will\n cleanly inherit through their getters, and the inspector runtime will read the properties of a\n parent class via the parent's inspection companion, and the child companion will only read\n properties added or changed since the parent was defined.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><T> The type of inspectable this is the companion to</T></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-mapProperties' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inspector.InspectionCompanion'>android.view.inspector.InspectionCompanion</span><br/><a href='source/InspectionCompanion.html#android-view-inspector-InspectionCompanion-method-mapProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inspector.InspectionCompanion-method-mapProperties' class='name expandable'>mapProperties</a>( <span class='pre'>propertyMapper</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Map the string names of the properties this companion knows about to integer IDs. ...</div><div class='long'><p>Map the string names of the properties this companion knows about to integer IDs.</p>\n\n<p> Each companion is responsible for storing the integer IDs of all its properties. This is the\n only method that is allowed to modify the stored IDs.</p>\n\n<p> Calling android.view.inspector.PropertyReader) before calling this results in\n undefined behavior.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>propertyMapper</span> : Object {PropertyMapper}<div class='sub-desc'><p>A PropertyMapper maps string names to IDs.</p>\n</div></li></ul></div></div></div><div id='method-readProperties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.inspector.InspectionCompanion'>android.view.inspector.InspectionCompanion</span><br/><a href='source/InspectionCompanion.html#android-view-inspector-InspectionCompanion-method-readProperties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.inspector.InspectionCompanion-method-readProperties' class='name expandable'>readProperties</a>( <span class='pre'>inspectable, propertyReader</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Read the values of an instance of this companion's type into a android.view.inspector.PropertyReader. ...</div><div class='long'><p>Read the values of an instance of this companion's type into a <a href=\"#!/api/android.view.inspector.PropertyReader\" rel=\"android.view.inspector.PropertyReader\" class=\"docClass\">android.view.inspector.PropertyReader</a>.</p>\n\n<p> This method needs to return the property IDs stored by\n <a href=\"#!/api/android.view.inspector.InspectionCompanion-method-mapProperties\" rel=\"android.view.inspector.InspectionCompanion-method-mapProperties\" class=\"docClass\">mapProperties</a>(PropertyMapper). Implementations should track if their properties\n have been mapped and throw a <a href=\"#!/api/android.view.inspector.InspectionCompanion.UninitializedPropertyMapException\" rel=\"android.view.inspector.InspectionCompanion.UninitializedPropertyMapException\" class=\"docClass\">android.view.inspector.InspectionCompanion.UninitializedPropertyMapException</a> if this method is\n called before {mapProperties}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inspectable</span> : Object {Object}<div class='sub-desc'><p>A object of type {T} to read the properties of.</p>\n</div></li><li><span class='pre'>propertyReader</span> : Object {PropertyReader}<div class='sub-desc'><p>An object which receives the property IDs and values.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});