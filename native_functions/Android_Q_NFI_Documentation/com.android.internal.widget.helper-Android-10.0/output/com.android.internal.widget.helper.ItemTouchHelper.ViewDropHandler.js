Ext.data.JsonP.com_android_internal_widget_helper_ItemTouchHelper_ViewDropHandler({"tagname":"class","name":"com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler","autodetected":{},"files":[{"filename":"ViewDropHandler.js","href":"ViewDropHandler.html#com-android-internal-widget-helper-ItemTouchHelper-ViewDropHandler"}],"members":[{"name":"prepareForDrop","tagname":"method","owner":"com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler","id":"method-prepareForDrop","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler","short_doc":"An interface which can be implemented by LayoutManager for better integration with\n com.android.internal.widget.helpe...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ViewDropHandler.html#com-android-internal-widget-helper-ItemTouchHelper-ViewDropHandler' target='_blank'>ViewDropHandler.js</a></div></pre><div class='doc-contents'><p>An interface which can be implemented by LayoutManager for better integration with\n <a href=\"#!/api/com.android.internal.widget.helper.ItemTouchHelper\" rel=\"com.android.internal.widget.helper.ItemTouchHelper\" class=\"docClass\">com.android.internal.widget.helper.ItemTouchHelper</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-prepareForDrop' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler'>com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler</span><br/><a href='source/ViewDropHandler.html#com-android-internal-widget-helper-ItemTouchHelper-ViewDropHandler-method-prepareForDrop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.helper.ItemTouchHelper.ViewDropHandler-method-prepareForDrop' class='name expandable'>prepareForDrop</a>( <span class='pre'>view, target, x, y</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the com.android.internal.widget.helper.ItemTouchHelper after a View is dropped over another View. ...</div><div class='long'><p>Called by the <a href=\"#!/api/com.android.internal.widget.helper.ItemTouchHelper\" rel=\"com.android.internal.widget.helper.ItemTouchHelper\" class=\"docClass\">com.android.internal.widget.helper.ItemTouchHelper</a> after a View is dropped over another View.\n <p>\n A LayoutManager should implement this interface to get ready for the upcoming move\n operation.\n <p>\n For example, LinearLayoutManager sets up a \"scrollToPositionWithOffset\" calls so that\n the View under drag will be used as an anchor View while calculating the next layout,\n making layout stay consistent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The View which is being dragged. It is very likely that user is still\n               dragging this View so there might be other\n               View, int, int) after this one.</p>\n</div></li><li><span class='pre'>target</span> : Object {View}<div class='sub-desc'><p>The target view which is being dropped on.</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>The <code>left</code> offset of the View that is being dragged. This value\n               includes the movement caused by the user.</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The <code>top</code> offset of the View that is being dragged. This value\n               includes the movement caused by the user.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});