Ext.data.JsonP.android_app_backup_BackupAgent({"tagname":"class","name":"android.app.backup.BackupAgent","autodetected":{},"files":[{"filename":"BackupAgent.js","href":"BackupAgent.html#android-app-backup-BackupAgent"}],"extends":"android.content.ContextWrapper","members":[{"name":"FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED","tagname":"property","owner":"android.app.backup.BackupAgent","id":"property-FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED","meta":{}},{"name":"FLAG_DEVICE_TO_DEVICE_TRANSFER","tagname":"property","owner":"android.app.backup.BackupAgent","id":"property-FLAG_DEVICE_TO_DEVICE_TRANSFER","meta":{}},{"name":"TYPE_DIRECTORY","tagname":"property","owner":"android.app.backup.BackupAgent","id":"property-TYPE_DIRECTORY","meta":{}},{"name":"TYPE_FILE","tagname":"property","owner":"android.app.backup.BackupAgent","id":"property-TYPE_FILE","meta":{}},{"name":"fullBackupFile","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-fullBackupFile","meta":{}},{"name":"onBackup","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-onBackup","meta":{}},{"name":"onDestroy","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-onDestroy","meta":{}},{"name":"onFullBackup","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-onFullBackup","meta":{}},{"name":"onQuotaExceeded","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-onQuotaExceeded","meta":{}},{"name":"onRestore","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-onRestore","meta":{}},{"name":"onRestoreFile","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-onRestoreFile","meta":{}},{"name":"onRestoreFinished","tagname":"method","owner":"android.app.backup.BackupAgent","id":"method-onRestoreFinished","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.backup.BackupAgent","short_doc":"Provides the central interface between an\n application and Android's data backup infrastructure. ...","classIcon":"icon-class","superclasses":["android.content.ContextWrapper"],"subclasses":["android.app.backup.BackupAgentHelper","android.app.backup.ForwardingBackupAgent","android.app.backup.FullBackupAgent"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.content.ContextWrapper<div class='subclass '><strong>android.app.backup.BackupAgent</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.app.backup.BackupAgentHelper' rel='android.app.backup.BackupAgentHelper' class='docClass'>android.app.backup.BackupAgentHelper</a></div><div class='dependency'><a href='#!/api/android.app.backup.ForwardingBackupAgent' rel='android.app.backup.ForwardingBackupAgent' class='docClass'>android.app.backup.ForwardingBackupAgent</a></div><div class='dependency'><a href='#!/api/android.app.backup.FullBackupAgent' rel='android.app.backup.FullBackupAgent' class='docClass'>android.app.backup.FullBackupAgent</a></div><h4>Files</h4><div class='dependency'><a href='source/BackupAgent.html#android-app-backup-BackupAgent' target='_blank'>BackupAgent.js</a></div></pre><div class='doc-contents'><p>Provides the central interface between an\n application and Android's data backup infrastructure.  An application that wishes\n to participate in the backup and restore mechanism will declare a subclass of\n <a href=\"#!/api/android.app.backup.BackupAgent\" rel=\"android.app.backup.BackupAgent\" class=\"docClass\">android.app.backup.BackupAgent</a>, implement the\n android.app.backup.BackupDataOutput, ParcelFileDescriptor) onBackup()\n and int, ParcelFileDescriptor) onRestore() methods,\n and provide the name of its backup agent class in its {@code AndroidManifest.xml} file via\n the <code>\n <a href=\"{@docRoot}guide/topics/manifest/application-element.html\">&lt;application&gt;</a></code>\n tag's {@code android:backupAgent} attribute.</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about using BackupAgent, read the\n <a href=\"{@docRoot}guide/topics/data/backup.html\">Data Backup</a> developer guide.</p></div></p>\n\n<p> <h3>Basic Operation</h3>\n <p>\n When the application makes changes to data that it wishes to keep backed up,\n it should call the\n BackupManager.dataChanged() method.\n This notifies the Android Backup Manager that the application needs an opportunity\n to update its backup image.  The Backup Manager, in turn, schedules a\n backup pass to be performed at an opportune time.\n <p>\n Restore operations are typically performed only when applications are first\n installed on a device.  At that time, the operating system checks to see whether\n there is a previously-saved data set available for the application being installed, and if so,\n begins an immediate restore pass to deliver the backup data as part of the installation\n process.\n <p>\n When a backup or restore pass is run, the application's process is launched\n (if not already running), the manifest-declared backup agent class (in the {@code\n android:backupAgent} attribute) is instantiated within\n that process, and the agent's onCreate() method is invoked.  This prepares the\n agent instance to run the actual backup or restore logic.  At this point the\n agent's\n android.app.backup.BackupDataOutput, ParcelFileDescriptor) onBackup() or\n int, ParcelFileDescriptor) onRestore() method will be\n invoked as appropriate for the operation being performed.\n <p>\n A backup data set consists of one or more \"entities,\" flattened binary data\n records that are each identified with a key string unique within the data set.  Adding a\n record to the active data set or updating an existing record is done by simply\n writing new entity data under the desired key.  Deleting an entity from the data set\n is done by writing an entity under that key with header specifying a negative data\n size, and no actual entity data.\n <p>\n <b>Helper Classes</b>\n <p>\n An extensible agent based on convenient helper classes is available in\n <a href=\"#!/api/android.app.backup.BackupAgentHelper\" rel=\"android.app.backup.BackupAgentHelper\" class=\"docClass\">android.app.backup.BackupAgentHelper</a>.  That class is particularly\n suited to handling of simple file or android.content.SharedPreferences\n backup and restore.\n <p>\n <b>Threading</b>\n <p>\n The constructor, as well as onCreate() and <a href=\"#!/api/android.app.backup.BackupAgent-method-onDestroy\" rel=\"android.app.backup.BackupAgent-method-onDestroy\" class=\"docClass\">onDestroy</a>() lifecycle callbacks run\n on the main thread (UI thread) of the application that implements the BackupAgent.\n The data-handling callbacks:\n android.app.backup.BackupDataOutput, ParcelFileDescriptor) onBackup(),\n <a href=\"#!/api/android.app.backup.BackupAgent-method-onFullBackup\" rel=\"android.app.backup.BackupAgent-method-onFullBackup\" class=\"docClass\">onFullBackup</a>(FullBackupDataOutput),\n int, ParcelFileDescriptor) onRestore(),\n long, File, int, long, long) onRestoreFile(),\n <a href=\"#!/api/android.app.backup.BackupAgent-method-onRestoreFinished\" rel=\"android.app.backup.BackupAgent-method-onRestoreFinished\" class=\"docClass\">onRestoreFinished</a>(), and long) onQuotaExceeded()\n run on binder pool threads.</p>\n\n<p> @see <a href=\"#!/api/android.app.backup.BackupManager\" rel=\"android.app.backup.BackupManager\" class=\"docClass\">android.app.backup.BackupManager</a>\n @see <a href=\"#!/api/android.app.backup.BackupAgentHelper\" rel=\"android.app.backup.BackupAgentHelper\" class=\"docClass\">android.app.backup.BackupAgentHelper</a>\n @see <a href=\"#!/api/android.app.backup.BackupDataInput\" rel=\"android.app.backup.BackupDataInput\" class=\"docClass\">android.app.backup.BackupDataInput</a>\n @see <a href=\"#!/api/android.app.backup.BackupDataOutput\" rel=\"android.app.backup.BackupDataOutput\" class=\"docClass\">android.app.backup.BackupDataOutput</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-property-FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-property-FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED' class='name expandable'>FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for android.app.backup.BackupDataOutput.getTransportFlags() and\nandroid.app.backup.FullBackupDataOutput.getTrans...</div><div class='long'><p>Flag for android.app.backup.BackupDataOutput.getTransportFlags() and\nandroid.app.backup.FullBackupDataOutput.getTransportFlags() only.</p>\n\n<p><p>The transport has client-side encryption enabled. i.e., the user's backup has been\nencrypted with a key known only to the device, and not to the remote storage solution. Even\nif an attacker had root access to the remote storage provider they should not be able to\ndecrypt the user's backup data.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-FLAG_DEVICE_TO_DEVICE_TRANSFER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-property-FLAG_DEVICE_TO_DEVICE_TRANSFER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-property-FLAG_DEVICE_TO_DEVICE_TRANSFER' class='name expandable'>FLAG_DEVICE_TO_DEVICE_TRANSFER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for android.app.backup.BackupDataOutput.getTransportFlags() and\nandroid.app.backup.FullBackupDataOutput.getTrans...</div><div class='long'><p>Flag for android.app.backup.BackupDataOutput.getTransportFlags() and\nandroid.app.backup.FullBackupDataOutput.getTransportFlags() only.</p>\n\n<p><p>The transport is for a device-to-device transfer. There is no third party or intermediate\nstorage. The user's backup data is sent directly to another device over e.g., USB or WiFi.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-TYPE_DIRECTORY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-property-TYPE_DIRECTORY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-property-TYPE_DIRECTORY' class='name expandable'>TYPE_DIRECTORY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>During a full restore, indicates that the file system object being restored\nis a directory. ...</div><div class='long'><p>During a full restore, indicates that the file system object being restored\nis a directory.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-TYPE_FILE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-property-TYPE_FILE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-property-TYPE_FILE' class='name expandable'>TYPE_FILE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>During a full restore, indicates that the file system object being restored\nis an ordinary file. ...</div><div class='long'><p>During a full restore, indicates that the file system object being restored\nis an ordinary file.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-fullBackupFile' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-fullBackupFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-fullBackupFile' class='name expandable'>fullBackupFile</a>( <span class='pre'>file, output</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write an entire file as part of a full-backup operation. ...</div><div class='long'><p>Write an entire file as part of a full-backup operation.  The file's contents\n will be delivered to the backup destination along with the metadata necessary\n to place it with the proper location and permissions on the device where the\n data is restored.</p>\n\n<p> <p class=\"note\">Attempting to back up files in directories that are ignored by\n the backup system will have no effect.  For example, if the app calls this method\n with a file inside the getNoBackupFilesDir() directory, it will be ignored.\n See <a href=\"#!/api/android.app.backup.BackupAgent-method-onFullBackup\" rel=\"android.app.backup.BackupAgent-method-onFullBackup\" class=\"docClass\">onFullBackup</a>(FullBackupDataOutput) for details on what directories\n are excluded from backups.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file</span> : Object {File}<div class='sub-desc'><p>The file to be backed up.  The file must exist and be readable by\n     the caller.</p>\n</div></li><li><span class='pre'>output</span> : Object {FullBackupDataOutput}<div class='sub-desc'><p>The destination to which the backed-up file data will be sent.</p>\n</div></li></ul></div></div></div><div id='method-onBackup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-onBackup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-onBackup' class='name expandable'>onBackup</a>( <span class='pre'>oldState, data, newState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The application is being asked to write any data changed since the last\n time it performed a backup operation. ...</div><div class='long'><p>The application is being asked to write any data changed since the last\n time it performed a backup operation. The state data recorded during the\n last backup pass is provided in the <code>oldState</code> file\n descriptor. If <code>oldState</code> is <code>null</code>, no old state\n is available and the application should perform a full backup. In both\n cases, a representation of the final backup state after this pass should\n be written to the file pointed to by the file descriptor wrapped in\n <code>newState</code>.\n <p>\n Each entity written to the <a href=\"#!/api/android.app.backup.BackupDataOutput\" rel=\"android.app.backup.BackupDataOutput\" class=\"docClass\">android.app.backup.BackupDataOutput</a>\n <code>data</code> stream will be transmitted\n over the current backup transport and stored in the remote data set under\n the key supplied as part of the entity.  Writing an entity with a negative\n data size instructs the transport to delete whatever entity currently exists\n under that key from the remote data set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>oldState</span> : Object {ParcelFileDescriptor}<div class='sub-desc'><p>An open, read-only ParcelFileDescriptor pointing to the\n            last backup state provided by the application. May be\n            <code>null</code>, in which case no prior state is being\n            provided and the application should perform a full backup.</p>\n</div></li><li><span class='pre'>data</span> : Object {BackupDataOutput}<div class='sub-desc'><p>A structured wrapper around an open, read/write\n            file descriptor pointing to the backup data destination.\n            Typically the application will use backup helper classes to\n            write to this file.</p>\n</div></li><li><span class='pre'>newState</span> : Object {ParcelFileDescriptor}<div class='sub-desc'><p>An open, read/write ParcelFileDescriptor pointing to an\n            empty file. The application should record the final backup\n            state here after writing the requested data to the <code>data</code>\n            output stream.</p>\n</div></li></ul></div></div></div><div id='method-onDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-onDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-onDestroy' class='name expandable'>onDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Provided as a convenience for agent implementations that need to do some\n sort of shutdown process after backup or re...</div><div class='long'><p>Provided as a convenience for agent implementations that need to do some\n sort of shutdown process after backup or restore is completed.\n <p>\n Agents do not need to override this method.</p>\n</div></div></div><div id='method-onFullBackup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-onFullBackup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-onFullBackup' class='name expandable'>onFullBackup</a>( <span class='pre'>data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The application is having its entire file system contents backed up. ...</div><div class='long'><p>The application is having its entire file system contents backed up.  {@code data}\n points to the backup destination, and the app has the opportunity to choose which\n files are to be stored.  To commit a file as part of the backup, call the\n android.app.backup.FullBackupDataOutput) helper method.  After all file\n data is written to the output, the agent returns from this method and the backup\n operation concludes.</p>\n\n<p> <p>Certain parts of the app's data are never backed up even if the app explicitly\n sends them to the output:</p>\n\n<p> <ul>\n <li>The contents of the getCacheDir() directory</li>\n <li>The contents of the getCodeCacheDir() directory</li>\n <li>The contents of the getNoBackupFilesDir() directory</li>\n <li>The contents of the app's shared library directory</li>\n </ul></p>\n\n<p> <p>The default implementation of this method backs up the entirety of the\n application's \"owned\" file system trees to the output other than the few exceptions\n listed above.  Apps only need to override this method if they need to impose special\n limitations on which files are being stored beyond the control that\n getNoBackupFilesDir() offers.\n Alternatively they can provide an xml resource to specify what data to include or exclude.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object {FullBackupDataOutput}<div class='sub-desc'><p>A structured wrapper pointing to the backup destination.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n@see Context#getNoBackupFilesDir()\n@see <a href=\"#!/api/android.app.backup.BackupAgent-method-fullBackupFile\" rel=\"android.app.backup.BackupAgent-method-fullBackupFile\" class=\"docClass\">fullBackupFile</a>(File, FullBackupDataOutput)\n@see <a href=\"#!/api/android.app.backup.BackupAgent-method-onRestoreFile\" rel=\"android.app.backup.BackupAgent-method-onRestoreFile\" class=\"docClass\">onRestoreFile</a>(ParcelFileDescriptor, long, File, int, long, long)</p>\n</div></li></ul></div></div></div><div id='method-onQuotaExceeded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-onQuotaExceeded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-onQuotaExceeded' class='name expandable'>onQuotaExceeded</a>( <span class='pre'>backupDataBytes, quotaBytes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notification that the application's current backup operation causes it to exceed\n the maximum size permitted by the t...</div><div class='long'><p>Notification that the application's current backup operation causes it to exceed\n the maximum size permitted by the transport.  The ongoing backup operation is\n halted and rolled back: any data that had been stored by a previous backup operation\n is still intact.  Typically the quota-exceeded state will be detected before any data\n is actually transmitted over the network.</p>\n\n<p> <p>The {@code quotaBytes} value is the total data size currently permitted for this\n application.  If desired, the application can use this as a hint for determining\n how much data to store.  For example, a messaging application might choose to\n store only the newest messages, dropping enough older content to stay under\n the quota.</p>\n\n<p> <p class=\"note\">Note that the maximum quota for the application can change over\n time.  In particular, in the future the quota may grow.  Applications that adapt\n to the quota when deciding what data to store should be aware of this and implement\n their data storage mechanisms in a way that can take advantage of additional\n quota.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>backupDataBytes</span> : Number<div class='sub-desc'><p>The amount of data measured while initializing the backup\n    operation, if the total exceeds the app's alloted quota.  If initial measurement\n    suggested that the data would fit but then too much data was actually submitted\n    as part of the operation, then this value is the amount of data that had been\n    streamed into the transport at the time the quota was reached.</p>\n</div></li><li><span class='pre'>quotaBytes</span> : Number<div class='sub-desc'><p>The maximum data size that the transport currently permits\n    this application to store as a backup.</p>\n</div></li></ul></div></div></div><div id='method-onRestore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-onRestore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-onRestore' class='name expandable'>onRestore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>New version of int, android.os.ParcelFileDescriptor)\n that handles a long app version code. ...</div><div class='long'><p>New version of int, android.os.ParcelFileDescriptor)\n that handles a long app version code.  Default implementation casts the version code to\n an int and calls int, android.os.ParcelFileDescriptor).</p>\n</div></div></div><div id='method-onRestoreFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-onRestoreFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-onRestoreFile' class='name expandable'>onRestoreFile</a>( <span class='pre'>data, size, destination, type, mode, mtime</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Handle the data delivered via the given file descriptor during a full restore\n operation. ...</div><div class='long'><p>Handle the data delivered via the given file descriptor during a full restore\n operation.  The agent is given the path to the file's original location as well\n as its size and metadata.\n <p>\n The file descriptor can only be read for {@code size} bytes; attempting to read\n more data has undefined behavior.\n <p>\n The default implementation creates the destination file/directory and populates it\n with the data from the file descriptor, then sets the file's access mode and\n modification time to match the restore arguments.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object {ParcelFileDescriptor}<div class='sub-desc'><p>A read-only file descriptor from which the agent can read {@code size}\n     bytes of file data.</p>\n</div></li><li><span class='pre'>size</span> : Number<div class='sub-desc'><p>The number of bytes of file content to be restored to the given\n     destination.  If the file system object being restored is a directory, {@code size}\n     will be zero.</p>\n</div></li><li><span class='pre'>destination</span> : Object {File}<div class='sub-desc'><p>The File on disk to be restored with the given data.</p>\n</div></li><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>The kind of file system object being restored.  This will be either\n     BackupAgent.TYPE_FILE or BackupAgent.TYPE_DIRECTORY.</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>The access mode to be assigned to the destination after its data is\n     written.  This is in the standard format used by {@code chmod()}.</p>\n</div></li><li><span class='pre'>mtime</span> : Number<div class='sub-desc'><p>The modification time of the file when it was backed up, suitable to\n     be assigned to the file after its data is written.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException</p>\n</div></li></ul></div></div></div><div id='method-onRestoreFinished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.backup.BackupAgent'>android.app.backup.BackupAgent</span><br/><a href='source/BackupAgent.html#android-app-backup-BackupAgent-method-onRestoreFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.backup.BackupAgent-method-onRestoreFinished' class='name expandable'>onRestoreFinished</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The application's restore operation has completed. ...</div><div class='long'><p>The application's restore operation has completed.  This method is called after\n all available data has been delivered to the application for restore (via either\n the int, ParcelFileDescriptor) onRestore() or\n long, File, int, long, long) onRestoreFile()\n callbacks).  This provides the app with a stable end-of-restore opportunity to\n perform any appropriate post-processing on the data that was just delivered.\n@see <a href=\"#!/api/android.app.backup.BackupAgent-method-onRestore\" rel=\"android.app.backup.BackupAgent-method-onRestore\" class=\"docClass\">onRestore</a>(BackupDataInput, int, ParcelFileDescriptor)\n@see <a href=\"#!/api/android.app.backup.BackupAgent-method-onRestoreFile\" rel=\"android.app.backup.BackupAgent-method-onRestoreFile\" class=\"docClass\">onRestoreFile</a>(ParcelFileDescriptor, long, File, int, long, long)</p>\n</div></div></div></div></div></div></div>","meta":{}});