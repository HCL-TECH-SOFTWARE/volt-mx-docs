Ext.data.JsonP.android_security_keystore_recovery_RecoverySession({"tagname":"class","name":"android.security.keystore.recovery.RecoverySession","autodetected":{},"files":[{"filename":"RecoverySession.js","href":"RecoverySession.html#android-security-keystore-recovery-RecoverySession"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"close","tagname":"method","owner":"android.security.keystore.recovery.RecoverySession","id":"method-close","meta":{}},{"name":"recoverKeyChainSnapshot","tagname":"method","owner":"android.security.keystore.recovery.RecoverySession","id":"method-recoverKeyChainSnapshot","meta":{}},{"name":"start","tagname":"method","owner":"android.security.keystore.recovery.RecoverySession","id":"method-start","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.security.keystore.recovery.RecoverySession","short_doc":"implements java.lang.AutoCloseable\n\nSession to recover a android.security.keystore.recovery.KeyChainSnapshot from the...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.security.keystore.recovery.RecoverySession</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RecoverySession.html#android-security-keystore-recovery-RecoverySession' target='_blank'>RecoverySession.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>Session to recover a <a href=\"#!/api/android.security.keystore.recovery.KeyChainSnapshot\" rel=\"android.security.keystore.recovery.KeyChainSnapshot\" class=\"docClass\">android.security.keystore.recovery.KeyChainSnapshot</a> from the remote trusted hardware, initiated by a\n recovery agent.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.security.keystore.recovery.RecoverySession'>android.security.keystore.recovery.RecoverySession</span><br/><a href='source/RecoverySession.html#android-security-keystore-recovery-RecoverySession-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.security.keystore.recovery.RecoverySession-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes all data associated with {@code session}. ...</div><div class='long'><p>Deletes all data associated with {@code session}.</p>\n</div></div></div><div id='method-recoverKeyChainSnapshot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.security.keystore.recovery.RecoverySession'>android.security.keystore.recovery.RecoverySession</span><br/><a href='source/RecoverySession.html#android-security-keystore-recovery-RecoverySession-method-recoverKeyChainSnapshot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.security.keystore.recovery.RecoverySession-method-recoverKeyChainSnapshot' class='name expandable'>recoverKeyChainSnapshot</a>( <span class='pre'>recoveryKeyBlob, applicationKeys</span> ) : Object {java.util.Map}<span class=\"signature\"></span></div><div class='description'><div class='short'>Imports key chain snapshot recovered from a remote vault. ...</div><div class='long'><p>Imports key chain snapshot recovered from a remote vault.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recoveryKeyBlob</span> : Object {byte[]}<div class='sub-desc'><p>Recovery blob encrypted by symmetric key generated for this session.</p>\n</div></li><li><span class='pre'>applicationKeys</span> : Object {java.util.List}<div class='sub-desc'><p>Application keys. Key material can be decrypted using recoveryKeyBlob\n     and session key generated by <a href=\"#!/api/android.security.keystore.recovery.RecoverySession-method-start\" rel=\"android.security.keystore.recovery.RecoverySession-method-start\" class=\"docClass\">start</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Map}</span><div class='sub-desc'><p>{@code Map} from recovered keys aliases to their references.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SessionExpiredException if {@code session} has since been closed.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>DecryptionFailedException if unable to decrypt the snapshot.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InternalRecoveryServiceException if an error occurs internal to the recovery service.</p>\n</div></li></ul></div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.security.keystore.recovery.RecoverySession'>android.security.keystore.recovery.RecoverySession</span><br/><a href='source/RecoverySession.html#android-security-keystore-recovery-RecoverySession-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.security.keystore.recovery.RecoverySession-method-start' class='name expandable'>start</a>( <span class='pre'>rootCertificateAlias, verifierCertPath, vaultParams, vaultChallenge, secrets</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts a recovery session and returns a blob with proof of recovery secret possession. ...</div><div class='long'><p>Starts a recovery session and returns a blob with proof of recovery secret possession.\n The method generates a symmetric key for a session, which trusted remote device can use to\n return recovery key.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rootCertificateAlias</span> : String<div class='sub-desc'><p>The alias of the root certificate that is already in the Android\n     OS. The root certificate will be used for validating {@code verifierCertPath}.</p>\n</div></li><li><span class='pre'>verifierCertPath</span> : Object {CertPath}<div class='sub-desc'><p>The certificate path used to create the recovery blob on the source\n     device. Keystore will verify the certificate path by using the root of trust.</p>\n</div></li><li><span class='pre'>vaultParams</span> : Object {byte[]}<div class='sub-desc'><p>Must match the parameters in the corresponding field in the recovery blob.\n     Used to limit number of guesses.</p>\n</div></li><li><span class='pre'>vaultChallenge</span> : Object {byte[]}<div class='sub-desc'><p>Data passed from server for this recovery session and used to prevent\n     replay attacks.</p>\n</div></li><li><span class='pre'>secrets</span> : Object {java.util.List}<div class='sub-desc'><p>Secrets provided by user, the method only uses type and secret fields.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The binary blob with recovery claim. It is encrypted with verifierPublicKey\n and contains a proof of user secrets possession, session symmetric\n     key and parameters necessary to identify the counter with the number of failed recovery\n     attempts.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>CertificateException if the {@code verifierCertPath} is invalid.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InternalRecoveryServiceException if an unexpected error occurred in the recovery\n     service.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});