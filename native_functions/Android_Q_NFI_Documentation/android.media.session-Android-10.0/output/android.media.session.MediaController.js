Ext.data.JsonP.android_media_session_MediaController({"tagname":"class","name":"android.media.session.MediaController","autodetected":{},"files":[{"filename":"MediaController.js","href":"MediaController.html#android-media-session-MediaController"}],"extends":"java.lang.Object","members":[{"name":"adjustVolume","tagname":"method","owner":"android.media.session.MediaController","id":"method-adjustVolume","meta":{}},{"name":"dispatchMediaButtonEvent","tagname":"method","owner":"android.media.session.MediaController","id":"method-dispatchMediaButtonEvent","meta":{}},{"name":"getExtras","tagname":"method","owner":"android.media.session.MediaController","id":"method-getExtras","meta":{}},{"name":"getFlags","tagname":"method","owner":"android.media.session.MediaController","id":"method-getFlags","meta":{}},{"name":"getMetadata","tagname":"method","owner":"android.media.session.MediaController","id":"method-getMetadata","meta":{}},{"name":"getPackageName","tagname":"method","owner":"android.media.session.MediaController","id":"method-getPackageName","meta":{}},{"name":"getPlaybackInfo","tagname":"method","owner":"android.media.session.MediaController","id":"method-getPlaybackInfo","meta":{}},{"name":"getPlaybackState","tagname":"method","owner":"android.media.session.MediaController","id":"method-getPlaybackState","meta":{}},{"name":"getQueue","tagname":"method","owner":"android.media.session.MediaController","id":"method-getQueue","meta":{}},{"name":"getQueueTitle","tagname":"method","owner":"android.media.session.MediaController","id":"method-getQueueTitle","meta":{}},{"name":"getRatingType","tagname":"method","owner":"android.media.session.MediaController","id":"method-getRatingType","meta":{}},{"name":"getSessionActivity","tagname":"method","owner":"android.media.session.MediaController","id":"method-getSessionActivity","meta":{}},{"name":"getSessionInfo","tagname":"method","owner":"android.media.session.MediaController","id":"method-getSessionInfo","meta":{}},{"name":"getSessionToken","tagname":"method","owner":"android.media.session.MediaController","id":"method-getSessionToken","meta":{}},{"name":"getTransportControls","tagname":"method","owner":"android.media.session.MediaController","id":"method-getTransportControls","meta":{}},{"name":"registerCallback","tagname":"method","owner":"android.media.session.MediaController","id":"method-registerCallback","meta":{}},{"name":"sendCommand","tagname":"method","owner":"android.media.session.MediaController","id":"method-sendCommand","meta":{}},{"name":"setVolumeTo","tagname":"method","owner":"android.media.session.MediaController","id":"method-setVolumeTo","meta":{}},{"name":"unregisterCallback","tagname":"method","owner":"android.media.session.MediaController","id":"method-unregisterCallback","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.session.MediaController","short_doc":"Allows an app to interact with an ongoing media session. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.session.MediaController</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaController.html#android-media-session-MediaController' target='_blank'>MediaController.js</a></div></pre><div class='doc-contents'><p>Allows an app to interact with an ongoing media session. Media buttons and\n other commands can be sent to the session. A callback may be registered to\n receive updates from the session, such as metadata and play state changes.\n <p>\n A MediaController can be created through <a href=\"#!/api/android.media.session.MediaSessionManager\" rel=\"android.media.session.MediaSessionManager\" class=\"docClass\">android.media.session.MediaSessionManager</a> if you\n hold the \"android.permission.MEDIA_CONTENT_CONTROL\" permission or are an\n enabled notification listener or by getting a <a href=\"#!/api/android.media.session.MediaSession.Token\" rel=\"android.media.session.MediaSession.Token\" class=\"docClass\">android.media.session.MediaSession.Token</a>\n directly from the session owner.\n <p>\n MediaController objects are thread-safe.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adjustVolume' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-adjustVolume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-adjustVolume' class='name expandable'>adjustVolume</a>( <span class='pre'>direction, flags, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjust the volume of the output this session is playing on. ...</div><div class='long'><p>Adjust the volume of the output this session is playing on. The direction\n must be one of AudioManager.ADJUST_LOWER,\n AudioManager.ADJUST_RAISE, or AudioManager.ADJUST_SAME.\n The command will be ignored if the session does not support\n VolumeProvider.VOLUME_CONTROL_RELATIVE or\n VolumeProvider.VOLUME_CONTROL_ABSOLUTE. The flags in\n AudioManager may be used to affect the handling.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>direction</span> : Number<div class='sub-desc'><p>The direction to adjust the volume in.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Any flags to pass with the command.</p>\n</div></li><li><span class='pre'>flags</span> : Object<div class='sub-desc'><p>Any flags to pass with the command.</p>\n</div></li></ul></div></div></div><div id='method-dispatchMediaButtonEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-dispatchMediaButtonEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-dispatchMediaButtonEvent' class='name expandable'>dispatchMediaButtonEvent</a>( <span class='pre'>keyEvent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Send the specified media button event to the session. ...</div><div class='long'><p>Send the specified media button event to the session. Only media keys can\n be sent by this method, other keys will be ignored.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyEvent</span> : Object {KeyEvent}<div class='sub-desc'><p>The media button event to dispatch.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the event was sent to the session, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getExtras' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getExtras' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getExtras' class='name expandable'>getExtras</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the extras for this session. ...</div><div class='long'><p>Get the extras for this session.</p>\n</div></div></div><div id='method-getFlags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getFlags' class='name expandable'>getFlags</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the flags for this session. ...</div><div class='long'><p>Get the flags for this session. Flags are defined in <a href=\"#!/api/android.media.session.MediaSession\" rel=\"android.media.session.MediaSession\" class=\"docClass\">android.media.session.MediaSession</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The current set of flags for the session.</p>\n</div></li></ul></div></div></div><div id='method-getMetadata' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getMetadata' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getMetadata' class='name expandable'>getMetadata</a>( <span class='pre'></span> ) : Object {android.media.MediaMetadata}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current metadata for this session. ...</div><div class='long'><p>Get the current metadata for this session.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.MediaMetadata}</span><div class='sub-desc'><p>The current MediaMetadata or null.</p>\n</div></li></ul></div></div></div><div id='method-getPackageName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getPackageName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getPackageName' class='name expandable'>getPackageName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the session owner's package name. ...</div><div class='long'><p>Get the session owner's package name.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The package name of of the session owner.</p>\n</div></li></ul></div></div></div><div id='method-getPlaybackInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getPlaybackInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getPlaybackInfo' class='name expandable'>getPlaybackInfo</a>( <span class='pre'></span> ) : Object {android.media.session.MediaController.PlaybackInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current playback info for this session. ...</div><div class='long'><p>Get the current playback info for this session.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.session.MediaController.PlaybackInfo}</span><div class='sub-desc'><p>The current playback info or null.</p>\n</div></li></ul></div></div></div><div id='method-getPlaybackState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getPlaybackState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getPlaybackState' class='name expandable'>getPlaybackState</a>( <span class='pre'></span> ) : Object {android.media.session.PlaybackState}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current playback state for this session. ...</div><div class='long'><p>Get the current playback state for this session.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.session.PlaybackState}</span><div class='sub-desc'><p>The current PlaybackState or null</p>\n</div></li></ul></div></div></div><div id='method-getQueue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getQueue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getQueue' class='name expandable'>getQueue</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current play queue for this session if one is set. ...</div><div class='long'><p>Get the current play queue for this session if one is set. If you only\n care about the current item <a href=\"#!/api/android.media.session.MediaController-method-getMetadata\" rel=\"android.media.session.MediaController-method-getMetadata\" class=\"docClass\">getMetadata</a>() should be used.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>The current play queue or null.</p>\n</div></li></ul></div></div></div><div id='method-getQueueTitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getQueueTitle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getQueueTitle' class='name expandable'>getQueueTitle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the queue title for this session. ...</div><div class='long'><p>Get the queue title for this session.</p>\n</div></div></div><div id='method-getRatingType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getRatingType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getRatingType' class='name expandable'>getRatingType</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the rating type supported by the session. ...</div><div class='long'><p>Get the rating type supported by the session. One of:\n <ul>\n <li>Rating.RATING_NONE</li>\n <li>Rating.RATING_HEART</li>\n <li>Rating.RATING_THUMB_UP_DOWN</li>\n <li>Rating.RATING_3_STARS</li>\n <li>Rating.RATING_4_STARS</li>\n <li>Rating.RATING_5_STARS</li>\n <li>Rating.RATING_PERCENTAGE</li>\n </ul></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The supported rating type</p>\n</div></li></ul></div></div></div><div id='method-getSessionActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getSessionActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getSessionActivity' class='name expandable'>getSessionActivity</a>( <span class='pre'></span> ) : Object {android.app.PendingIntent}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get an intent for launching UI associated with this session if one\n exists. ...</div><div class='long'><p>Get an intent for launching UI associated with this session if one\n exists.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.PendingIntent}</span><div class='sub-desc'><p>A PendingIntent to launch UI or null.</p>\n</div></li></ul></div></div></div><div id='method-getSessionInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getSessionInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getSessionInfo' class='name expandable'>getSessionInfo</a>( <span class='pre'></span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the additional session information which was set when the session was created. ...</div><div class='long'><p>Gets the additional session information which was set when the session was created.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>The additional session information, or an empty Bundle if not set.</p>\n</div></li></ul></div></div></div><div id='method-getSessionToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getSessionToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getSessionToken' class='name expandable'>getSessionToken</a>( <span class='pre'></span> ) : Object {android.media.session.MediaSession.Token}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the token for the session this is connected to. ...</div><div class='long'><p>Get the token for the session this is connected to.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.session.MediaSession.Token}</span><div class='sub-desc'><p>The token for the connected session.</p>\n</div></li></ul></div></div></div><div id='method-getTransportControls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-getTransportControls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-getTransportControls' class='name expandable'>getTransportControls</a>( <span class='pre'></span> ) : Object {android.media.session.MediaController.TransportControls}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a android.media.session.MediaController.TransportControls instance to send transport actions to\n the associated s...</div><div class='long'><p>Get a <a href=\"#!/api/android.media.session.MediaController.TransportControls\" rel=\"android.media.session.MediaController.TransportControls\" class=\"docClass\">android.media.session.MediaController.TransportControls</a> instance to send transport actions to\n the associated session.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.session.MediaController.TransportControls}</span><div class='sub-desc'><p>A transport controls instance.</p>\n</div></li></ul></div></div></div><div id='method-registerCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-registerCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-registerCallback' class='name expandable'>registerCallback</a>( <span class='pre'>callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a callback to receive updates from the session. ...</div><div class='long'><p>Registers a callback to receive updates from the session. Updates will be\n posted on the specified handler's thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {MediaController.Callback}<div class='sub-desc'><p>The callback object, must not be null.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>The handler to post updates on. If null the callers thread\n            will be used.</p>\n</div></li></ul></div></div></div><div id='method-sendCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-sendCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-sendCommand' class='name expandable'>sendCommand</a>( <span class='pre'>command, args, cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends a generic command to the session. ...</div><div class='long'><p>Sends a generic command to the session. It is up to the session creator\n to decide what commands and parameters they will support. As such,\n commands should only be sent to sessions that the controller owns.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>command</span> : String<div class='sub-desc'><p>The command to send</p>\n</div></li><li><span class='pre'>args</span> : Object {Bundle}<div class='sub-desc'><p>Any parameters to include with the command</p>\n</div></li><li><span class='pre'>cb</span> : Object {ResultReceiver}<div class='sub-desc'><p>The callback to receive the result on</p>\n</div></li></ul></div></div></div><div id='method-setVolumeTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-setVolumeTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-setVolumeTo' class='name expandable'>setVolumeTo</a>( <span class='pre'>value, flags, flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the volume of the output this session is playing on. ...</div><div class='long'><p>Set the volume of the output this session is playing on. The command will\n be ignored if it does not support\n VolumeProvider.VOLUME_CONTROL_ABSOLUTE. The flags in\n AudioManager may be used to affect the handling.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>The value to set it to, between 0 and the reported max.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Flags from AudioManager to include with the volume\n            request.</p>\n</div></li><li><span class='pre'>flags</span> : Object<div class='sub-desc'><p>Flags from AudioManager to include with the volume\n            request.</p>\n</div></li></ul></div></div></div><div id='method-unregisterCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaController'>android.media.session.MediaController</span><br/><a href='source/MediaController.html#android-media-session-MediaController-method-unregisterCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaController-method-unregisterCallback' class='name expandable'>unregisterCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregisters the specified callback. ...</div><div class='long'><p>Unregisters the specified callback. If an update has already been posted\n you may still receive it after calling this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {MediaController.Callback}<div class='sub-desc'><p>The callback to remove.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});