Ext.data.JsonP.android_media_session_MediaSession({"tagname":"class","name":"android.media.session.MediaSession","autodetected":{},"files":[{"filename":"MediaSession.js","href":"MediaSession.html#android-media-session-MediaSession"}],"extends":"java.lang.Object","members":[{"name":"FLAG_HANDLES_MEDIA_BUTTONS","tagname":"property","owner":"android.media.session.MediaSession","id":"property-FLAG_HANDLES_MEDIA_BUTTONS","meta":{"deprecated":{"text":"<p>This flag is no longer used. All media sessions are expected to handle media\nbutton events now.</p>\n"}}},{"name":"FLAG_HANDLES_TRANSPORT_CONTROLS","tagname":"property","owner":"android.media.session.MediaSession","id":"property-FLAG_HANDLES_TRANSPORT_CONTROLS","meta":{"deprecated":{"text":"<p>This flag is no longer used. All media sessions are expected to handle transport\ncontrols now.</p>\n"}}},{"name":"getController","tagname":"method","owner":"android.media.session.MediaSession","id":"method-getController","meta":{}},{"name":"getCurrentControllerInfo","tagname":"method","owner":"android.media.session.MediaSession","id":"method-getCurrentControllerInfo","meta":{}},{"name":"getSessionToken","tagname":"method","owner":"android.media.session.MediaSession","id":"method-getSessionToken","meta":{}},{"name":"isActive","tagname":"method","owner":"android.media.session.MediaSession","id":"method-isActive","meta":{}},{"name":"release","tagname":"method","owner":"android.media.session.MediaSession","id":"method-release","meta":{}},{"name":"sendSessionEvent","tagname":"method","owner":"android.media.session.MediaSession","id":"method-sendSessionEvent","meta":{}},{"name":"setActive","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setActive","meta":{}},{"name":"setCallback","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setCallback","meta":{}},{"name":"setExtras","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setExtras","meta":{}},{"name":"setFlags","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setFlags","meta":{}},{"name":"setMediaButtonReceiver","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setMediaButtonReceiver","meta":{}},{"name":"setMetadata","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setMetadata","meta":{}},{"name":"setPlaybackState","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setPlaybackState","meta":{}},{"name":"setPlaybackToLocal","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setPlaybackToLocal","meta":{}},{"name":"setPlaybackToRemote","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setPlaybackToRemote","meta":{}},{"name":"setQueue","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setQueue","meta":{}},{"name":"setQueueTitle","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setQueueTitle","meta":{}},{"name":"setRatingType","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setRatingType","meta":{}},{"name":"setSessionActivity","tagname":"method","owner":"android.media.session.MediaSession","id":"method-setSessionActivity","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.session.MediaSession","short_doc":"Allows interaction with media controllers, volume keys, media buttons, and\n transport controls. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.session.MediaSession</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MediaSession.html#android-media-session-MediaSession' target='_blank'>MediaSession.js</a></div></pre><div class='doc-contents'><p>Allows interaction with media controllers, volume keys, media buttons, and\n transport controls.\n <p>\n A MediaSession should be created when an app wants to publish media playback\n information or handle media keys. In general an app only needs one session\n for all playback, though multiple sessions can be created to provide finer\n grain controls of media.\n <p>\n Once a session is created the owner of the session may pass its\n session token to other processes to allow them to\n create a <a href=\"#!/api/android.media.session.MediaController\" rel=\"android.media.session.MediaController\" class=\"docClass\">android.media.session.MediaController</a> to interact with the session.\n <p>\n To receive commands, media keys, and other events a <a href=\"#!/api/android.media.session.MediaController.Callback\" rel=\"android.media.session.MediaController.Callback\" class=\"docClass\">android.media.session.MediaController.Callback</a> must be\n set with <a href=\"#!/api/android.media.session.MediaSession-method-setCallback\" rel=\"android.media.session.MediaSession-method-setCallback\" class=\"docClass\">setCallback</a>(Callback) and setActive(true) must be called.\n <p>\n When an app is finished performing playback it must call <a href=\"#!/api/android.media.session.MediaSession-method-release\" rel=\"android.media.session.MediaSession-method-release\" class=\"docClass\">release</a>()\n to clean up the session and notify any controllers.\n <p>\n MediaSession objects are thread safe.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-FLAG_HANDLES_MEDIA_BUTTONS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-property-FLAG_HANDLES_MEDIA_BUTTONS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-property-FLAG_HANDLES_MEDIA_BUTTONS' class='name expandable'>FLAG_HANDLES_MEDIA_BUTTONS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Set this flag on the session to indicate that it can handle media button\nevents. ...</div><div class='long'><p>Set this flag on the session to indicate that it can handle media button\nevents.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This flag is no longer used. All media sessions are expected to handle media\nbutton events now.</p>\n\n        </div>\n</div></div></div><div id='property-FLAG_HANDLES_TRANSPORT_CONTROLS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-property-FLAG_HANDLES_TRANSPORT_CONTROLS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-property-FLAG_HANDLES_TRANSPORT_CONTROLS' class='name expandable'>FLAG_HANDLES_TRANSPORT_CONTROLS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Set this flag on the session to indicate that it handles transport\ncontrol commands through its android.media.session...</div><div class='long'><p>Set this flag on the session to indicate that it handles transport\ncontrol commands through its <a href=\"#!/api/android.media.session.MediaController.Callback\" rel=\"android.media.session.MediaController.Callback\" class=\"docClass\">android.media.session.MediaController.Callback</a>.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This flag is no longer used. All media sessions are expected to handle transport\ncontrols now.</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getController' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-getController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-getController' class='name expandable'>getController</a>( <span class='pre'></span> ) : Object {android.media.session.MediaController}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a controller for this session. ...</div><div class='long'><p>Get a controller for this session. This is a convenience method to avoid\n having to cache your own controller in process.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.session.MediaController}</span><div class='sub-desc'><p>A controller for this session.</p>\n</div></li></ul></div></div></div><div id='method-getCurrentControllerInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-getCurrentControllerInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-getCurrentControllerInfo' class='name expandable'>getCurrentControllerInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the controller information who sent the current request. ...</div><div class='long'><p>Gets the controller information who sent the current request.\n <p>\n Note: This is only valid while in a request callback, such as android.media.session.MediaController.Callback.onPlay.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If this method is called outside of Callback methods.\n@see MediaSessionManager#isTrustedForMediaControl(RemoteUserInfo)</p>\n</div></li></ul></div></div></div><div id='method-getSessionToken' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-getSessionToken' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-getSessionToken' class='name expandable'>getSessionToken</a>( <span class='pre'></span> ) : Object {android.media.session.MediaSession.Token}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve a token object that can be used by apps to create a\n android.media.session.MediaController for interacting w...</div><div class='long'><p>Retrieve a token object that can be used by apps to create a\n <a href=\"#!/api/android.media.session.MediaController\" rel=\"android.media.session.MediaController\" class=\"docClass\">android.media.session.MediaController</a> for interacting with this session. The owner of\n the session is responsible for deciding how to distribute these tokens.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.session.MediaSession.Token}</span><div class='sub-desc'><p>A token that can be used to create a MediaController for this\n         session</p>\n</div></li></ul></div></div></div><div id='method-isActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-isActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-isActive' class='name expandable'>isActive</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the current active state of this session. ...</div><div class='long'><p>Get the current active state of this session.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the session is active, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-release' class='name expandable'>release</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This must be called when an app has finished performing playback. ...</div><div class='long'><p>This must be called when an app has finished performing playback. If\n playback is expected to start again shortly the session can be left open,\n but it must be released if your activity or service is being destroyed.</p>\n</div></div></div><div id='method-sendSessionEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-sendSessionEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-sendSessionEvent' class='name expandable'>sendSessionEvent</a>( <span class='pre'>event, extras</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Send a proprietary event to all MediaControllers listening to this\n Session. ...</div><div class='long'><p>Send a proprietary event to all MediaControllers listening to this\n Session. It's up to the Controller/Session owner to determine the meaning\n of any events.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : String<div class='sub-desc'><p>The name of the event to send</p>\n</div></li><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>Any extras included with the event</p>\n</div></li></ul></div></div></div><div id='method-setActive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setActive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setActive' class='name expandable'>setActive</a>( <span class='pre'>active</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set if this session is currently active and ready to receive commands. ...</div><div class='long'><p>Set if this session is currently active and ready to receive commands. If\n set to false your session's controller may not be discoverable. You must\n set the session to active before it can start receiving media button\n events or transport commands.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>active</span> : Boolean<div class='sub-desc'><p>Whether this session is active or not.</p>\n</div></li></ul></div></div></div><div id='method-setCallback' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setCallback' class='name expandable'>setCallback</a>( <span class='pre'>callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the callback to receive updates for the MediaSession. ...</div><div class='long'><p>Set the callback to receive updates for the MediaSession. This includes\n media button events and transport controls.\n <p>\n Set the callback to null to stop receiving updates.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {MediaSession.Callback}<div class='sub-desc'><p>The callback to receive updates on.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>The handler that events should be posted on.</p>\n</div></li></ul></div></div></div><div id='method-setExtras' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setExtras' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setExtras' class='name expandable'>setExtras</a>( <span class='pre'>extras</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set some extras that can be associated with the android.media.session.MediaSession. ...</div><div class='long'><p>Set some extras that can be associated with the <a href=\"#!/api/android.media.session.MediaSession\" rel=\"android.media.session.MediaSession\" class=\"docClass\">android.media.session.MediaSession</a>. No assumptions should\n be made as to how a <a href=\"#!/api/android.media.session.MediaController\" rel=\"android.media.session.MediaController\" class=\"docClass\">android.media.session.MediaController</a> will handle these extras.\n Keys should be fully qualified (e.g. com.example.MY_EXTRA) to avoid conflicts.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>The extras associated with the MediaSession.</p>\n</div></li></ul></div></div></div><div id='method-setFlags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setFlags' class='name expandable'>setFlags</a>( <span class='pre'>flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set any flags for the session. ...</div><div class='long'><p>Set any flags for the session.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>The flags to set for this session.</p>\n</div></li></ul></div></div></div><div id='method-setMediaButtonReceiver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setMediaButtonReceiver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setMediaButtonReceiver' class='name expandable'>setMediaButtonReceiver</a>( <span class='pre'>mbr</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a pending intent for your media button receiver to allow restarting\n playback after the session has been stopped. ...</div><div class='long'><p>Set a pending intent for your media button receiver to allow restarting\n playback after the session has been stopped. If your app is started in\n this way an Intent.ACTION_MEDIA_BUTTON intent will be sent via\n the pending intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mbr</span> : Object {PendingIntent}<div class='sub-desc'><p>The PendingIntent to send the media button event to.</p>\n</div></li></ul></div></div></div><div id='method-setMetadata' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setMetadata' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setMetadata' class='name expandable'>setMetadata</a>( <span class='pre'>metadata</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the current metadata. ...</div><div class='long'><p>Update the current metadata. New metadata can be created using\n android.media.MediaMetadata.Builder. This operation may take time proportional to\n the size of the bitmap to replace large bitmaps with a scaled down copy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>metadata</span> : Object {MediaMetadata}<div class='sub-desc'><p>The new metadata\n@see android.media.MediaMetadata.Builder#putBitmap</p>\n</div></li></ul></div></div></div><div id='method-setPlaybackState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setPlaybackState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setPlaybackState' class='name expandable'>setPlaybackState</a>( <span class='pre'>state</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the current playback state. ...</div><div class='long'><p>Update the current playback state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>state</span> : Object {PlaybackState}<div class='sub-desc'><p>The current state of playback</p>\n</div></li></ul></div></div></div><div id='method-setPlaybackToLocal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setPlaybackToLocal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setPlaybackToLocal' class='name expandable'>setPlaybackToLocal</a>( <span class='pre'>attributes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the attributes for this session's audio. ...</div><div class='long'><p>Set the attributes for this session's audio. This will affect the\n system's volume handling for this session. If\n <a href=\"#!/api/android.media.session.MediaSession-method-setPlaybackToRemote\" rel=\"android.media.session.MediaSession-method-setPlaybackToRemote\" class=\"docClass\">setPlaybackToRemote</a> was previously called it will stop receiving\n volume commands and the system will begin sending volume changes to the\n appropriate stream.\n <p>\n By default sessions use attributes for media.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attributes</span> : Object {AudioAttributes}<div class='sub-desc'><p>The AudioAttributes for this session's audio.</p>\n</div></li></ul></div></div></div><div id='method-setPlaybackToRemote' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setPlaybackToRemote' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setPlaybackToRemote' class='name expandable'>setPlaybackToRemote</a>( <span class='pre'>volumeProvider</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Configure this session to use remote volume handling. ...</div><div class='long'><p>Configure this session to use remote volume handling. This must be called\n to receive volume button events, otherwise the system will adjust the\n appropriate stream volume for this session. If\n <a href=\"#!/api/android.media.session.MediaSession-method-setPlaybackToLocal\" rel=\"android.media.session.MediaSession-method-setPlaybackToLocal\" class=\"docClass\">setPlaybackToLocal</a> was previously called the system will stop\n handling volume changes for this session and pass them to the volume\n provider instead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>volumeProvider</span> : Object {VolumeProvider}<div class='sub-desc'><p>The provider that will handle volume changes. May\n            not be null.</p>\n</div></li></ul></div></div></div><div id='method-setQueue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setQueue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setQueue' class='name expandable'>setQueue</a>( <span class='pre'>queue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the list of items in the play queue. ...</div><div class='long'><p>Update the list of items in the play queue. It is an ordered list and\n should contain the current item, and previous or upcoming items if they\n exist. Specify null if there is no current play queue.\n <p>\n The queue should be of reasonable size. If the play queue is unbounded\n within your app, it is better to send a reasonable amount in a sliding\n window instead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>queue</span> : Object {java.util.List}<div class='sub-desc'><p>A list of items in the play queue.</p>\n</div></li></ul></div></div></div><div id='method-setQueueTitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setQueueTitle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setQueueTitle' class='name expandable'>setQueueTitle</a>( <span class='pre'>title</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the title of the play queue. ...</div><div class='long'><p>Set the title of the play queue. The UI should display this title along\n with the play queue itself.\n e.g. \"Play Queue\", \"Now Playing\", or an album name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>title</span> : Object {CharSequence}<div class='sub-desc'><p>The title of the play queue.</p>\n</div></li></ul></div></div></div><div id='method-setRatingType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setRatingType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setRatingType' class='name expandable'>setRatingType</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the style of rating used by this session. ...</div><div class='long'><p>Set the style of rating used by this session. Apps trying to set the\n rating should use this style. Must be one of the following:\n <ul>\n <li>Rating.RATING_NONE</li>\n <li>Rating.RATING_3_STARS</li>\n <li>Rating.RATING_4_STARS</li>\n <li>Rating.RATING_5_STARS</li>\n <li>Rating.RATING_HEART</li>\n <li>Rating.RATING_PERCENTAGE</li>\n <li>Rating.RATING_THUMB_UP_DOWN</li>\n </ul></p>\n</div></div></div><div id='method-setSessionActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.session.MediaSession'>android.media.session.MediaSession</span><br/><a href='source/MediaSession.html#android-media-session-MediaSession-method-setSessionActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.session.MediaSession-method-setSessionActivity' class='name expandable'>setSessionActivity</a>( <span class='pre'>pi</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set an intent for launching UI for this Session. ...</div><div class='long'><p>Set an intent for launching UI for this Session. This can be used as a\n quick link to an ongoing media screen. The intent should be for an\n activity that may be started using Activity.startActivity(Intent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pi</span> : Object {PendingIntent}<div class='sub-desc'><p>The intent to launch to show UI for this Session.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});