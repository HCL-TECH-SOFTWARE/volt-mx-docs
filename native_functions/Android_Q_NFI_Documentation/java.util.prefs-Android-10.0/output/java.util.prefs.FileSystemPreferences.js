Ext.data.JsonP.java_util_prefs_FileSystemPreferences({"tagname":"class","name":"java.util.prefs.FileSystemPreferences","autodetected":{},"files":[{"filename":"FileSystemPreferences.js","href":"FileSystemPreferences.html#java-util-prefs-FileSystemPreferences"}],"extends":"java.util.prefs.AbstractPreferences","author":[{"tagname":"author","name":"Josh Bloch","email":null}],"since":"1.4","hide":true,"members":[{"name":"MAX_KEY_LENGTH","tagname":"property","owner":"java.util.prefs.Preferences","id":"property-MAX_KEY_LENGTH","meta":{}},{"name":"MAX_NAME_LENGTH","tagname":"property","owner":"java.util.prefs.Preferences","id":"property-MAX_NAME_LENGTH","meta":{}},{"name":"MAX_VALUE_LENGTH","tagname":"property","owner":"java.util.prefs.Preferences","id":"property-MAX_VALUE_LENGTH","meta":{}},{"name":"absolutePath","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-absolutePath","meta":{}},{"name":"addNodeChangeListener","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-addNodeChangeListener","meta":{}},{"name":"addPreferenceChangeListener","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-addPreferenceChangeListener","meta":{}},{"name":"childrenNames","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-childrenNames","meta":{}},{"name":"clear","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-clear","meta":{}},{"name":"exportNode","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-exportNode","meta":{}},{"name":"exportSubtree","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-exportSubtree","meta":{}},{"name":"flush","tagname":"method","owner":"java.util.prefs.FileSystemPreferences","id":"method-flush","meta":{}},{"name":"get","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-get","meta":{}},{"name":"getBoolean","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-getBoolean","meta":{}},{"name":"getByteArray","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-getByteArray","meta":{}},{"name":"getDouble","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-getDouble","meta":{}},{"name":"getFloat","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-getFloat","meta":{}},{"name":"getInt","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-getInt","meta":{}},{"name":"getLong","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-getLong","meta":{}},{"name":"importPreferences","tagname":"method","owner":"java.util.prefs.Preferences","id":"method-importPreferences","meta":{}},{"name":"isUserNode","tagname":"method","owner":"java.util.prefs.FileSystemPreferences","id":"method-isUserNode","meta":{}},{"name":"keys","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-keys","meta":{}},{"name":"name","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-name","meta":{}},{"name":"node","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-node","meta":{}},{"name":"nodeExists","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-nodeExists","meta":{}},{"name":"parent","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-parent","meta":{}},{"name":"put","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-put","meta":{}},{"name":"putBoolean","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-putBoolean","meta":{}},{"name":"putByteArray","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-putByteArray","meta":{}},{"name":"putDouble","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-putDouble","meta":{}},{"name":"putFloat","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-putFloat","meta":{}},{"name":"putInt","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-putInt","meta":{}},{"name":"putLong","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-putLong","meta":{}},{"name":"remove","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-remove","meta":{}},{"name":"removeNode","tagname":"method","owner":"java.util.prefs.FileSystemPreferences","id":"method-removeNode","meta":{}},{"name":"removeNodeChangeListener","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-removeNodeChangeListener","meta":{}},{"name":"removePreferenceChangeListener","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-removePreferenceChangeListener","meta":{}},{"name":"sync","tagname":"method","owner":"java.util.prefs.FileSystemPreferences","id":"method-sync","meta":{}},{"name":"systemNodeForPackage","tagname":"method","owner":"java.util.prefs.Preferences","id":"method-systemNodeForPackage","meta":{}},{"name":"systemRoot","tagname":"method","owner":"java.util.prefs.Preferences","id":"method-systemRoot","meta":{}},{"name":"toString","tagname":"method","owner":"java.util.prefs.AbstractPreferences","id":"method-toString","meta":{}},{"name":"userNodeForPackage","tagname":"method","owner":"java.util.prefs.Preferences","id":"method-userNodeForPackage","meta":{}},{"name":"userRoot","tagname":"method","owner":"java.util.prefs.Preferences","id":"method-userRoot","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.prefs.FileSystemPreferences","short_doc":"Preferences implementation for Unix. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.util.prefs.Preferences","java.util.prefs.AbstractPreferences"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='docClass'>java.util.prefs.Preferences</a><div class='subclass '><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='docClass'>java.util.prefs.AbstractPreferences</a><div class='subclass '><strong>java.util.prefs.FileSystemPreferences</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/FileSystemPreferences.html#java-util-prefs-FileSystemPreferences' target='_blank'>FileSystemPreferences.js</a></div></pre><div class='doc-contents'><p>Preferences implementation for Unix.  Preferences are stored in the file\n system, with one directory per preferences node.  All of the preferences\n at each node are stored in a single file.  Atomic file system operations\n (e.g. File.renameTo) are used to ensure integrity.  An in-memory cache of\n the \"explored\" portion of the tree is maintained for performance, and\n written back to the disk periodically.  File-locking is used to ensure\n reasonable behavior when multiple VMs are running at the same time.\n (The file lock is obtained only for sync(), flush() and removeNode().)</p>\n\n<p> @see     Preferences</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-MAX_KEY_LENGTH' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-property-MAX_KEY_LENGTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-property-MAX_KEY_LENGTH' class='name expandable'>MAX_KEY_LENGTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Maximum length of string allowed as a key (80 characters). ...</div><div class='long'><p>Maximum length of string allowed as a key (80 characters).</p>\n<p>Defaults to: <code>&quot;80&quot;</code></p></div></div></div><div id='property-MAX_NAME_LENGTH' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-property-MAX_NAME_LENGTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-property-MAX_NAME_LENGTH' class='name expandable'>MAX_NAME_LENGTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Maximum length of a node name (80 characters). ...</div><div class='long'><p>Maximum length of a node name (80 characters).</p>\n<p>Defaults to: <code>&quot;80&quot;</code></p></div></div></div><div id='property-MAX_VALUE_LENGTH' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-property-MAX_VALUE_LENGTH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-property-MAX_VALUE_LENGTH' class='name expandable'>MAX_VALUE_LENGTH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Maximum length of string allowed as a value (8192 characters). ...</div><div class='long'><p>Maximum length of string allowed as a value (8192 characters).</p>\n<p>Defaults to: <code>&quot;8192&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-absolutePath' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-absolutePath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-absolutePath' class='name expandable'>absolutePath</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the absolutePath method as per the specification in\n java.util.prefs.Preferences.absolutePath(). ...</div><div class='long'><p>Implements the <tt>absolutePath</tt> method as per the specification in\n java.util.prefs.Preferences.absolutePath().</p>\n\n<p> <p>This implementation merely returns the absolute path name that\n was computed at the time that this node was constructed (based on\n the name that was passed to this node's constructor, and the names\n that were passed to this node's ancestors' constructors).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>this preference node's absolute path name.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-absolutePath\" rel=\"java.util.prefs.Preferences-method-absolutePath\" class=\"docClass\">java.util.prefs.Preferences.absolutePath</a></p></div></div></div><div id='method-addNodeChangeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-addNodeChangeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-addNodeChangeListener' class='name expandable'>addNodeChangeListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-addNodeChangeListener\" rel=\"java.util.prefs.Preferences-method-addNodeChangeListener\" class=\"docClass\">java.util.prefs.Preferences.addNodeChangeListener</a></p></div></div></div><div id='method-addPreferenceChangeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-addPreferenceChangeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-addPreferenceChangeListener' class='name expandable'>addPreferenceChangeListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-addPreferenceChangeListener\" rel=\"java.util.prefs.Preferences-method-addPreferenceChangeListener\" class=\"docClass\">java.util.prefs.Preferences.addPreferenceChangeListener</a></p></div></div></div><div id='method-childrenNames' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-childrenNames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-childrenNames' class='name expandable'>childrenNames</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the children method as per the specification in\n java.util.prefs.Preferences.childrenNames(). ...</div><div class='long'><p>Implements the <tt>children</tt> method as per the specification in\n java.util.prefs.Preferences.childrenNames().</p>\n\n<p> <p>This implementation obtains this preference node's lock, checks that\n the node has not been removed, constructs a <tt>TreeSet</tt> initialized\n to the names of children already cached (the children in this node's\n \"child-cache\"), invokes childrenNamesSpi(), and adds all of the\n returned child-names into the set.  The elements of the tree set are\n dumped into a <tt>String</tt> array using the <tt>toArray</tt> method,\n and this array is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the names of the children of this preference node.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BackingStoreException if this operation cannot be completed\n         due to a failure in the backing store, or inability to\n         communicate with it.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.\n@see #cachedChildren()</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-childrenNames\" rel=\"java.util.prefs.Preferences-method-childrenNames\" class=\"docClass\">java.util.prefs.Preferences.childrenNames</a></p></div></div></div><div id='method-clear' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the clear method as per the specification in\n java.util.prefs.Preferences.clear(). ...</div><div class='long'><p>Implements the <tt>clear</tt> method as per the specification in\n java.util.prefs.Preferences.clear().</p>\n\n<p> <p>This implementation obtains this preference node's lock,\n invokes <a href=\"#!/api/java.util.prefs.AbstractPreferences-method-keys\" rel=\"java.util.prefs.AbstractPreferences-method-keys\" class=\"docClass\">keys</a>() to obtain an array of keys, and\n iterates over the array invoking <a href=\"#!/api/java.util.prefs.AbstractPreferences-method-remove\" rel=\"java.util.prefs.AbstractPreferences-method-remove\" class=\"docClass\">remove</a>(String) on each key.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BackingStoreException if this operation cannot be completed\n         due to a failure in the backing store, or inability to\n         communicate with it.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-clear\" rel=\"java.util.prefs.Preferences-method-clear\" class=\"docClass\">java.util.prefs.Preferences.clear</a></p></div></div></div><div id='method-exportNode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-exportNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-exportNode' class='name expandable'>exportNode</a>( <span class='pre'>os</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the exportNode method as per the specification in\n java.util.prefs.Preferences.exportNode(OutputStream). ...</div><div class='long'><p>Implements the <tt>exportNode</tt> method as per the specification in\n java.util.prefs.Preferences.exportNode(OutputStream).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>os</span> : Object {OutputStream}<div class='sub-desc'><p>the output stream on which to emit the XML document.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if writing to the specified output stream\n         results in an <tt>IOException</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>BackingStoreException if preference data cannot be read from\n         backing store.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-exportNode\" rel=\"java.util.prefs.Preferences-method-exportNode\" class=\"docClass\">java.util.prefs.Preferences.exportNode</a></p></div></div></div><div id='method-exportSubtree' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-exportSubtree' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-exportSubtree' class='name expandable'>exportSubtree</a>( <span class='pre'>os</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the exportSubtree method as per the specification in\n java.util.prefs.Preferences.exportSubtree(OutputStre...</div><div class='long'><p>Implements the <tt>exportSubtree</tt> method as per the specification in\n java.util.prefs.Preferences.exportSubtree(OutputStream).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>os</span> : Object {OutputStream}<div class='sub-desc'><p>the output stream on which to emit the XML document.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if writing to the specified output stream\n         results in an <tt>IOException</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>BackingStoreException if preference data cannot be read from\n         backing store.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-exportSubtree\" rel=\"java.util.prefs.Preferences-method-exportSubtree\" class=\"docClass\">java.util.prefs.Preferences.exportSubtree</a></p></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.prefs.FileSystemPreferences'>java.util.prefs.FileSystemPreferences</span><br/><a href='source/FileSystemPreferences.html#java-util-prefs-FileSystemPreferences-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.FileSystemPreferences-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.AbstractPreferences-method-flush\" rel=\"java.util.prefs.AbstractPreferences-method-flush\" class=\"docClass\">java.util.prefs.AbstractPreferences.flush</a></p></div></div></div><div id='method-get' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-get' class='name expandable'>get</a>( <span class='pre'>key, def</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the get method as per the specification in\n java.util.prefs.Preferences.get(String,String). ...</div><div class='long'><p>Implements the <tt>get</tt> method as per the specification in\n java.util.prefs.Preferences.get(String,String).</p>\n\n<p> <p>This implementation first checks to see if <tt>key</tt> is\n <tt>null</tt> throwing a <tt>NullPointerException</tt> if this is\n the case.  Then it obtains this preference node's lock,\n checks that the node has not been removed, invokes getSpi(String), and returns the result, unless the <tt>getSpi</tt>\n invocation returns <tt>null</tt> or throws an exception, in which case\n this invocation returns <tt>def</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose associated value is to be returned.</p>\n</div></li><li><span class='pre'>def</span> : String<div class='sub-desc'><p>the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the value associated with <tt>key</tt>, or <tt>def</tt>\n         if no value is associated with <tt>key</tt>.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key is <tt>null</tt>.  (A\n         <tt>null</tt> default <i>is</i> permitted.)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-get\" rel=\"java.util.prefs.Preferences-method-get\" class=\"docClass\">java.util.prefs.Preferences.get</a></p></div></div></div><div id='method-getBoolean' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-getBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-getBoolean' class='name expandable'>getBoolean</a>( <span class='pre'>key, def</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the getBoolean method as per the specification in\n java.util.prefs.Preferences.getBoolean(String,boolean). ...</div><div class='long'><p>Implements the <tt>getBoolean</tt> method as per the specification in\n java.util.prefs.Preferences.getBoolean(String,boolean).</p>\n\n<p> <p>This implementation invokes <tt>get(key,\n null)</tt>.  If the return value is non-null, it is compared with\n <tt>\"true\"</tt> using String.equalsIgnoreCase(String).  If the\n comparison returns <tt>true</tt>, this invocation returns\n <tt>true</tt>.  Otherwise, the original return value is compared with\n <tt>\"false\"</tt>, again using String.equalsIgnoreCase(String).\n If the comparison returns <tt>true</tt>, this invocation returns\n <tt>false</tt>.  Otherwise, this invocation returns <tt>def</tt>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose associated value is to be returned as a boolean.</p>\n</div></li><li><span class='pre'>def</span> : Boolean<div class='sub-desc'><p>the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a boolean.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the boolean value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a boolean.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>key</tt> is <tt>null</tt>.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-getBoolean\" rel=\"java.util.prefs.Preferences-method-getBoolean\" class=\"docClass\">java.util.prefs.Preferences.getBoolean</a></p></div></div></div><div id='method-getByteArray' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-getByteArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-getByteArray' class='name expandable'>getByteArray</a>( <span class='pre'>key, def</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the getByteArray method as per the specification in\n java.util.prefs.Preferences.getByteArray(String,byte[]). ...</div><div class='long'><p>Implements the <tt>getByteArray</tt> method as per the specification in\n java.util.prefs.Preferences.getByteArray(String,byte[]).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose associated value is to be returned as a byte array.</p>\n</div></li><li><span class='pre'>def</span> : Object {byte[]}<div class='sub-desc'><p>the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a byte array.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the byte array value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a byte array.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>key</tt> is <tt>null</tt>.  (A\n         <tt>null</tt> value for <tt>def</tt> <i>is</i> permitted.)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-getByteArray\" rel=\"java.util.prefs.Preferences-method-getByteArray\" class=\"docClass\">java.util.prefs.Preferences.getByteArray</a></p></div></div></div><div id='method-getDouble' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-getDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-getDouble' class='name expandable'>getDouble</a>( <span class='pre'>key, def</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the getDouble method as per the specification in\n java.util.prefs.Preferences.getDouble(String,double). ...</div><div class='long'><p>Implements the <tt>getDouble</tt> method as per the specification in\n java.util.prefs.Preferences.getDouble(String,double).</p>\n\n<p> <p>This implementation invokes <tt>get(key,\n null)</tt>.  If the return value is non-null, the implementation\n attempts to translate it to an <tt>double</tt> with\n Double.parseDouble(String).  If the attempt succeeds, the return\n value is returned by this method.  Otherwise, <tt>def</tt> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose associated value is to be returned as a double.</p>\n</div></li><li><span class='pre'>def</span> : Number<div class='sub-desc'><p>the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a double.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the double value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a double.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>key</tt> is <tt>null</tt>.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-getDouble\" rel=\"java.util.prefs.Preferences-method-getDouble\" class=\"docClass\">java.util.prefs.Preferences.getDouble</a></p></div></div></div><div id='method-getFloat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-getFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-getFloat' class='name expandable'>getFloat</a>( <span class='pre'>key, def</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the getFloat method as per the specification in\n java.util.prefs.Preferences.getFloat(String,float). ...</div><div class='long'><p>Implements the <tt>getFloat</tt> method as per the specification in\n java.util.prefs.Preferences.getFloat(String,float).</p>\n\n<p> <p>This implementation invokes <tt>get(key,\n null)</tt>.  If the return value is non-null, the implementation\n attempts to translate it to an <tt>float</tt> with\n Float.parseFloat(String).  If the attempt succeeds, the return\n value is returned by this method.  Otherwise, <tt>def</tt> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose associated value is to be returned as a float.</p>\n</div></li><li><span class='pre'>def</span> : Number<div class='sub-desc'><p>the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a float.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the float value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a float.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>key</tt> is <tt>null</tt>.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-getFloat\" rel=\"java.util.prefs.Preferences-method-getFloat\" class=\"docClass\">java.util.prefs.Preferences.getFloat</a></p></div></div></div><div id='method-getInt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-getInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-getInt' class='name expandable'>getInt</a>( <span class='pre'>key, def</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the getInt method as per the specification in\n java.util.prefs.Preferences.getInt(String,int). ...</div><div class='long'><p>Implements the <tt>getInt</tt> method as per the specification in\n java.util.prefs.Preferences.getInt(String,int).</p>\n\n<p> <p>This implementation invokes <tt>get(key,\n null)</tt>.  If the return value is non-null, the implementation\n attempts to translate it to an <tt>int</tt> with\n Integer.parseInt(String).  If the attempt succeeds, the return\n value is returned by this method.  Otherwise, <tt>def</tt> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose associated value is to be returned as an int.</p>\n</div></li><li><span class='pre'>def</span> : Number<div class='sub-desc'><p>the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as an int.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the int value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         an int.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>key</tt> is <tt>null</tt>.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-getInt\" rel=\"java.util.prefs.Preferences-method-getInt\" class=\"docClass\">java.util.prefs.Preferences.getInt</a></p></div></div></div><div id='method-getLong' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-getLong' class='name expandable'>getLong</a>( <span class='pre'>key, def</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the getLong method as per the specification in\n java.util.prefs.Preferences.getLong(String,long). ...</div><div class='long'><p>Implements the <tt>getLong</tt> method as per the specification in\n java.util.prefs.Preferences.getLong(String,long).</p>\n\n<p> <p>This implementation invokes <tt>get(key,\n null)</tt>.  If the return value is non-null, the implementation\n attempts to translate it to a <tt>long</tt> with\n Long.parseLong(String).  If the attempt succeeds, the return\n value is returned by this method.  Otherwise, <tt>def</tt> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose associated value is to be returned as a long.</p>\n</div></li><li><span class='pre'>def</span> : Number<div class='sub-desc'><p>the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a long.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the long value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a long.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>key</tt> is <tt>null</tt>.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-getLong\" rel=\"java.util.prefs.Preferences-method-getLong\" class=\"docClass\">java.util.prefs.Preferences.getLong</a></p></div></div></div><div id='method-importPreferences' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-method-importPreferences' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-method-importPreferences' class='name expandable'>importPreferences</a>( <span class='pre'>is</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Imports all of the preferences represented by the XML document on the\n specified input stream. ...</div><div class='long'><p>Imports all of the preferences represented by the XML document on the\n specified input stream.  The document may represent user preferences or\n system preferences.  If it represents user preferences, the preferences\n will be imported into the calling user's preference tree (even if they\n originally came from a different user's preference tree).  If any of\n the preferences described by the document inhabit preference nodes that\n do not exist, the nodes will be created.</p>\n\n<p> <p>The XML document must have the following DOCTYPE declaration:\n <pre>{@code\n &lt;!DOCTYPE preferences SYSTEM \"http://java.sun.com/dtd/preferences.dtd\">\n }</pre>\n (This method is designed for use in conjunction with\n <a href=\"#!/api/java.util.prefs.Preferences-method-exportNode\" rel=\"java.util.prefs.Preferences-method-exportNode\" class=\"docClass\">exportNode</a>(OutputStream) and\n <a href=\"#!/api/java.util.prefs.Preferences-method-exportSubtree\" rel=\"java.util.prefs.Preferences-method-exportSubtree\" class=\"docClass\">exportSubtree</a>(OutputStream).</p>\n\n<p> <p>This method is an exception to the general rule that the results of\n concurrently executing multiple methods in this class yields\n results equivalent to some serial execution.  The method behaves\n as if implemented on top of the other public methods in this class,\n notably <a href=\"#!/api/java.util.prefs.Preferences-method-node\" rel=\"java.util.prefs.Preferences-method-node\" class=\"docClass\">node</a>(String) and String).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>is</span> : Object {InputStream}<div class='sub-desc'><p>the input stream from which to read the XML document.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if reading from the specified input stream\n         results in an <tt>IOException</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InvalidPreferencesFormatException Data on input stream does not\n         constitute a valid XML document with the mandated document type.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException If a security manager is present and\n         it denies <tt>RuntimePermission(\"preferences\")</tt>.\n@see RuntimePermission</p>\n</div></li></ul></div></div></div><div id='method-isUserNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.prefs.FileSystemPreferences'>java.util.prefs.FileSystemPreferences</span><br/><a href='source/FileSystemPreferences.html#java-util-prefs-FileSystemPreferences-method-isUserNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.FileSystemPreferences-method-isUserNode' class='name expandable'>isUserNode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.AbstractPreferences-method-isUserNode\" rel=\"java.util.prefs.AbstractPreferences-method-isUserNode\" class=\"docClass\">java.util.prefs.AbstractPreferences.isUserNode</a></p></div></div></div><div id='method-keys' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-keys' class='name expandable'>keys</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the keys method as per the specification in\n java.util.prefs.Preferences.keys(). ...</div><div class='long'><p>Implements the <tt>keys</tt> method as per the specification in\n java.util.prefs.Preferences.keys().</p>\n\n<p> <p>This implementation obtains this preference node's lock, checks that\n the node has not been removed and invokes keysSpi().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of the keys that have an associated value in this\n         preference node.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BackingStoreException if this operation cannot be completed\n         due to a failure in the backing store, or inability to\n         communicate with it.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-keys\" rel=\"java.util.prefs.Preferences-method-keys\" class=\"docClass\">java.util.prefs.Preferences.keys</a></p></div></div></div><div id='method-name' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-name' class='name expandable'>name</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the name method as per the specification in\n java.util.prefs.Preferences.name(). ...</div><div class='long'><p>Implements the <tt>name</tt> method as per the specification in\n java.util.prefs.Preferences.name().</p>\n\n<p> <p>This implementation merely returns the name that was\n passed to this node's constructor.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>this preference node's name, relative to its parent.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-name\" rel=\"java.util.prefs.Preferences-method-name\" class=\"docClass\">java.util.prefs.Preferences.name</a></p></div></div></div><div id='method-node' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-node' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-node' class='name expandable'>node</a>( <span class='pre'>path</span> ) : Object {java.util.prefs.Preferences}<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the node method as per the specification in\n java.util.prefs.Preferences.node(String). ...</div><div class='long'><p>Implements the <tt>node</tt> method as per the specification in\n java.util.prefs.Preferences.node(String).</p>\n\n<p> <p>This implementation obtains this preference node's lock and checks\n that the node has not been removed.  If <tt>path</tt> is <tt>\"\"</tt>,\n this node is returned; if <tt>path</tt> is <tt>\"/\"</tt>, this node's\n root is returned.  If the first character in <tt>path</tt> is\n not <tt>'/'</tt>, the implementation breaks <tt>path</tt> into\n tokens and recursively traverses the path from this node to the\n named node, \"consuming\" a name and a slash from <tt>path</tt> at\n each step of the traversal.  At each step, the current node is locked\n and the node's child-cache is checked for the named node.  If it is\n not found, the name is checked to make sure its length does not\n exceed <tt>MAX_NAME_LENGTH</tt>.  Then the childSpi(String)\n method is invoked, and the result stored in this node's child-cache.\n If the newly created <tt>Preferences</tt> object's newNode\n field is <tt>true</tt> and there are any node change listeners,\n a notification event is enqueued for processing by the event dispatch\n thread.</p>\n\n<p> <p>When there are no more tokens, the last value found in the\n child-cache or returned by <tt>childSpi</tt> is returned by this\n method.  If during the traversal, two <tt>\"/\"</tt> tokens occur\n consecutively, or the final token is <tt>\"/\"</tt> (rather than a name),\n an appropriate <tt>IllegalArgumentException</tt> is thrown.</p>\n\n<p> <p> If the first character of <tt>path</tt> is <tt>'/'</tt>\n (indicating an absolute path name) this preference node's\n lock is dropped prior to breaking <tt>path</tt> into tokens, and\n this method recursively traverses the path starting from the root\n (rather than starting from this node).  The traversal is otherwise\n identical to the one described for relative path names.  Dropping\n the lock on this node prior to commencing the traversal at the root\n node is essential to avoid the possibility of deadlock, as per the\n locking invariant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : String<div class='sub-desc'><p>the path name of the preference node to return.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.prefs.Preferences}</span><div class='sub-desc'><p>the specified preference node.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the path name is invalid (i.e.,\n         it contains multiple consecutive slash characters, or ends\n         with a slash character and is more than one character long).</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-node\" rel=\"java.util.prefs.Preferences-method-node\" class=\"docClass\">java.util.prefs.Preferences.node</a></p></div></div></div><div id='method-nodeExists' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-nodeExists' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-nodeExists' class='name expandable'>nodeExists</a>( <span class='pre'>path</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the nodeExists method as per the specification in\n java.util.prefs.Preferences.nodeExists(String). ...</div><div class='long'><p>Implements the <tt>nodeExists</tt> method as per the specification in\n java.util.prefs.Preferences.nodeExists(String).</p>\n\n<p> <p>This implementation is very similar to <a href=\"#!/api/java.util.prefs.AbstractPreferences-method-node\" rel=\"java.util.prefs.AbstractPreferences-method-node\" class=\"docClass\">node</a>(String),\n except that getChild(String) is used instead of childSpi(String).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : String<div class='sub-desc'><p>the path name of the node whose existence is to be checked.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the specified node exists.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BackingStoreException if this operation cannot be completed\n         due to a failure in the backing store, or inability to\n         communicate with it.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the path name is invalid (i.e.,\n         it contains multiple consecutive slash characters, or ends\n         with a slash character and is more than one character long).</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method and\n         <tt>pathname</tt> is not the empty string (<tt>\"\"</tt>).</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-nodeExists\" rel=\"java.util.prefs.Preferences-method-nodeExists\" class=\"docClass\">java.util.prefs.Preferences.nodeExists</a></p></div></div></div><div id='method-parent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-parent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-parent' class='name expandable'>parent</a>( <span class='pre'></span> ) : Object {java.util.prefs.Preferences}<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the parent method as per the specification in\n java.util.prefs.Preferences.parent(). ...</div><div class='long'><p>Implements the <tt>parent</tt> method as per the specification in\n java.util.prefs.Preferences.parent().</p>\n\n<p> <p>This implementation obtains this preference node's lock, checks that\n the node has not been removed and returns the parent value that was\n passed to this node's constructor.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.prefs.Preferences}</span><div class='sub-desc'><p>the parent of this preference node.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-parent\" rel=\"java.util.prefs.Preferences-method-parent\" class=\"docClass\">java.util.prefs.Preferences.parent</a></p></div></div></div><div id='method-put' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-put' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-put' class='name expandable'>put</a>( <span class='pre'>key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the put method as per the specification in\n java.util.prefs.Preferences.put(String,String). ...</div><div class='long'><p>Implements the <tt>put</tt> method as per the specification in\n java.util.prefs.Preferences.put(String,String).</p>\n\n<p> <p>This implementation checks that the key and value are legal,\n obtains this preference node's lock, checks that the node\n has not been removed, invokes putSpi(String,String), and if\n there are any preference change listeners, enqueues a notification\n event for processing by the event dispatch thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key with which the specified value is to be associated.</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>value to be associated with the specified key.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key or value is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if <tt>key.length()</tt> exceeds\n       <tt>MAX_KEY_LENGTH</tt> or if <tt>value.length</tt> exceeds\n       <tt>MAX_VALUE_LENGTH</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-put\" rel=\"java.util.prefs.Preferences-method-put\" class=\"docClass\">java.util.prefs.Preferences.put</a></p></div></div></div><div id='method-putBoolean' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-putBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-putBoolean' class='name expandable'>putBoolean</a>( <span class='pre'>key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the putBoolean method as per the specification in\n java.util.prefs.Preferences.putBoolean(String,boolean). ...</div><div class='long'><p>Implements the <tt>putBoolean</tt> method as per the specification in\n java.util.prefs.Preferences.putBoolean(String,boolean).</p>\n\n<p> <p>This implementation translates <tt>value</tt> to a string with\n String.valueOf(boolean) and invokes put(String,String)\n on the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key with which the string form of value is to be associated.</p>\n</div></li><li><span class='pre'>value</span> : Boolean<div class='sub-desc'><p>value whose string form is to be associated with key.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-putBoolean\" rel=\"java.util.prefs.Preferences-method-putBoolean\" class=\"docClass\">java.util.prefs.Preferences.putBoolean</a></p></div></div></div><div id='method-putByteArray' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-putByteArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-putByteArray' class='name expandable'>putByteArray</a>( <span class='pre'>key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the putByteArray method as per the specification in\n java.util.prefs.Preferences.putByteArray(String,byte[]). ...</div><div class='long'><p>Implements the <tt>putByteArray</tt> method as per the specification in\n java.util.prefs.Preferences.putByteArray(String,byte[]).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key with which the string form of value is to be associated.</p>\n</div></li><li><span class='pre'>value</span> : Object {byte[]}<div class='sub-desc'><p>value whose string form is to be associated with key.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key or value is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if key.length() exceeds MAX_KEY_LENGTH\n         or if value.length exceeds MAX_VALUE_LENGTH*3/4.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-putByteArray\" rel=\"java.util.prefs.Preferences-method-putByteArray\" class=\"docClass\">java.util.prefs.Preferences.putByteArray</a></p></div></div></div><div id='method-putDouble' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-putDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-putDouble' class='name expandable'>putDouble</a>( <span class='pre'>key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the putDouble method as per the specification in\n java.util.prefs.Preferences.putDouble(String,double). ...</div><div class='long'><p>Implements the <tt>putDouble</tt> method as per the specification in\n java.util.prefs.Preferences.putDouble(String,double).</p>\n\n<p> <p>This implementation translates <tt>value</tt> to a string with\n Double.toString(double) and invokes put(String,String)\n on the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key with which the string form of value is to be associated.</p>\n</div></li><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>value whose string form is to be associated with key.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-putDouble\" rel=\"java.util.prefs.Preferences-method-putDouble\" class=\"docClass\">java.util.prefs.Preferences.putDouble</a></p></div></div></div><div id='method-putFloat' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-putFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-putFloat' class='name expandable'>putFloat</a>( <span class='pre'>key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the putFloat method as per the specification in\n java.util.prefs.Preferences.putFloat(String,float). ...</div><div class='long'><p>Implements the <tt>putFloat</tt> method as per the specification in\n java.util.prefs.Preferences.putFloat(String,float).</p>\n\n<p> <p>This implementation translates <tt>value</tt> to a string with\n Float.toString(float) and invokes put(String,String)\n on the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key with which the string form of value is to be associated.</p>\n</div></li><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>value whose string form is to be associated with key.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-putFloat\" rel=\"java.util.prefs.Preferences-method-putFloat\" class=\"docClass\">java.util.prefs.Preferences.putFloat</a></p></div></div></div><div id='method-putInt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-putInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-putInt' class='name expandable'>putInt</a>( <span class='pre'>key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the putInt method as per the specification in\n java.util.prefs.Preferences.putInt(String,int). ...</div><div class='long'><p>Implements the <tt>putInt</tt> method as per the specification in\n java.util.prefs.Preferences.putInt(String,int).</p>\n\n<p> <p>This implementation translates <tt>value</tt> to a string with\n Integer.toString(int) and invokes put(String,String)\n on the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key with which the string form of value is to be associated.</p>\n</div></li><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>value whose string form is to be associated with key.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-putInt\" rel=\"java.util.prefs.Preferences-method-putInt\" class=\"docClass\">java.util.prefs.Preferences.putInt</a></p></div></div></div><div id='method-putLong' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-putLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-putLong' class='name expandable'>putLong</a>( <span class='pre'>key, value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the putLong method as per the specification in\n java.util.prefs.Preferences.putLong(String,long). ...</div><div class='long'><p>Implements the <tt>putLong</tt> method as per the specification in\n java.util.prefs.Preferences.putLong(String,long).</p>\n\n<p> <p>This implementation translates <tt>value</tt> to a string with\n Long.toString(long) and invokes put(String,String)\n on the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key with which the string form of value is to be associated.</p>\n</div></li><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>value whose string form is to be associated with key.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if key is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-putLong\" rel=\"java.util.prefs.Preferences-method-putLong\" class=\"docClass\">java.util.prefs.Preferences.putLong</a></p></div></div></div><div id='method-remove' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-remove' class='name expandable'>remove</a>( <span class='pre'>key</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implements the remove(String) method as per the specification\n in java.util.prefs.Preferences.remove(String). ...</div><div class='long'><p>Implements the <tt>remove(String)</tt> method as per the specification\n in java.util.prefs.Preferences.remove(String).</p>\n\n<p> <p>This implementation obtains this preference node's lock,\n checks that the node has not been removed, invokes\n removeSpi(String) and if there are any preference\n change listeners, enqueues a notification event for processing by the\n event dispatch thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : String<div class='sub-desc'><p>key whose mapping is to be removed from the preference node.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this node (or an ancestor) has been\n         removed with the removeNode() method.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException {@inheritDoc}.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-remove\" rel=\"java.util.prefs.Preferences-method-remove\" class=\"docClass\">java.util.prefs.Preferences.remove</a></p></div></div></div><div id='method-removeNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.prefs.FileSystemPreferences'>java.util.prefs.FileSystemPreferences</span><br/><a href='source/FileSystemPreferences.html#java-util-prefs-FileSystemPreferences-method-removeNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.FileSystemPreferences-method-removeNode' class='name expandable'>removeNode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.AbstractPreferences-method-removeNode\" rel=\"java.util.prefs.AbstractPreferences-method-removeNode\" class=\"docClass\">java.util.prefs.AbstractPreferences.removeNode</a></p></div></div></div><div id='method-removeNodeChangeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-removeNodeChangeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-removeNodeChangeListener' class='name expandable'>removeNodeChangeListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-removeNodeChangeListener\" rel=\"java.util.prefs.Preferences-method-removeNodeChangeListener\" class=\"docClass\">java.util.prefs.Preferences.removeNodeChangeListener</a></p></div></div></div><div id='method-removePreferenceChangeListener' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-removePreferenceChangeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-removePreferenceChangeListener' class='name expandable'>removePreferenceChangeListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-removePreferenceChangeListener\" rel=\"java.util.prefs.Preferences-method-removePreferenceChangeListener\" class=\"docClass\">java.util.prefs.Preferences.removePreferenceChangeListener</a></p></div></div></div><div id='method-sync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.prefs.FileSystemPreferences'>java.util.prefs.FileSystemPreferences</span><br/><a href='source/FileSystemPreferences.html#java-util-prefs-FileSystemPreferences-method-sync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.FileSystemPreferences-method-sync' class='name expandable'>sync</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.AbstractPreferences-method-sync\" rel=\"java.util.prefs.AbstractPreferences-method-sync\" class=\"docClass\">java.util.prefs.AbstractPreferences.sync</a></p></div></div></div><div id='method-systemNodeForPackage' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-method-systemNodeForPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-method-systemNodeForPackage' class='name expandable'>systemNodeForPackage</a>( <span class='pre'>c</span> ) : Object {java.util.prefs.Preferences}<span class=\"signature\"></span></div><div class='description'><div class='short'>WARNING: On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in section...</div><div class='long'><p><strong>WARNING:</strong> On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in sections\n of the file system that are inaccessible to apps. Further, allowing apps to set\n \"system wide\" preferences is contrary to android's security model.</p>\n\n<p> Returns the preference node from the system preference tree that is\n associated (by convention) with the specified class's package.  The\n convention is as follows: the absolute path name of the node is the\n fully qualified package name, preceded by a slash (<tt>'/'</tt>), and\n with each period (<tt>'.'</tt>) replaced by a slash.  For example the\n absolute path name of the node associated with the class\n <tt>com.acme.widget.Foo</tt> is <tt>/com/acme/widget</tt>.</p>\n\n<p> <p>This convention does not apply to the unnamed package, whose\n associated preference node is <tt>&lt;unnamed&gt;</tt>.  This node\n is not intended for long term use, but for convenience in the early\n development of programs that do not yet belong to a package, and\n for \"throwaway\" programs.  <i>Valuable data should not be stored\n at this node as it is shared by all programs that use it.</i></p>\n\n<p> <p>A class <tt>Foo</tt> wishing to access preferences pertaining to its\n package can obtain a preference node as follows:</p>\n\n<pre>  static Preferences prefs = Preferences.systemNodeForPackage(Foo.class);\n </pre>\n\n\n<p> This idiom obviates the need for using a string to describe the\n preferences node and decreases the likelihood of a run-time failure.\n (If the class name is misspelled, it will typically result in a\n compile-time error.)</p>\n\n<p> <p>Invoking this method will result in the creation of the returned\n node and its ancestors if they do not already exist.  If the returned\n node did not exist prior to this call, this node and any ancestors that\n were created by this call are not guaranteed to become permanent until\n the <tt>flush</tt> method is called on the returned node (or one of its\n ancestors or descendants).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.lang.Class}<div class='sub-desc'><p>the class for whose package a system preference node is desired.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.prefs.Preferences}</span><div class='sub-desc'><p>the system preference node associated with the package of which\n         <tt>c</tt> is a member.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>c</tt> is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager is present and\n         it denies <tt>RuntimePermission(\"preferences\")</tt>.\n@see RuntimePermission</p>\n</div></li></ul></div></div></div><div id='method-systemRoot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-method-systemRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-method-systemRoot' class='name expandable'>systemRoot</a>( <span class='pre'></span> ) : Object {java.util.prefs.Preferences}<span class=\"signature\"></span></div><div class='description'><div class='short'>WARNING: On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in section...</div><div class='long'><p><strong>WARNING:</strong> On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in sections\n of the file system that are inaccessible to apps. Further, allowing apps to set\n \"system wide\" preferences is contrary to android's security model.</p>\n\n<p> Returns the root preference node for the system.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.prefs.Preferences}</span><div class='sub-desc'><p>the root preference node for the system.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException If a security manager is present and\n         it denies <tt>RuntimePermission(\"preferences\")</tt>.\n@see RuntimePermission</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.AbstractPreferences' rel='java.util.prefs.AbstractPreferences' class='defined-in docClass'>java.util.prefs.AbstractPreferences</a><br/><a href='source/AbstractPreferences.html#java-util-prefs-AbstractPreferences-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.AbstractPreferences-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the absolute path name of this preferences node. ...</div><div class='long'><p>Returns the absolute path name of this preferences node.</p>\n<p>Overrides: <a href=\"#!/api/java.util.prefs.Preferences-method-toString\" rel=\"java.util.prefs.Preferences-method-toString\" class=\"docClass\">java.util.prefs.Preferences.toString</a></p></div></div></div><div id='method-userNodeForPackage' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-method-userNodeForPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-method-userNodeForPackage' class='name expandable'>userNodeForPackage</a>( <span class='pre'>c</span> ) : Object {java.util.prefs.Preferences}<span class=\"signature\"></span></div><div class='description'><div class='short'>WARNING: On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in section...</div><div class='long'><p><strong>WARNING:</strong> On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in sections\n of the file system that are inaccessible to apps. Further, allowing apps to set\n \"system wide\" preferences is contrary to android's security model.</p>\n\n<p> Returns the preference node from the calling user's preference tree\n that is associated (by convention) with the specified class's package.\n The convention is as follows: the absolute path name of the node is the\n fully qualified package name, preceded by a slash (<tt>'/'</tt>), and\n with each period (<tt>'.'</tt>) replaced by a slash.  For example the\n absolute path name of the node associated with the class\n <tt>com.acme.widget.Foo</tt> is <tt>/com/acme/widget</tt>.</p>\n\n<p> <p>This convention does not apply to the unnamed package, whose\n associated preference node is <tt>&lt;unnamed&gt;</tt>.  This node\n is not intended for long term use, but for convenience in the early\n development of programs that do not yet belong to a package, and\n for \"throwaway\" programs.  <i>Valuable data should not be stored\n at this node as it is shared by all programs that use it.</i></p>\n\n<p> <p>A class <tt>Foo</tt> wishing to access preferences pertaining to its\n package can obtain a preference node as follows:</p>\n\n<pre>    static Preferences prefs = Preferences.userNodeForPackage(Foo.class);\n </pre>\n\n\n<p> This idiom obviates the need for using a string to describe the\n preferences node and decreases the likelihood of a run-time failure.\n (If the class name is misspelled, it will typically result in a\n compile-time error.)</p>\n\n<p> <p>Invoking this method will result in the creation of the returned\n node and its ancestors if they do not already exist.  If the returned\n node did not exist prior to this call, this node and any ancestors that\n were created by this call are not guaranteed to become permanent until\n the <tt>flush</tt> method is called on the returned node (or one of its\n ancestors or descendants).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {java.lang.Class}<div class='sub-desc'><p>the class for whose package a user preference node is desired.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.prefs.Preferences}</span><div class='sub-desc'><p>the user preference node associated with the package of which\n         <tt>c</tt> is a member.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if <tt>c</tt> is <tt>null</tt>.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager is present and\n         it denies <tt>RuntimePermission(\"preferences\")</tt>.\n@see RuntimePermission</p>\n</div></li></ul></div></div></div><div id='method-userRoot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.prefs.Preferences' rel='java.util.prefs.Preferences' class='defined-in docClass'>java.util.prefs.Preferences</a><br/><a href='source/Preferences.html#java-util-prefs-Preferences-method-userRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.prefs.Preferences-method-userRoot' class='name expandable'>userRoot</a>( <span class='pre'></span> ) : Object {java.util.prefs.Preferences}<span class=\"signature\"></span></div><div class='description'><div class='short'>WARNING: On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in section...</div><div class='long'><p><strong>WARNING:</strong> On Android, the Preference nodes\n corresponding to the \"system\" and \"user\" preferences are stored in sections\n of the file system that are inaccessible to apps. Further, allowing apps to set\n \"system wide\" preferences is contrary to android's security model.</p>\n\n<p> Returns the root preference node for the calling user.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.prefs.Preferences}</span><div class='sub-desc'><p>the root preference node for the calling user.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException If a security manager is present and\n         it denies <tt>RuntimePermission(\"preferences\")</tt>.\n@see RuntimePermission</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});