Ext.data.JsonP.java_io_StringBufferInputStream({"tagname":"class","name":"java.io.StringBufferInputStream","autodetected":{},"files":[{"filename":"StringBufferInputStream.js","href":"StringBufferInputStream.html#java-io-StringBufferInputStream"}],"extends":"java.io.InputStream","author":[{"tagname":"author","name":"Arthur van Hoff","email":null}],"since":"JDK1.0","deprecated":{"text":"<p>This class does not properly convert characters into bytes.  As\n             of JDK&nbsp;1.1, the preferred way to create a stream from a\n             string is via the <code>StringReader</code> class.</p>\n"},"members":[{"name":"available","tagname":"method","owner":"java.io.StringBufferInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"java.io.InputStream","id":"method-close","meta":{}},{"name":"mark","tagname":"method","owner":"java.io.InputStream","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.io.InputStream","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.io.StringBufferInputStream","id":"method-read","meta":{}},{"name":"reset","tagname":"method","owner":"java.io.StringBufferInputStream","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.io.StringBufferInputStream","id":"method-skip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.StringBufferInputStream","short_doc":"This class allows an application to create an input stream in\n which the bytes read are supplied by the contents of a...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.InputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='docClass'>java.io.InputStream</a><div class='subclass '><strong>java.io.StringBufferInputStream</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/StringBufferInputStream.html#java-io-StringBufferInputStream' target='_blank'>StringBufferInputStream.js</a></div></pre><div class='doc-contents'><p>This class allows an application to create an input stream in\n which the bytes read are supplied by the contents of a string.\n Applications can also read bytes from a byte array by using a\n <code>ByteArrayInputStream</code>.\n <p>\n Only the low eight bits of each character in the string are used by\n this class.</p>\n\n<p> @see        <a href=\"#!/api/java.io.ByteArrayInputStream\" rel=\"java.io.ByteArrayInputStream\" class=\"docClass\">java.io.ByteArrayInputStream</a>\n @see        <a href=\"#!/api/java.io.StringReader\" rel=\"java.io.StringReader\" class=\"docClass\">java.io.StringReader</a></p>\n        <p>Available since: <b>JDK1.0</b></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>This class does not properly convert characters into bytes.  As\n             of JDK&nbsp;1.1, the preferred way to create a stream from a\n             string is via the <code>StringReader</code> class.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.StringBufferInputStream'>java.io.StringBufferInputStream</span><br/><a href='source/StringBufferInputStream.html#java-io-StringBufferInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.StringBufferInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of bytes that can be read from the input\n stream without blocking. ...</div><div class='long'><p>Returns the number of bytes that can be read from the input\n stream without blocking.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value of <code>count&nbsp;-&nbsp;pos</code>, which is the\n             number of bytes remaining to be read from the input buffer.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.InputStream-method-available\" rel=\"java.io.InputStream-method-available\" class=\"docClass\">java.io.InputStream.available</a></p></div></div></div><div id='method-close' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='defined-in docClass'>java.io.InputStream</a><br/><a href='source/InputStream.html#java-io-InputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this input stream and releases any system resources associated\n with the stream. ...</div><div class='long'><p>Closes this input stream and releases any system resources associated\n with the stream.</p>\n\n<p> <p> The <code>close</code> method of <code>InputStream</code> does\n nothing.\n@exception IOException  if an I/O error occurs.</p>\n</div></div></div><div id='method-mark' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='defined-in docClass'>java.io.InputStream</a><br/><a href='source/InputStream.html#java-io-InputStream-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStream-method-mark' class='name expandable'>mark</a>( <span class='pre'>readlimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the current position in this input stream. ...</div><div class='long'><p>Marks the current position in this input stream. A subsequent call to\n the <code>reset</code> method repositions this stream at the last marked\n position so that subsequent reads re-read the same bytes.</p>\n\n<p> <p> The <code>readlimit</code> arguments tells this input stream to\n allow that many bytes to be read before the mark position gets\n invalidated.</p>\n\n<p> <p> The general contract of <code>mark</code> is that, if the method\n <code>markSupported</code> returns <code>true</code>, the stream somehow\n remembers all the bytes read after the call to <code>mark</code> and\n stands ready to supply those same bytes again if and whenever the method\n <code>reset</code> is called.  However, the stream is not required to\n remember any data at all if more than <code>readlimit</code> bytes are\n read from the stream before <code>reset</code> is called.</p>\n\n<p> <p> Marking a closed stream should not have any effect on the stream.</p>\n\n<p> <p> The <code>mark</code> method of <code>InputStream</code> does\n nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readlimit</span> : Number<div class='sub-desc'><p>the maximum limit of bytes that can be read before\n                      the mark position becomes invalid.\n@see <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a>()</p>\n</div></li></ul></div></div></div><div id='method-markSupported' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='defined-in docClass'>java.io.InputStream</a><br/><a href='source/InputStream.html#java-io-InputStream-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStream-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if this input stream supports the mark and\n reset methods. ...</div><div class='long'><p>Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods. Whether or not <code>mark</code> and\n <code>reset</code> are supported is an invariant property of a\n particular input stream instance. The <code>markSupported</code> method\n of <code>InputStream</code> returns <code>false</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if this stream instance supports the mark\n          and reset methods; <code>false</code> otherwise.\n@see <a href=\"#!/api/java.io.InputStream-method-mark\" rel=\"java.io.InputStream-method-mark\" class=\"docClass\">java.io.InputStream.mark</a>(int)\n@see <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a>()</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.StringBufferInputStream'>java.io.StringBufferInputStream</span><br/><a href='source/StringBufferInputStream.html#java-io-StringBufferInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.StringBufferInputStream-method-read' class='name expandable'>read</a>( <span class='pre'>b, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads up to len bytes of data from this input stream\n into an array of bytes. ...</div><div class='long'><p>Reads up to <code>len</code> bytes of data from this input stream\n into an array of bytes.\n <p>\n The <code>read</code> method of\n <code>StringBufferInputStream</code> cannot block. It copies the\n low eight bits from the characters in this input stream's buffer into\n the byte array argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset of the data.</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the maximum number of bytes read.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end of\n             the stream has been reached.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.InputStream-method-read\" rel=\"java.io.InputStream-method-read\" class=\"docClass\">java.io.InputStream.read</a></p></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.StringBufferInputStream'>java.io.StringBufferInputStream</span><br/><a href='source/StringBufferInputStream.html#java-io-StringBufferInputStream-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.StringBufferInputStream-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets the input stream to begin reading from the first character\n of this input stream's underlying buffer. ...</div><div class='long'><p>Resets the input stream to begin reading from the first character\n of this input stream's underlying buffer.</p>\n<p>Overrides: <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a></p></div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.StringBufferInputStream'>java.io.StringBufferInputStream</span><br/><a href='source/StringBufferInputStream.html#java-io-StringBufferInputStream-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.StringBufferInputStream-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips n bytes of input from this input stream. ...</div><div class='long'><p>Skips <code>n</code> bytes of input from this input stream. Fewer\n bytes might be skipped if the end of the input stream is reached.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>the number of bytes to be skipped.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes skipped.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.InputStream-method-skip\" rel=\"java.io.InputStream-method-skip\" class=\"docClass\">java.io.InputStream.skip</a></p></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>This class does not properly convert characters into bytes.  As\n             of JDK&nbsp;1.1, the preferred way to create a stream from a\n             string is via the <code>StringReader</code> class.</p>\n"}}});