Ext.data.JsonP.java_io_OutputStreamWriter({"tagname":"class","name":"java.io.OutputStreamWriter","autodetected":{},"files":[{"filename":"OutputStreamWriter.js","href":"OutputStreamWriter.html#java-io-OutputStreamWriter"}],"extends":"java.io.Writer","author":[{"tagname":"author","name":"Mark Reinhold","email":null}],"since":"JDK1.1","members":[{"name":"append","tagname":"method","owner":"java.io.Writer","id":"method-append","meta":{}},{"name":"close","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-flush","meta":{}},{"name":"getEncoding","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-getEncoding","meta":{}},{"name":"write","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.OutputStreamWriter","short_doc":"An OutputStreamWriter is a bridge from character streams to byte streams:\n Characters written to it are encoded into ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.Writer"],"subclasses":["java.io.FileWriter"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.Writer' rel='java.io.Writer' class='docClass'>java.io.Writer</a><div class='subclass '><strong>java.io.OutputStreamWriter</strong></div></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.io.FileWriter' rel='java.io.FileWriter' class='docClass'>java.io.FileWriter</a></div><h4>Files</h4><div class='dependency'><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter' target='_blank'>OutputStreamWriter.js</a></div></pre><div class='doc-contents'><p>An OutputStreamWriter is a bridge from character streams to byte streams:\n Characters written to it are encoded into bytes using a specified charset.  The charset that it uses\n may be specified by name or may be given explicitly, or the platform's\n default charset may be accepted.</p>\n\n<p> <p> Each invocation of a write() method causes the encoding converter to be\n invoked on the given character(s).  The resulting bytes are accumulated in a\n buffer before being written to the underlying output stream.  The size of\n this buffer may be specified, but by default it is large enough for most\n purposes.  Note that the characters passed to the write() methods are not\n buffered.</p>\n\n<p> <p> For top efficiency, consider wrapping an OutputStreamWriter within a\n BufferedWriter so as to avoid frequent converter invocations.  For example:</p>\n\n<pre> Writer out\n   = new BufferedWriter(new OutputStreamWriter(System.out));\n </pre>\n\n\n<p> <p> A <i>surrogate pair</i> is a character represented by a sequence of two\n <tt>char</tt> values: A <i>high</i> surrogate in the range '&#92;uD800' to\n '&#92;uDBFF' followed by a <i>low</i> surrogate in the range '&#92;uDC00' to\n '&#92;uDFFF'.</p>\n\n<p> <p> A <i>malformed surrogate element</i> is a high surrogate that is not\n followed by a low surrogate or a low surrogate that is not preceded by a\n high surrogate.</p>\n\n<p> <p> This class always replaces malformed surrogate elements and unmappable\n character sequences with the charset's default <i>substitution sequence</i>.\n The {@linkplain java.nio.charset.CharsetEncoder} class should be used when more\n control over the encoding process is required.</p>\n\n<p> @see BufferedWriter\n @see OutputStream\n @see java.nio.charset.Charset</p>\n        <p>Available since: <b>JDK1.1</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-append' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.Writer' rel='java.io.Writer' class='defined-in docClass'>java.io.Writer</a><br/><a href='source/Writer.html#java-io-Writer-method-append' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Writer-method-append' class='name expandable'>append</a>( <span class='pre'>c</span> ) : Object {java.io.Writer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the specified character to this writer. ...</div><div class='long'><p>Appends the specified character to this writer.</p>\n\n<p> <p> An invocation of this method of the form <tt>out.append(c)</tt>\n behaves in exactly the same way as the invocation</p>\n\n<pre>     out.write(c) </pre>\n\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : String<div class='sub-desc'><p>The 16-bit character to append</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.Writer}</span><div class='sub-desc'><p>This writer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.OutputStreamWriter'>java.io.OutputStreamWriter</span><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.Writer-method-close\" rel=\"java.io.Writer-method-close\" class=\"docClass\">java.io.Writer.close</a></p></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.OutputStreamWriter'>java.io.OutputStreamWriter</span><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes the stream. ...</div><div class='long'><p>Flushes the stream.\n@exception IOException  If an I/O error occurs</p>\n<p>Overrides: <a href=\"#!/api/java.io.Writer-method-flush\" rel=\"java.io.Writer-method-flush\" class=\"docClass\">java.io.Writer.flush</a></p></div></div></div><div id='method-getEncoding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.OutputStreamWriter'>java.io.OutputStreamWriter</span><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-getEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-getEncoding' class='name expandable'>getEncoding</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the character encoding being used by this stream. ...</div><div class='long'><p>Returns the name of the character encoding being used by this stream.</p>\n\n<p> <p> If the encoding has an historical name then that name is returned;\n otherwise the encoding's canonical name is returned.</p>\n\n<p> <p> If this instance was created with the String) constructor then the returned\n name, being unique for the encoding, may differ from the name passed to\n the constructor.  This method may return <tt>null</tt> if the stream has\n been closed. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The historical name of this encoding, or possibly\n         <code>null</code> if the stream has been closed\n@see java.nio.charset.Charset\n@revised 1.4\n@spec JSR-51</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.OutputStreamWriter'>java.io.OutputStreamWriter</span><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-write' class='name expandable'>write</a>( <span class='pre'>str, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a portion of a string. ...</div><div class='long'><p>Writes a portion of a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>A String</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>Offset from which to start writing characters</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>Number of characters to write\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.Writer-method-write\" rel=\"java.io.Writer-method-write\" class=\"docClass\">java.io.Writer.write</a></p></div></div></div></div></div></div></div>","meta":{}});