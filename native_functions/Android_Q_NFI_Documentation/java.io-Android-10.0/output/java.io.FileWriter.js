Ext.data.JsonP.java_io_FileWriter({"tagname":"class","name":"java.io.FileWriter","autodetected":{},"files":[{"filename":"FileWriter.js","href":"FileWriter.html#java-io-FileWriter"}],"extends":"java.io.OutputStreamWriter","author":[{"tagname":"author","name":"Mark Reinhold","email":null}],"since":"JDK1.1","members":[{"name":"append","tagname":"method","owner":"java.io.Writer","id":"method-append","meta":{}},{"name":"close","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-flush","meta":{}},{"name":"getEncoding","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-getEncoding","meta":{}},{"name":"write","tagname":"method","owner":"java.io.OutputStreamWriter","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.FileWriter","short_doc":"Convenience class for writing character files. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.Writer","java.io.OutputStreamWriter"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.Writer' rel='java.io.Writer' class='docClass'>java.io.Writer</a><div class='subclass '><a href='#!/api/java.io.OutputStreamWriter' rel='java.io.OutputStreamWriter' class='docClass'>java.io.OutputStreamWriter</a><div class='subclass '><strong>java.io.FileWriter</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/FileWriter.html#java-io-FileWriter' target='_blank'>FileWriter.js</a></div></pre><div class='doc-contents'><p>Convenience class for writing character files.  The constructors of this\n class assume that the default character encoding and the default byte-buffer\n size are acceptable.  To specify these values yourself, construct an\n OutputStreamWriter on a FileOutputStream.</p>\n\n<p> <p>Whether or not a file is available or may be created depends upon the\n underlying platform.  Some platforms, in particular, allow a file to be\n opened for writing by only one <tt>FileWriter</tt> (or other file-writing\n object) at a time.  In such situations the constructors in this class\n will fail if the file involved is already open.</p>\n\n<p> <p><code>FileWriter</code> is meant for writing streams of characters.\n For writing streams of raw bytes, consider using a\n <code>FileOutputStream</code>.</p>\n\n<p> @see OutputStreamWriter\n @see FileOutputStream</p>\n        <p>Available since: <b>JDK1.1</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-append' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.Writer' rel='java.io.Writer' class='defined-in docClass'>java.io.Writer</a><br/><a href='source/Writer.html#java-io-Writer-method-append' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Writer-method-append' class='name expandable'>append</a>( <span class='pre'>c</span> ) : Object {java.io.Writer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the specified character to this writer. ...</div><div class='long'><p>Appends the specified character to this writer.</p>\n\n<p> <p> An invocation of this method of the form <tt>out.append(c)</tt>\n behaves in exactly the same way as the invocation</p>\n\n<pre>     out.write(c) </pre>\n\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : String<div class='sub-desc'><p>The 16-bit character to append</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.Writer}</span><div class='sub-desc'><p>This writer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.OutputStreamWriter' rel='java.io.OutputStreamWriter' class='defined-in docClass'>java.io.OutputStreamWriter</a><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.Writer-method-close\" rel=\"java.io.Writer-method-close\" class=\"docClass\">java.io.Writer.close</a></p></div></div></div><div id='method-flush' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.OutputStreamWriter' rel='java.io.OutputStreamWriter' class='defined-in docClass'>java.io.OutputStreamWriter</a><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes the stream. ...</div><div class='long'><p>Flushes the stream.\n@exception IOException  If an I/O error occurs</p>\n<p>Overrides: <a href=\"#!/api/java.io.Writer-method-flush\" rel=\"java.io.Writer-method-flush\" class=\"docClass\">java.io.Writer.flush</a></p></div></div></div><div id='method-getEncoding' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.OutputStreamWriter' rel='java.io.OutputStreamWriter' class='defined-in docClass'>java.io.OutputStreamWriter</a><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-getEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-getEncoding' class='name expandable'>getEncoding</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the character encoding being used by this stream. ...</div><div class='long'><p>Returns the name of the character encoding being used by this stream.</p>\n\n<p> <p> If the encoding has an historical name then that name is returned;\n otherwise the encoding's canonical name is returned.</p>\n\n<p> <p> If this instance was created with the String) constructor then the returned\n name, being unique for the encoding, may differ from the name passed to\n the constructor.  This method may return <tt>null</tt> if the stream has\n been closed. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The historical name of this encoding, or possibly\n         <code>null</code> if the stream has been closed\n@see java.nio.charset.Charset\n@revised 1.4\n@spec JSR-51</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.OutputStreamWriter' rel='java.io.OutputStreamWriter' class='defined-in docClass'>java.io.OutputStreamWriter</a><br/><a href='source/OutputStreamWriter.html#java-io-OutputStreamWriter-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStreamWriter-method-write' class='name expandable'>write</a>( <span class='pre'>str, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a portion of a string. ...</div><div class='long'><p>Writes a portion of a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>A String</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>Offset from which to start writing characters</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>Number of characters to write\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.Writer-method-write\" rel=\"java.io.Writer-method-write\" class=\"docClass\">java.io.Writer.write</a></p></div></div></div></div></div></div></div>","meta":{}});