Ext.data.JsonP.java_io_OutputStream({"tagname":"class","name":"java.io.OutputStream","autodetected":{},"files":[{"filename":"OutputStream.js","href":"OutputStream.html#java-io-OutputStream"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Arthur van Hoff","email":null}],"since":"JDK1.0","members":[{"name":"close","tagname":"method","owner":"java.io.OutputStream","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.io.OutputStream","id":"method-flush","meta":{}},{"name":"write","tagname":"method","owner":"java.io.OutputStream","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.OutputStream","short_doc":"implements java.io.Closeable\n\n implements java.io.Flushable\n\nThis abstract class is the superclass of all classes rep...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["java.io.ByteArrayOutputStream","java.io.FileOutputStream","java.io.FilterOutputStream","java.io.ObjectOutputStream","java.io.PipedOutputStream"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.io.OutputStream</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.io.ByteArrayOutputStream' rel='java.io.ByteArrayOutputStream' class='docClass'>java.io.ByteArrayOutputStream</a></div><div class='dependency'><a href='#!/api/java.io.FileOutputStream' rel='java.io.FileOutputStream' class='docClass'>java.io.FileOutputStream</a></div><div class='dependency'><a href='#!/api/java.io.FilterOutputStream' rel='java.io.FilterOutputStream' class='docClass'>java.io.FilterOutputStream</a></div><div class='dependency'><a href='#!/api/java.io.ObjectOutputStream' rel='java.io.ObjectOutputStream' class='docClass'>java.io.ObjectOutputStream</a></div><div class='dependency'><a href='#!/api/java.io.PipedOutputStream' rel='java.io.PipedOutputStream' class='docClass'>java.io.PipedOutputStream</a></div><h4>Files</h4><div class='dependency'><a href='source/OutputStream.html#java-io-OutputStream' target='_blank'>OutputStream.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.io.Closeable\" rel=\"java.io.Closeable\" class=\"docClass\">java.io.Closeable</a></p>\n\n<p> implements <a href=\"#!/api/java.io.Flushable\" rel=\"java.io.Flushable\" class=\"docClass\">java.io.Flushable</a></p>\n\n<p>This abstract class is the superclass of all classes representing\n an output stream of bytes. An output stream accepts output bytes\n and sends them to some sink.\n <p>\n Applications that need to define a subclass of\n <code>OutputStream</code> must always provide at least a method\n that writes one byte of output.</p>\n\n<p> @see     <a href=\"#!/api/java.io.BufferedOutputStream\" rel=\"java.io.BufferedOutputStream\" class=\"docClass\">java.io.BufferedOutputStream</a>\n @see     <a href=\"#!/api/java.io.ByteArrayOutputStream\" rel=\"java.io.ByteArrayOutputStream\" class=\"docClass\">java.io.ByteArrayOutputStream</a>\n @see     <a href=\"#!/api/java.io.DataOutputStream\" rel=\"java.io.DataOutputStream\" class=\"docClass\">java.io.DataOutputStream</a>\n @see     <a href=\"#!/api/java.io.FilterOutputStream\" rel=\"java.io.FilterOutputStream\" class=\"docClass\">java.io.FilterOutputStream</a>\n @see     <a href=\"#!/api/java.io.InputStream\" rel=\"java.io.InputStream\" class=\"docClass\">java.io.InputStream</a>\n @see     <a href=\"#!/api/java.io.OutputStream-method-write\" rel=\"java.io.OutputStream-method-write\" class=\"docClass\">java.io.OutputStream.write</a>(int)</p>\n        <p>Available since: <b>JDK1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.OutputStream'>java.io.OutputStream</span><br/><a href='source/OutputStream.html#java-io-OutputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this output stream and releases any system resources\n associated with this stream. ...</div><div class='long'><p>Closes this output stream and releases any system resources\n associated with this stream. The general contract of <code>close</code>\n is that it closes the output stream. A closed stream cannot perform\n output operations and cannot be reopened.\n <p>\n The <code>close</code> method of <code>OutputStream</code> does nothing.\n@exception IOException  if an I/O error occurs.</p>\n</div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.OutputStream'>java.io.OutputStream</span><br/><a href='source/OutputStream.html#java-io-OutputStream-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStream-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes this output stream and forces any buffered output bytes\n to be written out. ...</div><div class='long'><p>Flushes this output stream and forces any buffered output bytes\n to be written out. The general contract of <code>flush</code> is\n that calling it is an indication that, if any bytes previously\n written have been buffered by the implementation of the output\n stream, such bytes should immediately be written to their\n intended destination.\n <p>\n If the intended destination of this stream is an abstraction provided by\n the underlying operating system, for example a file, then flushing the\n stream guarantees only that bytes previously written to the stream are\n passed to the operating system for writing; it does not guarantee that\n they are actually written to a physical device such as a disk drive.\n <p>\n The <code>flush</code> method of <code>OutputStream</code> does nothing.\n@exception IOException  if an I/O error occurs.</p>\n</div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.OutputStream'>java.io.OutputStream</span><br/><a href='source/OutputStream.html#java-io-OutputStream-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.OutputStream-method-write' class='name expandable'>write</a>( <span class='pre'>b, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes len bytes from the specified byte array\n starting at offset off to this output stream. ...</div><div class='long'><p>Writes <code>len</code> bytes from the specified byte array\n starting at offset <code>off</code> to this output stream.\n The general contract for <code>write(b, off, len)</code> is that\n some of the bytes in the array <code>b</code> are written to the\n output stream in order; element <code>b[off]</code> is the first\n byte written and <code>b[off+len-1]</code> is the last byte written\n by this operation.\n <p>\n The <code>write</code> method of <code>OutputStream</code> calls\n the write method of one argument on each of the bytes to be\n written out. Subclasses are encouraged to override this method and\n provide a more efficient implementation.\n <p>\n If <code>b</code> is <code>null</code>, a\n <code>NullPointerException</code> is thrown.\n <p>\n If <code>off</code> is negative, or <code>len</code> is negative, or\n <code>off+len</code> is greater than the length of the array\n <code>b</code>, then an <tt>IndexOutOfBoundsException</tt> is thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the data.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the data.</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the number of bytes to write.\n@exception IOException  if an I/O error occurs. In particular,\n             an <code>IOException</code> is thrown if the output\n             stream is closed.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});