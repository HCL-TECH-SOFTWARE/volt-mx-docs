Ext.data.JsonP.java_io_DataOutputStream({"tagname":"class","name":"java.io.DataOutputStream","autodetected":{},"files":[{"filename":"DataOutputStream.js","href":"DataOutputStream.html#java-io-DataOutputStream"}],"extends":"java.io.FilterOutputStream","author":[{"tagname":"author","name":"unascribed","email":null}],"since":"JDK1.0","members":[{"name":"close","tagname":"method","owner":"java.io.FilterOutputStream","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.io.DataOutputStream","id":"method-flush","meta":{}},{"name":"size","tagname":"method","owner":"java.io.DataOutputStream","id":"method-size","meta":{}},{"name":"write","tagname":"method","owner":"java.io.DataOutputStream","id":"method-write","meta":{}},{"name":"writeBoolean","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeBoolean","meta":{}},{"name":"writeByte","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeByte","meta":{}},{"name":"writeBytes","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeBytes","meta":{}},{"name":"writeChar","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeChar","meta":{}},{"name":"writeChars","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeChars","meta":{}},{"name":"writeDouble","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeDouble","meta":{}},{"name":"writeFloat","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeFloat","meta":{}},{"name":"writeInt","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeInt","meta":{}},{"name":"writeLong","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeLong","meta":{}},{"name":"writeShort","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeShort","meta":{}},{"name":"writeUTF","tagname":"method","owner":"java.io.DataOutputStream","id":"method-writeUTF","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.DataOutputStream","short_doc":"implements java.io.DataOutput\n\nA data output stream lets an application write primitive Java data\n types to an output...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.OutputStream","java.io.FilterOutputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.OutputStream' rel='java.io.OutputStream' class='docClass'>java.io.OutputStream</a><div class='subclass '><a href='#!/api/java.io.FilterOutputStream' rel='java.io.FilterOutputStream' class='docClass'>java.io.FilterOutputStream</a><div class='subclass '><strong>java.io.DataOutputStream</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/DataOutputStream.html#java-io-DataOutputStream' target='_blank'>DataOutputStream.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.io.DataOutput\" rel=\"java.io.DataOutput\" class=\"docClass\">java.io.DataOutput</a></p>\n\n<p>A data output stream lets an application write primitive Java data\n types to an output stream in a portable way. An application can\n then use a data input stream to read the data back in.</p>\n\n<p> @see     <a href=\"#!/api/java.io.DataInputStream\" rel=\"java.io.DataInputStream\" class=\"docClass\">java.io.DataInputStream</a></p>\n        <p>Available since: <b>JDK1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.FilterOutputStream' rel='java.io.FilterOutputStream' class='defined-in docClass'>java.io.FilterOutputStream</a><br/><a href='source/FilterOutputStream.html#java-io-FilterOutputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FilterOutputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this output stream and releases any system resources\n associated with the stream. ...</div><div class='long'><p>Closes this output stream and releases any system resources\n associated with the stream.\n <p>\n The <code>close</code> method of <code>FilterOutputStream</code>\n calls its <code>flush</code> method, and then calls the\n <code>close</code> method of its underlying output stream.\n@exception IOException  if an I/O error occurs.\n@see <a href=\"#!/api/java.io.FilterOutputStream-method-flush\" rel=\"java.io.FilterOutputStream-method-flush\" class=\"docClass\">java.io.FilterOutputStream.flush</a>()\n@see java.io.FilterOutputStream#out</p>\n<p>Overrides: <a href=\"#!/api/java.io.OutputStream-method-close\" rel=\"java.io.OutputStream-method-close\" class=\"docClass\">java.io.OutputStream.close</a></p></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes this data output stream. ...</div><div class='long'><p>Flushes this data output stream. This forces any buffered output\n bytes to be written out to the stream.\n <p>\n The <code>flush</code> method of <code>DataOutputStream</code>\n calls the <code>flush</code> method of its underlying output stream.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out\n@see <a href=\"#!/api/java.io.OutputStream-method-flush\" rel=\"java.io.OutputStream-method-flush\" class=\"docClass\">java.io.OutputStream.flush</a>()</p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterOutputStream-method-flush\" rel=\"java.io.FilterOutputStream-method-flush\" class=\"docClass\">java.io.FilterOutputStream.flush</a></p></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current value of the counter written,\n the number of bytes written to this data output stream so far. ...</div><div class='long'><p>Returns the current value of the counter <code>written</code>,\n the number of bytes written to this data output stream so far.\n If the counter overflows, it will be wrapped to Integer.MAX_VALUE.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value of the <code>written</code> field.\n@see java.io.DataOutputStream#written</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-write' class='name expandable'>write</a>( <span class='pre'>b, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes len bytes from the specified byte array\n starting at offset off to the underlying output stream. ...</div><div class='long'><p>Writes <code>len</code> bytes from the specified byte array\n starting at offset <code>off</code> to the underlying output stream.\n If no exception is thrown, the counter <code>written</code> is\n incremented by <code>len</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the data.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the data.</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the number of bytes to write.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterOutputStream-method-write\" rel=\"java.io.FilterOutputStream-method-write\" class=\"docClass\">java.io.FilterOutputStream.write</a></p></div></div></div><div id='method-writeBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeBoolean' class='name expandable'>writeBoolean</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a boolean to the underlying output stream as\n a 1-byte value. ...</div><div class='long'><p>Writes a <code>boolean</code> to the underlying output stream as\n a 1-byte value. The value <code>true</code> is written out as the\n value <code>(byte)1</code>; the value <code>false</code> is\n written out as the value <code>(byte)0</code>. If no exception is\n thrown, the counter <code>written</code> is incremented by\n <code>1</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Boolean<div class='sub-desc'><p>a <code>boolean</code> value to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeByte' class='name expandable'>writeByte</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes out a byte to the underlying output stream as\n a 1-byte value. ...</div><div class='long'><p>Writes out a <code>byte</code> to the underlying output stream as\n a 1-byte value. If no exception is thrown, the counter\n <code>written</code> is incremented by <code>1</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a <code>byte</code> value to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeBytes' class='name expandable'>writeBytes</a>( <span class='pre'>s</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes out the string to the underlying output stream as a\n sequence of bytes. ...</div><div class='long'><p>Writes out the string to the underlying output stream as a\n sequence of bytes. Each character in the string is written out, in\n sequence, by discarding its high eight bits. If no exception is\n thrown, the counter <code>written</code> is incremented by the\n length of <code>s</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : String<div class='sub-desc'><p>a string of bytes to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeChar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeChar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeChar' class='name expandable'>writeChar</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a char to the underlying output stream as a\n 2-byte value, high byte first. ...</div><div class='long'><p>Writes a <code>char</code> to the underlying output stream as a\n 2-byte value, high byte first. If no exception is thrown, the\n counter <code>written</code> is incremented by <code>2</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a <code>char</code> value to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeChars' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeChars' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeChars' class='name expandable'>writeChars</a>( <span class='pre'>s</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a string to the underlying output stream as a sequence of\n characters. ...</div><div class='long'><p>Writes a string to the underlying output stream as a sequence of\n characters. Each character is written to the data output stream as\n if by the <code>writeChar</code> method. If no exception is\n thrown, the counter <code>written</code> is incremented by twice\n the length of <code>s</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : String<div class='sub-desc'><p>a <code>String</code> value to be written.\n@exception IOException  if an I/O error occurs.\n@see <a href=\"#!/api/java.io.DataOutputStream-method-writeChar\" rel=\"java.io.DataOutputStream-method-writeChar\" class=\"docClass\">java.io.DataOutputStream.writeChar</a>(int)\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeDouble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeDouble' class='name expandable'>writeDouble</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts the double argument to a long using the\n doubleToLongBits method in class Double,\n and then writes that long...</div><div class='long'><p>Converts the double argument to a <code>long</code> using the\n <code>doubleToLongBits</code> method in class <code>Double</code>,\n and then writes that <code>long</code> value to the underlying\n output stream as an 8-byte quantity, high byte first. If no\n exception is thrown, the counter <code>written</code> is\n incremented by <code>8</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a <code>double</code> value to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out\n@see java.lang.Double#doubleToLongBits(double)</p>\n</div></li></ul></div></div></div><div id='method-writeFloat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeFloat' class='name expandable'>writeFloat</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts the float argument to an int using the\n floatToIntBits method in class Float,\n and then writes that int valu...</div><div class='long'><p>Converts the float argument to an <code>int</code> using the\n <code>floatToIntBits</code> method in class <code>Float</code>,\n and then writes that <code>int</code> value to the underlying\n output stream as a 4-byte quantity, high byte first. If no\n exception is thrown, the counter <code>written</code> is\n incremented by <code>4</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a <code>float</code> value to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out\n@see java.lang.Float#floatToIntBits(float)</p>\n</div></li></ul></div></div></div><div id='method-writeInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeInt' class='name expandable'>writeInt</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes an int to the underlying output stream as four\n bytes, high byte first. ...</div><div class='long'><p>Writes an <code>int</code> to the underlying output stream as four\n bytes, high byte first. If no exception is thrown, the counter\n <code>written</code> is incremented by <code>4</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>an <code>int</code> to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeLong' class='name expandable'>writeLong</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a long to the underlying output stream as eight\n bytes, high byte first. ...</div><div class='long'><p>Writes a <code>long</code> to the underlying output stream as eight\n bytes, high byte first. In no exception is thrown, the counter\n <code>written</code> is incremented by <code>8</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a <code>long</code> to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeShort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeShort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeShort' class='name expandable'>writeShort</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a short to the underlying output stream as two\n bytes, high byte first. ...</div><div class='long'><p>Writes a <code>short</code> to the underlying output stream as two\n bytes, high byte first. If no exception is thrown, the counter\n <code>written</code> is incremented by <code>2</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a <code>short</code> to be written.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterOutputStream#out</p>\n</div></li></ul></div></div></div><div id='method-writeUTF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataOutputStream'>java.io.DataOutputStream</span><br/><a href='source/DataOutputStream.html#java-io-DataOutputStream-method-writeUTF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataOutputStream-method-writeUTF' class='name expandable'>writeUTF</a>( <span class='pre'>str</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a string to the underlying output stream using\n modified UTF-8\n encoding in a machine-independent manner. ...</div><div class='long'><p>Writes a string to the underlying output stream using\n <a href=\"DataInput.html#modified-utf-8\">modified UTF-8</a>\n encoding in a machine-independent manner.\n <p>\n First, two bytes are written to the output stream as if by the\n <code>writeShort</code> method giving the number of bytes to\n follow. This value is the number of bytes actually written out,\n not the length of the string. Following the length, each character\n of the string is output, in sequence, using the modified UTF-8 encoding\n for the character. If no exception is thrown, the counter\n <code>written</code> is incremented by the total number of\n bytes written to the output stream. This will be at least two\n plus the length of <code>str</code>, and at most two plus\n thrice the length of <code>str</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>a string to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});