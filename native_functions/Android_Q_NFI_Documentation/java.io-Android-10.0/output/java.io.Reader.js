Ext.data.JsonP.java_io_Reader({"tagname":"class","name":"java.io.Reader","autodetected":{},"files":[{"filename":"Reader.js","href":"Reader.html#java-io-Reader"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Reinhold","email":null}],"since":"JDK1.1","members":[{"name":"close","tagname":"method","owner":"java.io.Reader","id":"method-close","meta":{}},{"name":"mark","tagname":"method","owner":"java.io.Reader","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.io.Reader","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.io.Reader","id":"method-read","meta":{}},{"name":"ready","tagname":"method","owner":"java.io.Reader","id":"method-ready","meta":{}},{"name":"reset","tagname":"method","owner":"java.io.Reader","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.io.Reader","id":"method-skip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.Reader","short_doc":"implements java.lang.Readable\n\n implements java.io.Closeable\n\nAbstract class for reading character streams. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["java.io.BufferedReader","java.io.CharArrayReader","java.io.FilterReader","java.io.InputStreamReader","java.io.PipedReader","java.io.StringReader"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.io.Reader</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.io.BufferedReader' rel='java.io.BufferedReader' class='docClass'>java.io.BufferedReader</a></div><div class='dependency'><a href='#!/api/java.io.CharArrayReader' rel='java.io.CharArrayReader' class='docClass'>java.io.CharArrayReader</a></div><div class='dependency'><a href='#!/api/java.io.FilterReader' rel='java.io.FilterReader' class='docClass'>java.io.FilterReader</a></div><div class='dependency'><a href='#!/api/java.io.InputStreamReader' rel='java.io.InputStreamReader' class='docClass'>java.io.InputStreamReader</a></div><div class='dependency'><a href='#!/api/java.io.PipedReader' rel='java.io.PipedReader' class='docClass'>java.io.PipedReader</a></div><div class='dependency'><a href='#!/api/java.io.StringReader' rel='java.io.StringReader' class='docClass'>java.io.StringReader</a></div><h4>Files</h4><div class='dependency'><a href='source/Reader.html#java-io-Reader' target='_blank'>Reader.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Readable</p>\n\n<p> implements <a href=\"#!/api/java.io.Closeable\" rel=\"java.io.Closeable\" class=\"docClass\">java.io.Closeable</a></p>\n\n<p>Abstract class for reading character streams.  The only methods that a\n subclass must implement are read(char[], int, int) and close().  Most\n subclasses, however, will override some of the methods defined here in order\n to provide higher efficiency, additional functionality, or both.</p>\n\n<p> @see BufferedReader\n @see   LineNumberReader\n @see CharArrayReader\n @see InputStreamReader\n @see   FileReader\n @see FilterReader\n @see   PushbackReader\n @see PipedReader\n @see StringReader\n @see Writer</p>\n        <p>Available since: <b>JDK1.1</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Reader'>java.io.Reader</span><br/><a href='source/Reader.html#java-io-Reader-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the stream and releases any system resources associated with\n it. ...</div><div class='long'><p>Closes the stream and releases any system resources associated with\n it.  Once the stream has been closed, further read(), ready(),\n mark(), reset(), or skip() invocations will throw an IOException.\n Closing a previously closed stream has no effect.\n@exception IOException  If an I/O error occurs</p>\n</div></div></div><div id='method-mark' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Reader'>java.io.Reader</span><br/><a href='source/Reader.html#java-io-Reader-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-mark' class='name expandable'>mark</a>( <span class='pre'>readAheadLimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the present position in the stream. ...</div><div class='long'><p>Marks the present position in the stream.  Subsequent calls to reset()\n will attempt to reposition the stream to this point.  Not all\n character-input streams support the mark() operation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readAheadLimit</span> : Number<div class='sub-desc'><p>Limit on the number of characters that may be\n                         read while still preserving the mark.  After\n                         reading this many characters, attempting to\n                         reset the stream may fail.\n@exception IOException  If the stream does not support mark(),\n                          or if some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-markSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Reader'>java.io.Reader</span><br/><a href='source/Reader.html#java-io-Reader-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this stream supports the mark() operation. ...</div><div class='long'><p>Tells whether this stream supports the mark() operation. The default\n implementation always returns false. Subclasses should override this\n method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if and only if this stream supports the mark operation.</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Reader'>java.io.Reader</span><br/><a href='source/Reader.html#java-io-Reader-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-read' class='name expandable'>read</a>( <span class='pre'>cbuf, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads characters into a portion of an array. ...</div><div class='long'><p>Reads characters into a portion of an array.  This method will block\n until some input is available, an I/O error occurs, or the end of the\n stream is reached.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cbuf</span> : Object {char[]}<div class='sub-desc'><p>Destination buffer</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>Offset at which to start storing characters</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>Maximum number of characters to read</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of characters read, or -1 if the end of the\n             stream has been reached\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-ready' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Reader'>java.io.Reader</span><br/><a href='source/Reader.html#java-io-Reader-method-ready' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-ready' class='name expandable'>ready</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this stream is ready to be read. ...</div><div class='long'><p>Tells whether this stream is ready to be read.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the next read() is guaranteed not to block for input,\n false otherwise.  Note that returning false does not guarantee that the\n next read will block.\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Reader'>java.io.Reader</span><br/><a href='source/Reader.html#java-io-Reader-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets the stream. ...</div><div class='long'><p>Resets the stream.  If the stream has been marked, then attempt to\n reposition it at the mark.  If the stream has not been marked, then\n attempt to reset it in some way appropriate to the particular stream,\n for example by repositioning it to its starting point.  Not all\n character-input streams support the reset() operation, and some support\n reset() without supporting mark().\n@exception IOException  If the stream has not been marked,\n                          or if the mark has been invalidated,\n                          or if the stream does not support reset(),\n                          or if some other I/O error occurs</p>\n</div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Reader'>java.io.Reader</span><br/><a href='source/Reader.html#java-io-Reader-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips characters. ...</div><div class='long'><p>Skips characters.  This method will block until some characters are\n available, an I/O error occurs, or the end of the stream is reached.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The number of characters to skip</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of characters actually skipped\n@exception IllegalArgumentException  If <code>n</code> is negative.\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});