Ext.data.JsonP.java_io_PushbackReader({"tagname":"class","name":"java.io.PushbackReader","autodetected":{},"files":[{"filename":"PushbackReader.js","href":"PushbackReader.html#java-io-PushbackReader"}],"extends":"java.io.FilterReader","author":[{"tagname":"author","name":"Mark Reinhold","email":null}],"since":"JDK1.1","members":[{"name":"close","tagname":"method","owner":"java.io.PushbackReader","id":"method-close","meta":{}},{"name":"mark","tagname":"method","owner":"java.io.PushbackReader","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.io.PushbackReader","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.io.PushbackReader","id":"method-read","meta":{}},{"name":"ready","tagname":"method","owner":"java.io.PushbackReader","id":"method-ready","meta":{}},{"name":"reset","tagname":"method","owner":"java.io.PushbackReader","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.io.PushbackReader","id":"method-skip","meta":{}},{"name":"unread","tagname":"method","owner":"java.io.PushbackReader","id":"method-unread","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.PushbackReader","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.Reader","java.io.FilterReader"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.Reader' rel='java.io.Reader' class='docClass'>java.io.Reader</a><div class='subclass '><a href='#!/api/java.io.FilterReader' rel='java.io.FilterReader' class='docClass'>java.io.FilterReader</a><div class='subclass '><strong>java.io.PushbackReader</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/PushbackReader.html#java-io-PushbackReader' target='_blank'>PushbackReader.js</a></div></pre><div class='doc-contents'><p>A character-stream reader that allows characters to be pushed back into the\n stream.</p>\n        <p>Available since: <b>JDK1.1</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the stream and releases any system resources associated with\n it. ...</div><div class='long'><p>Closes the stream and releases any system resources associated with\n it. Once the stream has been closed, further read(),\n unread(), ready(), or skip() invocations will throw an IOException.\n Closing a previously closed stream has no effect.\n@exception IOException  If an I/O error occurs</p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterReader-method-close\" rel=\"java.io.FilterReader-method-close\" class=\"docClass\">java.io.FilterReader.close</a></p></div></div></div><div id='method-mark' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-mark' class='name expandable'>mark</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the present position in the stream. ...</div><div class='long'><p>Marks the present position in the stream. The <code>mark</code>\n for class <code>PushbackReader</code> always throws an exception.\n@exception IOException  Always, since mark is not supported</p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterReader-method-mark\" rel=\"java.io.FilterReader-method-mark\" class=\"docClass\">java.io.FilterReader.mark</a></p></div></div></div><div id='method-markSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this stream supports the mark() operation, which it does\n not. ...</div><div class='long'><p>Tells whether this stream supports the mark() operation, which it does\n not.</p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterReader-method-markSupported\" rel=\"java.io.FilterReader-method-markSupported\" class=\"docClass\">java.io.FilterReader.markSupported</a></p></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-read' class='name expandable'>read</a>( <span class='pre'>cbuf, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads characters into a portion of an array. ...</div><div class='long'><p>Reads characters into a portion of an array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cbuf</span> : Object {char[]}<div class='sub-desc'><p>Destination buffer</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>Offset at which to start writing characters</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>Maximum number of characters to read</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of characters read, or -1 if the end of the\n             stream has been reached\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterReader-method-read\" rel=\"java.io.FilterReader-method-read\" class=\"docClass\">java.io.FilterReader.read</a></p></div></div></div><div id='method-ready' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-ready' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-ready' class='name expandable'>ready</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this stream is ready to be read. ...</div><div class='long'><p>Tells whether this stream is ready to be read.\n@exception IOException  If an I/O error occurs</p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterReader-method-ready\" rel=\"java.io.FilterReader-method-ready\" class=\"docClass\">java.io.FilterReader.ready</a></p></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets the stream. ...</div><div class='long'><p>Resets the stream. The <code>reset</code> method of\n <code>PushbackReader</code> always throws an exception.\n@exception IOException  Always, since reset is not supported</p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterReader-method-reset\" rel=\"java.io.FilterReader-method-reset\" class=\"docClass\">java.io.FilterReader.reset</a></p></div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips characters. ...</div><div class='long'><p>Skips characters.  This method will block until some characters are\n available, an I/O error occurs, or the end of the stream is reached.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The number of characters to skip</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of characters actually skipped\n@exception IllegalArgumentException  If <code>n</code> is negative.\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterReader-method-skip\" rel=\"java.io.FilterReader-method-skip\" class=\"docClass\">java.io.FilterReader.skip</a></p></div></div></div><div id='method-unread' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackReader'>java.io.PushbackReader</span><br/><a href='source/PushbackReader.html#java-io-PushbackReader-method-unread' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackReader-method-unread' class='name expandable'>unread</a>( <span class='pre'>cbuf</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Pushes back an array of characters by copying it to the front of the\n pushback buffer. ...</div><div class='long'><p>Pushes back an array of characters by copying it to the front of the\n pushback buffer.  After this method returns, the next character to be\n read will have the value <code>cbuf[0]</code>, the character after that\n will have the value <code>cbuf[1]</code>, and so forth.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cbuf</span> : Object {char[]}<div class='sub-desc'><p>Character array to push back\n@exception IOException  If there is insufficient room in the pushback\n                          buffer, or if some other I/O error occurs</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});