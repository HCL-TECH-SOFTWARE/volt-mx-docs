Ext.data.JsonP.java_io_RandomAccessFile({"tagname":"class","name":"java.io.RandomAccessFile","autodetected":{},"files":[{"filename":"RandomAccessFile.js","href":"RandomAccessFile.html#java-io-RandomAccessFile"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"unascribed","email":null}],"since":"JDK1.0","members":[{"name":"close","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-close","meta":{}},{"name":"getChannel","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-getChannel","meta":{}},{"name":"getFD","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-getFD","meta":{}},{"name":"getFilePointer","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-getFilePointer","meta":{}},{"name":"length","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-length","meta":{}},{"name":"read","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-read","meta":{}},{"name":"readBoolean","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readBoolean","meta":{}},{"name":"readByte","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readByte","meta":{}},{"name":"readChar","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readChar","meta":{}},{"name":"readDouble","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readDouble","meta":{}},{"name":"readFloat","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readFloat","meta":{}},{"name":"readFully","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readFully","meta":{}},{"name":"readInt","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readInt","meta":{}},{"name":"readLine","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readLine","meta":{}},{"name":"readLong","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readLong","meta":{}},{"name":"readShort","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readShort","meta":{}},{"name":"readUTF","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readUTF","meta":{}},{"name":"readUnsignedByte","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readUnsignedByte","meta":{}},{"name":"readUnsignedShort","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-readUnsignedShort","meta":{}},{"name":"seek","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-seek","meta":{}},{"name":"setLength","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-setLength","meta":{}},{"name":"skipBytes","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-skipBytes","meta":{}},{"name":"write","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-write","meta":{}},{"name":"writeBoolean","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeBoolean","meta":{}},{"name":"writeByte","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeByte","meta":{}},{"name":"writeBytes","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeBytes","meta":{}},{"name":"writeChar","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeChar","meta":{}},{"name":"writeChars","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeChars","meta":{}},{"name":"writeDouble","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeDouble","meta":{}},{"name":"writeFloat","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeFloat","meta":{}},{"name":"writeInt","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeInt","meta":{}},{"name":"writeLong","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeLong","meta":{}},{"name":"writeShort","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeShort","meta":{}},{"name":"writeUTF","tagname":"method","owner":"java.io.RandomAccessFile","id":"method-writeUTF","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.RandomAccessFile","short_doc":"implements java.io.DataOutput\n\n implements java.io.DataInput\n\n implements java.io.Closeable\n\nInstances of this class ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.io.RandomAccessFile</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RandomAccessFile.html#java-io-RandomAccessFile' target='_blank'>RandomAccessFile.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.io.DataOutput\" rel=\"java.io.DataOutput\" class=\"docClass\">java.io.DataOutput</a></p>\n\n<p> implements <a href=\"#!/api/java.io.DataInput\" rel=\"java.io.DataInput\" class=\"docClass\">java.io.DataInput</a></p>\n\n<p> implements <a href=\"#!/api/java.io.Closeable\" rel=\"java.io.Closeable\" class=\"docClass\">java.io.Closeable</a></p>\n\n<p>Instances of this class support both reading and writing to a\n random access file. A random access file behaves like a large\n array of bytes stored in the file system. There is a kind of cursor,\n or index into the implied array, called the <em>file pointer</em>;\n input operations read bytes starting at the file pointer and advance\n the file pointer past the bytes read. If the random access file is\n created in read/write mode, then output operations are also available;\n output operations write bytes starting at the file pointer and advance\n the file pointer past the bytes written. Output operations that write\n past the current end of the implied array cause the array to be\n extended. The file pointer can be read by the\n {@code getFilePointer} method and set by the {@code seek}\n method.\n <p>\n It is generally true of all the reading routines in this class that\n if end-of-file is reached before the desired number of bytes has been\n read, an {@code EOFException} (which is a kind of\n {@code IOException}) is thrown. If any byte cannot be read for\n any reason other than end-of-file, an {@code IOException} other\n than {@code EOFException} is thrown. In particular, an\n {@code IOException} may be thrown if the stream has been closed.</p>\n        <p>Available since: <b>JDK1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this random access file stream and releases any system\n resources associated with the stream. ...</div><div class='long'><p>Closes this random access file stream and releases any system\n resources associated with the stream. A closed random access\n file cannot perform input or output operations and cannot be\n reopened.</p>\n\n<p> <p> If this file has an associated channel then the channel is closed\n as well.\n@exception IOException  if an I/O error occurs.\n@revised 1.4\n@spec JSR-51</p>\n</div></div></div><div id='method-getChannel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-getChannel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-getChannel' class='name expandable'>getChannel</a>( <span class='pre'></span> ) : Object {java.nio.channels.FileChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the unique java.io.FileChannel\n object associated with this file. ...</div><div class='long'><p>Returns the unique java.io.FileChannel\n object associated with this file.</p>\n\n<p> <p> The position of the returned channel will always be equal to\n this object's file-pointer offset as returned by the <a href=\"#!/api/java.io.RandomAccessFile-method-getFilePointer\" rel=\"java.io.RandomAccessFile-method-getFilePointer\" class=\"docClass\">getFilePointer</a> method.  Changing this object's\n file-pointer offset, whether explicitly or by reading or writing bytes,\n will change the position of the channel, and vice versa.  Changing the\n file's length via this object will change the length seen via the file\n channel, and vice versa.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.FileChannel}</span><div class='sub-desc'><p>the file channel associated with this file\n@spec JSR-51</p>\n</div></li></ul></div></div></div><div id='method-getFD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-getFD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-getFD' class='name expandable'>getFD</a>( <span class='pre'></span> ) : Object {java.io.FileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the opaque file descriptor object associated with this\n stream. ...</div><div class='long'><p>Returns the opaque file descriptor object associated with this\n stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.FileDescriptor}</span><div class='sub-desc'><p>the file descriptor object associated with this stream.\n@exception IOException  if an I/O error occurs.\n@see <a href=\"#!/api/java.io.FileDescriptor\" rel=\"java.io.FileDescriptor\" class=\"docClass\">java.io.FileDescriptor</a></p>\n</div></li></ul></div></div></div><div id='method-getFilePointer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-getFilePointer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-getFilePointer' class='name expandable'>getFilePointer</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current offset in this file. ...</div><div class='long'><p>Returns the current offset in this file.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the offset from the beginning of the file, in bytes,\n             at which the next read or write occurs.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-length' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-length' class='name expandable'>length</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the length of this file. ...</div><div class='long'><p>Returns the length of this file.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the length of this file, measured in bytes.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-read' class='name expandable'>read</a>( <span class='pre'>b</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads up to {@code b.length} bytes of data from this file\n into an array of bytes. ...</div><div class='long'><p>Reads up to {@code b.length} bytes of data from this file\n into an array of bytes. This method blocks until at least one byte\n of input is available.\n <p>\n Although {@code RandomAccessFile} is not a subclass of\n {@code InputStream}, this method behaves in exactly the\n same way as the java.io.InputStream.read(byte[]) method of\n {@code InputStream}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of bytes read into the buffer, or\n             {@code -1} if there is no more data because the end of\n             this file has been reached.\n@exception IOException If the first byte cannot be read for any reason\n other than end of file, or if the random access file has been closed, or if\n some other I/O error occurs.\n@exception NullPointerException If {@code b} is {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-readBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readBoolean' class='name expandable'>readBoolean</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a {@code boolean} from this file. ...</div><div class='long'><p>Reads a {@code boolean} from this file. This method reads a\n single byte from the file, starting at the current file pointer.\n A value of {@code 0} represents\n {@code false}. Any other value represents {@code true}.\n This method blocks until the byte is read, the end of the stream\n is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the {@code boolean} value read.\n@exception EOFException  if this file has reached the end.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readByte' class='name expandable'>readByte</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a signed eight-bit value from this file. ...</div><div class='long'><p>Reads a signed eight-bit value from this file. This method reads a\n byte from the file, starting from the current file pointer.\n If the byte read is {@code b}, where\n <code>0&nbsp;&lt;=&nbsp;b&nbsp;&lt;=&nbsp;255</code>,\n then the result is:\n <blockquote></blockquote></p>\n\n<pre>     (byte)(b)\n </pre>\n\n\n<p>\n <p>\n This method blocks until the byte is read, the end of the stream\n is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next byte of this file as a signed eight-bit\n             {@code byte}.\n@exception EOFException  if this file has reached the end.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readChar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readChar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readChar' class='name expandable'>readChar</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a character from this file. ...</div><div class='long'><p>Reads a character from this file. This method reads two\n bytes from the file, starting at the current file pointer.\n If the bytes read, in order, are\n {@code b1} and {@code b2}, where\n <code>0&nbsp;&lt;=&nbsp;b1,&nbsp;b2&nbsp;&lt;=&nbsp;255</code>,\n then the result is equal to:\n <blockquote></blockquote></p>\n\n<pre>     (char)((b1 &lt;&lt; 8) | b2)\n </pre>\n\n\n<p>\n <p>\n This method blocks until the two bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the next two bytes of this file, interpreted as a\n                  {@code char}.\n@exception EOFException  if this file reaches the end before reading\n               two bytes.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readDouble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readDouble' class='name expandable'>readDouble</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a {@code double} from this file. ...</div><div class='long'><p>Reads a {@code double} from this file. This method reads a\n {@code long} value, starting at the current file pointer,\n as if by the {@code readLong} method\n and then converts that {@code long} to a {@code double}\n using the {@code longBitsToDouble} method in\n class {@code Double}.\n <p>\n This method blocks until the eight bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next eight bytes of this file, interpreted as a\n             {@code double}.\n@exception EOFException  if this file reaches the end before reading\n             eight bytes.\n@exception IOException   if an I/O error occurs.\n@see <a href=\"#!/api/java.io.RandomAccessFile-method-readLong\" rel=\"java.io.RandomAccessFile-method-readLong\" class=\"docClass\">java.io.RandomAccessFile.readLong</a>()\n@see java.lang.Double#longBitsToDouble(long)</p>\n</div></li></ul></div></div></div><div id='method-readFloat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readFloat' class='name expandable'>readFloat</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a {@code float} from this file. ...</div><div class='long'><p>Reads a {@code float} from this file. This method reads an\n {@code int} value, starting at the current file pointer,\n as if by the {@code readInt} method\n and then converts that {@code int} to a {@code float}\n using the {@code intBitsToFloat} method in class\n {@code Float}.\n <p>\n This method blocks until the four bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next four bytes of this file, interpreted as a\n             {@code float}.\n@exception EOFException  if this file reaches the end before reading\n             four bytes.\n@exception IOException   if an I/O error occurs.\n@see <a href=\"#!/api/java.io.RandomAccessFile-method-readInt\" rel=\"java.io.RandomAccessFile-method-readInt\" class=\"docClass\">java.io.RandomAccessFile.readInt</a>()\n@see java.lang.Float#intBitsToFloat(int)</p>\n</div></li></ul></div></div></div><div id='method-readFully' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readFully' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readFully' class='name expandable'>readFully</a>( <span class='pre'>b, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads exactly {@code len} bytes from this file into the byte\n array, starting at the current file pointer. ...</div><div class='long'><p>Reads exactly {@code len} bytes from this file into the byte\n array, starting at the current file pointer. This method reads\n repeatedly from the file until the requested number of bytes are\n read. This method blocks until the requested number of bytes are\n read, the end of the stream is detected, or an exception is thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset of the data.</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the number of bytes to read.\n@exception EOFException  if this file reaches the end before reading\n               all the bytes.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readInt' class='name expandable'>readInt</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a signed 32-bit integer from this file. ...</div><div class='long'><p>Reads a signed 32-bit integer from this file. This method reads 4\n bytes from the file, starting at the current file pointer.\n If the bytes read, in order, are {@code b1},\n {@code b2}, {@code b3}, and {@code b4}, where\n <code>0&nbsp;&lt;=&nbsp;b1, b2, b3, b4&nbsp;&lt;=&nbsp;255</code>,\n then the result is equal to:\n <blockquote></blockquote></p>\n\n<pre>     (b1 &lt;&lt; 24) | (b2 &lt;&lt; 16) + (b3 &lt;&lt; 8) + b4\n </pre>\n\n\n<p>\n <p>\n This method blocks until the four bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next four bytes of this file, interpreted as an\n             {@code int}.\n@exception EOFException  if this file reaches the end before reading\n               four bytes.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readLine' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readLine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readLine' class='name expandable'>readLine</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads the next line of text from this file. ...</div><div class='long'><p>Reads the next line of text from this file.  This method successively\n reads bytes from the file, starting at the current file pointer,\n until it reaches a line terminator or the end\n of the file.  Each byte is converted into a character by taking the\n byte's value for the lower eight bits of the character and setting the\n high eight bits of the character to zero.  This method does not,\n therefore, support the full Unicode character set.</p>\n\n<p> <p> A line of text is terminated by a carriage-return character\n ({@code '\\r'}), a newline character ({@code '\\n'}), a\n carriage-return character immediately followed by a newline character,\n or the end of the file.  Line-terminating characters are discarded and\n are not included as part of the string returned.</p>\n\n<p> <p> This method blocks until a newline character is read, a carriage\n return and the byte following it are read (to see if it is a newline),\n the end of the file is reached, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the next line of text from this file, or null if end\n             of file is encountered before even one byte is read.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readLong' class='name expandable'>readLong</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a signed 64-bit integer from this file. ...</div><div class='long'><p>Reads a signed 64-bit integer from this file. This method reads eight\n bytes from the file, starting at the current file pointer.\n If the bytes read, in order, are\n {@code b1}, {@code b2}, {@code b3},\n {@code b4}, {@code b5}, {@code b6},\n {@code b7}, and {@code b8,} where:\n <blockquote></blockquote></p>\n\n<pre>     0 &lt;= b1, b2, b3, b4, b5, b6, b7, b8 &lt;=255,\n </pre>\n\n\n<p>\n <p>\n then the result is equal to:\n <blockquote></blockquote></p>\n\n<pre>     ((long)b1 &lt;&lt; 56) + ((long)b2 &lt;&lt; 48)\n     + ((long)b3 &lt;&lt; 40) + ((long)b4 &lt;&lt; 32)\n     + ((long)b5 &lt;&lt; 24) + ((long)b6 &lt;&lt; 16)\n     + ((long)b7 &lt;&lt; 8) + b8\n </pre>\n\n\n<p>\n <p>\n This method blocks until the eight bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next eight bytes of this file, interpreted as a\n             {@code long}.\n@exception EOFException  if this file reaches the end before reading\n               eight bytes.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readShort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readShort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readShort' class='name expandable'>readShort</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a signed 16-bit number from this file. ...</div><div class='long'><p>Reads a signed 16-bit number from this file. The method reads two\n bytes from this file, starting at the current file pointer.\n If the two bytes read, in order, are\n {@code b1} and {@code b2}, where each of the two values is\n between {@code 0} and {@code 255}, inclusive, then the\n result is equal to:\n <blockquote></blockquote></p>\n\n<pre>     (short)((b1 &lt;&lt; 8) | b2)\n </pre>\n\n\n<p>\n <p>\n This method blocks until the two bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next two bytes of this file, interpreted as a signed\n             16-bit number.\n@exception EOFException  if this file reaches the end before reading\n               two bytes.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readUTF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readUTF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readUTF' class='name expandable'>readUTF</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads in a string from this file. ...</div><div class='long'><p>Reads in a string from this file. The string has been encoded\n using a\n <a href=\"DataInput.html#modified-utf-8\">modified UTF-8</a>\n format.\n <p>\n The first two bytes are read, starting from the current file\n pointer, as if by\n {@code readUnsignedShort}. This value gives the number of\n following bytes that are in the encoded string, not\n the length of the resulting string. The following bytes are then\n interpreted as bytes encoding characters in the modified UTF-8 format\n and are converted into characters.\n <p>\n This method blocks until all the bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a Unicode string.\n@exception EOFException            if this file reaches the end before\n               reading all the bytes.\n@exception IOException             if an I/O error occurs.\n@exception UTFDataFormatException  if the bytes do not represent\n               valid modified UTF-8 encoding of a Unicode string.\n@see <a href=\"#!/api/java.io.RandomAccessFile-method-readUnsignedShort\" rel=\"java.io.RandomAccessFile-method-readUnsignedShort\" class=\"docClass\">java.io.RandomAccessFile.readUnsignedShort</a>()</p>\n</div></li></ul></div></div></div><div id='method-readUnsignedByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readUnsignedByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readUnsignedByte' class='name expandable'>readUnsignedByte</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads an unsigned eight-bit number from this file. ...</div><div class='long'><p>Reads an unsigned eight-bit number from this file. This method reads\n a byte from this file, starting at the current file pointer,\n and returns that byte.\n <p>\n This method blocks until the byte is read, the end of the stream\n is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next byte of this file, interpreted as an unsigned\n             eight-bit number.\n@exception EOFException  if this file has reached the end.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-readUnsignedShort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-readUnsignedShort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-readUnsignedShort' class='name expandable'>readUnsignedShort</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads an unsigned 16-bit number from this file. ...</div><div class='long'><p>Reads an unsigned 16-bit number from this file. This method reads\n two bytes from the file, starting at the current file pointer.\n If the bytes read, in order, are\n {@code b1} and {@code b2}, where\n <code>0&nbsp;&lt;=&nbsp;b1, b2&nbsp;&lt;=&nbsp;255</code>,\n then the result is equal to:\n <blockquote></blockquote></p>\n\n<pre>     (b1 &lt;&lt; 8) | b2\n </pre>\n\n\n<p>\n <p>\n This method blocks until the two bytes are read, the end of the\n stream is detected, or an exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next two bytes of this file, interpreted as an unsigned\n             16-bit integer.\n@exception EOFException  if this file reaches the end before reading\n               two bytes.\n@exception IOException   if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-seek' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-seek' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-seek' class='name expandable'>seek</a>( <span class='pre'>pos</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the file-pointer offset, measured from the beginning of this\n file, at which the next read or write occurs. ...</div><div class='long'><p>Sets the file-pointer offset, measured from the beginning of this\n file, at which the next read or write occurs.  The offset may be\n set beyond the end of the file. Setting the offset beyond the end\n of the file does not change the file length.  The file length will\n change only by writing after the offset has been set beyond the end\n of the file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pos</span> : Number<div class='sub-desc'><p>the offset position, measured in bytes from the\n                   beginning of the file, at which to set the file\n                   pointer.\n@exception IOException  if {@code pos} is less than\n                          {@code 0} or if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-setLength' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-setLength' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-setLength' class='name expandable'>setLength</a>( <span class='pre'>newLength</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the length of this file. ...</div><div class='long'><p>Sets the length of this file.</p>\n\n<p> <p> If the present length of the file as returned by the\n {@code length} method is greater than the {@code newLength}\n argument then the file will be truncated.  In this case, if the file\n offset as returned by the {@code getFilePointer} method is greater\n than {@code newLength} then after this method returns the offset\n will be equal to {@code newLength}.</p>\n\n<p> <p> If the present length of the file as returned by the\n {@code length} method is smaller than the {@code newLength}\n argument then the file will be extended.  In this case, the contents of\n the extended portion of the file are not defined.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newLength</span> : Number<div class='sub-desc'><p>The desired length of the file\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-skipBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-skipBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-skipBytes' class='name expandable'>skipBytes</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to skip over {@code n} bytes of input discarding the\n skipped bytes. ...</div><div class='long'><p>Attempts to skip over {@code n} bytes of input discarding the\n skipped bytes.\n <p></p>\n\n<p> This method may skip over some smaller number of bytes, possibly zero.\n This may result from any of a number of conditions; reaching end of\n file before {@code n} bytes have been skipped is only one\n possibility. This method never throws an {@code EOFException}.\n The actual number of bytes skipped is returned.  If {@code n}\n is negative, no bytes are skipped.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>the number of bytes to be skipped.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes skipped.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-write' class='name expandable'>write</a>( <span class='pre'>b, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes {@code len} bytes from the specified byte array\n starting at offset {@code off} to this file. ...</div><div class='long'><p>Writes {@code len} bytes from the specified byte array\n starting at offset {@code off} to this file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the data.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the data.</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the number of bytes to write.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeBoolean' class='name expandable'>writeBoolean</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a {@code boolean} to the file as a one-byte value. ...</div><div class='long'><p>Writes a {@code boolean} to the file as a one-byte value. The\n value {@code true} is written out as the value\n {@code (byte)1}; the value {@code false} is written out\n as the value {@code (byte)0}. The write starts at\n the current position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Boolean<div class='sub-desc'><p>a {@code boolean} value to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeByte' class='name expandable'>writeByte</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a {@code byte} to the file as a one-byte value. ...</div><div class='long'><p>Writes a {@code byte} to the file as a one-byte value. The\n write starts at the current position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a {@code byte} value to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeBytes' class='name expandable'>writeBytes</a>( <span class='pre'>s</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes the string to the file as a sequence of bytes. ...</div><div class='long'><p>Writes the string to the file as a sequence of bytes. Each\n character in the string is written out, in sequence, by discarding\n its high eight bits. The write starts at the current position of\n the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : String<div class='sub-desc'><p>a string of bytes to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeChar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeChar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeChar' class='name expandable'>writeChar</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a {@code char} to the file as a two-byte value, high\n byte first. ...</div><div class='long'><p>Writes a {@code char} to the file as a two-byte value, high\n byte first. The write starts at the current position of the\n file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a {@code char} value to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeChars' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeChars' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeChars' class='name expandable'>writeChars</a>( <span class='pre'>s</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a string to the file as a sequence of characters. ...</div><div class='long'><p>Writes a string to the file as a sequence of characters. Each\n character is written to the data output stream as if by the\n {@code writeChar} method. The write starts at the current\n position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : String<div class='sub-desc'><p>a {@code String} value to be written.\n@exception IOException  if an I/O error occurs.\n@see <a href=\"#!/api/java.io.RandomAccessFile-method-writeChar\" rel=\"java.io.RandomAccessFile-method-writeChar\" class=\"docClass\">java.io.RandomAccessFile.writeChar</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-writeDouble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeDouble' class='name expandable'>writeDouble</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts the double argument to a {@code long} using the\n {@code doubleToLongBits} method in class {@code Double},\n a...</div><div class='long'><p>Converts the double argument to a {@code long} using the\n {@code doubleToLongBits} method in class {@code Double},\n and then writes that {@code long} value to the file as an\n eight-byte quantity, high byte first. The write starts at the current\n position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a {@code double} value to be written.\n@exception IOException  if an I/O error occurs.\n@see java.lang.Double#doubleToLongBits(double)</p>\n</div></li></ul></div></div></div><div id='method-writeFloat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeFloat' class='name expandable'>writeFloat</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts the float argument to an {@code int} using the\n {@code floatToIntBits} method in class {@code Float},\n and t...</div><div class='long'><p>Converts the float argument to an {@code int} using the\n {@code floatToIntBits} method in class {@code Float},\n and then writes that {@code int} value to the file as a\n four-byte quantity, high byte first. The write starts at the\n current position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a {@code float} value to be written.\n@exception IOException  if an I/O error occurs.\n@see java.lang.Float#floatToIntBits(float)</p>\n</div></li></ul></div></div></div><div id='method-writeInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeInt' class='name expandable'>writeInt</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes an {@code int} to the file as four bytes, high byte first. ...</div><div class='long'><p>Writes an {@code int} to the file as four bytes, high byte first.\n The write starts at the current position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>an {@code int} to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeLong' class='name expandable'>writeLong</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a {@code long} to the file as eight bytes, high byte first. ...</div><div class='long'><p>Writes a {@code long} to the file as eight bytes, high byte first.\n The write starts at the current position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a {@code long} to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeShort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeShort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeShort' class='name expandable'>writeShort</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a {@code short} to the file as two bytes, high byte first. ...</div><div class='long'><p>Writes a {@code short} to the file as two bytes, high byte first.\n The write starts at the current position of the file pointer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Number<div class='sub-desc'><p>a {@code short} to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-writeUTF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.RandomAccessFile'>java.io.RandomAccessFile</span><br/><a href='source/RandomAccessFile.html#java-io-RandomAccessFile-method-writeUTF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.RandomAccessFile-method-writeUTF' class='name expandable'>writeUTF</a>( <span class='pre'>str</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a string to the file using\n modified UTF-8\n encoding in a machine-independent manner. ...</div><div class='long'><p>Writes a string to the file using\n <a href=\"DataInput.html#modified-utf-8\">modified UTF-8</a>\n encoding in a machine-independent manner.\n <p>\n First, two bytes are written to the file, starting at the\n current file pointer, as if by the\n {@code writeShort} method giving the number of bytes to\n follow. This value is the number of bytes actually written out,\n not the length of the string. Following the length, each character\n of the string is output, in sequence, using the modified UTF-8 encoding\n for each character.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>a string to be written.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});