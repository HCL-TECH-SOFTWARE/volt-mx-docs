Ext.data.JsonP.java_io_BufferedWriter({"tagname":"class","name":"java.io.BufferedWriter","autodetected":{},"files":[{"filename":"BufferedWriter.js","href":"BufferedWriter.html#java-io-BufferedWriter"}],"extends":"java.io.Writer","author":[{"tagname":"author","name":"Mark Reinhold","email":null}],"since":"JDK1.1","members":[{"name":"append","tagname":"method","owner":"java.io.Writer","id":"method-append","meta":{}},{"name":"close","tagname":"method","owner":"java.io.BufferedWriter","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.io.BufferedWriter","id":"method-flush","meta":{}},{"name":"newLine","tagname":"method","owner":"java.io.BufferedWriter","id":"method-newLine","meta":{}},{"name":"write","tagname":"method","owner":"java.io.BufferedWriter","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.BufferedWriter","short_doc":"Writes text to a character-output stream, buffering characters so as to\n provide for the efficient writing of single ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.Writer"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.Writer' rel='java.io.Writer' class='docClass'>java.io.Writer</a><div class='subclass '><strong>java.io.BufferedWriter</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/BufferedWriter.html#java-io-BufferedWriter' target='_blank'>BufferedWriter.js</a></div></pre><div class='doc-contents'><p>Writes text to a character-output stream, buffering characters so as to\n provide for the efficient writing of single characters, arrays, and strings.</p>\n\n<p> <p> The buffer size may be specified, or the default size may be accepted.\n The default is large enough for most purposes.</p>\n\n<p> <p> A newLine() method is provided, which uses the platform's own notion of\n line separator as defined by the system property <tt>line.separator</tt>.\n Not all platforms use the newline character ('\\n') to terminate lines.\n Calling this method to terminate each output line is therefore preferred to\n writing a newline character directly.</p>\n\n<p> <p> In general, a Writer sends its output immediately to the underlying\n character or byte stream.  Unless prompt output is required, it is advisable\n to wrap a BufferedWriter around any Writer whose write() operations may be\n costly, such as FileWriters and OutputStreamWriters.  For example,</p>\n\n<pre> PrintWriter out\n   = new PrintWriter(new BufferedWriter(new FileWriter(\"foo.out\")));\n </pre>\n\n\n<p> will buffer the PrintWriter's output to the file.  Without buffering, each\n invocation of a print() method would cause characters to be converted into\n bytes that would then be written immediately to the file, which can be very\n inefficient.</p>\n\n<p> @see PrintWriter\n @see FileWriter\n @see OutputStreamWriter\n @see java.nio.file.Files#newBufferedWriter</p>\n        <p>Available since: <b>JDK1.1</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-append' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.Writer' rel='java.io.Writer' class='defined-in docClass'>java.io.Writer</a><br/><a href='source/Writer.html#java-io-Writer-method-append' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Writer-method-append' class='name expandable'>append</a>( <span class='pre'>c</span> ) : Object {java.io.Writer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the specified character to this writer. ...</div><div class='long'><p>Appends the specified character to this writer.</p>\n\n<p> <p> An invocation of this method of the form <tt>out.append(c)</tt>\n behaves in exactly the same way as the invocation</p>\n\n<pre>     out.write(c) </pre>\n\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : String<div class='sub-desc'><p>The 16-bit character to append</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.Writer}</span><div class='sub-desc'><p>This writer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.BufferedWriter'>java.io.BufferedWriter</span><br/><a href='source/BufferedWriter.html#java-io-BufferedWriter-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.BufferedWriter-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.Writer-method-close\" rel=\"java.io.Writer-method-close\" class=\"docClass\">java.io.Writer.close</a></p></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.BufferedWriter'>java.io.BufferedWriter</span><br/><a href='source/BufferedWriter.html#java-io-BufferedWriter-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.BufferedWriter-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes the stream. ...</div><div class='long'><p>Flushes the stream.\n@exception IOException  If an I/O error occurs</p>\n<p>Overrides: <a href=\"#!/api/java.io.Writer-method-flush\" rel=\"java.io.Writer-method-flush\" class=\"docClass\">java.io.Writer.flush</a></p></div></div></div><div id='method-newLine' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.BufferedWriter'>java.io.BufferedWriter</span><br/><a href='source/BufferedWriter.html#java-io-BufferedWriter-method-newLine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.BufferedWriter-method-newLine' class='name expandable'>newLine</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a line separator. ...</div><div class='long'><p>Writes a line separator.  The line separator string is defined by the\n system property <tt>line.separator</tt>, and is not necessarily a single\n newline ('\\n') character.\n@exception IOException  If an I/O error occurs</p>\n</div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.BufferedWriter'>java.io.BufferedWriter</span><br/><a href='source/BufferedWriter.html#java-io-BufferedWriter-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.BufferedWriter-method-write' class='name expandable'>write</a>( <span class='pre'>s, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a portion of a String. ...</div><div class='long'><p>Writes a portion of a String.</p>\n\n<p> <p> If the value of the <tt>len</tt> parameter is negative then no\n characters are written.  This is contrary to the specification of this\n method in the {@linkplain <a href=\"#!/api/java.io.Writer-method-write\" rel=\"java.io.Writer-method-write\" class=\"docClass\">java.io.Writer.write</a>(java.lang.String,int,int)\n superclass}, which requires that an IndexOutOfBoundsException be\n thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : String<div class='sub-desc'><p>String to be written</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>Offset from which to start reading characters</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>Number of characters to be written\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.Writer-method-write\" rel=\"java.io.Writer-method-write\" class=\"docClass\">java.io.Writer.write</a></p></div></div></div></div></div></div></div>","meta":{}});