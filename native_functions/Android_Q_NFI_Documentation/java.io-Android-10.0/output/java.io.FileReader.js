Ext.data.JsonP.java_io_FileReader({"tagname":"class","name":"java.io.FileReader","autodetected":{},"files":[{"filename":"FileReader.js","href":"FileReader.html#java-io-FileReader"}],"extends":"java.io.InputStreamReader","author":[{"tagname":"author","name":"Mark Reinhold","email":null}],"since":"JDK1.1","members":[{"name":"close","tagname":"method","owner":"java.io.InputStreamReader","id":"method-close","meta":{}},{"name":"getEncoding","tagname":"method","owner":"java.io.InputStreamReader","id":"method-getEncoding","meta":{}},{"name":"mark","tagname":"method","owner":"java.io.Reader","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.io.Reader","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.io.InputStreamReader","id":"method-read","meta":{}},{"name":"ready","tagname":"method","owner":"java.io.InputStreamReader","id":"method-ready","meta":{}},{"name":"reset","tagname":"method","owner":"java.io.Reader","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.io.Reader","id":"method-skip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.FileReader","short_doc":"Convenience class for reading character files. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.Reader","java.io.InputStreamReader"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.Reader' rel='java.io.Reader' class='docClass'>java.io.Reader</a><div class='subclass '><a href='#!/api/java.io.InputStreamReader' rel='java.io.InputStreamReader' class='docClass'>java.io.InputStreamReader</a><div class='subclass '><strong>java.io.FileReader</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/FileReader.html#java-io-FileReader' target='_blank'>FileReader.js</a></div></pre><div class='doc-contents'><p>Convenience class for reading character files.  The constructors of this\n class assume that the default character encoding and the default byte-buffer\n size are appropriate.  To specify these values yourself, construct an\n InputStreamReader on a FileInputStream.</p>\n\n<p> <p><code>FileReader</code> is meant for reading streams of characters.\n For reading streams of raw bytes, consider using a\n <code>FileInputStream</code>.</p>\n\n<p> @see InputStreamReader\n @see FileInputStream</p>\n        <p>Available since: <b>JDK1.1</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStreamReader' rel='java.io.InputStreamReader' class='defined-in docClass'>java.io.InputStreamReader</a><br/><a href='source/InputStreamReader.html#java-io-InputStreamReader-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStreamReader-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.Reader-method-close\" rel=\"java.io.Reader-method-close\" class=\"docClass\">java.io.Reader.close</a></p></div></div></div><div id='method-getEncoding' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStreamReader' rel='java.io.InputStreamReader' class='defined-in docClass'>java.io.InputStreamReader</a><br/><a href='source/InputStreamReader.html#java-io-InputStreamReader-method-getEncoding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStreamReader-method-getEncoding' class='name expandable'>getEncoding</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the character encoding being used by this stream. ...</div><div class='long'><p>Returns the name of the character encoding being used by this stream.</p>\n\n<p> <p> If the encoding has an historical name then that name is returned;\n otherwise the encoding's canonical name is returned.</p>\n\n<p> <p> If this instance was created with the String) constructor then the returned\n name, being unique for the encoding, may differ from the name passed to\n the constructor. This method will return <code>null</code> if the\n stream has been closed.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The historical name of this encoding, or\n         <code>null</code> if the stream has been closed\n@see java.nio.charset.Charset\n@revised 1.4\n@spec JSR-51</p>\n</div></li></ul></div></div></div><div id='method-mark' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.Reader' rel='java.io.Reader' class='defined-in docClass'>java.io.Reader</a><br/><a href='source/Reader.html#java-io-Reader-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-mark' class='name expandable'>mark</a>( <span class='pre'>readAheadLimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the present position in the stream. ...</div><div class='long'><p>Marks the present position in the stream.  Subsequent calls to reset()\n will attempt to reposition the stream to this point.  Not all\n character-input streams support the mark() operation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readAheadLimit</span> : Number<div class='sub-desc'><p>Limit on the number of characters that may be\n                         read while still preserving the mark.  After\n                         reading this many characters, attempting to\n                         reset the stream may fail.\n@exception IOException  If the stream does not support mark(),\n                          or if some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-markSupported' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.Reader' rel='java.io.Reader' class='defined-in docClass'>java.io.Reader</a><br/><a href='source/Reader.html#java-io-Reader-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this stream supports the mark() operation. ...</div><div class='long'><p>Tells whether this stream supports the mark() operation. The default\n implementation always returns false. Subclasses should override this\n method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if and only if this stream supports the mark operation.</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStreamReader' rel='java.io.InputStreamReader' class='defined-in docClass'>java.io.InputStreamReader</a><br/><a href='source/InputStreamReader.html#java-io-InputStreamReader-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStreamReader-method-read' class='name expandable'>read</a>( <span class='pre'>cbuf, offset, length</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads characters into a portion of an array. ...</div><div class='long'><p>Reads characters into a portion of an array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cbuf</span> : Object {char[]}<div class='sub-desc'><p>Destination buffer</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>Offset at which to start storing characters</p>\n</div></li><li><span class='pre'>length</span> : Number<div class='sub-desc'><p>Maximum number of characters to read</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of characters read, or -1 if the end of the\n             stream has been reached\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.Reader-method-read\" rel=\"java.io.Reader-method-read\" class=\"docClass\">java.io.Reader.read</a></p></div></div></div><div id='method-ready' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStreamReader' rel='java.io.InputStreamReader' class='defined-in docClass'>java.io.InputStreamReader</a><br/><a href='source/InputStreamReader.html#java-io-InputStreamReader-method-ready' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStreamReader-method-ready' class='name expandable'>ready</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this stream is ready to be read. ...</div><div class='long'><p>Tells whether this stream is ready to be read.  An InputStreamReader is\n ready if its input buffer is not empty, or if bytes are available to be\n read from the underlying byte stream.\n@exception IOException  If an I/O error occurs</p>\n<p>Overrides: <a href=\"#!/api/java.io.Reader-method-ready\" rel=\"java.io.Reader-method-ready\" class=\"docClass\">java.io.Reader.ready</a></p></div></div></div><div id='method-reset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.Reader' rel='java.io.Reader' class='defined-in docClass'>java.io.Reader</a><br/><a href='source/Reader.html#java-io-Reader-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets the stream. ...</div><div class='long'><p>Resets the stream.  If the stream has been marked, then attempt to\n reposition it at the mark.  If the stream has not been marked, then\n attempt to reset it in some way appropriate to the particular stream,\n for example by repositioning it to its starting point.  Not all\n character-input streams support the reset() operation, and some support\n reset() without supporting mark().\n@exception IOException  If the stream has not been marked,\n                          or if the mark has been invalidated,\n                          or if the stream does not support reset(),\n                          or if some other I/O error occurs</p>\n</div></div></div><div id='method-skip' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.Reader' rel='java.io.Reader' class='defined-in docClass'>java.io.Reader</a><br/><a href='source/Reader.html#java-io-Reader-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Reader-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips characters. ...</div><div class='long'><p>Skips characters.  This method will block until some characters are\n available, an I/O error occurs, or the end of the stream is reached.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>The number of characters to skip</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of characters actually skipped\n@exception IllegalArgumentException  If <code>n</code> is negative.\n@exception IOException  If an I/O error occurs</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});