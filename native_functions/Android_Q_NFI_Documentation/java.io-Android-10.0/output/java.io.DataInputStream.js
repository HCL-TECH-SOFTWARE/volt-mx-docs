Ext.data.JsonP.java_io_DataInputStream({"tagname":"class","name":"java.io.DataInputStream","autodetected":{},"files":[{"filename":"DataInputStream.js","href":"DataInputStream.html#java-io-DataInputStream"}],"extends":"java.io.FilterInputStream","author":[{"tagname":"author","name":"Arthur van Hoff","email":null}],"since":"JDK1.0","members":[{"name":"available","tagname":"method","owner":"java.io.FilterInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"java.io.FilterInputStream","id":"method-close","meta":{}},{"name":"mark","tagname":"method","owner":"java.io.FilterInputStream","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.io.FilterInputStream","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.io.DataInputStream","id":"method-read","meta":{}},{"name":"readBoolean","tagname":"method","owner":"java.io.DataInputStream","id":"method-readBoolean","meta":{}},{"name":"readByte","tagname":"method","owner":"java.io.DataInputStream","id":"method-readByte","meta":{}},{"name":"readChar","tagname":"method","owner":"java.io.DataInputStream","id":"method-readChar","meta":{}},{"name":"readDouble","tagname":"method","owner":"java.io.DataInputStream","id":"method-readDouble","meta":{}},{"name":"readFloat","tagname":"method","owner":"java.io.DataInputStream","id":"method-readFloat","meta":{}},{"name":"readFully","tagname":"method","owner":"java.io.DataInputStream","id":"method-readFully","meta":{}},{"name":"readInt","tagname":"method","owner":"java.io.DataInputStream","id":"method-readInt","meta":{}},{"name":"readLine","tagname":"method","owner":"java.io.DataInputStream","id":"method-readLine","meta":{"deprecated":{"text":"<p>This method does not properly convert bytes to characters.\n As of JDK&nbsp;1.1, the preferred way to read lines of text is via the\n <code>BufferedReader.readLine()</code> method.  Programs that use the\n <code>DataInputStream</code> class to read lines can be converted to use\n the <code>BufferedReader</code> class by replacing code of the form:\n <blockquote></blockquote></p>\n\n<pre>     DataInputStream d =&nbsp;new&nbsp;DataInputStream(in);\n </pre>\n\n\n<p>\n with:\n <blockquote></blockquote></p>\n\n<pre>     BufferedReader d\n          =&nbsp;new&nbsp;BufferedReader(new&nbsp;InputStreamReader(in));\n </pre>\n\n\n<p></p>\n"}}},{"name":"readLong","tagname":"method","owner":"java.io.DataInputStream","id":"method-readLong","meta":{}},{"name":"readShort","tagname":"method","owner":"java.io.DataInputStream","id":"method-readShort","meta":{}},{"name":"readUTF","tagname":"method","owner":"java.io.DataInputStream","id":"method-readUTF","meta":{}},{"name":"readUnsignedByte","tagname":"method","owner":"java.io.DataInputStream","id":"method-readUnsignedByte","meta":{}},{"name":"readUnsignedShort","tagname":"method","owner":"java.io.DataInputStream","id":"method-readUnsignedShort","meta":{}},{"name":"reset","tagname":"method","owner":"java.io.FilterInputStream","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.io.FilterInputStream","id":"method-skip","meta":{}},{"name":"skipBytes","tagname":"method","owner":"java.io.DataInputStream","id":"method-skipBytes","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.DataInputStream","short_doc":"implements java.io.DataInput\n\nA data input stream lets an application read primitive Java data\n types from an underly...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.InputStream","java.io.FilterInputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='docClass'>java.io.InputStream</a><div class='subclass '><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='docClass'>java.io.FilterInputStream</a><div class='subclass '><strong>java.io.DataInputStream</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/DataInputStream.html#java-io-DataInputStream' target='_blank'>DataInputStream.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.io.DataInput\" rel=\"java.io.DataInput\" class=\"docClass\">java.io.DataInput</a></p>\n\n<p>A data input stream lets an application read primitive Java data\n types from an underlying input stream in a machine-independent\n way. An application uses a data output stream to write data that\n can later be read by a data input stream.\n <p>\n DataInputStream is not necessarily safe for multithreaded access.\n Thread safety is optional and is the responsibility of users of\n methods in this class.</p>\n\n<p> @see     <a href=\"#!/api/java.io.DataOutputStream\" rel=\"java.io.DataOutputStream\" class=\"docClass\">java.io.DataOutputStream</a></p>\n        <p>Available since: <b>JDK1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='defined-in docClass'>java.io.FilterInputStream</a><br/><a href='source/FilterInputStream.html#java-io-FilterInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FilterInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an estimate of the number of bytes that can be read (or\n skipped over) from this input stream without blockin...</div><div class='long'><p>Returns an estimate of the number of bytes that can be read (or\n skipped over) from this input stream without blocking by the next\n caller of a method for this input stream. The next caller might be\n the same thread or another thread.  A single read or skip of this\n many bytes will not block, but may read or skip fewer bytes.\n <p>\n This method returns the result of in.available().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an estimate of the number of bytes that can be read (or skipped\n             over) from this input stream without blocking.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.InputStream-method-available\" rel=\"java.io.InputStream-method-available\" class=\"docClass\">java.io.InputStream.available</a></p></div></div></div><div id='method-close' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='defined-in docClass'>java.io.FilterInputStream</a><br/><a href='source/FilterInputStream.html#java-io-FilterInputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FilterInputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this input stream and releases any system resources\n associated with the stream. ...</div><div class='long'><p>Closes this input stream and releases any system resources\n associated with the stream.\n This\n method simply performs <code>in.close()</code>.\n@exception IOException  if an I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n<p>Overrides: <a href=\"#!/api/java.io.InputStream-method-close\" rel=\"java.io.InputStream-method-close\" class=\"docClass\">java.io.InputStream.close</a></p></div></div></div><div id='method-mark' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='defined-in docClass'>java.io.FilterInputStream</a><br/><a href='source/FilterInputStream.html#java-io-FilterInputStream-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FilterInputStream-method-mark' class='name expandable'>mark</a>( <span class='pre'>readlimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the current position in this input stream. ...</div><div class='long'><p>Marks the current position in this input stream. A subsequent\n call to the <code>reset</code> method repositions this stream at\n the last marked position so that subsequent reads re-read the same bytes.\n <p>\n The <code>readlimit</code> argument tells this input stream to\n allow that many bytes to be read before the mark position gets\n invalidated.\n <p>\n This method simply performs <code>in.mark(readlimit)</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readlimit</span> : Number<div class='sub-desc'><p>the maximum limit of bytes that can be read before\n                      the mark position becomes invalid.\n@see java.io.FilterInputStream#in\n@see <a href=\"#!/api/java.io.FilterInputStream-method-reset\" rel=\"java.io.FilterInputStream-method-reset\" class=\"docClass\">java.io.FilterInputStream.reset</a>()</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.InputStream-method-mark\" rel=\"java.io.InputStream-method-mark\" class=\"docClass\">java.io.InputStream.mark</a></p></div></div></div><div id='method-markSupported' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='defined-in docClass'>java.io.FilterInputStream</a><br/><a href='source/FilterInputStream.html#java-io-FilterInputStream-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FilterInputStream-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if this input stream supports the mark\n and reset methods. ...</div><div class='long'><p>Tests if this input stream supports the <code>mark</code>\n and <code>reset</code> methods.\n This method\n simply performs <code>in.markSupported()</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if this stream type supports the\n          <code>mark</code> and <code>reset</code> method;\n          <code>false</code> otherwise.\n@see java.io.FilterInputStream#in\n@see <a href=\"#!/api/java.io.InputStream-method-mark\" rel=\"java.io.InputStream-method-mark\" class=\"docClass\">java.io.InputStream.mark</a>(int)\n@see <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a>()</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.InputStream-method-markSupported\" rel=\"java.io.InputStream-method-markSupported\" class=\"docClass\">java.io.InputStream.markSupported</a></p></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-read' class='name expandable'>read</a>( <span class='pre'>b, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads up to len bytes of data from the contained\n input stream into an array of bytes. ...</div><div class='long'><p>Reads up to <code>len</code> bytes of data from the contained\n input stream into an array of bytes.  An attempt is made to read\n as many as <code>len</code> bytes, but a smaller number may be read,\n possibly zero. The number of bytes actually read is returned as an\n integer.</p>\n\n<p> <p> This method blocks until input data is available, end of file is\n detected, or an exception is thrown.</p>\n\n<p> <p> If <code>len</code> is zero, then no bytes are read and\n <code>0</code> is returned; otherwise, there is an attempt to read at\n least one byte. If no byte is available because the stream is at end of\n file, the value <code>-1</code> is returned; otherwise, at least one\n byte is read and stored into <code>b</code>.</p>\n\n<p> <p> The first byte read is stored into element <code>b[off]</code>, the\n next one into <code>b[off+1]</code>, and so on. The number of bytes read\n is, at most, equal to <code>len</code>. Let <i>k</i> be the number of\n bytes actually read; these bytes will be stored in elements\n <code>b[off]</code> through <code>b[off+</code><i>k</i><code>-1]</code>,\n leaving elements <code>b[off+</code><i>k</i><code>]</code> through\n <code>b[off+len-1]</code> unaffected.</p>\n\n<p> <p> In every case, elements <code>b[0]</code> through\n <code>b[off]</code> and elements <code>b[off+len]</code> through\n <code>b[b.length-1]</code> are unaffected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the destination array <code>b</code></p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the maximum number of bytes read.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end\n             of the stream has been reached.\n@exception NullPointerException If <code>b</code> is <code>null</code>.\n@exception IndexOutOfBoundsException If <code>off</code> is negative,\n <code>len</code> is negative, or <code>len</code> is greater than\n <code>b.length - off</code>\n@exception IOException if the first byte cannot be read for any reason\n other than end of file, the stream has been closed and the underlying\n input stream does not support reading after close, or another I/O\n error occurs.\n@see java.io.FilterInputStream#in\n@see <a href=\"#!/api/java.io.InputStream-method-read\" rel=\"java.io.InputStream-method-read\" class=\"docClass\">java.io.InputStream.read</a>(byte[], int, int)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-read\" rel=\"java.io.FilterInputStream-method-read\" class=\"docClass\">java.io.FilterInputStream.read</a></p></div></div></div><div id='method-readBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readBoolean' class='name expandable'>readBoolean</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readBoolean\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readBoolean</code>\n method of <code>DataInput</code>.\n <p>\n Bytes for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the <code>boolean</code> value read.\n@exception EOFException  if this input stream has reached the end.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readByte' class='name expandable'>readByte</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readByte\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readByte</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next byte of this input stream as a signed 8-bit\n             <code>byte</code>.\n@exception EOFException  if this input stream has reached the end.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readChar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readChar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readChar' class='name expandable'>readChar</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readChar\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readChar</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the next two bytes of this input stream, interpreted as a\n             <code>char</code>.\n@exception EOFException  if this input stream reaches the end before\n               reading two bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readDouble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readDouble' class='name expandable'>readDouble</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readDouble\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readDouble</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next eight bytes of this input stream, interpreted as a\n             <code>double</code>.\n@exception EOFException  if this input stream reaches the end before\n               reading eight bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see <a href=\"#!/api/java.io.DataInputStream-method-readLong\" rel=\"java.io.DataInputStream-method-readLong\" class=\"docClass\">java.io.DataInputStream.readLong</a>()\n@see java.lang.Double#longBitsToDouble(long)</p>\n</div></li></ul></div></div></div><div id='method-readFloat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readFloat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readFloat' class='name expandable'>readFloat</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readFloat\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readFloat</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next four bytes of this input stream, interpreted as a\n             <code>float</code>.\n@exception EOFException  if this input stream reaches the end before\n               reading four bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see <a href=\"#!/api/java.io.DataInputStream-method-readInt\" rel=\"java.io.DataInputStream-method-readInt\" class=\"docClass\">java.io.DataInputStream.readInt</a>()\n@see java.lang.Float#intBitsToFloat(int)</p>\n</div></li></ul></div></div></div><div id='method-readFully' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readFully' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readFully' class='name expandable'>readFully</a>( <span class='pre'>b, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readFully\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readFully</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset of the data.</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the number of bytes to read.\n@exception EOFException  if this input stream reaches the end before\n               reading all the bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readInt' class='name expandable'>readInt</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readInt\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readInt</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next four bytes of this input stream, interpreted as an\n             <code>int</code>.\n@exception EOFException  if this input stream reaches the end before\n               reading four bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readLine' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readLine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readLine' class='name expandable'>readLine</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>See the general contract of the readLine\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readLine</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method does not properly convert bytes to characters.\n As of JDK&nbsp;1.1, the preferred way to read lines of text is via the\n <code>BufferedReader.readLine()</code> method.  Programs that use the\n <code>DataInputStream</code> class to read lines can be converted to use\n the <code>BufferedReader</code> class by replacing code of the form:\n <blockquote></blockquote></p>\n\n<pre>     DataInputStream d =&nbsp;new&nbsp;DataInputStream(in);\n </pre>\n\n\n<p>\n with:\n <blockquote></blockquote></p>\n\n<pre>     BufferedReader d\n          =&nbsp;new&nbsp;BufferedReader(new&nbsp;InputStreamReader(in));\n </pre>\n\n\n<p></p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the next line of text from this input stream.\n@exception IOException  if an I/O error occurs.\n@see <a href=\"#!/api/java.io.BufferedReader-method-readLine\" rel=\"java.io.BufferedReader-method-readLine\" class=\"docClass\">java.io.BufferedReader.readLine</a>()\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readLong' class='name expandable'>readLong</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readLong\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readLong</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next eight bytes of this input stream, interpreted as a\n             <code>long</code>.\n@exception EOFException  if this input stream reaches the end before\n               reading eight bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readShort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readShort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readShort' class='name expandable'>readShort</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readShort\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readShort</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next two bytes of this input stream, interpreted as a\n             signed 16-bit number.\n@exception EOFException  if this input stream reaches the end before\n               reading two bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readUTF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readUTF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readUTF' class='name expandable'>readUTF</a>( <span class='pre'>in</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads from the\n stream in a representation\n of a Unicode  character string encoded in\n modified UTF-8 format;\n this s...</div><div class='long'><p>Reads from the\n stream <code>in</code> a representation\n of a Unicode  character string encoded in\n <a href=\"DataInput.html#modified-utf-8\">modified UTF-8</a> format;\n this string of characters is then returned as a <code>String</code>.\n The details of the modified UTF-8 representation\n are  exactly the same as for the <code>readUTF</code>\n method of <code>DataInput</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>in</span> : Object {DataInput}<div class='sub-desc'><p>a data input stream.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a Unicode string.\n@exception EOFException            if the input stream reaches the end\n               before all the bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@exception UTFDataFormatException  if the bytes do not represent a\n               valid modified UTF-8 encoding of a Unicode string.\n@see <a href=\"#!/api/java.io.DataInputStream-method-readUnsignedShort\" rel=\"java.io.DataInputStream-method-readUnsignedShort\" class=\"docClass\">java.io.DataInputStream.readUnsignedShort</a>()</p>\n</div></li></ul></div></div></div><div id='method-readUnsignedByte' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readUnsignedByte' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readUnsignedByte' class='name expandable'>readUnsignedByte</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readUnsignedByte\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readUnsignedByte</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next byte of this input stream, interpreted as an\n             unsigned 8-bit number.\n@exception EOFException  if this input stream has reached the end.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-readUnsignedShort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-readUnsignedShort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-readUnsignedShort' class='name expandable'>readUnsignedShort</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the readUnsignedShort\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>readUnsignedShort</code>\n method of <code>DataInput</code>.\n <p>\n Bytes\n for this operation are read from the contained\n input stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the next two bytes of this input stream, interpreted as an\n             unsigned 16-bit integer.\n@exception EOFException  if this input stream reaches the end before\n             reading two bytes.\n@exception IOException   the stream has been closed and the contained\n             input stream does not support reading after close, or\n             another I/O error occurs.\n@see java.io.FilterInputStream#in</p>\n</div></li></ul></div></div></div><div id='method-reset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='defined-in docClass'>java.io.FilterInputStream</a><br/><a href='source/FilterInputStream.html#java-io-FilterInputStream-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FilterInputStream-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Repositions this stream to the position at the time the\n mark method was last called on this input stream. ...</div><div class='long'><p>Repositions this stream to the position at the time the\n <code>mark</code> method was last called on this input stream.\n <p>\n This method\n simply performs <code>in.reset()</code>.\n <p>\n Stream marks are intended to be used in\n situations where you need to read ahead a little to see what's in\n the stream. Often this is most easily done by invoking some\n general parser. If the stream is of the type handled by the\n parse, it just chugs along happily. If the stream is not of\n that type, the parser should toss an exception when it fails.\n If this happens within readlimit bytes, it allows the outer\n code to reset the stream and try another parser.\n@exception IOException  if the stream has not been marked or if the\n               mark has been invalidated.\n@see java.io.FilterInputStream#in\n@see <a href=\"#!/api/java.io.FilterInputStream-method-mark\" rel=\"java.io.FilterInputStream-method-mark\" class=\"docClass\">java.io.FilterInputStream.mark</a>(int)</p>\n<p>Overrides: <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a></p></div></div></div><div id='method-skip' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='defined-in docClass'>java.io.FilterInputStream</a><br/><a href='source/FilterInputStream.html#java-io-FilterInputStream-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FilterInputStream-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips over and discards n bytes of data from the\n input stream. ...</div><div class='long'><p>Skips over and discards <code>n</code> bytes of data from the\n input stream. The <code>skip</code> method may, for a variety of\n reasons, end up skipping over some smaller number of bytes,\n possibly <code>0</code>. The actual number of bytes skipped is\n returned.\n <p>\n This method simply performs <code>in.skip(n)</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>the number of bytes to be skipped.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes skipped.\n@exception IOException  if the stream does not support seek,\n                          or if some other I/O error occurs.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.InputStream-method-skip\" rel=\"java.io.InputStream-method-skip\" class=\"docClass\">java.io.InputStream.skip</a></p></div></div></div><div id='method-skipBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.DataInputStream'>java.io.DataInputStream</span><br/><a href='source/DataInputStream.html#java-io-DataInputStream-method-skipBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.DataInputStream-method-skipBytes' class='name expandable'>skipBytes</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>See the general contract of the skipBytes\n method of DataInput. ...</div><div class='long'><p>See the general contract of the <code>skipBytes</code>\n method of <code>DataInput</code>.\n <p>\n Bytes for this operation are read from the contained\n input stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>the number of bytes to be skipped.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes skipped.\n@exception IOException  if the contained input stream does not support\n             seek, or the stream has been closed and\n             the contained input stream does not support\n             reading after close, or another I/O error occurs.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});