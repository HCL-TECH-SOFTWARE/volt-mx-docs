Ext.data.JsonP.java_io_Writer({"tagname":"class","name":"java.io.Writer","autodetected":{},"files":[{"filename":"Writer.js","href":"Writer.html#java-io-Writer"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Reinhold","email":null}],"since":"JDK1.1","members":[{"name":"append","tagname":"method","owner":"java.io.Writer","id":"method-append","meta":{}},{"name":"close","tagname":"method","owner":"java.io.Writer","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"java.io.Writer","id":"method-flush","meta":{}},{"name":"write","tagname":"method","owner":"java.io.Writer","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.Writer","short_doc":"implements java.lang.Appendable\n\n implements java.io.Closeable\n\n implements java.io.Flushable\n\nAbstract class for wri...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["java.io.BufferedWriter","java.io.CharArrayWriter","java.io.FilterWriter","java.io.OutputStreamWriter","java.io.PipedWriter","java.io.PrintWriter","java.io.StringWriter"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.io.Writer</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.io.BufferedWriter' rel='java.io.BufferedWriter' class='docClass'>java.io.BufferedWriter</a></div><div class='dependency'><a href='#!/api/java.io.CharArrayWriter' rel='java.io.CharArrayWriter' class='docClass'>java.io.CharArrayWriter</a></div><div class='dependency'><a href='#!/api/java.io.FilterWriter' rel='java.io.FilterWriter' class='docClass'>java.io.FilterWriter</a></div><div class='dependency'><a href='#!/api/java.io.OutputStreamWriter' rel='java.io.OutputStreamWriter' class='docClass'>java.io.OutputStreamWriter</a></div><div class='dependency'><a href='#!/api/java.io.PipedWriter' rel='java.io.PipedWriter' class='docClass'>java.io.PipedWriter</a></div><div class='dependency'><a href='#!/api/java.io.PrintWriter' rel='java.io.PrintWriter' class='docClass'>java.io.PrintWriter</a></div><div class='dependency'><a href='#!/api/java.io.StringWriter' rel='java.io.StringWriter' class='docClass'>java.io.StringWriter</a></div><h4>Files</h4><div class='dependency'><a href='source/Writer.html#java-io-Writer' target='_blank'>Writer.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Appendable</p>\n\n<p> implements <a href=\"#!/api/java.io.Closeable\" rel=\"java.io.Closeable\" class=\"docClass\">java.io.Closeable</a></p>\n\n<p> implements <a href=\"#!/api/java.io.Flushable\" rel=\"java.io.Flushable\" class=\"docClass\">java.io.Flushable</a></p>\n\n<p>Abstract class for writing to character streams.  The only methods that a\n subclass must implement are write(char[], int, int), flush(), and close().\n Most subclasses, however, will override some of the methods defined here in\n order to provide higher efficiency, additional functionality, or both.</p>\n\n<p> @see Writer\n @see   BufferedWriter\n @see   CharArrayWriter\n @see   FilterWriter\n @see   OutputStreamWriter\n @see     FileWriter\n @see   PipedWriter\n @see   PrintWriter\n @see   StringWriter\n @see Reader</p>\n        <p>Available since: <b>JDK1.1</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-append' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Writer'>java.io.Writer</span><br/><a href='source/Writer.html#java-io-Writer-method-append' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Writer-method-append' class='name expandable'>append</a>( <span class='pre'>c</span> ) : Object {java.io.Writer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the specified character to this writer. ...</div><div class='long'><p>Appends the specified character to this writer.</p>\n\n<p> <p> An invocation of this method of the form <tt>out.append(c)</tt>\n behaves in exactly the same way as the invocation</p>\n\n<pre>     out.write(c) </pre>\n\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : String<div class='sub-desc'><p>The 16-bit character to append</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.Writer}</span><div class='sub-desc'><p>This writer</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Writer'>java.io.Writer</span><br/><a href='source/Writer.html#java-io-Writer-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Writer-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the stream, flushing it first. ...</div><div class='long'><p>Closes the stream, flushing it first. Once the stream has been closed,\n further write() or flush() invocations will cause an IOException to be\n thrown. Closing a previously closed stream has no effect.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Writer'>java.io.Writer</span><br/><a href='source/Writer.html#java-io-Writer-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Writer-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes the stream. ...</div><div class='long'><p>Flushes the stream.  If the stream has saved any characters from the\n various write() methods in a buffer, write them immediately to their\n intended destination.  Then, if that destination is another character or\n byte stream, flush it.  Thus one flush() invocation will flush all the\n buffers in a chain of Writers and OutputStreams.</p>\n\n<p> <p> If the intended destination of this stream is an abstraction provided\n by the underlying operating system, for example a file, then flushing the\n stream guarantees only that bytes previously written to the stream are\n passed to the operating system for writing; it does not guarantee that\n they are actually written to a physical device such as a disk drive.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.Writer'>java.io.Writer</span><br/><a href='source/Writer.html#java-io-Writer-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.Writer-method-write' class='name expandable'>write</a>( <span class='pre'>str, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a portion of a string. ...</div><div class='long'><p>Writes a portion of a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : String<div class='sub-desc'><p>A String</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>Offset from which to start writing characters</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>Number of characters to write</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IndexOutOfBoundsException\n          If <tt>off</tt> is negative, or <tt>len</tt> is negative,\n          or <tt>off+len</tt> is negative or greater than the length\n          of the given string</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});