Ext.data.JsonP.java_io_PushbackInputStream({"tagname":"class","name":"java.io.PushbackInputStream","autodetected":{},"files":[{"filename":"PushbackInputStream.js","href":"PushbackInputStream.html#java-io-PushbackInputStream"}],"extends":"java.io.FilterInputStream","author":[{"tagname":"author","name":"David Connelly","email":null},{"tagname":"author","name":"Jonathan Payne","email":null}],"since":"JDK1.0","members":[{"name":"available","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-close","meta":{}},{"name":"mark","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-read","meta":{}},{"name":"reset","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-skip","meta":{}},{"name":"unread","tagname":"method","owner":"java.io.PushbackInputStream","id":"method-unread","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.PushbackInputStream","short_doc":"A PushbackInputStream adds\n functionality to another input stream, namely\n the  ability to \"push back\" or \"unread\"\n o...","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.InputStream","java.io.FilterInputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='docClass'>java.io.InputStream</a><div class='subclass '><a href='#!/api/java.io.FilterInputStream' rel='java.io.FilterInputStream' class='docClass'>java.io.FilterInputStream</a><div class='subclass '><strong>java.io.PushbackInputStream</strong></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/PushbackInputStream.html#java-io-PushbackInputStream' target='_blank'>PushbackInputStream.js</a></div></pre><div class='doc-contents'><p>A <code>PushbackInputStream</code> adds\n functionality to another input stream, namely\n the  ability to \"push back\" or \"unread\"\n one byte. This is useful in situations where\n it is  convenient for a fragment of code\n to read an indefinite number of data bytes\n that  are delimited by a particular byte\n value; after reading the terminating byte,\n the  code fragment can \"unread\" it, so that\n the next read operation on the input stream\n will reread the byte that was pushed back.\n For example, bytes representing the  characters\n constituting an identifier might be terminated\n by a byte representing an  operator character;\n a method whose job is to read just an identifier\n can read until it  sees the operator and\n then push the operator back to be re-read.</p>\n        <p>Available since: <b>JDK1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an estimate of the number of bytes that can be read (or\n skipped over) from this input stream without blockin...</div><div class='long'><p>Returns an estimate of the number of bytes that can be read (or\n skipped over) from this input stream without blocking by the next\n invocation of a method for this input stream. The next invocation might be\n the same thread or another thread.  A single read or skip of this\n many bytes will not block, but may read or skip fewer bytes.</p>\n\n<p> <p> The method returns the sum of the number of bytes that have been\n pushed back and the value returned by <a href=\"#!/api/java.io.FilterInputStream-method-available\" rel=\"java.io.FilterInputStream-method-available\" class=\"docClass\">available</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of bytes that can be read (or skipped over) from\n             the input stream without blocking.\n@exception IOException  if this input stream has been closed by\n             invoking its close() method,\n             or an I/O error occurs.\n@see java.io.FilterInputStream#in\n@see <a href=\"#!/api/java.io.InputStream-method-available\" rel=\"java.io.InputStream-method-available\" class=\"docClass\">java.io.InputStream.available</a>()</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-available\" rel=\"java.io.FilterInputStream-method-available\" class=\"docClass\">java.io.FilterInputStream.available</a></p></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this input stream and releases any system resources\n associated with the stream. ...</div><div class='long'><p>Closes this input stream and releases any system resources\n associated with the stream.\n Once the stream has been closed, further read(), unread(),\n available(), reset(), or skip() invocations will throw an IOException.\n Closing a previously closed stream has no effect.\n@exception IOException  if an I/O error occurs.</p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-close\" rel=\"java.io.FilterInputStream-method-close\" class=\"docClass\">java.io.FilterInputStream.close</a></p></div></div></div><div id='method-mark' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-mark' class='name expandable'>mark</a>( <span class='pre'>readlimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the current position in this input stream. ...</div><div class='long'><p>Marks the current position in this input stream.</p>\n\n<p> <p> The <code>mark</code> method of <code>PushbackInputStream</code>\n does nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readlimit</span> : Number<div class='sub-desc'><p>the maximum limit of bytes that can be read before\n                      the mark position becomes invalid.\n@see <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a>()</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-mark\" rel=\"java.io.FilterInputStream-method-mark\" class=\"docClass\">java.io.FilterInputStream.mark</a></p></div></div></div><div id='method-markSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if this input stream supports the mark and\n reset methods, which it does not. ...</div><div class='long'><p>Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods, which it does not.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>false</code>, since this class does not support the\n           <code>mark</code> and <code>reset</code> methods.\n@see <a href=\"#!/api/java.io.InputStream-method-mark\" rel=\"java.io.InputStream-method-mark\" class=\"docClass\">java.io.InputStream.mark</a>(int)\n@see <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a>()</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-markSupported\" rel=\"java.io.FilterInputStream-method-markSupported\" class=\"docClass\">java.io.FilterInputStream.markSupported</a></p></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-read' class='name expandable'>read</a>( <span class='pre'>b, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads up to len bytes of data from this input stream into\n an array of bytes. ...</div><div class='long'><p>Reads up to <code>len</code> bytes of data from this input stream into\n an array of bytes.  This method first reads any pushed-back bytes; after\n that, if fewer than <code>len</code> bytes have been read then it\n reads from the underlying input stream. If <code>len</code> is not zero, the method\n blocks until at least 1 byte of input is available; otherwise, no\n bytes are read and <code>0</code> is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the destination array <code>b</code></p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the maximum number of bytes read.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end of\n             the stream has been reached.\n@exception NullPointerException If <code>b</code> is <code>null</code>.\n@exception IndexOutOfBoundsException If <code>off</code> is negative,\n <code>len</code> is negative, or <code>len</code> is greater than\n <code>b.length - off</code>\n@exception IOException  if this input stream has been closed by\n             invoking its close() method,\n             or an I/O error occurs.\n@see <a href=\"#!/api/java.io.InputStream-method-read\" rel=\"java.io.InputStream-method-read\" class=\"docClass\">java.io.InputStream.read</a>(byte[], int, int)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-read\" rel=\"java.io.FilterInputStream-method-read\" class=\"docClass\">java.io.FilterInputStream.read</a></p></div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Repositions this stream to the position at the time the\n mark method was last called on this input stream. ...</div><div class='long'><p>Repositions this stream to the position at the time the\n <code>mark</code> method was last called on this input stream.</p>\n\n<p> <p> The method <code>reset</code> for class\n <code>PushbackInputStream</code> does nothing except throw an\n <code>IOException</code>.\n@exception IOException  if this method is invoked.\n@see <a href=\"#!/api/java.io.InputStream-method-mark\" rel=\"java.io.InputStream-method-mark\" class=\"docClass\">java.io.InputStream.mark</a>(int)\n@see <a href=\"#!/api/java.io.IOException\" rel=\"java.io.IOException\" class=\"docClass\">java.io.IOException</a></p>\n<p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-reset\" rel=\"java.io.FilterInputStream-method-reset\" class=\"docClass\">java.io.FilterInputStream.reset</a></p></div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips over and discards n bytes of data from this\n input stream. ...</div><div class='long'><p>Skips over and discards <code>n</code> bytes of data from this\n input stream. The <code>skip</code> method may, for a variety of\n reasons, end up skipping over some smaller number of bytes,\n possibly zero.  If <code>n</code> is negative, no bytes are skipped.</p>\n\n<p> <p> The <code>skip</code> method of <code>PushbackInputStream</code>\n first skips over the bytes in the pushback buffer, if any.  It then\n calls the <code>skip</code> method of the underlying input stream if\n more bytes need to be skipped.  The actual number of bytes skipped\n is returned.</p>\n        <p>Available since: <b>1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>{@inheritDoc}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>{@inheritDoc}\n@exception IOException  if the stream does not support seek,\n            or the stream has been closed by\n            invoking its close() method,\n            or an I/O error occurs.\n@see java.io.FilterInputStream#in\n@see <a href=\"#!/api/java.io.InputStream-method-skip\" rel=\"java.io.InputStream-method-skip\" class=\"docClass\">java.io.InputStream.skip</a>(long n)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.io.FilterInputStream-method-skip\" rel=\"java.io.FilterInputStream-method-skip\" class=\"docClass\">java.io.FilterInputStream.skip</a></p></div></div></div><div id='method-unread' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.PushbackInputStream'>java.io.PushbackInputStream</span><br/><a href='source/PushbackInputStream.html#java-io-PushbackInputStream-method-unread' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.PushbackInputStream-method-unread' class='name expandable'>unread</a>( <span class='pre'>b</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Pushes back an array of bytes by copying it to the front of the\n pushback buffer. ...</div><div class='long'><p>Pushes back an array of bytes by copying it to the front of the\n pushback buffer.  After this method returns, the next byte to be read\n will have the value <code>b[0]</code>, the byte after that will have the\n value <code>b[1]</code>, and so forth.</p>\n        <p>Available since: <b>JDK1.1</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the byte array to push back\n@exception IOException If there is not enough room in the pushback\n            buffer for the specified number of bytes,\n            or this input stream has been closed by\n            invoking its close() method.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});