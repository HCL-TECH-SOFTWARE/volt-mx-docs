Ext.data.JsonP.java_io_FileFilter({"tagname":"class","name":"java.io.FileFilter","autodetected":{},"files":[{"filename":"FileFilter.js","href":"FileFilter.html#java-io-FileFilter"}],"since":"1.2","members":[{"name":"accept","tagname":"method","owner":"java.io.FileFilter","id":"method-accept","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.FileFilter","short_doc":"A filter for abstract pathnames. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/FileFilter.html#java-io-FileFilter' target='_blank'>FileFilter.js</a></div></pre><div class='doc-contents'><p>A filter for abstract pathnames.</p>\n\n<p> <p> Instances of this interface may be passed to the <code>listFiles(FileFilter)</code> method\n of the <code><a href=\"#!/api/java.io.File\" rel=\"java.io.File\" class=\"docClass\">java.io.File</a></code> class.</p>\n        <p>Available since: <b>1.2</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-accept' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.FileFilter'>java.io.FileFilter</span><br/><a href='source/FileFilter.html#java-io-FileFilter-method-accept' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FileFilter-method-accept' class='name expandable'>accept</a>( <span class='pre'>pathname</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests whether or not the specified abstract pathname should be\n included in a pathname list. ...</div><div class='long'><p>Tests whether or not the specified abstract pathname should be\n included in a pathname list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pathname</span> : Object {File}<div class='sub-desc'><p>The abstract pathname to be tested</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if and only if <code>pathname</code>\n          should be included</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});