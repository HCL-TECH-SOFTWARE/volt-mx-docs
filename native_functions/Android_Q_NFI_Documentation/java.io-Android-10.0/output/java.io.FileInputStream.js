Ext.data.JsonP.java_io_FileInputStream({"tagname":"class","name":"java.io.FileInputStream","autodetected":{},"files":[{"filename":"FileInputStream.js","href":"FileInputStream.html#java-io-FileInputStream"}],"extends":"java.io.InputStream","members":[{"name":"available","tagname":"method","owner":"java.io.FileInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"java.io.FileInputStream","id":"method-close","meta":{}},{"name":"getChannel","tagname":"method","owner":"java.io.FileInputStream","id":"method-getChannel","meta":{}},{"name":"getFD","tagname":"method","owner":"java.io.FileInputStream","id":"method-getFD","meta":{}},{"name":"mark","tagname":"method","owner":"java.io.InputStream","id":"method-mark","meta":{}},{"name":"markSupported","tagname":"method","owner":"java.io.InputStream","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"java.io.FileInputStream","id":"method-read","meta":{}},{"name":"reset","tagname":"method","owner":"java.io.InputStream","id":"method-reset","meta":{}},{"name":"skip","tagname":"method","owner":"java.io.FileInputStream","id":"method-skip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.io.FileInputStream","classIcon":"icon-class","superclasses":["java.lang.Object","java.io.InputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='docClass'>java.io.InputStream</a><div class='subclass '><strong>java.io.FileInputStream</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/FileInputStream.html#java-io-FileInputStream' target='_blank'>FileInputStream.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.FileInputStream'>java.io.FileInputStream</span><br/><a href='source/FileInputStream.html#java-io-FileInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FileInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.InputStream-method-available\" rel=\"java.io.InputStream-method-available\" class=\"docClass\">java.io.InputStream.available</a></p></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.FileInputStream'>java.io.FileInputStream</span><br/><a href='source/FileInputStream.html#java-io-FileInputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FileInputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.InputStream-method-close\" rel=\"java.io.InputStream-method-close\" class=\"docClass\">java.io.InputStream.close</a></p></div></div></div><div id='method-getChannel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.FileInputStream'>java.io.FileInputStream</span><br/><a href='source/FileInputStream.html#java-io-FileInputStream-method-getChannel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FileInputStream-method-getChannel' class='name expandable'>getChannel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getFD' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.FileInputStream'>java.io.FileInputStream</span><br/><a href='source/FileInputStream.html#java-io-FileInputStream-method-getFD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FileInputStream-method-getFD' class='name expandable'>getFD</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-mark' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='defined-in docClass'>java.io.InputStream</a><br/><a href='source/InputStream.html#java-io-InputStream-method-mark' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStream-method-mark' class='name expandable'>mark</a>( <span class='pre'>readlimit</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the current position in this input stream. ...</div><div class='long'><p>Marks the current position in this input stream. A subsequent call to\n the <code>reset</code> method repositions this stream at the last marked\n position so that subsequent reads re-read the same bytes.</p>\n\n<p> <p> The <code>readlimit</code> arguments tells this input stream to\n allow that many bytes to be read before the mark position gets\n invalidated.</p>\n\n<p> <p> The general contract of <code>mark</code> is that, if the method\n <code>markSupported</code> returns <code>true</code>, the stream somehow\n remembers all the bytes read after the call to <code>mark</code> and\n stands ready to supply those same bytes again if and whenever the method\n <code>reset</code> is called.  However, the stream is not required to\n remember any data at all if more than <code>readlimit</code> bytes are\n read from the stream before <code>reset</code> is called.</p>\n\n<p> <p> Marking a closed stream should not have any effect on the stream.</p>\n\n<p> <p> The <code>mark</code> method of <code>InputStream</code> does\n nothing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>readlimit</span> : Number<div class='sub-desc'><p>the maximum limit of bytes that can be read before\n                      the mark position becomes invalid.\n@see <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a>()</p>\n</div></li></ul></div></div></div><div id='method-markSupported' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='defined-in docClass'>java.io.InputStream</a><br/><a href='source/InputStream.html#java-io-InputStream-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStream-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if this input stream supports the mark and\n reset methods. ...</div><div class='long'><p>Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods. Whether or not <code>mark</code> and\n <code>reset</code> are supported is an invariant property of a\n particular input stream instance. The <code>markSupported</code> method\n of <code>InputStream</code> returns <code>false</code>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if this stream instance supports the mark\n          and reset methods; <code>false</code> otherwise.\n@see <a href=\"#!/api/java.io.InputStream-method-mark\" rel=\"java.io.InputStream-method-mark\" class=\"docClass\">java.io.InputStream.mark</a>(int)\n@see <a href=\"#!/api/java.io.InputStream-method-reset\" rel=\"java.io.InputStream-method-reset\" class=\"docClass\">java.io.InputStream.reset</a>()</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.FileInputStream'>java.io.FileInputStream</span><br/><a href='source/FileInputStream.html#java-io-FileInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FileInputStream-method-read' class='name expandable'>read</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.InputStream-method-read\" rel=\"java.io.InputStream-method-read\" class=\"docClass\">java.io.InputStream.read</a></p></div></div></div><div id='method-reset' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.io.InputStream' rel='java.io.InputStream' class='defined-in docClass'>java.io.InputStream</a><br/><a href='source/InputStream.html#java-io-InputStream-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.InputStream-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Repositions this stream to the position at the time the\n mark method was last called on this input stream. ...</div><div class='long'><p>Repositions this stream to the position at the time the\n <code>mark</code> method was last called on this input stream.</p>\n\n<p> <p> The general contract of <code>reset</code> is:</p>\n\n<p> <ul>\n <li> If the method <code>markSupported</code> returns\n <code>true</code>, then:</li></ul></p>\n\n<pre><code> &lt;ul&gt;&lt;li&gt; If the method &lt;code&gt;mark&lt;/code&gt; has not been called since\n the stream was created, or the number of bytes read from the stream\n since &lt;code&gt;mark&lt;/code&gt; was last called is larger than the argument\n to &lt;code&gt;mark&lt;/code&gt; at that last call, then an\n &lt;code&gt;IOException&lt;/code&gt; might be thrown.\n\n &lt;li&gt; If such an &lt;code&gt;IOException&lt;/code&gt; is not thrown, then the\n stream is reset to a state such that all the bytes read since the\n most recent call to &lt;code&gt;mark&lt;/code&gt; (or since the start of the\n file, if &lt;code&gt;mark&lt;/code&gt; has not been called) will be resupplied\n to subsequent callers of the &lt;code&gt;read&lt;/code&gt; method, followed by\n any bytes that otherwise would have been the next input data as of\n the time of the call to &lt;code&gt;reset&lt;/code&gt;. &lt;/ul&gt;\n</code></pre>\n\n<p> <li> If the method <code>markSupported</code> returns\n <code>false</code>, then:</li></p>\n\n<pre><code> &lt;ul&gt;&lt;li&gt; The call to &lt;code&gt;reset&lt;/code&gt; may throw an\n &lt;code&gt;IOException&lt;/code&gt;.\n\n &lt;li&gt; If an &lt;code&gt;IOException&lt;/code&gt; is not thrown, then the stream\n is reset to a fixed state that depends on the particular type of the\n input stream and how it was created. The bytes that will be supplied\n to subsequent callers of the &lt;code&gt;read&lt;/code&gt; method depend on the\n particular type of the input stream. &lt;/ul&gt;&lt;/ul&gt;\n</code></pre>\n\n<p> <p>The method <code>reset</code> for class <code>InputStream</code>\n does nothing except throw an <code>IOException</code>.\n@exception IOException  if this stream has not been marked or if the\n               mark has been invalidated.\n@see <a href=\"#!/api/java.io.InputStream-method-mark\" rel=\"java.io.InputStream-method-mark\" class=\"docClass\">java.io.InputStream.mark</a>(int)\n@see <a href=\"#!/api/java.io.IOException\" rel=\"java.io.IOException\" class=\"docClass\">java.io.IOException</a></p>\n</div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.io.FileInputStream'>java.io.FileInputStream</span><br/><a href='source/FileInputStream.html#java-io-FileInputStream-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.io.FileInputStream-method-skip' class='name expandable'>skip</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.io.InputStream-method-skip\" rel=\"java.io.InputStream-method-skip\" class=\"docClass\">java.io.InputStream.skip</a></p></div></div></div></div></div></div></div>","meta":{}});