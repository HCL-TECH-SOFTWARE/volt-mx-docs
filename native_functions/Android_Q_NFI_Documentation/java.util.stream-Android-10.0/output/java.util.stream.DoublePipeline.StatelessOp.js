Ext.data.JsonP.java_util_stream_DoublePipeline_StatelessOp({"tagname":"class","name":"java.util.stream.DoublePipeline.StatelessOp","autodetected":{},"files":[{"filename":"StatelessOp.js","href":"StatelessOp.html#java-util-stream-DoublePipeline-StatelessOp"}],"extends":"java.util.stream.DoublePipeline","params":[{"tagname":"params","doc":"<p><E_IN> type of elements in the upstream source\n Visible for CTS testing only (OpenJDK8 tests).</E_IN></p>\n"}],"since":"1.8","hide":true,"members":[{"name":"allMatch","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-allMatch","meta":{}},{"name":"anyMatch","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-anyMatch","meta":{}},{"name":"average","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-average","meta":{}},{"name":"boxed","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-boxed","meta":{}},{"name":"close","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-close","meta":{}},{"name":"collect","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-collect","meta":{}},{"name":"count","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-count","meta":{}},{"name":"distinct","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-distinct","meta":{}},{"name":"evaluate","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-evaluate","meta":{}},{"name":"evaluateToArrayNode","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-evaluateToArrayNode","meta":{}},{"name":"evaluateToNode","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-evaluateToNode","meta":{}},{"name":"filter","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-filter","meta":{}},{"name":"findAny","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-findAny","meta":{}},{"name":"findFirst","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-findFirst","meta":{}},{"name":"flatMap","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-flatMap","meta":{}},{"name":"forEach","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-forEach","meta":{}},{"name":"forEachOrdered","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-forEachOrdered","meta":{}},{"name":"forEachWithCancel","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-forEachWithCancel","meta":{}},{"name":"getOutputShape","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-getOutputShape","meta":{}},{"name":"getStreamAndOpFlags","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-getStreamAndOpFlags","meta":{}},{"name":"getStreamFlags","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-getStreamFlags","meta":{}},{"name":"isParallel","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-isParallel","meta":{}},{"name":"iterator","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-iterator","meta":{}},{"name":"lazySpliterator","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-lazySpliterator","meta":{}},{"name":"limit","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-limit","meta":{}},{"name":"makeNodeBuilder","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-makeNodeBuilder","meta":{}},{"name":"map","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-map","meta":{}},{"name":"mapToInt","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-mapToInt","meta":{}},{"name":"mapToLong","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-mapToLong","meta":{}},{"name":"mapToObj","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-mapToObj","meta":{}},{"name":"max","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-max","meta":{}},{"name":"min","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-min","meta":{}},{"name":"noneMatch","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-noneMatch","meta":{}},{"name":"onClose","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-onClose","meta":{}},{"name":"opEvaluateParallel","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-opEvaluateParallel","meta":{}},{"name":"opEvaluateParallelLazy","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-opEvaluateParallelLazy","meta":{}},{"name":"opIsStateful","tagname":"method","owner":"java.util.stream.DoublePipeline.StatelessOp","id":"method-opIsStateful","meta":{}},{"name":"opWrapSink","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-opWrapSink","meta":{}},{"name":"parallel","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-parallel","meta":{}},{"name":"peek","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-peek","meta":{}},{"name":"reduce","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-reduce","meta":{}},{"name":"sequential","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-sequential","meta":{}},{"name":"skip","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-skip","meta":{}},{"name":"sorted","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-sorted","meta":{}},{"name":"spliterator","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-spliterator","meta":{}},{"name":"sum","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-sum","meta":{}},{"name":"summaryStatistics","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-summaryStatistics","meta":{}},{"name":"toArray","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-toArray","meta":{}},{"name":"unordered","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-unordered","meta":{}},{"name":"wrap","tagname":"method","owner":"java.util.stream.DoublePipeline","id":"method-wrap","meta":{}},{"name":"wrapSink","tagname":"method","owner":"java.util.stream.AbstractPipeline","id":"method-wrapSink","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.stream.DoublePipeline.StatelessOp","short_doc":"Base class for a stateless intermediate stage of a DoubleStream. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.util.stream.PipelineHelper","java.util.stream.AbstractPipeline","java.util.stream.DoublePipeline"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.util.stream.PipelineHelper' rel='java.util.stream.PipelineHelper' class='docClass'>java.util.stream.PipelineHelper</a><div class='subclass '><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='docClass'>java.util.stream.AbstractPipeline</a><div class='subclass '><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='docClass'>java.util.stream.DoublePipeline</a><div class='subclass '><strong>java.util.stream.DoublePipeline.StatelessOp</strong></div></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/StatelessOp.html#java-util-stream-DoublePipeline-StatelessOp' target='_blank'>StatelessOp.js</a></div></pre><div class='doc-contents'><p>Base class for a stateless intermediate stage of a DoubleStream.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><E_IN> type of elements in the upstream source\n Visible for CTS testing only (OpenJDK8 tests).</E_IN></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-allMatch' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-allMatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-allMatch' class='name expandable'>allMatch</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-anyMatch' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-anyMatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-anyMatch' class='name expandable'>anyMatch</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-average' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-average' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-average' class='name expandable'>average</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc}\n@implNote The {@code double} format can represent all\n consecutive integers in the range -253 to\n 253. ...</div><div class='long'><p>{@inheritDoc}\n@implNote The {@code double} format can represent all\n consecutive integers in the range -2<sup>53</sup> to\n 2<sup>53</sup>. If the pipeline has more than 2<sup>53</sup>\n values, the divisor in the average computation will saturate at\n 2<sup>53</sup>, leading to additional numerical errors.</p>\n</div></div></div><div id='method-boxed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-boxed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-boxed' class='name expandable'>boxed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-close' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-collect' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-collect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-collect' class='name expandable'>collect</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-count' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-count' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-count' class='name expandable'>count</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-distinct' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-distinct' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-distinct' class='name expandable'>distinct</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-evaluate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-evaluate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-evaluate' class='name expandable'>evaluate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.PipelineHelper-method-evaluate\" rel=\"java.util.stream.PipelineHelper-method-evaluate\" class=\"docClass\">java.util.stream.PipelineHelper.evaluate</a></p></div></div></div><div id='method-evaluateToArrayNode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-evaluateToArrayNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-evaluateToArrayNode' class='name expandable'>evaluateToArrayNode</a>( <span class='pre'>generator</span> ) : Object {java.util.stream.Node}<span class=\"signature\"></span></div><div class='description'><div class='short'>Collect the elements output from the pipeline stage. ...</div><div class='long'><p>Collect the elements output from the pipeline stage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>generator</span> : Object {java.util.function.IntFunction}<div class='sub-desc'><p>the array generator to be used to create array instances</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.stream.Node}</span><div class='sub-desc'><p>a flat array-backed Node that holds the collected output elements</p>\n</div></li></ul></div></div></div><div id='method-evaluateToNode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-evaluateToNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-evaluateToNode' class='name expandable'>evaluateToNode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-evaluateToNode\" rel=\"java.util.stream.AbstractPipeline-method-evaluateToNode\" class=\"docClass\">java.util.stream.AbstractPipeline.evaluateToNode</a></p></div></div></div><div id='method-filter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-filter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-filter' class='name expandable'>filter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-findAny' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-findAny' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-findAny' class='name expandable'>findAny</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-findFirst' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-findFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-findFirst' class='name expandable'>findFirst</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-flatMap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-flatMap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-flatMap' class='name expandable'>flatMap</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-forEach' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-forEach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-forEach' class='name expandable'>forEach</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-forEachOrdered' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-forEachOrdered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-forEachOrdered' class='name expandable'>forEachOrdered</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-forEachWithCancel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-forEachWithCancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-forEachWithCancel' class='name expandable'>forEachWithCancel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-forEachWithCancel\" rel=\"java.util.stream.AbstractPipeline-method-forEachWithCancel\" class=\"docClass\">java.util.stream.AbstractPipeline.forEachWithCancel</a></p></div></div></div><div id='method-getOutputShape' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-getOutputShape' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-getOutputShape' class='name expandable'>getOutputShape</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-getOutputShape\" rel=\"java.util.stream.AbstractPipeline-method-getOutputShape\" class=\"docClass\">java.util.stream.AbstractPipeline.getOutputShape</a></p></div></div></div><div id='method-getStreamAndOpFlags' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-getStreamAndOpFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-getStreamAndOpFlags' class='name expandable'>getStreamAndOpFlags</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.PipelineHelper-method-getStreamAndOpFlags\" rel=\"java.util.stream.PipelineHelper-method-getStreamAndOpFlags\" class=\"docClass\">java.util.stream.PipelineHelper.getStreamAndOpFlags</a></p></div></div></div><div id='method-getStreamFlags' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-getStreamFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-getStreamFlags' class='name expandable'>getStreamFlags</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the composition of stream flags of the stream source and all\n intermediate operations. ...</div><div class='long'><p>Returns the composition of stream flags of the stream source and all\n intermediate operations.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the composition of stream flags of the stream source and all\n         intermediate operations\n@see StreamOpFlag</p>\n</div></li></ul></div></div></div><div id='method-isParallel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-isParallel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-isParallel' class='name expandable'>isParallel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-iterator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-iterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-iterator' class='name expandable'>iterator</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-lazySpliterator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-lazySpliterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-lazySpliterator' class='name expandable'>lazySpliterator</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-lazySpliterator\" rel=\"java.util.stream.AbstractPipeline-method-lazySpliterator\" class=\"docClass\">java.util.stream.AbstractPipeline.lazySpliterator</a></p></div></div></div><div id='method-limit' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-limit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-limit' class='name expandable'>limit</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-makeNodeBuilder' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-makeNodeBuilder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-makeNodeBuilder' class='name expandable'>makeNodeBuilder</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-makeNodeBuilder\" rel=\"java.util.stream.AbstractPipeline-method-makeNodeBuilder\" class=\"docClass\">java.util.stream.AbstractPipeline.makeNodeBuilder</a></p></div></div></div><div id='method-map' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-map' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-map' class='name expandable'>map</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-mapToInt' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-mapToInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-mapToInt' class='name expandable'>mapToInt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-mapToLong' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-mapToLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-mapToLong' class='name expandable'>mapToLong</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-mapToObj' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-mapToObj' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-mapToObj' class='name expandable'>mapToObj</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-max' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-max' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-max' class='name expandable'>max</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-min' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-min' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-min' class='name expandable'>min</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-noneMatch' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-noneMatch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-noneMatch' class='name expandable'>noneMatch</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onClose' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-onClose' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-onClose' class='name expandable'>onClose</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-opEvaluateParallel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-opEvaluateParallel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-opEvaluateParallel' class='name expandable'>opEvaluateParallel</a>( <span class='pre'>helper, spliterator, generator, generator</span> ) : Object {java.util.stream.Node}<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs a parallel evaluation of the operation using the specified\n {@code PipelineHelper} which describes the upstr...</div><div class='long'><p>Performs a parallel evaluation of the operation using the specified\n {@code PipelineHelper} which describes the upstream intermediate\n operations.  Only called on stateful operations.  If <a href=\"#!/api/java.util.stream.AbstractPipeline-method-opIsStateful\" rel=\"java.util.stream.AbstractPipeline-method-opIsStateful\" class=\"docClass\">opIsStateful</a>() returns true then implementations must override the\n default implementation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>helper</span> : Object {java.util.stream.PipelineHelper}<div class='sub-desc'><p>the pipeline helper describing the pipeline stages</p>\n</div></li><li><span class='pre'>spliterator</span> : Object {java.util.Spliterator}<div class='sub-desc'><p>the source {@code Spliterator}</p>\n</div></li><li><span class='pre'>generator</span> : Object {java.util.function.IntFunction}<div class='sub-desc'><p>the array generator</p>\n</div></li><li><span class='pre'>generator</span> : Object<div class='sub-desc'><p>the array generator</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.stream.Node}</span><div class='sub-desc'><p>a {@code Node} describing the result of the evaluation</p>\n</div></li></ul></div></div></div><div id='method-opEvaluateParallelLazy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-opEvaluateParallelLazy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-opEvaluateParallelLazy' class='name expandable'>opEvaluateParallelLazy</a>( <span class='pre'>helper, spliterator, spliterator</span> ) : Object {java.util.Spliterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a {@code Spliterator} describing a parallel evaluation of the\n operation, using the specified {@code Pipeline...</div><div class='long'><p>Returns a {@code Spliterator} describing a parallel evaluation of the\n operation, using the specified {@code PipelineHelper} which describes the\n upstream intermediate operations.  Only called on stateful operations.\n It is not necessary (though acceptable) to do a full computation of the\n result here; it is preferable, if possible, to describe the result via a\n lazily evaluated spliterator.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>helper</span> : Object {java.util.stream.PipelineHelper}<div class='sub-desc'><p>the pipeline helper</p>\n</div></li><li><span class='pre'>spliterator</span> : Object {java.util.Spliterator}<div class='sub-desc'><p>the source {@code Spliterator}</p>\n</div></li><li><span class='pre'>spliterator</span> : Object<div class='sub-desc'><p>the source {@code Spliterator}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Spliterator}</span><div class='sub-desc'><p>a {@code Spliterator} describing the result of the evaluation</p>\n</div></li></ul></div></div></div><div id='method-opIsStateful' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.DoublePipeline.StatelessOp'>java.util.stream.DoublePipeline.StatelessOp</span><br/><a href='source/StatelessOp.html#java-util-stream-DoublePipeline-StatelessOp-method-opIsStateful' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline.StatelessOp-method-opIsStateful' class='name expandable'>opIsStateful</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-opIsStateful\" rel=\"java.util.stream.AbstractPipeline-method-opIsStateful\" class=\"docClass\">java.util.stream.AbstractPipeline.opIsStateful</a></p></div></div></div><div id='method-opWrapSink' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-opWrapSink' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-opWrapSink' class='name expandable'>opWrapSink</a>( <span class='pre'>flags, sink, sink</span> ) : Object {java.util.stream.Sink}<span class=\"signature\"></span></div><div class='description'><div class='short'>Accepts a {@code Sink} which will receive the results of this operation,\n and return a {@code Sink} which accepts ele...</div><div class='long'><p>Accepts a {@code Sink} which will receive the results of this operation,\n and return a {@code Sink} which accepts elements of the input type of\n this operation and which performs the operation, passing the results to\n the provided {@code Sink}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>The combined stream and operation flags up to, but not\n        including, this operation</p>\n</div></li><li><span class='pre'>sink</span> : Object {java.util.stream.Sink}<div class='sub-desc'><p>sink to which elements should be sent after processing</p>\n</div></li><li><span class='pre'>sink</span> : Object<div class='sub-desc'><p>sink to which elements should be sent after processing</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.stream.Sink}</span><div class='sub-desc'><p>a sink which accepts elements, perform the operation upon\n         each element, and passes the results (if any) to the provided\n         {@code Sink}.</p>\n</div></li></ul></div></div></div><div id='method-parallel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-parallel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-parallel' class='name expandable'>parallel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-peek' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-peek' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-peek' class='name expandable'>peek</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-reduce' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-reduce' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-reduce' class='name expandable'>reduce</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-sequential' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-sequential' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-sequential' class='name expandable'>sequential</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-skip' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-skip' class='name expandable'>skip</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-sorted' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-sorted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-sorted' class='name expandable'>sorted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-spliterator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-spliterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-spliterator' class='name expandable'>spliterator</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-spliterator\" rel=\"java.util.stream.AbstractPipeline-method-spliterator\" class=\"docClass\">java.util.stream.AbstractPipeline.spliterator</a></p></div></div></div><div id='method-sum' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-sum' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-sum' class='name expandable'>sum</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-summaryStatistics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-summaryStatistics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-summaryStatistics' class='name expandable'>summaryStatistics</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-toArray' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-toArray' class='name expandable'>toArray</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-unordered' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-unordered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-unordered' class='name expandable'>unordered</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-wrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.DoublePipeline' rel='java.util.stream.DoublePipeline' class='defined-in docClass'>java.util.stream.DoublePipeline</a><br/><a href='source/DoublePipeline.html#java-util-stream-DoublePipeline-method-wrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoublePipeline-method-wrap' class='name expandable'>wrap</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.AbstractPipeline-method-wrap\" rel=\"java.util.stream.AbstractPipeline-method-wrap\" class=\"docClass\">java.util.stream.AbstractPipeline.wrap</a></p></div></div></div><div id='method-wrapSink' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.util.stream.AbstractPipeline' rel='java.util.stream.AbstractPipeline' class='defined-in docClass'>java.util.stream.AbstractPipeline</a><br/><a href='source/AbstractPipeline.html#java-util-stream-AbstractPipeline-method-wrapSink' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.AbstractPipeline-method-wrapSink' class='name expandable'>wrapSink</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/java.util.stream.PipelineHelper-method-wrapSink\" rel=\"java.util.stream.PipelineHelper-method-wrapSink\" class=\"docClass\">java.util.stream.PipelineHelper.wrapSink</a></p></div></div></div></div></div></div></div>","meta":{}});