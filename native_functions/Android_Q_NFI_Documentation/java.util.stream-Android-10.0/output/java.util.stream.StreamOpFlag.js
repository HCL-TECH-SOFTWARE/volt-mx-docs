Ext.data.JsonP.java_util_stream_StreamOpFlag({"tagname":"class","name":"java.util.stream.StreamOpFlag","autodetected":{},"files":[{"filename":"StreamOpFlag.js","href":"StreamOpFlag.html#java-util-stream-StreamOpFlag"}],"extends":"java.lang.Enum","since":"1.8","hide":true,"members":[{"name":"DISTINCT","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-DISTINCT","meta":{}},{"name":"INITIAL_OPS_VALUE","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-INITIAL_OPS_VALUE","meta":{}},{"name":"IS_DISTINCT","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-IS_DISTINCT","meta":{}},{"name":"IS_ORDERED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-IS_ORDERED","meta":{}},{"name":"IS_SHORT_CIRCUIT","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-IS_SHORT_CIRCUIT","meta":{}},{"name":"IS_SIZED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-IS_SIZED","meta":{}},{"name":"IS_SORTED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-IS_SORTED","meta":{}},{"name":"NOT_DISTINCT","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-NOT_DISTINCT","meta":{}},{"name":"NOT_ORDERED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-NOT_ORDERED","meta":{}},{"name":"NOT_SIZED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-NOT_SIZED","meta":{}},{"name":"NOT_SORTED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-NOT_SORTED","meta":{}},{"name":"OP_MASK","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-OP_MASK","meta":{}},{"name":"ORDERED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-ORDERED","meta":{}},{"name":"SHORT_CIRCUIT","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-SHORT_CIRCUIT","meta":{}},{"name":"SIZED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-SIZED","meta":{}},{"name":"SORTED","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-SORTED","meta":{}},{"name":"SPLITERATOR_CHARACTERISTICS_MASK","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-SPLITERATOR_CHARACTERISTICS_MASK","meta":{}},{"name":"STREAM_MASK","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-STREAM_MASK","meta":{}},{"name":"TERMINAL_OP_MASK","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-TERMINAL_OP_MASK","meta":{}},{"name":"UPSTREAM_TERMINAL_OP_MASK","tagname":"property","owner":"java.util.stream.StreamOpFlag","id":"property-UPSTREAM_TERMINAL_OP_MASK","meta":{}},{"name":"canSet","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-canSet","meta":{}},{"name":"clear","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-clear","meta":{}},{"name":"combineOpFlags","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-combineOpFlags","meta":{}},{"name":"fromCharacteristics","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-fromCharacteristics","meta":{}},{"name":"isCleared","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-isCleared","meta":{}},{"name":"isKnown","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-isKnown","meta":{}},{"name":"isPreserved","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-isPreserved","meta":{}},{"name":"isStreamFlag","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-isStreamFlag","meta":{}},{"name":"set","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-set","meta":{}},{"name":"toCharacteristics","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-toCharacteristics","meta":{}},{"name":"toStreamFlags","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-toStreamFlags","meta":{}},{"name":"valueOf","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-valueOf","meta":{}},{"name":"values","tagname":"method","owner":"java.util.stream.StreamOpFlag","id":"method-values","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.stream.StreamOpFlag","short_doc":"Flags corresponding to characteristics of streams and operations. ...","classIcon":"icon-class","superclasses":["java.lang.Enum"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Enum<div class='subclass '><strong>java.util.stream.StreamOpFlag</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag' target='_blank'>StreamOpFlag.js</a></div></pre><div class='doc-contents'><p>Flags corresponding to characteristics of streams and operations. Flags are\n utilized by the stream framework to control, specialize or optimize\n computation.</p>\n\n<p> <p>\n Stream flags may be used to describe characteristics of several different\n entities associated with streams: stream sources, intermediate operations,\n and terminal operations.  Not all stream flags are meaningful for all\n entities; the following table summarizes which flags are meaningful in what\n contexts:</p>\n\n<p> <div>\n <table>\n   <caption>Type Characteristics</caption>\n   <thead class=\"tableSubHeadingColor\">\n     <tr>\n       <th colspan=\"2\">&nbsp;</th>\n       <th>{@code DISTINCT}</th>\n       <th>{@code SORTED}</th>\n       <th>{@code ORDERED}</th>\n       <th>{@code SIZED}</th>\n       <th>{@code SHORT_CIRCUIT}</th>\n     </tr>\n   </thead>\n   <tbody>\n      <tr>\n        <th colspan=\"2\" class=\"tableSubHeadingColor\">Stream source</th>\n        <td>Y</td>\n        <td>Y</td>\n        <td>Y</td>\n        <td>Y</td>\n        <td>N</td>\n      </tr>\n      <tr>\n        <th colspan=\"2\" class=\"tableSubHeadingColor\">Intermediate operation</th>\n        <td>PCI</td>\n        <td>PCI</td>\n        <td>PCI</td>\n        <td>PC</td>\n        <td>PI</td>\n      </tr>\n      <tr>\n        <th colspan=\"2\" class=\"tableSubHeadingColor\">Terminal operation</th>\n        <td>N</td>\n        <td>N</td>\n        <td>PC</td>\n        <td>N</td>\n        <td>PI</td>\n      </tr>\n   </tbody>\n   <tfoot>\n       <tr>\n         <th class=\"tableSubHeadingColor\" colspan=\"2\">Legend</th>\n         <th colspan=\"6\" rowspan=\"7\">&nbsp;</th>\n       </tr>\n       <tr>\n         <th class=\"tableSubHeadingColor\">Flag</th>\n         <th class=\"tableSubHeadingColor\">Meaning</th>\n         <th colspan=\"6\"></th>\n       </tr>\n       <tr><td>Y</td><td>Allowed</td></tr>\n       <tr><td>N</td><td>Invalid</td></tr>\n       <tr><td>P</td><td>Preserves</td></tr>\n       <tr><td>C</td><td>Clears</td></tr>\n       <tr><td>I</td><td>Injects</td></tr>\n   </tfoot>\n </table>\n </div></p>\n\n<p> <p>In the above table, \"PCI\" means \"may preserve, clear, or inject\"; \"PC\"\n means \"may preserve or clear\", \"PI\" means \"may preserve or inject\", and \"N\"\n means \"not valid\".</p>\n\n<p> <p>Stream flags are represented by unioned bit sets, so that a single word\n may describe all the characteristics of a given stream entity, and that, for\n example, the flags for a stream source can be efficiently combined with the\n flags for later operations on that stream.</p>\n\n<p> <p>The bit masks <a href=\"#!/api/java.util.stream.StreamOpFlag-property-STREAM_MASK\" rel=\"java.util.stream.StreamOpFlag-property-STREAM_MASK\" class=\"docClass\">STREAM_MASK</a>, <a href=\"#!/api/java.util.stream.StreamOpFlag-property-OP_MASK\" rel=\"java.util.stream.StreamOpFlag-property-OP_MASK\" class=\"docClass\">OP_MASK</a>, and\n <a href=\"#!/api/java.util.stream.StreamOpFlag-property-TERMINAL_OP_MASK\" rel=\"java.util.stream.StreamOpFlag-property-TERMINAL_OP_MASK\" class=\"docClass\">TERMINAL_OP_MASK</a> can be ANDed with a bit set of stream flags to\n produce a mask containing only the valid flags for that entity type.</p>\n\n<p> <p>When describing a stream source, one only need describe what\n characteristics that stream has; when describing a stream operation, one need\n describe whether the operation preserves, injects, or clears that\n characteristic.  Accordingly, two bits are used for each flag, so as to allow\n representing not only the presence of of a characteristic, but how an\n operation modifies that characteristic.  There are two common forms in which\n flag bits are combined into an {@code int} bit set.  <em>Stream flags</em>\n are a unioned bit set constructed by ORing the enum characteristic values of\n <a href=\"#!/api/java.util.stream.StreamOpFlag-method-set\" rel=\"java.util.stream.StreamOpFlag-method-set\" class=\"docClass\">set</a>() (or, more commonly, ORing the corresponding static named\n constants prefixed with {@code IS<em>}).  <em>Operation flags</em> are a unioned\n bit set constructed by ORing the enum characteristic values of <a href=\"#!/api/java.util.stream.StreamOpFlag-method-set\" rel=\"java.util.stream.StreamOpFlag-method-set\" class=\"docClass\">set</a>()\n or <a href=\"#!/api/java.util.stream.StreamOpFlag-method-clear\" rel=\"java.util.stream.StreamOpFlag-method-clear\" class=\"docClass\">clear</a>() (to inject, or clear, respectively, the corresponding\n flag), or more commonly ORing the corresponding named constants prefixed with\n {@code IS</em>} or {@code NOT<em>}.  Flags that are not marked with {@code IS</em>} or\n {@code NOT_} are implicitly treated as preserved.  Care must be taken when\n combining bitsets that the correct combining operations are applied in the\n correct order.</p>\n\n<p> <p>\n With the exception of <a href=\"#!/api/java.util.stream.StreamOpFlag-property-SHORT_CIRCUIT\" rel=\"java.util.stream.StreamOpFlag-property-SHORT_CIRCUIT\" class=\"docClass\">SHORT_CIRCUIT</a>, stream characteristics can be\n derived from the equivalent java.util.Spliterator characteristics:\n java.util.Spliterator.DISTINCT, java.util.Spliterator.SORTED,\n java.util.Spliterator.ORDERED, and\n java.util.Spliterator.SIZED.  A spliterator characteristics bit set\n can be converted to stream flags using the method\n fromCharacteristics(java.util.Spliterator) and converted back using\n <a href=\"#!/api/java.util.stream.StreamOpFlag-method-toCharacteristics\" rel=\"java.util.stream.StreamOpFlag-method-toCharacteristics\" class=\"docClass\">toCharacteristics</a>(int).  (The bit set\n <a href=\"#!/api/java.util.stream.StreamOpFlag-property-SPLITERATOR_CHARACTERISTICS_MASK\" rel=\"java.util.stream.StreamOpFlag-property-SPLITERATOR_CHARACTERISTICS_MASK\" class=\"docClass\">SPLITERATOR_CHARACTERISTICS_MASK</a> is used to AND with a bit set to\n produce a valid spliterator characteristics bit set that can be converted to\n stream flags.)</p>\n\n<p> <p>\n The source of a stream encapsulates a spliterator. The characteristics of\n that source spliterator when transformed to stream flags will be a proper\n subset of stream flags of that stream.\n For example:\n <pre> {@code\n     Spliterator s = ...;\n     Stream stream = Streams.stream(s);\n     flagsFromSplitr = fromCharacteristics(s.characteristics());\n     assert(flagsFromSplitr &amp; stream.getStreamFlags() == flagsFromSplitr);\n }</pre></p>\n\n<p> <p>\n An intermediate operation, performed on an input stream to create a new\n output stream, may preserve, clear or inject stream or operation\n characteristics.  Similarly, a terminal operation, performed on an input\n stream to produce an output result may preserve, clear or inject stream or\n operation characteristics.  Preservation means that if that characteristic\n is present on the input, then it is also present on the output.  Clearing\n means that the characteristic is not present on the output regardless of the\n input.  Injection means that the characteristic is present on the output\n regardless of the input.  If a characteristic is not cleared or injected then\n it is implicitly preserved.</p>\n\n<p> <p>\n A pipeline consists of a stream source encapsulating a spliterator, one or\n more intermediate operations, and finally a terminal operation that produces\n a result.  At each stage of the pipeline, a combined stream and operation\n flags can be calculated, using int).  Such flags\n ensure that preservation, clearing and injecting information is retained at\n each stage.</p>\n\n<p> The combined stream and operation flags for the source stage of the pipeline\n is calculated as follows:\n <pre> {@code\n     int flagsForSourceStage = combineOpFlags(sourceFlags, INITIAL_OPS_VALUE);\n }</pre></p>\n\n<p> The combined stream and operation flags of each subsequent intermediate\n operation stage in the pipeline is calculated as follows:\n <pre> {@code\n     int flagsForThisStage = combineOpFlags(flagsForPreviousStage, thisOpFlags);\n }</pre></p>\n\n<p> Finally the flags output from the last intermediate operation of the pipeline\n are combined with the operation flags of the terminal operation to produce\n the flags output from the pipeline.</p>\n\n<p> <p>Those flags can then be used to apply optimizations. For example, if\n {@code SIZED.isKnown(flags)} returns true then the stream size remains\n constant throughout the pipeline, this information can be utilized to\n pre-allocate data structures and combined with\n java.util.Spliterator.SUBSIZED that information can be utilized to\n perform concurrent in-place updates into a shared array.</p>\n\n<p> For specific details see the <a href=\"#!/api/java.util.stream.AbstractPipeline\" rel=\"java.util.stream.AbstractPipeline\" class=\"docClass\">java.util.stream.AbstractPipeline</a> constructors.</p>\n\n<p> Visible for CTS testing only (OpenJDK8 tests).</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DISTINCT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-DISTINCT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-DISTINCT' class='name expandable'>DISTINCT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Characteristic value signifying that, for each pair of\nencountered elements in a stream {@code x, y}, {@code !x.equal...</div><div class='long'><p>Characteristic value signifying that, for each pair of\nencountered elements in a stream {@code x, y}, {@code !x.equals(y)}.</p>\n\n<p><p>\nA stream may have this value or an intermediate operation can preserve,\nclear or inject this value.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-INITIAL_OPS_VALUE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-INITIAL_OPS_VALUE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-INITIAL_OPS_VALUE' class='name expandable'>INITIAL_OPS_VALUE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The initial value to be combined with the stream flags of the first\nstream in the pipeline. ...</div><div class='long'><p>The initial value to be combined with the stream flags of the first\nstream in the pipeline.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IS_DISTINCT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-IS_DISTINCT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-IS_DISTINCT' class='name expandable'>IS_DISTINCT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to set or inject DISTINCT. ...</div><div class='long'><p>The bit value to set or inject <a href=\"#!/api/java.util.stream.StreamOpFlag-property-DISTINCT\" rel=\"java.util.stream.StreamOpFlag-property-DISTINCT\" class=\"docClass\">DISTINCT</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IS_ORDERED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-IS_ORDERED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-IS_ORDERED' class='name expandable'>IS_ORDERED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to set or inject ORDERED. ...</div><div class='long'><p>The bit value to set or inject <a href=\"#!/api/java.util.stream.StreamOpFlag-property-ORDERED\" rel=\"java.util.stream.StreamOpFlag-property-ORDERED\" class=\"docClass\">ORDERED</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IS_SHORT_CIRCUIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-IS_SHORT_CIRCUIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-IS_SHORT_CIRCUIT' class='name expandable'>IS_SHORT_CIRCUIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to inject SHORT_CIRCUIT. ...</div><div class='long'><p>The bit value to inject <a href=\"#!/api/java.util.stream.StreamOpFlag-property-SHORT_CIRCUIT\" rel=\"java.util.stream.StreamOpFlag-property-SHORT_CIRCUIT\" class=\"docClass\">SHORT_CIRCUIT</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IS_SIZED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-IS_SIZED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-IS_SIZED' class='name expandable'>IS_SIZED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to set SIZED. ...</div><div class='long'><p>The bit value to set <a href=\"#!/api/java.util.stream.StreamOpFlag-property-SIZED\" rel=\"java.util.stream.StreamOpFlag-property-SIZED\" class=\"docClass\">SIZED</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IS_SORTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-IS_SORTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-IS_SORTED' class='name expandable'>IS_SORTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to set or inject SORTED. ...</div><div class='long'><p>The bit value to set or inject <a href=\"#!/api/java.util.stream.StreamOpFlag-property-SORTED\" rel=\"java.util.stream.StreamOpFlag-property-SORTED\" class=\"docClass\">SORTED</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-NOT_DISTINCT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-NOT_DISTINCT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-NOT_DISTINCT' class='name expandable'>NOT_DISTINCT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to clear DISTINCT. ...</div><div class='long'><p>The bit value to clear <a href=\"#!/api/java.util.stream.StreamOpFlag-property-DISTINCT\" rel=\"java.util.stream.StreamOpFlag-property-DISTINCT\" class=\"docClass\">DISTINCT</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-NOT_ORDERED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-NOT_ORDERED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-NOT_ORDERED' class='name expandable'>NOT_ORDERED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to clear ORDERED. ...</div><div class='long'><p>The bit value to clear <a href=\"#!/api/java.util.stream.StreamOpFlag-property-ORDERED\" rel=\"java.util.stream.StreamOpFlag-property-ORDERED\" class=\"docClass\">ORDERED</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-NOT_SIZED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-NOT_SIZED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-NOT_SIZED' class='name expandable'>NOT_SIZED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to clear SIZED. ...</div><div class='long'><p>The bit value to clear <a href=\"#!/api/java.util.stream.StreamOpFlag-property-SIZED\" rel=\"java.util.stream.StreamOpFlag-property-SIZED\" class=\"docClass\">SIZED</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-NOT_SORTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-NOT_SORTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-NOT_SORTED' class='name expandable'>NOT_SORTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit value to clear SORTED. ...</div><div class='long'><p>The bit value to clear <a href=\"#!/api/java.util.stream.StreamOpFlag-property-SORTED\" rel=\"java.util.stream.StreamOpFlag-property-SORTED\" class=\"docClass\">SORTED</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-OP_MASK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-OP_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-OP_MASK' class='name expandable'>OP_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit mask for intermediate operation flags. ...</div><div class='long'><p>The bit mask for intermediate operation flags.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-ORDERED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-ORDERED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-ORDERED' class='name expandable'>ORDERED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Characteristic value signifying that an encounter order is\ndefined for stream elements. ...</div><div class='long'><p>Characteristic value signifying that an encounter order is\ndefined for stream elements.</p>\n\n<p><p>\nA stream can have this value, an intermediate operation can preserve,\nclear or inject this value, or a terminal operation can preserve or clear\nthis value.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SHORT_CIRCUIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-SHORT_CIRCUIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-SHORT_CIRCUIT' class='name expandable'>SHORT_CIRCUIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Characteristic value signifying that an operation may short-circuit the\nstream. ...</div><div class='long'><p>Characteristic value signifying that an operation may short-circuit the\nstream.</p>\n\n<p><p>\nAn intermediate operation can preserve or inject this value,\nor a terminal operation can preserve or inject this value.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SIZED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-SIZED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-SIZED' class='name expandable'>SIZED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Characteristic value signifying that size of the stream\nis of a known finite size that is equal to the known finite\ns...</div><div class='long'><p>Characteristic value signifying that size of the stream\nis of a known finite size that is equal to the known finite\nsize of the source spliterator input to the first stream\nin the pipeline.</p>\n\n<p><p>\nA stream can have this value or an intermediate operation can preserve or\nclear this value.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SORTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-SORTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-SORTED' class='name expandable'>SORTED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Characteristic value signifying that encounter order follows a natural\nsort order of comparable elements. ...</div><div class='long'><p>Characteristic value signifying that encounter order follows a natural\nsort order of comparable elements.</p>\n\n<p><p>\nA stream can have this value or an intermediate operation can preserve,\nclear or inject this value.\n<p>\nNote: The java.util.Spliterator.SORTED characteristic can define\na sort order with an associated non-null comparator.  Augmenting flag\nstate with addition properties such that those properties can be passed\nto operations requires some disruptive changes for a singular use-case.\nFurthermore, comparing comparators for equality beyond that of identity\nis likely to be unreliable.  Therefore the {@code SORTED} characteristic\nfor a defined non-natural sort order is not mapped internally to the\n{@code SORTED} flag.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SPLITERATOR_CHARACTERISTICS_MASK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-SPLITERATOR_CHARACTERISTICS_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-SPLITERATOR_CHARACTERISTICS_MASK' class='name expandable'>SPLITERATOR_CHARACTERISTICS_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit mask for spliterator characteristics ...</div><div class='long'><p>The bit mask for spliterator characteristics</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-STREAM_MASK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-STREAM_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-STREAM_MASK' class='name expandable'>STREAM_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit mask for source stream flags. ...</div><div class='long'><p>The bit mask for source stream flags.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-TERMINAL_OP_MASK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-TERMINAL_OP_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-TERMINAL_OP_MASK' class='name expandable'>TERMINAL_OP_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit mask for terminal operation flags. ...</div><div class='long'><p>The bit mask for terminal operation flags.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-UPSTREAM_TERMINAL_OP_MASK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-property-UPSTREAM_TERMINAL_OP_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-property-UPSTREAM_TERMINAL_OP_MASK' class='name expandable'>UPSTREAM_TERMINAL_OP_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The bit mask for upstream terminal operation flags. ...</div><div class='long'><p>The bit mask for upstream terminal operation flags.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-canSet' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-canSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-canSet' class='name expandable'>canSet</a>( <span class='pre'>t</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if this flag can be set for a flag type. ...</div><div class='long'><p>Determines if this flag can be set for a flag type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>t</span> : Object {StreamOpFlag.Type}<div class='sub-desc'><p>the flag type.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this flag can be set for the flag type, otherwise false.</p>\n</div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the bitmap associated with clearing this characteristic. ...</div><div class='long'><p>Gets the bitmap associated with clearing this characteristic.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the bitmap for clearing this characteristic</p>\n</div></li></ul></div></div></div><div id='method-combineOpFlags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-combineOpFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-combineOpFlags' class='name expandable'>combineOpFlags</a>( <span class='pre'>newStreamOrOpFlags, prevCombOpFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines stream or operation flags with previously combined stream and\n operation flags to produce updated combined s...</div><div class='long'><p>Combines stream or operation flags with previously combined stream and\n operation flags to produce updated combined stream and operation flags.\n <p>\n A flag set on stream flags or injected on operation flags,\n and injected combined stream and operation flags,\n will be injected on the updated combined stream and operation flags.</p>\n\n<p> <p>\n A flag set on stream flags or injected on operation flags,\n and cleared on the combined stream and operation flags,\n will be cleared on the updated combined stream and operation flags.</p>\n\n<p> <p>\n A flag set on the stream flags or injected on operation flags,\n and preserved on the combined stream and operation flags,\n will be injected on the updated combined stream and operation flags.</p>\n\n<p> <p>\n A flag not set on the stream flags or cleared/preserved on operation\n flags, and injected on the combined stream and operation flags,\n will be injected on the updated combined stream and operation flags.</p>\n\n<p> <p>\n A flag not set on the stream flags or cleared/preserved on operation\n flags, and cleared on the combined stream and operation flags,\n will be cleared on the updated combined stream and operation flags.</p>\n\n<p> <p>\n A flag not set on the stream flags,\n and preserved on the combined stream and operation flags\n will be preserved on the updated combined stream and operation flags.</p>\n\n<p> <p>\n A flag cleared on operation flags,\n and preserved on the combined stream and operation flags\n will be cleared on the updated combined stream and operation flags.</p>\n\n<p> <p>\n A flag preserved on operation flags,\n and preserved on the combined stream and operation flags\n will be preserved on the updated combined stream and operation flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newStreamOrOpFlags</span> : Number<div class='sub-desc'><p>the stream or operation flags.</p>\n</div></li><li><span class='pre'>prevCombOpFlags</span> : Number<div class='sub-desc'><p>previously combined stream and operation flags.\n        The value {#link INITIAL_OPS_VALUE} must be used as the seed value.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the updated combined stream and operation flags.</p>\n</div></li></ul></div></div></div><div id='method-fromCharacteristics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-fromCharacteristics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-fromCharacteristics' class='name expandable'>fromCharacteristics</a>( <span class='pre'>characteristics</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts a spliterator characteristic bit set to stream flags. ...</div><div class='long'><p>Converts a spliterator characteristic bit set to stream flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>characteristics</span> : Number<div class='sub-desc'><p>the spliterator characteristic bit set.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the stream flags.</p>\n</div></li></ul></div></div></div><div id='method-isCleared' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-isCleared' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-isCleared' class='name expandable'>isCleared</a>( <span class='pre'>flags</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this flag is cleared on operation flags or combined stream and\n operation flags. ...</div><div class='long'><p>Checks if this flag is cleared on operation flags or combined stream and\n operation flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>the operation flags or combined stream and operations flags.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this flag is preserved, otherwise false.</p>\n</div></li></ul></div></div></div><div id='method-isKnown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-isKnown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-isKnown' class='name expandable'>isKnown</a>( <span class='pre'>flags</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this flag is set on stream flags, injected on operation flags,\n and injected on combined stream and operati...</div><div class='long'><p>Checks if this flag is set on stream flags, injected on operation flags,\n and injected on combined stream and operation flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>the stream flags, operation flags, or combined stream and\n        operation flags</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this flag is known, otherwise false.</p>\n</div></li></ul></div></div></div><div id='method-isPreserved' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-isPreserved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-isPreserved' class='name expandable'>isPreserved</a>( <span class='pre'>flags</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this flag is preserved on combined stream and operation flags. ...</div><div class='long'><p>Checks if this flag is preserved on combined stream and operation flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>the combined stream and operations flags.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this flag is preserved, otherwise false.</p>\n</div></li></ul></div></div></div><div id='method-isStreamFlag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-isStreamFlag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-isStreamFlag' class='name expandable'>isStreamFlag</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if this flag is a stream-based flag. ...</div><div class='long'><p>Determines if this flag is a stream-based flag.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a stream-based flag, otherwise false.</p>\n</div></li></ul></div></div></div><div id='method-set' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-set' class='name expandable'>set</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the bitmap associated with setting this characteristic. ...</div><div class='long'><p>Gets the bitmap associated with setting this characteristic.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the bitmap for setting this characteristic</p>\n</div></li></ul></div></div></div><div id='method-toCharacteristics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-toCharacteristics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-toCharacteristics' class='name expandable'>toCharacteristics</a>( <span class='pre'>streamFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts stream flags to a spliterator characteristic bit set. ...</div><div class='long'><p>Converts stream flags to a spliterator characteristic bit set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamFlags</span> : Number<div class='sub-desc'><p>the stream flags.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the spliterator characteristic bit set.</p>\n</div></li></ul></div></div></div><div id='method-toStreamFlags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-toStreamFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-toStreamFlags' class='name expandable'>toStreamFlags</a>( <span class='pre'>combOpFlags</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts combined stream and operation flags to stream flags. ...</div><div class='long'><p>Converts combined stream and operation flags to stream flags.</p>\n\n<p> <p>Each flag injected on the combined stream and operation flags will be\n set on the stream flags.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>combOpFlags</span> : Number<div class='sub-desc'><p>the combined stream and operation flags.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the stream flags.</p>\n</div></li></ul></div></div></div><div id='method-valueOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-valueOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-valueOf' class='name expandable'>valueOf</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-values' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.StreamOpFlag'>java.util.stream.StreamOpFlag</span><br/><a href='source/StreamOpFlag.html#java-util-stream-StreamOpFlag-method-values' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.StreamOpFlag-method-values' class='name expandable'>values</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});