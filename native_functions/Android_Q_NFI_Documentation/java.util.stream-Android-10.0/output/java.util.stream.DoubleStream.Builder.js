Ext.data.JsonP.java_util_stream_DoubleStream_Builder({"tagname":"class","name":"java.util.stream.DoubleStream.Builder","autodetected":{},"files":[{"filename":"Builder.js","href":"Builder.html#java-util-stream-DoubleStream-Builder"}],"since":"1.8","members":[{"name":"accept","tagname":"method","owner":"java.util.stream.DoubleStream.Builder","id":"method-accept","meta":{}},{"name":"add","tagname":"method","owner":"java.util.stream.DoubleStream.Builder","id":"method-add","meta":{}},{"name":"build","tagname":"method","owner":"java.util.stream.DoubleStream.Builder","id":"method-build","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.stream.DoubleStream.Builder","short_doc":"implements java.util.function.DoubleConsumer\n\n A mutable builder for a {@code DoubleStream}. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Builder.html#java-util-stream-DoubleStream-Builder' target='_blank'>Builder.js</a></div></pre><div class='doc-contents'><p>implements java.util.function.DoubleConsumer</p>\n\n<p> A mutable builder for a {@code DoubleStream}.</p>\n\n<p> <p>A stream builder has a lifecycle, which starts in a building\n phase, during which elements can be added, and then transitions to a built\n phase, after which elements may not be added.  The built phase\n begins when the <a href=\"#!/api/java.util.stream.DoubleStream.Builder-method-build\" rel=\"java.util.stream.DoubleStream.Builder-method-build\" class=\"docClass\">build</a>() method is called, which creates an\n ordered stream whose elements are the elements that were added to the\n stream builder, in the order they were added.</p>\n\n<p> @see DoubleStream#builder()</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-accept' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.DoubleStream.Builder'>java.util.stream.DoubleStream.Builder</span><br/><a href='source/Builder.html#java-util-stream-DoubleStream-Builder-method-accept' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoubleStream.Builder-method-accept' class='name expandable'>accept</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an element to the stream being built. ...</div><div class='long'><p>Adds an element to the stream being built.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the builder has already transitioned\n to the built state</p>\n</div></li></ul></div></div></div><div id='method-add' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.DoubleStream.Builder'>java.util.stream.DoubleStream.Builder</span><br/><a href='source/Builder.html#java-util-stream-DoubleStream-Builder-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoubleStream.Builder-method-add' class='name expandable'>add</a>( <span class='pre'>t, t</span> ) : Object {java.util.stream.DoubleStream.Builder}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds an element to the stream being built. ...</div><div class='long'><p>Adds an element to the stream being built.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>t</span> : Number<div class='sub-desc'><p>the element to add</p>\n</div></li><li><span class='pre'>t</span> : Object<div class='sub-desc'><p>the element to add</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.stream.DoubleStream.Builder}</span><div class='sub-desc'><p>{@code this} builder</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the builder has already transitioned\n to the built state</p>\n</div></li></ul></div></div></div><div id='method-build' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.DoubleStream.Builder'>java.util.stream.DoubleStream.Builder</span><br/><a href='source/Builder.html#java-util-stream-DoubleStream-Builder-method-build' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.DoubleStream.Builder-method-build' class='name expandable'>build</a>( <span class='pre'></span> ) : Object {java.util.stream.DoubleStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Builds the stream, transitioning this builder to the built state. ...</div><div class='long'><p>Builds the stream, transitioning this builder to the built state.\n An {@code IllegalStateException} is thrown if there are further\n attempts to operate on the builder after it has entered the built\n state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.stream.DoubleStream}</span><div class='sub-desc'><p>the built stream</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the builder has already transitioned\n to the built state</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});