Ext.data.JsonP.java_util_stream_OpTestCase_ResultAsserter({"tagname":"class","name":"java.util.stream.OpTestCase.ResultAsserter","autodetected":{},"files":[{"filename":"ResultAsserter.js","href":"ResultAsserter.html#java-util-stream-OpTestCase-ResultAsserter"}],"params":[{"tagname":"params","doc":"<p><R> the type of result to assert on</R></p>\n"}],"members":[{"name":"assertResult","tagname":"method","owner":"java.util.stream.OpTestCase.ResultAsserter","id":"method-assertResult","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.stream.OpTestCase.ResultAsserter","short_doc":"An asserter for results produced when exercising of stream or terminal\n tests. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ResultAsserter.html#java-util-stream-OpTestCase-ResultAsserter' target='_blank'>ResultAsserter.js</a></div></pre><div class='doc-contents'><p>An asserter for results produced when exercising of stream or terminal\n tests.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><R> the type of result to assert on</R></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-assertResult' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.stream.OpTestCase.ResultAsserter'>java.util.stream.OpTestCase.ResultAsserter</span><br/><a href='source/ResultAsserter.html#java-util-stream-OpTestCase-ResultAsserter-method-assertResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.stream.OpTestCase.ResultAsserter-method-assertResult' class='name expandable'>assertResult</a>( <span class='pre'>actual, expected, isOrdered, isParallel</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Assert a result produced when exercising of stream or terminal\n test. ...</div><div class='long'><p>Assert a result produced when exercising of stream or terminal\n test.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>actual</span> : Object {Object}<div class='sub-desc'><p>the actual result</p>\n</div></li><li><span class='pre'>expected</span> : Object {Object}<div class='sub-desc'><p>the expected result</p>\n</div></li><li><span class='pre'>isOrdered</span> : Boolean<div class='sub-desc'><p>true if the pipeline is ordered</p>\n</div></li><li><span class='pre'>isParallel</span> : Boolean<div class='sub-desc'><p>true if the pipeline is parallel</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});