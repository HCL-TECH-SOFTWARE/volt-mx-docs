Ext.data.JsonP.com_android_internal_policy_BackdropFrameRenderer({"tagname":"class","name":"com.android.internal.policy.BackdropFrameRenderer","autodetected":{},"files":[{"filename":"BackdropFrameRenderer.js","href":"BackdropFrameRenderer.html#com-android-internal-policy-BackdropFrameRenderer"}],"extends":"java.lang.Thread","hide":true,"members":[{"name":"doFrame","tagname":"method","owner":"com.android.internal.policy.BackdropFrameRenderer","id":"method-doFrame","meta":{}},{"name":"onConfigurationChange","tagname":"method","owner":"com.android.internal.policy.BackdropFrameRenderer","id":"method-onConfigurationChange","meta":{}},{"name":"run","tagname":"method","owner":"com.android.internal.policy.BackdropFrameRenderer","id":"method-run","meta":{}},{"name":"setTargetRect","tagname":"method","owner":"com.android.internal.policy.BackdropFrameRenderer","id":"method-setTargetRect","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.policy.BackdropFrameRenderer","short_doc":"implements android.view.Choreographer.FrameCallback\n\nThe thread which draws a fill in background while the app is res...","classIcon":"icon-class","superclasses":["java.lang.Thread"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Thread<div class='subclass '><strong>com.android.internal.policy.BackdropFrameRenderer</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/BackdropFrameRenderer.html#com-android-internal-policy-BackdropFrameRenderer' target='_blank'>BackdropFrameRenderer.js</a></div></pre><div class='doc-contents'><p>implements android.view.Choreographer.FrameCallback</p>\n\n<p>The thread which draws a fill in background while the app is resizing in areas where the app\n content draw is lagging behind the resize operation.\n It starts with the creation and it ends once someone calls destroy().\n Any size changes can be passed by a call to setTargetRect will passed to the thread and\n executed via the Choreographer.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-doFrame' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.policy.BackdropFrameRenderer'>com.android.internal.policy.BackdropFrameRenderer</span><br/><a href='source/BackdropFrameRenderer.html#com-android-internal-policy-BackdropFrameRenderer-method-doFrame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.policy.BackdropFrameRenderer-method-doFrame' class='name expandable'>doFrame</a>( <span class='pre'>frameTimeNanos</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The implementation of the FrameCallback. ...</div><div class='long'><p>The implementation of the FrameCallback.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>frameTimeNanos</span> : Number<div class='sub-desc'><p>The time in nanoseconds when the frame started being rendered,\n in the System.nanoTime() timebase.  Divide this value by {@code 1000000}</p>\n</div></li></ul></div></div></div><div id='method-onConfigurationChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.policy.BackdropFrameRenderer'>com.android.internal.policy.BackdropFrameRenderer</span><br/><a href='source/BackdropFrameRenderer.html#com-android-internal-policy-BackdropFrameRenderer-method-onConfigurationChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.policy.BackdropFrameRenderer-method-onConfigurationChange' class='name expandable'>onConfigurationChange</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The window got replaced due to a configuration change. ...</div><div class='long'><p>The window got replaced due to a configuration change.</p>\n</div></div></div><div id='method-run' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.policy.BackdropFrameRenderer'>com.android.internal.policy.BackdropFrameRenderer</span><br/><a href='source/BackdropFrameRenderer.html#com-android-internal-policy-BackdropFrameRenderer-method-run' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.policy.BackdropFrameRenderer-method-run' class='name expandable'>run</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setTargetRect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.policy.BackdropFrameRenderer'>com.android.internal.policy.BackdropFrameRenderer</span><br/><a href='source/BackdropFrameRenderer.html#com-android-internal-policy-BackdropFrameRenderer-method-setTargetRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.policy.BackdropFrameRenderer-method-setTargetRect' class='name expandable'>setTargetRect</a>( <span class='pre'>newTargetBounds, fullscreen, systemInsets, stableInsets</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call this function asynchronously when the window size has been changed or when the insets\n have changed or whether w...</div><div class='long'><p>Call this function asynchronously when the window size has been changed or when the insets\n have changed or whether window switched between a fullscreen or non-fullscreen layout.\n The change will be picked up once per frame and the frame will be re-rendered accordingly.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newTargetBounds</span> : Object {Rect}<div class='sub-desc'><p>The new target bounds.</p>\n</div></li><li><span class='pre'>fullscreen</span> : Boolean<div class='sub-desc'><p>Whether the window is currently drawing in fullscreen.</p>\n</div></li><li><span class='pre'>systemInsets</span> : Object {Rect}<div class='sub-desc'><p>The current visible system insets for the window.</p>\n</div></li><li><span class='pre'>stableInsets</span> : Object {Rect}<div class='sub-desc'><p>The stable insets for the window.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});