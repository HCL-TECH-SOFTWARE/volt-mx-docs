Ext.data.JsonP.javax_crypto_CipherInputStream({"tagname":"class","name":"javax.crypto.CipherInputStream","autodetected":{},"files":[{"filename":"CipherInputStream.js","href":"CipherInputStream.html#javax-crypto-CipherInputStream"}],"extends":"java.io.FilterInputStream","author":[{"tagname":"author","name":"Li Gong","email":null}],"since":"1.4","members":[{"name":"available","tagname":"method","owner":"javax.crypto.CipherInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"javax.crypto.CipherInputStream","id":"method-close","meta":{}},{"name":"markSupported","tagname":"method","owner":"javax.crypto.CipherInputStream","id":"method-markSupported","meta":{}},{"name":"read","tagname":"method","owner":"javax.crypto.CipherInputStream","id":"method-read","meta":{}},{"name":"skip","tagname":"method","owner":"javax.crypto.CipherInputStream","id":"method-skip","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.crypto.CipherInputStream","short_doc":"A CipherInputStream is composed of an InputStream and a Cipher so\n that read() methods return data that are read in f...","classIcon":"icon-class","superclasses":["java.io.FilterInputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.io.FilterInputStream<div class='subclass '><strong>javax.crypto.CipherInputStream</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CipherInputStream.html#javax-crypto-CipherInputStream' target='_blank'>CipherInputStream.js</a></div></pre><div class='doc-contents'><p>A CipherInputStream is composed of an InputStream and a Cipher so\n that read() methods return data that are read in from the\n underlying InputStream but have been additionally processed by the\n Cipher.  The Cipher must be fully initialized before being used by\n a CipherInputStream.</p>\n\n<p> <p> For example, if the Cipher is initialized for decryption, the\n CipherInputStream will attempt to read in data and decrypt them,\n before returning the decrypted data.</p>\n\n<p> <p> This class adheres strictly to the semantics, especially the\n failure semantics, of its ancestor classes\n java.io.FilterInputStream and java.io.InputStream.  This class has\n exactly those methods specified in its ancestor classes, and\n overrides them all.  Moreover, this class catches all exceptions\n that are not thrown by its ancestor classes.  In particular, the\n <code>skip</code> method skips, and the <code>available</code>\n method counts only data that have been processed by the encapsulated Cipher.</p>\n\n<p> <p> It is crucial for a programmer using this class not to use\n methods that are not defined or overriden in this class (such as a\n new method or constructor that is later added to one of the super\n classes), because the design and implementation of those methods\n are unlikely to have considered security impact with regard to\n CipherInputStream.</p>\n\n<p> @see     java.io.InputStream\n @see     java.io.FilterInputStream\n @see     <a href=\"#!/api/javax.crypto.Cipher\" rel=\"javax.crypto.Cipher\" class=\"docClass\">javax.crypto.Cipher</a>\n @see     <a href=\"#!/api/javax.crypto.CipherOutputStream\" rel=\"javax.crypto.CipherOutputStream\" class=\"docClass\">javax.crypto.CipherOutputStream</a></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherInputStream'>javax.crypto.CipherInputStream</span><br/><a href='source/CipherInputStream.html#javax-crypto-CipherInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of bytes that can be read from this input\n stream without blocking. ...</div><div class='long'><p>Returns the number of bytes that can be read from this input\n stream without blocking. The <code>available</code> method of\n <code>InputStream</code> returns <code>0</code>. This method\n <B>should</B> be overridden by subclasses.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of bytes that can be read from this input stream\n             without blocking.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherInputStream'>javax.crypto.CipherInputStream</span><br/><a href='source/CipherInputStream.html#javax-crypto-CipherInputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherInputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this input stream and releases any system resources\n associated with the stream. ...</div><div class='long'><p>Closes this input stream and releases any system resources\n associated with the stream.\n <p>\n The <code>close</code> method of <code>CipherInputStream</code>\n calls the <code>close</code> method of its underlying input\n stream.\n@exception IOException  if an I/O error occurs.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n</div></div></div><div id='method-markSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherInputStream'>javax.crypto.CipherInputStream</span><br/><a href='source/CipherInputStream.html#javax-crypto-CipherInputStream-method-markSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherInputStream-method-markSupported' class='name expandable'>markSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests if this input stream supports the mark\n and reset methods, which it does not. ...</div><div class='long'><p>Tests if this input stream supports the <code>mark</code>\n and <code>reset</code> methods, which it does not.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>false</code>, since this class does not support the\n          <code>mark</code> and <code>reset</code> methods.\n@see java.io.InputStream#mark(int)\n@see java.io.InputStream#reset()</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherInputStream'>javax.crypto.CipherInputStream</span><br/><a href='source/CipherInputStream.html#javax-crypto-CipherInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherInputStream-method-read' class='name expandable'>read</a>( <span class='pre'>b, off, len</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads up to len bytes of data from this input stream\n into an array of bytes. ...</div><div class='long'><p>Reads up to <code>len</code> bytes of data from this input stream\n into an array of bytes. This method blocks until some input is\n available. If the first argument is <code>null,</code> up to\n <code>len</code> bytes are read and discarded.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the buffer into which the data is read.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the destination array\n                   <code>buf</code></p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the maximum number of bytes read.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end of\n             the stream has been reached.\n@exception IOException  if an I/O error occurs.\n@see java.io.InputStream#read()</p>\n</div></li></ul></div></div></div><div id='method-skip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherInputStream'>javax.crypto.CipherInputStream</span><br/><a href='source/CipherInputStream.html#javax-crypto-CipherInputStream-method-skip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherInputStream-method-skip' class='name expandable'>skip</a>( <span class='pre'>n</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Skips n bytes of input from the bytes that can be read\n from this input stream without blocking. ...</div><div class='long'><p>Skips <code>n</code> bytes of input from the bytes that can be read\n from this input stream without blocking.</p>\n\n<p> <p>Fewer bytes than requested might be skipped.\n The actual number of bytes skipped is equal to <code>n</code> or\n the result of a call to\n available,\n whichever is smaller.\n If <code>n</code> is less than zero, no bytes are skipped.</p>\n\n<p> <p>The actual number of bytes skipped is returned.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>n</span> : Number<div class='sub-desc'><p>the number of bytes to be skipped.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the actual number of bytes skipped.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});