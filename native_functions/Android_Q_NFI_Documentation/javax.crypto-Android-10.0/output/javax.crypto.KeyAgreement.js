Ext.data.JsonP.javax_crypto_KeyAgreement({"tagname":"class","name":"javax.crypto.KeyAgreement","autodetected":{},"files":[{"filename":"KeyAgreement.js","href":"KeyAgreement.html#javax-crypto-KeyAgreement"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Jan Luehe","email":null}],"since":"1.4","members":[{"name":"doPhase","tagname":"method","owner":"javax.crypto.KeyAgreement","id":"method-doPhase","meta":{}},{"name":"generateSecret","tagname":"method","owner":"javax.crypto.KeyAgreement","id":"method-generateSecret","meta":{}},{"name":"getAlgorithm","tagname":"method","owner":"javax.crypto.KeyAgreement","id":"method-getAlgorithm","meta":{}},{"name":"getInstance","tagname":"method","owner":"javax.crypto.KeyAgreement","id":"method-getInstance","meta":{}},{"name":"getProvider","tagname":"method","owner":"javax.crypto.KeyAgreement","id":"method-getProvider","meta":{}},{"name":"init","tagname":"method","owner":"javax.crypto.KeyAgreement","id":"method-init","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.crypto.KeyAgreement","short_doc":"This class provides the functionality of a key agreement (or key\n exchange) protocol. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.crypto.KeyAgreement</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/KeyAgreement.html#javax-crypto-KeyAgreement' target='_blank'>KeyAgreement.js</a></div></pre><div class='doc-contents'><p>This class provides the functionality of a key agreement (or key\n exchange) protocol.\n <p>\n The keys involved in establishing a shared secret are created by one of the\n key generators (<code>KeyPairGenerator</code> or\n <code>KeyGenerator</code>), a <code>KeyFactory</code>, or as a result from\n an intermediate phase of the key agreement protocol.</p>\n\n<p> <p> For each of the correspondents in the key exchange, <code>doPhase</code>\n needs to be called. For example, if this key exchange is with one other\n party, <code>doPhase</code> needs to be called once, with the\n <code>lastPhase</code> flag set to <code>true</code>.\n If this key exchange is\n with two other parties, <code>doPhase</code> needs to be called twice,\n the first time setting the <code>lastPhase</code> flag to\n <code>false</code>, and the second time setting it to <code>true</code>.\n There may be any number of parties involved in a key exchange.</p>\n\n<p> <p> Android provides the following <code>KeyAgreement</code> algorithms:\n <table>\n   <thead>\n     <tr>\n       <th>Algorithm</th>\n       <th>Supported API Levels</th>\n     </tr>\n   </thead>\n   <tbody>\n     <tr>\n       <td>DH</td>\n       <td>1+</td>\n     </tr>\n     <tr>\n       <td>ECDH</td>\n       <td>11+</td>\n     </tr>\n   </tbody>\n </table></p>\n\n<p> This algorithm is described in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyAgreement\">\n KeyAgreement section</a> of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.</p>\n\n<p> @see KeyGenerator\n @see SecretKey</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-doPhase' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.KeyAgreement'>javax.crypto.KeyAgreement</span><br/><a href='source/KeyAgreement.html#javax-crypto-KeyAgreement-method-doPhase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.KeyAgreement-method-doPhase' class='name expandable'>doPhase</a>( <span class='pre'>key, lastPhase</span> ) : Object {java.security.Key}<span class=\"signature\"></span></div><div class='description'><div class='short'>Executes the next phase of this key agreement with the given\n key that was received from one of the other parties inv...</div><div class='long'><p>Executes the next phase of this key agreement with the given\n key that was received from one of the other parties involved in this key\n agreement.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Object {Key}<div class='sub-desc'><p>the key for this phase. For example, in the case of\n Diffie-Hellman between 2 parties, this would be the other party's\n Diffie-Hellman public key.</p>\n</div></li><li><span class='pre'>lastPhase</span> : Boolean<div class='sub-desc'><p>flag which indicates whether or not this is the last\n phase of this key agreement.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Key}</span><div class='sub-desc'><p>the (intermediate) key resulting from this phase, or null\n if this phase does not yield a key\n@exception InvalidKeyException if the given key is inappropriate for\n this phase.\n@exception IllegalStateException if this key agreement has not been\n initialized.</p>\n</div></li></ul></div></div></div><div id='method-generateSecret' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.KeyAgreement'>javax.crypto.KeyAgreement</span><br/><a href='source/KeyAgreement.html#javax-crypto-KeyAgreement-method-generateSecret' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.KeyAgreement-method-generateSecret' class='name expandable'>generateSecret</a>( <span class='pre'>algorithm</span> ) : Object {javax.crypto.SecretKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates the shared secret and returns it as a SecretKey\n object of the specified algorithm. ...</div><div class='long'><p>Creates the shared secret and returns it as a <code>SecretKey</code>\n object of the specified algorithm.</p>\n\n<p> <p>This method resets this <code>KeyAgreement</code> object, so that it\n can be reused for further key agreements. Unless this key agreement is\n reinitialized with one of the <code>init</code> methods, the same\n private information and algorithm parameters will be used for\n subsequent key agreements.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>algorithm</span> : String<div class='sub-desc'><p>the requested secret-key algorithm</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.crypto.SecretKey}</span><div class='sub-desc'><p>the shared secret key\n@exception IllegalStateException if this key agreement has not been\n completed yet\n@exception NoSuchAlgorithmException if the specified secret-key\n algorithm is not available\n@exception InvalidKeyException if the shared secret-key material cannot\n be used to generate a secret key of the specified algorithm (e.g.,\n the key material is too short)</p>\n</div></li></ul></div></div></div><div id='method-getAlgorithm' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.KeyAgreement'>javax.crypto.KeyAgreement</span><br/><a href='source/KeyAgreement.html#javax-crypto-KeyAgreement-method-getAlgorithm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.KeyAgreement-method-getAlgorithm' class='name expandable'>getAlgorithm</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the algorithm name of this KeyAgreement object. ...</div><div class='long'><p>Returns the algorithm name of this <code>KeyAgreement</code> object.</p>\n\n<p> <p>This is the same name that was specified in one of the\n <code>getInstance</code> calls that created this\n <code>KeyAgreement</code> object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the algorithm name of this <code>KeyAgreement</code> object.</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.KeyAgreement'>javax.crypto.KeyAgreement</span><br/><a href='source/KeyAgreement.html#javax-crypto-KeyAgreement-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.KeyAgreement-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>algorithm, provider</span> ) : Object {javax.crypto.KeyAgreement}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a KeyAgreement object that implements the\n specified key agreement algorithm. ...</div><div class='long'><p>Returns a <code>KeyAgreement</code> object that implements the\n specified key agreement algorithm.</p>\n\n<p> <p> A new KeyAgreement object encapsulating the\n KeyAgreementSpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>algorithm</span> : String<div class='sub-desc'><p>the standard name of the requested key agreement\n algorithm.\n See the KeyAgreement section in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#KeyAgreement\">\n Java Cryptography Architecture Standard Algorithm Name Documentation</a>\n for information about standard algorithm names.</p>\n</div></li><li><span class='pre'>provider</span> : Object {Provider}<div class='sub-desc'><p>the provider.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.crypto.KeyAgreement}</span><div class='sub-desc'><p>the new <code>KeyAgreement</code> object.\n@exception NullPointerException if the specified algorithm\n          is null.\n@exception NoSuchAlgorithmException if a KeyAgreementSpi\n          implementation for the specified algorithm is not available\n          from the specified Provider object.\n@exception IllegalArgumentException if the <code>provider</code>\n          is null.\n@see java.security.Provider</p>\n</div></li></ul></div></div></div><div id='method-getProvider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.KeyAgreement'>javax.crypto.KeyAgreement</span><br/><a href='source/KeyAgreement.html#javax-crypto-KeyAgreement-method-getProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.KeyAgreement-method-getProvider' class='name expandable'>getProvider</a>( <span class='pre'></span> ) : Object {java.security.Provider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the provider of this KeyAgreement object. ...</div><div class='long'><p>Returns the provider of this <code>KeyAgreement</code> object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Provider}</span><div class='sub-desc'><p>the provider of this <code>KeyAgreement</code> object</p>\n</div></li></ul></div></div></div><div id='method-init' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.KeyAgreement'>javax.crypto.KeyAgreement</span><br/><a href='source/KeyAgreement.html#javax-crypto-KeyAgreement-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.KeyAgreement-method-init' class='name expandable'>init</a>( <span class='pre'>key, params, random</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Initializes this key agreement with the given key, set of\n algorithm parameters, and source of randomness. ...</div><div class='long'><p>Initializes this key agreement with the given key, set of\n algorithm parameters, and source of randomness.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Object {Key}<div class='sub-desc'><p>the party's private information. For example, in the case\n of the Diffie-Hellman key agreement, this would be the party's own\n Diffie-Hellman private key.</p>\n</div></li><li><span class='pre'>params</span> : Object {AlgorithmParameterSpec}<div class='sub-desc'><p>the key agreement parameters</p>\n</div></li><li><span class='pre'>random</span> : Object {SecureRandom}<div class='sub-desc'><p>the source of randomness\n@exception InvalidKeyException if the given key is\n inappropriate for this key agreement, e.g., is of the wrong type or\n has an incompatible algorithm type.\n@exception InvalidAlgorithmParameterException if the given parameters\n are inappropriate for this key agreement.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});