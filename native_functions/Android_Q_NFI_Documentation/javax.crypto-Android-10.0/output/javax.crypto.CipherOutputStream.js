Ext.data.JsonP.javax_crypto_CipherOutputStream({"tagname":"class","name":"javax.crypto.CipherOutputStream","autodetected":{},"files":[{"filename":"CipherOutputStream.js","href":"CipherOutputStream.html#javax-crypto-CipherOutputStream"}],"extends":"java.io.FilterOutputStream","author":[{"tagname":"author","name":"Li Gong","email":null}],"since":"1.4","members":[{"name":"close","tagname":"method","owner":"javax.crypto.CipherOutputStream","id":"method-close","meta":{}},{"name":"flush","tagname":"method","owner":"javax.crypto.CipherOutputStream","id":"method-flush","meta":{}},{"name":"write","tagname":"method","owner":"javax.crypto.CipherOutputStream","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.crypto.CipherOutputStream","short_doc":"A CipherOutputStream is composed of an OutputStream and a Cipher so\n that write() methods first process the data befo...","classIcon":"icon-class","superclasses":["java.io.FilterOutputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.io.FilterOutputStream<div class='subclass '><strong>javax.crypto.CipherOutputStream</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CipherOutputStream.html#javax-crypto-CipherOutputStream' target='_blank'>CipherOutputStream.js</a></div></pre><div class='doc-contents'><p>A CipherOutputStream is composed of an OutputStream and a Cipher so\n that write() methods first process the data before writing them out\n to the underlying OutputStream.  The cipher must be fully\n initialized before being used by a CipherOutputStream.</p>\n\n<p> <p> For example, if the cipher is initialized for encryption, the\n CipherOutputStream will attempt to encrypt data before writing out the\n encrypted data.</p>\n\n<p> <p> This class adheres strictly to the semantics, especially the\n failure semantics, of its ancestor classes\n java.io.OutputStream and java.io.FilterOutputStream.  This class\n has exactly those methods specified in its ancestor classes, and\n overrides them all.  Moreover, this class catches all exceptions\n that are not thrown by its ancestor classes.</p>\n\n<p> <p> It is crucial for a programmer using this class not to use\n methods that are not defined or overriden in this class (such as a\n new method or constructor that is later added to one of the super\n classes), because the design and implementation of those methods\n are unlikely to have considered security impact with regard to\n CipherOutputStream.</p>\n\n<p> @see     java.io.OutputStream\n @see     java.io.FilterOutputStream\n @see     <a href=\"#!/api/javax.crypto.Cipher\" rel=\"javax.crypto.Cipher\" class=\"docClass\">javax.crypto.Cipher</a>\n @see     <a href=\"#!/api/javax.crypto.CipherInputStream\" rel=\"javax.crypto.CipherInputStream\" class=\"docClass\">javax.crypto.CipherInputStream</a></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherOutputStream'>javax.crypto.CipherOutputStream</span><br/><a href='source/CipherOutputStream.html#javax-crypto-CipherOutputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherOutputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this output stream and releases any system resources\n associated with this stream. ...</div><div class='long'><p>Closes this output stream and releases any system resources\n associated with this stream.\n <p>\n This method invokes the <code>doFinal</code> method of the encapsulated\n cipher object, which causes any bytes buffered by the encapsulated\n cipher to be processed. The result is written out by calling the\n <code>flush</code> method of this output stream.\n <p>\n This method resets the encapsulated cipher object to its initial state\n and calls the <code>close</code> method of the underlying output\n stream.\n@exception IOException  if an I/O error occurs.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n</div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherOutputStream'>javax.crypto.CipherOutputStream</span><br/><a href='source/CipherOutputStream.html#javax-crypto-CipherOutputStream-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherOutputStream-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flushes this output stream by forcing any buffered output bytes\n that have already been processed by the encapsulated...</div><div class='long'><p>Flushes this output stream by forcing any buffered output bytes\n that have already been processed by the encapsulated cipher object\n to be written out.</p>\n\n<p> <p>Any bytes buffered by the encapsulated cipher\n and waiting to be processed by it will not be written out. For example,\n if the encapsulated cipher is a block cipher, and the total number of\n bytes written using one of the <code>write</code> methods is less than\n the cipher's block size, no bytes will be written out.\n@exception IOException  if an I/O error occurs.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n</div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.CipherOutputStream'>javax.crypto.CipherOutputStream</span><br/><a href='source/CipherOutputStream.html#javax-crypto-CipherOutputStream-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.CipherOutputStream-method-write' class='name expandable'>write</a>( <span class='pre'>b, off, len</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes len bytes from the specified byte array\n starting at offset off to this output stream. ...</div><div class='long'><p>Writes <code>len</code> bytes from the specified byte array\n starting at offset <code>off</code> to this output stream.</p>\n        <p>Available since: <b>JCE1.2</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>b</span> : Object {byte[]}<div class='sub-desc'><p>the data.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>the start offset in the data.</p>\n</div></li><li><span class='pre'>len</span> : Number<div class='sub-desc'><p>the number of bytes to write.\n@exception IOException  if an I/O error occurs.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});