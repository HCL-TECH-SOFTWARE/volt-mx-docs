Ext.data.JsonP.android_view_textclassifier_TextClassifier_Utils({"tagname":"class","name":"android.view.textclassifier.TextClassifier.Utils","autodetected":{},"files":[{"filename":"Utils.js","href":"Utils.html#android-view-textclassifier-TextClassifier-Utils"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"generateLegacyLinks","tagname":"method","owner":"android.view.textclassifier.TextClassifier.Utils","id":"method-generateLegacyLinks","meta":{}},{"name":"getSubString","tagname":"method","owner":"android.view.textclassifier.TextClassifier.Utils","id":"method-getSubString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.textclassifier.TextClassifier.Utils","short_doc":"Utility functions for TextClassifier methods. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.view.textclassifier.TextClassifier.Utils</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Utils.html#android-view-textclassifier-TextClassifier-Utils' target='_blank'>Utils.js</a></div></pre><div class='doc-contents'><p>Utility functions for TextClassifier methods.</p>\n\n<p> <ul>\n  <li>Provides validation of input parameters to TextClassifier methods\n </li></ul></p>\n\n<p> Intended to be used only for TextClassifier purposes.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-generateLegacyLinks' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.textclassifier.TextClassifier.Utils'>android.view.textclassifier.TextClassifier.Utils</span><br/><a href='source/Utils.html#android-view-textclassifier-TextClassifier-Utils-method-generateLegacyLinks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.textclassifier.TextClassifier.Utils-method-generateLegacyLinks' class='name expandable'>generateLegacyLinks</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates links using legacy Linkify. ...</div><div class='long'><p>Generates links using legacy Linkify.</p>\n</div></div></div><div id='method-getSubString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.textclassifier.TextClassifier.Utils'>android.view.textclassifier.TextClassifier.Utils</span><br/><a href='source/Utils.html#android-view-textclassifier-TextClassifier-Utils-method-getSubString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.textclassifier.TextClassifier.Utils-method-getSubString' class='name expandable'>getSubString</a>( <span class='pre'>text, start, end, minimumLength</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the substring of {@code text} that contains at least text from index\n {@code start} (inclusive) to index {@co...</div><div class='long'><p>Returns the substring of {@code text} that contains at least text from index\n {@code start} <i>(inclusive)</i> to index {@code end} <i>&lt;(exclusive)/i> with the goal of\n returning text that is at least {@code minimumLength}. If {@code text} is not long\n enough, this will return {@code text}. This method returns text at word boundaries.</i></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>the source text</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the start index of text that must be included</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the end index of text that must be included</p>\n</div></li><li><span class='pre'>minimumLength</span> : Number<div class='sub-desc'><p>minimum length of text to return if {@code text} is long enough</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});