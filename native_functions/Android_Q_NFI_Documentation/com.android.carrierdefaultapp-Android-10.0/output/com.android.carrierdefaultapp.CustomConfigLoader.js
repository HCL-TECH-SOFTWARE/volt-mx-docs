Ext.data.JsonP.com_android_carrierdefaultapp_CustomConfigLoader({"tagname":"class","name":"com.android.carrierdefaultapp.CustomConfigLoader","autodetected":{},"files":[{"filename":"CustomConfigLoader.js","href":"CustomConfigLoader.html#com-android-carrierdefaultapp-CustomConfigLoader"}],"extends":"java.lang.Object","members":[{"name":"loadCarrierActionList","tagname":"method","owner":"com.android.carrierdefaultapp.CustomConfigLoader","id":"method-loadCarrierActionList","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.carrierdefaultapp.CustomConfigLoader","short_doc":"Default carrier app allows carrier customization. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.carrierdefaultapp.CustomConfigLoader</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CustomConfigLoader.html#com-android-carrierdefaultapp-CustomConfigLoader' target='_blank'>CustomConfigLoader.js</a></div></pre><div class='doc-contents'><p>Default carrier app allows carrier customization. OEMs could configure a list\n of carrier actions defined in <a href=\"#!/api/com.android.carrierdefaultapp.CarrierActionUtils\" rel=\"com.android.carrierdefaultapp.CarrierActionUtils\" class=\"docClass\">CarrierActionUtils</a> to act upon certain signal or even different args of the same signal.\n This allows different interpretations of the signal between carriers and could easily alter the\n app's behavior in a configurable way. This helper class loads and parses the carrier configs\n and return a list of predefined carrier actions for the given input signal.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-loadCarrierActionList' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.carrierdefaultapp.CustomConfigLoader'>com.android.carrierdefaultapp.CustomConfigLoader</span><br/><a href='source/CustomConfigLoader.html#com-android-carrierdefaultapp-CustomConfigLoader-method-loadCarrierActionList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.carrierdefaultapp.CustomConfigLoader-method-loadCarrierActionList' class='name expandable'>loadCarrierActionList</a>( <span class='pre'>context, intent</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>loads and parses the carrier config, return a list of carrier action for the given signal ...</div><div class='long'><p>loads and parses the carrier config, return a list of carrier action for the given signal</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>passing signal for config match</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a list of carrier action for the given signal based on the carrier config.</p>\n\n<p>  Example: input intent TelephonyIntent.ACTION_CARRIER_SIGNAL_REQUEST_NETWORK_FAILED\n  This intent allows fined-grained matching based on both intent type &amp; extra values:\n  apnType and errorCode.\n  apnType read from passing intent is \"default\" and errorCode is 0x26 for example and\n  returned carrier config from carrier_default_actions_on_redirection_string_array is\n  {\n      \"default, 0x26:1,4\", // 0x26(NETWORK_FAILURE)\n      \"default, 0x70:2,3\" // 0x70(APN_TYPE_CONFLICT)\n  }\n  [1, 4] // 1(CARRIER_ACTION_DISABLE_METERED_APNS), 4(CARRIER_ACTION_SHOW_PORTAL_NOTIFICATION)\n  returns as the action index list based on the matching rule.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});