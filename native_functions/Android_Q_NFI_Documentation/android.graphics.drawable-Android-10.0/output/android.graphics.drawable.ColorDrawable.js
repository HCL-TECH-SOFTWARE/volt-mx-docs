Ext.data.JsonP.android_graphics_drawable_ColorDrawable({"tagname":"class","name":"android.graphics.drawable.ColorDrawable","autodetected":{},"files":[{"filename":"ColorDrawable.js","href":"ColorDrawable.html#android-graphics-drawable-ColorDrawable"}],"extends":"android.graphics.drawable.Drawable","members":[{"name":"applyTheme","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-applyTheme","meta":{}},{"name":"canApplyTheme","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-canApplyTheme","meta":{}},{"name":"clearColorFilter","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-clearColorFilter","meta":{}},{"name":"copyBounds","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-copyBounds","meta":{}},{"name":"createFromPath","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-createFromPath","meta":{}},{"name":"createFromResourceStream","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-createFromResourceStream","meta":{"deprecated":{"text":"<p>Prefer the version without an Options object.</p>\n"}}},{"name":"createFromStream","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-createFromStream","meta":{}},{"name":"createFromXml","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-createFromXml","meta":{}},{"name":"createFromXmlInner","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-createFromXmlInner","meta":{}},{"name":"draw","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-draw","meta":{}},{"name":"getAlpha","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-getAlpha","meta":{}},{"name":"getBounds","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getBounds","meta":{}},{"name":"getCallback","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getCallback","meta":{}},{"name":"getChangingConfigurations","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-getChangingConfigurations","meta":{}},{"name":"getColor","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-getColor","meta":{}},{"name":"getColorFilter","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-getColorFilter","meta":{}},{"name":"getConstantState","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-getConstantState","meta":{}},{"name":"getCurrent","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getCurrent","meta":{}},{"name":"getDirtyBounds","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getDirtyBounds","meta":{}},{"name":"getHotspotBounds","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getHotspotBounds","meta":{}},{"name":"getIntrinsicHeight","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getIntrinsicHeight","meta":{}},{"name":"getIntrinsicWidth","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getIntrinsicWidth","meta":{}},{"name":"getLayoutDirection","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getLayoutDirection","meta":{}},{"name":"getLevel","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getLevel","meta":{}},{"name":"getMinimumHeight","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getMinimumHeight","meta":{}},{"name":"getMinimumWidth","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getMinimumWidth","meta":{}},{"name":"getOpacity","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-getOpacity","meta":{}},{"name":"getOpticalInsets","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getOpticalInsets","meta":{}},{"name":"getOutline","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-getOutline","meta":{}},{"name":"getPadding","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getPadding","meta":{}},{"name":"getState","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getState","meta":{}},{"name":"getTransparentRegion","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-getTransparentRegion","meta":{}},{"name":"inflate","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-inflate","meta":{}},{"name":"invalidateSelf","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-invalidateSelf","meta":{}},{"name":"isAutoMirrored","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-isAutoMirrored","meta":{}},{"name":"isFilterBitmap","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-isFilterBitmap","meta":{}},{"name":"isProjected","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-isProjected","meta":{}},{"name":"isStateful","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-isStateful","meta":{}},{"name":"isVisible","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-isVisible","meta":{}},{"name":"jumpToCurrentState","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-jumpToCurrentState","meta":{}},{"name":"mutate","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-mutate","meta":{}},{"name":"onLayoutDirectionChanged","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-onLayoutDirectionChanged","meta":{}},{"name":"resolveOpacity","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-resolveOpacity","meta":{}},{"name":"scheduleSelf","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-scheduleSelf","meta":{}},{"name":"setAlpha","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-setAlpha","meta":{}},{"name":"setAutoMirrored","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setAutoMirrored","meta":{}},{"name":"setBounds","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setBounds","meta":{}},{"name":"setCallback","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setCallback","meta":{}},{"name":"setChangingConfigurations","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setChangingConfigurations","meta":{}},{"name":"setColor","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-setColor","meta":{}},{"name":"setColorFilter","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-setColorFilter","meta":{}},{"name":"setDither","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setDither","meta":{"deprecated":{"text":"<p>This property is ignored.</p>\n"}}},{"name":"setFilterBitmap","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setFilterBitmap","meta":{}},{"name":"setHotspot","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setHotspot","meta":{}},{"name":"setHotspotBounds","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setHotspotBounds","meta":{}},{"name":"setLayoutDirection","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setLayoutDirection","meta":{}},{"name":"setLevel","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setLevel","meta":{}},{"name":"setState","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setState","meta":{}},{"name":"setTint","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setTint","meta":{}},{"name":"setTintBlendMode","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-setTintBlendMode","meta":{}},{"name":"setTintList","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-setTintList","meta":{}},{"name":"setTintMode","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setTintMode","meta":{}},{"name":"setVisible","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-setVisible","meta":{}},{"name":"setXfermode","tagname":"method","owner":"android.graphics.drawable.ColorDrawable","id":"method-setXfermode","meta":{}},{"name":"unscheduleSelf","tagname":"method","owner":"android.graphics.drawable.Drawable","id":"method-unscheduleSelf","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.graphics.drawable.ColorDrawable","short_doc":"A specialized Drawable that fills the Canvas with a specified color. ...","classIcon":"icon-class","superclasses":["java.lang.Object","android.graphics.drawable.Drawable"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='docClass'>android.graphics.drawable.Drawable</a><div class='subclass '><strong>android.graphics.drawable.ColorDrawable</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable' target='_blank'>ColorDrawable.js</a></div></pre><div class='doc-contents'><p>A specialized Drawable that fills the Canvas with a specified color.\n Note that a ColorDrawable ignores the ColorFilter.</p>\n\n<p> <p>It can be defined in an XML file with the <code>&lt;color></code> element.</p></p>\n\n<p> @attr ref android.R.styleable#ColorDrawable_color</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-applyTheme' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-applyTheme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-applyTheme' class='name expandable'>applyTheme</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-applyTheme\" rel=\"android.graphics.drawable.Drawable-method-applyTheme\" class=\"docClass\">android.graphics.drawable.Drawable.applyTheme</a></p></div></div></div><div id='method-canApplyTheme' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-canApplyTheme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-canApplyTheme' class='name expandable'>canApplyTheme</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-canApplyTheme\" rel=\"android.graphics.drawable.Drawable-method-canApplyTheme\" class=\"docClass\">android.graphics.drawable.Drawable.canApplyTheme</a></p></div></div></div><div id='method-clearColorFilter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-clearColorFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-clearColorFilter' class='name expandable'>clearColorFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the color filter for this drawable. ...</div><div class='long'><p>Removes the color filter for this drawable.</p>\n</div></div></div><div id='method-copyBounds' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-copyBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-copyBounds' class='name expandable'>copyBounds</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a copy of the drawable's bounds in a new Rect. ...</div><div class='long'><p>Return a copy of the drawable's bounds in a new Rect. This returns the\n same values as getBounds(), but the returned object is guaranteed to not\n be changed later by the drawable (i.e. it retains no reference to this\n rect). If the caller already has a Rect allocated, call copyBounds(rect).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>A copy of the drawable's bounds</p>\n</div></li></ul></div></div></div><div id='method-createFromPath' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-createFromPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-createFromPath' class='name expandable'>createFromPath</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a drawable from file path name. ...</div><div class='long'><p>Create a drawable from file path name.</p>\n</div></div></div><div id='method-createFromResourceStream' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-createFromResourceStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-createFromResourceStream' class='name expandable'>createFromResourceStream</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Create a drawable from an inputstream, using the given resources and\n value to determine density information. ...</div><div class='long'><p>Create a drawable from an inputstream, using the given resources and\n value to determine density information.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Prefer the version without an Options object.</p>\n\n        </div>\n</div></div></div><div id='method-createFromStream' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-createFromStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-createFromStream' class='name expandable'>createFromStream</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a drawable from an inputstream ...</div><div class='long'><p>Create a drawable from an inputstream</p>\n</div></div></div><div id='method-createFromXml' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-createFromXml' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-createFromXml' class='name expandable'>createFromXml</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a drawable from an XML document using an optional Theme. ...</div><div class='long'><p>Create a drawable from an XML document using an optional Theme.\n For more information on how to create resources in XML, see\n <a href=\"{@docRoot}guide/topics/resources/drawable-resource.html\">Drawable Resources</a>.</p>\n</div></div></div><div id='method-createFromXmlInner' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-createFromXmlInner' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-createFromXmlInner' class='name expandable'>createFromXmlInner</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a drawable from inside an XML document using an optional\n Theme. ...</div><div class='long'><p>Create a drawable from inside an XML document using an optional\n Theme. Called on a parser positioned at a tag in an XML\n document, tries to create a Drawable from that tag. Returns {@code null}\n if the tag is not a valid drawable.</p>\n</div></div></div><div id='method-draw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-draw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-draw' class='name expandable'>draw</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-draw\" rel=\"android.graphics.drawable.Drawable-method-draw\" class=\"docClass\">android.graphics.drawable.Drawable.draw</a></p></div></div></div><div id='method-getAlpha' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-getAlpha' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-getAlpha' class='name expandable'>getAlpha</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the alpha value of this drawable's color. ...</div><div class='long'><p>Returns the alpha value of this drawable's color. Note this may not be the same alpha value\n provided in android.graphics.drawable.Drawable.setAlpha(int). Instead this will return the alpha of the color\n combined with the alpha provided by setAlpha</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A value between 0 and 255.\n@see ColorDrawable#setAlpha(int)</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-getAlpha\" rel=\"android.graphics.drawable.Drawable-method-getAlpha\" class=\"docClass\">android.graphics.drawable.Drawable.getAlpha</a></p></div></div></div><div id='method-getBounds' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getBounds' class='name expandable'>getBounds</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the drawable's bounds Rect. ...</div><div class='long'><p>Return the drawable's bounds Rect. Note: for efficiency, the returned\n object may be the same object stored in the drawable (though this is not\n guaranteed), so if a persistent copy of the bounds is needed, call\n copyBounds(rect) instead.\n You should also not change the object returned by this method as it may\n be the same object stored in the drawable.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>The bounds of the drawable (which may change later, so caller\n         beware). DO NOT ALTER the returned object as it may change the\n         stored bounds of this drawable.\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-copyBounds\" rel=\"android.graphics.drawable.Drawable-method-copyBounds\" class=\"docClass\">copyBounds</a>()\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-copyBounds\" rel=\"android.graphics.drawable.Drawable-method-copyBounds\" class=\"docClass\">copyBounds</a>(android.graphics.Rect)</p>\n</div></li></ul></div></div></div><div id='method-getCallback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getCallback' class='name expandable'>getCallback</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable.Callback}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the current android.graphics.drawable.Drawable.Callback implementation attached to this\n Drawable. ...</div><div class='long'><p>Return the current <a href=\"#!/api/android.graphics.drawable.Drawable.Callback\" rel=\"android.graphics.drawable.Drawable.Callback\" class=\"docClass\">android.graphics.drawable.Drawable.Callback</a> implementation attached to this\n Drawable.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable.Callback}</span><div class='sub-desc'><p>A Callback instance or null if no callback was set.\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setCallback\" rel=\"android.graphics.drawable.Drawable-method-setCallback\" class=\"docClass\">setCallback</a>(<a href=\"#!/api/android.graphics.drawable.Drawable.Callback\" rel=\"android.graphics.drawable.Drawable.Callback\" class=\"docClass\">android.graphics.drawable.Drawable.Callback</a>)</p>\n</div></li></ul></div></div></div><div id='method-getChangingConfigurations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-getChangingConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-getChangingConfigurations' class='name expandable'>getChangingConfigurations</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-getChangingConfigurations\" rel=\"android.graphics.drawable.Drawable-method-getChangingConfigurations\" class=\"docClass\">android.graphics.drawable.Drawable.getChangingConfigurations</a></p></div></div></div><div id='method-getColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-getColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-getColor' class='name expandable'>getColor</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the drawable's color value. ...</div><div class='long'><p>Gets the drawable's color value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int The color to draw.</p>\n</div></li></ul></div></div></div><div id='method-getColorFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-getColorFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-getColorFilter' class='name expandable'>getColorFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the color filter applied to this color configured by\n setColorFilter(ColorFilter)\n@see android.graphics.drawa...</div><div class='long'><p>Returns the color filter applied to this color configured by\n <a href=\"#!/api/android.graphics.drawable.ColorDrawable-method-setColorFilter\" rel=\"android.graphics.drawable.ColorDrawable-method-setColorFilter\" class=\"docClass\">setColorFilter</a>(ColorFilter)\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-getColorFilter\" rel=\"android.graphics.drawable.Drawable-method-getColorFilter\" class=\"docClass\">android.graphics.drawable.Drawable.getColorFilter</a>()</p>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-getColorFilter\" rel=\"android.graphics.drawable.Drawable-method-getColorFilter\" class=\"docClass\">android.graphics.drawable.Drawable.getColorFilter</a></p></div></div></div><div id='method-getConstantState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-getConstantState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-getConstantState' class='name expandable'>getConstantState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-getConstantState\" rel=\"android.graphics.drawable.Drawable-method-getConstantState\" class=\"docClass\">android.graphics.drawable.Drawable.getConstantState</a></p></div></div></div><div id='method-getCurrent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getCurrent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getCurrent' class='name expandable'>getCurrent</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>The current drawable that will be used by this drawable. For simple drawables, this\n         is just the drawable itself. For drawables that change state like\n         StateListDrawable and LevelListDrawable this will be the child drawable\n         currently in use.</p>\n</div></li></ul></div></div></div><div id='method-getDirtyBounds' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getDirtyBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getDirtyBounds' class='name expandable'>getDirtyBounds</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the drawable's dirty bounds Rect. ...</div><div class='long'><p>Return the drawable's dirty bounds Rect. Note: for efficiency, the\n returned object may be the same object stored in the drawable (though\n this is not guaranteed).\n <p>\n By default, this returns the full drawable bounds. Custom drawables may\n override this method to perform more precise invalidation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>The dirty bounds of this drawable</p>\n</div></li></ul></div></div></div><div id='method-getHotspotBounds' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getHotspotBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getHotspotBounds' class='name expandable'>getHotspotBounds</a>( <span class='pre'>outRect</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Populates {@code outRect} with the hotspot bounds. ...</div><div class='long'><p>Populates {@code outRect} with the hotspot bounds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outRect</span> : Object {Rect}<div class='sub-desc'><p>the rect to populate with the hotspot bounds\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setHotspotBounds\" rel=\"android.graphics.drawable.Drawable-method-setHotspotBounds\" class=\"docClass\">setHotspotBounds</a>(int, int, int, int)</p>\n</div></li></ul></div></div></div><div id='method-getIntrinsicHeight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getIntrinsicHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getIntrinsicHeight' class='name expandable'>getIntrinsicHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the drawable's intrinsic height. ...</div><div class='long'><p>Returns the drawable's intrinsic height.\n <p>\n Intrinsic height is the height at which the drawable would like to be\n laid out, including any inherent padding. If the drawable has no\n intrinsic height, such as a solid color, this method returns -1.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the intrinsic height, or -1 if no intrinsic height</p>\n</div></li></ul></div></div></div><div id='method-getIntrinsicWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getIntrinsicWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getIntrinsicWidth' class='name expandable'>getIntrinsicWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the drawable's intrinsic width. ...</div><div class='long'><p>Returns the drawable's intrinsic width.\n <p>\n Intrinsic width is the width at which the drawable would like to be laid\n out, including any inherent padding. If the drawable has no intrinsic\n width, such as a solid color, this method returns -1.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the intrinsic width, or -1 if no intrinsic width</p>\n</div></li></ul></div></div></div><div id='method-getLayoutDirection' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getLayoutDirection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getLayoutDirection' class='name expandable'>getLayoutDirection</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the resolved layout direction for this Drawable. ...</div><div class='long'><p>Returns the resolved layout direction for this Drawable.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>One of android.view.View.LAYOUT_DIRECTION_LTR,\n         android.view.View.LAYOUT_DIRECTION_RTL\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setLayoutDirection\" rel=\"android.graphics.drawable.Drawable-method-setLayoutDirection\" class=\"docClass\">setLayoutDirection</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getLevel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getLevel' class='name expandable'>getLevel</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current level. ...</div><div class='long'><p>Retrieve the current level.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int Current level, from 0 (minimum) to 10000 (maximum).</p>\n</div></li></ul></div></div></div><div id='method-getMinimumHeight' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getMinimumHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getMinimumHeight' class='name expandable'>getMinimumHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the minimum height suggested by this Drawable. ...</div><div class='long'><p>Returns the minimum height suggested by this Drawable. If a View uses this\n Drawable as a background, it is suggested that the View use at least this\n value for its height. (There will be some scenarios where this will not be\n possible.) This value should INCLUDE any padding.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The minimum height suggested by this Drawable. If this Drawable\n         doesn't have a suggested minimum height, 0 is returned.</p>\n</div></li></ul></div></div></div><div id='method-getMinimumWidth' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getMinimumWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getMinimumWidth' class='name expandable'>getMinimumWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the minimum width suggested by this Drawable. ...</div><div class='long'><p>Returns the minimum width suggested by this Drawable. If a View uses this\n Drawable as a background, it is suggested that the View use at least this\n value for its width. (There will be some scenarios where this will not be\n possible.) This value should INCLUDE any padding.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The minimum width suggested by this Drawable. If this Drawable\n         doesn't have a suggested minimum width, 0 is returned.</p>\n</div></li></ul></div></div></div><div id='method-getOpacity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-getOpacity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-getOpacity' class='name expandable'>getOpacity</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-getOpacity\" rel=\"android.graphics.drawable.Drawable-method-getOpacity\" class=\"docClass\">android.graphics.drawable.Drawable.getOpacity</a></p></div></div></div><div id='method-getOpticalInsets' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getOpticalInsets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getOpticalInsets' class='name expandable'>getOpticalInsets</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return in insets the layout insets suggested by this Drawable for use with alignment\n operations during layout. ...</div><div class='long'><p>Return in insets the layout insets suggested by this Drawable for use with alignment\n operations during layout.</p>\n</div></div></div><div id='method-getOutline' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-getOutline' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-getOutline' class='name expandable'>getOutline</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-getOutline\" rel=\"android.graphics.drawable.Drawable-method-getOutline\" class=\"docClass\">android.graphics.drawable.Drawable.getOutline</a></p></div></div></div><div id='method-getPadding' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getPadding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getPadding' class='name expandable'>getPadding</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return in padding the insets suggested by this Drawable for placing\n content inside the drawable's bounds. ...</div><div class='long'><p>Return in padding the insets suggested by this Drawable for placing\n content inside the drawable's bounds. Positive values move toward the\n center of the Drawable (set Rect.inset).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this drawable actually has a padding, else false. When false is returned,\n the padding is always set to 0.</p>\n</div></li></ul></div></div></div><div id='method-getState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Describes the current state, as a union of primitve states, such as\n android.R.attr.state_focused,\n android.R.attr.st...</div><div class='long'><p>Describes the current state, as a union of primitve states, such as\n android.R.attr.state_focused,\n android.R.attr.state_selected, etc.\n Some drawables may modify their imagery based on the selected state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An array of resource Ids describing the current state.</p>\n</div></li></ul></div></div></div><div id='method-getTransparentRegion' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-getTransparentRegion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-getTransparentRegion' class='name expandable'>getTransparentRegion</a>( <span class='pre'></span> ) : Object {android.graphics.Region}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a Region representing the part of the Drawable that is completely\n transparent. ...</div><div class='long'><p>Returns a Region representing the part of the Drawable that is completely\n transparent.  This can be used to perform drawing operations, identifying\n which parts of the target will not change when rendering the Drawable.\n The default implementation returns null, indicating no transparent\n region; subclasses can optionally override this to return an actual\n Region if they want to supply this optimization information, but it is\n not required that they do so.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Region}</span><div class='sub-desc'><p>Returns null if the Drawables has no transparent region to\n report, else a Region holding the parts of the Drawable's bounds that\n are transparent.</p>\n</div></li></ul></div></div></div><div id='method-inflate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-inflate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-inflate' class='name expandable'>inflate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-inflate\" rel=\"android.graphics.drawable.Drawable-method-inflate\" class=\"docClass\">android.graphics.drawable.Drawable.inflate</a></p></div></div></div><div id='method-invalidateSelf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-invalidateSelf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-invalidateSelf' class='name expandable'>invalidateSelf</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Use the current android.graphics.drawable.Drawable.Callback implementation to have this Drawable\n redrawn. ...</div><div class='long'><p>Use the current <a href=\"#!/api/android.graphics.drawable.Drawable.Callback\" rel=\"android.graphics.drawable.Drawable.Callback\" class=\"docClass\">android.graphics.drawable.Drawable.Callback</a> implementation to have this Drawable\n redrawn.  Does nothing if there is no Callback attached to the\n Drawable.\n@see Callback#invalidateDrawable\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-getCallback\" rel=\"android.graphics.drawable.Drawable-method-getCallback\" class=\"docClass\">getCallback</a>()\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setCallback\" rel=\"android.graphics.drawable.Drawable-method-setCallback\" class=\"docClass\">setCallback</a>(<a href=\"#!/api/android.graphics.drawable.Drawable.Callback\" rel=\"android.graphics.drawable.Drawable.Callback\" class=\"docClass\">android.graphics.drawable.Drawable.Callback</a>)</p>\n</div></div></div><div id='method-isAutoMirrored' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-isAutoMirrored' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-isAutoMirrored' class='name expandable'>isAutoMirrored</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL\n right-to-left. ...</div><div class='long'><p>Tells if this Drawable will be automatically mirrored  when its layout direction is RTL\n right-to-left. See android.util.LayoutDirection.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Returns true if this Drawable will be automatically mirrored.</p>\n</div></li></ul></div></div></div><div id='method-isFilterBitmap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-isFilterBitmap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-isFilterBitmap' class='name expandable'>isFilterBitmap</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether this drawable filters its bitmaps\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setFilterBitmap\" rel=\"android.graphics.drawable.Drawable-method-setFilterBitmap\" class=\"docClass\">setFilterBitmap</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isProjected' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-isProjected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-isProjected' class='name expandable'>isProjected</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether this drawable requests projection. ...</div><div class='long'><p>Whether this drawable requests projection. Indicates that the\n android.graphics.RenderNode this Drawable will draw into should be drawn immediately\n after the closest ancestor RenderNode containing a projection receiver.\n@see android.graphics.RenderNode#setProjectBackwards(boolean)</p>\n</div></div></div><div id='method-isStateful' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-isStateful' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-isStateful' class='name expandable'>isStateful</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-isStateful\" rel=\"android.graphics.drawable.Drawable-method-isStateful\" class=\"docClass\">android.graphics.drawable.Drawable.isStateful</a></p></div></div></div><div id='method-isVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-isVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-isVisible' class='name expandable'>isVisible</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-jumpToCurrentState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-jumpToCurrentState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-jumpToCurrentState' class='name expandable'>jumpToCurrentState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If this Drawable does transition animations between states, ask that\n it immediately jump to the current state and sk...</div><div class='long'><p>If this Drawable does transition animations between states, ask that\n it immediately jump to the current state and skip any active animations.</p>\n</div></div></div><div id='method-mutate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-mutate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-mutate' class='name expandable'>mutate</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>A mutable BitmapDrawable still shares its Bitmap with any other Drawable\n that comes from the same resource. ...</div><div class='long'><p>A mutable BitmapDrawable still shares its Bitmap with any other Drawable\n that comes from the same resource.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>This drawable.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-mutate\" rel=\"android.graphics.drawable.Drawable-method-mutate\" class=\"docClass\">android.graphics.drawable.Drawable.mutate</a></p></div></div></div><div id='method-onLayoutDirectionChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-onLayoutDirectionChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-onLayoutDirectionChanged' class='name expandable'>onLayoutDirectionChanged</a>( <span class='pre'>layoutDirection</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the drawable's resolved layout direction changes. ...</div><div class='long'><p>Called when the drawable's resolved layout direction changes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>layoutDirection</span> : Number<div class='sub-desc'><p>the new resolved layout direction</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the layout direction change has caused the\n         appearance of the drawable to change such that it needs to be\n         re-drawn, {@code false} otherwise\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setLayoutDirection\" rel=\"android.graphics.drawable.Drawable-method-setLayoutDirection\" class=\"docClass\">setLayoutDirection</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-resolveOpacity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-resolveOpacity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-resolveOpacity' class='name expandable'>resolveOpacity</a>( <span class='pre'>op1, op2</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the appropriate opacity value for two source opacities. ...</div><div class='long'><p>Return the appropriate opacity value for two source opacities.  If\n either is UNKNOWN, that is returned; else, if either is TRANSLUCENT,\n that is returned; else, if either is TRANSPARENT, that is returned;\n else, OPAQUE is returned.</p>\n\n<p> <p>This is to help in implementing <a href=\"#!/api/android.graphics.drawable.Drawable-method-getOpacity\" rel=\"android.graphics.drawable.Drawable-method-getOpacity\" class=\"docClass\">getOpacity</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>op1</span> : Number<div class='sub-desc'><p>One opacity value.</p>\n</div></li><li><span class='pre'>op2</span> : Number<div class='sub-desc'><p>Another opacity value.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int The combined opacity value.\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-getOpacity\" rel=\"android.graphics.drawable.Drawable-method-getOpacity\" class=\"docClass\">getOpacity</a></p>\n</div></li></ul></div></div></div><div id='method-scheduleSelf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-scheduleSelf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-scheduleSelf' class='name expandable'>scheduleSelf</a>( <span class='pre'>what, when</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Use the current android.graphics.drawable.Drawable.Callback implementation to have this Drawable\n scheduled. ...</div><div class='long'><p>Use the current <a href=\"#!/api/android.graphics.drawable.Drawable.Callback\" rel=\"android.graphics.drawable.Drawable.Callback\" class=\"docClass\">android.graphics.drawable.Drawable.Callback</a> implementation to have this Drawable\n scheduled.  Does nothing if there is no Callback attached to the\n Drawable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>what</span> : Object {Runnable}<div class='sub-desc'><p>The action being scheduled.</p>\n</div></li><li><span class='pre'>when</span> : Number<div class='sub-desc'><p>The time (in milliseconds) to run.\n@see Callback#scheduleDrawable</p>\n</div></li></ul></div></div></div><div id='method-setAlpha' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-setAlpha' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-setAlpha' class='name expandable'>setAlpha</a>( <span class='pre'>alpha</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Applies the given alpha to the underlying color. ...</div><div class='long'><p>Applies the given alpha to the underlying color. Note if the color already has\n an alpha applied to it, this will apply this alpha to the existing value instead of\n overwriting it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The alpha value to set, between 0 and 255.</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-setAlpha\" rel=\"android.graphics.drawable.Drawable-method-setAlpha\" class=\"docClass\">android.graphics.drawable.Drawable.setAlpha</a></p></div></div></div><div id='method-setAutoMirrored' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setAutoMirrored' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setAutoMirrored' class='name expandable'>setAutoMirrored</a>( <span class='pre'>mirrored</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set whether this Drawable is automatically mirrored when its layout direction is RTL\n (right-to left). ...</div><div class='long'><p>Set whether this Drawable is automatically mirrored when its layout direction is RTL\n (right-to left). See android.util.LayoutDirection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mirrored</span> : Boolean<div class='sub-desc'><p>Set to true if the Drawable should be mirrored, false if not.</p>\n</div></li></ul></div></div></div><div id='method-setBounds' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setBounds' class='name expandable'>setBounds</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specify a bounding rectangle for the Drawable. ...</div><div class='long'><p>Specify a bounding rectangle for the Drawable. This is where the drawable\n will draw when its draw() method is called.</p>\n</div></div></div><div id='method-setCallback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setCallback' class='name expandable'>setCallback</a>( <span class='pre'>cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Bind a android.graphics.drawable.Drawable.Callback object to this Drawable. ...</div><div class='long'><p>Bind a <a href=\"#!/api/android.graphics.drawable.Drawable.Callback\" rel=\"android.graphics.drawable.Drawable.Callback\" class=\"docClass\">android.graphics.drawable.Drawable.Callback</a> object to this Drawable.  Required for clients\n that want to support animated drawables.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cb</span> : Object {Drawable.Callback}<div class='sub-desc'><p>The client's Callback implementation.\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-getCallback\" rel=\"android.graphics.drawable.Drawable-method-getCallback\" class=\"docClass\">getCallback</a>()</p>\n</div></li></ul></div></div></div><div id='method-setChangingConfigurations' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setChangingConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setChangingConfigurations' class='name expandable'>setChangingConfigurations</a>( <span class='pre'>configs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a mask of the configuration parameters for which this drawable\n may change, requiring that it be re-created. ...</div><div class='long'><p>Set a mask of the configuration parameters for which this drawable\n may change, requiring that it be re-created.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>configs</span> : Number<div class='sub-desc'><p>A mask of the changing configuration parameters, as\n defined by android.content.pm.ActivityInfo.\n@see android.content.pm.ActivityInfo</p>\n</div></li></ul></div></div></div><div id='method-setColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-setColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-setColor' class='name expandable'>setColor</a>( <span class='pre'>color</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the drawable's color value. ...</div><div class='long'><p>Sets the drawable's color value. This action will clobber the results of\n prior calls to <a href=\"#!/api/android.graphics.drawable.ColorDrawable-method-setAlpha\" rel=\"android.graphics.drawable.ColorDrawable-method-setAlpha\" class=\"docClass\">setAlpha</a>(int) on this object, which side-affected\n the underlying color.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>The color to draw.</p>\n</div></li></ul></div></div></div><div id='method-setColorFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-setColorFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-setColorFilter' class='name expandable'>setColorFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the color filter applied to this color. ...</div><div class='long'><p>Sets the color filter applied to this color.\n <p>\n Only supported on version android.os.Build.VERSION_CODES.LOLLIPOP and\n above. Calling this method has no effect on earlier versions.\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setColorFilter\" rel=\"android.graphics.drawable.Drawable-method-setColorFilter\" class=\"docClass\">android.graphics.drawable.Drawable.setColorFilter</a>(ColorFilter)</p>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-setColorFilter\" rel=\"android.graphics.drawable.Drawable-method-setColorFilter\" class=\"docClass\">android.graphics.drawable.Drawable.setColorFilter</a></p></div></div></div><div id='method-setDither' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setDither' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setDither' class='name expandable'>setDither</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Set to true to have the drawable dither its colors when drawn to a\n device with fewer than 8-bits per color component. ...</div><div class='long'><p>Set to true to have the drawable dither its colors when drawn to a\n device with fewer than 8-bits per color component.\n@see android.graphics.Paint#setDither(boolean);</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This property is ignored.</p>\n\n        </div>\n</div></div></div><div id='method-setFilterBitmap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setFilterBitmap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setFilterBitmap' class='name expandable'>setFilterBitmap</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set to true to have the drawable filter its bitmaps with bilinear\n sampling when they are scaled or rotated. ...</div><div class='long'><p>Set to true to have the drawable filter its bitmaps with bilinear\n sampling when they are scaled or rotated.</p>\n\n<p> <p>This can improve appearance when bitmaps are rotated. If the drawable\n does not use bitmaps, this call is ignored.</p>\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-isFilterBitmap\" rel=\"android.graphics.drawable.Drawable-method-isFilterBitmap\" class=\"docClass\">isFilterBitmap</a>()\n@see android.graphics.Paint#setFilterBitmap(boolean);</p>\n</div></div></div><div id='method-setHotspot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setHotspot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setHotspot' class='name expandable'>setHotspot</a>( <span class='pre'>x, y</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies the hotspot's location within the drawable. ...</div><div class='long'><p>Specifies the hotspot's location within the drawable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>The X coordinate of the center of the hotspot</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>The Y coordinate of the center of the hotspot</p>\n</div></li></ul></div></div></div><div id='method-setHotspotBounds' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setHotspotBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setHotspotBounds' class='name expandable'>setHotspotBounds</a>( <span class='pre'>left, top, right, bottom</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the bounds to which the hotspot is constrained, if they should be\n different from the drawable bounds. ...</div><div class='long'><p>Sets the bounds to which the hotspot is constrained, if they should be\n different from the drawable bounds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>position in pixels of the left bound</p>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>position in pixels of the top bound</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>position in pixels of the right bound</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>position in pixels of the bottom bound\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-getHotspotBounds\" rel=\"android.graphics.drawable.Drawable-method-getHotspotBounds\" class=\"docClass\">getHotspotBounds</a>(android.graphics.Rect)</p>\n</div></li></ul></div></div></div><div id='method-setLayoutDirection' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setLayoutDirection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setLayoutDirection' class='name expandable'>setLayoutDirection</a>( <span class='pre'>layoutDirection</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the layout direction for this drawable. ...</div><div class='long'><p>Set the layout direction for this drawable. Should be a resolved\n layout direction, as the Drawable has no capacity to do the resolution on\n its own.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>layoutDirection</span> : Number<div class='sub-desc'><p>the resolved layout direction for the drawable,\n                        either android.view.View.LAYOUT_DIRECTION_LTR\n                        or android.view.View.LAYOUT_DIRECTION_RTL</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the layout direction change has caused the\n         appearance of the drawable to change such that it needs to be\n         re-drawn, {@code false} otherwise\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-getLayoutDirection\" rel=\"android.graphics.drawable.Drawable-method-getLayoutDirection\" class=\"docClass\">getLayoutDirection</a>()</p>\n</div></li></ul></div></div></div><div id='method-setLevel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setLevel' class='name expandable'>setLevel</a>( <span class='pre'>level</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specify the level for the drawable. ...</div><div class='long'><p>Specify the level for the drawable.  This allows a drawable to vary its\n imagery based on a continuous controller, for example to show progress\n or volume level.</p>\n\n<p> <p>If the new level you are supplying causes the appearance of the\n Drawable to change, then it is responsible for calling\n <a href=\"#!/api/android.graphics.drawable.Drawable-method-invalidateSelf\" rel=\"android.graphics.drawable.Drawable-method-invalidateSelf\" class=\"docClass\">invalidateSelf</a> in order to have itself redrawn, <em>and</em>\n true will be returned from this function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>level</span> : Number<div class='sub-desc'><p>The new level, from 0 (minimum) to 10000 (maximum).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if this change in level has caused the appearance\n of the Drawable to change (hence requiring an invalidate), otherwise\n returns false.</p>\n</div></li></ul></div></div></div><div id='method-setState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setState' class='name expandable'>setState</a>( <span class='pre'>stateSet</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Specify a set of states for the drawable. ...</div><div class='long'><p>Specify a set of states for the drawable. These are use-case specific,\n so see the relevant documentation. As an example, the background for\n widgets like Button understand the following states:\n [android.R.attr.state_focused,\n  android.R.attr.state_pressed].</p>\n\n<p> <p>If the new state you are supplying causes the appearance of the\n Drawable to change, then it is responsible for calling\n <a href=\"#!/api/android.graphics.drawable.Drawable-method-invalidateSelf\" rel=\"android.graphics.drawable.Drawable-method-invalidateSelf\" class=\"docClass\">invalidateSelf</a> in order to have itself redrawn, <em>and</em>\n true will be returned from this function.</p>\n\n<p> <p>Note: The Drawable holds a reference on to <var>stateSet</var>\n until a new state array is given to it, so you must not modify this\n array during that time.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>stateSet</span> : Object {int[]}<div class='sub-desc'><p>The new set of states to be displayed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if this change in state has caused the appearance\n of the Drawable to change (hence requiring an invalidate), otherwise\n returns false.</p>\n</div></li></ul></div></div></div><div id='method-setTint' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setTint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setTint' class='name expandable'>setTint</a>( <span class='pre'>tintColor</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies tint color for this drawable. ...</div><div class='long'><p>Specifies tint color for this drawable.\n <p>\n A Drawable's drawing content will be blended together with its tint\n before it is drawn to the screen. This functions similarly to\n PorterDuff.Mode).\n </p>\n <p>\n To clear the tint, pass {@code null} to\n <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTintList\" rel=\"android.graphics.drawable.Drawable-method-setTintList\" class=\"docClass\">setTintList</a>(ColorStateList).\n </p>\n <p class=\"note\"><strong>Note:</strong> Setting a color filter via\n <a href=\"#!/api/android.graphics.drawable.Drawable-method-setColorFilter\" rel=\"android.graphics.drawable.Drawable-method-setColorFilter\" class=\"docClass\">setColorFilter</a>(ColorFilter) or\n PorterDuff.Mode) overrides tint.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tintColor</span> : Number<div class='sub-desc'><p>Color to use for tinting this drawable\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTintList\" rel=\"android.graphics.drawable.Drawable-method-setTintList\" class=\"docClass\">setTintList</a>(ColorStateList)\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTintMode\" rel=\"android.graphics.drawable.Drawable-method-setTintMode\" class=\"docClass\">setTintMode</a>(PorterDuff.Mode)\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTintBlendMode\" rel=\"android.graphics.drawable.Drawable-method-setTintBlendMode\" class=\"docClass\">setTintBlendMode</a>(BlendMode)</p>\n</div></li></ul></div></div></div><div id='method-setTintBlendMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-setTintBlendMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-setTintBlendMode' class='name expandable'>setTintBlendMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTintBlendMode\" rel=\"android.graphics.drawable.Drawable-method-setTintBlendMode\" class=\"docClass\">android.graphics.drawable.Drawable.setTintBlendMode</a></p></div></div></div><div id='method-setTintList' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-setTintList' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-setTintList' class='name expandable'>setTintList</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTintList\" rel=\"android.graphics.drawable.Drawable-method-setTintList\" class=\"docClass\">android.graphics.drawable.Drawable.setTintList</a></p></div></div></div><div id='method-setTintMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setTintMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setTintMode' class='name expandable'>setTintMode</a>( <span class='pre'>tintMode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies a tint blending mode for this drawable. ...</div><div class='long'><p>Specifies a tint blending mode for this drawable.\n <p>\n Defines how this drawable's tint color should be blended into the drawable\n before it is drawn to screen. Default tint mode is PorterDuff.Mode.SRC_IN.\n </p>\n <p class=\"note\"><strong>Note:</strong> Setting a color filter via\n <a href=\"#!/api/android.graphics.drawable.Drawable-method-setColorFilter\" rel=\"android.graphics.drawable.Drawable-method-setColorFilter\" class=\"docClass\">setColorFilter</a>(ColorFilter) or\n PorterDuff.Mode) overrides tint.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tintMode</span> : Object {PorterDuff.Mode}<div class='sub-desc'><p>A Porter-Duff blending mode to apply to the drawable, a value of null sets\n                 the default Porter-Diff blending mode value\n                 of PorterDuff.Mode.SRC_IN\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTint\" rel=\"android.graphics.drawable.Drawable-method-setTint\" class=\"docClass\">setTint</a>(int)\n@see <a href=\"#!/api/android.graphics.drawable.Drawable-method-setTintList\" rel=\"android.graphics.drawable.Drawable-method-setTintList\" class=\"docClass\">setTintList</a>(ColorStateList)</p>\n</div></li></ul></div></div></div><div id='method-setVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-setVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-setVisible' class='name expandable'>setVisible</a>( <span class='pre'>visible, restart</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set whether this Drawable is visible. ...</div><div class='long'><p>Set whether this Drawable is visible.  This generally does not impact\n the Drawable's behavior, but is a hint that can be used by some\n Drawables, for example, to decide whether run animations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>visible</span> : Boolean<div class='sub-desc'><p>Set to true if visible, false if not.</p>\n</div></li><li><span class='pre'>restart</span> : Boolean<div class='sub-desc'><p>You can supply true here to force the drawable to behave\n                as if it has just become visible, even if it had last\n                been set visible.  Used for example to force animations\n                to restart.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Returns true if the new visibility is different than\n         its previous state.</p>\n</div></li></ul></div></div></div><div id='method-setXfermode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.graphics.drawable.ColorDrawable'>android.graphics.drawable.ColorDrawable</span><br/><a href='source/ColorDrawable.html#android-graphics-drawable-ColorDrawable-method-setXfermode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.ColorDrawable-method-setXfermode' class='name expandable'>setXfermode</a>( <span class='pre'>mode, mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Object {Xfermode}<div class='sub-desc'><p>new transfer mode</p>\n</div></li><li><span class='pre'>mode</span> : Object<div class='sub-desc'><p>new transfer mode</p>\n</div></li></ul></div></div></div><div id='method-unscheduleSelf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.graphics.drawable.Drawable' rel='android.graphics.drawable.Drawable' class='defined-in docClass'>android.graphics.drawable.Drawable</a><br/><a href='source/Drawable.html#android-graphics-drawable-Drawable-method-unscheduleSelf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.graphics.drawable.Drawable-method-unscheduleSelf' class='name expandable'>unscheduleSelf</a>( <span class='pre'>what</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Use the current android.graphics.drawable.Drawable.Callback implementation to have this Drawable\n unscheduled. ...</div><div class='long'><p>Use the current <a href=\"#!/api/android.graphics.drawable.Drawable.Callback\" rel=\"android.graphics.drawable.Drawable.Callback\" class=\"docClass\">android.graphics.drawable.Drawable.Callback</a> implementation to have this Drawable\n unscheduled.  Does nothing if there is no Callback attached to the\n Drawable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>what</span> : Object {Runnable}<div class='sub-desc'><p>The runnable that you no longer want called.\n@see Callback#unscheduleDrawable</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});