Ext.data.JsonP.android_util_SizeF({"tagname":"class","name":"android.util.SizeF","autodetected":{},"files":[{"filename":"SizeF.js","href":"SizeF.html#android-util-SizeF"}],"extends":"java.lang.Object","members":[{"name":"equals","tagname":"method","owner":"android.util.SizeF","id":"method-equals","meta":{}},{"name":"getHeight","tagname":"method","owner":"android.util.SizeF","id":"method-getHeight","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.util.SizeF","id":"method-getWidth","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.util.SizeF","id":"method-hashCode","meta":{}},{"name":"parseSizeF","tagname":"method","owner":"android.util.SizeF","id":"method-parseSizeF","meta":{}},{"name":"toString","tagname":"method","owner":"android.util.SizeF","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.util.SizeF","short_doc":"Immutable class for describing width and height dimensions in some arbitrary\n unit. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.util.SizeF</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SizeF.html#android-util-SizeF' target='_blank'>SizeF.js</a></div></pre><div class='doc-contents'><p>Immutable class for describing width and height dimensions in some arbitrary\n unit.\n <p>\n Width and height are finite values stored as a floating point representation.\n </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-equals' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.SizeF'>android.util.SizeF</span><br/><a href='source/SizeF.html#android-util-SizeF-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.SizeF-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if this size is equal to another size. ...</div><div class='long'><p>Check if this size is equal to another size.</p>\n\n<p> <p>Two sizes are equal if and only if both their widths and heights are the same.</p></p>\n\n<p> <p>For this purpose, the width/height float values are considered to be the same if and only\n if the method Float.floatToIntBits(float) returns the identical {@code int} value\n when applied to each.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the objects were equal, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-getHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.SizeF'>android.util.SizeF</span><br/><a href='source/SizeF.html#android-util-SizeF-method-getHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.SizeF-method-getHeight' class='name expandable'>getHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the height of the size (as an arbitrary unit). ...</div><div class='long'><p>Get the height of the size (as an arbitrary unit).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>height</p>\n</div></li></ul></div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.SizeF'>android.util.SizeF</span><br/><a href='source/SizeF.html#android-util-SizeF-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.SizeF-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the width of the size (as an arbitrary unit). ...</div><div class='long'><p>Get the width of the size (as an arbitrary unit).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>width</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.SizeF'>android.util.SizeF</span><br/><a href='source/SizeF.html#android-util-SizeF-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.SizeF-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n</div></div></div><div id='method-parseSizeF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.SizeF'>android.util.SizeF</span><br/><a href='source/SizeF.html#android-util-SizeF-method-parseSizeF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.SizeF-method-parseSizeF' class='name expandable'>parseSizeF</a>( <span class='pre'>string</span> ) : Object {android.util.SizeF}<span class=\"signature\"></span></div><div class='description'><div class='short'>Parses the specified string as a size value. ...</div><div class='long'><p>Parses the specified string as a size value.\n <p>\n The ASCII characters {@code }{@code u002a} ('<em>') and\n {@code }{@code u0078} ('x') are recognized as separators between\n the width and height.</em></p>\n <p>\n For any {@code SizeF s}: {@code SizeF.parseSizeF(s.toString()).equals(s)}.\n However, the method also handles sizes expressed in the\n following forms:</p>\n <p>\n \"<i>width</i>{@code x}<i>height</i>\" or\n \"<i>width</i>{@code }<i>height</i>\" {@code => new SizeF(width, height)},\n where <i>width</i> and <i>height</i> are string floats potentially\n containing a sign, such as \"-10.3\", \"+7\" or \"5.2\", but not containing\n an {@code 'x'} (such as a float in hexadecimal string format).</p></p>\n\n<p> <pre>{@code\n SizeF.parseSizeF(\"3.2*+6\").equals(new SizeF(3.2f, 6.0f)) == true\n SizeF.parseSizeF(\"-3x-6\").equals(new SizeF(-3.0f, -6.0f)) == true\n SizeF.parseSizeF(\"4 by 3\") => throws NumberFormatException\n }</pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>string</span> : String<div class='sub-desc'><p>the string representation of a size value.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.SizeF}</span><div class='sub-desc'><p>the size value represented by {@code string}.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NumberFormatException if {@code string} cannot be parsed\n as a size value.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code string} was {@code null}</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.SizeF'>android.util.SizeF</span><br/><a href='source/SizeF.html#android-util-SizeF-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.SizeF-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the size represented as a string with the format {@code \"WxH\"} ...</div><div class='long'><p>Return the size represented as a string with the format {@code \"WxH\"}</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>string representation of the size</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});