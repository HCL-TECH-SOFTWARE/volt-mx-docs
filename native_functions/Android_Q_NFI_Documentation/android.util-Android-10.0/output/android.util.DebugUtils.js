Ext.data.JsonP.android_util_DebugUtils({"tagname":"class","name":"android.util.DebugUtils","autodetected":{},"files":[{"filename":"DebugUtils.js","href":"DebugUtils.html#android-util-DebugUtils"}],"extends":"java.lang.Object","members":[{"name":"isObjectSelected","tagname":"method","owner":"android.util.DebugUtils","id":"method-isObjectSelected","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.util.DebugUtils","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.util.DebugUtils</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DebugUtils.html#android-util-DebugUtils' target='_blank'>DebugUtils.js</a></div></pre><div class='doc-contents'><p>Various utilities for debugging and logging.</p>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-isObjectSelected' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.DebugUtils'>android.util.DebugUtils</span><br/><a href='source/DebugUtils.html#android-util-DebugUtils-method-isObjectSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.DebugUtils-method-isObjectSelected' class='name expandable'>isObjectSelected</a>( <span class='pre'>object</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Filters objects against the ANDROID_OBJECT_FILTER\n environment variable. ...</div><div class='long'><p>Filters objects against the <code>ANDROID_OBJECT_FILTER</code>\n environment variable. This environment variable can filter objects\n based on their class name and attribute values.</p>\n\n\n<p> <p>Here is the syntax for <code>ANDROID_OBJECT_FILTER</code>:</p></p>\n\n<p> <p><code>ClassName@attribute1=value1@attribute2=value2...</code></p></p>\n\n<p> <p>Examples:</p>\n <ul>\n <li>Select TextView instances: <code>TextView</code></li>\n <li>Select TextView instances of text \"Loading\" and bottom offset of 22:\n <code>TextView@text=Loading.*@bottom=22</code></li>\n </ul></p>\n\n<p> <p>The class name and the values are regular expressions.</p></p>\n\n<p> <p>This class is useful for debugging and logging purpose:</p></p>\n\n<pre> if (DEBUG) {\n   if (DebugUtils.isObjectSelected(childView) && LOGV_ENABLED) {\n     Log.v(TAG, \"Object \" + childView + \" logged!\");\n   }\n }\n </pre>\n\n\n<p> <p><strong>NOTE</strong>: This method is very expensive as it relies\n heavily on regular expressions and reflection. Calls to this method\n should always be stripped out of the release binaries and avoided\n as much as possible in debug mode.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object {Object}<div class='sub-desc'><p>any object to match against the ANDROID_OBJECT_FILTER\n        environement variable</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if object is selected by the ANDROID_OBJECT_FILTER\n         environment variable, false otherwise</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});