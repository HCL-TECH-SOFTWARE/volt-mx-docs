Ext.data.JsonP.android_util_Range({"tagname":"class","name":"android.util.Range","autodetected":{},"files":[{"filename":"Range.js","href":"Range.html#android-util-Range"}],"extends":"java.lang.Object","members":[{"name":"clamp","tagname":"method","owner":"android.util.Range","id":"method-clamp","meta":{}},{"name":"contains","tagname":"method","owner":"android.util.Range","id":"method-contains","meta":{}},{"name":"create","tagname":"method","owner":"android.util.Range","id":"method-create","meta":{}},{"name":"equals","tagname":"method","owner":"android.util.Range","id":"method-equals","meta":{}},{"name":"extend","tagname":"method","owner":"android.util.Range","id":"method-extend","meta":{}},{"name":"getLower","tagname":"method","owner":"android.util.Range","id":"method-getLower","meta":{}},{"name":"getUpper","tagname":"method","owner":"android.util.Range","id":"method-getUpper","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.util.Range","id":"method-hashCode","meta":{}},{"name":"intersect","tagname":"method","owner":"android.util.Range","id":"method-intersect","meta":{}},{"name":"toString","tagname":"method","owner":"android.util.Range","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.util.Range","short_doc":"Immutable class for describing the range of two numeric values. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.util.Range</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Range.html#android-util-Range' target='_blank'>Range.js</a></div></pre><div class='doc-contents'><p>Immutable class for describing the range of two numeric values.\n <p>\n A range (or \"interval\") defines the inclusive boundaries around a contiguous span of\n values of some Comparable type; for example,\n \"integers from 1 to 100 inclusive.\"\n </p>\n <p>\n All ranges are bounded, and the left side of the range is always {@code &lt;=}\n the right side of the range.\n </p></p>\n\n<p> <p>Although the implementation itself is immutable, there is no restriction that objects\n stored must also be immutable. If mutable objects are stored here, then the range\n effectively becomes mutable. </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clamp' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-clamp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-clamp' class='name expandable'>clamp</a>( <span class='pre'>value</span> ) : Object {java.lang.Comparable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Clamps {@code value} to this range. ...</div><div class='long'><p>Clamps {@code value} to this range.</p>\n\n<p> <p>If the value is within this range, it is returned.  Otherwise, if it\n is {@code &lt;} than the lower endpoint, the lower endpoint is returned,\n else the upper endpoint is returned. Comparisons are performed using the\n Comparable interface.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object {java.lang.Comparable}<div class='sub-desc'><p>a non-{@code null} {@code T} reference</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Comparable}</span><div class='sub-desc'><p>{@code value} clamped to this range.</p>\n</div></li></ul></div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-contains' class='name expandable'>contains</a>( <span class='pre'>range</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if another {@code range} is within the bounds of this range. ...</div><div class='long'><p>Checks if another {@code range} is within the bounds of this range.</p>\n\n<p> <p>A range is considered to be within this range if both of its endpoints\n are within this range.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>range</span> : Object {android.util.Range}<div class='sub-desc'><p>a non-{@code null} {@code T} reference</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the range is within this inclusive range, {@code false} otherwise</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code range} was {@code null}</p>\n</div></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-create' class='name expandable'>create</a>( <span class='pre'>lower, upper</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new immutable range, with the argument types inferred. ...</div><div class='long'><p>Create a new immutable range, with the argument types inferred.</p>\n\n<p> <p>\n The endpoints are {@code [lower, upper]}; that\n is the range is bounded. {@code lower} must be lesser or equal\n to {@code upper}.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lower</span> : Object {java.lang.Comparable}<div class='sub-desc'><p>The lower endpoint (inclusive)</p>\n</div></li><li><span class='pre'>upper</span> : Object {java.lang.Comparable}<div class='sub-desc'><p>The upper endpoint (inclusive)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code lower} or {@code upper} is {@code null}</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compare two ranges for equality. ...</div><div class='long'><p>Compare two ranges for equality.</p>\n\n<p> <p>A range is considered equal if and only if both the lower and upper endpoints\n are also equal.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the ranges are equal, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-extend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-extend' class='name expandable'>extend</a>( <span class='pre'>value</span> ) : Object {android.util.Range}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the smallest range that includes this range and\n the {@code value}. ...</div><div class='long'><p>Returns the smallest range that includes this range and\n the {@code value}.\n <p>\n See <a href=\"#!/api/android.util.Range-method-extend\" rel=\"android.util.Range-method-extend\" class=\"docClass\">extend</a>(Range) for more details, as this method is\n equivalent to {@code extend(Range.create(value, value))}.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object {java.lang.Comparable}<div class='sub-desc'><p>a non-{@code null} {@code T} reference</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Range}</span><div class='sub-desc'><p>the extension of this range and the value.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code value} was {@code null}</p>\n</div></li></ul></div></div></div><div id='method-getLower' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-getLower' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-getLower' class='name expandable'>getLower</a>( <span class='pre'></span> ) : Object {java.lang.Comparable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the lower endpoint. ...</div><div class='long'><p>Get the lower endpoint.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Comparable}</span><div class='sub-desc'><p>a non-{@code null} {@code T} reference</p>\n</div></li></ul></div></div></div><div id='method-getUpper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-getUpper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-getUpper' class='name expandable'>getUpper</a>( <span class='pre'></span> ) : Object {java.lang.Comparable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the upper endpoint. ...</div><div class='long'><p>Get the upper endpoint.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Comparable}</span><div class='sub-desc'><p>a non-{@code null} {@code T} reference</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n</div></div></div><div id='method-intersect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-intersect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-intersect' class='name expandable'>intersect</a>( <span class='pre'>lower, upper</span> ) : Object {android.util.Range}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the intersection of this range and the inclusive range\n specified by {@code [lower, upper]}. ...</div><div class='long'><p>Returns the intersection of this range and the inclusive range\n specified by {@code [lower, upper]}.\n <p>\n See <a href=\"#!/api/android.util.Range-method-intersect\" rel=\"android.util.Range-method-intersect\" class=\"docClass\">intersect</a>(Range) for more details.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lower</span> : Object {java.lang.Comparable}<div class='sub-desc'><p>a non-{@code null} {@code T} reference</p>\n</div></li><li><span class='pre'>upper</span> : Object {java.lang.Comparable}<div class='sub-desc'><p>a non-{@code null} {@code T} reference</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Range}</span><div class='sub-desc'><p>the intersection of this range and the other range</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code lower} or {@code upper} was {@code null}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the ranges are disjoint.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Range'>android.util.Range</span><br/><a href='source/Range.html#android-util-Range-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Range-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the range as a string representation {@code \"[lower, upper]\"}. ...</div><div class='long'><p>Return the range as a string representation {@code \"[lower, upper]\"}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>string representation of the range</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});