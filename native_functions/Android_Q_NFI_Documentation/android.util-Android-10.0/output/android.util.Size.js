Ext.data.JsonP.android_util_Size({"tagname":"class","name":"android.util.Size","autodetected":{},"files":[{"filename":"Size.js","href":"Size.html#android-util-Size"}],"extends":"java.lang.Object","members":[{"name":"equals","tagname":"method","owner":"android.util.Size","id":"method-equals","meta":{}},{"name":"getHeight","tagname":"method","owner":"android.util.Size","id":"method-getHeight","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.util.Size","id":"method-getWidth","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.util.Size","id":"method-hashCode","meta":{}},{"name":"parseSize","tagname":"method","owner":"android.util.Size","id":"method-parseSize","meta":{}},{"name":"toString","tagname":"method","owner":"android.util.Size","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.util.Size","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.util.Size</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Size.html#android-util-Size' target='_blank'>Size.js</a></div></pre><div class='doc-contents'><p>Immutable class for describing width and height dimensions in pixels.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-equals' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Size'>android.util.Size</span><br/><a href='source/Size.html#android-util-Size-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Size-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if this size is equal to another size. ...</div><div class='long'><p>Check if this size is equal to another size.\n <p>\n Two sizes are equal if and only if both their widths and heights are\n equal.\n </p>\n <p>\n A size object is never equal to any other type of object.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the objects were equal, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-getHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Size'>android.util.Size</span><br/><a href='source/Size.html#android-util-Size-method-getHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Size-method-getHeight' class='name expandable'>getHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the height of the size (in pixels). ...</div><div class='long'><p>Get the height of the size (in pixels).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>height</p>\n</div></li></ul></div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Size'>android.util.Size</span><br/><a href='source/Size.html#android-util-Size-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Size-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the width of the size (in pixels). ...</div><div class='long'><p>Get the width of the size (in pixels).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>width</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Size'>android.util.Size</span><br/><a href='source/Size.html#android-util-Size-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Size-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n</div></div></div><div id='method-parseSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Size'>android.util.Size</span><br/><a href='source/Size.html#android-util-Size-method-parseSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Size-method-parseSize' class='name expandable'>parseSize</a>( <span class='pre'>string</span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Parses the specified string as a size value. ...</div><div class='long'><p>Parses the specified string as a size value.\n <p>\n The ASCII characters {@code }{@code u002a} ('<em>') and\n {@code }{@code u0078} ('x') are recognized as separators between\n the width and height.</em></p>\n <p>\n For any {@code Size s}: {@code Size.parseSize(s.toString()).equals(s)}.\n However, the method also handles sizes expressed in the\n following forms:</p>\n <p>\n \"<i>width</i>{@code x}<i>height</i>\" or\n \"<i>width</i>{@code }<i>height</i>\" {@code => new Size(width, height)},\n where <i>width</i> and <i>height</i> are string integers potentially\n containing a sign, such as \"-10\", \"+7\" or \"5\".</p></p>\n\n<p> <pre>{@code\n Size.parseSize(\"3*+6\").equals(new Size(3, 6)) == true\n Size.parseSize(\"-3x-6\").equals(new Size(-3, -6)) == true\n Size.parseSize(\"4 by 3\") => throws NumberFormatException\n }</pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>string</span> : String<div class='sub-desc'><p>the string representation of a size value.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>the size value represented by {@code string}.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NumberFormatException if {@code string} cannot be parsed\n as a size value.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code string} was {@code null}</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.util.Size'>android.util.Size</span><br/><a href='source/Size.html#android-util-Size-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.util.Size-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the size represented as a string with the format {@code \"WxH\"} ...</div><div class='long'><p>Return the size represented as a string with the format {@code \"WxH\"}</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>string representation of the size</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});