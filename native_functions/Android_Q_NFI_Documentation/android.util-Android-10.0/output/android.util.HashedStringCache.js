Ext.data.JsonP.android_util_HashedStringCache({"tagname":"class","name":"android.util.HashedStringCache","autodetected":{},"files":[{"filename":"HashedStringCache.js","href":"HashedStringCache.html#android-util-HashedStringCache"}],"extends":"java.lang.Object","hide":true,"members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.util.HashedStringCache","short_doc":"HashedStringCache provides hashing functionality with an underlying LRUCache and expiring salt. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.util.HashedStringCache</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/HashedStringCache.html#android-util-HashedStringCache' target='_blank'>HashedStringCache.js</a></div></pre><div class='doc-contents'><p>HashedStringCache provides hashing functionality with an underlying LRUCache and expiring salt.\n Salt and expiration time are being stored under the tag passed in by the calling package --\n intended usage is the calling package name.</p>\n</div><div class='members'></div></div>","meta":{}});