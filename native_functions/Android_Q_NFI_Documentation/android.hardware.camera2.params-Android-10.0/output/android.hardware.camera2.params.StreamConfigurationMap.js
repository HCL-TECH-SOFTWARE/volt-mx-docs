Ext.data.JsonP.android_hardware_camera2_params_StreamConfigurationMap({"tagname":"class","name":"android.hardware.camera2.params.StreamConfigurationMap","autodetected":{},"files":[{"filename":"StreamConfigurationMap.js","href":"StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap"}],"extends":"java.lang.Object","members":[{"name":"equals","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-equals","meta":{}},{"name":"getHighResolutionOutputSizes","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getHighResolutionOutputSizes","meta":{}},{"name":"getHighSpeedVideoFpsRanges","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getHighSpeedVideoFpsRanges","meta":{}},{"name":"getHighSpeedVideoFpsRangesFor","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getHighSpeedVideoFpsRangesFor","meta":{}},{"name":"getHighSpeedVideoSizes","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getHighSpeedVideoSizes","meta":{}},{"name":"getHighSpeedVideoSizesFor","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getHighSpeedVideoSizesFor","meta":{}},{"name":"getInputFormats","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getInputFormats","meta":{}},{"name":"getInputSizes","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getInputSizes","meta":{}},{"name":"getOutputFormats","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getOutputFormats","meta":{}},{"name":"getOutputMinFrameDuration","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getOutputMinFrameDuration","meta":{}},{"name":"getOutputSizes","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getOutputSizes","meta":{}},{"name":"getOutputStallDuration","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getOutputStallDuration","meta":{}},{"name":"getValidOutputFormatsForInput","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-getValidOutputFormatsForInput","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-hashCode","meta":{}},{"name":"toString","tagname":"method","owner":"android.hardware.camera2.params.StreamConfigurationMap","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.params.StreamConfigurationMap","short_doc":"Immutable class to store the available stream\n configurations to set up\n Surfaces for creating a\n capture session wit...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.camera2.params.StreamConfigurationMap</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap' target='_blank'>StreamConfigurationMap.js</a></div></pre><div class='doc-contents'><p>Immutable class to store the available stream\n configurations to set up\n Surfaces for creating a\n capture session with\n android.hardware.camera2.CameraDevice.createCaptureSession.\n <!-- TODO: link to input stream configuration --></p>\n\n<p> <p>This is the authoritative list for all <!-- input/ -->output formats (and sizes respectively\n for that format) that are supported by a camera device.</p></p>\n\n<p> <p>This also contains the minimum frame durations and stall durations for each format/size\n combination that can be used to calculate effective frame rate when submitting multiple captures.\n </p></p>\n\n<p> <p>An instance of this object is available from CameraCharacteristics using\n the CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP key and the\n CameraCharacteristics.get method.</p></p>\n\n<p> <pre><code>{@code\n CameraCharacteristics characteristics = cameraManager.getCameraCharacteristics(cameraId);\n StreamConfigurationMap configs = characteristics.get(\n         CameraCharacteristics.SCALER_STREAM_CONFIGURATION_MAP);\n }</code></pre></p>\n\n<p> @see CameraCharacteristics#SCALER_STREAM_CONFIGURATION_MAP\n @see CameraDevice#createCaptureSession</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-equals' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if this android.hardware.camera2.params.StreamConfigurationMap is equal to another\n android.hardware.camera2.pa...</div><div class='long'><p>Check if this <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap\" rel=\"android.hardware.camera2.params.StreamConfigurationMap\" class=\"docClass\">android.hardware.camera2.params.StreamConfigurationMap</a> is equal to another\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap\" rel=\"android.hardware.camera2.params.StreamConfigurationMap\" class=\"docClass\">android.hardware.camera2.params.StreamConfigurationMap</a>.</p>\n\n<p> <p>Two vectors are only equal if and only if each of the respective elements is equal.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the objects were equal, {@code false} otherwise</p>\n</div></li></ul></div></div></div><div id='method-getHighResolutionOutputSizes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getHighResolutionOutputSizes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighResolutionOutputSizes' class='name expandable'>getHighResolutionOutputSizes</a>( <span class='pre'></span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a list of supported high resolution sizes, which cannot operate at full BURST_CAPTURE\n rate. ...</div><div class='long'><p>Get a list of supported high resolution sizes, which cannot operate at full BURST_CAPTURE\n rate.</p>\n\n<p> <p>This includes all output sizes that cannot meet the 20 fps frame rate requirements for the\n BURST_CAPTURE\n capability.  This does not include the stall duration, so for example, a JPEG or RAW16 output\n resolution with a large stall duration but a minimum frame duration that's above 20 fps will\n still be listed in the regular <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" class=\"docClass\">getOutputSizes</a> list. All the sizes on this list that\n are less than 24 megapixels are still guaranteed to operate at a rate of at least 10 fps,\n not including stall duration. Sizes on this list that are at least 24 megapixels are allowed\n to operate at less than 10 fps.</p></p>\n\n<p> <p>For a device that does not support the BURST_CAPTURE capability, this list will be\n {@code null}, since resolutions in the <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" class=\"docClass\">getOutputSizes</a> list are already not\n guaranteed to meet &gt;= 20 fps rate requirements. For a device that does support the\n BURST_CAPTURE capability, this list may be empty, if all supported resolutions meet the 20\n fps requirement.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>an array of supported slower high-resolution sizes, or {@code null} if the\n         BURST_CAPTURE capability is not supported</p>\n</div></li></ul></div></div></div><div id='method-getHighSpeedVideoFpsRanges' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getHighSpeedVideoFpsRanges' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges' class='name expandable'>getHighSpeedVideoFpsRanges</a>( <span class='pre'></span> ) : Object {android.util.Range}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a list of supported high speed video recording FPS ranges. ...</div><div class='long'><p>Get a list of supported high speed video recording FPS ranges.\n <p>\n When CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO is\n supported in CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES, this method will\n list the supported high speed video FPS range configurations. Application can then use\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizesFor\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizesFor\" class=\"docClass\">getHighSpeedVideoSizesFor</a> to query available sizes for one of returned FPS range.\n </p>\n <p>\n To enable high speed video recording, application must create a constrained create high speed\n capture session via CameraDevice.createConstrainedHighSpeedCaptureSession, and submit\n a CaptureRequest list created by\n android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList\n to this session. The application must select the video size from this method and\n FPS range from\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" class=\"docClass\">getHighSpeedVideoFpsRangesFor</a> to configure the constrained high speed session and\n generate the high speed request list. For example, if the application intends to do high\n speed recording, it can select one FPS range reported by this method, query the video sizes\n corresponding to this FPS range by <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizesFor\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizesFor\" class=\"docClass\">getHighSpeedVideoSizesFor</a> and use one of reported\n sizes to create a high speed capture session. Note that for the use case of multiple output\n streams, application must select one unique size from this method to use (e.g., preview and\n recording streams must have the same size). Otherwise, the high speed session creation will\n fail. Once the high speed capture session is created, the application can set the FPS range\n in the recording request lists via\n android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList.\n </p>\n <p>\n The FPS ranges reported by this method will have below characteristics:\n <li>The fpsMin and fpsMax will be a multiple 30fps.</li>\n <li>The fpsMin will be no less than 30fps, the fpsMax will be no less than 120fps.</li>\n <li>At least one range will be a fixed FPS range where fpsMin == fpsMax.</li>\n <li>For each fixed FPS range, there will be one corresponding variable FPS range [30,\n fps_max]. These kinds of FPS ranges are suitable for preview-only use cases where the\n application doesn't want the camera device always produce higher frame rate than the display\n refresh rate.</li>\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Range}</span><div class='sub-desc'><p>an array of supported high speed video recording FPS ranges The upper bound of\n         returned ranges is guaranteed to be larger or equal to 120.\n@see <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizesFor\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizesFor\" class=\"docClass\">getHighSpeedVideoSizesFor</a>\n@see CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO\n@see CameraDevice#createConstrainedHighSpeedCaptureSession\n@see android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</p>\n</div></li></ul></div></div></div><div id='method-getHighSpeedVideoFpsRangesFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor' class='name expandable'>getHighSpeedVideoFpsRangesFor</a>( <span class='pre'>size</span> ) : Object {android.util.Range}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the frame per second ranges (fpsMin, fpsMax) for input high speed video size. ...</div><div class='long'><p>Get the frame per second ranges (fpsMin, fpsMax) for input high speed video size.\n <p>\n See <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" class=\"docClass\">getHighSpeedVideoFpsRanges</a> for how to enable high speed recording.\n </p>\n <p>\n The FPS ranges reported in this method\n must not be used to setup capture requests that are submitted to unconstrained capture\n sessions, or it will result in IllegalArgumentExceptions.\n </p>\n <p>\n See <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" class=\"docClass\">getHighSpeedVideoFpsRanges</a> for the characteristics of the returned FPS ranges.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>size</span> : Object {Size}<div class='sub-desc'><p>one of the sizes returned by getHighSpeedVideoSizes()</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Range}</span><div class='sub-desc'><p>an array of supported high speed video recording FPS ranges The upper bound of\n         returned ranges is guaranteed to be greater than or equal to 120.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if input size does not exist in the return value of\n             getHighSpeedVideoSizes\n@see <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizes\" class=\"docClass\">getHighSpeedVideoSizes</a>()\n@see <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" class=\"docClass\">getHighSpeedVideoFpsRanges</a>()</p>\n</div></li></ul></div></div></div><div id='method-getHighSpeedVideoSizes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getHighSpeedVideoSizes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizes' class='name expandable'>getHighSpeedVideoSizes</a>( <span class='pre'></span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a list of supported high speed video recording sizes. ...</div><div class='long'><p>Get a list of supported high speed video recording sizes.\n <p>\n When CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO is\n supported in CameraCharacteristics.REQUEST_AVAILABLE_CAPABILITIES, this method will\n list the supported high speed video size configurations. All the sizes listed will be a\n subset of the sizes reported by <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" class=\"docClass\">getOutputSizes</a> for processed non-stalling formats\n (typically ImageFormat.PRIVATE ImageFormat.YUV_420_888, etc.)\n </p>\n <p>\n To enable high speed video recording, application must create a constrained create high speed\n capture session via CameraDevice.createConstrainedHighSpeedCaptureSession, and submit\n a CaptureRequest list created by\n android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList\n to this session. The application must select the video size from this method and\n FPS range from\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" class=\"docClass\">getHighSpeedVideoFpsRangesFor</a> to configure the constrained high speed session and\n generate the high speed request list. For example, if the application intends to do high\n speed recording, it can select the maximum size reported by this method to create high speed\n capture session. Note that for the use case of multiple output streams, application must\n select one unique size from this method to use (e.g., preview and recording streams must have\n the same size). Otherwise, the high speed session creation will fail. Once the size is\n selected, application can get the supported FPS ranges by\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" class=\"docClass\">getHighSpeedVideoFpsRangesFor</a>, and use these FPS ranges to setup the recording\n request lists via\n android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession.createHighSpeedRequestList.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>an array of supported high speed video recording sizes\n@see <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRangesFor\" class=\"docClass\">getHighSpeedVideoFpsRangesFor</a>(Size)\n@see CameraMetadata#REQUEST_AVAILABLE_CAPABILITIES_CONSTRAINED_HIGH_SPEED_VIDEO\n@see CameraDevice#createConstrainedHighSpeedCaptureSession\n@see android.hardware.camera2.CameraConstrainedHighSpeedCaptureSession#createHighSpeedRequestList</p>\n</div></li></ul></div></div></div><div id='method-getHighSpeedVideoSizesFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getHighSpeedVideoSizesFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizesFor' class='name expandable'>getHighSpeedVideoSizesFor</a>( <span class='pre'>fpsRange</span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the supported video sizes for an input high speed FPS range. ...</div><div class='long'><p>Get the supported video sizes for an input high speed FPS range.</p>\n\n<p> <p> See <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoSizes\" class=\"docClass\">getHighSpeedVideoSizes</a> for how to enable high speed recording.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fpsRange</span> : Object {android.util.Range}<div class='sub-desc'><p>one of the FPS range returned by getHighSpeedVideoFpsRanges()</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>An array of video sizes to create high speed capture sessions for high speed streaming\n         use cases.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if input FPS range does not exist in the return value of\n         getHighSpeedVideoFpsRanges\n@see <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighSpeedVideoFpsRanges\" class=\"docClass\">getHighSpeedVideoFpsRanges</a>()</p>\n</div></li></ul></div></div></div><div id='method-getInputFormats' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getInputFormats' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getInputFormats' class='name expandable'>getInputFormats</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the image {@code format} input formats in this stream configuration. ...</div><div class='long'><p>Get the image {@code format} input formats in this stream configuration.</p>\n\n<p> <p>All image formats returned by this function will be defined in either ImageFormat\n or in PixelFormat (and there is no possibility of collision).</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an array of integer format\n@see ImageFormat\n@see PixelFormat</p>\n</div></li></ul></div></div></div><div id='method-getInputSizes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getInputSizes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getInputSizes' class='name expandable'>getInputSizes</a>( <span class='pre'>format</span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the supported input sizes for this input format. ...</div><div class='long'><p>Get the supported input sizes for this input format.</p>\n\n<p> <p>The format must have come from <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getInputFormats\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getInputFormats\" class=\"docClass\">getInputFormats</a>; otherwise\n {@code null} is returned.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Number<div class='sub-desc'><p>a format from <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getInputFormats\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getInputFormats\" class=\"docClass\">getInputFormats</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>a non-empty array of sizes, or {@code null} if the format was not available.</p>\n</div></li></ul></div></div></div><div id='method-getOutputFormats' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getOutputFormats' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputFormats' class='name expandable'>getOutputFormats</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the image {@code format} output formats in this stream configuration. ...</div><div class='long'><p>Get the image {@code format} output formats in this stream configuration.</p>\n\n<p> <p>All image formats returned by this function will be defined in either ImageFormat\n or in PixelFormat (and there is no possibility of collision).</p></p>\n\n<p> <p>Formats listed in this array are guaranteed to return true if queried with\n isOutputSupportedFor(int).</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an array of integer format\n@see ImageFormat\n@see PixelFormat</p>\n</div></li></ul></div></div></div><div id='method-getOutputMinFrameDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getOutputMinFrameDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputMinFrameDuration' class='name expandable'>getOutputMinFrameDuration</a>( <span class='pre'>klass, size</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the minimum frame duration\n for the class/size combination (in nanoseconds). ...</div><div class='long'><p>Get the minimum frame duration\n for the class/size combination (in nanoseconds).</p>\n\n<p> <p>This assumes that the {@code klass} is set up to use ImageFormat.PRIVATE.\n For user-defined formats, use Size).</p></p>\n\n<p> <p>{@code klass} should be one of the ones which is supported by\n isOutputSupportedFor(Class).</p></p>\n\n<p> <p>{@code size} should be one of the ones returned by\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" class=\"docClass\">getOutputSizes</a>(int).</p></p>\n\n<p> <p>This should correspond to the frame duration when only that stream is active, with all\n processing (typically in {@code android.*.mode}) set to either {@code OFF} or {@code FAST}.\n </p></p>\n\n<p> <p>When multiple streams are used in a request, the minimum frame duration will be\n {@code max(individual stream min durations)}.</p></p>\n\n<p> <p>For devices that do not support manual sensor control\n (android.hardware.camera2.CameraMetadata.REQUEST_AVAILABLE_CAPABILITIES_MANUAL_SENSOR),\n this function may return 0.</p></p>\n\n<p> <!--\n TODO: uncomment after adding input stream support\n <p>The minimum frame duration of a stream (of a particular format, size) is the same\n regardless of whether the stream is input or output.</p>\n --></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>klass</span> : Object {java.lang.Class}<div class='sub-desc'><p>a class which is supported by isOutputSupportedFor(Class) and has a\n          non-empty array returned by getOutputSizes(Class)</p>\n</div></li><li><span class='pre'>size</span> : Object {Size}<div class='sub-desc'><p>an output-compatible size</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a minimum frame duration {@code >} 0 in nanoseconds, or\n          0 if the minimum frame duration is not available.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if {@code klass} or {@code size} was not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code size} or {@code klass} was {@code null}\n@see CaptureRequest#SENSOR_FRAME_DURATION\n@see ImageFormat\n@see PixelFormat</p>\n</div></li></ul></div></div></div><div id='method-getOutputSizes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getOutputSizes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes' class='name expandable'>getOutputSizes</a>( <span class='pre'>format</span> ) : Object {android.util.Size}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a list of sizes compatible with the requested image {@code format}. ...</div><div class='long'><p>Get a list of sizes compatible with the requested image {@code format}.</p>\n\n<p> <p>The {@code format} should be a supported format (one of the formats returned by\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputFormats\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputFormats\" class=\"docClass\">getOutputFormats</a>).</p></p>\n\n<p> As of API level 23, the <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getHighResolutionOutputSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getHighResolutionOutputSizes\" class=\"docClass\">getHighResolutionOutputSizes</a> method can be used on devices\n that support the\n BURST_CAPTURE\n capability to get a list of high-resolution output sizes that cannot operate at the preferred\n 20fps rate. This means that for some supported formats, this method will return an empty\n list, if all the supported resolutions operate at below 20fps.  For devices that do not\n support the BURST_CAPTURE capability, all output resolutions are listed through this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>format</span> : Number<div class='sub-desc'><p>an image format from ImageFormat or PixelFormat</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.util.Size}</span><div class='sub-desc'><p>an array of supported sizes,\n          or {@code null} if the {@code format} is not a supported output\n@see ImageFormat\n@see PixelFormat\n@see <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputFormats\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputFormats\" class=\"docClass\">getOutputFormats</a></p>\n</div></li></ul></div></div></div><div id='method-getOutputStallDuration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getOutputStallDuration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputStallDuration' class='name expandable'>getOutputStallDuration</a>( <span class='pre'>klass, size</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the stall duration for the class/size combination (in nanoseconds). ...</div><div class='long'><p>Get the stall duration for the class/size combination (in nanoseconds).</p>\n\n<p> <p>This assumes that the {@code klass} is set up to use ImageFormat.PRIVATE.\n For user-defined formats, use Size).</p></p>\n\n<p> <p>{@code klass} should be one of the ones with a non-empty array returned by\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" class=\"docClass\">getOutputSizes</a>(Class).</p></p>\n\n<p> <p>{@code size} should be one of the ones returned by\n <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" rel=\"android.hardware.camera2.params.StreamConfigurationMap-method-getOutputSizes\" class=\"docClass\">getOutputSizes</a>(Class).</p></p>\n\n<p> <p>See Size) for a definition of a\n <em>stall duration</em>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>klass</span> : Object {java.lang.Class}<div class='sub-desc'><p>a class which is supported by isOutputSupportedFor(Class) and has a\n          non-empty array returned by getOutputSizes(Class)</p>\n</div></li><li><span class='pre'>size</span> : Object {Size}<div class='sub-desc'><p>an output-compatible size</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a minimum frame duration {@code >=} 0 in nanoseconds</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if {@code klass} or {@code size} was not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code size} or {@code klass} was {@code null}\n@see CaptureRequest#SENSOR_FRAME_DURATION\n@see ImageFormat\n@see PixelFormat</p>\n</div></li></ul></div></div></div><div id='method-getValidOutputFormatsForInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-getValidOutputFormatsForInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-getValidOutputFormatsForInput' class='name expandable'>getValidOutputFormatsForInput</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the image {@code format} output formats for a reprocessing input format. ...</div><div class='long'><p>Get the image {@code format} output formats for a reprocessing input format.</p>\n\n<p> <p>When submitting a CaptureRequest with an input Surface of a given format,\n the only allowed target outputs of the CaptureRequest are the ones with a format\n listed in the return value of this method. Including any other output Surface as a target\n will throw an IllegalArgumentException. If no output format is supported given the input\n format, an empty int[] will be returned.</p></p>\n\n<p> <p>All image formats returned by this function will be defined in either ImageFormat\n or in PixelFormat (and there is no possibility of collision).</p></p>\n\n<p> <p>Formats listed in this array are guaranteed to return true if queried with\n isOutputSupportedFor(int).</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>an array of integer format\n@see ImageFormat\n@see PixelFormat</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.params.StreamConfigurationMap'>android.hardware.camera2.params.StreamConfigurationMap</span><br/><a href='source/StreamConfigurationMap.html#android-hardware-camera2-params-StreamConfigurationMap-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.params.StreamConfigurationMap-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return this android.hardware.camera2.params.StreamConfigurationMap as a string representation. ...</div><div class='long'><p>Return this <a href=\"#!/api/android.hardware.camera2.params.StreamConfigurationMap\" rel=\"android.hardware.camera2.params.StreamConfigurationMap\" class=\"docClass\">android.hardware.camera2.params.StreamConfigurationMap</a> as a string representation.</p>\n\n<p> <p>{@code \"StreamConfigurationMap(Outputs([w:%d, h:%d, format:%s(%d), min_duration:%d,\n stall:%d], ... [w:%d, h:%d, format:%s(%d), min_duration:%d, stall:%d]), Inputs([w:%d, h:%d,\n format:%s(%d)], ... [w:%d, h:%d, format:%s(%d)]), ValidOutputFormatsForInput(\n [in:%d, out:%d, ... %d], ... [in:%d, out:%d, ... %d]), HighSpeedVideoConfigurations(\n [w:%d, h:%d, min_fps:%d, max_fps:%d], ... [w:%d, h:%d, min_fps:%d, max_fps:%d]))\"}.</p></p>\n\n<p> <p>{@code Outputs([w:%d, h:%d, format:%s(%d), min_duration:%d, stall:%d], ...\n [w:%d, h:%d, format:%s(%d), min_duration:%d, stall:%d])}, where\n {@code [w:%d, h:%d, format:%s(%d), min_duration:%d, stall:%d]} represents an output\n configuration's width, height, format, minimal frame duration in nanoseconds, and stall\n duration in nanoseconds.</p></p>\n\n<p> <p>{@code Inputs([w:%d, h:%d, format:%s(%d)], ... [w:%d, h:%d, format:%s(%d)])}, where\n {@code [w:%d, h:%d, format:%s(%d)]} represents an input configuration's width, height, and\n format.</p></p>\n\n<p> <p>{@code ValidOutputFormatsForInput([in:%s(%d), out:%s(%d), ... %s(%d)],\n ... [in:%s(%d), out:%s(%d), ... %s(%d)])}, where {@code [in:%s(%d), out:%s(%d), ... %s(%d)]}\n represents an input fomat and its valid output formats.</p></p>\n\n<p> <p>{@code HighSpeedVideoConfigurations([w:%d, h:%d, min_fps:%d, max_fps:%d],\n ... [w:%d, h:%d, min_fps:%d, max_fps:%d])}, where\n {@code [w:%d, h:%d, min_fps:%d, max_fps:%d]} represents a high speed video output\n configuration's width, height, minimal frame rate, and maximal frame rate.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>string representation of StreamConfigurationMap</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});