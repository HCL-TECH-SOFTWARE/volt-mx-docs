Ext.data.JsonP.java_security_cert_X509Extension({"tagname":"class","name":"java.security.cert.X509Extension","autodetected":{},"files":[{"filename":"X509Extension.js","href":"X509Extension.html#java-security-cert-X509Extension"}],"author":[{"tagname":"author","name":"Hemma Prafullchandra","email":null}],"members":[{"name":"getCriticalExtensionOIDs","tagname":"method","owner":"java.security.cert.X509Extension","id":"method-getCriticalExtensionOIDs","meta":{}},{"name":"getExtensionValue","tagname":"method","owner":"java.security.cert.X509Extension","id":"method-getExtensionValue","meta":{}},{"name":"getNonCriticalExtensionOIDs","tagname":"method","owner":"java.security.cert.X509Extension","id":"method-getNonCriticalExtensionOIDs","meta":{}},{"name":"hasUnsupportedCriticalExtension","tagname":"method","owner":"java.security.cert.X509Extension","id":"method-hasUnsupportedCriticalExtension","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.cert.X509Extension","short_doc":"Interface for an X.509 extension. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/X509Extension.html#java-security-cert-X509Extension' target='_blank'>X509Extension.js</a></div></pre><div class='doc-contents'><p>Interface for an X.509 extension.</p>\n\n<p> <p>The extensions defined for X.509 v3\n <a href=\"#!/api/java.security.cert.X509Certificate\" rel=\"java.security.cert.X509Certificate\" class=\"docClass\">Certificates</a> and v2\n <a href=\"#!/api/java.security.cert.X509CRL\" rel=\"java.security.cert.X509CRL\" class=\"docClass\">CRLs</a> (Certificate Revocation\n Lists) provide methods\n for associating additional attributes with users or public keys,\n for managing the certification hierarchy, and for managing CRL\n distribution. The X.509 extensions format also allows communities\n to define private extensions to carry information unique to those\n communities.</p>\n\n<p> <p>Each extension in a certificate/CRL may be designated as\n critical or non-critical.  A certificate/CRL-using system (an application\n validating a certificate/CRL) must reject the certificate/CRL if it\n encounters a critical extension it does not recognize.  A non-critical\n extension may be ignored if it is not recognized.\n <p>\n The ASN.1 definition for this is:</p>\n\n<pre> Extensions  ::=  SEQUENCE SIZE (1..MAX) OF Extension\n\n Extension  ::=  SEQUENCE  {\n     extnId        OBJECT IDENTIFIER,\n     critical      BOOLEAN DEFAULT FALSE,\n     extnValue     OCTET STRING\n                   -- contains a DER encoding of a value\n                   -- of the type registered for use with\n                   -- the extnId object identifier value\n }\n </pre>\n\n\n<p> Since not all extensions are known, the {@code getExtensionValue}\n method returns the DER-encoded OCTET STRING of the\n extension value (i.e., the {@code extnValue}). This can then\n be handled by a <em>Class</em> that understands the extension.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getCriticalExtensionOIDs' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Extension'>java.security.cert.X509Extension</span><br/><a href='source/X509Extension.html#java-security-cert-X509Extension-method-getCriticalExtensionOIDs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Extension-method-getCriticalExtensionOIDs' class='name expandable'>getCriticalExtensionOIDs</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets a Set of the OID strings for the extension(s) marked\n CRITICAL in the certificate/CRL managed by the object\n imp...</div><div class='long'><p>Gets a Set of the OID strings for the extension(s) marked\n CRITICAL in the certificate/CRL managed by the object\n implementing this interface.</p>\n\n<p> Here is sample code to get a Set of critical extensions from an\n X509Certificate and print the OIDs:\n <pre>{@code\n X509Certificate cert = null;\n try (InputStream inStrm = new FileInputStream(\"DER-encoded-Cert\")) {\n     CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n     cert = (X509Certificate)cf.generateCertificate(inStrm);\n }</pre></p>\n\n<p> Set<String> critSet = cert.getCriticalExtensionOIDs();\n if (critSet != null &amp;&amp; !critSet.isEmpty()) {\n     System.out.println(\"Set of critical extensions:\");\n     for (String oid : critSet) {\n         System.out.println(oid);\n     }\n }\n }</String></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>a Set (or an empty Set if none are marked critical) of\n the extension OID strings for extensions that are marked critical.\n If there are no extensions present at all, then this method returns\n null.</p>\n</div></li></ul></div></div></div><div id='method-getExtensionValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Extension'>java.security.cert.X509Extension</span><br/><a href='source/X509Extension.html#java-security-cert-X509Extension-method-getExtensionValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Extension-method-getExtensionValue' class='name expandable'>getExtensionValue</a>( <span class='pre'>oid</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the DER-encoded OCTET string for the extension value\n (extnValue) identified by the passed-in {@code oid}\n String. ...</div><div class='long'><p>Gets the DER-encoded OCTET string for the extension value\n (<em>extnValue</em>) identified by the passed-in {@code oid}\n String.\n The {@code oid} string is\n represented by a set of nonnegative whole numbers separated\n by periods.</p>\n\n<p> <p>For example:<br>\n <table border=groove summary=\"Examples of OIDs and extension names\">\n <tr>\n <th>OID <em>(Object Identifier)</em></th>\n <th>Extension Name</th></tr>\n <tr><td>2.5.29.14</td>\n <td>SubjectKeyIdentifier</td></tr>\n <tr><td>2.5.29.15</td>\n <td>KeyUsage</td></tr>\n <tr><td>2.5.29.16</td>\n <td>PrivateKeyUsage</td></tr>\n <tr><td>2.5.29.17</td>\n <td>SubjectAlternativeName</td></tr>\n <tr><td>2.5.29.18</td>\n <td>IssuerAlternativeName</td></tr>\n <tr><td>2.5.29.19</td>\n <td>BasicConstraints</td></tr>\n <tr><td>2.5.29.30</td>\n <td>NameConstraints</td></tr>\n <tr><td>2.5.29.33</td>\n <td>PolicyMappings</td></tr>\n <tr><td>2.5.29.35</td>\n <td>AuthorityKeyIdentifier</td></tr>\n <tr><td>2.5.29.36</td>\n <td>PolicyConstraints</td></tr>\n </table></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>oid</span> : String<div class='sub-desc'><p>the Object Identifier value for the extension.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the DER-encoded octet string of the extension value or\n null if it is not present.</p>\n</div></li></ul></div></div></div><div id='method-getNonCriticalExtensionOIDs' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Extension'>java.security.cert.X509Extension</span><br/><a href='source/X509Extension.html#java-security-cert-X509Extension-method-getNonCriticalExtensionOIDs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Extension-method-getNonCriticalExtensionOIDs' class='name expandable'>getNonCriticalExtensionOIDs</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets a Set of the OID strings for the extension(s) marked\n NON-CRITICAL in the certificate/CRL managed by the object\n...</div><div class='long'><p>Gets a Set of the OID strings for the extension(s) marked\n NON-CRITICAL in the certificate/CRL managed by the object\n implementing this interface.</p>\n\n<p> Here is sample code to get a Set of non-critical extensions from an\n X509CRL revoked certificate entry and print the OIDs:\n <pre>{@code\n CertificateFactory cf = null;\n X509CRL crl = null;\n try (InputStream inStrm = new FileInputStream(\"DER-encoded-CRL\")) {\n     cf = CertificateFactory.getInstance(\"X.509\");\n     crl = (X509CRL)cf.generateCRL(inStrm);\n }</pre></p>\n\n<p> byte[] certData = <DER-encoded certificate data>\n ByteArrayInputStream bais = new ByteArrayInputStream(certData);\n X509Certificate cert = (X509Certificate)cf.generateCertificate(bais);\n X509CRLEntry badCert =\n              crl.getRevokedCertificate(cert.getSerialNumber());</DER></p>\n\n<p> if (badCert != null) {\n     Set<String> nonCritSet = badCert.getNonCriticalExtensionOIDs();\n     if (nonCritSet != null)\n         for (String oid : nonCritSet) {\n             System.out.println(oid);\n         }\n }\n }</String></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>a Set (or an empty Set if none are marked non-critical) of\n the extension OID strings for extensions that are marked non-critical.\n If there are no extensions present at all, then this method returns\n null.</p>\n</div></li></ul></div></div></div><div id='method-hasUnsupportedCriticalExtension' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Extension'>java.security.cert.X509Extension</span><br/><a href='source/X509Extension.html#java-security-cert-X509Extension-method-hasUnsupportedCriticalExtension' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Extension-method-hasUnsupportedCriticalExtension' class='name expandable'>hasUnsupportedCriticalExtension</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if there is a critical extension that is not supported. ...</div><div class='long'><p>Check if there is a critical extension that is not supported.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if a critical extension is found that is\n not supported, otherwise {@code false}.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});