Ext.data.JsonP.java_security_cert_CertPath({"tagname":"class","name":"java.security.cert.CertPath","autodetected":{},"files":[{"filename":"CertPath.js","href":"CertPath.html#java-security-cert-CertPath"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Yassir Elley","email":null}],"since":"1.4","members":[{"name":"equals","tagname":"method","owner":"java.security.cert.CertPath","id":"method-equals","meta":{}},{"name":"getCertificates","tagname":"method","owner":"java.security.cert.CertPath","id":"method-getCertificates","meta":{}},{"name":"getEncoded","tagname":"method","owner":"java.security.cert.CertPath","id":"method-getEncoded","meta":{}},{"name":"getEncodings","tagname":"method","owner":"java.security.cert.CertPath","id":"method-getEncodings","meta":{}},{"name":"getType","tagname":"method","owner":"java.security.cert.CertPath","id":"method-getType","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.security.cert.CertPath","id":"method-hashCode","meta":{}},{"name":"toString","tagname":"method","owner":"java.security.cert.CertPath","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.cert.CertPath","short_doc":"implements java.io.Serializable\n\nAn immutable sequence of certificates (a certification path). ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.security.cert.CertPath</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CertPath.html#java-security-cert-CertPath' target='_blank'>CertPath.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p>An immutable sequence of certificates (a certification path).\n <p>\n This is an abstract class that defines the methods common to all\n {@code CertPath}s. Subclasses can handle different kinds of\n certificates (X.509, PGP, etc.).\n <p>\n All {@code CertPath} objects have a type, a list of\n {@code Certificate}s, and one or more supported encodings. Because the\n {@code CertPath} class is immutable, a {@code CertPath} cannot\n change in any externally visible way after being constructed. This\n stipulation applies to all public fields and methods of this class and any\n added or overridden by subclasses.\n <p>\n The type is a {@code String} that identifies the type of\n {@code Certificate}s in the certification path. For each\n certificate {@code cert} in a certification path {@code certPath},\n {@code cert.getType().equals(certPath.getType())} must be\n {@code true}.\n <p>\n The list of {@code Certificate}s is an ordered {@code List} of\n zero or more {@code Certificate}s. This {@code List} and all\n of the {@code Certificate}s contained in it must be immutable.\n <p>\n Each {@code CertPath} object must support one or more encodings\n so that the object can be translated into a byte array for storage or\n transmission to other parties. Preferably, these encodings should be\n well-documented standards (such as PKCS#7). One of the encodings supported\n by a {@code CertPath} is considered the default encoding. This\n encoding is used if no encoding is explicitly requested (for the\n getEncoded() method, for instance).\n <p>\n All {@code CertPath} objects are also {@code Serializable}.\n {@code CertPath} objects are resolved into an alternate\n java.security.cert.CertPathRep object during serialization. This allows\n a {@code CertPath} object to be serialized into an equivalent\n representation regardless of its underlying implementation.\n <p>\n {@code CertPath} objects can be created with a\n {@code CertificateFactory} or they can be returned by other classes,\n such as a {@code CertPathBuilder}.\n <p>\n By convention, X.509 {@code CertPath}s (consisting of\n {@code X509Certificate}s), are ordered starting with the target\n certificate and ending with a certificate issued by the trust anchor. That\n is, the issuer of one certificate is the subject of the following one. The\n certificate representing the <a href=\"#!/api/java.security.cert.TrustAnchor\" rel=\"java.security.cert.TrustAnchor\" class=\"docClass\">java.security.cert.TrustAnchor</a> should not be\n included in the certification path. Unvalidated X.509 {@code CertPath}s\n may not follow these conventions. PKIX {@code CertPathValidator}s will\n detect any departure from these conventions that cause the certification\n path to be invalid and throw a {@code CertPathValidatorException}.</p>\n\n<p> <p> Every implementation of the Java platform is required to support the\n following standard {@code CertPath} encodings:\n <ul>\n <li>{@code PKCS7}</li>\n <li>{@code PkiPath}</li>\n </ul>\n These encodings are described in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#CertPathEncodings\">\n CertPath Encodings section</a> of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.\n Consult the release documentation for your implementation to see if any\n other encodings are supported.\n <p>\n <b>Concurrent Access</b>\n <p>\n All {@code CertPath} objects must be thread-safe. That is, multiple\n threads may concurrently invoke the methods defined in this class on a\n single {@code CertPath} object (or more than one) with no\n ill effects. This is also true for the {@code List} returned by\n {@code CertPath.getCertificates}.\n <p>\n Requiring {@code CertPath} objects to be immutable and thread-safe\n allows them to be passed around to various pieces of code without worrying\n about coordinating access.  Providing this thread-safety is\n generally not difficult, since the {@code CertPath} and\n {@code List} objects in question are immutable.</p>\n\n<p> @see CertificateFactory\n @see CertPathBuilder</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-equals' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPath'>java.security.cert.CertPath</span><br/><a href='source/CertPath.html#java-security-cert-CertPath-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPath-method-equals' class='name expandable'>equals</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this certification path for equality with the specified\n object. ...</div><div class='long'><p>Compares this certification path for equality with the specified\n object. Two {@code CertPath}s are equal if and only if their\n types are equal and their certificate {@code List}s (and by\n implication the {@code Certificate}s in those {@code List}s)\n are equal. A {@code CertPath} is never equal to an object that is\n not a {@code CertPath}.\n <p>\n This algorithm is implemented by this method. If it is overridden,\n the behavior specified here must be maintained.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {Object}<div class='sub-desc'><p>the object to test for equality with this certification path</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the specified object is equal to this certification path,\n false otherwise</p>\n</div></li></ul></div></div></div><div id='method-getCertificates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPath'>java.security.cert.CertPath</span><br/><a href='source/CertPath.html#java-security-cert-CertPath-method-getCertificates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPath-method-getCertificates' class='name expandable'>getCertificates</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of certificates in this certification path. ...</div><div class='long'><p>Returns the list of certificates in this certification path.\n The {@code List} returned must be immutable and thread-safe.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>an immutable {@code List} of {@code Certificate}s\n         (may be empty, but not null)</p>\n</div></li></ul></div></div></div><div id='method-getEncoded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPath'>java.security.cert.CertPath</span><br/><a href='source/CertPath.html#java-security-cert-CertPath-method-getEncoded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPath-method-getEncoded' class='name expandable'>getEncoded</a>( <span class='pre'>encoding</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the encoded form of this certification path, using the\n specified encoding. ...</div><div class='long'><p>Returns the encoded form of this certification path, using the\n specified encoding.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>encoding</span> : String<div class='sub-desc'><p>the name of the encoding to use</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the encoded bytes\n@exception CertificateEncodingException if an encoding error occurs or\n   the encoding requested is not supported</p>\n</div></li></ul></div></div></div><div id='method-getEncodings' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPath'>java.security.cert.CertPath</span><br/><a href='source/CertPath.html#java-security-cert-CertPath-method-getEncodings' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPath-method-getEncodings' class='name expandable'>getEncodings</a>( <span class='pre'></span> ) : Object {java.util.Iterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iteration of the encodings supported by this certification\n path, with the default encoding first. ...</div><div class='long'><p>Returns an iteration of the encodings supported by this certification\n path, with the default encoding first. Attempts to modify the returned\n {@code Iterator} via its {@code remove} method result in an\n {@code UnsupportedOperationException}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Iterator}</span><div class='sub-desc'><p>an {@code Iterator} over the names of the supported\n         encodings (as Strings)</p>\n</div></li></ul></div></div></div><div id='method-getType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPath'>java.security.cert.CertPath</span><br/><a href='source/CertPath.html#java-security-cert-CertPath-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPath-method-getType' class='name expandable'>getType</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the type of {@code Certificate}s in this certification\n path. ...</div><div class='long'><p>Returns the type of {@code Certificate}s in this certification\n path. This is the same string that would be returned by\n cert.getType()\n for all {@code Certificate}s in the certification path.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the type of {@code Certificate}s in this certification\n path (never null)</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPath'>java.security.cert.CertPath</span><br/><a href='source/CertPath.html#java-security-cert-CertPath-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPath-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the hashcode for this certification path. ...</div><div class='long'><p>Returns the hashcode for this certification path. The hash code of\n a certification path is defined to be the result of the following\n calculation:\n <pre>{@code\n  hashCode = path.getType().hashCode();\n  hashCode = 31*hashCode + path.getCertificates().hashCode();\n }</pre>\n This ensures that {@code path1.equals(path2)} implies that\n {@code path1.hashCode()==path2.hashCode()} for any two certification\n paths, {@code path1} and {@code path2}, as required by the\n general contract of {@code Object.hashCode}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the hashcode value for this certification path</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPath'>java.security.cert.CertPath</span><br/><a href='source/CertPath.html#java-security-cert-CertPath-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPath-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representation of this certification path. ...</div><div class='long'><p>Returns a string representation of this certification path.\n This calls the {@code toString} method on each of the\n {@code Certificate}s in the path.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this certification path</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});