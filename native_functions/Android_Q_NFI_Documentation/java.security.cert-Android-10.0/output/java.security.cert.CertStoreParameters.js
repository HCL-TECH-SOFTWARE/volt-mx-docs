Ext.data.JsonP.java_security_cert_CertStoreParameters({"tagname":"class","name":"java.security.cert.CertStoreParameters","autodetected":{},"files":[{"filename":"CertStoreParameters.js","href":"CertStoreParameters.html#java-security-cert-CertStoreParameters"}],"since":"1.4","author":[{"tagname":"author","name":"Steve Hanna","email":null}],"members":[{"name":"clone","tagname":"method","owner":"java.security.cert.CertStoreParameters","id":"method-clone","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.cert.CertStoreParameters","short_doc":"implements java.lang.Cloneable\n\n A specification of {@code CertStore} parameters. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/CertStoreParameters.html#java-security-cert-CertStoreParameters' target='_blank'>CertStoreParameters.js</a></div></pre><div class='doc-contents'><p>implements java.lang.Cloneable</p>\n\n<p> A specification of {@code CertStore} parameters.\n <p>\n The purpose of this interface is to group (and provide type safety for)\n all {@code CertStore} parameter specifications. All\n {@code CertStore} parameter specifications must implement this\n interface.\n <p>\n Typically, a {@code CertStoreParameters} object is passed as a parameter\n to one of the <a href=\"#!/api/java.security.cert.CertStore-method-getInstance\" rel=\"java.security.cert.CertStore-method-getInstance\" class=\"docClass\">java.security.cert.CertStore.getInstance</a> methods.\n The {@code getInstance} method returns a {@code CertStore} that\n is used for retrieving {@code Certificate}s and {@code CRL}s. The\n {@code CertStore} that is returned is initialized with the specified\n parameters. The type of parameters needed may vary between different types\n of {@code CertStore}s.</p>\n\n<p> @see CertStore#getInstance</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clone' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertStoreParameters'>java.security.cert.CertStoreParameters</span><br/><a href='source/CertStoreParameters.html#java-security-cert-CertStoreParameters-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertStoreParameters-method-clone' class='name expandable'>clone</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Makes a copy of this {@code CertStoreParameters}. ...</div><div class='long'><p>Makes a copy of this {@code CertStoreParameters}.\n <p>\n The precise meaning of \"copy\" may depend on the class of\n the {@code CertStoreParameters} object. A typical implementation\n performs a \"deep copy\" of this object, but this is not an absolute\n requirement. Some implementations may perform a \"shallow copy\" of some\n or all of the fields of this object.\n <p>\n Note that the {@code CertStore.getInstance} methods make a copy\n of the specified {@code CertStoreParameters}. A deep copy\n implementation of {@code clone} is safer and more robust, as it\n prevents the caller from corrupting a shared {@code CertStore} by\n subsequently modifying the contents of its initialization parameters.\n However, a shallow copy implementation of {@code clone} is more\n appropriate for applications that need to hold a reference to a\n parameter contained in the {@code CertStoreParameters}. For example,\n a shallow copy clone allows an application to release the resources of\n a particular {@code CertStore} initialization parameter immediately,\n rather than waiting for the garbage collection mechanism. This should\n be done with the utmost care, since the {@code CertStore} may still\n be in use by other threads.\n <p>\n Each subclass should state the precise behavior of this method so\n that users and developers know what to expect.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>a copy of this {@code CertStoreParameters}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});