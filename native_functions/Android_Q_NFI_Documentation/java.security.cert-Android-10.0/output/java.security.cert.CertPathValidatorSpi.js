Ext.data.JsonP.java_security_cert_CertPathValidatorSpi({"tagname":"class","name":"java.security.cert.CertPathValidatorSpi","autodetected":{},"files":[{"filename":"CertPathValidatorSpi.js","href":"CertPathValidatorSpi.html#java-security-cert-CertPathValidatorSpi"}],"extends":"java.lang.Object","since":"1.4","author":[{"tagname":"author","name":"Yassir Elley","email":null}],"members":[{"name":"engineGetRevocationChecker","tagname":"method","owner":"java.security.cert.CertPathValidatorSpi","id":"method-engineGetRevocationChecker","meta":{}},{"name":"engineValidate","tagname":"method","owner":"java.security.cert.CertPathValidatorSpi","id":"method-engineValidate","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.cert.CertPathValidatorSpi","short_doc":"The Service Provider Interface (SPI)\n for the java.security.cert.CertPathValidator class. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.security.cert.CertPathValidatorSpi</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CertPathValidatorSpi.html#java-security-cert-CertPathValidatorSpi' target='_blank'>CertPathValidatorSpi.js</a></div></pre><div class='doc-contents'><p>The <i>Service Provider Interface</i> (<b>SPI</b>)\n for the <a href=\"#!/api/java.security.cert.CertPathValidator\" rel=\"java.security.cert.CertPathValidator\" class=\"docClass\">java.security.cert.CertPathValidator</a> class. All\n {@code CertPathValidator} implementations must include a class (the\n SPI class) that extends this class ({@code CertPathValidatorSpi})\n and implements all of its methods. In general, instances of this class\n should only be accessed through the {@code CertPathValidator} class.\n For details, see the Java Cryptography Architecture.\n <p>\n <b>Concurrent Access</b>\n <p>\n Instances of this class need not be protected against concurrent\n access from multiple threads. Threads that need to access a single\n {@code CertPathValidatorSpi} instance concurrently should synchronize\n amongst themselves and provide the necessary locking before calling the\n wrapping {@code CertPathValidator} object.\n <p>\n However, implementations of {@code CertPathValidatorSpi} may still\n encounter concurrency issues, since multiple threads each\n manipulating a different {@code CertPathValidatorSpi} instance need not\n synchronize.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-engineGetRevocationChecker' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidatorSpi'>java.security.cert.CertPathValidatorSpi</span><br/><a href='source/CertPathValidatorSpi.html#java-security-cert-CertPathValidatorSpi-method-engineGetRevocationChecker' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidatorSpi-method-engineGetRevocationChecker' class='name expandable'>engineGetRevocationChecker</a>( <span class='pre'></span> ) : Object {java.security.cert.CertPathChecker}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a {@code CertPathChecker} that this implementation uses to\n check the revocation status of certificates. ...</div><div class='long'><p>Returns a {@code CertPathChecker} that this implementation uses to\n check the revocation status of certificates. A PKIX implementation\n returns objects of type {@code PKIXRevocationChecker}.</p>\n\n<p> <p>The primary purpose of this method is to allow callers to specify\n additional input parameters and options specific to revocation checking.\n See the class description of {@code CertPathValidator} for an example.</p>\n\n<p> <p>This method was added to version 1.8 of the Java Platform Standard\n Edition. In order to maintain backwards compatibility with existing\n service providers, this method cannot be abstract and by default throws\n an {@code UnsupportedOperationException}.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.cert.CertPathChecker}</span><div class='sub-desc'><p>a {@code CertPathChecker} that this implementation uses to\n check the revocation status of certificates</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException if this method is not supported</p>\n</div></li></ul></div></div></div><div id='method-engineValidate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidatorSpi'>java.security.cert.CertPathValidatorSpi</span><br/><a href='source/CertPathValidatorSpi.html#java-security-cert-CertPathValidatorSpi-method-engineValidate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidatorSpi-method-engineValidate' class='name expandable'>engineValidate</a>( <span class='pre'>certPath, params</span> ) : Object {java.security.cert.CertPathValidatorResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates the specified certification path using the specified\n algorithm parameter set. ...</div><div class='long'><p>Validates the specified certification path using the specified\n algorithm parameter set.\n <p>\n The {@code CertPath} specified must be of a type that is\n supported by the validation algorithm, otherwise an\n {@code InvalidAlgorithmParameterException} will be thrown. For\n example, a {@code CertPathValidator} that implements the PKIX\n algorithm validates {@code CertPath} objects of type X.509.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>certPath</span> : Object {CertPath}<div class='sub-desc'><p>the {@code CertPath} to be validated</p>\n</div></li><li><span class='pre'>params</span> : Object {CertPathParameters}<div class='sub-desc'><p>the algorithm parameters</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.cert.CertPathValidatorResult}</span><div class='sub-desc'><p>the result of the validation algorithm\n@exception CertPathValidatorException if the {@code CertPath}\n does not validate\n@exception InvalidAlgorithmParameterException if the specified\n parameters or the type of the specified {@code CertPath} are\n inappropriate for this {@code CertPathValidator}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});