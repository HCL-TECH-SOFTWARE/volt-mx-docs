Ext.data.JsonP.java_security_cert_X509Certificate({"tagname":"class","name":"java.security.cert.X509Certificate","autodetected":{},"files":[{"filename":"X509Certificate.js","href":"X509Certificate.html#java-security-cert-X509Certificate"}],"extends":"java.security.cert.Certificate","author":[{"tagname":"author","name":"Hemma Prafullchandra","email":null}],"members":[{"name":"checkValidity","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-checkValidity","meta":{}},{"name":"equals","tagname":"method","owner":"java.security.cert.Certificate","id":"method-equals","meta":{}},{"name":"getBasicConstraints","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getBasicConstraints","meta":{}},{"name":"getEncoded","tagname":"method","owner":"java.security.cert.Certificate","id":"method-getEncoded","meta":{}},{"name":"getExtendedKeyUsage","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getExtendedKeyUsage","meta":{}},{"name":"getIssuerAlternativeNames","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getIssuerAlternativeNames","meta":{}},{"name":"getIssuerDN","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getIssuerDN","meta":{}},{"name":"getIssuerUniqueID","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getIssuerUniqueID","meta":{}},{"name":"getIssuerX500Principal","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getIssuerX500Principal","meta":{}},{"name":"getKeyUsage","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getKeyUsage","meta":{}},{"name":"getNotAfter","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getNotAfter","meta":{}},{"name":"getNotBefore","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getNotBefore","meta":{}},{"name":"getPublicKey","tagname":"method","owner":"java.security.cert.Certificate","id":"method-getPublicKey","meta":{}},{"name":"getSerialNumber","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSerialNumber","meta":{}},{"name":"getSigAlgName","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSigAlgName","meta":{}},{"name":"getSigAlgOID","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSigAlgOID","meta":{}},{"name":"getSigAlgParams","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSigAlgParams","meta":{}},{"name":"getSignature","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSignature","meta":{}},{"name":"getSubjectAlternativeNames","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSubjectAlternativeNames","meta":{}},{"name":"getSubjectDN","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSubjectDN","meta":{}},{"name":"getSubjectUniqueID","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSubjectUniqueID","meta":{}},{"name":"getSubjectX500Principal","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getSubjectX500Principal","meta":{}},{"name":"getTBSCertificate","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getTBSCertificate","meta":{}},{"name":"getType","tagname":"method","owner":"java.security.cert.Certificate","id":"method-getType","meta":{}},{"name":"getVersion","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-getVersion","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.security.cert.Certificate","id":"method-hashCode","meta":{}},{"name":"toString","tagname":"method","owner":"java.security.cert.Certificate","id":"method-toString","meta":{}},{"name":"verify","tagname":"method","owner":"java.security.cert.X509Certificate","id":"method-verify","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.cert.X509Certificate","short_doc":"implements java.security.cert.X509Extension\n\n\n Abstract class for X.509 certificates. ...","classIcon":"icon-class","superclasses":["java.lang.Object","java.security.cert.Certificate"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/java.security.cert.Certificate' rel='java.security.cert.Certificate' class='docClass'>java.security.cert.Certificate</a><div class='subclass '><strong>java.security.cert.X509Certificate</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/X509Certificate.html#java-security-cert-X509Certificate' target='_blank'>X509Certificate.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.security.cert.X509Extension\" rel=\"java.security.cert.X509Extension\" class=\"docClass\">java.security.cert.X509Extension</a></p>\n\n<p><p>\n Abstract class for X.509 certificates. This provides a standard\n way to access all the attributes of an X.509 certificate.\n <p>\n In June of 1996, the basic X.509 v3 format was completed by\n ISO/IEC and ANSI X9, which is described below in ASN.1:</p>\n\n<p><pre> Certificate  ::=  SEQUENCE  {\n     tbsCertificate       TBSCertificate,\n     signatureAlgorithm   AlgorithmIdentifier,\n     signature            BIT STRING  }\n </pre>\n <p>\n These certificates are widely used to support authentication and\n other functionality in Internet security systems. Common applications\n include Privacy Enhanced Mail (PEM), Transport Layer Security (SSL),\n code signing for trusted software distribution, and Secure Electronic\n Transactions (SET).\n <p>\n These certificates are managed and vouched for by <em>Certificate\n Authorities</em> (CAs). CAs are services which create certificates by\n placing data in the X.509 standard format and then digitally signing\n that data. CAs act as trusted third parties, making introductions\n between principals who have no direct knowledge of each other.\n CA certificates are either signed by themselves, or by some other\n CA such as a \"root\" CA.\n <p>\n More information can be found in\n <a href=\"http://www.ietf.org/rfc/rfc3280.txt\">RFC 3280: Internet X.509\n Public Key Infrastructure Certificate and CRL Profile</a>.\n <p>\n The ASN.1 definition of {@code tbsCertificate} is:</p>\n\n<p><pre> TBSCertificate  ::=  SEQUENCE  {\n     version         [0]  EXPLICIT Version DEFAULT v1,\n     serialNumber         CertificateSerialNumber,\n     signature            AlgorithmIdentifier,\n     issuer               Name,\n     validity             Validity,\n     subject              Name,\n     subjectPublicKeyInfo SubjectPublicKeyInfo,\n     issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version must be v2 or v3\n     subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n                          -- If present, version must be v2 or v3\n     extensions      [3]  EXPLICIT Extensions OPTIONAL\n                          -- If present, version must be v3\n     }\n </pre>\n <p>\n Certificates are instantiated using a certificate factory. The following is\n an example of how to instantiate an X.509 certificate:</p>\n\n<p><pre> try (InputStream inStream = new FileInputStream(\"fileName-of-cert\")) {\n     CertificateFactory cf = CertificateFactory.getInstance(\"X.509\");\n     X509Certificate cert = (X509Certificate)cf.generateCertificate(inStream);\n }\n </pre></p>\n\n<p> @see Certificate\n @see CertificateFactory\n @see X509Extension</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-checkValidity' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-checkValidity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-checkValidity' class='name expandable'>checkValidity</a>( <span class='pre'>date</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks that the given date is within the certificate's\n validity period. ...</div><div class='long'><p>Checks that the given date is within the certificate's\n validity period. In other words, this determines whether the\n certificate would be valid at the given date/time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>date</span> : Object {Date}<div class='sub-desc'><p>the Date to check against to see if this certificate\n        is valid at that date/time.\n@exception CertificateExpiredException if the certificate has expired\n with respect to the {@code date} supplied.\n@exception CertificateNotYetValidException if the certificate is not\n yet valid with respect to the {@code date} supplied.\n@see <a href=\"#!/api/java.security.cert.X509Certificate-method-checkValidity\" rel=\"java.security.cert.X509Certificate-method-checkValidity\" class=\"docClass\">checkValidity</a>()</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.security.cert.Certificate' rel='java.security.cert.Certificate' class='defined-in docClass'>java.security.cert.Certificate</a><br/><a href='source/Certificate.html#java-security-cert-Certificate-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.Certificate-method-equals' class='name expandable'>equals</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this certificate for equality with the specified\n object. ...</div><div class='long'><p>Compares this certificate for equality with the specified\n object. If the {@code other} object is an\n {@code instanceof} {@code Certificate}, then\n its encoded form is retrieved and compared with the\n encoded form of this certificate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {Object}<div class='sub-desc'><p>the object to test for equality with this certificate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true iff the encoded forms of the two certificates\n match, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getBasicConstraints' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getBasicConstraints' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getBasicConstraints' class='name expandable'>getBasicConstraints</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the certificate constraints path length from the\n critical {@code BasicConstraints} extension, (OID = 2.5.29.19). ...</div><div class='long'><p>Gets the certificate constraints path length from the\n critical {@code BasicConstraints} extension, (OID = 2.5.29.19).\n <p>\n The basic constraints extension identifies whether the subject\n of the certificate is a Certificate Authority (CA) and\n how deep a certification path may exist through that CA. The\n {@code pathLenConstraint} field (see below) is meaningful\n only if {@code cA} is set to TRUE. In this case, it gives the\n maximum number of CA certificates that may follow this certificate in a\n certification path. A value of zero indicates that only an end-entity\n certificate may follow in the path.\n <p>\n The ASN.1 definition for this is:</p>\n\n<pre> BasicConstraints ::= SEQUENCE {\n     cA                  BOOLEAN DEFAULT FALSE,\n     pathLenConstraint   INTEGER (0..MAX) OPTIONAL }\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value of {@code pathLenConstraint} if the\n BasicConstraints extension is present in the certificate and the\n subject of the certificate is a CA, otherwise -1.\n If the subject of the certificate is a CA and\n {@code pathLenConstraint} does not appear,\n {@code Integer.MAX_VALUE} is returned to indicate that there is no\n limit to the allowed length of the certification path.</p>\n</div></li></ul></div></div></div><div id='method-getEncoded' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.security.cert.Certificate' rel='java.security.cert.Certificate' class='defined-in docClass'>java.security.cert.Certificate</a><br/><a href='source/Certificate.html#java-security-cert-Certificate-method-getEncoded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.Certificate-method-getEncoded' class='name expandable'>getEncoded</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the encoded form of this certificate. ...</div><div class='long'><p>Returns the encoded form of this certificate. It is\n assumed that each certificate type would have only a single\n form of encoding; for example, X.509 certificates would\n be encoded as ASN.1 DER.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the encoded form of this certificate\n@exception CertificateEncodingException if an encoding error occurs.</p>\n</div></li></ul></div></div></div><div id='method-getExtendedKeyUsage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getExtendedKeyUsage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getExtendedKeyUsage' class='name expandable'>getExtendedKeyUsage</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an unmodifiable list of Strings representing the OBJECT\n IDENTIFIERs of the {@code ExtKeyUsageSyntax} field of t...</div><div class='long'><p>Gets an unmodifiable list of Strings representing the OBJECT\n IDENTIFIERs of the {@code ExtKeyUsageSyntax} field of the\n extended key usage extension, (OID = 2.5.29.37).  It indicates\n one or more purposes for which the certified public key may be\n used, in addition to or in place of the basic purposes\n indicated in the key usage extension field.  The ASN.1\n definition for this is:</p>\n\n<pre> ExtKeyUsageSyntax ::= SEQUENCE SIZE (1..MAX) OF KeyPurposeId\n\n KeyPurposeId ::= OBJECT IDENTIFIER\n </pre>\n\n\n<p> Key purposes may be defined by any organization with a\n need. Object identifiers used to identify key purposes shall be\n assigned in accordance with IANA or ITU-T Rec. X.660 |\n ISO/IEC/ITU 9834-1.\n <p>\n This method was added to version 1.4 of the Java 2 Platform Standard\n Edition. In order to maintain backwards compatibility with existing\n service providers, this method is not {@code abstract}\n and it provides a default implementation. Subclasses\n should override this method with a correct implementation.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the ExtendedKeyUsage extension of this certificate,\n         as an unmodifiable list of object identifiers represented\n         as Strings. Returns null if this certificate does not\n         contain an ExtendedKeyUsage extension.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>CertificateParsingException if the extension cannot be decoded</p>\n</div></li></ul></div></div></div><div id='method-getIssuerAlternativeNames' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getIssuerAlternativeNames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getIssuerAlternativeNames' class='name expandable'>getIssuerAlternativeNames</a>( <span class='pre'></span> ) : Object {java.util.Collection}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an immutable collection of issuer alternative names from the\n {@code IssuerAltName} extension, (OID = 2.5.29.18). ...</div><div class='long'><p>Gets an immutable collection of issuer alternative names from the\n {@code IssuerAltName} extension, (OID = 2.5.29.18).\n <p>\n The ASN.1 definition of the {@code IssuerAltName} extension is:</p>\n\n<pre> IssuerAltName ::= GeneralNames\n </pre>\n\n\n<p> The ASN.1 definition of {@code GeneralNames} is defined\n in <a href=\"#!/api/java.security.cert.X509Certificate-method-getSubjectAlternativeNames\" rel=\"java.security.cert.X509Certificate-method-getSubjectAlternativeNames\" class=\"docClass\">getSubjectAlternativeNames</a>.\n <p>\n If this certificate does not contain an {@code IssuerAltName}\n extension, {@code null} is returned. Otherwise, a\n {@code Collection} is returned with an entry representing each\n {@code GeneralName} included in the extension. Each entry is a\n {@code List} whose first entry is an {@code Integer}\n (the name type, 0-8) and whose second entry is a {@code String}\n or a byte array (the name, in string or ASN.1 DER encoded form,\n respectively). For more details about the formats used for each\n name type, see the {@code getSubjectAlternativeNames} method.\n <p>\n Note that the {@code Collection} returned may contain more\n than one name of the same type. Also, note that the returned\n {@code Collection} is immutable and any entries containing byte\n arrays are cloned to protect against subsequent modifications.\n <p>\n This method was added to version 1.4 of the Java 2 Platform Standard\n Edition. In order to maintain backwards compatibility with existing\n service providers, this method is not {@code abstract}\n and it provides a default implementation. Subclasses\n should override this method with a correct implementation.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Collection}</span><div class='sub-desc'><p>an immutable {@code Collection} of issuer alternative\n names (or {@code null})</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>CertificateParsingException if the extension cannot be decoded</p>\n</div></li></ul></div></div></div><div id='method-getIssuerDN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getIssuerDN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getIssuerDN' class='name expandable'>getIssuerDN</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Denigrated, replaced by {@linkplain\n getIssuerX500Principal()}. ...</div><div class='long'><p><strong>Denigrated</strong>, replaced by {@linkplain\n <a href=\"#!/api/java.security.cert.X509Certificate-method-getIssuerX500Principal\" rel=\"java.security.cert.X509Certificate-method-getIssuerX500Principal\" class=\"docClass\">getIssuerX500Principal</a>()}. This method returns the {@code issuer}\n as an implementation specific Principal object, which should not be\n relied upon by portable code.</p>\n\n<p> <p>\n Gets the {@code issuer} (issuer distinguished name) value from\n the certificate. The issuer name identifies the entity that signed (and\n issued) the certificate.</p>\n\n<p> <p>The issuer name field contains an\n X.500 distinguished name (DN).\n The ASN.1 definition for this is:</p>\n\n<pre> issuer    Name\n\n Name ::= CHOICE { RDNSequence }\n RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n RelativeDistinguishedName ::=\n     SET OF AttributeValueAssertion\n\n AttributeValueAssertion ::= SEQUENCE {\n                               AttributeType,\n                               AttributeValue }\n AttributeType ::= OBJECT IDENTIFIER\n AttributeValue ::= ANY\n </pre>\n\n\n<p> The {@code Name} describes a hierarchical name composed of\n attributes,\n such as country name, and corresponding values, such as US.\n The type of the {@code AttributeValue} component is determined by\n the {@code AttributeType}; in general it will be a\n {@code directoryString}. A {@code directoryString} is usually\n one of {@code PrintableString},\n {@code TeletexString} or {@code UniversalString}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>a Principal whose name is the issuer distinguished name.</p>\n</div></li></ul></div></div></div><div id='method-getIssuerUniqueID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getIssuerUniqueID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getIssuerUniqueID' class='name expandable'>getIssuerUniqueID</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code issuerUniqueID} value from the certificate. ...</div><div class='long'><p>Gets the {@code issuerUniqueID} value from the certificate.\n The issuer unique identifier is present in the certificate\n to handle the possibility of reuse of issuer names over time.\n RFC 3280 recommends that names not be reused and that\n conforming certificates not make use of unique identifiers.\n Applications conforming to that profile should be capable of\n parsing unique identifiers and making comparisons.</p>\n\n<p> <p>The ASN.1 definition for this is:</p>\n\n<pre> issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL\n\n UniqueIdentifier  ::=  BIT STRING\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the issuer unique identifier or null if it is not\n present in the certificate.</p>\n</div></li></ul></div></div></div><div id='method-getIssuerX500Principal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getIssuerX500Principal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getIssuerX500Principal' class='name expandable'>getIssuerX500Principal</a>( <span class='pre'></span> ) : Object {javax.security.auth.x500.X500Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the issuer (issuer distinguished name) value from the\n certificate as an {@code X500Principal}. ...</div><div class='long'><p>Returns the issuer (issuer distinguished name) value from the\n certificate as an {@code X500Principal}.\n <p>\n It is recommended that subclasses override this method.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.security.auth.x500.X500Principal}</span><div class='sub-desc'><p>an {@code X500Principal} representing the issuer\n          distinguished name</p>\n</div></li></ul></div></div></div><div id='method-getKeyUsage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getKeyUsage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getKeyUsage' class='name expandable'>getKeyUsage</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets a boolean array representing bits of\n the {@code KeyUsage} extension, (OID = 2.5.29.15). ...</div><div class='long'><p>Gets a boolean array representing bits of\n the {@code KeyUsage} extension, (OID = 2.5.29.15).\n The key usage extension defines the purpose (e.g., encipherment,\n signature, certificate signing) of the key contained in the\n certificate.\n The ASN.1 definition for this is:</p>\n\n<pre> KeyUsage ::= BIT STRING {\n     digitalSignature        (0),\n     nonRepudiation          (1),\n     keyEncipherment         (2),\n     dataEncipherment        (3),\n     keyAgreement            (4),\n     keyCertSign             (5),\n     cRLSign                 (6),\n     encipherOnly            (7),\n     decipherOnly            (8) }\n </pre>\n\n\n<p> RFC 3280 recommends that when used, this be marked\n as a critical extension.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the KeyUsage extension of this certificate, represented as\n an array of booleans. The order of KeyUsage values in the array is\n the same as in the above ASN.1 definition. The array will contain a\n value for each KeyUsage defined above. If the KeyUsage list encoded\n in the certificate is longer than the above list, it will not be\n truncated. Returns null if this certificate does not\n contain a KeyUsage extension.</p>\n</div></li></ul></div></div></div><div id='method-getNotAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getNotAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getNotAfter' class='name expandable'>getNotAfter</a>( <span class='pre'></span> ) : Object {java.util.Date}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code notAfter} date from the validity period of\n the certificate. ...</div><div class='long'><p>Gets the {@code notAfter} date from the validity period of\n the certificate. See getNotBefore\n for relevant ASN.1 definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Date}</span><div class='sub-desc'><p>the end date of the validity period.\n@see <a href=\"#!/api/java.security.cert.X509Certificate-method-checkValidity\" rel=\"java.security.cert.X509Certificate-method-checkValidity\" class=\"docClass\">checkValidity</a></p>\n</div></li></ul></div></div></div><div id='method-getNotBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getNotBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getNotBefore' class='name expandable'>getNotBefore</a>( <span class='pre'></span> ) : Object {java.util.Date}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code notBefore} date from the validity period of\n the certificate. ...</div><div class='long'><p>Gets the {@code notBefore} date from the validity period of\n the certificate.\n The relevant ASN.1 definitions are:</p>\n\n<pre> validity             Validity\n\n Validity ::= SEQUENCE {\n     notBefore      CertificateValidityDate,\n     notAfter       CertificateValidityDate }\n\n CertificateValidityDate ::= CHOICE {\n     utcTime        UTCTime,\n     generalTime    GeneralizedTime }\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Date}</span><div class='sub-desc'><p>the start date of the validity period.\n@see <a href=\"#!/api/java.security.cert.X509Certificate-method-checkValidity\" rel=\"java.security.cert.X509Certificate-method-checkValidity\" class=\"docClass\">checkValidity</a></p>\n</div></li></ul></div></div></div><div id='method-getPublicKey' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.security.cert.Certificate' rel='java.security.cert.Certificate' class='defined-in docClass'>java.security.cert.Certificate</a><br/><a href='source/Certificate.html#java-security-cert-Certificate-method-getPublicKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.Certificate-method-getPublicKey' class='name expandable'>getPublicKey</a>( <span class='pre'></span> ) : Object {java.security.PublicKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the public key from this certificate. ...</div><div class='long'><p>Gets the public key from this certificate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.PublicKey}</span><div class='sub-desc'><p>the public key.</p>\n</div></li></ul></div></div></div><div id='method-getSerialNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSerialNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSerialNumber' class='name expandable'>getSerialNumber</a>( <span class='pre'></span> ) : Object {java.math.BigInteger}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code serialNumber} value from the certificate. ...</div><div class='long'><p>Gets the {@code serialNumber} value from the certificate.\n The serial number is an integer assigned by the certification\n authority to each certificate. It must be unique for each\n certificate issued by a given CA (i.e., the issuer name and\n serial number identify a unique certificate).\n The ASN.1 definition for this is:</p>\n\n<pre> serialNumber     CertificateSerialNumber\n\n CertificateSerialNumber  ::=  INTEGER\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.math.BigInteger}</span><div class='sub-desc'><p>the serial number.</p>\n</div></li></ul></div></div></div><div id='method-getSigAlgName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSigAlgName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSigAlgName' class='name expandable'>getSigAlgName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the signature algorithm name for the certificate\n signature algorithm. ...</div><div class='long'><p>Gets the signature algorithm name for the certificate\n signature algorithm. An example is the string \"SHA256withRSA\".\n The ASN.1 definition for this is:</p>\n\n<pre> signatureAlgorithm   AlgorithmIdentifier\n\n AlgorithmIdentifier  ::=  SEQUENCE  {\n     algorithm               OBJECT IDENTIFIER,\n     parameters              ANY DEFINED BY algorithm OPTIONAL  }\n                             -- contains a value of the type\n                             -- registered for use with the\n                             -- algorithm object identifier value\n </pre>\n\n\n<p> <p>The algorithm name is determined from the {@code algorithm}\n OID string.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the signature algorithm name.</p>\n</div></li></ul></div></div></div><div id='method-getSigAlgOID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSigAlgOID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSigAlgOID' class='name expandable'>getSigAlgOID</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the signature algorithm OID string from the certificate. ...</div><div class='long'><p>Gets the signature algorithm OID string from the certificate.\n An OID is represented by a set of nonnegative whole numbers separated\n by periods.\n For example, the string \"1.2.840.10040.4.3\" identifies the SHA-1\n with DSA signature algorithm defined in\n <a href=\"http://www.ietf.org/rfc/rfc3279.txt\">RFC 3279: Algorithms and\n Identifiers for the Internet X.509 Public Key Infrastructure Certificate\n and CRL Profile</a>.</p>\n\n<p> <p>See getSigAlgName for\n relevant ASN.1 definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the signature algorithm OID string.</p>\n</div></li></ul></div></div></div><div id='method-getSigAlgParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSigAlgParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSigAlgParams' class='name expandable'>getSigAlgParams</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the DER-encoded signature algorithm parameters from this\n certificate's signature algorithm. ...</div><div class='long'><p>Gets the DER-encoded signature algorithm parameters from this\n certificate's signature algorithm. In most cases, the signature\n algorithm parameters are null; the parameters are usually\n supplied with the certificate's public key.\n If access to individual parameter values is needed then use\n AlgorithmParameters\n and instantiate with the name returned by\n getSigAlgName.</p>\n\n<p> <p>See getSigAlgName for\n relevant ASN.1 definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the DER-encoded signature algorithm parameters, or\n         null if no parameters are present.</p>\n</div></li></ul></div></div></div><div id='method-getSignature' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSignature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSignature' class='name expandable'>getSignature</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code signature} value (the raw signature bits) from\n the certificate. ...</div><div class='long'><p>Gets the {@code signature} value (the raw signature bits) from\n the certificate.\n The ASN.1 definition for this is:</p>\n\n<pre> signature     BIT STRING\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the signature.</p>\n</div></li></ul></div></div></div><div id='method-getSubjectAlternativeNames' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSubjectAlternativeNames' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSubjectAlternativeNames' class='name expandable'>getSubjectAlternativeNames</a>( <span class='pre'></span> ) : Object {java.util.Collection}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an immutable collection of subject alternative names from the\n {@code SubjectAltName} extension, (OID = 2.5.29.17). ...</div><div class='long'><p>Gets an immutable collection of subject alternative names from the\n {@code SubjectAltName} extension, (OID = 2.5.29.17).\n <p>\n The ASN.1 definition of the {@code SubjectAltName} extension is:</p>\n\n<pre> SubjectAltName ::= GeneralNames\n\n GeneralNames :: = SEQUENCE SIZE (1..MAX) OF GeneralName\n\n GeneralName ::= CHOICE {\n      otherName                       [0]     OtherName,\n      rfc822Name                      [1]     IA5String,\n      dNSName                         [2]     IA5String,\n      x400Address                     [3]     ORAddress,\n      directoryName                   [4]     Name,\n      ediPartyName                    [5]     EDIPartyName,\n      uniformResourceIdentifier       [6]     IA5String,\n      iPAddress                       [7]     OCTET STRING,\n      registeredID                    [8]     OBJECT IDENTIFIER}\n </pre>\n\n\n<p> <p>\n If this certificate does not contain a {@code SubjectAltName}\n extension, {@code null} is returned. Otherwise, a\n {@code Collection} is returned with an entry representing each\n {@code GeneralName} included in the extension. Each entry is a\n {@code List} whose first entry is an {@code Integer}\n (the name type, 0-8) and whose second entry is a {@code String}\n or a byte array (the name, in string or ASN.1 DER encoded form,\n respectively).\n <p>\n <a href=\"http://www.ietf.org/rfc/rfc822.txt\">RFC 822</a>, DNS, and URI\n names are returned as {@code String}s,\n using the well-established string formats for those types (subject to\n the restrictions included in RFC 3280). IPv4 address names are\n returned using dotted quad notation. IPv6 address names are returned\n in the form \"a1:a2:...:a8\", where a1-a8 are hexadecimal values\n representing the eight 16-bit pieces of the address. OID names are\n returned as {@code String}s represented as a series of nonnegative\n integers separated by periods. And directory names (distinguished names)\n are returned in <a href=\"http://www.ietf.org/rfc/rfc2253.txt\">\n RFC 2253</a> string format. No standard string format is\n defined for otherNames, X.400 names, EDI party names, or any\n other type of names. They are returned as byte arrays\n containing the ASN.1 DER encoded form of the name.\n <p>\n Note that the {@code Collection} returned may contain more\n than one name of the same type. Also, note that the returned\n {@code Collection} is immutable and any entries containing byte\n arrays are cloned to protect against subsequent modifications.\n <p>\n This method was added to version 1.4 of the Java 2 Platform Standard\n Edition. In order to maintain backwards compatibility with existing\n service providers, this method is not {@code abstract}\n and it provides a default implementation. Subclasses\n should override this method with a correct implementation.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Collection}</span><div class='sub-desc'><p>an immutable {@code Collection} of subject alternative\n names (or {@code null})</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>CertificateParsingException if the extension cannot be decoded</p>\n</div></li></ul></div></div></div><div id='method-getSubjectDN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSubjectDN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSubjectDN' class='name expandable'>getSubjectDN</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Denigrated, replaced by {@linkplain\n getSubjectX500Principal()}. ...</div><div class='long'><p><strong>Denigrated</strong>, replaced by {@linkplain\n <a href=\"#!/api/java.security.cert.X509Certificate-method-getSubjectX500Principal\" rel=\"java.security.cert.X509Certificate-method-getSubjectX500Principal\" class=\"docClass\">getSubjectX500Principal</a>()}. This method returns the {@code subject}\n as an implementation specific Principal object, which should not be\n relied upon by portable code.</p>\n\n<p> <p>\n Gets the {@code subject} (subject distinguished name) value\n from the certificate.  If the {@code subject} value is empty,\n then the {@code getName()} method of the returned\n {@code Principal} object returns an empty string (\"\").</p>\n\n<p> <p> The ASN.1 definition for this is:</p>\n\n<pre> subject    Name\n </pre>\n\n\n<p> <p>See getIssuerDN for {@code Name}\n and other relevant definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>a Principal whose name is the subject name.</p>\n</div></li></ul></div></div></div><div id='method-getSubjectUniqueID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSubjectUniqueID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSubjectUniqueID' class='name expandable'>getSubjectUniqueID</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code subjectUniqueID} value from the certificate. ...</div><div class='long'><p>Gets the {@code subjectUniqueID} value from the certificate.</p>\n\n<p> <p>The ASN.1 definition for this is:</p>\n\n<pre> subjectUniqueID  [2]  IMPLICIT UniqueIdentifier OPTIONAL\n\n UniqueIdentifier  ::=  BIT STRING\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the subject unique identifier or null if it is not\n present in the certificate.</p>\n</div></li></ul></div></div></div><div id='method-getSubjectX500Principal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getSubjectX500Principal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getSubjectX500Principal' class='name expandable'>getSubjectX500Principal</a>( <span class='pre'></span> ) : Object {javax.security.auth.x500.X500Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the subject (subject distinguished name) value from the\n certificate as an {@code X500Principal}. ...</div><div class='long'><p>Returns the subject (subject distinguished name) value from the\n certificate as an {@code X500Principal}.  If the subject value\n is empty, then the {@code getName()} method of the returned\n {@code X500Principal} object returns an empty string (\"\").\n <p>\n It is recommended that subclasses override this method.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.security.auth.x500.X500Principal}</span><div class='sub-desc'><p>an {@code X500Principal} representing the subject\n          distinguished name</p>\n</div></li></ul></div></div></div><div id='method-getTBSCertificate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getTBSCertificate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getTBSCertificate' class='name expandable'>getTBSCertificate</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the DER-encoded certificate information, the\n {@code tbsCertificate} from this certificate. ...</div><div class='long'><p>Gets the DER-encoded certificate information, the\n {@code tbsCertificate} from this certificate.\n This can be used to verify the signature independently.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the DER-encoded certificate information.\n@exception CertificateEncodingException if an encoding error occurs.</p>\n</div></li></ul></div></div></div><div id='method-getType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.security.cert.Certificate' rel='java.security.cert.Certificate' class='defined-in docClass'>java.security.cert.Certificate</a><br/><a href='source/Certificate.html#java-security-cert-Certificate-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.Certificate-method-getType' class='name expandable'>getType</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the type of this certificate. ...</div><div class='long'><p>Returns the type of this certificate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the type of this certificate.</p>\n</div></li></ul></div></div></div><div id='method-getVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-getVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-getVersion' class='name expandable'>getVersion</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code version} (version number) value from the\n certificate. ...</div><div class='long'><p>Gets the {@code version} (version number) value from the\n certificate.\n The ASN.1 definition for this is:</p>\n\n<pre> version  [0] EXPLICIT Version DEFAULT v1\n\n Version ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the version number, i.e. 1, 2 or 3.</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.security.cert.Certificate' rel='java.security.cert.Certificate' class='defined-in docClass'>java.security.cert.Certificate</a><br/><a href='source/Certificate.html#java-security-cert-Certificate-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.Certificate-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a hashcode value for this certificate from its\n encoded form. ...</div><div class='long'><p>Returns a hashcode value for this certificate from its\n encoded form.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the hashcode value.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/java.security.cert.Certificate' rel='java.security.cert.Certificate' class='defined-in docClass'>java.security.cert.Certificate</a><br/><a href='source/Certificate.html#java-security-cert-Certificate-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.Certificate-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representation of this certificate. ...</div><div class='long'><p>Returns a string representation of this certificate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this certificate.</p>\n</div></li></ul></div></div></div><div id='method-verify' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.X509Certificate'>java.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#java-security-cert-X509Certificate-method-verify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.X509Certificate-method-verify' class='name expandable'>verify</a>( <span class='pre'>key, sigProvider</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Verifies that this certificate was signed using the\n private key that corresponds to the specified public key. ...</div><div class='long'><p>Verifies that this certificate was signed using the\n private key that corresponds to the specified public key.\n This method uses the signature verification engine\n supplied by the specified provider. Note that the specified\n Provider object does not have to be registered in the provider list.</p>\n\n<p> This method was added to version 1.8 of the Java Platform Standard\n Edition. In order to maintain backwards compatibility with existing\n service providers, this method is not {@code abstract}\n and it provides a default implementation.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Object {PublicKey}<div class='sub-desc'><p>the PublicKey used to carry out the verification.</p>\n</div></li><li><span class='pre'>sigProvider</span> : Object {Provider}<div class='sub-desc'><p>the signature provider.\n@exception NoSuchAlgorithmException on unsupported signature\n algorithms.\n@exception InvalidKeyException on incorrect key.\n@exception SignatureException on signature errors.\n@exception CertificateException on encoding errors.\n@exception UnsupportedOperationException if the method is not supported</p>\n</div></li></ul><p>Overrides: <a href=\"#!/api/java.security.cert.Certificate-method-verify\" rel=\"java.security.cert.Certificate-method-verify\" class=\"docClass\">java.security.cert.Certificate.verify</a></p></div></div></div></div></div></div></div>","meta":{}});