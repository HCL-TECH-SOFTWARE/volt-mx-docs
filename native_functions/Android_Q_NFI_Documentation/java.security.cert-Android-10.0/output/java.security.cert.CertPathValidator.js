Ext.data.JsonP.java_security_cert_CertPathValidator({"tagname":"class","name":"java.security.cert.CertPathValidator","autodetected":{},"files":[{"filename":"CertPathValidator.js","href":"CertPathValidator.html#java-security-cert-CertPathValidator"}],"extends":"java.lang.Object","since":"1.4","author":[{"tagname":"author","name":"Yassir Elley","email":null}],"members":[{"name":"getAlgorithm","tagname":"method","owner":"java.security.cert.CertPathValidator","id":"method-getAlgorithm","meta":{}},{"name":"getDefaultType","tagname":"method","owner":"java.security.cert.CertPathValidator","id":"method-getDefaultType","meta":{}},{"name":"getInstance","tagname":"method","owner":"java.security.cert.CertPathValidator","id":"method-getInstance","meta":{}},{"name":"getProvider","tagname":"method","owner":"java.security.cert.CertPathValidator","id":"method-getProvider","meta":{}},{"name":"getRevocationChecker","tagname":"method","owner":"java.security.cert.CertPathValidator","id":"method-getRevocationChecker","meta":{}},{"name":"validate","tagname":"method","owner":"java.security.cert.CertPathValidator","id":"method-validate","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.security.cert.CertPathValidator","short_doc":"A class for validating certification paths (also known as certificate\n chains). ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.security.cert.CertPathValidator</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CertPathValidator.html#java-security-cert-CertPathValidator' target='_blank'>CertPathValidator.js</a></div></pre><div class='doc-contents'><p>A class for validating certification paths (also known as certificate\n chains).\n <p>\n This class uses a provider-based architecture.\n To create a {@code CertPathValidator},\n call one of the static {@code getInstance} methods, passing in the\n algorithm name of the {@code CertPathValidator} desired and\n optionally the name of the provider desired.</p>\n\n<p> <p>Once a {@code CertPathValidator} object has been created, it can\n be used to validate certification paths by calling the <a href=\"#!/api/java.security.cert.CertPathValidator-method-validate\" rel=\"java.security.cert.CertPathValidator-method-validate\" class=\"docClass\">validate</a> method and passing it the {@code CertPath} to be validated\n and an algorithm-specific set of parameters. If successful, the result is\n returned in an object that implements the\n {@code CertPathValidatorResult} interface.</p>\n\n<p> <p>The <a href=\"#!/api/java.security.cert.CertPathValidator-method-getRevocationChecker\" rel=\"java.security.cert.CertPathValidator-method-getRevocationChecker\" class=\"docClass\">getRevocationChecker</a> method allows an application to specify\n additional algorithm-specific parameters and options used by the\n {@code CertPathValidator} when checking the revocation status of\n certificates. Here is an example demonstrating how it is used with the PKIX\n algorithm:</p>\n\n<pre> CertPathValidator cpv = CertPathValidator.getInstance(\"PKIX\");\n PKIXRevocationChecker rc = (PKIXRevocationChecker)cpv.getRevocationChecker();\n rc.setOptions(EnumSet.of(Option.SOFT_FAIL));\n params.addCertPathChecker(rc);\n CertPathValidatorResult cpvr = cpv.validate(path, params);\n </pre>\n\n\n<p> <p> Android provides the following {@code CertPathValidator} algorithms:\n <table>\n   <thead>\n     <tr>\n       <th>Algorithm</th>\n       <th>Supported API Levels</th>\n     </tr>\n   </thead>\n   <tbody>\n     <tr>\n       <td>PKIX</td>\n       <td>1+</td>\n     </tr>\n   </tbody>\n </table></p>\n\n<p> This algorithm is described in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#CertPathValidator\">\n CertPathValidator section</a> of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.</p>\n\n<p> <p>\n <b>Concurrent Access</b>\n <p>\n The static methods of this class are guaranteed to be thread-safe.\n Multiple threads may concurrently invoke the static methods defined in\n this class with no ill effects.\n <p>\n However, this is not true for the non-static methods defined by this class.\n Unless otherwise documented by a specific provider, threads that need to\n access a single {@code CertPathValidator} instance concurrently should\n synchronize amongst themselves and provide the necessary locking. Multiple\n threads each manipulating a different {@code CertPathValidator}\n instance need not synchronize.</p>\n\n<p> @see CertPath</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getAlgorithm' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidator'>java.security.cert.CertPathValidator</span><br/><a href='source/CertPathValidator.html#java-security-cert-CertPathValidator-method-getAlgorithm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidator-method-getAlgorithm' class='name expandable'>getAlgorithm</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the algorithm name of this {@code CertPathValidator}. ...</div><div class='long'><p>Returns the algorithm name of this {@code CertPathValidator}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the algorithm name of this {@code CertPathValidator}</p>\n</div></li></ul></div></div></div><div id='method-getDefaultType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidator'>java.security.cert.CertPathValidator</span><br/><a href='source/CertPathValidator.html#java-security-cert-CertPathValidator-method-getDefaultType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidator-method-getDefaultType' class='name expandable'>getDefaultType</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the default {@code CertPathValidator} type as specified by\n the {@code certpathvalidator.type} security prope...</div><div class='long'><p>Returns the default {@code CertPathValidator} type as specified by\n the {@code certpathvalidator.type} security property, or the string\n {@literal \"PKIX\"} if no such property exists.</p>\n\n<p> <p>The default {@code CertPathValidator} type can be used by\n applications that do not want to use a hard-coded type when calling one\n of the {@code getInstance} methods, and want to provide a default\n type in case a user does not specify its own.</p>\n\n<p> <p>The default {@code CertPathValidator} type can be changed by\n setting the value of the {@code certpathvalidator.type} security\n property to the desired type.\n@see java.security.Security security properties</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the default {@code CertPathValidator} type as specified\n by the {@code certpathvalidator.type} security property, or the string\n {@literal \"PKIX\"} if no such property exists.</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidator'>java.security.cert.CertPathValidator</span><br/><a href='source/CertPathValidator.html#java-security-cert-CertPathValidator-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidator-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>algorithm, provider</span> ) : Object {java.security.cert.CertPathValidator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a {@code CertPathValidator} object that implements the\n specified algorithm. ...</div><div class='long'><p>Returns a {@code CertPathValidator} object that implements the\n specified algorithm.</p>\n\n<p> <p> A new CertPathValidator object encapsulating the\n CertPathValidatorSpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>algorithm</span> : String<div class='sub-desc'><p>the name of the requested {@code CertPathValidator}\n algorithm. See the CertPathValidator section in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#CertPathValidator\">\n Java Cryptography Architecture Standard Algorithm Name Documentation</a>\n for information about standard algorithm names.</p>\n</div></li><li><span class='pre'>provider</span> : Object {Provider}<div class='sub-desc'><p>the provider.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.cert.CertPathValidator}</span><div class='sub-desc'><p>a {@code CertPathValidator} object that implements the\n          specified algorithm.\n@exception NoSuchAlgorithmException if a CertPathValidatorSpi\n          implementation for the specified algorithm is not available\n          from the specified Provider object.\n@exception IllegalArgumentException if the {@code provider} is\n          null.\n@see java.security.Provider</p>\n</div></li></ul></div></div></div><div id='method-getProvider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidator'>java.security.cert.CertPathValidator</span><br/><a href='source/CertPathValidator.html#java-security-cert-CertPathValidator-method-getProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidator-method-getProvider' class='name expandable'>getProvider</a>( <span class='pre'></span> ) : Object {java.security.Provider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the {@code Provider} of this\n {@code CertPathValidator}. ...</div><div class='long'><p>Returns the {@code Provider} of this\n {@code CertPathValidator}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Provider}</span><div class='sub-desc'><p>the {@code Provider} of this {@code CertPathValidator}</p>\n</div></li></ul></div></div></div><div id='method-getRevocationChecker' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidator'>java.security.cert.CertPathValidator</span><br/><a href='source/CertPathValidator.html#java-security-cert-CertPathValidator-method-getRevocationChecker' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidator-method-getRevocationChecker' class='name expandable'>getRevocationChecker</a>( <span class='pre'></span> ) : Object {java.security.cert.CertPathChecker}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a {@code CertPathChecker} that the encapsulated\n {@code CertPathValidatorSpi} implementation uses to check th...</div><div class='long'><p>Returns a {@code CertPathChecker} that the encapsulated\n {@code CertPathValidatorSpi} implementation uses to check the revocation\n status of certificates. A PKIX implementation returns objects of\n type {@code PKIXRevocationChecker}. Each invocation of this method\n returns a new instance of {@code CertPathChecker}.</p>\n\n<p> <p>The primary purpose of this method is to allow callers to specify\n additional input parameters and options specific to revocation checking.\n See the class description for an example.</p>\n        <p>Available since: <b>1.8</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.cert.CertPathChecker}</span><div class='sub-desc'><p>a {@code CertPathChecker}</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException if the service provider does not\n         support this method</p>\n</div></li></ul></div></div></div><div id='method-validate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.security.cert.CertPathValidator'>java.security.cert.CertPathValidator</span><br/><a href='source/CertPathValidator.html#java-security-cert-CertPathValidator-method-validate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.security.cert.CertPathValidator-method-validate' class='name expandable'>validate</a>( <span class='pre'>certPath, params</span> ) : Object {java.security.cert.CertPathValidatorResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Validates the specified certification path using the specified\n algorithm parameter set. ...</div><div class='long'><p>Validates the specified certification path using the specified\n algorithm parameter set.\n <p>\n The {@code CertPath} specified must be of a type that is\n supported by the validation algorithm, otherwise an\n {@code InvalidAlgorithmParameterException} will be thrown. For\n example, a {@code CertPathValidator} that implements the PKIX\n algorithm validates {@code CertPath} objects of type X.509.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>certPath</span> : Object {CertPath}<div class='sub-desc'><p>the {@code CertPath} to be validated</p>\n</div></li><li><span class='pre'>params</span> : Object {CertPathParameters}<div class='sub-desc'><p>the algorithm parameters</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.cert.CertPathValidatorResult}</span><div class='sub-desc'><p>the result of the validation algorithm\n@exception CertPathValidatorException if the {@code CertPath}\n does not validate\n@exception InvalidAlgorithmParameterException if the specified\n parameters or the type of the specified {@code CertPath} are\n inappropriate for this {@code CertPathValidator}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});