Ext.data.JsonP.com_android_setupwizardlib_items_SimpleInflater({"tagname":"class","name":"com.android.setupwizardlib.items.SimpleInflater","autodetected":{},"files":[{"filename":"SimpleInflater.js","href":"SimpleInflater.html#com-android-setupwizardlib-items-SimpleInflater"}],"extends":"java.lang.Object","params":[{"tagname":"params","doc":"<p><T> The class where all instances (including child elements) belong to. If parent and\n     child elements belong to different class hierarchies, it's OK to set this to Object.</T></p>\n"}],"members":[{"name":"getResources","tagname":"method","owner":"com.android.setupwizardlib.items.SimpleInflater","id":"method-getResources","meta":{}},{"name":"inflate","tagname":"method","owner":"com.android.setupwizardlib.items.SimpleInflater","id":"method-inflate","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.setupwizardlib.items.SimpleInflater","short_doc":"A simple XML inflater, which takes care of moving the parser to the correct position. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["com.android.setupwizardlib.items.ReflectionInflater"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.setupwizardlib.items.SimpleInflater</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/com.android.setupwizardlib.items.ReflectionInflater' rel='com.android.setupwizardlib.items.ReflectionInflater' class='docClass'>com.android.setupwizardlib.items.ReflectionInflater</a></div><h4>Files</h4><div class='dependency'><a href='source/SimpleInflater.html#com-android-setupwizardlib-items-SimpleInflater' target='_blank'>SimpleInflater.js</a></div></pre><div class='doc-contents'><p>A simple XML inflater, which takes care of moving the parser to the correct position. Subclasses\n need to implement AttributeSet) to create an object representation\n and Object) to attach a child tag to the parent tag.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><T> The class where all instances (including child elements) belong to. If parent and\n     child elements belong to different class hierarchies, it's OK to set this to Object.</T></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getResources' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.items.SimpleInflater'>com.android.setupwizardlib.items.SimpleInflater</span><br/><a href='source/SimpleInflater.html#com-android-setupwizardlib-items-SimpleInflater-method-getResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.items.SimpleInflater-method-getResources' class='name expandable'>getResources</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-inflate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.items.SimpleInflater'>com.android.setupwizardlib.items.SimpleInflater</span><br/><a href='source/SimpleInflater.html#com-android-setupwizardlib-items-SimpleInflater-method-inflate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.items.SimpleInflater-method-inflate' class='name expandable'>inflate</a>( <span class='pre'>parser</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Inflate a new hierarchy from the specified XML node. ...</div><div class='long'><p>Inflate a new hierarchy from the specified XML node. Throws InflaterException if there is an\n error.</p>\n\n<p> <p><em><strong>Important</strong></em>&nbsp;&nbsp;&nbsp;For performance reasons, inflation\n relies heavily on pre-processing of XML files that is done at build time. Therefore, it is not\n currently possible to use inflater with an XmlPullParser over a plain XML file at runtime.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parser</span> : Object {XmlPullParser}<div class='sub-desc'><p>XML dom node containing the description of the hierarchy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>The root of the inflated hierarchy.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});