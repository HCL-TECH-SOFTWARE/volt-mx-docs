Ext.data.JsonP.java_util_jar_Pack200_Packer({"tagname":"class","name":"java.util.jar.Pack200.Packer","autodetected":{},"files":[{"filename":"Packer.js","href":"Packer.html#java-util-jar-Pack200-Packer"}],"since":"1.5","members":[{"name":"CLASS_ATTRIBUTE_PFX","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-CLASS_ATTRIBUTE_PFX","meta":{}},{"name":"CODE_ATTRIBUTE_PFX","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-CODE_ATTRIBUTE_PFX","meta":{}},{"name":"DEFLATE_HINT","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-DEFLATE_HINT","meta":{}},{"name":"EFFORT","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-EFFORT","meta":{}},{"name":"ERROR","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-ERROR","meta":{}},{"name":"FALSE","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-FALSE","meta":{}},{"name":"FIELD_ATTRIBUTE_PFX","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-FIELD_ATTRIBUTE_PFX","meta":{}},{"name":"KEEP","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-KEEP","meta":{}},{"name":"KEEP_FILE_ORDER","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-KEEP_FILE_ORDER","meta":{}},{"name":"LATEST","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-LATEST","meta":{}},{"name":"METHOD_ATTRIBUTE_PFX","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-METHOD_ATTRIBUTE_PFX","meta":{}},{"name":"MODIFICATION_TIME","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-MODIFICATION_TIME","meta":{}},{"name":"PASS","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-PASS","meta":{}},{"name":"PASS_FILE_PFX","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-PASS_FILE_PFX","meta":{}},{"name":"PROGRESS","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-PROGRESS","meta":{}},{"name":"SEGMENT_LIMIT","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-SEGMENT_LIMIT","meta":{}},{"name":"STRIP","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-STRIP","meta":{}},{"name":"TRUE","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-TRUE","meta":{}},{"name":"UNKNOWN_ATTRIBUTE","tagname":"property","owner":"java.util.jar.Pack200.Packer","id":"property-UNKNOWN_ATTRIBUTE","meta":{}},{"name":"addPropertyChangeListener","tagname":"method","owner":"java.util.jar.Pack200.Packer","id":"method-addPropertyChangeListener","meta":{"deprecated":{"text":"<p>The dependency on {@code PropertyChangeListener} creates\n             a significant impediment to future modularization of the\n             Java platform. This method will be removed in a future\n             release.\n             Applications that need to monitor progress of the packer\n             can poll the value of the <a href=\"#!/api/java.util.jar.Pack200.Packer-property-PROGRESS\" rel=\"java.util.jar.Pack200.Packer-property-PROGRESS\" class=\"docClass\">PROGRESS</a>\n             property instead.</p>\n"}}},{"name":"pack","tagname":"method","owner":"java.util.jar.Pack200.Packer","id":"method-pack","meta":{}},{"name":"properties","tagname":"method","owner":"java.util.jar.Pack200.Packer","id":"method-properties","meta":{}},{"name":"removePropertyChangeListener","tagname":"method","owner":"java.util.jar.Pack200.Packer","id":"method-removePropertyChangeListener","meta":{"deprecated":{"text":"<p>The dependency on {@code PropertyChangeListener} creates\n             a significant impediment to future modularization of the\n             Java platform. This method will be removed in a future\n             release.</p>\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.jar.Pack200.Packer","short_doc":"The packer engine applies various transformations to the input JAR file,\n making the pack stream highly compressible ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Packer.html#java-util-jar-Pack200-Packer' target='_blank'>Packer.js</a></div></pre><div class='doc-contents'><p>The packer engine applies various transformations to the input JAR file,\n making the pack stream highly compressible by a compressor such as\n gzip or zip. An instance of the engine can be obtained\n using newPacker.</p>\n\n<p> The high degree of compression is achieved\n by using a number of techniques described in the JSR 200 specification.\n Some of the techniques are sorting, re-ordering and co-location of the\n constant pool.\n <p>\n The pack engine is initialized to an initial state as described\n by their properties below.\n The initial state can be manipulated by getting the\n engine properties (using <a href=\"#!/api/java.util.jar.Pack200.Packer-method-properties\" rel=\"java.util.jar.Pack200.Packer-method-properties\" class=\"docClass\">properties</a>) and storing\n the modified properties on the map.\n The resource files will be passed through with no changes at all.\n The class files will not contain identical bytes, since the unpacker\n is free to change minor class file features such as constant pool order.\n However, the class files will be semantically identical,\n as specified in\n <cite>The Java&trade; Virtual Machine Specification</cite>.\n <p>\n By default, the packer does not change the order of JAR elements.\n Also, the modification time and deflation hint of each\n JAR element is passed unchanged.\n (Any other ZIP-archive information, such as extra attributes\n giving Unix file permissions, are lost.)\n <p>\n Note that packing and unpacking a JAR will in general alter the\n bytewise contents of classfiles in the JAR.  This means that packing\n and unpacking will in general invalidate any digital signatures\n which rely on bytewise images of JAR elements.  In order both to sign\n and to pack a JAR, you must first pack and unpack the JAR to\n \"normalize\" it, then compute signatures on the unpacked JAR elements,\n and finally repack the signed JAR.\n Both packing steps should\n use precisely the same options, and the segment limit may also\n need to be set to \"-1\", to prevent accidental variation of segment\n boundaries as class file sizes change slightly.\n <p>\n (Here's why this works:  Any reordering the packer does\n of any classfile structures is idempotent, so the second packing\n does not change the orderings produced by the first packing.\n Also, the unpacker is guaranteed by the JSR 200 specification\n to produce a specific bytewise image for any given transmission\n ordering of archive elements.)\n <p>\n In order to maintain backward compatibility, the pack file's version is\n set to accommodate the class files present in the input JAR file. In\n other words, the pack file version will be the latest, if the class files\n are the latest and conversely the pack file version will be the oldest\n if the class file versions are also the oldest. For intermediate class\n file versions the corresponding pack file version will be used.\n For example:\n    If the input JAR-files are solely comprised of 1.5  (or  lesser)\n class files, a 1.5 compatible pack file is  produced. This will also be\n the case for archives that have no class files.\n    If the input JAR-files contains a 1.6 class file, then the pack file\n version will be set to 1.6.\n <p>\n Note: Unless otherwise noted, passing a <tt>null</tt> argument to a\n constructor or method in this class will cause a NullPointerException\n to be thrown.\n <p></p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CLASS_ATTRIBUTE_PFX' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-CLASS_ATTRIBUTE_PFX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX' class='name expandable'>CLASS_ATTRIBUTE_PFX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>When concatenated with a class attribute name,\nindicates the format of that attribute,\nusing the layout language spec...</div><div class='long'><p>When concatenated with a class attribute name,\nindicates the format of that attribute,\nusing the layout language specified in the JSR 200 specification.</p>\n\n<p><p>\nFor example, the effect of this option is built in:\n<code>pack.class.attribute.SourceFile=RUH</code>.\n<p>\nThe special strings <a href=\"#!/api/java.util.jar.Pack200.Packer-property-ERROR\" rel=\"java.util.jar.Pack200.Packer-property-ERROR\" class=\"docClass\">ERROR</a>, <a href=\"#!/api/java.util.jar.Pack200.Packer-property-STRIP\" rel=\"java.util.jar.Pack200.Packer-property-STRIP\" class=\"docClass\">STRIP</a>, and <a href=\"#!/api/java.util.jar.Pack200.Packer-property-PASS\" rel=\"java.util.jar.Pack200.Packer-property-PASS\" class=\"docClass\">PASS</a> are\nalso allowed, with the same meaning as <a href=\"#!/api/java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" rel=\"java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" class=\"docClass\">UNKNOWN_ATTRIBUTE</a>.\nThis provides a way for users to request that specific attributes be\nrefused, stripped, or passed bitwise (with no class compression).\n<p>\nCode like this might be used to support attributes for JCOV:\n<pre><code>    Map p = packer.properties();\n    p.put(CODE_ATTRIBUTE_PFX+\"CoverageTable\",       \"NH[PHHII]\");\n    p.put(CODE_ATTRIBUTE_PFX+\"CharacterRangeTable\", \"NH[PHPOHIIH]\");\n    p.put(CLASS_ATTRIBUTE_PFX+\"SourceID\",           \"RUH\");\n    p.put(CLASS_ATTRIBUTE_PFX+\"CompilationID\",      \"RUH\");\n</code></pre>\n<p>\nCode like this might be used to strip debugging attributes:\n<pre><code>    Map p = packer.properties();\n    p.put(CODE_ATTRIBUTE_PFX+\"LineNumberTable\",    STRIP);\n    p.put(CODE_ATTRIBUTE_PFX+\"LocalVariableTable\", STRIP);\n    p.put(CLASS_ATTRIBUTE_PFX+\"SourceFile\",        STRIP);\n</code></pre></p>\n<p>Defaults to: <code>&quot;pack.class.attribute.&quot;</code></p></div></div></div><div id='property-CODE_ATTRIBUTE_PFX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-CODE_ATTRIBUTE_PFX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-CODE_ATTRIBUTE_PFX' class='name expandable'>CODE_ATTRIBUTE_PFX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>When concatenated with a code attribute name,\nindicates the format of that attribute. ...</div><div class='long'><p>When concatenated with a code attribute name,\nindicates the format of that attribute.\nFor example, the effect of this option is built in:\n<code>pack.code.attribute.LocalVariableTable=NH[PHOHRUHRSHH]</code>.\nThe special strings <a href=\"#!/api/java.util.jar.Pack200.Packer-property-ERROR\" rel=\"java.util.jar.Pack200.Packer-property-ERROR\" class=\"docClass\">ERROR</a>, <a href=\"#!/api/java.util.jar.Pack200.Packer-property-STRIP\" rel=\"java.util.jar.Pack200.Packer-property-STRIP\" class=\"docClass\">STRIP</a>, and <a href=\"#!/api/java.util.jar.Pack200.Packer-property-PASS\" rel=\"java.util.jar.Pack200.Packer-property-PASS\" class=\"docClass\">PASS</a>\nare also allowed.\n@see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" class=\"docClass\">CLASS_ATTRIBUTE_PFX</a></p>\n<p>Defaults to: <code>&quot;pack.code.attribute.&quot;</code></p></div></div></div><div id='property-DEFLATE_HINT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-DEFLATE_HINT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-DEFLATE_HINT' class='name expandable'>DEFLATE_HINT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If this property is set to TRUE or FALSE, the packer\nwill set the deflation hint accordingly in the output archive, a...</div><div class='long'><p>If this property is set to <a href=\"#!/api/java.util.jar.Pack200.Packer-property-TRUE\" rel=\"java.util.jar.Pack200.Packer-property-TRUE\" class=\"docClass\">TRUE</a> or <a href=\"#!/api/java.util.jar.Pack200.Packer-property-FALSE\" rel=\"java.util.jar.Pack200.Packer-property-FALSE\" class=\"docClass\">FALSE</a>, the packer\nwill set the deflation hint accordingly in the output archive, and\nwill not transmit the individual deflation hints of archive elements.</p>\n\n<p><p>\nIf this property is set to the special string <a href=\"#!/api/java.util.jar.Pack200.Packer-property-KEEP\" rel=\"java.util.jar.Pack200.Packer-property-KEEP\" class=\"docClass\">KEEP</a>, the packer\nwill attempt to determine an independent deflation hint for each\navailable element of the input archive, and transmit this hint separately.\n<p>\nThe default is <a href=\"#!/api/java.util.jar.Pack200.Packer-property-KEEP\" rel=\"java.util.jar.Pack200.Packer-property-KEEP\" class=\"docClass\">KEEP</a>, which preserves the input information,\nbut may cause the transmitted archive to be larger than necessary.\n<p>\nIt is up to the unpacker implementation\nto take action upon the hint to suitably compress the elements of\nthe resulting unpacked jar.\n<p>\nThe deflation hint of a ZIP or JAR element indicates\nwhether the element was deflated or stored directly.</p>\n<p>Defaults to: <code>&quot;pack.deflate.hint&quot;</code></p></div></div></div><div id='property-EFFORT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-EFFORT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-EFFORT' class='name expandable'>EFFORT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If this property is set to a single decimal digit, the packer will\nuse the indicated amount of effort in compressing ...</div><div class='long'><p>If this property is set to a single decimal digit, the packer will\nuse the indicated amount of effort in compressing the archive.\nLevel 1 may produce somewhat larger size and faster compression speed,\nwhile level 9 will take much longer but may produce better compression.</p>\n\n<p><p>\nThe special value 0 instructs the packer to copy through the\noriginal JAR file directly, with no compression.  The JSR 200\nstandard requires any unpacker to understand this special case\nas a pass-through of the entire archive.\n<p>\nThe default is 5, investing a modest amount of time to\nproduce reasonable compression.</p>\n<p>Defaults to: <code>&quot;pack.effort&quot;</code></p></div></div></div><div id='property-ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-ERROR' class='name expandable'>ERROR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string \"error\", a possible value for certain properties. ...</div><div class='long'><p>The string \"error\", a possible value for certain properties.\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" rel=\"java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" class=\"docClass\">UNKNOWN_ATTRIBUTE</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" class=\"docClass\">CLASS_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-FIELD_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-FIELD_ATTRIBUTE_PFX\" class=\"docClass\">FIELD_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-METHOD_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-METHOD_ATTRIBUTE_PFX\" class=\"docClass\">METHOD_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CODE_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CODE_ATTRIBUTE_PFX\" class=\"docClass\">CODE_ATTRIBUTE_PFX</a></p>\n<p>Defaults to: <code>&quot;error&quot;</code></p></div></div></div><div id='property-FALSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-FALSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-FALSE' class='name expandable'>FALSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string \"false\", a possible value for certain properties. ...</div><div class='long'><p>The string \"false\", a possible value for certain properties.\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-KEEP_FILE_ORDER\" rel=\"java.util.jar.Pack200.Packer-property-KEEP_FILE_ORDER\" class=\"docClass\">KEEP_FILE_ORDER</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-DEFLATE_HINT\" rel=\"java.util.jar.Pack200.Packer-property-DEFLATE_HINT\" class=\"docClass\">DEFLATE_HINT</a></p>\n<p>Defaults to: <code>&quot;false&quot;</code></p></div></div></div><div id='property-FIELD_ATTRIBUTE_PFX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-FIELD_ATTRIBUTE_PFX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-FIELD_ATTRIBUTE_PFX' class='name expandable'>FIELD_ATTRIBUTE_PFX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>When concatenated with a field attribute name,\nindicates the format of that attribute. ...</div><div class='long'><p>When concatenated with a field attribute name,\nindicates the format of that attribute.\nFor example, the effect of this option is built in:\n<code>pack.field.attribute.Deprecated=</code>.\nThe special strings <a href=\"#!/api/java.util.jar.Pack200.Packer-property-ERROR\" rel=\"java.util.jar.Pack200.Packer-property-ERROR\" class=\"docClass\">ERROR</a>, <a href=\"#!/api/java.util.jar.Pack200.Packer-property-STRIP\" rel=\"java.util.jar.Pack200.Packer-property-STRIP\" class=\"docClass\">STRIP</a>, and\n<a href=\"#!/api/java.util.jar.Pack200.Packer-property-PASS\" rel=\"java.util.jar.Pack200.Packer-property-PASS\" class=\"docClass\">PASS</a> are also allowed.\n@see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" class=\"docClass\">CLASS_ATTRIBUTE_PFX</a></p>\n<p>Defaults to: <code>&quot;pack.field.attribute.&quot;</code></p></div></div></div><div id='property-KEEP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-KEEP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-KEEP' class='name expandable'>KEEP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string \"keep\", a possible value for certain properties. ...</div><div class='long'><p>The string \"keep\", a possible value for certain properties.\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-DEFLATE_HINT\" rel=\"java.util.jar.Pack200.Packer-property-DEFLATE_HINT\" class=\"docClass\">DEFLATE_HINT</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-MODIFICATION_TIME\" rel=\"java.util.jar.Pack200.Packer-property-MODIFICATION_TIME\" class=\"docClass\">MODIFICATION_TIME</a></p>\n<p>Defaults to: <code>&quot;keep&quot;</code></p></div></div></div><div id='property-KEEP_FILE_ORDER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-KEEP_FILE_ORDER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-KEEP_FILE_ORDER' class='name expandable'>KEEP_FILE_ORDER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If this property is set to TRUE, the packer will transmit\nall elements in their original order within the source arch...</div><div class='long'><p>If this property is set to <a href=\"#!/api/java.util.jar.Pack200.Packer-property-TRUE\" rel=\"java.util.jar.Pack200.Packer-property-TRUE\" class=\"docClass\">TRUE</a>, the packer will transmit\nall elements in their original order within the source archive.</p>\n\n<p><p>\nIf it is set to <a href=\"#!/api/java.util.jar.Pack200.Packer-property-FALSE\" rel=\"java.util.jar.Pack200.Packer-property-FALSE\" class=\"docClass\">FALSE</a>, the packer may reorder elements,\nand also remove JAR directory entries, which carry no useful\ninformation for Java applications.\n(Typically this enables better compression.)\n<p>\nThe default is <a href=\"#!/api/java.util.jar.Pack200.Packer-property-TRUE\" rel=\"java.util.jar.Pack200.Packer-property-TRUE\" class=\"docClass\">TRUE</a>, which preserves the input information,\nbut may cause the transmitted archive to be larger than necessary.</p>\n<p>Defaults to: <code>&quot;pack.keep.file.order&quot;</code></p></div></div></div><div id='property-LATEST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-LATEST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-LATEST' class='name expandable'>LATEST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string \"latest\", a possible value for certain properties. ...</div><div class='long'><p>The string \"latest\", a possible value for certain properties.\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-MODIFICATION_TIME\" rel=\"java.util.jar.Pack200.Packer-property-MODIFICATION_TIME\" class=\"docClass\">MODIFICATION_TIME</a></p>\n<p>Defaults to: <code>&quot;latest&quot;</code></p></div></div></div><div id='property-METHOD_ATTRIBUTE_PFX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-METHOD_ATTRIBUTE_PFX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-METHOD_ATTRIBUTE_PFX' class='name expandable'>METHOD_ATTRIBUTE_PFX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>When concatenated with a method attribute name,\nindicates the format of that attribute. ...</div><div class='long'><p>When concatenated with a method attribute name,\nindicates the format of that attribute.\nFor example, the effect of this option is built in:\n<code>pack.method.attribute.Exceptions=NH[RCH]</code>.\nThe special strings <a href=\"#!/api/java.util.jar.Pack200.Packer-property-ERROR\" rel=\"java.util.jar.Pack200.Packer-property-ERROR\" class=\"docClass\">ERROR</a>, <a href=\"#!/api/java.util.jar.Pack200.Packer-property-STRIP\" rel=\"java.util.jar.Pack200.Packer-property-STRIP\" class=\"docClass\">STRIP</a>, and <a href=\"#!/api/java.util.jar.Pack200.Packer-property-PASS\" rel=\"java.util.jar.Pack200.Packer-property-PASS\" class=\"docClass\">PASS</a>\nare also allowed.\n@see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" class=\"docClass\">CLASS_ATTRIBUTE_PFX</a></p>\n<p>Defaults to: <code>&quot;pack.method.attribute.&quot;</code></p></div></div></div><div id='property-MODIFICATION_TIME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-MODIFICATION_TIME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-MODIFICATION_TIME' class='name expandable'>MODIFICATION_TIME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If this property is set to the special string LATEST,\nthe packer will attempt to determine the latest modification ti...</div><div class='long'><p>If this property is set to the special string <a href=\"#!/api/java.util.jar.Pack200.Packer-property-LATEST\" rel=\"java.util.jar.Pack200.Packer-property-LATEST\" class=\"docClass\">LATEST</a>,\nthe packer will attempt to determine the latest modification time,\namong all the available entries in the original archive or the latest\nmodification time of all the available entries in each segment.\nThis single value will be transmitted as part of the segment and applied\nto all the entries in each segment, <a href=\"#!/api/java.util.jar.Pack200.Packer-property-SEGMENT_LIMIT\" rel=\"java.util.jar.Pack200.Packer-property-SEGMENT_LIMIT\" class=\"docClass\">SEGMENT_LIMIT</a>.</p>\n\n<p><p>\nThis can marginally decrease the transmitted size of the\narchive, at the expense of setting all installed files to a single\ndate.\n<p>\nIf this property is set to the special string <a href=\"#!/api/java.util.jar.Pack200.Packer-property-KEEP\" rel=\"java.util.jar.Pack200.Packer-property-KEEP\" class=\"docClass\">KEEP</a>,\nthe packer transmits a separate modification time for each input\nelement.\n<p>\nThe default is <a href=\"#!/api/java.util.jar.Pack200.Packer-property-KEEP\" rel=\"java.util.jar.Pack200.Packer-property-KEEP\" class=\"docClass\">KEEP</a>, which preserves the input information,\nbut may cause the transmitted archive to be larger than necessary.\n<p>\nIt is up to the unpacker implementation to take action to suitably\nset the modification time of each element of its output file.\n@see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-SEGMENT_LIMIT\" rel=\"java.util.jar.Pack200.Packer-property-SEGMENT_LIMIT\" class=\"docClass\">SEGMENT_LIMIT</a></p>\n<p>Defaults to: <code>&quot;pack.modification.time&quot;</code></p></div></div></div><div id='property-PASS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-PASS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-PASS' class='name expandable'>PASS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string \"pass\", a possible value for certain properties. ...</div><div class='long'><p>The string \"pass\", a possible value for certain properties.\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" rel=\"java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" class=\"docClass\">UNKNOWN_ATTRIBUTE</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" class=\"docClass\">CLASS_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-FIELD_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-FIELD_ATTRIBUTE_PFX\" class=\"docClass\">FIELD_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-METHOD_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-METHOD_ATTRIBUTE_PFX\" class=\"docClass\">METHOD_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CODE_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CODE_ATTRIBUTE_PFX\" class=\"docClass\">CODE_ATTRIBUTE_PFX</a></p>\n<p>Defaults to: <code>&quot;pass&quot;</code></p></div></div></div><div id='property-PASS_FILE_PFX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-PASS_FILE_PFX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-PASS_FILE_PFX' class='name expandable'>PASS_FILE_PFX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates that a file should be passed through bytewise, with no\ncompression. ...</div><div class='long'><p>Indicates that a file should be passed through bytewise, with no\ncompression.  Multiple files may be specified by specifying\nadditional properties with distinct strings appended, to\nmake a family of properties with the common prefix.</p>\n\n<p><p>\nThere is no pathname transformation, except\nthat the system file separator is replaced by the JAR file\nseparator '/'.\n<p>\nThe resulting file names must match exactly as strings with their\noccurrences in the JAR file.\n<p>\nIf a property value is a directory name, all files under that\ndirectory will be passed also.\n<p>\nExamples:\n<pre>{@code\n    Map p = packer.properties();\n    p.put(PASS_FILE_PFX+0, \"mutants/Rogue.class\");\n    p.put(PASS_FILE_PFX+1, \"mutants/Wolverine.class\");\n    p.put(PASS_FILE_PFX+2, \"mutants/Storm.class\");\n    # Pass all files in an entire directory hierarchy:\n    p.put(PASS_FILE_PFX+3, \"police/\");\n}</pre></p>\n<p>Defaults to: <code>&quot;pack.pass.file.&quot;</code></p></div></div></div><div id='property-PROGRESS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-PROGRESS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-PROGRESS' class='name expandable'>PROGRESS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The unpacker's progress as a percentage, as periodically\nupdated by the unpacker. ...</div><div class='long'><p>The unpacker's progress as a percentage, as periodically\nupdated by the unpacker.\nValues of 0 - 100 are normal, and -1 indicates a stall.\nProgress can be monitored by polling the value of this\nproperty.</p>\n\n<p><p>\nAt a minimum, the unpacker must set progress to 0\nat the beginning of a packing operation, and to 100\nat the end.</p>\n<p>Defaults to: <code>&quot;pack.progress&quot;</code></p></div></div></div><div id='property-SEGMENT_LIMIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-SEGMENT_LIMIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-SEGMENT_LIMIT' class='name expandable'>SEGMENT_LIMIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This property is a numeral giving the estimated target size N\n(in bytes) of each archive segment. ...</div><div class='long'><p>This property is a numeral giving the estimated target size N\n(in bytes) of each archive segment.\nIf a single input file requires more than N bytes,\nit will be given its own archive segment.</p>\n\n<p><p>\nAs a special case, a value of -1 will produce a single large\nsegment with all input files, while a value of 0 will\nproduce one segment for each class.\nLarger archive segments result in less fragmentation and\nbetter compression, but processing them requires more memory.\n<p>\nThe size of each segment is estimated by counting the size of each\ninput file to be transmitted in the segment, along with the size\nof its name and other transmitted properties.\n<p>\nThe default is -1, which means the packer will always create a single\nsegment output file. In cases where extremely large output files are\ngenerated, users are strongly encouraged to use segmenting or break\nup the input file into smaller JARs.\n<p>\nA 10Mb JAR packed without this limit will\ntypically pack about 10% smaller, but the packer may require\na larger Java heap (about ten times the segment limit).</p>\n<p>Defaults to: <code>&quot;pack.segment.limit&quot;</code></p></div></div></div><div id='property-STRIP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-STRIP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-STRIP' class='name expandable'>STRIP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string \"strip\", a possible value for certain properties. ...</div><div class='long'><p>The string \"strip\", a possible value for certain properties.\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" rel=\"java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE\" class=\"docClass\">UNKNOWN_ATTRIBUTE</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CLASS_ATTRIBUTE_PFX\" class=\"docClass\">CLASS_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-FIELD_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-FIELD_ATTRIBUTE_PFX\" class=\"docClass\">FIELD_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-METHOD_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-METHOD_ATTRIBUTE_PFX\" class=\"docClass\">METHOD_ATTRIBUTE_PFX</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-CODE_ATTRIBUTE_PFX\" rel=\"java.util.jar.Pack200.Packer-property-CODE_ATTRIBUTE_PFX\" class=\"docClass\">CODE_ATTRIBUTE_PFX</a></p>\n<p>Defaults to: <code>&quot;strip&quot;</code></p></div></div></div><div id='property-TRUE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-TRUE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-TRUE' class='name expandable'>TRUE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The string \"true\", a possible value for certain properties. ...</div><div class='long'><p>The string \"true\", a possible value for certain properties.\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-KEEP_FILE_ORDER\" rel=\"java.util.jar.Pack200.Packer-property-KEEP_FILE_ORDER\" class=\"docClass\">KEEP_FILE_ORDER</a>\n @see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-DEFLATE_HINT\" rel=\"java.util.jar.Pack200.Packer-property-DEFLATE_HINT\" class=\"docClass\">DEFLATE_HINT</a></p>\n<p>Defaults to: <code>&quot;true&quot;</code></p></div></div></div><div id='property-UNKNOWN_ATTRIBUTE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-property-UNKNOWN_ATTRIBUTE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-property-UNKNOWN_ATTRIBUTE' class='name expandable'>UNKNOWN_ATTRIBUTE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates the action to take when a class-file containing an unknown\nattribute is encountered. ...</div><div class='long'><p>Indicates the action to take when a class-file containing an unknown\nattribute is encountered.  Possible values are the strings <a href=\"#!/api/java.util.jar.Pack200.Packer-property-ERROR\" rel=\"java.util.jar.Pack200.Packer-property-ERROR\" class=\"docClass\">ERROR</a>,\n<a href=\"#!/api/java.util.jar.Pack200.Packer-property-STRIP\" rel=\"java.util.jar.Pack200.Packer-property-STRIP\" class=\"docClass\">STRIP</a>, and <a href=\"#!/api/java.util.jar.Pack200.Packer-property-PASS\" rel=\"java.util.jar.Pack200.Packer-property-PASS\" class=\"docClass\">PASS</a>.</p>\n\n<p><p>\nThe string <a href=\"#!/api/java.util.jar.Pack200.Packer-property-ERROR\" rel=\"java.util.jar.Pack200.Packer-property-ERROR\" class=\"docClass\">ERROR</a> means that the pack operation\nas a whole will fail, with an exception of type <code>IOException</code>.\nThe string\n<a href=\"#!/api/java.util.jar.Pack200.Packer-property-STRIP\" rel=\"java.util.jar.Pack200.Packer-property-STRIP\" class=\"docClass\">STRIP</a> means that the attribute will be dropped.\nThe string\n<a href=\"#!/api/java.util.jar.Pack200.Packer-property-PASS\" rel=\"java.util.jar.Pack200.Packer-property-PASS\" class=\"docClass\">PASS</a> means that the whole class-file will be passed through\n(as if it were a resource file) without compression, with  a suitable warning.\nThis is the default value for this property.\n<p>\nExamples:\n<pre>{@code\n    Map p = pack200.getProperties();\n    p.put(UNKNOWN_ATTRIBUTE, ERROR);\n    p.put(UNKNOWN_ATTRIBUTE, STRIP);\n    p.put(UNKNOWN_ATTRIBUTE, PASS);\n}</pre></p>\n<p>Defaults to: <code>&quot;pack.unknown.attribute&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addPropertyChangeListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-method-addPropertyChangeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-method-addPropertyChangeListener' class='name expandable'>addPropertyChangeListener</a>( <span class='pre'>listener, listener</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Registers a listener for PropertyChange events on the properties map. ...</div><div class='long'><p>Registers a listener for PropertyChange events on the properties map.\n This is typically used by applications to update a progress bar.</p>\n\n<p> <p> The default implementation of this method does nothing and has\n no side-effects.</p></p>\n\n<p> <p><b>WARNING:</b> This method is omitted from the interface\n declaration in all subset Profiles of Java SE that do not include\n the {@code java.beans} package. </p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The dependency on {@code PropertyChangeListener} creates\n             a significant impediment to future modularization of the\n             Java platform. This method will be removed in a future\n             release.\n             Applications that need to monitor progress of the packer\n             can poll the value of the <a href=\"#!/api/java.util.jar.Pack200.Packer-property-PROGRESS\" rel=\"java.util.jar.Pack200.Packer-property-PROGRESS\" class=\"docClass\">PROGRESS</a>\n             property instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {PropertyChangeListener}<div class='sub-desc'><p>An object to be invoked when a property is changed.\n@see <a href=\"#!/api/java.util.jar.Pack200.Packer-property-PROGRESS\" rel=\"java.util.jar.Pack200.Packer-property-PROGRESS\" class=\"docClass\">PROGRESS</a></p>\n</div></li><li><span class='pre'>listener</span> : Object<div class='sub-desc'><p>An object to be invoked when a property is changed.</p>\n</div></li></ul></div></div></div><div id='method-pack' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-method-pack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-method-pack' class='name expandable'>pack</a>( <span class='pre'>in, out, in, out</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Takes a JarInputStream and converts it into a Pack200 archive. ...</div><div class='long'><p>Takes a JarInputStream and converts it into a Pack200 archive.\n <p>\n Closes its input but not its output.  (Pack200 archives are appendable.)\n <p>\n The modification time and deflation hint attributes are not available,\n for the JAR manifest file and its containing directory.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>in</span> : Object {JarInputStream}<div class='sub-desc'><p>a JarInputStream</p>\n</div></li><li><span class='pre'>out</span> : Object {OutputStream}<div class='sub-desc'><p>an OutputStream</p>\n</div></li><li><span class='pre'>in</span> : Object<div class='sub-desc'><p>a JarInputStream</p>\n</div></li><li><span class='pre'>out</span> : Object<div class='sub-desc'><p>an OutputStream\n@exception IOException if an error is encountered.</p>\n</div></li></ul></div></div></div><div id='method-properties' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-method-properties' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-method-properties' class='name expandable'>properties</a>( <span class='pre'></span> ) : Object {java.util.SortedMap}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the set of this engine's properties. ...</div><div class='long'><p>Get the set of this engine's properties.\n This set is a \"live view\", so that changing its\n contents immediately affects the Packer engine, and\n changes from the engine (such as progress indications)\n are immediately visible in the map.</p>\n\n<p> <p>The property map may contain pre-defined implementation\n specific and default properties.  Users are encouraged to\n read the information and fully understand the implications,\n before modifying pre-existing properties.\n <p>\n Implementation specific properties are prefixed with a\n package name associated with the implementor, beginning\n with <tt>com.</tt> or a similar prefix.\n All property names beginning with <tt>pack.</tt> and\n <tt>unpack.</tt> are reserved for use by this API.\n <p>\n Unknown properties may be ignored or rejected with an\n unspecified error, and invalid entries may cause an\n unspecified error to be thrown.</p>\n\n<p> <p>\n The returned map implements all optional SortedMap operations</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.SortedMap}</span><div class='sub-desc'><p>A sorted association of property key strings to property\n values.</p>\n</div></li></ul></div></div></div><div id='method-removePropertyChangeListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.jar.Pack200.Packer'>java.util.jar.Pack200.Packer</span><br/><a href='source/Packer.html#java-util-jar-Pack200-Packer-method-removePropertyChangeListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.jar.Pack200.Packer-method-removePropertyChangeListener' class='name expandable'>removePropertyChangeListener</a>( <span class='pre'>listener, listener</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Remove a listener for PropertyChange events, added by\n the addPropertyChangeListener. ...</div><div class='long'><p>Remove a listener for PropertyChange events, added by\n the <a href=\"#!/api/java.util.jar.Pack200.Packer-method-addPropertyChangeListener\" rel=\"java.util.jar.Pack200.Packer-method-addPropertyChangeListener\" class=\"docClass\">addPropertyChangeListener</a>.</p>\n\n<p> <p> The default implementation of this method does nothing and has\n no side-effects.</p></p>\n\n<p> <p><b>WARNING:</b> This method is omitted from the interface\n declaration in all subset Profiles of Java SE that do not include\n the {@code java.beans} package. </p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The dependency on {@code PropertyChangeListener} creates\n             a significant impediment to future modularization of the\n             Java platform. This method will be removed in a future\n             release.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {PropertyChangeListener}<div class='sub-desc'><p>The PropertyChange listener to be removed.</p>\n</div></li><li><span class='pre'>listener</span> : Object<div class='sub-desc'><p>The PropertyChange listener to be removed.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});