Ext.data.JsonP.java_nio_channels_ServerSocketChannel({"tagname":"class","name":"java.nio.channels.ServerSocketChannel","autodetected":{},"files":[{"filename":"ServerSocketChannel.js","href":"ServerSocketChannel.html#java-nio-channels-ServerSocketChannel"}],"extends":"java.nio.channels.spi.AbstractSelectableChannel","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"accept","tagname":"method","owner":"java.nio.channels.ServerSocketChannel","id":"method-accept","meta":{}},{"name":"bind","tagname":"method","owner":"java.nio.channels.ServerSocketChannel","id":"method-bind","meta":{}},{"name":"getLocalAddress","tagname":"method","owner":"java.nio.channels.ServerSocketChannel","id":"method-getLocalAddress","meta":{}},{"name":"open","tagname":"method","owner":"java.nio.channels.ServerSocketChannel","id":"method-open","meta":{}},{"name":"setOption","tagname":"method","owner":"java.nio.channels.ServerSocketChannel","id":"method-setOption","meta":{}},{"name":"socket","tagname":"method","owner":"java.nio.channels.ServerSocketChannel","id":"method-socket","meta":{}},{"name":"validOps","tagname":"method","owner":"java.nio.channels.ServerSocketChannel","id":"method-validOps","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.channels.ServerSocketChannel","short_doc":"implements java.nio.channels.NetworkChannel\n\nA selectable channel for stream-oriented listening sockets. ...","classIcon":"icon-class","superclasses":["java.nio.channels.spi.AbstractSelectableChannel"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.nio.channels.spi.AbstractSelectableChannel<div class='subclass '><strong>java.nio.channels.ServerSocketChannel</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel' target='_blank'>ServerSocketChannel.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.nio.channels.NetworkChannel\" rel=\"java.nio.channels.NetworkChannel\" class=\"docClass\">java.nio.channels.NetworkChannel</a></p>\n\n<p>A selectable channel for stream-oriented listening sockets.</p>\n\n<p> <p> A server-socket channel is created by invoking the open\n method of this class.  It is not possible to create a channel for an arbitrary,\n pre-existing ServerSocket. A newly-created server-socket channel is\n open but not yet bound.  An attempt to invoke the accept\n method of an unbound server-socket channel will cause a <a href=\"#!/api/java.nio.channels.NotYetBoundException\" rel=\"java.nio.channels.NotYetBoundException\" class=\"docClass\">java.nio.channels.NotYetBoundException</a>\n to be thrown. A server-socket channel can be bound by invoking one of the\n bind methods defined by this class.</p>\n\n<p> <p> Socket options are configured using the setOption method. Server-socket channels support the following options:\n <blockquote>\n <table border summary=\"Socket options\">\n   <tr>\n     <th>Option Name</th>\n     <th>Description</th>\n   </tr>\n   <tr>\n     <td> SO_RCVBUF </td>\n     <td> The size of the socket receive buffer </td>\n   </tr>\n   <tr>\n     <td> SO_REUSEADDR </td>\n     <td> Re-use address </td>\n   </tr>\n </table>\n </blockquote>\n Additional (implementation specific) options may also be supported.</p>\n\n<p> <p> Server-socket channels are safe for use by multiple concurrent threads.\n </p></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-accept' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.ServerSocketChannel'>java.nio.channels.ServerSocketChannel</span><br/><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel-method-accept' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.ServerSocketChannel-method-accept' class='name expandable'>accept</a>( <span class='pre'></span> ) : Object {java.nio.channels.SocketChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Accepts a connection made to this channel's socket. ...</div><div class='long'><p>Accepts a connection made to this channel's socket.</p>\n\n<p> <p> If this channel is in non-blocking mode then this method will\n immediately return <tt>null</tt> if there are no pending connections.\n Otherwise it will block indefinitely until a new connection is available\n or an I/O error occurs.</p>\n\n<p> <p> The socket channel returned by this method, if any, will be in\n blocking mode regardless of the blocking mode of this channel.</p>\n\n<p> <p> This method performs exactly the same security checks as the accept method of the java.net.ServerSocket class.  That is, if a security manager has been\n installed then for each new connection this method verifies that the\n address and port number of the connection's remote endpoint are\n permitted by the security manager's checkAccept method.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SocketChannel}</span><div class='sub-desc'><p>The socket channel for the new connection,\n          or <tt>null</tt> if this channel is in non-blocking mode\n          and no connection is available to be accepted</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>AsynchronousCloseException\n          If another thread closes this channel\n          while the accept operation is in progress</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedByInterruptException\n          If another thread interrupts the current thread\n          while the accept operation is in progress, thereby\n          closing the channel and setting the current thread's\n          interrupt status</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NotYetBoundException\n          If this channel's socket has not yet been bound</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          If a security manager has been installed\n          and it does not permit access to the remote endpoint\n          of the new connection</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-bind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.ServerSocketChannel'>java.nio.channels.ServerSocketChannel</span><br/><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel-method-bind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.ServerSocketChannel-method-bind' class='name expandable'>bind</a>( <span class='pre'>local, backlog</span> ) : Object {java.nio.channels.ServerSocketChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Binds the channel's socket to a local address and configures the socket to\n listen for connections. ...</div><div class='long'><p>Binds the channel's socket to a local address and configures the socket to\n listen for connections.</p>\n\n<p> <p> This method is used to establish an association between the socket and\n a local address. Once an association is established then the socket remains\n bound until the channel is closed.</p>\n\n<p> <p> The {@code backlog} parameter is the maximum number of pending\n connections on the socket. Its exact semantics are implementation specific.\n In particular, an implementation may impose a maximum length or may choose\n to ignore the parameter altogther. If the {@code backlog} parameter has\n the value {@code 0}, or a negative value, then an implementation specific\n default is used.</p>\n        <p>Available since: <b>1.7</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>local</span> : Object {SocketAddress}<div class='sub-desc'><p>The address to bind the socket, or {@code null} to bind to an\n          automatically assigned socket address</p>\n</div></li><li><span class='pre'>backlog</span> : Number<div class='sub-desc'><p>The maximum number of pending connections</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.ServerSocketChannel}</span><div class='sub-desc'><p>This channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AlreadyBoundException\n          If the socket is already bound</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedAddressTypeException\n          If the type of the given address is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          If a security manager has been installed and its checkListen method denies the\n          operation</p>\n</div></li></ul></div></div></div><div id='method-getLocalAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.ServerSocketChannel'>java.nio.channels.ServerSocketChannel</span><br/><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel-method-getLocalAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.ServerSocketChannel-method-getLocalAddress' class='name expandable'>getLocalAddress</a>( <span class='pre'></span> ) : Object {java.net.SocketAddress}<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc}\n \n If there is a security manager set, its {@code checkConnect} method is\n called with the local addres...</div><div class='long'><p>{@inheritDoc}\n <p>\n If there is a security manager set, its {@code checkConnect} method is\n called with the local address and {@code -1} as its arguments to see\n if the operation is allowed. If the operation is not allowed,\n a {@code SocketAddress} representing the\n loopback address and the\n local port of the channel's socket is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.SocketAddress}</span><div class='sub-desc'><p>The {@code SocketAddress} that the socket is bound to, or the\n          {@code SocketAddress} representing the loopback address if\n          denied by the security manager, or {@code null} if the\n          channel's socket is not bound</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException     {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException                {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.ServerSocketChannel'>java.nio.channels.ServerSocketChannel</span><br/><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.ServerSocketChannel-method-open' class='name expandable'>open</a>( <span class='pre'></span> ) : Object {java.nio.channels.ServerSocketChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens a server-socket channel. ...</div><div class='long'><p>Opens a server-socket channel.</p>\n\n<p> <p> The new channel is created by invoking the openServerSocketChannel method of the system-wide default java.nio.channels.spi.SelectorProvider object.</p>\n\n<p> <p> The new channel's socket is initially unbound; it must be bound to a\n specific address via one of its socket's bind methods before\n connections can be accepted.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.ServerSocketChannel}</span><div class='sub-desc'><p>A new socket channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-setOption' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.ServerSocketChannel'>java.nio.channels.ServerSocketChannel</span><br/><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel-method-setOption' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.ServerSocketChannel-method-setOption' class='name expandable'>setOption</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>1.7</b></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException           {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException                {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException                  {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException                             {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-socket' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.ServerSocketChannel'>java.nio.channels.ServerSocketChannel</span><br/><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel-method-socket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.ServerSocketChannel-method-socket' class='name expandable'>socket</a>( <span class='pre'></span> ) : Object {java.net.ServerSocket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a server socket associated with this channel. ...</div><div class='long'><p>Retrieves a server socket associated with this channel.</p>\n\n<p> <p> The returned object will not declare any public methods that are not\n declared in the java.net.ServerSocket class.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.ServerSocket}</span><div class='sub-desc'><p>A server socket associated with this channel</p>\n</div></li></ul></div></div></div><div id='method-validOps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.ServerSocketChannel'>java.nio.channels.ServerSocketChannel</span><br/><a href='source/ServerSocketChannel.html#java-nio-channels-ServerSocketChannel-method-validOps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.ServerSocketChannel-method-validOps' class='name expandable'>validOps</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an operation set identifying this channel's supported\n operations. ...</div><div class='long'><p>Returns an operation set identifying this channel's supported\n operations.</p>\n\n<p> <p> Server-socket channels only support the accepting of new\n connections, so this method returns <a href=\"#!/api/java.nio.channels.SelectionKey-property-OP_ACCEPT\" rel=\"java.nio.channels.SelectionKey-property-OP_ACCEPT\" class=\"docClass\">java.nio.channels.SelectionKey.OP_ACCEPT</a>.\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The valid-operation set</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});