Ext.data.JsonP.java_nio_channels_Selector({"tagname":"class","name":"java.nio.channels.Selector","autodetected":{},"files":[{"filename":"Selector.js","href":"Selector.html#java-nio-channels-Selector"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"close","tagname":"method","owner":"java.nio.channels.Selector","id":"method-close","meta":{}},{"name":"isOpen","tagname":"method","owner":"java.nio.channels.Selector","id":"method-isOpen","meta":{}},{"name":"keys","tagname":"method","owner":"java.nio.channels.Selector","id":"method-keys","meta":{}},{"name":"open","tagname":"method","owner":"java.nio.channels.Selector","id":"method-open","meta":{}},{"name":"provider","tagname":"method","owner":"java.nio.channels.Selector","id":"method-provider","meta":{}},{"name":"select","tagname":"method","owner":"java.nio.channels.Selector","id":"method-select","meta":{}},{"name":"selectNow","tagname":"method","owner":"java.nio.channels.Selector","id":"method-selectNow","meta":{}},{"name":"selectedKeys","tagname":"method","owner":"java.nio.channels.Selector","id":"method-selectedKeys","meta":{}},{"name":"wakeup","tagname":"method","owner":"java.nio.channels.Selector","id":"method-wakeup","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.channels.Selector","short_doc":"implements java.io.Closeable\n\nA multiplexor of java.nio.channels.SelectableChannel objects. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.channels.Selector</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Selector.html#java-nio-channels-Selector' target='_blank'>Selector.js</a></div></pre><div class='doc-contents'><p>implements java.io.Closeable</p>\n\n<p>A multiplexor of <a href=\"#!/api/java.nio.channels.SelectableChannel\" rel=\"java.nio.channels.SelectableChannel\" class=\"docClass\">java.nio.channels.SelectableChannel</a> objects.</p>\n\n<p> <p> A selector may be created by invoking the <a href=\"#!/api/java.nio.channels.Selector-method-open\" rel=\"java.nio.channels.Selector-method-open\" class=\"docClass\">open</a> method of\n this class, which will use the system's default selector provider to\n create a new selector.  A selector may also be created by invoking the\n openSelector\n method of a custom selector provider.  A selector remains open until it is\n closed via its <a href=\"#!/api/java.nio.channels.Selector-method-close\" rel=\"java.nio.channels.Selector-method-close\" class=\"docClass\">close</a> method.</p>\n\n<p> <a name=\"ks\"></a></p>\n\n<p> <p> A selectable channel's registration with a selector is represented by a\n <a href=\"#!/api/java.nio.channels.SelectionKey\" rel=\"java.nio.channels.SelectionKey\" class=\"docClass\">java.nio.channels.SelectionKey</a> object.  A selector maintains three sets of selection\n keys:</p>\n\n<p> <ul></ul></p>\n\n<p>   <li><p> The <i>key set</i> contains the keys representing the current\n   channel registrations of this selector.  This set is returned by the\n   keys method. </p></li></p>\n\n<p>   <li><p> The <i>selected-key set</i> is the set of keys such that each\n   key's channel was detected to be ready for at least one of the operations\n   identified in the key's interest set during a prior selection operation.\n   This set is returned by the selectedKeys method.\n   The selected-key set is always a subset of the key set. </p></li></p>\n\n<p>   <li><p> The <i>cancelled-key</i> set is the set of keys that have been\n   cancelled but whose channels have not yet been deregistered.  This set is\n   not directly accessible.  The cancelled-key set is always a subset of the\n   key set. </p></li></p>\n\n<p> </p>\n\n<p> <p> All three sets are empty in a newly-created selector.</p>\n\n<p> <p> A key is added to a selector's key set as a side effect of registering a\n channel via the channel's register method.  Cancelled keys are removed from the key set during\n selection operations.  The key set itself is not directly modifiable.</p>\n\n<p> <p> A key is added to its selector's cancelled-key set when it is cancelled,\n whether by closing its channel or by invoking its <a href=\"#!/api/java.nio.channels.SelectionKey-method-cancel\" rel=\"java.nio.channels.SelectionKey-method-cancel\" class=\"docClass\">cancel</a> method.  Cancelling a key will cause its channel to be deregistered\n during the next selection operation, at which time the key will removed from\n all of the selector's key sets.</p>\n\n<p> <a name=\"sks\"></a><p> Keys are added to the selected-key set by selection\n operations.  A key may be removed directly from the selected-key set by\n invoking the set's remove\n method or by invoking the remove method\n of an iterator obtained from the\n set.  Keys are never removed from the selected-key set in any other way;\n they are not, in particular, removed as a side effect of selection\n operations.  Keys may not be added directly to the selected-key set. </p></p>\n\n<p> <a name=\"selop\"></a>\n <h2>Selection</h2></p>\n\n<p> <p> During each selection operation, keys may be added to and removed from a\n selector's selected-key set and may be removed from its key and\n cancelled-key sets.  Selection is performed by the <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>(), <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>(long), and <a href=\"#!/api/java.nio.channels.Selector-method-selectNow\" rel=\"java.nio.channels.Selector-method-selectNow\" class=\"docClass\">selectNow</a>() methods, and involves three steps:\n </p></p>\n\n<p> <ol></ol></p>\n\n<p>   <li><p> Each key in the cancelled-key set is removed from each key set of\n   which it is a member, and its channel is deregistered.  This step leaves\n   the cancelled-key set empty. </p></li></p>\n\n<p>   <li><p> The underlying operating system is queried for an update as to the\n   readiness of each remaining channel to perform any of the operations\n   identified by its key's interest set as of the moment that the selection\n   operation began.  For a channel that is ready for at least one such\n   operation, one of the following two actions is performed: </p></li></p>\n\n<p>   <ol></ol></p>\n\n<pre><code> &lt;li&gt;&lt;p&gt; If the channel's key is not already in the selected-key set then\n it is added to that set and its ready-operation set is modified to\n identify exactly those operations for which the channel is now reported\n to be ready.  Any readiness information previously recorded in the ready\n set is discarded.  &lt;/p&gt;&lt;/li&gt;\n\n &lt;li&gt;&lt;p&gt; Otherwise the channel's key is already in the selected-key set,\n so its ready-operation set is modified to identify any new operations\n for which the channel is reported to be ready.  Any readiness\n information previously recorded in the ready set is preserved; in other\n words, the ready set returned by the underlying system is\n bitwise-disjoined into the key's current ready set. &lt;/p&gt;&lt;/li&gt;\n</code></pre>\n\n<p>   </p>\n\n<p>   If all of the keys in the key set at the start of this step have empty\n   interest sets then neither the selected-key set nor any of the keys'\n   ready-operation sets will be updated.</p>\n\n<p>   <li><p> If any keys were added to the cancelled-key set while step (2) was\n   in progress then they are processed as in step (1). </p></li></p>\n\n<p> </p>\n\n<p> <p> Whether or not a selection operation blocks to wait for one or more\n channels to become ready, and if so for how long, is the only essential\n difference between the three selection methods. </p></p>\n\n<p> <h2>Concurrency</h2></p>\n\n<p> <p> Selectors are themselves safe for use by multiple concurrent threads;\n their key sets, however, are not.</p>\n\n<p> <p> The selection operations synchronize on the selector itself, on the key\n set, and on the selected-key set, in that order.  They also synchronize on\n the cancelled-key set during steps (1) and (3) above.</p>\n\n<p> <p> Changes made to the interest sets of a selector's keys while a\n selection operation is in progress have no effect upon that operation; they\n will be seen by the next selection operation.</p>\n\n<p> <p> Keys may be cancelled and channels may be closed at any time.  Hence the\n presence of a key in one or more of a selector's key sets does not imply\n that the key is valid or that its channel is open.  Application code should\n be careful to synchronize and check these conditions as necessary if there\n is any possibility that another thread will cancel a key or close a channel.</p>\n\n<p> <p> A thread blocked in one of the <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>() or <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>(long) methods may be interrupted by some other thread in one of\n three ways:</p>\n\n<p> <ul></ul></p>\n\n<p>   <li><p> By invoking the selector's <a href=\"#!/api/java.nio.channels.Selector-method-wakeup\" rel=\"java.nio.channels.Selector-method-wakeup\" class=\"docClass\">wakeup</a> method,\n   </p></li></p>\n\n<p>   <li><p> By invoking the selector's <a href=\"#!/api/java.nio.channels.Selector-method-close\" rel=\"java.nio.channels.Selector-method-close\" class=\"docClass\">close</a> method, or\n   </p></li></p>\n\n<p>   <li><p> By invoking the blocked thread's interrupt method, in which case its\n   interrupt status will be set and the selector's <a href=\"#!/api/java.nio.channels.Selector-method-wakeup\" rel=\"java.nio.channels.Selector-method-wakeup\" class=\"docClass\">wakeup</a>\n   method will be invoked. </p></li></p>\n\n<p> </p>\n\n<p> <p> The <a href=\"#!/api/java.nio.channels.Selector-method-close\" rel=\"java.nio.channels.Selector-method-close\" class=\"docClass\">close</a> method synchronizes on the selector and all\n three key sets in the same order as in a selection operation.</p>\n\n<p> <a name=\"ksc\"></a></p>\n\n<p> <p> A selector's key and selected-key sets are not, in general, safe for use\n by multiple concurrent threads.  If such a thread might modify one of these\n sets directly then access should be controlled by synchronizing on the set\n itself.  The iterators returned by these sets' iterator methods are <i>fail-fast:</i> If the set\n is modified after the iterator is created, in any way except by invoking the\n iterator's own remove method, then a\n java.util.ConcurrentModificationException will be thrown. </p></p>\n\n<p> @see SelectableChannel\n @see SelectionKey</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes this selector. ...</div><div class='long'><p>Closes this selector.</p>\n\n<p> <p> If a thread is currently blocked in one of this selector's selection\n methods then it is interrupted as if by invoking the selector's <a href=\"#!/api/java.nio.channels.Selector-method-wakeup\" rel=\"java.nio.channels.Selector-method-wakeup\" class=\"docClass\">wakeup</a> method.</p>\n\n<p> <p> Any uncancelled keys still associated with this selector are\n invalidated, their channels are deregistered, and any other resources\n associated with this selector are released.</p>\n\n<p> <p> If this selector is already closed then invoking this method has no\n effect.</p>\n\n<p> <p> After a selector is closed, any further attempt to use it, except by\n invoking this method or the <a href=\"#!/api/java.nio.channels.Selector-method-wakeup\" rel=\"java.nio.channels.Selector-method-wakeup\" class=\"docClass\">wakeup</a> method, will cause a\n <a href=\"#!/api/java.nio.channels.ClosedSelectorException\" rel=\"java.nio.channels.ClosedSelectorException\" class=\"docClass\">java.nio.channels.ClosedSelectorException</a> to be thrown. </p></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-isOpen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-isOpen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-isOpen' class='name expandable'>isOpen</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this selector is open. ...</div><div class='long'><p>Tells whether or not this selector is open.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this selector is open</p>\n</div></li></ul></div></div></div><div id='method-keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-keys' class='name expandable'>keys</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this selector's key set. ...</div><div class='long'><p>Returns this selector's key set.</p>\n\n<p> <p> The key set is not directly modifiable.  A key is removed only after\n it has been cancelled and its channel has been deregistered.  Any\n attempt to modify the key set will cause an UnsupportedOperationException to be thrown.</p>\n\n<p> <p> The key set is <a href=\"#ksc\">not thread-safe</a>. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>This selector's key set</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedSelectorException\n          If this selector is closed</p>\n</div></li></ul></div></div></div><div id='method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-open' class='name expandable'>open</a>( <span class='pre'></span> ) : Object {java.nio.channels.Selector}<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens a selector. ...</div><div class='long'><p>Opens a selector.</p>\n\n<p> <p> The new selector is created by invoking the openSelector method\n of the system-wide default java.nio.channels.spi.SelectorProvider object.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.Selector}</span><div class='sub-desc'><p>A new selector</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-provider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-provider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-provider' class='name expandable'>provider</a>( <span class='pre'></span> ) : Object {java.nio.channels.spi.SelectorProvider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the provider that created this channel. ...</div><div class='long'><p>Returns the provider that created this channel.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.spi.SelectorProvider}</span><div class='sub-desc'><p>The provider that created this channel</p>\n</div></li></ul></div></div></div><div id='method-select' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-select' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-select' class='name expandable'>select</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Selects a set of keys whose corresponding channels are ready for I/O\n operations. ...</div><div class='long'><p>Selects a set of keys whose corresponding channels are ready for I/O\n operations.</p>\n\n<p> <p> This method performs a blocking <a href=\"#selop\">selection\n operation</a>.  It returns only after at least one channel is selected,\n this selector's <a href=\"#!/api/java.nio.channels.Selector-method-wakeup\" rel=\"java.nio.channels.Selector-method-wakeup\" class=\"docClass\">wakeup</a> method is invoked, or the current\n thread is interrupted, whichever comes first.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of keys, possibly zero,\n          whose ready-operation sets were updated</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedSelectorException\n          If this selector is closed</p>\n</div></li></ul></div></div></div><div id='method-selectNow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-selectNow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-selectNow' class='name expandable'>selectNow</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Selects a set of keys whose corresponding channels are ready for I/O\n operations. ...</div><div class='long'><p>Selects a set of keys whose corresponding channels are ready for I/O\n operations.</p>\n\n<p> <p> This method performs a non-blocking <a href=\"#selop\">selection\n operation</a>.  If no channels have become selectable since the previous\n selection operation then this method immediately returns zero.</p>\n\n<p> <p> Invoking this method clears the effect of any previous invocations\n of the <a href=\"#!/api/java.nio.channels.Selector-method-wakeup\" rel=\"java.nio.channels.Selector-method-wakeup\" class=\"docClass\">wakeup</a> method.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of keys, possibly zero, whose ready-operation sets\n          were updated by the selection operation</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedSelectorException\n          If this selector is closed</p>\n</div></li></ul></div></div></div><div id='method-selectedKeys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-selectedKeys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-selectedKeys' class='name expandable'>selectedKeys</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns this selector's selected-key set. ...</div><div class='long'><p>Returns this selector's selected-key set.</p>\n\n<p> <p> Keys may be removed from, but not directly added to, the\n selected-key set.  Any attempt to add an object to the key set will\n cause an UnsupportedOperationException to be thrown.</p>\n\n<p> <p> The selected-key set is <a href=\"#ksc\">not thread-safe</a>. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>This selector's selected-key set</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedSelectorException\n          If this selector is closed</p>\n</div></li></ul></div></div></div><div id='method-wakeup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.Selector'>java.nio.channels.Selector</span><br/><a href='source/Selector.html#java-nio-channels-Selector-method-wakeup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.Selector-method-wakeup' class='name expandable'>wakeup</a>( <span class='pre'></span> ) : Object {java.nio.channels.Selector}<span class=\"signature\"></span></div><div class='description'><div class='short'>Causes the first selection operation that has not yet returned to return\n immediately. ...</div><div class='long'><p>Causes the first selection operation that has not yet returned to return\n immediately.</p>\n\n<p> <p> If another thread is currently blocked in an invocation of the\n <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>() or <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>(long) methods then that invocation\n will return immediately.  If no selection operation is currently in\n progress then the next invocation of one of these methods will return\n immediately unless the <a href=\"#!/api/java.nio.channels.Selector-method-selectNow\" rel=\"java.nio.channels.Selector-method-selectNow\" class=\"docClass\">selectNow</a>() method is invoked in the\n meantime.  In any case the value returned by that invocation may be\n non-zero.  Subsequent invocations of the <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>() or <a href=\"#!/api/java.nio.channels.Selector-method-select\" rel=\"java.nio.channels.Selector-method-select\" class=\"docClass\">select</a>(long) methods will block as usual unless this method is invoked\n again in the meantime.</p>\n\n<p> <p> Invoking this method more than once between two successive selection\n operations has the same effect as invoking it just once.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.Selector}</span><div class='sub-desc'><p>This selector</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});