Ext.data.JsonP.java_nio_channels_MembershipKey({"tagname":"class","name":"java.nio.channels.MembershipKey","autodetected":{},"files":[{"filename":"MembershipKey.js","href":"MembershipKey.html#java-nio-channels-MembershipKey"}],"extends":"java.lang.Object","since":"1.7","members":[{"name":"block","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-block","meta":{}},{"name":"channel","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-channel","meta":{}},{"name":"drop","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-drop","meta":{}},{"name":"group","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-group","meta":{}},{"name":"isValid","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-isValid","meta":{}},{"name":"networkInterface","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-networkInterface","meta":{}},{"name":"sourceAddress","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-sourceAddress","meta":{}},{"name":"unblock","tagname":"method","owner":"java.nio.channels.MembershipKey","id":"method-unblock","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.channels.MembershipKey","short_doc":"A token representing the membership of an Internet Protocol (IP) multicast\n group. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.channels.MembershipKey</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MembershipKey.html#java-nio-channels-MembershipKey' target='_blank'>MembershipKey.js</a></div></pre><div class='doc-contents'><p>A token representing the membership of an Internet Protocol (IP) multicast\n group.</p>\n\n<p> <p> A membership key may represent a membership to receive all datagrams sent\n to the group, or it may be <em>source-specific</em>, meaning that it\n represents a membership that receives only datagrams from a specific source\n address. Whether or not a membership key is source-specific may be determined\n by invoking its sourceAddress method.</p>\n\n<p> <p> A membership key is valid upon creation and remains valid until the\n membership is dropped by invoking the drop method, or\n the channel is closed. The validity of the membership key may be tested\n by invoking its isValid method.</p>\n\n<p> <p> Where a membership key is not source-specific and the underlying operation\n system supports source filtering, then the <a href=\"#!/api/java.nio.channels.MembershipKey-method-block\" rel=\"java.nio.channels.MembershipKey-method-block\" class=\"docClass\">block</a> and <a href=\"#!/api/java.nio.channels.MembershipKey-method-unblock\" rel=\"java.nio.channels.MembershipKey-method-unblock\" class=\"docClass\">unblock</a> methods can be used to block or unblock multicast datagrams\n from particular source addresses.</p>\n\n<p> @see MulticastChannel</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-block' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-block' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-block' class='name expandable'>block</a>( <span class='pre'>source</span> ) : Object {java.nio.channels.MembershipKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Block multicast datagrams from the given source address. ...</div><div class='long'><p>Block multicast datagrams from the given source address.</p>\n\n<p> <p> If this membership key is not source-specific, and the underlying\n operating system supports source filtering, then this method blocks\n multicast datagrams from the given source address. If the given source\n address is already blocked then this method has no effect.\n After a source address is blocked it may still be possible to receive\n datagrams from that source. This can arise when datagrams are waiting to\n be received in the socket's receive buffer.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {InetAddress}<div class='sub-desc'><p>The source address to block</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.MembershipKey}</span><div class='sub-desc'><p>This membership key</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the {@code source} parameter is not a unicast address or\n          is not the same address type as the multicast group</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If this membership key is source-specific or is no longer valid</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          If the underlying operating system does not support source\n          filtering</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-channel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-channel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-channel' class='name expandable'>channel</a>( <span class='pre'></span> ) : Object {java.nio.channels.MulticastChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the channel for which this membership key was created. ...</div><div class='long'><p>Returns the channel for which this membership key was created. This\n method will continue to return the channel even after the membership\n becomes <a href=\"#!/api/java.nio.channels.MembershipKey-method-isValid\" rel=\"java.nio.channels.MembershipKey-method-isValid\" class=\"docClass\">invalid</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.MulticastChannel}</span><div class='sub-desc'><p>the channel</p>\n</div></li></ul></div></div></div><div id='method-drop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-drop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-drop' class='name expandable'>drop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Drop membership. ...</div><div class='long'><p>Drop membership.</p>\n\n<p> <p> If the membership key represents a membership to receive all datagrams\n then the membership is dropped and the channel will no longer receive any\n datagrams sent to the group. If the membership key is source-specific\n then the channel will no longer receive datagrams sent to the group from\n that source address.</p>\n\n<p> <p> After membership is dropped it may still be possible to receive\n datagrams sent to the group. This can arise when datagrams are waiting to\n be received in the socket's receive buffer. After membership is dropped\n then the channel may <a href=\"#!/api/java.nio.channels.MulticastChannel-method-join\" rel=\"java.nio.channels.MulticastChannel-method-join\" class=\"docClass\">join</a> the group again\n in which case a new membership key is returned.</p>\n\n<p> <p> Upon return, this membership object will be invalid.\n If the multicast group membership is already invalid then invoking this\n method has no effect. Once a multicast group membership is invalid,\n it remains invalid forever.</p>\n</div></div></div><div id='method-group' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-group' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-group' class='name expandable'>group</a>( <span class='pre'></span> ) : Object {java.net.InetAddress}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the multicast group for which this membership key was created. ...</div><div class='long'><p>Returns the multicast group for which this membership key was created.\n This method will continue to return the group even after the membership\n becomes <a href=\"#!/api/java.nio.channels.MembershipKey-method-isValid\" rel=\"java.nio.channels.MembershipKey-method-isValid\" class=\"docClass\">invalid</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.InetAddress}</span><div class='sub-desc'><p>the multicast group</p>\n</div></li></ul></div></div></div><div id='method-isValid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-isValid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-isValid' class='name expandable'>isValid</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this membership is valid. ...</div><div class='long'><p>Tells whether or not this membership is valid.</p>\n\n<p> <p> A multicast group membership is valid upon creation and remains\n valid until the membership is dropped by invoking the drop\n method, or the channel is closed.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if this membership key is valid, {@code false}\n          otherwise</p>\n</div></li></ul></div></div></div><div id='method-networkInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-networkInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-networkInterface' class='name expandable'>networkInterface</a>( <span class='pre'></span> ) : Object {java.net.NetworkInterface}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the network interface for which this membership key was created. ...</div><div class='long'><p>Returns the network interface for which this membership key was created.\n This method will continue to return the network interface even after the\n membership becomes <a href=\"#!/api/java.nio.channels.MembershipKey-method-isValid\" rel=\"java.nio.channels.MembershipKey-method-isValid\" class=\"docClass\">invalid</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.NetworkInterface}</span><div class='sub-desc'><p>the network interface</p>\n</div></li></ul></div></div></div><div id='method-sourceAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-sourceAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-sourceAddress' class='name expandable'>sourceAddress</a>( <span class='pre'></span> ) : Object {java.net.InetAddress}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the source address if this membership key is source-specific,\n or {@code null} if this membership is not sour...</div><div class='long'><p>Returns the source address if this membership key is source-specific,\n or {@code null} if this membership is not source-specific.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.InetAddress}</span><div class='sub-desc'><p>The source address if this membership key is source-specific,\n          otherwise {@code null}</p>\n</div></li></ul></div></div></div><div id='method-unblock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.MembershipKey'>java.nio.channels.MembershipKey</span><br/><a href='source/MembershipKey.html#java-nio-channels-MembershipKey-method-unblock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.MembershipKey-method-unblock' class='name expandable'>unblock</a>( <span class='pre'>source</span> ) : Object {java.nio.channels.MembershipKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Unblock multicast datagrams from the given source address that was\n previously blocked using the block method. ...</div><div class='long'><p>Unblock multicast datagrams from the given source address that was\n previously blocked using the block method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {InetAddress}<div class='sub-desc'><p>The source address to unblock</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.MembershipKey}</span><div class='sub-desc'><p>This membership key</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException\n          If the given source address is not currently blocked or the\n          membership key is no longer valid</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});