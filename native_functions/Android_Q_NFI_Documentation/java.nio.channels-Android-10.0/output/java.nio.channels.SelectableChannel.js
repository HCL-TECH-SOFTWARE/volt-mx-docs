Ext.data.JsonP.java_nio_channels_SelectableChannel({"tagname":"class","name":"java.nio.channels.SelectableChannel","autodetected":{},"files":[{"filename":"SelectableChannel.js","href":"SelectableChannel.html#java-nio-channels-SelectableChannel"}],"extends":"java.nio.channels.spi.AbstractInterruptibleChannel","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"blockingLock","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-blockingLock","meta":{}},{"name":"configureBlocking","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-configureBlocking","meta":{}},{"name":"isBlocking","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-isBlocking","meta":{}},{"name":"isRegistered","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-isRegistered","meta":{}},{"name":"keyFor","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-keyFor","meta":{}},{"name":"provider","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-provider","meta":{}},{"name":"register","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-register","meta":{}},{"name":"validOps","tagname":"method","owner":"java.nio.channels.SelectableChannel","id":"method-validOps","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.channels.SelectableChannel","short_doc":"implements java.nio.channels.Channel\n\nA channel that can be multiplexed via a java.nio.channels.Selector. ...","classIcon":"icon-class","superclasses":["java.nio.channels.spi.AbstractInterruptibleChannel"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.nio.channels.spi.AbstractInterruptibleChannel<div class='subclass '><strong>java.nio.channels.SelectableChannel</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel' target='_blank'>SelectableChannel.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.nio.channels.Channel\" rel=\"java.nio.channels.Channel\" class=\"docClass\">java.nio.channels.Channel</a></p>\n\n<p>A channel that can be multiplexed via a <a href=\"#!/api/java.nio.channels.Selector\" rel=\"java.nio.channels.Selector\" class=\"docClass\">java.nio.channels.Selector</a>.</p>\n\n<p> <p> In order to be used with a selector, an instance of this class must\n first be <i>registered</i> via the register method.  This method returns a new <a href=\"#!/api/java.nio.channels.SelectionKey\" rel=\"java.nio.channels.SelectionKey\" class=\"docClass\">java.nio.channels.SelectionKey</a> object\n that represents the channel's registration with the selector.</p>\n\n<p> <p> Once registered with a selector, a channel remains registered until it\n is <i>deregistered</i>.  This involves deallocating whatever resources were\n allocated to the channel by the selector.</p>\n\n<p> <p> A channel cannot be deregistered directly; instead, the key representing\n its registration must be <i>cancelled</i>.  Cancelling a key requests that\n the channel be deregistered during the selector's next selection operation.\n A key may be cancelled explicitly by invoking its cancel method.  All of a channel's keys are cancelled\n implicitly when the channel is closed, whether by invoking its <a href=\"#!/api/java.nio.channels.Channel-method-close\" rel=\"java.nio.channels.Channel-method-close\" class=\"docClass\">close</a> method or by interrupting a thread blocked in an I/O\n operation upon the channel.</p>\n\n<p> <p> If the selector itself is closed then the channel will be deregistered,\n and the key representing its registration will be invalidated, without\n further delay.</p>\n\n<p> <p> A channel may be registered at most once with any particular selector.</p>\n\n<p> <p> Whether or not a channel is registered with one or more selectors may be\n determined by invoking the <a href=\"#!/api/java.nio.channels.SelectableChannel-method-isRegistered\" rel=\"java.nio.channels.SelectableChannel-method-isRegistered\" class=\"docClass\">isRegistered</a> method.</p>\n\n<p> <p> Selectable channels are safe for use by multiple concurrent\n threads. </p></p>\n\n<p> <a name=\"bm\"></a>\n <h2>Blocking mode</h2></p>\n\n<p> A selectable channel is either in <i>blocking</i> mode or in\n <i>non-blocking</i> mode.  In blocking mode, every I/O operation invoked\n upon the channel will block until it completes.  In non-blocking mode an I/O\n operation will never block and may transfer fewer bytes than were requested\n or possibly no bytes at all.  The blocking mode of a selectable channel may\n be determined by invoking its <a href=\"#!/api/java.nio.channels.SelectableChannel-method-isBlocking\" rel=\"java.nio.channels.SelectableChannel-method-isBlocking\" class=\"docClass\">isBlocking</a> method.</p>\n\n<p> <p> Newly-created selectable channels are always in blocking mode.\n Non-blocking mode is most useful in conjunction with selector-based\n multiplexing.  A channel must be placed into non-blocking mode before being\n registered with a selector, and may not be returned to blocking mode until\n it has been deregistered.</p>\n\n<p> @see SelectionKey\n @see Selector</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-blockingLock' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-blockingLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-blockingLock' class='name expandable'>blockingLock</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the object upon which the configureBlocking and register methods synchronize. ...</div><div class='long'><p>Retrieves the object upon which the <a href=\"#!/api/java.nio.channels.SelectableChannel-method-configureBlocking\" rel=\"java.nio.channels.SelectableChannel-method-configureBlocking\" class=\"docClass\">configureBlocking</a> and <a href=\"#!/api/java.nio.channels.SelectableChannel-method-register\" rel=\"java.nio.channels.SelectableChannel-method-register\" class=\"docClass\">register</a> methods synchronize.\n This is often useful in the implementation of adaptors that require a\n specific blocking mode to be maintained for a short period of time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>The blocking-mode lock object</p>\n</div></li></ul></div></div></div><div id='method-configureBlocking' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-configureBlocking' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-configureBlocking' class='name expandable'>configureBlocking</a>( <span class='pre'>block</span> ) : Object {java.nio.channels.SelectableChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts this channel's blocking mode. ...</div><div class='long'><p>Adjusts this channel's blocking mode.</p>\n\n<p> <p> If this channel is registered with one or more selectors then an\n attempt to place it into blocking mode will cause an <a href=\"#!/api/java.nio.channels.IllegalBlockingModeException\" rel=\"java.nio.channels.IllegalBlockingModeException\" class=\"docClass\">java.nio.channels.IllegalBlockingModeException</a> to be thrown.</p>\n\n<p> <p> This method may be invoked at any time.  The new blocking mode will\n only affect I/O operations that are initiated after this method returns.\n For some implementations this may require blocking until all pending I/O\n operations are complete.</p>\n\n<p> <p> If this method is invoked while another invocation of this method or\n of the int) register method is in progress\n then it will first block until the other operation is complete. </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>block</span> : Boolean<div class='sub-desc'><p>If <tt>true</tt> then this channel will be placed in\n                blocking mode; if <tt>false</tt> then it will be placed\n                non-blocking mode</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SelectableChannel}</span><div class='sub-desc'><p>This selectable channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalBlockingModeException\n          If <tt>block</tt> is <tt>true</tt> and this channel is\n          registered with one or more selectors</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n         If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-isBlocking' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-isBlocking' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-isBlocking' class='name expandable'>isBlocking</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not every I/O operation on this channel will block\n until it completes. ...</div><div class='long'><p>Tells whether or not every I/O operation on this channel will block\n until it completes.  A newly-created channel is always in blocking mode.</p>\n\n<p> <p> If this channel is closed then the value returned by this method is\n not specified. </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this channel is in blocking mode</p>\n</div></li></ul></div></div></div><div id='method-isRegistered' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-isRegistered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-isRegistered' class='name expandable'>isRegistered</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this channel is currently registered with any\n selectors. ...</div><div class='long'><p>Tells whether or not this channel is currently registered with any\n selectors.  A newly-created channel is not registered.</p>\n\n<p> <p> Due to the inherent delay between key cancellation and channel\n deregistration, a channel may remain registered for some time after all\n of its keys have been cancelled.  A channel may also remain registered\n for some time after it is closed.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this channel is registered</p>\n</div></li></ul></div></div></div><div id='method-keyFor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-keyFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-keyFor' class='name expandable'>keyFor</a>( <span class='pre'>sel</span> ) : Object {java.nio.channels.SelectionKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the key representing the channel's registration with the given\n selector. ...</div><div class='long'><p>Retrieves the key representing the channel's registration with the given\n selector.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sel</span> : Object {Selector}<div class='sub-desc'><p>The selector</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SelectionKey}</span><div class='sub-desc'><p>The key returned when this channel was last registered with the\n          given selector, or <tt>null</tt> if this channel is not\n          currently registered with that selector</p>\n</div></li></ul></div></div></div><div id='method-provider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-provider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-provider' class='name expandable'>provider</a>( <span class='pre'></span> ) : Object {java.nio.channels.spi.SelectorProvider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the provider that created this channel. ...</div><div class='long'><p>Returns the provider that created this channel.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.spi.SelectorProvider}</span><div class='sub-desc'><p>The provider that created this channel</p>\n</div></li></ul></div></div></div><div id='method-register' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-register' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-register' class='name expandable'>register</a>( <span class='pre'>sel, ops</span> ) : Object {java.nio.channels.SelectionKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers this channel with the given selector, returning a selection\n key. ...</div><div class='long'><p>Registers this channel with the given selector, returning a selection\n key.</p>\n\n<p> <p> An invocation of this convenience method of the form</p>\n\n<p> <blockquote><tt>sc.register(sel, ops)</tt></blockquote></p>\n\n<p> behaves in exactly the same way as the invocation</p>\n\n<p> <blockquote><tt>sc.register(sel, ops, null)</tt></blockquote></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sel</span> : Object {Selector}<div class='sub-desc'><p>The selector with which this channel is to be registered</p>\n</div></li><li><span class='pre'>ops</span> : Number<div class='sub-desc'><p>The interest set for the resulting key</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SelectionKey}</span><div class='sub-desc'><p>A key representing the registration of this channel with\n          the given selector</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedSelectorException\n          If the selector is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalBlockingModeException\n          If this channel is in blocking mode</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalSelectorException\n          If this channel was not created by the same provider\n          as the given selector</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CancelledKeyException\n          If this channel is currently registered with the given selector\n          but the corresponding key has already been cancelled</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If a bit in <tt>ops</tt> does not correspond to an operation\n          that is supported by this channel, that is, if {@code set &amp;\n          ~validOps() != 0}</p>\n</div></li></ul></div></div></div><div id='method-validOps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SelectableChannel'>java.nio.channels.SelectableChannel</span><br/><a href='source/SelectableChannel.html#java-nio-channels-SelectableChannel-method-validOps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SelectableChannel-method-validOps' class='name expandable'>validOps</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an operation set\n identifying this channel's supported operations. ...</div><div class='long'><p>Returns an <a href=\"SelectionKey.html#opsets\">operation set</a>\n identifying this channel's supported operations.  The bits that are set\n in this integer value denote exactly the operations that are valid for\n this channel.  This method always returns the same value for a given\n concrete channel class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The valid-operation set</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});