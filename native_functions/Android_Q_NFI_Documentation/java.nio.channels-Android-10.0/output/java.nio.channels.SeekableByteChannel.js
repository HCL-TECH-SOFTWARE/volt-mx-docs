Ext.data.JsonP.java_nio_channels_SeekableByteChannel({"tagname":"class","name":"java.nio.channels.SeekableByteChannel","autodetected":{},"files":[{"filename":"SeekableByteChannel.js","href":"SeekableByteChannel.html#java-nio-channels-SeekableByteChannel"}],"since":"1.7","members":[{"name":"position","tagname":"method","owner":"java.nio.channels.SeekableByteChannel","id":"method-position","meta":{}},{"name":"read","tagname":"method","owner":"java.nio.channels.SeekableByteChannel","id":"method-read","meta":{}},{"name":"size","tagname":"method","owner":"java.nio.channels.SeekableByteChannel","id":"method-size","meta":{}},{"name":"truncate","tagname":"method","owner":"java.nio.channels.SeekableByteChannel","id":"method-truncate","meta":{}},{"name":"write","tagname":"method","owner":"java.nio.channels.SeekableByteChannel","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.channels.SeekableByteChannel","short_doc":"implements java.nio.channels.ByteChannel\n\n A byte channel that maintains a current position and allows the\n position ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/SeekableByteChannel.html#java-nio-channels-SeekableByteChannel' target='_blank'>SeekableByteChannel.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.nio.channels.ByteChannel\" rel=\"java.nio.channels.ByteChannel\" class=\"docClass\">java.nio.channels.ByteChannel</a></p>\n\n<p> A byte channel that maintains a current <i>position</i> and allows the\n position to be changed.</p>\n\n<p> <p> A seekable byte channel is connected to an entity, typically a file,\n that contains a variable-length sequence of bytes that can be read and\n written. The current position can be <i>queried</i> and\n <i>modified</i>. The channel also provides access to\n the current <i>size</i> of the entity to which the channel is connected. The\n size increases when bytes are written beyond its current size; the size\n decreases when it is <a href=\"#!/api/java.nio.channels.SeekableByteChannel-method-truncate\" rel=\"java.nio.channels.SeekableByteChannel-method-truncate\" class=\"docClass\">&lt;i&gt;truncated&lt;/i&gt;</a>.</p>\n\n<p> <p> The position and <a href=\"#!/api/java.nio.channels.SeekableByteChannel-method-truncate\" rel=\"java.nio.channels.SeekableByteChannel-method-truncate\" class=\"docClass\">truncate</a> methods\n which do not otherwise have a value to return are specified to return the\n channel upon which they are invoked. This allows method invocations to be\n chained. Implementations of this interface should specialize the return type\n so that method invocations on the implementation class can be chained.</p>\n\n<p> @see java.nio.file.Files#newByteChannel</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-position' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SeekableByteChannel'>java.nio.channels.SeekableByteChannel</span><br/><a href='source/SeekableByteChannel.html#java-nio-channels-SeekableByteChannel-method-position' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SeekableByteChannel-method-position' class='name expandable'>position</a>( <span class='pre'>newPosition</span> ) : Object {java.nio.channels.SeekableByteChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets this channel's position. ...</div><div class='long'><p>Sets this channel's position.</p>\n\n<p> <p> Setting the position to a value that is greater than the current size\n is legal but does not change the size of the entity.  A later attempt to\n read bytes at such a position will immediately return an end-of-file\n indication.  A later attempt to write bytes at such a position will cause\n the entity to grow to accommodate the new bytes; the values of any bytes\n between the previous end-of-file and the newly-written bytes are\n unspecified.</p>\n\n<p> <p> Setting the channel's position is not recommended when connected to\n an entity, typically a file, that is opened with the APPEND option. When opened for\n append, the position is first advanced to the end before writing.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newPosition</span> : Number<div class='sub-desc'><p>The new position, a non-negative integer counting\n         the number of bytes from the beginning of the entity</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SeekableByteChannel}</span><div class='sub-desc'><p>This channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the new position is negative</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SeekableByteChannel'>java.nio.channels.SeekableByteChannel</span><br/><a href='source/SeekableByteChannel.html#java-nio-channels-SeekableByteChannel-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SeekableByteChannel-method-read' class='name expandable'>read</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads a sequence of bytes from this channel into the given buffer. ...</div><div class='long'><p>Reads a sequence of bytes from this channel into the given buffer.</p>\n\n<p> <p> Bytes are read starting at this channel's current position, and\n then the position is updated with the number of bytes actually read.\n Otherwise this method behaves exactly as specified in the <a href=\"#!/api/java.nio.channels.ReadableByteChannel\" rel=\"java.nio.channels.ReadableByteChannel\" class=\"docClass\">java.nio.channels.ReadableByteChannel</a> interface.</p>\n</div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SeekableByteChannel'>java.nio.channels.SeekableByteChannel</span><br/><a href='source/SeekableByteChannel.html#java-nio-channels-SeekableByteChannel-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SeekableByteChannel-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current size of entity to which this channel is connected. ...</div><div class='long'><p>Returns the current size of entity to which this channel is connected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The current size, measured in bytes</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-truncate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SeekableByteChannel'>java.nio.channels.SeekableByteChannel</span><br/><a href='source/SeekableByteChannel.html#java-nio-channels-SeekableByteChannel-method-truncate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SeekableByteChannel-method-truncate' class='name expandable'>truncate</a>( <span class='pre'>size</span> ) : Object {java.nio.channels.SeekableByteChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Truncates the entity, to which this channel is connected, to the given\n size. ...</div><div class='long'><p>Truncates the entity, to which this channel is connected, to the given\n size.</p>\n\n<p> <p> If the given size is less than the current size then the entity is\n truncated, discarding any bytes beyond the new end. If the given size is\n greater than or equal to the current size then the entity is not modified.\n In either case, if the current position is greater than the given size\n then it is set to that size.</p>\n\n<p> <p> An implementation of this interface may prohibit truncation when\n connected to an entity, typically a file, opened with the APPEND option.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>size</span> : Number<div class='sub-desc'><p>The new size, a non-negative byte count</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SeekableByteChannel}</span><div class='sub-desc'><p>This channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NonWritableChannelException\n          If this channel was not opened for writing</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException\n          If the new size is negative</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SeekableByteChannel'>java.nio.channels.SeekableByteChannel</span><br/><a href='source/SeekableByteChannel.html#java-nio-channels-SeekableByteChannel-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SeekableByteChannel-method-write' class='name expandable'>write</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a sequence of bytes to this channel from the given buffer. ...</div><div class='long'><p>Writes a sequence of bytes to this channel from the given buffer.</p>\n\n<p> <p> Bytes are written starting at this channel's current position, unless\n the channel is connected to an entity such as a file that is opened with\n the APPEND option, in\n which case the position is first advanced to the end. The entity to which\n the channel is connected is grown, if necessary, to accommodate the\n written bytes, and then the position is updated with the number of bytes\n actually written. Otherwise this method behaves exactly as specified by\n the <a href=\"#!/api/java.nio.channels.WritableByteChannel\" rel=\"java.nio.channels.WritableByteChannel\" class=\"docClass\">java.nio.channels.WritableByteChannel</a> interface.</p>\n</div></div></div></div></div></div></div>","meta":{}});