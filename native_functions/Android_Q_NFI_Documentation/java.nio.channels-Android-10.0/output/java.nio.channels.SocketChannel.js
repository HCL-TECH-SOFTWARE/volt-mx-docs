Ext.data.JsonP.java_nio_channels_SocketChannel({"tagname":"class","name":"java.nio.channels.SocketChannel","autodetected":{},"files":[{"filename":"SocketChannel.js","href":"SocketChannel.html#java-nio-channels-SocketChannel"}],"extends":"java.nio.channels.spi.AbstractSelectableChannel","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"bind","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-bind","meta":{}},{"name":"connect","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-connect","meta":{}},{"name":"finishConnect","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-finishConnect","meta":{}},{"name":"getLocalAddress","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-getLocalAddress","meta":{}},{"name":"getRemoteAddress","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-getRemoteAddress","meta":{}},{"name":"isConnected","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-isConnected","meta":{}},{"name":"isConnectionPending","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-isConnectionPending","meta":{}},{"name":"open","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-open","meta":{}},{"name":"read","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-read","meta":{}},{"name":"setOption","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-setOption","meta":{}},{"name":"shutdownInput","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-shutdownInput","meta":{}},{"name":"shutdownOutput","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-shutdownOutput","meta":{}},{"name":"socket","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-socket","meta":{}},{"name":"validOps","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-validOps","meta":{}},{"name":"write","tagname":"method","owner":"java.nio.channels.SocketChannel","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.channels.SocketChannel","short_doc":"implements java.nio.channels.ByteChannel\n\n implements java.nio.channels.ScatteringByteChannel\n\n implements java.nio.c...","classIcon":"icon-class","superclasses":["java.nio.channels.spi.AbstractSelectableChannel"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.nio.channels.spi.AbstractSelectableChannel<div class='subclass '><strong>java.nio.channels.SocketChannel</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SocketChannel.html#java-nio-channels-SocketChannel' target='_blank'>SocketChannel.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.nio.channels.ByteChannel\" rel=\"java.nio.channels.ByteChannel\" class=\"docClass\">java.nio.channels.ByteChannel</a></p>\n\n<p> implements <a href=\"#!/api/java.nio.channels.ScatteringByteChannel\" rel=\"java.nio.channels.ScatteringByteChannel\" class=\"docClass\">java.nio.channels.ScatteringByteChannel</a></p>\n\n<p> implements <a href=\"#!/api/java.nio.channels.GatheringByteChannel\" rel=\"java.nio.channels.GatheringByteChannel\" class=\"docClass\">java.nio.channels.GatheringByteChannel</a></p>\n\n<p> implements <a href=\"#!/api/java.nio.channels.NetworkChannel\" rel=\"java.nio.channels.NetworkChannel\" class=\"docClass\">java.nio.channels.NetworkChannel</a></p>\n\n<p>A selectable channel for stream-oriented connecting sockets.</p>\n\n<p> <p> A socket channel is created by invoking one of the <a href=\"#!/api/java.nio.channels.SocketChannel-method-open\" rel=\"java.nio.channels.SocketChannel-method-open\" class=\"docClass\">open</a>\n methods of this class.  It is not possible to create a channel for an arbitrary,\n pre-existing socket. A newly-created socket channel is open but not yet\n connected.  An attempt to invoke an I/O operation upon an unconnected\n channel will cause a <a href=\"#!/api/java.nio.channels.NotYetConnectedException\" rel=\"java.nio.channels.NotYetConnectedException\" class=\"docClass\">java.nio.channels.NotYetConnectedException</a> to be thrown.  A\n socket channel can be connected by invoking its <a href=\"#!/api/java.nio.channels.SocketChannel-method-connect\" rel=\"java.nio.channels.SocketChannel-method-connect\" class=\"docClass\">connect</a>\n method; once connected, a socket channel remains connected until it is\n closed.  Whether or not a socket channel is connected may be determined by\n invoking its <a href=\"#!/api/java.nio.channels.SocketChannel-method-isConnected\" rel=\"java.nio.channels.SocketChannel-method-isConnected\" class=\"docClass\">isConnected</a> method.</p>\n\n<p> <p> Socket channels support <i>non-blocking connection:</i>&nbsp;A socket\n channel may be created and the process of establishing the link to the\n remote socket may be initiated via the <a href=\"#!/api/java.nio.channels.SocketChannel-method-connect\" rel=\"java.nio.channels.SocketChannel-method-connect\" class=\"docClass\">connect</a> method for\n later completion by the <a href=\"#!/api/java.nio.channels.SocketChannel-method-finishConnect\" rel=\"java.nio.channels.SocketChannel-method-finishConnect\" class=\"docClass\">finishConnect</a> method.\n Whether or not a connection operation is in progress may be determined by\n invoking the <a href=\"#!/api/java.nio.channels.SocketChannel-method-isConnectionPending\" rel=\"java.nio.channels.SocketChannel-method-isConnectionPending\" class=\"docClass\">isConnectionPending</a> method.</p>\n\n<p> <p> Socket channels support <i>asynchronous shutdown,</i> which is similar\n to the asynchronous close operation specified in the <a href=\"#!/api/java.nio.channels.Channel\" rel=\"java.nio.channels.Channel\" class=\"docClass\">java.nio.channels.Channel</a> class.\n If the input side of a socket is shut down by one thread while another\n thread is blocked in a read operation on the socket's channel, then the read\n operation in the blocked thread will complete without reading any bytes and\n will return <tt>-1</tt>.  If the output side of a socket is shut down by one\n thread while another thread is blocked in a write operation on the socket's\n channel, then the blocked thread will receive an <a href=\"#!/api/java.nio.channels.AsynchronousCloseException\" rel=\"java.nio.channels.AsynchronousCloseException\" class=\"docClass\">java.nio.channels.AsynchronousCloseException</a>.</p>\n\n<p> <p> Socket options are configured using the setOption method. Socket channels support the following options:\n <blockquote>\n <table border summary=\"Socket options\">\n   <tr>\n     <th>Option Name</th>\n     <th>Description</th>\n   </tr>\n   <tr>\n     <td> SO_SNDBUF </td>\n     <td> The size of the socket send buffer </td>\n   </tr>\n   <tr>\n     <td> SO_RCVBUF </td>\n     <td> The size of the socket receive buffer </td>\n   </tr>\n   <tr>\n     <td> SO_KEEPALIVE </td>\n     <td> Keep connection alive </td>\n   </tr>\n   <tr>\n     <td> SO_REUSEADDR </td>\n     <td> Re-use address </td>\n   </tr>\n   <tr>\n     <td> SO_LINGER </td>\n     <td> Linger on close if data is present (when configured in blocking mode\n          only) </td>\n   </tr>\n   <tr>\n     <td> TCP_NODELAY </td>\n     <td> Disable the Nagle algorithm </td>\n   </tr>\n </table>\n </blockquote>\n Additional (implementation specific) options may also be supported.</p>\n\n<p> <p> Socket channels are safe for use by multiple concurrent threads.  They\n support concurrent reading and writing, though at most one thread may be\n reading and at most one thread may be writing at any given time.  The <a href=\"#!/api/java.nio.channels.SocketChannel-method-connect\" rel=\"java.nio.channels.SocketChannel-method-connect\" class=\"docClass\">connect</a> and <a href=\"#!/api/java.nio.channels.SocketChannel-method-finishConnect\" rel=\"java.nio.channels.SocketChannel-method-finishConnect\" class=\"docClass\">finishConnect</a> methods are\n mutually synchronized against each other, and an attempt to initiate a read\n or write operation while an invocation of one of these methods is in\n progress will block until that invocation is complete.  </p></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-bind' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-bind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-bind' class='name expandable'>bind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>1.7</b></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ConnectionPendingException\n          If a non-blocking connect operation is already in progress on\n          this channel</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>AlreadyBoundException               {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedAddressTypeException     {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException              {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException                         {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          If a security manager has been installed and its\n          checkListen method denies\n          the operation</p>\n</div></li></ul></div></div></div><div id='method-connect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-connect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-connect' class='name expandable'>connect</a>( <span class='pre'>remote</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Connects this channel's socket. ...</div><div class='long'><p>Connects this channel's socket.</p>\n\n<p> <p> If this channel is in non-blocking mode then an invocation of this\n method initiates a non-blocking connection operation.  If the connection\n is established immediately, as can happen with a local connection, then\n this method returns <tt>true</tt>.  Otherwise this method returns\n <tt>false</tt> and the connection operation must later be completed by\n invoking the <a href=\"#!/api/java.nio.channels.SocketChannel-method-finishConnect\" rel=\"java.nio.channels.SocketChannel-method-finishConnect\" class=\"docClass\">finishConnect</a> method.</p>\n\n<p> <p> If this channel is in blocking mode then an invocation of this\n method will block until the connection is established or an I/O error\n occurs.</p>\n\n<p> <p> This method performs exactly the same security checks as the java.net.Socket class.  That is, if a security manager has been\n installed then this method verifies that its checkConnect method permits\n connecting to the address and port number of the given remote endpoint.</p>\n\n<p> <p> This method may be invoked at any time.  If a read or write\n operation upon this channel is invoked while an invocation of this\n method is in progress then that operation will first block until this\n invocation is complete.  If a connection attempt is initiated but fails,\n that is, if an invocation of this method throws a checked exception,\n then the channel will be closed.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>remote</span> : Object {SocketAddress}<div class='sub-desc'><p>The remote address to which this channel is to be connected</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if a connection was established,\n          <tt>false</tt> if this channel is in non-blocking mode\n          and the connection operation is in progress</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AlreadyConnectedException\n          If this channel is already connected</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ConnectionPendingException\n          If a non-blocking connection operation is already in progress\n          on this channel</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>AsynchronousCloseException\n          If another thread closes this channel\n          while the connect operation is in progress</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedByInterruptException\n          If another thread interrupts the current thread\n          while the connect operation is in progress, thereby\n          closing the channel and setting the current thread's\n          interrupt status</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnresolvedAddressException\n          If the given remote address is not fully resolved</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedAddressTypeException\n          If the type of the given remote address is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          If a security manager has been installed\n          and it does not permit access to the given remote endpoint</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-finishConnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-finishConnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-finishConnect' class='name expandable'>finishConnect</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Finishes the process of connecting a socket channel. ...</div><div class='long'><p>Finishes the process of connecting a socket channel.</p>\n\n<p> <p> A non-blocking connection operation is initiated by placing a socket\n channel in non-blocking mode and then invoking its <a href=\"#!/api/java.nio.channels.SocketChannel-method-connect\" rel=\"java.nio.channels.SocketChannel-method-connect\" class=\"docClass\">connect</a> method.  Once the connection is established, or the attempt has\n failed, the socket channel will become connectable and this method may\n be invoked to complete the connection sequence.  If the connection\n operation failed then invoking this method will cause an appropriate\n java.io.IOException to be thrown.</p>\n\n<p> <p> If this channel is already connected then this method will not block\n and will immediately return <tt>true</tt>.  If this channel is in\n non-blocking mode then this method will return <tt>false</tt> if the\n connection process is not yet complete.  If this channel is in blocking\n mode then this method will block until the connection either completes\n or fails, and will always either return <tt>true</tt> or throw a checked\n exception describing the failure.</p>\n\n<p> <p> This method may be invoked at any time.  If a read or write\n operation upon this channel is invoked while an invocation of this\n method is in progress then that operation will first block until this\n invocation is complete.  If a connection attempt fails, that is, if an\n invocation of this method throws a checked exception, then the channel\n will be closed.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this channel's socket is now\n          connected</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoConnectionPendingException\n          If this channel is not connected and a connection operation\n          has not been initiated</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>AsynchronousCloseException\n          If another thread closes this channel\n          while the connect operation is in progress</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedByInterruptException\n          If another thread interrupts the current thread\n          while the connect operation is in progress, thereby\n          closing the channel and setting the current thread's\n          interrupt status</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-getLocalAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-getLocalAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-getLocalAddress' class='name expandable'>getLocalAddress</a>( <span class='pre'></span> ) : Object {java.net.SocketAddress}<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc}\n \n If there is a security manager set, its {@code checkConnect} method is\n called with the local addres...</div><div class='long'><p>{@inheritDoc}\n <p>\n If there is a security manager set, its {@code checkConnect} method is\n called with the local address and {@code -1} as its arguments to see\n if the operation is allowed. If the operation is not allowed,\n a {@code SocketAddress} representing the\n loopback address and the\n local port of the channel's socket is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.SocketAddress}</span><div class='sub-desc'><p>The {@code SocketAddress} that the socket is bound to, or the\n          {@code SocketAddress} representing the loopback address if\n          denied by the security manager, or {@code null} if the\n          channel's socket is not bound</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException     {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException                {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-getRemoteAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-getRemoteAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-getRemoteAddress' class='name expandable'>getRemoteAddress</a>( <span class='pre'></span> ) : Object {java.net.SocketAddress}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the remote address to which this channel's socket is connected. ...</div><div class='long'><p>Returns the remote address to which this channel's socket is connected.</p>\n\n<p> <p> Where the channel is bound and connected to an Internet Protocol\n socket address then the return value from this method is of type java.net.InetSocketAddress.</p>\n        <p>Available since: <b>1.7</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.SocketAddress}</span><div class='sub-desc'><p>The remote address; {@code null} if the channel's socket is not\n          connected</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If the channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-isConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-isConnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-isConnected' class='name expandable'>isConnected</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this channel's network socket is connected. ...</div><div class='long'><p>Tells whether or not this channel's network socket is connected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this channel's network socket\n          is open and connected</p>\n</div></li></ul></div></div></div><div id='method-isConnectionPending' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-isConnectionPending' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-isConnectionPending' class='name expandable'>isConnectionPending</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not a connection operation is in progress on this\n channel. ...</div><div class='long'><p>Tells whether or not a connection operation is in progress on this\n channel.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, a connection operation has been\n          initiated on this channel but not yet completed by invoking the\n          <a href=\"#!/api/java.nio.channels.SocketChannel-method-finishConnect\" rel=\"java.nio.channels.SocketChannel-method-finishConnect\" class=\"docClass\">finishConnect</a> method</p>\n</div></li></ul></div></div></div><div id='method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-open' class='name expandable'>open</a>( <span class='pre'>remote</span> ) : Object {java.nio.channels.SocketChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens a socket channel and connects it to a remote address. ...</div><div class='long'><p>Opens a socket channel and connects it to a remote address.</p>\n\n<p> <p> This convenience method works as if by invoking the <a href=\"#!/api/java.nio.channels.SocketChannel-method-open\" rel=\"java.nio.channels.SocketChannel-method-open\" class=\"docClass\">open</a>()\n method, invoking the connect method upon\n the resulting socket channel, passing it <tt>remote</tt>, and then\n returning that channel.  </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>remote</span> : Object {SocketAddress}<div class='sub-desc'><p>The remote address to which the new channel is to be connected</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SocketChannel}</span><div class='sub-desc'><p>A new, and connected, socket channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AsynchronousCloseException\n          If another thread closes this channel\n          while the connect operation is in progress</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedByInterruptException\n          If another thread interrupts the current thread\n          while the connect operation is in progress, thereby\n          closing the channel and setting the current thread's\n          interrupt status</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnresolvedAddressException\n          If the given remote address is not fully resolved</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedAddressTypeException\n          If the type of the given remote address is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n          If a security manager has been installed\n          and it does not permit access to the given remote endpoint</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-read' class='name expandable'>read</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NotYetConnectedException\n          If this channel is not yet connected</p>\n</div></li></ul></div></div></div><div id='method-setOption' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-setOption' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-setOption' class='name expandable'>setOption</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <p>Available since: <b>1.7</b></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException           {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException                {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException                  {@inheritDoc}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException                             {@inheritDoc}</p>\n</div></li></ul></div></div></div><div id='method-shutdownInput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-shutdownInput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-shutdownInput' class='name expandable'>shutdownInput</a>( <span class='pre'></span> ) : Object {java.nio.channels.SocketChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Shutdown the connection for reading without closing the channel. ...</div><div class='long'><p>Shutdown the connection for reading without closing the channel.</p>\n\n<p> <p> Once shutdown for reading then further reads on the channel will\n return {@code -1}, the end-of-stream indication. If the input side of the\n connection is already shutdown then invoking this method has no effect.</p>\n        <p>Available since: <b>1.7</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SocketChannel}</span><div class='sub-desc'><p>The channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NotYetConnectedException\n          If this channel is not yet connected</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-shutdownOutput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-shutdownOutput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-shutdownOutput' class='name expandable'>shutdownOutput</a>( <span class='pre'></span> ) : Object {java.nio.channels.SocketChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Shutdown the connection for writing without closing the channel. ...</div><div class='long'><p>Shutdown the connection for writing without closing the channel.</p>\n\n<p> <p> Once shutdown for writing then further attempts to write to the\n channel will throw <a href=\"#!/api/java.nio.channels.ClosedChannelException\" rel=\"java.nio.channels.ClosedChannelException\" class=\"docClass\">java.nio.channels.ClosedChannelException</a>. If the output side of\n the connection is already shutdown then invoking this method has no\n effect.</p>\n        <p>Available since: <b>1.7</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.SocketChannel}</span><div class='sub-desc'><p>The channel</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NotYetConnectedException\n          If this channel is not yet connected</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If this channel is closed</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If some other I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-socket' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-socket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-socket' class='name expandable'>socket</a>( <span class='pre'></span> ) : Object {java.net.Socket}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves a socket associated with this channel. ...</div><div class='long'><p>Retrieves a socket associated with this channel.</p>\n\n<p> <p> The returned object will not declare any public methods that are not\n declared in the java.net.Socket class.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.Socket}</span><div class='sub-desc'><p>A socket associated with this channel</p>\n</div></li></ul></div></div></div><div id='method-validOps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-validOps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-validOps' class='name expandable'>validOps</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an operation set identifying this channel's supported\n operations. ...</div><div class='long'><p>Returns an operation set identifying this channel's supported\n operations.</p>\n\n<p> <p> Socket channels support connecting, reading, and writing, so this\n method returns <tt>(</tt><a href=\"#!/api/java.nio.channels.SelectionKey-property-OP_CONNECT\" rel=\"java.nio.channels.SelectionKey-property-OP_CONNECT\" class=\"docClass\">java.nio.channels.SelectionKey.OP_CONNECT</a>\n <tt>|</tt>&nbsp;<a href=\"#!/api/java.nio.channels.SelectionKey-property-OP_READ\" rel=\"java.nio.channels.SelectionKey-property-OP_READ\" class=\"docClass\">java.nio.channels.SelectionKey.OP_READ</a> <tt>|</tt>&nbsp;<a href=\"#!/api/java.nio.channels.SelectionKey-property-OP_WRITE\" rel=\"java.nio.channels.SelectionKey-property-OP_WRITE\" class=\"docClass\">java.nio.channels.SelectionKey.OP_WRITE</a><tt>)</tt>.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The valid-operation set</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.SocketChannel'>java.nio.channels.SocketChannel</span><br/><a href='source/SocketChannel.html#java-nio-channels-SocketChannel-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.SocketChannel-method-write' class='name expandable'>write</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NotYetConnectedException\n          If this channel is not yet connected</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});