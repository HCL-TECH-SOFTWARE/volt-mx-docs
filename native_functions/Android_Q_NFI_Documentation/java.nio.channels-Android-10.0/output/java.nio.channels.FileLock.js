Ext.data.JsonP.java_nio_channels_FileLock({"tagname":"class","name":"java.nio.channels.FileLock","autodetected":{},"files":[{"filename":"FileLock.js","href":"FileLock.html#java-nio-channels-FileLock"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Reinhold","email":null},{"tagname":"author","name":"JSR-51 Expert Group","email":null}],"since":"1.4","members":[{"name":"acquiredBy","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-acquiredBy","meta":{}},{"name":"channel","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-channel","meta":{}},{"name":"close","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-close","meta":{}},{"name":"isShared","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-isShared","meta":{}},{"name":"isValid","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-isValid","meta":{}},{"name":"overlaps","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-overlaps","meta":{}},{"name":"position","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-position","meta":{}},{"name":"release","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-release","meta":{}},{"name":"size","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-size","meta":{}},{"name":"toString","tagname":"method","owner":"java.nio.channels.FileLock","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.channels.FileLock","short_doc":"implements java.lang.AutoCloseable\n\nA token representing a lock on a region of a file. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.channels.FileLock</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FileLock.html#java-nio-channels-FileLock' target='_blank'>FileLock.js</a></div></pre><div class='doc-contents'><p>implements java.lang.AutoCloseable</p>\n\n<p>A token representing a lock on a region of a file.</p>\n\n<p> <p> A file-lock object is created each time a lock is acquired on a file via\n one of the lock or tryLock methods of the\n <a href=\"#!/api/java.nio.channels.FileChannel\" rel=\"java.nio.channels.FileChannel\" class=\"docClass\">java.nio.channels.FileChannel</a> class, or the lock\n or tryLock\n methods of the <a href=\"#!/api/java.nio.channels.AsynchronousFileChannel\" rel=\"java.nio.channels.AsynchronousFileChannel\" class=\"docClass\">java.nio.channels.AsynchronousFileChannel</a> class.</p>\n\n<p> <p> A file-lock object is initially valid.  It remains valid until the lock\n is released by invoking the <a href=\"#!/api/java.nio.channels.FileLock-method-release\" rel=\"java.nio.channels.FileLock-method-release\" class=\"docClass\">release</a> method, by closing the\n channel that was used to acquire it, or by the termination of the Java\n virtual machine, whichever comes first.  The validity of a lock may be\n tested by invoking its <a href=\"#!/api/java.nio.channels.FileLock-method-isValid\" rel=\"java.nio.channels.FileLock-method-isValid\" class=\"docClass\">isValid</a> method.</p>\n\n<p> <p> A file lock is either <i>exclusive</i> or <i>shared</i>.  A shared lock\n prevents other concurrently-running programs from acquiring an overlapping\n exclusive lock, but does allow them to acquire overlapping shared locks.  An\n exclusive lock prevents other programs from acquiring an overlapping lock of\n either type.  Once it is released, a lock has no further effect on the locks\n that may be acquired by other programs.</p>\n\n<p> <p> Whether a lock is exclusive or shared may be determined by invoking its\n <a href=\"#!/api/java.nio.channels.FileLock-method-isShared\" rel=\"java.nio.channels.FileLock-method-isShared\" class=\"docClass\">isShared</a> method.  Some platforms do not support shared\n locks, in which case a request for a shared lock is automatically converted\n into a request for an exclusive lock.</p>\n\n<p> <p> The locks held on a particular file by a single Java virtual machine do\n not overlap.  The <a href=\"#!/api/java.nio.channels.FileLock-method-overlaps\" rel=\"java.nio.channels.FileLock-method-overlaps\" class=\"docClass\">overlaps</a> method may be used to test\n whether a candidate lock range overlaps an existing lock.</p>\n\n<p> <p> A file-lock object records the file channel upon whose file the lock is\n held, the type and validity of the lock, and the position and size of the\n locked region.  Only the validity of a lock is subject to change over time;\n all other aspects of a lock's state are immutable.</p>\n\n<p> <p> File locks are held on behalf of the entire Java virtual machine.\n They are not suitable for controlling access to a file by multiple\n threads within the same virtual machine.</p>\n\n<p> <p> File-lock objects are safe for use by multiple concurrent threads.</p>\n\n<p> <a name=\"pdep\"></a><h2> Platform dependencies </h2></p>\n\n<p> <p> This file-locking API is intended to map directly to the native locking\n facility of the underlying operating system.  Thus the locks held on a file\n should be visible to all programs that have access to the file, regardless\n of the language in which those programs are written.</p>\n\n<p> <p> Whether or not a lock actually prevents another program from accessing\n the content of the locked region is system-dependent and therefore\n unspecified.  The native file-locking facilities of some systems are merely\n <i>advisory</i>, meaning that programs must cooperatively observe a known\n locking protocol in order to guarantee data integrity.  On other systems\n native file locks are <i>mandatory</i>, meaning that if one program locks a\n region of a file then other programs are actually prevented from accessing\n that region in a way that would violate the lock.  On yet other systems,\n whether native file locks are advisory or mandatory is configurable on a\n per-file basis.  To ensure consistent and correct behavior across platforms,\n it is strongly recommended that the locks provided by this API be used as if\n they were advisory locks.</p>\n\n<p> <p> On some systems, acquiring a mandatory lock on a region of a file\n prevents that region from being <a href=\"#!/api/java.nio.channels.FileChannel-method-map\" rel=\"java.nio.channels.FileChannel-method-map\" class=\"docClass\">&lt;i&gt;mapped into memory&lt;/i&gt;</a>, and vice versa.  Programs that combine\n locking and mapping should be prepared for this combination to fail.</p>\n\n<p> <p> On some systems, closing a channel releases all locks held by the Java\n virtual machine on the underlying file regardless of whether the locks were\n acquired via that channel or via another channel open on the same file.  It\n is strongly recommended that, within a program, a unique channel be used to\n acquire all locks on any given file.</p>\n\n<p> <p> Some network filesystems permit file locking to be used with\n memory-mapped files only when the locked regions are page-aligned and a\n whole multiple of the underlying hardware's page size.  Some network\n filesystems do not implement file locks on regions that extend past a\n certain position, often 2<sup>30</sup> or 2<sup>31</sup>.  In general, great\n care should be taken when locking files that reside on network filesystems.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acquiredBy' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-acquiredBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-acquiredBy' class='name expandable'>acquiredBy</a>( <span class='pre'></span> ) : Object {java.nio.channels.Channel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the channel upon whose file this lock was acquired. ...</div><div class='long'><p>Returns the channel upon whose file this lock was acquired.</p>\n        <p>Available since: <b>1.7</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.Channel}</span><div class='sub-desc'><p>The channel upon whose file this lock was acquired.</p>\n</div></li></ul></div></div></div><div id='method-channel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-channel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-channel' class='name expandable'>channel</a>( <span class='pre'></span> ) : Object {java.nio.channels.FileChannel}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the file channel upon whose file this lock was acquired. ...</div><div class='long'><p>Returns the file channel upon whose file this lock was acquired.</p>\n\n<p> <p> This method has been superseded by the <a href=\"#!/api/java.nio.channels.FileLock-method-acquiredBy\" rel=\"java.nio.channels.FileLock-method-acquiredBy\" class=\"docClass\">acquiredBy</a>\n method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.channels.FileChannel}</span><div class='sub-desc'><p>The file channel, or {@code null} if the file lock was not\n          acquired by a file channel.</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method invokes the release method. ...</div><div class='long'><p>This method invokes the <a href=\"#!/api/java.nio.channels.FileLock-method-release\" rel=\"java.nio.channels.FileLock-method-release\" class=\"docClass\">release</a> method. It was added\n to the class so that it could be used in conjunction with the\n automatic resource management block construct.</p>\n        <p>Available since: <b>1.7</b></p>\n</div></div></div><div id='method-isShared' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-isShared' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-isShared' class='name expandable'>isShared</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this lock is shared. ...</div><div class='long'><p>Tells whether this lock is shared.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if lock is shared,\n         <tt>false</tt> if it is exclusive</p>\n</div></li></ul></div></div></div><div id='method-isValid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-isValid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-isValid' class='name expandable'>isValid</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this lock is valid. ...</div><div class='long'><p>Tells whether or not this lock is valid.</p>\n\n<p> <p> A lock object remains valid until it is released or the associated\n file channel is closed, whichever comes first.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this lock is valid</p>\n</div></li></ul></div></div></div><div id='method-overlaps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-overlaps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-overlaps' class='name expandable'>overlaps</a>( <span class='pre'>position, size</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this lock overlaps the given lock range. ...</div><div class='long'><p>Tells whether or not this lock overlaps the given lock range.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>position</span> : Number<div class='sub-desc'><p>The starting position of the lock range</p>\n</div></li><li><span class='pre'>size</span> : Number<div class='sub-desc'><p>The size of the lock range</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><tt>true</tt> if, and only if, this lock and the given lock\n          range overlap by at least one byte</p>\n</div></li></ul></div></div></div><div id='method-position' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-position' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-position' class='name expandable'>position</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the position within the file of the first byte of the locked\n region. ...</div><div class='long'><p>Returns the position within the file of the first byte of the locked\n region.</p>\n\n<p> <p> A locked region need not be contained within, or even overlap, the\n actual underlying file, so the value returned by this method may exceed\n the file's current size.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The position</p>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-release' class='name expandable'>release</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Releases this lock. ...</div><div class='long'><p>Releases this lock.</p>\n\n<p> <p> If this lock object is valid then invoking this method releases the\n lock and renders the object invalid.  If this lock object is invalid\n then invoking this method has no effect.  </p></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ClosedChannelException\n          If the channel that was used to acquire this lock\n          is no longer open</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          If an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the size of the locked region in bytes. ...</div><div class='long'><p>Returns the size of the locked region in bytes.</p>\n\n<p> <p> A locked region need not be contained within, or even overlap, the\n actual underlying file, so the value returned by this method may exceed\n the file's current size.  </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The size of the locked region</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.channels.FileLock'>java.nio.channels.FileLock</span><br/><a href='source/FileLock.html#java-nio-channels-FileLock-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.channels.FileLock-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string describing the range, type, and validity of this lock. ...</div><div class='long'><p>Returns a string describing the range, type, and validity of this lock.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>A descriptive string</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});