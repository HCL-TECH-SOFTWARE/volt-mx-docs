Ext.data.JsonP.javax_obex_PrivateOutputStream({"tagname":"class","name":"javax.obex.PrivateOutputStream","autodetected":{},"files":[{"filename":"PrivateOutputStream.js","href":"PrivateOutputStream.html#javax-obex-PrivateOutputStream"}],"extends":"java.io.OutputStream","hide":true,"members":[{"name":"close","tagname":"method","owner":"javax.obex.PrivateOutputStream","id":"method-close","meta":{}},{"name":"isClosed","tagname":"method","owner":"javax.obex.PrivateOutputStream","id":"method-isClosed","meta":{}},{"name":"readBytes","tagname":"method","owner":"javax.obex.PrivateOutputStream","id":"method-readBytes","meta":{}},{"name":"size","tagname":"method","owner":"javax.obex.PrivateOutputStream","id":"method-size","meta":{}},{"name":"write","tagname":"method","owner":"javax.obex.PrivateOutputStream","id":"method-write","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.obex.PrivateOutputStream","classIcon":"icon-class","superclasses":["java.io.OutputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.io.OutputStream<div class='subclass '><strong>javax.obex.PrivateOutputStream</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PrivateOutputStream.html#javax-obex-PrivateOutputStream' target='_blank'>PrivateOutputStream.js</a></div></pre><div class='doc-contents'><p>This object provides an output stream to the Operation objects used in this\n package.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-close' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateOutputStream'>javax.obex.PrivateOutputStream</span><br/><a href='source/PrivateOutputStream.html#javax-obex-PrivateOutputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateOutputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the output stream. ...</div><div class='long'><p>Closes the output stream. If the input stream is already closed, do\n nothing.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException this will never happen</p>\n</div></li></ul></div></div></div><div id='method-isClosed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateOutputStream'>javax.obex.PrivateOutputStream</span><br/><a href='source/PrivateOutputStream.html#javax-obex-PrivateOutputStream-method-isClosed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateOutputStream-method-isClosed' class='name expandable'>isClosed</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines if the connection is closed ...</div><div class='long'><p>Determines if the connection is closed</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the connection is closed; <code>false</code>\n         if the connection is open</p>\n</div></li></ul></div></div></div><div id='method-readBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateOutputStream'>javax.obex.PrivateOutputStream</span><br/><a href='source/PrivateOutputStream.html#javax-obex-PrivateOutputStream-method-readBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateOutputStream-method-readBytes' class='name expandable'>readBytes</a>( <span class='pre'>size</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads the bytes that have been written to this stream. ...</div><div class='long'><p>Reads the bytes that have been written to this stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>size</span> : Number<div class='sub-desc'><p>the size of the array to return</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the byte array that is written</p>\n</div></li></ul></div></div></div><div id='method-size' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateOutputStream'>javax.obex.PrivateOutputStream</span><br/><a href='source/PrivateOutputStream.html#javax-obex-PrivateOutputStream-method-size' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateOutputStream-method-size' class='name expandable'>size</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determines how many bytes have been written to the output stream. ...</div><div class='long'><p>Determines how many bytes have been written to the output stream.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of bytes written to the output stream</p>\n</div></li></ul></div></div></div><div id='method-write' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateOutputStream'>javax.obex.PrivateOutputStream</span><br/><a href='source/PrivateOutputStream.html#javax-obex-PrivateOutputStream-method-write' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateOutputStream-method-write' class='name expandable'>write</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});