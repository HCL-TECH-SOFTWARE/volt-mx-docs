Ext.data.JsonP.javax_obex_ObexSession({"tagname":"class","name":"javax.obex.ObexSession","autodetected":{},"files":[{"filename":"ObexSession.js","href":"ObexSession.html#javax-obex-ObexSession"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"handleAuthChall","tagname":"method","owner":"javax.obex.ObexSession","id":"method-handleAuthChall","meta":{}},{"name":"handleAuthResp","tagname":"method","owner":"javax.obex.ObexSession","id":"method-handleAuthResp","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.obex.ObexSession","short_doc":"The ObexSession interface characterizes the term\n \"OBEX Connection\" as defined in the IrDA Object Exchange Protocol v...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["javax.obex.ClientSession","javax.obex.ServerSession"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.obex.ObexSession</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/javax.obex.ClientSession' rel='javax.obex.ClientSession' class='docClass'>javax.obex.ClientSession</a></div><div class='dependency'><a href='#!/api/javax.obex.ServerSession' rel='javax.obex.ServerSession' class='docClass'>javax.obex.ServerSession</a></div><h4>Files</h4><div class='dependency'><a href='source/ObexSession.html#javax-obex-ObexSession' target='_blank'>ObexSession.js</a></div></pre><div class='doc-contents'><p>The <code>ObexSession</code> interface characterizes the term\n \"OBEX Connection\" as defined in the IrDA Object Exchange Protocol v1.2, which\n could be the server-side view of an OBEX connection, or the client-side view\n of the same connection, which is established by server's accepting of a\n client issued \"CONNECT\".\n <P>\n This interface serves as the common super class for\n <CODE>ClientSession</CODE> and <CODE>ServerSession</CODE>.</P></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-handleAuthChall' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.ObexSession'>javax.obex.ObexSession</span><br/><a href='source/ObexSession.html#javax-obex-ObexSession-method-handleAuthChall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.ObexSession-method-handleAuthChall' class='name expandable'>handleAuthChall</a>( <span class='pre'>header</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the server received an authentication challenge header. ...</div><div class='long'><p>Called when the server received an authentication challenge header. This\n will cause the authenticator to handle the authentication challenge.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>header</span> : Object {HeaderSet}<div class='sub-desc'><p>the header with the authentication challenge</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the last request should be resent;\n         <code>false</code> if the last request should not be resent</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException</p>\n</div></li></ul></div></div></div><div id='method-handleAuthResp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.ObexSession'>javax.obex.ObexSession</span><br/><a href='source/ObexSession.html#javax-obex-ObexSession-method-handleAuthResp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.ObexSession-method-handleAuthResp' class='name expandable'>handleAuthResp</a>( <span class='pre'>authResp</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the server received an authentication response header. ...</div><div class='long'><p>Called when the server received an authentication response header. This\n will cause the authenticator to handle the authentication response.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>authResp</span> : Object {byte[]}<div class='sub-desc'><p>the authentication response</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><code>true</code> if the response passed; <code>false</code> if\n         the response failed</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});