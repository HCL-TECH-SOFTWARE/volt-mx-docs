Ext.data.JsonP.javax_obex_PrivateInputStream({"tagname":"class","name":"javax.obex.PrivateInputStream","autodetected":{},"files":[{"filename":"PrivateInputStream.js","href":"PrivateInputStream.html#javax-obex-PrivateInputStream"}],"extends":"java.io.InputStream","hide":true,"members":[{"name":"available","tagname":"method","owner":"javax.obex.PrivateInputStream","id":"method-available","meta":{}},{"name":"close","tagname":"method","owner":"javax.obex.PrivateInputStream","id":"method-close","meta":{}},{"name":"read","tagname":"method","owner":"javax.obex.PrivateInputStream","id":"method-read","meta":{}},{"name":"writeBytes","tagname":"method","owner":"javax.obex.PrivateInputStream","id":"method-writeBytes","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.obex.PrivateInputStream","classIcon":"icon-class","superclasses":["java.io.InputStream"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.io.InputStream<div class='subclass '><strong>javax.obex.PrivateInputStream</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PrivateInputStream.html#javax-obex-PrivateInputStream' target='_blank'>PrivateInputStream.js</a></div></pre><div class='doc-contents'><p>This object provides an input stream to the Operation objects used in this\n package.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-available' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateInputStream'>javax.obex.PrivateInputStream</span><br/><a href='source/PrivateInputStream.html#javax-obex-PrivateInputStream-method-available' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateInputStream-method-available' class='name expandable'>available</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of bytes that can be read (or skipped over) from this\n input stream without blocking by the next c...</div><div class='long'><p>Returns the number of bytes that can be read (or skipped over) from this\n input stream without blocking by the next caller of a method for this\n input stream. The next caller might be the same thread or or another\n thread.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of bytes that can be read from this input stream\n         without blocking</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateInputStream'>javax.obex.PrivateInputStream</span><br/><a href='source/PrivateInputStream.html#javax-obex-PrivateInputStream-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateInputStream-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Closes the input stream. ...</div><div class='long'><p>Closes the input stream. If the input stream is already closed, do\n nothing.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException this will never happen</p>\n</div></li></ul></div></div></div><div id='method-read' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateInputStream'>javax.obex.PrivateInputStream</span><br/><a href='source/PrivateInputStream.html#javax-obex-PrivateInputStream-method-read' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateInputStream-method-read' class='name expandable'>read</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-writeBytes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.obex.PrivateInputStream'>javax.obex.PrivateInputStream</span><br/><a href='source/PrivateInputStream.html#javax-obex-PrivateInputStream-method-writeBytes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.obex.PrivateInputStream-method-writeBytes' class='name expandable'>writeBytes</a>( <span class='pre'>body, start</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows the OperationImpl thread to add body data to the\n input stream. ...</div><div class='long'><p>Allows the <code>OperationImpl</code> thread to add body data to the\n input stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>body</span> : Object {byte[]}<div class='sub-desc'><p>the data to add to the stream</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the start of the body to array to copy</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});