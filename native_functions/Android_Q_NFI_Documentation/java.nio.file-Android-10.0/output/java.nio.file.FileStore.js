Ext.data.JsonP.java_nio_file_FileStore({"tagname":"class","name":"java.nio.file.FileStore","autodetected":{},"files":[{"filename":"FileStore.js","href":"FileStore.html#java-nio-file-FileStore"}],"extends":"java.lang.Object","since":"1.7","members":[{"name":"getAttribute","tagname":"method","owner":"java.nio.file.FileStore","id":"method-getAttribute","meta":{}},{"name":"getFileStoreAttributeView","tagname":"method","owner":"java.nio.file.FileStore","id":"method-getFileStoreAttributeView","meta":{}},{"name":"getTotalSpace","tagname":"method","owner":"java.nio.file.FileStore","id":"method-getTotalSpace","meta":{}},{"name":"getUnallocatedSpace","tagname":"method","owner":"java.nio.file.FileStore","id":"method-getUnallocatedSpace","meta":{}},{"name":"getUsableSpace","tagname":"method","owner":"java.nio.file.FileStore","id":"method-getUsableSpace","meta":{}},{"name":"isReadOnly","tagname":"method","owner":"java.nio.file.FileStore","id":"method-isReadOnly","meta":{}},{"name":"name","tagname":"method","owner":"java.nio.file.FileStore","id":"method-name","meta":{}},{"name":"supportsFileAttributeView","tagname":"method","owner":"java.nio.file.FileStore","id":"method-supportsFileAttributeView","meta":{}},{"name":"type","tagname":"method","owner":"java.nio.file.FileStore","id":"method-type","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.file.FileStore","short_doc":"Storage for files. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.file.FileStore</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FileStore.html#java-nio-file-FileStore' target='_blank'>FileStore.js</a></div></pre><div class='doc-contents'><p>Storage for files. A {@code FileStore} represents a storage pool, device,\n partition, volume, concrete file system or other implementation specific means\n of file storage. The {@code FileStore} for where a file is stored is obtained\n by invoking the <a href=\"#!/api/java.nio.file.Files-method-getFileStore\" rel=\"java.nio.file.Files-method-getFileStore\" class=\"docClass\">getFileStore</a> method, or all file\n stores can be enumerated by invoking the <a href=\"#!/api/java.nio.file.FileSystem-method-getFileStores\" rel=\"java.nio.file.FileSystem-method-getFileStores\" class=\"docClass\">getFileStores</a> method.</p>\n\n<p> <p> In addition to the methods defined by this class, a file store may support\n one or more java.nio.file.FileStoreAttributeView classes\n that provide a read-only or updatable view of a set of file store attributes.</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getAttribute' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-getAttribute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-getAttribute' class='name expandable'>getAttribute</a>( <span class='pre'>attribute</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Reads the value of a file store attribute. ...</div><div class='long'><p>Reads the value of a file store attribute.</p>\n\n<p> <p> The {@code attribute} parameter identifies the attribute to be read\n and takes the form:\n <blockquote>\n <i>view-name</i><b>:</b><i>attribute-name</i>\n </blockquote>\n where the character {@code ':'} stands for itself.</p>\n\n<p> <p> <i>view-name</i> is the name of\n a <a href=\"#!/api/java.nio.file.FileStore\" rel=\"java.nio.file.FileStore\" class=\"docClass\">AttributeView</a> that identifies a set of file attributes.\n <i>attribute-name</i> is the name of the attribute.</p>\n\n<p> <p> <b>Usage Example:</b>\n Suppose we want to know if ZFS compression is enabled (assuming the \"zfs\"\n view is supported):</p>\n\n<pre>    boolean compression = (Boolean)fs.getAttribute(\"zfs:compression\");\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attribute</span> : String<div class='sub-desc'><p>the attribute to read</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the attribute value; {@code null} may be a valid valid for some\n          attributes</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          if the attribute view is not available or it does not support\n          reading the attribute</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          if an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-getFileStoreAttributeView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-getFileStoreAttributeView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-getFileStoreAttributeView' class='name expandable'>getFileStoreAttributeView</a>( <span class='pre'>type, type</span> ) : Object {java.nio.file.attribute.FileStoreAttributeView}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a {@code FileStoreAttributeView} of the given type. ...</div><div class='long'><p>Returns a {@code FileStoreAttributeView} of the given type.</p>\n\n<p> <p> This method is intended to be used where the file store attribute\n view defines type-safe methods to read or update the file store attributes.\n The {@code type} parameter is the type of the attribute view required and\n the method returns an instance of that type if supported.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : Object {java.lang.Class}<div class='sub-desc'><p>the {@code Class} object corresponding to the attribute view</p>\n</div></li><li><span class='pre'>type</span> : Object<div class='sub-desc'><p>the {@code Class} object corresponding to the attribute view</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.file.attribute.FileStoreAttributeView}</span><div class='sub-desc'><p>a file store attribute view of the specified type or\n          {@code null} if the attribute view is not available</p>\n</div></li></ul></div></div></div><div id='method-getTotalSpace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-getTotalSpace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-getTotalSpace' class='name expandable'>getTotalSpace</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the size, in bytes, of the file store. ...</div><div class='long'><p>Returns the size, in bytes, of the file store.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the size of the file store, in bytes</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          if an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-getUnallocatedSpace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-getUnallocatedSpace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-getUnallocatedSpace' class='name expandable'>getUnallocatedSpace</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of unallocated bytes in the file store. ...</div><div class='long'><p>Returns the number of unallocated bytes in the file store.</p>\n\n<p> <p> The returned number of unallocated bytes is a hint, but not a\n guarantee, that it is possible to use most or any of these bytes.  The\n number of unallocated bytes is most likely to be accurate immediately\n after the space attributes are obtained. It is likely to be\n made inaccurate by any external I/O operations including those made on\n the system outside of this virtual machine.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of unallocated bytes</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          if an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-getUsableSpace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-getUsableSpace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-getUsableSpace' class='name expandable'>getUsableSpace</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of bytes available to this Java virtual machine on the\n file store. ...</div><div class='long'><p>Returns the number of bytes available to this Java virtual machine on the\n file store.</p>\n\n<p> <p> The returned number of available bytes is a hint, but not a\n guarantee, that it is possible to use most or any of these bytes.  The\n number of usable bytes is most likely to be accurate immediately\n after the space attributes are obtained. It is likely to be made inaccurate\n by any external I/O operations including those made on the system outside\n of this Java virtual machine.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of bytes available</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n          if an I/O error occurs</p>\n</div></li></ul></div></div></div><div id='method-isReadOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-isReadOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-isReadOnly' class='name expandable'>isReadOnly</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether this file store is read-only. ...</div><div class='long'><p>Tells whether this file store is read-only. A file store is read-only if\n it does not support write operations or other changes to files. Any\n attempt to create a file, open an existing file for writing etc. causes\n an {@code IOException} to be thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if, and only if, this file store is read-only</p>\n</div></li></ul></div></div></div><div id='method-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-name' class='name expandable'>name</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of this file store. ...</div><div class='long'><p>Returns the name of this file store. The format of the name is highly\n implementation specific. It will typically be the name of the storage\n pool or volume.</p>\n\n<p> <p> The string returned by this method may differ from the string\n returned by the toString method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the name of this file store</p>\n</div></li></ul></div></div></div><div id='method-supportsFileAttributeView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-supportsFileAttributeView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-supportsFileAttributeView' class='name expandable'>supportsFileAttributeView</a>( <span class='pre'>name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tells whether or not this file store supports the file attributes\n identified by the given file attribute view. ...</div><div class='long'><p>Tells whether or not this file store supports the file attributes\n identified by the given file attribute view.</p>\n\n<p> <p> Invoking this method to test if the file store supports BasicFileAttributeView, identified by the name \"{@code basic}\" will\n always return {@code true}. In the case of the default provider, this\n method cannot guarantee to give the correct result when the file store is\n not a local storage device. The reasons for this are implementation\n specific and therefore unspecified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>the name of file attribute view</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if, and only if, the file attribute view is\n          supported</p>\n</div></li></ul></div></div></div><div id='method-type' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.FileStore'>java.nio.file.FileStore</span><br/><a href='source/FileStore.html#java-nio-file-FileStore-method-type' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.FileStore-method-type' class='name expandable'>type</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the type of this file store. ...</div><div class='long'><p>Returns the <em>type</em> of this file store. The format of the string\n returned by this method is highly implementation specific. It may\n indicate, for example, the format used or if the file store is local\n or remote.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representing the type of this file store</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});