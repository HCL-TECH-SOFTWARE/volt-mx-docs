Ext.data.JsonP.java_nio_file_SimpleFileVisitor({"tagname":"class","name":"java.nio.file.SimpleFileVisitor","autodetected":{},"files":[{"filename":"SimpleFileVisitor.js","href":"SimpleFileVisitor.html#java-nio-file-SimpleFileVisitor"}],"extends":"java.lang.Object","params":[{"tagname":"params","doc":"<p><T>     The type of reference to the files</T></p>\n"}],"since":"1.7","members":[{"name":"postVisitDirectory","tagname":"method","owner":"java.nio.file.SimpleFileVisitor","id":"method-postVisitDirectory","meta":{}},{"name":"preVisitDirectory","tagname":"method","owner":"java.nio.file.SimpleFileVisitor","id":"method-preVisitDirectory","meta":{}},{"name":"visitFile","tagname":"method","owner":"java.nio.file.SimpleFileVisitor","id":"method-visitFile","meta":{}},{"name":"visitFileFailed","tagname":"method","owner":"java.nio.file.SimpleFileVisitor","id":"method-visitFileFailed","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.nio.file.SimpleFileVisitor","short_doc":"implements java.nio.file.FileVisitor\n\nA simple visitor of files with default behavior to visit all files and to\n re-t...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.nio.file.SimpleFileVisitor</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SimpleFileVisitor.html#java-nio-file-SimpleFileVisitor' target='_blank'>SimpleFileVisitor.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/java.nio.file.FileVisitor\" rel=\"java.nio.file.FileVisitor\" class=\"docClass\">java.nio.file.FileVisitor</a></p>\n\n<p>A simple visitor of files with default behavior to visit all files and to\n re-throw I/O errors.</p>\n\n<p> <p> Methods in this class may be overridden subject to their general contract.</p>\n        <p>Available since: <b>1.7</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'></span> : <div class='sub-desc'><p><T>     The type of reference to the files</T></p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-postVisitDirectory' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.SimpleFileVisitor'>java.nio.file.SimpleFileVisitor</span><br/><a href='source/SimpleFileVisitor.html#java-nio-file-SimpleFileVisitor-method-postVisitDirectory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.SimpleFileVisitor-method-postVisitDirectory' class='name expandable'>postVisitDirectory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Invoked for a directory after entries in the directory, and all of their\n descendants, have been visited. ...</div><div class='long'><p>Invoked for a directory after entries in the directory, and all of their\n descendants, have been visited.</p>\n\n<p> <p> Unless overridden, this method returns <a href=\"#!/api/java.nio.file.FileVisitResult-property-CONTINUE\" rel=\"java.nio.file.FileVisitResult-property-CONTINUE\" class=\"docClass\">CONTINUE</a> if the directory iteration completes without an I/O exception;\n otherwise this method re-throws the I/O exception that caused the iteration\n of the directory to terminate prematurely.</p>\n</div></div></div><div id='method-preVisitDirectory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.SimpleFileVisitor'>java.nio.file.SimpleFileVisitor</span><br/><a href='source/SimpleFileVisitor.html#java-nio-file-SimpleFileVisitor-method-preVisitDirectory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.SimpleFileVisitor-method-preVisitDirectory' class='name expandable'>preVisitDirectory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Invoked for a directory before entries in the directory are visited. ...</div><div class='long'><p>Invoked for a directory before entries in the directory are visited.</p>\n\n<p> <p> Unless overridden, this method returns <a href=\"#!/api/java.nio.file.FileVisitResult-property-CONTINUE\" rel=\"java.nio.file.FileVisitResult-property-CONTINUE\" class=\"docClass\">CONTINUE</a>.</p>\n</div></div></div><div id='method-visitFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.SimpleFileVisitor'>java.nio.file.SimpleFileVisitor</span><br/><a href='source/SimpleFileVisitor.html#java-nio-file-SimpleFileVisitor-method-visitFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.SimpleFileVisitor-method-visitFile' class='name expandable'>visitFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Invoked for a file in a directory. ...</div><div class='long'><p>Invoked for a file in a directory.</p>\n\n<p> <p> Unless overridden, this method returns <a href=\"#!/api/java.nio.file.FileVisitResult-property-CONTINUE\" rel=\"java.nio.file.FileVisitResult-property-CONTINUE\" class=\"docClass\">CONTINUE</a>.</p>\n</div></div></div><div id='method-visitFileFailed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.nio.file.SimpleFileVisitor'>java.nio.file.SimpleFileVisitor</span><br/><a href='source/SimpleFileVisitor.html#java-nio-file-SimpleFileVisitor-method-visitFileFailed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.nio.file.SimpleFileVisitor-method-visitFileFailed' class='name expandable'>visitFileFailed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Invoked for a file that could not be visited. ...</div><div class='long'><p>Invoked for a file that could not be visited.</p>\n\n<p> <p> Unless overridden, this method re-throws the I/O exception that prevented\n the file from being visited.</p>\n</div></div></div></div></div></div></div>","meta":{}});