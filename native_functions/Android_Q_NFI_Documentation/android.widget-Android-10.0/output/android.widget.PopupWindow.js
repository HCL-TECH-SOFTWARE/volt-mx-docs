Ext.data.JsonP.android_widget_PopupWindow({"tagname":"class","name":"android.widget.PopupWindow","autodetected":{},"files":[{"filename":"PopupWindow.js","href":"PopupWindow.html#android-widget-PopupWindow"}],"extends":"java.lang.Object","members":[{"name":"INPUT_METHOD_FROM_FOCUSABLE","tagname":"property","owner":"android.widget.PopupWindow","id":"property-INPUT_METHOD_FROM_FOCUSABLE","meta":{}},{"name":"INPUT_METHOD_NEEDED","tagname":"property","owner":"android.widget.PopupWindow","id":"property-INPUT_METHOD_NEEDED","meta":{}},{"name":"INPUT_METHOD_NOT_NEEDED","tagname":"property","owner":"android.widget.PopupWindow","id":"property-INPUT_METHOD_NOT_NEEDED","meta":{}},{"name":"dismiss","tagname":"method","owner":"android.widget.PopupWindow","id":"method-dismiss","meta":{}},{"name":"getAnimationStyle","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getAnimationStyle","meta":{}},{"name":"getBackground","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getBackground","meta":{}},{"name":"getContentView","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getContentView","meta":{}},{"name":"getElevation","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getElevation","meta":{}},{"name":"getEnterTransition","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getEnterTransition","meta":{}},{"name":"getEpicenterBounds","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getEpicenterBounds","meta":{}},{"name":"getExitTransition","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getExitTransition","meta":{}},{"name":"getHeight","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getHeight","meta":{}},{"name":"getInputMethodMode","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getInputMethodMode","meta":{}},{"name":"getMaxAvailableHeight","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getMaxAvailableHeight","meta":{}},{"name":"getOverlapAnchor","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getOverlapAnchor","meta":{}},{"name":"getSoftInputMode","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getSoftInputMode","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getWidth","meta":{}},{"name":"getWindowLayoutType","tagname":"method","owner":"android.widget.PopupWindow","id":"method-getWindowLayoutType","meta":{}},{"name":"isAboveAnchor","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isAboveAnchor","meta":{}},{"name":"isAttachedInDecor","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isAttachedInDecor","meta":{}},{"name":"isClipToScreenEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isClipToScreenEnabled","meta":{"deprecated":{"text":"<p>Use isClippedToScreen() instead</p>\n"},"removed":{"text":"\n"}}},{"name":"isClippedToScreen","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isClippedToScreen","meta":{}},{"name":"isClippingEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isClippingEnabled","meta":{}},{"name":"isFocusable","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isFocusable","meta":{}},{"name":"isLaidOutInScreen","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isLaidOutInScreen","meta":{}},{"name":"isLayoutInScreenEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isLayoutInScreenEnabled","meta":{"deprecated":{"text":"<p>Use isLaidOutInScreen() instead</p>\n"},"removed":{"text":"\n"}}},{"name":"isOutsideTouchable","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isOutsideTouchable","meta":{}},{"name":"isShowing","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isShowing","meta":{}},{"name":"isSplitTouchEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isSplitTouchEnabled","meta":{}},{"name":"isTouchModal","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isTouchModal","meta":{}},{"name":"isTouchable","tagname":"method","owner":"android.widget.PopupWindow","id":"method-isTouchable","meta":{}},{"name":"setAnimationStyle","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setAnimationStyle","meta":{}},{"name":"setAttachedInDecor","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setAttachedInDecor","meta":{}},{"name":"setBackgroundDrawable","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setBackgroundDrawable","meta":{}},{"name":"setClipToScreenEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setClipToScreenEnabled","meta":{"deprecated":{"text":"<p>Use setIsClippedToScreen(boolean) instead</p>\n"},"removed":{"text":"\n"}}},{"name":"setClippingEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setClippingEnabled","meta":{}},{"name":"setContentView","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setContentView","meta":{}},{"name":"setElevation","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setElevation","meta":{}},{"name":"setEnterTransition","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setEnterTransition","meta":{}},{"name":"setEpicenterBounds","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setEpicenterBounds","meta":{}},{"name":"setExitTransition","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setExitTransition","meta":{}},{"name":"setFocusable","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setFocusable","meta":{}},{"name":"setHeight","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setHeight","meta":{}},{"name":"setIgnoreCheekPress","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setIgnoreCheekPress","meta":{}},{"name":"setInputMethodMode","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setInputMethodMode","meta":{}},{"name":"setIsClippedToScreen","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setIsClippedToScreen","meta":{}},{"name":"setIsLaidOutInScreen","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setIsLaidOutInScreen","meta":{}},{"name":"setLayoutInScreenEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setLayoutInScreenEnabled","meta":{"deprecated":{"text":"<p>Use setIsLaidOutInScreen(boolean) instead</p>\n"},"removed":{"text":"\n"}}},{"name":"setOnDismissListener","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setOnDismissListener","meta":{}},{"name":"setOutsideTouchable","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setOutsideTouchable","meta":{}},{"name":"setOverlapAnchor","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setOverlapAnchor","meta":{}},{"name":"setSoftInputMode","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setSoftInputMode","meta":{}},{"name":"setSplitTouchEnabled","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setSplitTouchEnabled","meta":{}},{"name":"setTouchInterceptor","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setTouchInterceptor","meta":{}},{"name":"setTouchModal","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setTouchModal","meta":{}},{"name":"setTouchable","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setTouchable","meta":{}},{"name":"setWidth","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setWidth","meta":{}},{"name":"setWindowLayoutMode","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setWindowLayoutMode","meta":{"deprecated":{"text":"<p>Use setWidth(int) and setHeight(int).</p>\n"}}},{"name":"setWindowLayoutType","tagname":"method","owner":"android.widget.PopupWindow","id":"method-setWindowLayoutType","meta":{}},{"name":"showAsDropDown","tagname":"method","owner":"android.widget.PopupWindow","id":"method-showAsDropDown","meta":{}},{"name":"update","tagname":"method","owner":"android.widget.PopupWindow","id":"method-update","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.widget.PopupWindow","short_doc":"This class represents a popup window that can be used to display an\n arbitrary view. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.widget.PopupWindow</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PopupWindow.html#android-widget-PopupWindow' target='_blank'>PopupWindow.js</a></div></pre><div class='doc-contents'><p>\n This class represents a popup window that can be used to display an\n arbitrary view. The popup window is a floating container that appears on top\n of the current activity.\n </p>\n\n\n<p> <a name=\"Animation\"></a>\n <h3>Animation</h3>\n <p>\n On all versions of Android, popup window enter and exit animations may be\n specified by calling <a href=\"#!/api/android.widget.PopupWindow-method-setAnimationStyle\" rel=\"android.widget.PopupWindow-method-setAnimationStyle\" class=\"docClass\">setAnimationStyle</a>(int) and passing the\n resource ID for an animation style that defines {@code windowEnterAnimation}\n and {@code windowExitAnimation}. For example, passing\n android.R.style.Animation_Dialog will give a scale and alpha\n animation.\n \n A window animation style may also be specified in the popup window's style\n XML via the popupAnimationStyle\n attribute.\n </p>\n <p>\n Starting with API 23, more complex popup window enter and exit transitions\n may be specified by calling either <a href=\"#!/api/android.widget.PopupWindow-method-setEnterTransition\" rel=\"android.widget.PopupWindow-method-setEnterTransition\" class=\"docClass\">setEnterTransition</a>(Transition)\n or <a href=\"#!/api/android.widget.PopupWindow-method-setExitTransition\" rel=\"android.widget.PopupWindow-method-setExitTransition\" class=\"docClass\">setExitTransition</a>(Transition) and passing a  Transition.\n \n Popup enter and exit transitions may also be specified in the popup window's\n style XML via the popupEnterTransition\n and popupExitTransition\n attributes, respectively.\n </p></p>\n\n<p> @attr ref android.R.styleable#PopupWindow_overlapAnchor\n @attr ref android.R.styleable#PopupWindow_popupAnimationStyle\n @attr ref android.R.styleable#PopupWindow_popupBackground\n @attr ref android.R.styleable#PopupWindow_popupElevation\n @attr ref android.R.styleable#PopupWindow_popupEnterTransition\n @attr ref android.R.styleable#PopupWindow_popupExitTransition</p>\n\n<p> @see <a href=\"#!/api/android.widget.AutoCompleteTextView\" rel=\"android.widget.AutoCompleteTextView\" class=\"docClass\">android.widget.AutoCompleteTextView</a>\n @see <a href=\"#!/api/android.widget.Spinner\" rel=\"android.widget.Spinner\" class=\"docClass\">android.widget.Spinner</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-INPUT_METHOD_FROM_FOCUSABLE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-property-INPUT_METHOD_FROM_FOCUSABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-property-INPUT_METHOD_FROM_FOCUSABLE' class='name expandable'>INPUT_METHOD_FROM_FOCUSABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Mode for setInputMethodMode(int): the requirements for the\ninput method should be based on the focusability of the po...</div><div class='long'><p>Mode for <a href=\"#!/api/android.widget.PopupWindow-method-setInputMethodMode\" rel=\"android.widget.PopupWindow-method-setInputMethodMode\" class=\"docClass\">setInputMethodMode</a>(int): the requirements for the\ninput method should be based on the focusability of the popup.  That is\nif it is focusable than it needs to work with the input method, else\nit doesn't.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-INPUT_METHOD_NEEDED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-property-INPUT_METHOD_NEEDED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-property-INPUT_METHOD_NEEDED' class='name expandable'>INPUT_METHOD_NEEDED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Mode for setInputMethodMode(int): this popup always needs to\nwork with an input method, regardless of whether it is f...</div><div class='long'><p>Mode for <a href=\"#!/api/android.widget.PopupWindow-method-setInputMethodMode\" rel=\"android.widget.PopupWindow-method-setInputMethodMode\" class=\"docClass\">setInputMethodMode</a>(int): this popup always needs to\nwork with an input method, regardless of whether it is focusable.  This\nmeans that it will always be displayed so that the user can also operate\nthe input method while it is shown.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-INPUT_METHOD_NOT_NEEDED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-property-INPUT_METHOD_NOT_NEEDED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-property-INPUT_METHOD_NOT_NEEDED' class='name expandable'>INPUT_METHOD_NOT_NEEDED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Mode for setInputMethodMode(int): this popup never needs to\nwork with an input method, regardless of whether it is fo...</div><div class='long'><p>Mode for <a href=\"#!/api/android.widget.PopupWindow-method-setInputMethodMode\" rel=\"android.widget.PopupWindow-method-setInputMethodMode\" class=\"docClass\">setInputMethodMode</a>(int): this popup never needs to\nwork with an input method, regardless of whether it is focusable.  This\nmeans that it will always be displayed to use as much space on the\nscreen as needed, regardless of whether this covers the input method.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dismiss' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-dismiss' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-dismiss' class='name expandable'>dismiss</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Disposes of the popup window. ...</div><div class='long'><p>Disposes of the popup window. This method can be invoked only after\n showAsDropDown(android.view.View) has been executed. Failing\n that, calling this method will have no effect.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-showAsDropDown\" rel=\"android.widget.PopupWindow-method-showAsDropDown\" class=\"docClass\">showAsDropDown</a>(android.view.View)</p>\n</div></div></div><div id='method-getAnimationStyle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getAnimationStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getAnimationStyle' class='name expandable'>getAnimationStyle</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the animation style to use the popup appears and disappears ...</div><div class='long'><p>Return the animation style to use the popup appears and disappears</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the animation style to use the popup appears and disappears</p>\n</div></li></ul></div></div></div><div id='method-getBackground' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getBackground' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getBackground' class='name expandable'>getBackground</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the drawable used as the popup window's background. ...</div><div class='long'><p>Return the drawable used as the popup window's background.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>the background drawable or {@code null} if not set\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setBackgroundDrawable\" rel=\"android.widget.PopupWindow-method-setBackgroundDrawable\" class=\"docClass\">setBackgroundDrawable</a>(Drawable)\n@attr ref android.R.styleable#PopupWindow_popupBackground</p>\n</div></li></ul></div></div></div><div id='method-getContentView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getContentView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getContentView' class='name expandable'>getContentView</a>( <span class='pre'></span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the view used as the content of the popup window. ...</div><div class='long'><p>Return the view used as the content of the popup window.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>a android.view.View representing the popup's content\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setContentView\" rel=\"android.widget.PopupWindow-method-setContentView\" class=\"docClass\">setContentView</a>(android.view.View)</p>\n</div></li></ul></div></div></div><div id='method-getElevation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getElevation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getElevation' class='name expandable'>getElevation</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the elevation for this popup window in pixels\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setElevation\" rel=\"android.widget.PopupWindow-method-setElevation\" class=\"docClass\">setElevation</a>(float)\n@attr ref android.R.styleable#PopupWindow_popupElevation</p>\n</div></li></ul></div></div></div><div id='method-getEnterTransition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getEnterTransition' class='name expandable'>getEnterTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the enter transition to be used when the popup window is shown. ...</div><div class='long'><p>Returns the enter transition to be used when the popup window is shown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>the enter transition, or {@code null} if not set\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setEnterTransition\" rel=\"android.widget.PopupWindow-method-setEnterTransition\" class=\"docClass\">setEnterTransition</a>(Transition)\n@attr ref android.R.styleable#PopupWindow_popupEnterTransition</p>\n</div></li></ul></div></div></div><div id='method-getEpicenterBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getEpicenterBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getEpicenterBounds' class='name expandable'>getEpicenterBounds</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns bounds which are used as a center of the enter and exit transitions. ...</div><div class='long'><p><p>Returns bounds which are used as a center of the enter and exit transitions.<p/></p>\n\n<p> <p>Transitions use Rect, referred to as the epicenter, to orient\n the direction of travel. For popup windows, the anchor view bounds are\n used as the default epicenter.</p></p>\n\n<p> <p>See Transition.setEpicenterCallback(EpicenterCallback) for more\n information about how transition epicenters work.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>bounds relative to anchor view, or {@code null} if not set\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setEpicenterBounds\" rel=\"android.widget.PopupWindow-method-setEpicenterBounds\" class=\"docClass\">setEpicenterBounds</a>(Rect)</p>\n</div></li></ul></div></div></div><div id='method-getExitTransition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getExitTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getExitTransition' class='name expandable'>getExitTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the exit transition to be used when the popup window is\n dismissed. ...</div><div class='long'><p>Returns the exit transition to be used when the popup window is\n dismissed.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>the exit transition, or {@code null} if not set\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setExitTransition\" rel=\"android.widget.PopupWindow-method-setExitTransition\" class=\"docClass\">setExitTransition</a>(Transition)\n@attr ref android.R.styleable#PopupWindow_popupExitTransition</p>\n</div></li></ul></div></div></div><div id='method-getHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getHeight' class='name expandable'>getHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the popup's requested height. ...</div><div class='long'><p>Returns the popup's requested height. May be a layout constant such as\n android.widget.AbsListView.LayoutParams.WRAP_CONTENT or android.widget.AbsListView.LayoutParams.MATCH_PARENT.\n <p>\n The actual size of the popup may depend on other factors such as\n clipping and window layout.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the popup height in pixels or a layout constant\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setHeight\" rel=\"android.widget.PopupWindow-method-setHeight\" class=\"docClass\">setHeight</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getInputMethodMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getInputMethodMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getInputMethodMode' class='name expandable'>getInputMethodMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the current value in setInputMethodMode(int). ...</div><div class='long'><p>Return the current value in <a href=\"#!/api/android.widget.PopupWindow-method-setInputMethodMode\" rel=\"android.widget.PopupWindow-method-setInputMethodMode\" class=\"docClass\">setInputMethodMode</a>(int).\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setInputMethodMode\" rel=\"android.widget.PopupWindow-method-setInputMethodMode\" class=\"docClass\">setInputMethodMode</a>(int)</p>\n</div></div></div><div id='method-getMaxAvailableHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getMaxAvailableHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getMaxAvailableHeight' class='name expandable'>getMaxAvailableHeight</a>( <span class='pre'>anchor, yOffset, ignoreBottomDecorations</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the maximum height that is available for the popup to be\n completely shown, optionally ignoring any bottom de...</div><div class='long'><p>Returns the maximum height that is available for the popup to be\n completely shown, optionally ignoring any bottom decorations such as\n the input method. It is recommended that this height be the maximum for\n the popup's height, otherwise it is possible that the popup will be\n clipped.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>anchor</span> : Object {View}<div class='sub-desc'><p>The view on which the popup window must be anchored.</p>\n</div></li><li><span class='pre'>yOffset</span> : Number<div class='sub-desc'><p>y offset from the view's bottom edge</p>\n</div></li><li><span class='pre'>ignoreBottomDecorations</span> : Boolean<div class='sub-desc'><p>if true, the height returned will be\n        all the way to the bottom of the display, ignoring any\n        bottom decorations</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The maximum available height for the popup to be completely\n         shown.</p>\n</div></li></ul></div></div></div><div id='method-getOverlapAnchor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getOverlapAnchor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getOverlapAnchor' class='name expandable'>getOverlapAnchor</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the popup window should overlap its anchor view when\n displayed as a drop-down. ...</div><div class='long'><p>Returns whether the popup window should overlap its anchor view when\n displayed as a drop-down.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the popup should overlap its anchor.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setOverlapAnchor\" rel=\"android.widget.PopupWindow-method-setOverlapAnchor\" class=\"docClass\">setOverlapAnchor</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-getSoftInputMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getSoftInputMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getSoftInputMode' class='name expandable'>getSoftInputMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current value in setSoftInputMode(int). ...</div><div class='long'><p>Returns the current value in <a href=\"#!/api/android.widget.PopupWindow-method-setSoftInputMode\" rel=\"android.widget.PopupWindow-method-setSoftInputMode\" class=\"docClass\">setSoftInputMode</a>(int).\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setSoftInputMode\" rel=\"android.widget.PopupWindow-method-setSoftInputMode\" class=\"docClass\">setSoftInputMode</a>(int)\n@see android.view.WindowManager.LayoutParams#softInputMode</p>\n</div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the popup's requested width. ...</div><div class='long'><p>Returns the popup's requested width. May be a layout constant such as\n android.widget.AbsListView.LayoutParams.WRAP_CONTENT or android.widget.AbsListView.LayoutParams.MATCH_PARENT.\n <p>\n The actual size of the popup may depend on other factors such as\n clipping and window layout.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the popup width in pixels or a layout constant\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setWidth\" rel=\"android.widget.PopupWindow-method-setWidth\" class=\"docClass\">setWidth</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getWindowLayoutType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-getWindowLayoutType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-getWindowLayoutType' class='name expandable'>getWindowLayoutType</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the layout type for this window. ...</div><div class='long'><p>Returns the layout type for this window.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setWindowLayoutType\" rel=\"android.widget.PopupWindow-method-setWindowLayoutType\" class=\"docClass\">setWindowLayoutType</a>(int)</p>\n</div></div></div><div id='method-isAboveAnchor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isAboveAnchor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isAboveAnchor' class='name expandable'>isAboveAnchor</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the popup is showing above (the y coordinate of the popup's bottom\n is less than the y coordinate o...</div><div class='long'><p>Indicates whether the popup is showing above (the y coordinate of the popup's bottom\n is less than the y coordinate of the anchor) or below the anchor view (the y coordinate\n of the popup is greater than y coordinate of the anchor's bottom).</p>\n\n<p> The value returned\n by this method is meaningful only after showAsDropDown(android.view.View)\n or int, int) was invoked.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this popup is showing above the anchor view, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isAttachedInDecor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isAttachedInDecor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isAttachedInDecor' class='name expandable'>isAttachedInDecor</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the popup window will be attached in the decor frame of its parent\n window. ...</div><div class='long'><p><p>Indicates whether the popup window will be attached in the decor frame of its parent\n window.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the window will be attached to the decor frame of its parent window.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setAttachedInDecor\" rel=\"android.widget.PopupWindow-method-setAttachedInDecor\" class=\"docClass\">setAttachedInDecor</a>(boolean)\n@see WindowManager.LayoutParams#FLAG_LAYOUT_ATTACHED_IN_DECOR</p>\n</div></li></ul></div></div></div><div id='method-isClipToScreenEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isClipToScreenEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isClipToScreenEnabled' class='name expandable'>isClipToScreenEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Indicates whether this popup will be clipped to the screen and not to the\n containing window ...</div><div class='long'><p><p>Indicates whether this popup will be clipped to the screen and not to the\n containing window<p/></p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use isClippedToScreen() instead</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if popup will be clipped to the screen instead of the window, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-isClippedToScreen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isClippedToScreen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isClippedToScreen' class='name expandable'>isClippedToScreen</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether this popup will be clipped to the screen and not to the\n containing window ...</div><div class='long'><p><p>Indicates whether this popup will be clipped to the screen and not to the\n containing window<p/></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if popup will be clipped to the screen instead of the window, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setIsClippedToScreen\" rel=\"android.widget.PopupWindow-method-setIsClippedToScreen\" class=\"docClass\">setIsClippedToScreen</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isClippingEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isClippingEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isClippingEnabled' class='name expandable'>isClippingEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether clipping of the popup window is enabled. ...</div><div class='long'><p>Indicates whether clipping of the popup window is enabled.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the clipping is enabled, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setClippingEnabled\" rel=\"android.widget.PopupWindow-method-setClippingEnabled\" class=\"docClass\">setClippingEnabled</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isFocusable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isFocusable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isFocusable' class='name expandable'>isFocusable</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate whether the popup window can grab the focus. ...</div><div class='long'><p>Indicate whether the popup window can grab the focus.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the popup is focusable, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setFocusable\" rel=\"android.widget.PopupWindow-method-setFocusable\" class=\"docClass\">setFocusable</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isLaidOutInScreen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isLaidOutInScreen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isLaidOutInScreen' class='name expandable'>isLaidOutInScreen</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the popup window will be forced into using absolute screen coordinates\n for positioning. ...</div><div class='long'><p>Indicates whether the popup window will be forced into using absolute screen coordinates\n for positioning.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the window will always be positioned in screen coordinates.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setIsLaidOutInScreen\" rel=\"android.widget.PopupWindow-method-setIsLaidOutInScreen\" class=\"docClass\">setIsLaidOutInScreen</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isLayoutInScreenEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isLayoutInScreenEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isLayoutInScreenEnabled' class='name expandable'>isLayoutInScreenEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Indicates whether the popup window will be forced into using absolute screen coordinates\n for positioning. ...</div><div class='long'><p>Indicates whether the popup window will be forced into using absolute screen coordinates\n for positioning.</p>\n\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use isLaidOutInScreen() instead</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the window will always be positioned in screen coordinates.</p>\n</div></li></ul></div></div></div><div id='method-isOutsideTouchable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isOutsideTouchable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isOutsideTouchable' class='name expandable'>isOutsideTouchable</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the popup window will be informed of touch events\n outside of its window. ...</div><div class='long'><p>Indicates whether the popup window will be informed of touch events\n outside of its window.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the popup is outside touchable, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setOutsideTouchable\" rel=\"android.widget.PopupWindow-method-setOutsideTouchable\" class=\"docClass\">setOutsideTouchable</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isShowing' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isShowing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isShowing' class='name expandable'>isShowing</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicate whether this popup window is showing on screen. ...</div><div class='long'><p>Indicate whether this popup window is showing on screen.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the popup is showing, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-isSplitTouchEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isSplitTouchEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isSplitTouchEnabled' class='name expandable'>isSplitTouchEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the popup window supports splitting touches. ...</div><div class='long'><p>Indicates whether the popup window supports splitting touches.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the touch splitting is enabled, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setSplitTouchEnabled\" rel=\"android.widget.PopupWindow-method-setSplitTouchEnabled\" class=\"docClass\">setSplitTouchEnabled</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isTouchModal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isTouchModal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isTouchModal' class='name expandable'>isTouchModal</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether outside touches will be sent to this window\n or other windows behind it ...</div><div class='long'><p><p>Indicates whether outside touches will be sent to this window\n or other windows behind it<p/></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if touches will be sent to this window, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setTouchModal\" rel=\"android.widget.PopupWindow-method-setTouchModal\" class=\"docClass\">setTouchModal</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-isTouchable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-isTouchable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-isTouchable' class='name expandable'>isTouchable</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates whether the popup window receives touch events. ...</div><div class='long'><p>Indicates whether the popup window receives touch events.</p>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the popup is touchable, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-setTouchable\" rel=\"android.widget.PopupWindow-method-setTouchable\" class=\"docClass\">setTouchable</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-setAnimationStyle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setAnimationStyle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setAnimationStyle' class='name expandable'>setAnimationStyle</a>( <span class='pre'>animationStyle</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the animation style resource for this popup. ...</div><div class='long'><p>Change the animation style resource for this popup.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>animationStyle</span> : Number<div class='sub-desc'><p>animation style to use when the popup appears\n      and disappears.  Set to -1 for the default animation, 0 for no\n      animation, or a resource identifier for an explicit animation.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>()</p>\n</div></li></ul></div></div></div><div id='method-setAttachedInDecor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setAttachedInDecor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setAttachedInDecor' class='name expandable'>setAttachedInDecor</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This will attach the popup window to the decor frame of the parent window to avoid\n overlaping with screen decoration...</div><div class='long'><p><p>This will attach the popup window to the decor frame of the parent window to avoid\n overlaping with screen decorations like the navigation bar. Overrides the default behavior of\n the flag WindowManager.LayoutParams.FLAG_LAYOUT_ATTACHED_IN_DECOR.</p>\n\n<p> <p>By default the flag is set on SDK version Build.VERSION_CODES.LOLLIPOP_MR1 or\n greater and cleared on lesser SDK versions.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true if the popup should be attached to the decor frame of its parent window.\n@see WindowManager.LayoutParams#FLAG_LAYOUT_ATTACHED_IN_DECOR</p>\n</div></li></ul></div></div></div><div id='method-setBackgroundDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setBackgroundDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setBackgroundDrawable' class='name expandable'>setBackgroundDrawable</a>( <span class='pre'>background</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies the background drawable for this popup window. ...</div><div class='long'><p>Specifies the background drawable for this popup window. The background\n can be set to {@code null}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>background</span> : Object {Drawable}<div class='sub-desc'><p>the popup's background\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getBackground\" rel=\"android.widget.PopupWindow-method-getBackground\" class=\"docClass\">getBackground</a>()\n@attr ref android.R.styleable#PopupWindow_popupBackground</p>\n</div></li></ul></div></div></div><div id='method-setClipToScreenEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setClipToScreenEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setClipToScreenEnabled' class='name expandable'>setClipToScreenEnabled</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Clip this popup window to the screen, but not to the containing window. ...</div><div class='long'><p>Clip this popup window to the screen, but not to the containing window.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use setIsClippedToScreen(boolean) instead</p>\n\n        </div>\n</div></div></div><div id='method-setClippingEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setClippingEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setClippingEnabled' class='name expandable'>setClippingEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows the popup window to extend beyond the bounds of the screen. ...</div><div class='long'><p>Allows the popup window to extend beyond the bounds of the screen. By default the\n window is clipped to the screen boundaries. Setting this to false will allow windows to be\n accurately positioned.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>false if the window should be allowed to extend outside of the screen\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isClippingEnabled\" rel=\"android.widget.PopupWindow-method-isClippingEnabled\" class=\"docClass\">isClippingEnabled</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>()</p>\n</div></li></ul></div></div></div><div id='method-setContentView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setContentView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setContentView' class='name expandable'>setContentView</a>( <span class='pre'>contentView</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the popup's content. ...</div><div class='long'><p>Change the popup's content. The content is represented by an instance\n of android.view.View.</p>\n\n\n<p> <p>This method has no effect if called when the popup is showing.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>contentView</span> : Object {View}<div class='sub-desc'><p>the new content for the popup\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getContentView\" rel=\"android.widget.PopupWindow-method-getContentView\" class=\"docClass\">getContentView</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()</p>\n</div></li></ul></div></div></div><div id='method-setElevation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setElevation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setElevation' class='name expandable'>setElevation</a>( <span class='pre'>elevation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies the elevation for this popup window. ...</div><div class='long'><p>Specifies the elevation for this popup window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elevation</span> : Number<div class='sub-desc'><p>the popup's elevation in pixels\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getElevation\" rel=\"android.widget.PopupWindow-method-getElevation\" class=\"docClass\">getElevation</a>()\n@attr ref android.R.styleable#PopupWindow_popupElevation</p>\n</div></li></ul></div></div></div><div id='method-setEnterTransition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setEnterTransition' class='name expandable'>setEnterTransition</a>( <span class='pre'>enterTransition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the enter transition to be used when the popup window is shown. ...</div><div class='long'><p>Sets the enter transition to be used when the popup window is shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enterTransition</span> : Object {Transition}<div class='sub-desc'><p>the enter transition, or {@code null} to clear\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getEnterTransition\" rel=\"android.widget.PopupWindow-method-getEnterTransition\" class=\"docClass\">getEnterTransition</a>()\n@attr ref android.R.styleable#PopupWindow_popupEnterTransition</p>\n</div></li></ul></div></div></div><div id='method-setEpicenterBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setEpicenterBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setEpicenterBounds' class='name expandable'>setEpicenterBounds</a>( <span class='pre'>bounds</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the bounds used as the epicenter of the enter and exit transitions. ...</div><div class='long'><p>Sets the bounds used as the epicenter of the enter and exit transitions.</p>\n\n\n<p> <p>Transitions use Rect, referred to as the epicenter, to orient\n the direction of travel. For popup windows, the anchor view bounds are\n used as the default epicenter.</p></p>\n\n<p> <p>See Transition.setEpicenterCallback(EpicenterCallback) for more\n information about how transition epicenters work.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bounds</span> : Object {Rect}<div class='sub-desc'><p>the epicenter bounds relative to the anchor view, or\n               {@code null} to use the default epicenter\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getEpicenterBounds\" rel=\"android.widget.PopupWindow-method-getEpicenterBounds\" class=\"docClass\">getEpicenterBounds</a>()</p>\n</div></li></ul></div></div></div><div id='method-setExitTransition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setExitTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setExitTransition' class='name expandable'>setExitTransition</a>( <span class='pre'>exitTransition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the exit transition to be used when the popup window is dismissed. ...</div><div class='long'><p>Sets the exit transition to be used when the popup window is dismissed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>exitTransition</span> : Object {Transition}<div class='sub-desc'><p>the exit transition, or {@code null} to clear\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getExitTransition\" rel=\"android.widget.PopupWindow-method-getExitTransition\" class=\"docClass\">getExitTransition</a>()\n@attr ref android.R.styleable#PopupWindow_popupExitTransition</p>\n</div></li></ul></div></div></div><div id='method-setFocusable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setFocusable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setFocusable' class='name expandable'>setFocusable</a>( <span class='pre'>focusable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes the focusability of the popup window. ...</div><div class='long'><p>Changes the focusability of the popup window. When focusable, the\n window will grab the focus from the current focused widget if the popup\n contains a focusable android.view.View.  By default a popup\n window is not focusable.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>focusable</span> : Boolean<div class='sub-desc'><p>true if the popup should grab focus, false otherwise.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isFocusable\" rel=\"android.widget.PopupWindow-method-isFocusable\" class=\"docClass\">isFocusable</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>()</p>\n</div></li></ul></div></div></div><div id='method-setHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setHeight' class='name expandable'>setHeight</a>( <span class='pre'>height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the popup's requested height. ...</div><div class='long'><p>Sets the popup's requested height. May be a layout constant such as\n android.widget.AbsListView.LayoutParams.WRAP_CONTENT or android.widget.AbsListView.LayoutParams.MATCH_PARENT.\n <p>\n The actual size of the popup may depend on other factors such as\n clipping and window layout.\n <p>\n If the popup is showing, calling this method will take effect the next\n time the popup is shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the popup height in pixels or a layout constant\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getHeight\" rel=\"android.widget.PopupWindow-method-getHeight\" class=\"docClass\">getHeight</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()</p>\n</div></li></ul></div></div></div><div id='method-setIgnoreCheekPress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setIgnoreCheekPress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setIgnoreCheekPress' class='name expandable'>setIgnoreCheekPress</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the flag on popup to ignore cheek press events; by default this flag\n is set to false\n which means the popup will...</div><div class='long'><p>Set the flag on popup to ignore cheek press events; by default this flag\n is set to false\n which means the popup will not ignore cheek press dispatch events.</p>\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p>\n@see <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>()</p>\n</div></div></div><div id='method-setInputMethodMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setInputMethodMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setInputMethodMode' class='name expandable'>setInputMethodMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control how the popup operates with an input method: one of\n INPUT_METHOD_FROM_FOCUSABLE, INPUT_METHOD_NEEDED,\n or IN...</div><div class='long'><p>Control how the popup operates with an input method: one of\n <a href=\"#!/api/android.widget.PopupWindow-property-INPUT_METHOD_FROM_FOCUSABLE\" rel=\"android.widget.PopupWindow-property-INPUT_METHOD_FROM_FOCUSABLE\" class=\"docClass\">INPUT_METHOD_FROM_FOCUSABLE</a>, <a href=\"#!/api/android.widget.PopupWindow-property-INPUT_METHOD_NEEDED\" rel=\"android.widget.PopupWindow-property-INPUT_METHOD_NEEDED\" class=\"docClass\">INPUT_METHOD_NEEDED</a>,\n or <a href=\"#!/api/android.widget.PopupWindow-property-INPUT_METHOD_NOT_NEEDED\" rel=\"android.widget.PopupWindow-property-INPUT_METHOD_NOT_NEEDED\" class=\"docClass\">INPUT_METHOD_NOT_NEEDED</a>.</p>\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p>\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getInputMethodMode\" rel=\"android.widget.PopupWindow-method-getInputMethodMode\" class=\"docClass\">getInputMethodMode</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>()</p>\n</div></div></div><div id='method-setIsClippedToScreen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setIsClippedToScreen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setIsClippedToScreen' class='name expandable'>setIsClippedToScreen</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clip this popup window to the screen, but not to the containing window. ...</div><div class='long'><p>Clip this popup window to the screen, but not to the containing window.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true to clip to the screen.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isClippedToScreen\" rel=\"android.widget.PopupWindow-method-isClippedToScreen\" class=\"docClass\">isClippedToScreen</a>()</p>\n</div></li></ul></div></div></div><div id='method-setIsLaidOutInScreen' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setIsLaidOutInScreen' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setIsLaidOutInScreen' class='name expandable'>setIsLaidOutInScreen</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows the popup window to force the flag\n WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN, overriding default behav...</div><div class='long'><p>Allows the popup window to force the flag\n WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN, overriding default behavior.\n This will cause the popup to be positioned in absolute screen coordinates.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true if the popup should always be positioned in screen coordinates\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isLaidOutInScreen\" rel=\"android.widget.PopupWindow-method-isLaidOutInScreen\" class=\"docClass\">isLaidOutInScreen</a>()</p>\n</div></li></ul></div></div></div><div id='method-setLayoutInScreenEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setLayoutInScreenEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setLayoutInScreenEnabled' class='name expandable'>setLayoutInScreenEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='removed' >removed</span></span></div><div class='description'><div class='short'>Allows the popup window to force the flag\n WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN, overriding default behav...</div><div class='long'><p>Allows the popup window to force the flag\n WindowManager.LayoutParams.FLAG_LAYOUT_IN_SCREEN, overriding default behavior.\n This will cause the popup to be positioned in absolute screen coordinates.</p>\n\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use setIsLaidOutInScreen(boolean) instead</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true if the popup should always be positioned in screen coordinates</p>\n</div></li></ul></div></div></div><div id='method-setOnDismissListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setOnDismissListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setOnDismissListener' class='name expandable'>setOnDismissListener</a>( <span class='pre'>onDismissListener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the listener to be called when the window is dismissed. ...</div><div class='long'><p>Sets the listener to be called when the window is dismissed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>onDismissListener</span> : Object {PopupWindow.OnDismissListener}<div class='sub-desc'><p>The listener.</p>\n</div></li></ul></div></div></div><div id='method-setOutsideTouchable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setOutsideTouchable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setOutsideTouchable' class='name expandable'>setOutsideTouchable</a>( <span class='pre'>touchable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Controls whether the pop-up will be informed of touch events outside\n of its window. ...</div><div class='long'><p>Controls whether the pop-up will be informed of touch events outside\n of its window.  This only makes sense for pop-ups that are touchable\n but not focusable, which means touches outside of the window will\n be delivered to the window behind.  The default is false.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>touchable</span> : Boolean<div class='sub-desc'><p>true if the popup should receive outside\n touch events, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isOutsideTouchable\" rel=\"android.widget.PopupWindow-method-isOutsideTouchable\" class=\"docClass\">isOutsideTouchable</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>()</p>\n</div></li></ul></div></div></div><div id='method-setOverlapAnchor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setOverlapAnchor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setOverlapAnchor' class='name expandable'>setOverlapAnchor</a>( <span class='pre'>overlapAnchor</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the popup window should overlap its anchor view when\n displayed as a drop-down. ...</div><div class='long'><p>Sets whether the popup window should overlap its anchor view when\n displayed as a drop-down.\n <p>\n If the popup is showing, calling this method will take effect only\n the next time the popup is shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>overlapAnchor</span> : Boolean<div class='sub-desc'><p>Whether the popup should overlap its anchor.\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getOverlapAnchor\" rel=\"android.widget.PopupWindow-method-getOverlapAnchor\" class=\"docClass\">getOverlapAnchor</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()</p>\n</div></li></ul></div></div></div><div id='method-setSoftInputMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setSoftInputMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setSoftInputMode' class='name expandable'>setSoftInputMode</a>( <span class='pre'>mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the operating mode for the soft input area. ...</div><div class='long'><p>Sets the operating mode for the soft input area.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>The desired mode, see\n        android.view.WindowManager.LayoutParams.softInputMode\n        for the full list\n@see android.view.WindowManager.LayoutParams#softInputMode\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getSoftInputMode\" rel=\"android.widget.PopupWindow-method-getSoftInputMode\" class=\"docClass\">getSoftInputMode</a>()</p>\n</div></li></ul></div></div></div><div id='method-setSplitTouchEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setSplitTouchEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setSplitTouchEnabled' class='name expandable'>setSplitTouchEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows the popup window to split touches across other windows that also\n support split touch. ...</div><div class='long'><p>Allows the popup window to split touches across other windows that also\n support split touch.  When this flag is false, the first pointer\n that goes down determines the window to which all subsequent touches\n go until all pointers go up.  When this flag is true, each pointer\n (not necessarily the first) that goes down determines the window\n to which all subsequent touches of that pointer will go until that\n pointer goes up thereby enabling touches with multiple pointers\n to be split across multiple windows.</p>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>true if the split touches should be enabled, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isSplitTouchEnabled\" rel=\"android.widget.PopupWindow-method-isSplitTouchEnabled\" class=\"docClass\">isSplitTouchEnabled</a>()</p>\n</div></li></ul></div></div></div><div id='method-setTouchInterceptor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setTouchInterceptor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setTouchInterceptor' class='name expandable'>setTouchInterceptor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a callback for all touch events being dispatched to the popup\n window. ...</div><div class='long'><p>Set a callback for all touch events being dispatched to the popup\n window.</p>\n</div></div></div><div id='method-setTouchModal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setTouchModal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setTouchModal' class='name expandable'>setTouchModal</a>( <span class='pre'>touchModal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set whether this window is touch modal or if outside touches will be sent to\n other windows behind it. ...</div><div class='long'><p><p>Set whether this window is touch modal or if outside touches will be sent to\n other windows behind it.<p/></p>\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>touchModal</span> : Boolean<div class='sub-desc'><p>true to sent all outside touches to this window,\n false to other windows behind it\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isTouchModal\" rel=\"android.widget.PopupWindow-method-isTouchModal\" class=\"docClass\">isTouchModal</a>()</p>\n</div></li></ul></div></div></div><div id='method-setTouchable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setTouchable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setTouchable' class='name expandable'>setTouchable</a>( <span class='pre'>touchable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes the touchability of the popup window. ...</div><div class='long'><p>Changes the touchability of the popup window. When touchable, the\n window will receive touch events, otherwise touch events will go to the\n window below it. By default the window is touchable.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown or through a manual call to one of\n the <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>() methods.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>touchable</span> : Boolean<div class='sub-desc'><p>true if the popup should receive touch events, false otherwise\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isTouchable\" rel=\"android.widget.PopupWindow-method-isTouchable\" class=\"docClass\">isTouchable</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>()</p>\n</div></li></ul></div></div></div><div id='method-setWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setWidth' class='name expandable'>setWidth</a>( <span class='pre'>width</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the popup's requested width. ...</div><div class='long'><p>Sets the popup's requested width. May be a layout constant such as\n android.widget.AbsListView.LayoutParams.WRAP_CONTENT or android.widget.AbsListView.LayoutParams.MATCH_PARENT.\n <p>\n The actual size of the popup may depend on other factors such as\n clipping and window layout.\n <p>\n If the popup is showing, calling this method will take effect the next\n time the popup is shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the popup width in pixels or a layout constant\n@see <a href=\"#!/api/android.widget.PopupWindow-method-getWidth\" rel=\"android.widget.PopupWindow-method-getWidth\" class=\"docClass\">getWidth</a>()\n@see <a href=\"#!/api/android.widget.PopupWindow-method-isShowing\" rel=\"android.widget.PopupWindow-method-isShowing\" class=\"docClass\">isShowing</a>()</p>\n</div></li></ul></div></div></div><div id='method-setWindowLayoutMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setWindowLayoutMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setWindowLayoutMode' class='name expandable'>setWindowLayoutMode</a>( <span class='pre'>widthSpec, heightSpec</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Change the width and height measure specs that are given to the\n window manager by the popup. ...</div><div class='long'><p>Change the width and height measure specs that are given to the\n window manager by the popup.  By default these are 0, meaning that\n the current width or height is requested as an explicit size from\n the window manager.  You can supply\n ViewGroup.LayoutParams.WRAP_CONTENT or\n ViewGroup.LayoutParams.MATCH_PARENT to have that measure\n spec supplied instead, replacing the absolute width and height that\n has been set in the popup.</p>\n\n\n<p> <p>If the popup is showing, calling this method will take effect only\n the next time the popup is shown.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use setWidth(int) and setHeight(int).</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>widthSpec</span> : Number<div class='sub-desc'><p>an explicit width measure spec mode, either\n ViewGroup.LayoutParams.WRAP_CONTENT,\n ViewGroup.LayoutParams.MATCH_PARENT, or 0 to use the absolute\n width.</p>\n</div></li><li><span class='pre'>heightSpec</span> : Number<div class='sub-desc'><p>an explicit height measure spec mode, either\n ViewGroup.LayoutParams.WRAP_CONTENT,\n ViewGroup.LayoutParams.MATCH_PARENT, or 0 to use the absolute\n height.</p>\n</div></li></ul></div></div></div><div id='method-setWindowLayoutType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-setWindowLayoutType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-setWindowLayoutType' class='name expandable'>setWindowLayoutType</a>( <span class='pre'>layoutType</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the layout type for this window. ...</div><div class='long'><p>Set the layout type for this window.\n <p>\n See WindowManager.LayoutParams.type for possible values.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>layoutType</span> : Number<div class='sub-desc'><p>Layout type for this window.\n@see WindowManager.LayoutParams#type</p>\n</div></li></ul></div></div></div><div id='method-showAsDropDown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-showAsDropDown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-showAsDropDown' class='name expandable'>showAsDropDown</a>( <span class='pre'>anchor, xoff, yoff, gravity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Displays the content view in a popup window anchored to the corner of\n another view. ...</div><div class='long'><p>Displays the content view in a popup window anchored to the corner of\n another view. The window is positioned according to the specified\n gravity and offset by the specified x and y coordinates.\n <p>\n If there is not enough room on screen to show the popup in its entirety,\n this method tries to find a parent scroll view to scroll. If no parent\n view can be scrolled, the specified vertical gravity will be ignored and\n the popup will anchor itself such that it is visible.\n <p>\n If the view later scrolls to move <code>anchor</code> to a different\n location, the popup will be moved correspondingly.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>anchor</span> : Object {View}<div class='sub-desc'><p>the view on which to pin the popup window</p>\n</div></li><li><span class='pre'>xoff</span> : Number<div class='sub-desc'><p>A horizontal offset from the anchor in pixels</p>\n</div></li><li><span class='pre'>yoff</span> : Number<div class='sub-desc'><p>A vertical offset from the anchor in pixels</p>\n</div></li><li><span class='pre'>gravity</span> : Number<div class='sub-desc'><p>Alignment of the popup relative to the anchor\n@see <a href=\"#!/api/android.widget.PopupWindow-method-dismiss\" rel=\"android.widget.PopupWindow-method-dismiss\" class=\"docClass\">dismiss</a>()</p>\n</div></li></ul></div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.PopupWindow'>android.widget.PopupWindow</span><br/><a href='source/PopupWindow.html#android-widget-PopupWindow-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.PopupWindow-method-update' class='name expandable'>update</a>( <span class='pre'>anchor, xoff, yoff, width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates the position and the dimension of the popup window. ...</div><div class='long'><p>Updates the position and the dimension of the popup window.\n <p>\n Width and height can be set to -1 to update location only. Calling this\n function also updates the window with the current popup state as\n described for <a href=\"#!/api/android.widget.PopupWindow-method-update\" rel=\"android.widget.PopupWindow-method-update\" class=\"docClass\">update</a>().\n <p>\n If the view later scrolls to move {@code anchor} to a different\n location, the popup will be moved correspondingly.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>anchor</span> : Object {View}<div class='sub-desc'><p>the popup's anchor view</p>\n</div></li><li><span class='pre'>xoff</span> : Number<div class='sub-desc'><p>x offset from the view's left edge</p>\n</div></li><li><span class='pre'>yoff</span> : Number<div class='sub-desc'><p>y offset from the view's bottom edge</p>\n</div></li><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the new width in pixels, must be >= 0 or -1 to ignore</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the new height in pixels, must be >= 0 or -1 to ignore</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});