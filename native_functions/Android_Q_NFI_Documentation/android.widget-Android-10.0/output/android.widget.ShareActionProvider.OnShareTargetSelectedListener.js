Ext.data.JsonP.android_widget_ShareActionProvider_OnShareTargetSelectedListener({"tagname":"class","name":"android.widget.ShareActionProvider.OnShareTargetSelectedListener","autodetected":{},"files":[{"filename":"OnShareTargetSelectedListener.js","href":"OnShareTargetSelectedListener.html#android-widget-ShareActionProvider-OnShareTargetSelectedListener"}],"members":[{"name":"onShareTargetSelected","tagname":"method","owner":"android.widget.ShareActionProvider.OnShareTargetSelectedListener","id":"method-onShareTargetSelected","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.widget.ShareActionProvider.OnShareTargetSelectedListener","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnShareTargetSelectedListener.html#android-widget-ShareActionProvider-OnShareTargetSelectedListener' target='_blank'>OnShareTargetSelectedListener.js</a></div></pre><div class='doc-contents'><p>Listener for the event of selecting a share target.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onShareTargetSelected' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ShareActionProvider.OnShareTargetSelectedListener'>android.widget.ShareActionProvider.OnShareTargetSelectedListener</span><br/><a href='source/OnShareTargetSelectedListener.html#android-widget-ShareActionProvider-OnShareTargetSelectedListener-method-onShareTargetSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ShareActionProvider.OnShareTargetSelectedListener-method-onShareTargetSelected' class='name expandable'>onShareTargetSelected</a>( <span class='pre'>source, intent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a share target has been selected. ...</div><div class='long'><p>Called when a share target has been selected. The client can\n decide whether to perform some action before the sharing is\n actually performed.\n <p>\n <strong>Note:</strong> Modifying the intent is not permitted and\n     any changes to the latter will be ignored.\n </p>\n <p>\n <strong>Note:</strong> You should <strong>not</strong> handle the\n     intent here. This callback aims to notify the client that a\n     sharing is being performed, so the client can update the UI\n     if necessary.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {ShareActionProvider}<div class='sub-desc'><p>The source of the notification.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent for launching the chosen share target.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>The return result is ignored. Always return false for consistency.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});