Ext.data.JsonP.android_widget_RemoteViews_RemoteResponse({"tagname":"class","name":"android.widget.RemoteViews.RemoteResponse","autodetected":{},"files":[{"filename":"RemoteResponse.js","href":"RemoteResponse.html#android-widget-RemoteViews-RemoteResponse"}],"extends":"java.lang.Object","members":[{"name":"addSharedElement","tagname":"method","owner":"android.widget.RemoteViews.RemoteResponse","id":"method-addSharedElement","meta":{}},{"name":"fromFillInIntent","tagname":"method","owner":"android.widget.RemoteViews.RemoteResponse","id":"method-fromFillInIntent","meta":{}},{"name":"fromPendingIntent","tagname":"method","owner":"android.widget.RemoteViews.RemoteResponse","id":"method-fromPendingIntent","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.widget.RemoteViews.RemoteResponse","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.widget.RemoteViews.RemoteResponse</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RemoteResponse.html#android-widget-RemoteViews-RemoteResponse' target='_blank'>RemoteResponse.js</a></div></pre><div class='doc-contents'><p>Class representing a response to an action performed on any element of a RemoteViews.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addSharedElement' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.RemoteViews.RemoteResponse'>android.widget.RemoteViews.RemoteResponse</span><br/><a href='source/RemoteResponse.html#android-widget-RemoteViews-RemoteResponse-method-addSharedElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.RemoteViews.RemoteResponse-method-addSharedElement' class='name expandable'>addSharedElement</a>( <span class='pre'>viewId, sharedElementName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds a shared element to be transferred as part of the transition between Activities\n using cross-Activity scene anim...</div><div class='long'><p>Adds a shared element to be transferred as part of the transition between Activities\n using cross-Activity scene animations. The position of the first element will be used as\n the epicenter for the exit Transition. The position of the associated shared element in\n the launched Activity will be the epicenter of its entering Transition.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>viewId</span> : Number<div class='sub-desc'><p>The id of the view to be shared as part of the transition</p>\n</div></li><li><span class='pre'>sharedElementName</span> : String<div class='sub-desc'><p>The shared element name for this view\n@see ActivityOptions#makeSceneTransitionAnimation(Activity, Pair[])</p>\n</div></li></ul></div></div></div><div id='method-fromFillInIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.RemoteViews.RemoteResponse'>android.widget.RemoteViews.RemoteResponse</span><br/><a href='source/RemoteResponse.html#android-widget-RemoteViews-RemoteResponse-method-fromFillInIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.RemoteViews.RemoteResponse-method-fromFillInIntent' class='name expandable'>fromFillInIntent</a>( <span class='pre'>fillIntent</span> ) : Object {android.widget.RemoteViews.RemoteResponse}<span class=\"signature\"></span></div><div class='description'><div class='short'>When using collections (eg. ...</div><div class='long'><p>When using collections (eg. <a href=\"#!/api/android.widget.ListView\" rel=\"android.widget.ListView\" class=\"docClass\">android.widget.ListView</a>, <a href=\"#!/api/android.widget.StackView\" rel=\"android.widget.StackView\" class=\"docClass\">android.widget.StackView</a> etc.) in widgets, it is\n very costly to set PendingIntents on the individual items, and is hence not permitted.\n Instead a single PendingIntent template can be set on the collection, see PendingIntent), and the individual on-click\n action of a given item can be distinguished by setting a fillInIntent on that item. The\n fillInIntent is then combined with the PendingIntent template in order to determine the\n final intent which will be executed when the item is clicked. This works as follows: any\n fields which are left blank in the PendingIntent template, but are provided by the\n fillInIntent will be overwritten, and the resulting PendingIntent will be used. The rest\n of the PendingIntent template will then be filled in with the associated fields that are\n set in fillInIntent. See int) for more details.\n Creates a response which sends a pending intent as part of the response. The source\n bounds (Intent.getSourceBounds()) of the intent will be set to the bounds of the\n target view in screen space.\n Note that any activity options associated with the mPendingIntent may get overridden\n before starting the intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fillIntent</span> : Object {Intent}<div class='sub-desc'><p>The intent which will be combined with the parent's PendingIntent in\n                  order to determine the behavior of the response\n@see RemoteViews#setPendingIntentTemplate(int, PendingIntent)\n@see RemoteViews#setOnClickFillInIntent(int, Intent)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.widget.RemoteViews.RemoteResponse}</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-fromPendingIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.RemoteViews.RemoteResponse'>android.widget.RemoteViews.RemoteResponse</span><br/><a href='source/RemoteResponse.html#android-widget-RemoteViews-RemoteResponse-method-fromPendingIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.RemoteViews.RemoteResponse-method-fromPendingIntent' class='name expandable'>fromPendingIntent</a>( <span class='pre'>pendingIntent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a response which sends a pending intent as part of the response. ...</div><div class='long'><p>Creates a response which sends a pending intent as part of the response. The source\n bounds (Intent.getSourceBounds()) of the intent will be set to the bounds of the\n target view in screen space.\n Note that any activity options associated with the mPendingIntent may get overridden\n before starting the intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pendingIntent</span> : Object {PendingIntent}<div class='sub-desc'><p>The PendingIntent to send as part of the response</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});