Ext.data.JsonP.android_widget_GridLayout_Alignment({"tagname":"class","name":"android.widget.GridLayout.Alignment","autodetected":{},"files":[{"filename":"Alignment.js","href":"Alignment.html#android-widget-GridLayout-Alignment"}],"extends":"java.lang.Object","members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.widget.GridLayout.Alignment","short_doc":"Alignments specify where a view should be placed within a cell group and\n what size it should be. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.widget.GridLayout.Alignment</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Alignment.html#android-widget-GridLayout-Alignment' target='_blank'>Alignment.js</a></div></pre><div class='doc-contents'><p>Alignments specify where a view should be placed within a cell group and\n what size it should be.\n <p>\n The <a href=\"#!/api/android.widget.AbsListView.LayoutParams\" rel=\"android.widget.AbsListView.LayoutParams\" class=\"docClass\">android.widget.AbsListView.LayoutParams</a> class contains a rowSpec\n and a columnSpec each of which contains an\n {@code alignment}. Overall placement of the view in the cell\n group is specified by the two alignments which act along each axis independently.\n <p>\n  The GridLayout class defines the most common alignments used in general layout:\n TOP, LEFT, BOTTOM, RIGHT, START,\n END, CENTER, BASELINE and FILL.</p>\n</div><div class='members'></div></div>","meta":{}});