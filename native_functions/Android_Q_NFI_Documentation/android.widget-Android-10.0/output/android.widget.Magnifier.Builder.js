Ext.data.JsonP.android_widget_Magnifier_Builder({"tagname":"class","name":"android.widget.Magnifier.Builder","autodetected":{},"files":[{"filename":"Builder.js","href":"Builder.html#android-widget-Magnifier-Builder"}],"extends":"java.lang.Object","members":[{"name":"build","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-build","meta":{}},{"name":"setClippingEnabled","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setClippingEnabled","meta":{}},{"name":"setCornerRadius","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setCornerRadius","meta":{}},{"name":"setDefaultSourceToMagnifierOffset","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setDefaultSourceToMagnifierOffset","meta":{}},{"name":"setElevation","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setElevation","meta":{}},{"name":"setInitialZoom","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setInitialZoom","meta":{}},{"name":"setOverlay","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setOverlay","meta":{}},{"name":"setSize","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setSize","meta":{}},{"name":"setSourceBounds","tagname":"method","owner":"android.widget.Magnifier.Builder","id":"method-setSourceBounds","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.widget.Magnifier.Builder","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.widget.Magnifier.Builder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Builder.html#android-widget-Magnifier-Builder' target='_blank'>Builder.js</a></div></pre><div class='doc-contents'><p>Builder class for <a href=\"#!/api/android.widget.Magnifier\" rel=\"android.widget.Magnifier\" class=\"docClass\">android.widget.Magnifier</a> objects.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-build' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-build' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-build' class='name expandable'>build</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Builds a android.widget.Magnifier instance based on the configuration of this android.widget.Magnifier.Builder. ...</div><div class='long'><p>Builds a <a href=\"#!/api/android.widget.Magnifier\" rel=\"android.widget.Magnifier\" class=\"docClass\">android.widget.Magnifier</a> instance based on the configuration of this <a href=\"#!/api/android.widget.Magnifier.Builder\" rel=\"android.widget.Magnifier.Builder\" class=\"docClass\">android.widget.Magnifier.Builder</a>.</p>\n</div></div></div><div id='method-setClippingEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setClippingEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setClippingEnabled' class='name expandable'>setClippingEnabled</a>( <span class='pre'>clip</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines the behavior of the magnifier when it is requested to position outside the\n surface of the main application w...</div><div class='long'><p>Defines the behavior of the magnifier when it is requested to position outside the\n surface of the main application window. The default value is {@code true}, which means\n that the position will be adjusted such that the magnifier will be fully within the\n bounds of the main application window, while also avoiding any overlap with system insets\n (such as the one corresponding to the status bar). If this flag is set to {@code false},\n the area where the magnifier can be positioned will no longer be clipped, so the\n magnifier will be able to extend outside the main application window boundaries (and also\n overlap the system insets). This can be useful if you require a custom behavior, but it\n should be handled with care, when passing coordinates to float);\n note that:\n <ul>\n   <li>in a multiwindow context, if the magnifier crosses the boundary between the two\n   windows, it will not be able to show over the window of the other application</li>\n   <li>if the magnifier overlaps the status bar, there is no guarantee about which one\n   will be displayed on top. This should be handled with care.</li>\n </ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clip</span> : Boolean<div class='sub-desc'><p>whether the magnifier position will be adjusted</p>\n</div></li></ul></div></div></div><div id='method-setCornerRadius' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setCornerRadius' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setCornerRadius' class='name expandable'>setCornerRadius</a>( <span class='pre'>cornerRadius</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the corner radius of the magnifier window, in pixels. ...</div><div class='long'><p>Sets the corner radius of the magnifier window, in pixels. Defaults to 2dp.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cornerRadius</span> : Number<div class='sub-desc'><p>the corner radius to be set</p>\n</div></li></ul></div></div></div><div id='method-setDefaultSourceToMagnifierOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setDefaultSourceToMagnifierOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setDefaultSourceToMagnifierOffset' class='name expandable'>setDefaultSourceToMagnifierOffset</a>( <span class='pre'>horizontalOffset, verticalOffset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets an offset that should be added to the content source center to obtain\n the position of the magnifier window, whe...</div><div class='long'><p>Sets an offset that should be added to the content source center to obtain\n the position of the magnifier window, when the float)\n method is called. The offset is ignored when float, float, float)\n is used. The offset can be negative. It defaults to (0dp, 0dp).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>horizontalOffset</span> : Number<div class='sub-desc'><p>the horizontal component of the offset</p>\n</div></li><li><span class='pre'>verticalOffset</span> : Number<div class='sub-desc'><p>the vertical component of the offset</p>\n</div></li></ul></div></div></div><div id='method-setElevation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setElevation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setElevation' class='name expandable'>setElevation</a>( <span class='pre'>elevation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the elevation of the magnifier window, in pixels. ...</div><div class='long'><p>Sets the elevation of the magnifier window, in pixels. Defaults to 4dp.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>elevation</span> : Number<div class='sub-desc'><p>the elevation to be set</p>\n</div></li></ul></div></div></div><div id='method-setInitialZoom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setInitialZoom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setInitialZoom' class='name expandable'>setInitialZoom</a>( <span class='pre'>zoom</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the zoom to be applied to the chosen content before being copied to the magnifier. ...</div><div class='long'><p>Sets the zoom to be applied to the chosen content before being copied to the magnifier.\n A content of size (content_width, content_height) will be magnified to\n (content_width * zoom, content_height * zoom), which will coincide with the size\n of the magnifier. A zoom of 1 will translate to no magnification (the content will\n be just copied to the magnifier with no scaling). The zoom defaults to 1.25.\n Note that the zoom can also be changed after the instance is built, using the\n android.widget.Magnifier.setZoom(float) method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zoom</span> : Number<div class='sub-desc'><p>the zoom to be set</p>\n</div></li></ul></div></div></div><div id='method-setOverlay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setOverlay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setOverlay' class='name expandable'>setOverlay</a>( <span class='pre'>overlay</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets an overlay that will be drawn on the top of the magnifier. ...</div><div class='long'><p>Sets an overlay that will be drawn on the top of the magnifier.\n In general, the overlay should not be opaque, in order to let the magnified\n content be partially visible in the magnifier. The default overlay is {@code null}\n (no overlay). As an example, TextView applies a white ColorDrawable\n overlay with 5% alpha, aiming to make the magnifier distinguishable when shown in dark\n application regions. To disable the overlay, the parameter should be set\n to {@code null}. If not null, the overlay will be automatically redrawn\n when the drawable is invalidated. To achieve this, the magnifier will set a new\n android.graphics.drawable.Drawable.Callback for the overlay drawable,\n so keep in mind that any existing one set by the application will be lost.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>overlay</span> : Object {Drawable}<div class='sub-desc'><p>the overlay to be drawn on top</p>\n</div></li></ul></div></div></div><div id='method-setSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setSize' class='name expandable'>setSize</a>( <span class='pre'>width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the size of the magnifier window, in pixels. ...</div><div class='long'><p>Sets the size of the magnifier window, in pixels. Defaults to (100dp, 48dp).\n Note that the size of the content being magnified and copied to the magnifier\n will be computed as (window width / zoom, window height / zoom).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>the window width to be set</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>the window height to be set</p>\n</div></li></ul></div></div></div><div id='method-setSourceBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.Magnifier.Builder'>android.widget.Magnifier.Builder</span><br/><a href='source/Builder.html#android-widget-Magnifier-Builder-method-setSourceBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.Magnifier.Builder-method-setSourceBounds' class='name expandable'>setSourceBounds</a>( <span class='pre'>left, top, right, bottom</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Defines the bounds of the rectangle where the magnifier will be able to copy its content\n from. ...</div><div class='long'><p>Defines the bounds of the rectangle where the magnifier will be able to copy its content\n from. The content will always be copied from the Surface of the main application\n window unless the magnified view is a SurfaceView, in which case its backing\n surface will be used. Each bound can have a different behavior, with the options being:\n <ul>\n   <li>SOURCE_BOUND_MAX_VISIBLE, which extends the bound as much as possible\n   while remaining in the visible region of the magnified view, as given by\n   android.view.View.getGlobalVisibleRect(Rect). For example, this will take into\n   account the case when the view is contained in a scrollable container, and the\n   magnifier will refuse to copy content outside of the visible view region</li>\n   <li>SOURCE_BOUND_MAX_IN_SURFACE, which extends the bound as much\n   as possible while remaining inside the surface the content is copied from.</li>\n </ul>\n Note that if either of the first three options is used, the bound will be compared to\n the bound of the surface (i.e. as if SOURCE_BOUND_MAX_IN_SURFACE was used),\n and the more restrictive one will be chosen. In other words, no attempt to copy content\n from outside the surface will be permitted. If two opposite bounds are not well-behaved\n (i.e. left + sourceWidth > right or top + sourceHeight > bottom), the left and top\n bounds will have priority and the others will be extended accordingly. If the pairs\n obtained this way still remain out of bounds, the smallest possible offset will be added\n to the pairs to bring them inside the surface bounds. If this is impossible\n (i.e. the surface is too small for the size of the content we try to copy on either\n dimension), an error will be logged and the magnifier content will look distorted.\n The default values assumed by the builder for the source bounds are\n left: SOURCE_BOUND_MAX_VISIBLE, top: SOURCE_BOUND_MAX_IN_SURFACE,\n right: SOURCE_BOUND_MAX_VISIBLE, bottom: SOURCE_BOUND_MAX_IN_SURFACE.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>left</span> : Number<div class='sub-desc'><p>the left bound for content copy</p>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>the top bound for content copy</p>\n</div></li><li><span class='pre'>right</span> : Number<div class='sub-desc'><p>the right bound for content copy</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>the bottom bound for content copy</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});