Ext.data.JsonP.android_widget_ZoomButtonsController({"tagname":"class","name":"android.widget.ZoomButtonsController","autodetected":{},"files":[{"filename":"ZoomButtonsController.js","href":"ZoomButtonsController.html#android-widget-ZoomButtonsController"}],"extends":"java.lang.Object","deprecated":{"text":"<p>This functionality and UI is better handled with custom views and layouts\n rather than a dedicated zoom-control widget</p>\n"},"members":[{"name":"getContainer","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-getContainer","meta":{}},{"name":"getZoomControls","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-getZoomControls","meta":{}},{"name":"isAutoDismissed","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-isAutoDismissed","meta":{}},{"name":"isVisible","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-isVisible","meta":{}},{"name":"setAutoDismissed","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-setAutoDismissed","meta":{}},{"name":"setFocusable","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-setFocusable","meta":{}},{"name":"setOnZoomListener","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-setOnZoomListener","meta":{}},{"name":"setVisible","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-setVisible","meta":{}},{"name":"setZoomInEnabled","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-setZoomInEnabled","meta":{}},{"name":"setZoomOutEnabled","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-setZoomOutEnabled","meta":{}},{"name":"setZoomSpeed","tagname":"method","owner":"android.widget.ZoomButtonsController","id":"method-setZoomSpeed","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.widget.ZoomButtonsController","short_doc":"implements android.view.View.OnTouchListener\n\nThe android.widget.ZoomButtonsController handles showing and hiding the...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.widget.ZoomButtonsController</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController' target='_blank'>ZoomButtonsController.js</a></div></pre><div class='doc-contents'><p>implements android.view.View.OnTouchListener</p>\n\n<p>The <a href=\"#!/api/android.widget.ZoomButtonsController\" rel=\"android.widget.ZoomButtonsController\" class=\"docClass\">android.widget.ZoomButtonsController</a> handles showing and hiding the zoom\n controls and positioning it relative to an owner view. It also gives the\n client access to the zoom controls container, allowing for additional\n accessory buttons to be shown in the zoom controls window.\n <p>\n Typically, clients should call setVisible(true)\n on a touch down or move (no need to call setVisible(false) since it will time out on its own). Also, whenever the\n owner cannot be zoomed further, the client should update\n <a href=\"#!/api/android.widget.ZoomButtonsController-method-setZoomInEnabled\" rel=\"android.widget.ZoomButtonsController-method-setZoomInEnabled\" class=\"docClass\">setZoomInEnabled</a>(boolean) and <a href=\"#!/api/android.widget.ZoomButtonsController-method-setZoomOutEnabled\" rel=\"android.widget.ZoomButtonsController-method-setZoomOutEnabled\" class=\"docClass\">setZoomOutEnabled</a>(boolean).\n <p>\n If you are using this with a custom View, please call\n setVisible(false) from\n View.onDetachedFromWindow and from View.onVisibilityChanged\n when <code>visibility != View.VISIBLE</code>.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>This functionality and UI is better handled with custom views and layouts\n rather than a dedicated zoom-control widget</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getContainer' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-getContainer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-getContainer' class='name expandable'>getContainer</a>( <span class='pre'></span> ) : Object {android.view.ViewGroup}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the container that is the parent of the zoom controls. ...</div><div class='long'><p>Gets the container that is the parent of the zoom controls.\n <p>\n The client can add other views to this container to link them with the\n zoom controls.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.ViewGroup}</span><div class='sub-desc'><p>The container of the zoom controls. It will be a layout that\n         respects the gravity of a child's layout parameters.</p>\n</div></li></ul></div></div></div><div id='method-getZoomControls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-getZoomControls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-getZoomControls' class='name expandable'>getZoomControls</a>( <span class='pre'></span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the view for the zoom controls. ...</div><div class='long'><p>Gets the view for the zoom controls.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>The zoom controls view.</p>\n</div></li></ul></div></div></div><div id='method-isAutoDismissed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-isAutoDismissed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-isAutoDismissed' class='name expandable'>isAutoDismissed</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether the zoom controls will be automatically dismissed after showing. ...</div><div class='long'><p>Whether the zoom controls will be automatically dismissed after showing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the zoom controls will be auto dismissed after showing.</p>\n</div></li></ul></div></div></div><div id='method-isVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-isVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-isVisible' class='name expandable'>isVisible</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether the zoom controls are visible to the user. ...</div><div class='long'><p>Whether the zoom controls are visible to the user.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the zoom controls are visible to the user.</p>\n</div></li></ul></div></div></div><div id='method-setAutoDismissed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-setAutoDismissed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-setAutoDismissed' class='name expandable'>setAutoDismissed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the zoom controls will be automatically dismissed after\n showing. ...</div><div class='long'><p>Sets whether the zoom controls will be automatically dismissed after\n showing.</p>\n</div></div></div><div id='method-setFocusable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-setFocusable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-setFocusable' class='name expandable'>setFocusable</a>( <span class='pre'>focusable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the zoom controls should be focusable. ...</div><div class='long'><p>Sets whether the zoom controls should be focusable. If the controls are\n focusable, then trackball and arrow key interactions are possible.\n Otherwise, only touch interactions are possible.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>focusable</span> : Boolean<div class='sub-desc'><p>Whether the zoom controls should be focusable.</p>\n</div></li></ul></div></div></div><div id='method-setOnZoomListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-setOnZoomListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-setOnZoomListener' class='name expandable'>setOnZoomListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the android.widget.ZoomButtonsController.OnZoomListener listener that receives callbacks to zoom. ...</div><div class='long'><p>Sets the <a href=\"#!/api/android.widget.ZoomButtonsController.OnZoomListener\" rel=\"android.widget.ZoomButtonsController.OnZoomListener\" class=\"docClass\">android.widget.ZoomButtonsController.OnZoomListener</a> listener that receives callbacks to zoom.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {ZoomButtonsController.OnZoomListener}<div class='sub-desc'><p>The listener that will be told to zoom.</p>\n</div></li></ul></div></div></div><div id='method-setVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-setVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-setVisible' class='name expandable'>setVisible</a>( <span class='pre'>visible</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the zoom controls should be visible to the user. ...</div><div class='long'><p>Sets whether the zoom controls should be visible to the user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>visible</span> : Boolean<div class='sub-desc'><p>Whether the zoom controls should be visible to the user.</p>\n</div></li></ul></div></div></div><div id='method-setZoomInEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-setZoomInEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-setZoomInEnabled' class='name expandable'>setZoomInEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to enable the zoom in control. ...</div><div class='long'><p>Whether to enable the zoom in control.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>Whether to enable the zoom in control.</p>\n</div></li></ul></div></div></div><div id='method-setZoomOutEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-setZoomOutEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-setZoomOutEnabled' class='name expandable'>setZoomOutEnabled</a>( <span class='pre'>enabled</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Whether to enable the zoom out control. ...</div><div class='long'><p>Whether to enable the zoom out control.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>Whether to enable the zoom out control.</p>\n</div></li></ul></div></div></div><div id='method-setZoomSpeed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.ZoomButtonsController'>android.widget.ZoomButtonsController</span><br/><a href='source/ZoomButtonsController.html#android-widget-ZoomButtonsController-method-setZoomSpeed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.ZoomButtonsController-method-setZoomSpeed' class='name expandable'>setZoomSpeed</a>( <span class='pre'>speed</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the delay between zoom callbacks as the user holds a zoom button. ...</div><div class='long'><p>Sets the delay between zoom callbacks as the user holds a zoom button.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>speed</span> : Number<div class='sub-desc'><p>The delay in milliseconds between zoom callbacks.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>This functionality and UI is better handled with custom views and layouts\n rather than a dedicated zoom-control widget</p>\n"}}});