Ext.data.JsonP.android_widget_EdgeEffect({"tagname":"class","name":"android.widget.EdgeEffect","autodetected":{},"files":[{"filename":"EdgeEffect.js","href":"EdgeEffect.html#android-widget-EdgeEffect"}],"extends":"java.lang.Object","members":[{"name":"DEFAULT_BLEND_MODE","tagname":"property","owner":"android.widget.EdgeEffect","id":"property-DEFAULT_BLEND_MODE","meta":{}},{"name":"draw","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-draw","meta":{}},{"name":"finish","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-finish","meta":{}},{"name":"getBlendMode","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-getBlendMode","meta":{}},{"name":"getColor","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-getColor","meta":{}},{"name":"getMaxHeight","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-getMaxHeight","meta":{}},{"name":"isFinished","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-isFinished","meta":{}},{"name":"onAbsorb","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-onAbsorb","meta":{}},{"name":"onPull","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-onPull","meta":{}},{"name":"onRelease","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-onRelease","meta":{}},{"name":"setBlendMode","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-setBlendMode","meta":{}},{"name":"setColor","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-setColor","meta":{}},{"name":"setSize","tagname":"method","owner":"android.widget.EdgeEffect","id":"method-setSize","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.widget.EdgeEffect","short_doc":"This class performs the graphical effect used at the edges of scrollable widgets\n when the user scrolls beyond the co...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.widget.EdgeEffect</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/EdgeEffect.html#android-widget-EdgeEffect' target='_blank'>EdgeEffect.js</a></div></pre><div class='doc-contents'><p>This class performs the graphical effect used at the edges of scrollable widgets\n when the user scrolls beyond the content bounds in 2D space.</p>\n\n<p> <p>EdgeEffect is stateful. Custom widgets using EdgeEffect should create an\n instance for each edge that should show the effect, feed it input data using\n the methods <a href=\"#!/api/android.widget.EdgeEffect-method-onAbsorb\" rel=\"android.widget.EdgeEffect-method-onAbsorb\" class=\"docClass\">onAbsorb</a>(int), <a href=\"#!/api/android.widget.EdgeEffect-method-onPull\" rel=\"android.widget.EdgeEffect-method-onPull\" class=\"docClass\">onPull</a>(float), and <a href=\"#!/api/android.widget.EdgeEffect-method-onRelease\" rel=\"android.widget.EdgeEffect-method-onRelease\" class=\"docClass\">onRelease</a>(),\n and draw the effect using <a href=\"#!/api/android.widget.EdgeEffect-method-draw\" rel=\"android.widget.EdgeEffect-method-draw\" class=\"docClass\">draw</a>(Canvas) in the widget's overridden\n android.view.View.draw(Canvas) method. If <a href=\"#!/api/android.widget.EdgeEffect-method-isFinished\" rel=\"android.widget.EdgeEffect-method-isFinished\" class=\"docClass\">isFinished</a>() returns\n false after drawing, the edge effect's animation is not yet complete and the widget\n should schedule another drawing pass to continue the animation.</p></p>\n\n<p> <p>When drawing, widgets should draw their main content and child views first,\n usually by invoking <code>super.draw(canvas)</code> from an overridden <code>draw</code>\n method. (This will invoke onDraw and dispatch drawing to child views as needed.)\n The edge effect may then be drawn on top of the view's content using the\n <a href=\"#!/api/android.widget.EdgeEffect-method-draw\" rel=\"android.widget.EdgeEffect-method-draw\" class=\"docClass\">draw</a>(Canvas) method.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DEFAULT_BLEND_MODE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-property-DEFAULT_BLEND_MODE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-property-DEFAULT_BLEND_MODE' class='name expandable'>DEFAULT_BLEND_MODE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The default blend mode used by android.widget.EdgeEffect. ...</div><div class='long'><p>The default blend mode used by <a href=\"#!/api/android.widget.EdgeEffect\" rel=\"android.widget.EdgeEffect\" class=\"docClass\">android.widget.EdgeEffect</a>.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-draw' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-draw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-draw' class='name expandable'>draw</a>( <span class='pre'>canvas</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Draw into the provided canvas. ...</div><div class='long'><p>Draw into the provided canvas. Assumes that the canvas has been rotated\n accordingly and the size has been set. The effect will be drawn the full\n width of X=0 to X=width, beginning from Y=0 and extending to some factor &lt;\n 1.f of height.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>canvas</span> : Object {Canvas}<div class='sub-desc'><p>Canvas to draw into</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if drawing should continue beyond this frame to continue the\n         animation</p>\n</div></li></ul></div></div></div><div id='method-finish' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-finish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-finish' class='name expandable'>finish</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Immediately finish the current animation. ...</div><div class='long'><p>Immediately finish the current animation.\n After this call <a href=\"#!/api/android.widget.EdgeEffect-method-isFinished\" rel=\"android.widget.EdgeEffect-method-isFinished\" class=\"docClass\">isFinished</a>() will return true.</p>\n</div></div></div><div id='method-getBlendMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-getBlendMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-getBlendMode' class='name expandable'>getBlendMode</a>( <span class='pre'></span> ) : Object {android.graphics.BlendMode}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the blend mode. ...</div><div class='long'><p>Returns the blend mode. A blend mode defines how source pixels\n (generated by a drawing command) are composited with the destination pixels\n (content of the render target).\n <p /></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.BlendMode}</span><div class='sub-desc'><p>BlendMode</p>\n</div></li></ul></div></div></div><div id='method-getColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-getColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-getColor' class='name expandable'>getColor</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the color of this edge effect in argb. ...</div><div class='long'><p>Return the color of this edge effect in argb.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The color of this edge effect in argb</p>\n</div></li></ul></div></div></div><div id='method-getMaxHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-getMaxHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-getMaxHeight' class='name expandable'>getMaxHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the maximum height that the edge effect will be drawn at given the original\n int) input size. ...</div><div class='long'><p>Return the maximum height that the edge effect will be drawn at given the original\n int) input size.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The maximum height of the edge effect</p>\n</div></li></ul></div></div></div><div id='method-isFinished' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-isFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-isFinished' class='name expandable'>isFinished</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Reports if this EdgeEffect's animation is finished. ...</div><div class='long'><p>Reports if this EdgeEffect's animation is finished. If this method returns false\n after a call to <a href=\"#!/api/android.widget.EdgeEffect-method-draw\" rel=\"android.widget.EdgeEffect-method-draw\" class=\"docClass\">draw</a>(Canvas) the host widget should schedule another\n drawing pass to continue the animation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if animation is finished, false if drawing should continue on the next frame.</p>\n</div></li></ul></div></div></div><div id='method-onAbsorb' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-onAbsorb' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-onAbsorb' class='name expandable'>onAbsorb</a>( <span class='pre'>velocity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call when the effect absorbs an impact at the given velocity. ...</div><div class='long'><p>Call when the effect absorbs an impact at the given velocity.\n Used when a fling reaches the scroll boundary.</p>\n\n<p> <p>When using a <a href=\"#!/api/android.widget.Scroller\" rel=\"android.widget.Scroller\" class=\"docClass\">android.widget.Scroller</a> or <a href=\"#!/api/android.widget.OverScroller\" rel=\"android.widget.OverScroller\" class=\"docClass\">android.widget.OverScroller</a>,\n the method <code>getCurrVelocity</code> will provide a reasonable approximation\n to use here.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>velocity</span> : Number<div class='sub-desc'><p>Velocity at impact in pixels per second.</p>\n</div></li></ul></div></div></div><div id='method-onPull' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-onPull' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-onPull' class='name expandable'>onPull</a>( <span class='pre'>deltaDistance, displacement</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A view should call this when content is pulled away from an edge by the user. ...</div><div class='long'><p>A view should call this when content is pulled away from an edge by the user.\n This will update the state of the current visual effect and its associated animation.\n The host view should always android.view.View.invalidate() after this\n and draw the results accordingly.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deltaDistance</span> : Number<div class='sub-desc'><p>Change in distance since the last call. Values may be 0 (no change) to\n                      1.f (full length of the view) or negative values to express change\n                      back toward the edge reached to initiate the effect.</p>\n</div></li><li><span class='pre'>displacement</span> : Number<div class='sub-desc'><p>The displacement from the starting side of the effect of the point\n                     initiating the pull. In the case of touch this is the finger position.\n                     Values may be from 0-1.</p>\n</div></li></ul></div></div></div><div id='method-onRelease' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-onRelease' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-onRelease' class='name expandable'>onRelease</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call when the object is released after being pulled. ...</div><div class='long'><p>Call when the object is released after being pulled.\n This will begin the \"decay\" phase of the effect. After calling this method\n the host view should android.view.View.invalidate() and thereby\n draw the results accordingly.</p>\n</div></div></div><div id='method-setBlendMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-setBlendMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-setBlendMode' class='name expandable'>setBlendMode</a>( <span class='pre'>blendmode, blendmode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set or clear the blend mode. ...</div><div class='long'><p>Set or clear the blend mode. A blend mode defines how source pixels\n (generated by a drawing command) are composited with the destination pixels\n (content of the render target).\n <p />\n Pass null to clear any previous blend mode.\n <p /></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>blendmode</span> : Object {BlendMode}<div class='sub-desc'><p>May be null. The blend mode to be installed in the paint</p>\n</div></li><li><span class='pre'>blendmode</span> : Object<div class='sub-desc'><p>May be null. The blend mode to be installed in the paint</p>\n</div></li></ul></div></div></div><div id='method-setColor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-setColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-setColor' class='name expandable'>setColor</a>( <span class='pre'>color</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the color of this edge effect in argb. ...</div><div class='long'><p>Set the color of this edge effect in argb.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>color</span> : Number<div class='sub-desc'><p>Color in argb</p>\n</div></li></ul></div></div></div><div id='method-setSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.widget.EdgeEffect'>android.widget.EdgeEffect</span><br/><a href='source/EdgeEffect.html#android-widget-EdgeEffect-method-setSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.widget.EdgeEffect-method-setSize' class='name expandable'>setSize</a>( <span class='pre'>width, height</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the size of this edge effect in pixels. ...</div><div class='long'><p>Set the size of this edge effect in pixels.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>Effect width in pixels</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>Effect height in pixels</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});