Ext.data.JsonP.com_android_internal_os_KernelCpuThreadReaderSettingsObserver_UidPredicate({"tagname":"class","name":"com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate","autodetected":{},"files":[{"filename":"UidPredicate.js","href":"UidPredicate.html#com-android-internal-os-KernelCpuThreadReaderSettingsObserver-UidPredicate"}],"extends":"java.lang.Object","members":[{"name":"fromString","tagname":"method","owner":"com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate","id":"method-fromString","meta":{}},{"name":"test","tagname":"method","owner":"com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate","id":"method-test","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UidPredicate.html#com-android-internal-os-KernelCpuThreadReaderSettingsObserver-UidPredicate' target='_blank'>UidPredicate.js</a></div></pre><div class='doc-contents'><p>implements java.util.function.Predicate</p>\n\n<p>Check whether a UID belongs to a set of UIDs</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-fromString' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate'>com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate</span><br/><a href='source/UidPredicate.html#com-android-internal-os-KernelCpuThreadReaderSettingsObserver-UidPredicate-method-fromString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate-method-fromString' class='name expandable'>fromString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a UID predicate from a string representing a list of UID ranges\n\n UID ranges are a pair of integers separated ...</div><div class='long'><p>Create a UID predicate from a string representing a list of UID ranges</p>\n\n<p> <p>UID ranges are a pair of integers separated by a '-'. If you want to specify a single\n UID (e.g. UID 1000), you can use {@code 1000-1000}. Lists of ranges are separated by a\n single ';'. For example, this would be a valid string representation: {@code\n \"1000-1999;2003-2003;2004-2004;2050-2060\"}.</p>\n\n<p> <p>We do not use ',' to delimit as it is already used in separating different setting\n arguments.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NumberFormatException if the input string is incorrectly formatted</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if an UID range has a lower end than start</p>\n</div></li></ul></div></div></div><div id='method-test' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate'>com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate</span><br/><a href='source/UidPredicate.html#com-android-internal-os-KernelCpuThreadReaderSettingsObserver-UidPredicate-method-test' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.os.KernelCpuThreadReaderSettingsObserver.UidPredicate-method-test' class='name expandable'>test</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});