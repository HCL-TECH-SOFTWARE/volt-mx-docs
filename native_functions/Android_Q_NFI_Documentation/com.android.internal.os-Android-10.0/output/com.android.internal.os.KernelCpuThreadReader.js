Ext.data.JsonP.com_android_internal_os_KernelCpuThreadReader({"tagname":"class","name":"com.android.internal.os.KernelCpuThreadReader","autodetected":{},"files":[{"filename":"KernelCpuThreadReader.js","href":"KernelCpuThreadReader.html#com-android-internal-os-KernelCpuThreadReader"}],"extends":"java.lang.Object","members":[{"name":"create","tagname":"method","owner":"com.android.internal.os.KernelCpuThreadReader","id":"method-create","meta":{}},{"name":"getCpuFrequenciesKhz","tagname":"method","owner":"com.android.internal.os.KernelCpuThreadReader","id":"method-getCpuFrequenciesKhz","meta":{}},{"name":"getProcessCpuUsage","tagname":"method","owner":"com.android.internal.os.KernelCpuThreadReader","id":"method-getProcessCpuUsage","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.os.KernelCpuThreadReader","short_doc":"Iterates over processes, and all threads owned by those processes, and return the CPU usage for\n each thread. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.internal.os.KernelCpuThreadReader</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/KernelCpuThreadReader.html#com-android-internal-os-KernelCpuThreadReader' target='_blank'>KernelCpuThreadReader.js</a></div></pre><div class='doc-contents'><p>Iterates over processes, and all threads owned by those processes, and return the CPU usage for\n each thread. The CPU usage statistics contain the amount of time spent in a frequency band. CPU\n usage is collected using com.android.internal.os.Uid.ProcTimeInStateReader.</p>\n\n<p> <p>We only collect CPU data for processes and threads that are owned by certain UIDs. These UIDs\n are configured via setUidPredicate.</p>\n\n<p> <p>Frequencies are bucketed together to reduce the amount of data created. This means that we\n return less frequencies than provided by com.android.internal.os.Uid.ProcTimeInStateReader. The number of frequencies\n is configurable by setNumBuckets. Frequencies are reported as the lowest frequency in\n that range. Frequencies are spread as evenly as possible across the buckets. The buckets do not\n cross over the little/big frequencies reported.</p>\n\n<p> <p>N.B.: In order to bucket across little/big frequencies correctly, we assume that the {@code\n time_in_state} file contains every little core frequency in ascending order, followed by every\n big core frequency in ascending order. This assumption might not hold for devices with different\n kernel implementations of the {@code time_in_state} file generation.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-create' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.os.KernelCpuThreadReader'>com.android.internal.os.KernelCpuThreadReader</span><br/><a href='source/KernelCpuThreadReader.html#com-android-internal-os-KernelCpuThreadReader-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.os.KernelCpuThreadReader-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : Object {com.android.internal.os.KernelCpuThreadReader}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create the reader and handle exceptions during creation ...</div><div class='long'><p>Create the reader and handle exceptions during creation</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.internal.os.KernelCpuThreadReader}</span><div class='sub-desc'><p>the reader, null if an exception was thrown during creation</p>\n</div></li></ul></div></div></div><div id='method-getCpuFrequenciesKhz' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.os.KernelCpuThreadReader'>com.android.internal.os.KernelCpuThreadReader</span><br/><a href='source/KernelCpuThreadReader.html#com-android-internal-os-KernelCpuThreadReader-method-getCpuFrequenciesKhz' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.os.KernelCpuThreadReader-method-getCpuFrequenciesKhz' class='name expandable'>getCpuFrequenciesKhz</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the CPU frequencies that correspond to the times reported in com.android.internal.os.KernelCpuThreadReader.Thread...</div><div class='long'><p>Get the CPU frequencies that correspond to the times reported in <a href=\"#!/api/com.android.internal.os.KernelCpuThreadReader.ThreadCpuUsage-property-usageTimesMillis\" rel=\"com.android.internal.os.KernelCpuThreadReader.ThreadCpuUsage-property-usageTimesMillis\" class=\"docClass\">com.android.internal.os.KernelCpuThreadReader.ThreadCpuUsage.usageTimesMillis</a></p>\n</div></div></div><div id='method-getProcessCpuUsage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.os.KernelCpuThreadReader'>com.android.internal.os.KernelCpuThreadReader</span><br/><a href='source/KernelCpuThreadReader.html#com-android-internal-os-KernelCpuThreadReader-method-getProcessCpuUsage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.os.KernelCpuThreadReader-method-getProcessCpuUsage' class='name expandable'>getProcessCpuUsage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the per-thread CPU usage of all processes belonging to a set of UIDs\n\n This function will crawl through all proce...</div><div class='long'><p>Get the per-thread CPU usage of all processes belonging to a set of UIDs</p>\n\n<p> <p>This function will crawl through all process {@code proc} directories found by the pattern\n {@code /proc/[0-9]*}, and then check the UID using {@code /proc/$PID/status}. This takes\n approximately 500ms on a 2017 device. Therefore, this method can be computationally\n expensive, and should not be called more than once an hour.</p>\n\n<p> <p>Data is only collected for UIDs passing the predicate supplied in setUidPredicate.</p>\n</div></div></div></div></div></div></div>","meta":{}});