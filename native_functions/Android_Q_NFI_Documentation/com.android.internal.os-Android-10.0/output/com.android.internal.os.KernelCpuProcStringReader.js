Ext.data.JsonP.com_android_internal_os_KernelCpuProcStringReader({"tagname":"class","name":"com.android.internal.os.KernelCpuProcStringReader","autodetected":{},"files":[{"filename":"KernelCpuProcStringReader.js","href":"KernelCpuProcStringReader.html#com-android-internal-os-KernelCpuProcStringReader"}],"extends":"java.lang.Object","members":[{"name":"asLongs","tagname":"method","owner":"com.android.internal.os.KernelCpuProcStringReader","id":"method-asLongs","meta":{}},{"name":"open","tagname":"method","owner":"com.android.internal.os.KernelCpuProcStringReader","id":"method-open","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.os.KernelCpuProcStringReader","short_doc":"Reads human-readable cpu time proc files. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.internal.os.KernelCpuProcStringReader</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/KernelCpuProcStringReader.html#com-android-internal-os-KernelCpuProcStringReader' target='_blank'>KernelCpuProcStringReader.js</a></div></pre><div class='doc-contents'><p>Reads human-readable cpu time proc files.</p>\n\n<p> It is implemented as singletons for built-in kernel proc files. Get___Instance() method will\n return corresponding reader instance. In order to prevent frequent GC, it reuses the same char[]\n to store data read from proc files.</p>\n\n<p> A KernelCpuProcStringReader instance keeps an error counter. When the number of read errors\n within that instance accumulates to 5, this instance will reject all further read requests.</p>\n\n<p> Data fetched within last 500ms is considered fresh, since the reading lifecycle can take up to\n 100ms. KernelCpuProcStringReader always tries to use cache if it is fresh and valid, but it can\n be disabled through a parameter.</p>\n\n<p> A KernelCpuProcReader instance is thread-safe. It acquires a write lock when reading the proc\n file, releases it right after, then acquires a read lock before returning a ProcFileIterator.\n Caller is responsible for closing ProcFileIterator (also auto-closable) after reading, otherwise\n deadlock will occur.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-asLongs' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.os.KernelCpuProcStringReader'>com.android.internal.os.KernelCpuProcStringReader</span><br/><a href='source/KernelCpuProcStringReader.html#com-android-internal-os-KernelCpuProcStringReader-method-asLongs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.os.KernelCpuProcStringReader-method-asLongs' class='name expandable'>asLongs</a>( <span class='pre'>buf, array</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts all numbers in the CharBuffer into longs, and puts into the given long[]. ...</div><div class='long'><p>Converts all numbers in the CharBuffer into longs, and puts into the given long[].</p>\n\n<p> Space and colon are treated as delimiters. All other chars are not allowed. All numbers\n are non-negative. To avoid GC, caller should try to use the same array for all calls.</p>\n\n<p> This method also resets the given buffer to the original position before return so that\n it can be read again.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>buf</span> : Object {CharBuffer}<div class='sub-desc'><p>The char buffer to be converted.</p>\n</div></li><li><span class='pre'>array</span> : Object {long[]}<div class='sub-desc'><p>An array to store the parsed numbers.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of elements written to the given array. -1 if buf is null, -2 if buf\n contains invalid char, -3 if any number overflows.</p>\n</div></li></ul></div></div></div><div id='method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.os.KernelCpuProcStringReader'>com.android.internal.os.KernelCpuProcStringReader</span><br/><a href='source/KernelCpuProcStringReader.html#com-android-internal-os-KernelCpuProcStringReader-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.os.KernelCpuProcStringReader-method-open' class='name expandable'>open</a>( <span class='pre'>ignoreCache</span> ) : Object {com.android.internal.os.KernelCpuProcStringReader.ProcFileIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens the proc file and buffers all its content, which can be traversed through a\n ProcFileIterator. ...</div><div class='long'><p>Opens the proc file and buffers all its content, which can be traversed through a\n ProcFileIterator.</p>\n\n<p> This method will tolerate at most 5 errors. After that, it will always return null. This is\n to save resources and to prevent log spam.</p>\n\n<p> This method is thread-safe. It first checks if there are other threads holding read/write\n lock. If there are, it assumes data is fresh and reuses the data.</p>\n\n<p> A read lock is automatically acquired when a valid ProcFileIterator is returned. Caller MUST\n call com.android.internal.os.Uid.ProcFileIterator.close() when it is done to release the lock.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ignoreCache</span> : Boolean<div class='sub-desc'><p>If true, ignores the cache and refreshes the data anyway.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.internal.os.KernelCpuProcStringReader.ProcFileIterator}</span><div class='sub-desc'><p>A ProcFileIterator to iterate through the file content, or null if there is\n error.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});