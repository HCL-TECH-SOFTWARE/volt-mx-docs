Ext.data.JsonP.android_text_MeasuredParagraph({"tagname":"class","name":"android.text.MeasuredParagraph","autodetected":{},"files":[{"filename":"MeasuredParagraph.js","href":"MeasuredParagraph.html#android-text-MeasuredParagraph"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"buildForBidi","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-buildForBidi","meta":{}},{"name":"buildForMeasurement","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-buildForMeasurement","meta":{}},{"name":"buildForStaticLayout","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-buildForStaticLayout","meta":{}},{"name":"getBounds","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getBounds","meta":{}},{"name":"getCharWidthAt","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getCharWidthAt","meta":{}},{"name":"getChars","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getChars","meta":{}},{"name":"getDirections","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getDirections","meta":{}},{"name":"getFontMetrics","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getFontMetrics","meta":{}},{"name":"getMeasuredText","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getMeasuredText","meta":{}},{"name":"getMemoryUsage","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getMemoryUsage","meta":{}},{"name":"getParagraphDir","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getParagraphDir","meta":{}},{"name":"getSpanEndCache","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getSpanEndCache","meta":{}},{"name":"getTextLength","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getTextLength","meta":{}},{"name":"getWholeWidth","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getWholeWidth","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getWidth","meta":{}},{"name":"getWidths","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-getWidths","meta":{}},{"name":"recycle","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-recycle","meta":{}},{"name":"release","tagname":"method","owner":"android.text.MeasuredParagraph","id":"method-release","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.MeasuredParagraph","short_doc":"MeasuredParagraph provides text information for rendering purpose. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.text.MeasuredParagraph</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph' target='_blank'>MeasuredParagraph.js</a></div></pre><div class='doc-contents'><p>MeasuredParagraph provides text information for rendering purpose.</p>\n\n<p> The first motivation of this class is identify the text directions and retrieving individual\n character widths. However retrieving character widths is slower than identifying text directions.\n Thus, this class provides several builder methods for specific purposes.</p>\n\n<ul>\n<li>buildForBidi:\nCompute only text directions.</li>\n<li>buildForMeasurement:\nCompute text direction and all character widths.</li>\n<li>buildForStaticLayout:\nThis is bit special. StaticLayout also needs to know text direction and character widths for\nline breaking, but all things are done in native code. Similarly, text measurement is done\nin native code. So instead of storing result to Java array, this keeps the result in native\ncode since there is no good reason to move the results to Java layer.</li>\n</ul>\n\n\n<p> In addition to the character widths, some additional information is computed for each purposes,\n e.g. whole text length for measurement or font metrics for static layout.</p>\n\n<p> MeasuredParagraph is NOT a thread safe object.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-buildForBidi' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-buildForBidi' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-buildForBidi' class='name expandable'>buildForBidi</a>( <span class='pre'>text, start, end, textDir, recycle</span> ) : Object {android.text.MeasuredParagraph}<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates new MeasuredParagraph for Bidi computation. ...</div><div class='long'><p>Generates new MeasuredParagraph for Bidi computation.</p>\n\n<p> If recycle is null, this returns new instance. If recycle is not null, this fills computed\n result to recycle and returns recycle.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the character sequence to be measured</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the inclusive start offset of the target region in the text</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the exclusive end offset of the target region in the text</p>\n</div></li><li><span class='pre'>textDir</span> : Object {TextDirectionHeuristic}<div class='sub-desc'><p>the text direction</p>\n</div></li><li><span class='pre'>recycle</span> : Object {MeasuredParagraph}<div class='sub-desc'><p>pass existing MeasuredParagraph if you want to recycle it.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.text.MeasuredParagraph}</span><div class='sub-desc'><p>measured text</p>\n</div></li></ul></div></div></div><div id='method-buildForMeasurement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-buildForMeasurement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-buildForMeasurement' class='name expandable'>buildForMeasurement</a>( <span class='pre'>paint, text, start, end, textDir, recycle</span> ) : Object {android.text.MeasuredParagraph}<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates new MeasuredParagraph for measuring texts. ...</div><div class='long'><p>Generates new MeasuredParagraph for measuring texts.</p>\n\n<p> If recycle is null, this returns new instance. If recycle is not null, this fills computed\n result to recycle and returns recycle.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>paint</span> : Object {TextPaint}<div class='sub-desc'><p>the paint to be used for rendering the text.</p>\n</div></li><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the character sequence to be measured</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the inclusive start offset of the target region in the text</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the exclusive end offset of the target region in the text</p>\n</div></li><li><span class='pre'>textDir</span> : Object {TextDirectionHeuristic}<div class='sub-desc'><p>the text direction</p>\n</div></li><li><span class='pre'>recycle</span> : Object {MeasuredParagraph}<div class='sub-desc'><p>pass existing MeasuredParagraph if you want to recycle it.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.text.MeasuredParagraph}</span><div class='sub-desc'><p>measured text</p>\n</div></li></ul></div></div></div><div id='method-buildForStaticLayout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-buildForStaticLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-buildForStaticLayout' class='name expandable'>buildForStaticLayout</a>( <span class='pre'>paint, text, start, end, textDir, computeHyphenation, computeLayout, hint, recycle</span> ) : Object {android.text.MeasuredParagraph}<span class=\"signature\"></span></div><div class='description'><div class='short'>Generates new MeasuredParagraph for StaticLayout. ...</div><div class='long'><p>Generates new MeasuredParagraph for StaticLayout.</p>\n\n<p> If recycle is null, this returns new instance. If recycle is not null, this fills computed\n result to recycle and returns recycle.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>paint</span> : Object {TextPaint}<div class='sub-desc'><p>the paint to be used for rendering the text.</p>\n</div></li><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the character sequence to be measured</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the inclusive start offset of the target region in the text</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the exclusive end offset of the target region in the text</p>\n</div></li><li><span class='pre'>textDir</span> : Object {TextDirectionHeuristic}<div class='sub-desc'><p>the text direction</p>\n</div></li><li><span class='pre'>computeHyphenation</span> : Boolean<div class='sub-desc'><p>true if need to compute hyphenation, otherwise false</p>\n</div></li><li><span class='pre'>computeLayout</span> : Boolean<div class='sub-desc'><p>true if need to compute full layout, otherwise false.</p>\n</div></li><li><span class='pre'>hint</span> : Object {MeasuredParagraph}<div class='sub-desc'><p>pass if you already have measured paragraph.</p>\n</div></li><li><span class='pre'>recycle</span> : Object {MeasuredParagraph}<div class='sub-desc'><p>pass existing MeasuredParagraph if you want to recycle it.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.text.MeasuredParagraph}</span><div class='sub-desc'><p>measured text</p>\n</div></li></ul></div></div></div><div id='method-getBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getBounds' class='name expandable'>getBounds</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the bounding rectangle that encloses all of the characters, with an implied origin\n at (0, 0). ...</div><div class='long'><p>Retrieves the bounding rectangle that encloses all of the characters, with an implied origin\n at (0, 0).</p>\n\n<p> This is available only if the MeasuredParagraph is computed with buildForStaticLayout.</p>\n</div></div></div><div id='method-getCharWidthAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getCharWidthAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getCharWidthAt' class='name expandable'>getCharWidthAt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a width of the character at the offset. ...</div><div class='long'><p>Returns a width of the character at the offset.</p>\n\n<p> This is available only if the MeasuredParagraph is computed with buildForStaticLayout.</p>\n</div></div></div><div id='method-getChars' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getChars' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getChars' class='name expandable'>getChars</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the characters to be measured. ...</div><div class='long'><p>Returns the characters to be measured.</p>\n\n<p> This is always available.</p>\n</div></div></div><div id='method-getDirections' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getDirections' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getDirections' class='name expandable'>getDirections</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the directions. ...</div><div class='long'><p>Returns the directions.</p>\n\n<p> This is always available.</p>\n</div></div></div><div id='method-getFontMetrics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getFontMetrics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getFontMetrics' class='name expandable'>getFontMetrics</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the int array which holds FontMetrics. ...</div><div class='long'><p>Returns the int array which holds FontMetrics.</p>\n\n<p> This array holds the repeat of top, bottom, ascent, descent of font metrics value.</p>\n\n<p> This is available only if the MeasuredParagraph is computed with buildForStaticLayout.\n Returns empty array in other cases.</p>\n</div></div></div><div id='method-getMeasuredText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getMeasuredText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getMeasuredText' class='name expandable'>getMeasuredText</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the native ptr of the MeasuredParagraph. ...</div><div class='long'><p>Returns the native ptr of the MeasuredParagraph.</p>\n\n<p> This is available only if the MeasuredParagraph is computed with buildForStaticLayout.\n Returns null in other cases.</p>\n</div></div></div><div id='method-getMemoryUsage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getMemoryUsage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getMemoryUsage' class='name expandable'>getMemoryUsage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This only works if the MeasuredParagraph is computed with buildForStaticLayout. ...</div><div class='long'><p>This only works if the MeasuredParagraph is computed with buildForStaticLayout.</p>\n</div></div></div><div id='method-getParagraphDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getParagraphDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getParagraphDir' class='name expandable'>getParagraphDir</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the paragraph direction. ...</div><div class='long'><p>Returns the paragraph direction.</p>\n\n<p> This is always available.</p>\n</div></div></div><div id='method-getSpanEndCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getSpanEndCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getSpanEndCache' class='name expandable'>getSpanEndCache</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the MetricsAffectingSpan end indices. ...</div><div class='long'><p>Returns the MetricsAffectingSpan end indices.</p>\n\n<p> If the input text is not a spanned string, this has one value that is the length of the text.</p>\n\n<p> This is available only if the MeasuredParagraph is computed with buildForStaticLayout.\n Returns empty array in other cases.</p>\n</div></div></div><div id='method-getTextLength' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getTextLength' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getTextLength' class='name expandable'>getTextLength</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the length of the paragraph. ...</div><div class='long'><p>Returns the length of the paragraph.</p>\n\n<p> This is always available.</p>\n</div></div></div><div id='method-getWholeWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getWholeWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getWholeWidth' class='name expandable'>getWholeWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the whole text width. ...</div><div class='long'><p>Returns the whole text width.</p>\n\n<p> This is available only if the MeasuredParagraph is computed with buildForMeasurement.\n Returns 0 in other cases.</p>\n</div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'>start, end</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the width of the given range. ...</div><div class='long'><p>Returns the width of the given range.</p>\n\n<p> This is not available if the MeasuredParagraph is computed with buildForBidi.\n Returns 0 if the MeasuredParagraph is computed with buildForBidi.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the inclusive start offset of the target region in the text</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the exclusive end offset of the target region in the text</p>\n</div></li></ul></div></div></div><div id='method-getWidths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-getWidths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-getWidths' class='name expandable'>getWidths</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the individual character's width. ...</div><div class='long'><p>Returns the individual character's width.</p>\n\n<p> This is available only if the MeasuredParagraph is computed with buildForMeasurement.\n Returns empty array in other cases.</p>\n</div></div></div><div id='method-recycle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-recycle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-recycle' class='name expandable'>recycle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Recycle the MeasuredParagraph. ...</div><div class='long'><p>Recycle the MeasuredParagraph.</p>\n\n<p> Do not call any methods after you call this method.</p>\n</div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.MeasuredParagraph'>android.text.MeasuredParagraph</span><br/><a href='source/MeasuredParagraph.html#android-text-MeasuredParagraph-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.MeasuredParagraph-method-release' class='name expandable'>release</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Releases internal buffers. ...</div><div class='long'><p>Releases internal buffers.</p>\n</div></div></div></div></div></div></div>","meta":{}});