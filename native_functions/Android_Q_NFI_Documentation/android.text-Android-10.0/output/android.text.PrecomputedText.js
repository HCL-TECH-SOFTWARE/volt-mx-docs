Ext.data.JsonP.android_text_PrecomputedText({"tagname":"class","name":"android.text.PrecomputedText","autodetected":{},"files":[{"filename":"PrecomputedText.js","href":"PrecomputedText.html#android-text-PrecomputedText"}],"extends":"java.lang.Object","members":[{"name":"charAt","tagname":"method","owner":"android.text.PrecomputedText","id":"method-charAt","meta":{}},{"name":"create","tagname":"method","owner":"android.text.PrecomputedText","id":"method-create","meta":{}},{"name":"getBounds","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getBounds","meta":{}},{"name":"getParagraphCount","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getParagraphCount","meta":{}},{"name":"getParagraphEnd","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getParagraphEnd","meta":{}},{"name":"getParagraphStart","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getParagraphStart","meta":{}},{"name":"getParams","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getParams","meta":{}},{"name":"getSpanEnd","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getSpanEnd","meta":{}},{"name":"getSpanFlags","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getSpanFlags","meta":{}},{"name":"getSpanStart","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getSpanStart","meta":{}},{"name":"getSpans","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getSpans","meta":{}},{"name":"getWidth","tagname":"method","owner":"android.text.PrecomputedText","id":"method-getWidth","meta":{}},{"name":"length","tagname":"method","owner":"android.text.PrecomputedText","id":"method-length","meta":{}},{"name":"nextSpanTransition","tagname":"method","owner":"android.text.PrecomputedText","id":"method-nextSpanTransition","meta":{}},{"name":"removeSpan","tagname":"method","owner":"android.text.PrecomputedText","id":"method-removeSpan","meta":{}},{"name":"setSpan","tagname":"method","owner":"android.text.PrecomputedText","id":"method-setSpan","meta":{}},{"name":"subSequence","tagname":"method","owner":"android.text.PrecomputedText","id":"method-subSequence","meta":{}},{"name":"toString","tagname":"method","owner":"android.text.PrecomputedText","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.PrecomputedText","short_doc":"implements android.text.Spannable\n\nA text which has the character metrics data. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.text.PrecomputedText</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PrecomputedText.html#android-text-PrecomputedText' target='_blank'>PrecomputedText.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.text.Spannable\" rel=\"android.text.Spannable\" class=\"docClass\">android.text.Spannable</a></p>\n\n<p>A text which has the character metrics data.</p>\n\n<p> A text object that contains the character metrics data and can be used to improve the performance\n of text layout operations. When a PrecomputedText is created with a given CharSequence,\n it will measure the text metrics during the creation. This PrecomputedText instance can be set on\n android.widget.TextView or <a href=\"#!/api/android.text.StaticLayout\" rel=\"android.text.StaticLayout\" class=\"docClass\">android.text.StaticLayout</a>. Since the text layout information will\n be included in this instance, android.widget.TextView or <a href=\"#!/api/android.text.StaticLayout\" rel=\"android.text.StaticLayout\" class=\"docClass\">android.text.StaticLayout</a> will not\n have to recalculate this information.</p>\n\n<p> Note that the <a href=\"#!/api/android.text.PrecomputedText\" rel=\"android.text.PrecomputedText\" class=\"docClass\">android.text.PrecomputedText</a> created from different parameters of the target android.widget.TextView will be rejected internally and compute the text layout again with the\n current android.widget.TextView parameters.</p>\n\n<pre> An example usage is:\n <code>\n  static void asyncSetText(TextView textView, final String longString, Executor bgExecutor) {\n      // construct precompute related parameters using the TextView that we will set the text on.\n      final PrecomputedText.Params params = textView.getTextMetricsParams();\n      final Reference textViewRef = new WeakReference<>(textView);\n      bgExecutor.submit(() -> {\n          TextView textView = textViewRef.get();\n          if (textView == null) return;\n          final PrecomputedText precomputedText = PrecomputedText.create(longString, params);\n          textView.post(() -> {\n              TextView textView = textViewRef.get();\n              if (textView == null) return;\n              textView.setText(precomputedText);\n          });\n      });\n  }\n </code>\n </pre>\n\n\n<p> Note that the <a href=\"#!/api/android.text.PrecomputedText\" rel=\"android.text.PrecomputedText\" class=\"docClass\">android.text.PrecomputedText</a> created from different parameters of the target\n android.widget.TextView will be rejected.</p>\n\n<p> Note that any <a href=\"#!/api/android.text.NoCopySpan\" rel=\"android.text.NoCopySpan\" class=\"docClass\">android.text.NoCopySpan</a> attached to the original text won't be passed to\n PrecomputedText.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-charAt' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-charAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-charAt' class='name expandable'>charAt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-create' class='name expandable'>create</a>( <span class='pre'>text, params</span> ) : Object {android.text.PrecomputedText}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new android.text.PrecomputedText which will pre-compute text measurement and glyph\n positioning information. ...</div><div class='long'><p>Create a new <a href=\"#!/api/android.text.PrecomputedText\" rel=\"android.text.PrecomputedText\" class=\"docClass\">android.text.PrecomputedText</a> which will pre-compute text measurement and glyph\n positioning information.\n <p>\n This can be expensive, so computing this on a background thread before your text will be\n presented can save work on the UI thread.\n </p></p>\n\n<p> Note that any <a href=\"#!/api/android.text.NoCopySpan\" rel=\"android.text.NoCopySpan\" class=\"docClass\">android.text.NoCopySpan</a> attached to the text won't be passed to the\n created PrecomputedText.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the text to be measured</p>\n</div></li><li><span class='pre'>params</span> : Object {PrecomputedText.Params}<div class='sub-desc'><p>parameters that define how text will be precomputed</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.text.PrecomputedText}</span><div class='sub-desc'><p>A PrecomputedText</p>\n</div></li></ul></div></div></div><div id='method-getBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getBounds' class='name expandable'>getBounds</a>( <span class='pre'>start, end, bounds</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieves the text bounding box for the given range. ...</div><div class='long'><p>Retrieves the text bounding box for the given range.\n Both {@code start} and {@code end} offset need to be in the same paragraph, otherwise\n IllegalArgumentException will be thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the inclusive start offset in the text</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the exclusive end offset in the text</p>\n</div></li><li><span class='pre'>bounds</span> : Object {Rect}<div class='sub-desc'><p>the output rectangle</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if start and end offset are in the different paragraph.</p>\n</div></li></ul></div></div></div><div id='method-getParagraphCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getParagraphCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getParagraphCount' class='name expandable'>getParagraphCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the count of paragraphs. ...</div><div class='long'><p>Returns the count of paragraphs.</p>\n</div></div></div><div id='method-getParagraphEnd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getParagraphEnd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getParagraphEnd' class='name expandable'>getParagraphEnd</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the paragraph end offset of the text. ...</div><div class='long'><p>Returns the paragraph end offset of the text.</p>\n</div></div></div><div id='method-getParagraphStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getParagraphStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getParagraphStart' class='name expandable'>getParagraphStart</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the paragraph start offset of the text. ...</div><div class='long'><p>Returns the paragraph start offset of the text.</p>\n</div></div></div><div id='method-getParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getParams' class='name expandable'>getParams</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the layout parameters used to measure this text. ...</div><div class='long'><p>Returns the layout parameters used to measure this text.</p>\n</div></div></div><div id='method-getSpanEnd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getSpanEnd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getSpanEnd' class='name expandable'>getSpanEnd</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getSpanFlags' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getSpanFlags' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getSpanFlags' class='name expandable'>getSpanFlags</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getSpanStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getSpanStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getSpanStart' class='name expandable'>getSpanStart</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getSpans' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getSpans' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getSpans' class='name expandable'>getSpans</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-getWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-getWidth' class='name expandable'>getWidth</a>( <span class='pre'>start, end</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns text width for the given range. ...</div><div class='long'><p>Returns text width for the given range.\n Both {@code start} and {@code end} offset need to be in the same paragraph, otherwise\n IllegalArgumentException will be thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the inclusive start offset in the text</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the exclusive end offset in the text</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the text width</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if start and end offset are in the different paragraph.</p>\n</div></li></ul></div></div></div><div id='method-length' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-length' class='name expandable'>length</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-nextSpanTransition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-nextSpanTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-nextSpanTransition' class='name expandable'>nextSpanTransition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-removeSpan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-removeSpan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-removeSpan' class='name expandable'>removeSpan</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if MetricAffectingSpan is specified.</p>\n</div></li></ul></div></div></div><div id='method-setSpan' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-setSpan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-setSpan' class='name expandable'>setSpan</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if MetricAffectingSpan is specified.</p>\n</div></li></ul></div></div></div><div id='method-subSequence' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-subSequence' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-subSequence' class='name expandable'>subSequence</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.PrecomputedText'>android.text.PrecomputedText</span><br/><a href='source/PrecomputedText.html#android-text-PrecomputedText-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.PrecomputedText-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});