Ext.data.JsonP.android_text_TextUtils({"tagname":"class","name":"android.text.TextUtils","autodetected":{},"files":[{"filename":"TextUtils.js","href":"TextUtils.html#android-text-TextUtils"}],"extends":"java.lang.Object","members":[{"name":"CAP_MODE_CHARACTERS","tagname":"property","owner":"android.text.TextUtils","id":"property-CAP_MODE_CHARACTERS","meta":{}},{"name":"CAP_MODE_SENTENCES","tagname":"property","owner":"android.text.TextUtils","id":"property-CAP_MODE_SENTENCES","meta":{}},{"name":"CAP_MODE_WORDS","tagname":"property","owner":"android.text.TextUtils","id":"property-CAP_MODE_WORDS","meta":{}},{"name":"CHAR_SEQUENCE_CREATOR","tagname":"property","owner":"android.text.TextUtils","id":"property-CHAR_SEQUENCE_CREATOR","meta":{}},{"name":"SAFE_STRING_FLAG_FIRST_LINE","tagname":"property","owner":"android.text.TextUtils","id":"property-SAFE_STRING_FLAG_FIRST_LINE","meta":{}},{"name":"SAFE_STRING_FLAG_SINGLE_LINE","tagname":"property","owner":"android.text.TextUtils","id":"property-SAFE_STRING_FLAG_SINGLE_LINE","meta":{}},{"name":"SAFE_STRING_FLAG_TRIM","tagname":"property","owner":"android.text.TextUtils","id":"property-SAFE_STRING_FLAG_TRIM","meta":{}},{"name":"concat","tagname":"method","owner":"android.text.TextUtils","id":"method-concat","meta":{}},{"name":"copySpansFrom","tagname":"method","owner":"android.text.TextUtils","id":"method-copySpansFrom","meta":{}},{"name":"dumpSpans","tagname":"method","owner":"android.text.TextUtils","id":"method-dumpSpans","meta":{}},{"name":"emptyIfNull","tagname":"method","owner":"android.text.TextUtils","id":"method-emptyIfNull","meta":{}},{"name":"equals","tagname":"method","owner":"android.text.TextUtils","id":"method-equals","meta":{}},{"name":"expandTemplate","tagname":"method","owner":"android.text.TextUtils","id":"method-expandTemplate","meta":{}},{"name":"firstNotEmpty","tagname":"method","owner":"android.text.TextUtils","id":"method-firstNotEmpty","meta":{}},{"name":"getCapsMode","tagname":"method","owner":"android.text.TextUtils","id":"method-getCapsMode","meta":{}},{"name":"getChars","tagname":"method","owner":"android.text.TextUtils","id":"method-getChars","meta":{}},{"name":"getEllipsisString","tagname":"method","owner":"android.text.TextUtils","id":"method-getEllipsisString","meta":{}},{"name":"getLayoutDirectionFromLocale","tagname":"method","owner":"android.text.TextUtils","id":"method-getLayoutDirectionFromLocale","meta":{}},{"name":"getOffsetAfter","tagname":"method","owner":"android.text.TextUtils","id":"method-getOffsetAfter","meta":{}},{"name":"getOffsetBefore","tagname":"method","owner":"android.text.TextUtils","id":"method-getOffsetBefore","meta":{}},{"name":"getReverse","tagname":"method","owner":"android.text.TextUtils","id":"method-getReverse","meta":{"deprecated":{"text":"<p>Do not use.</p>\n"}}},{"name":"getTrimmedLength","tagname":"method","owner":"android.text.TextUtils","id":"method-getTrimmedLength","meta":{}},{"name":"htmlEncode","tagname":"method","owner":"android.text.TextUtils","id":"method-htmlEncode","meta":{}},{"name":"indexOf","tagname":"method","owner":"android.text.TextUtils","id":"method-indexOf","meta":{}},{"name":"isDigitsOnly","tagname":"method","owner":"android.text.TextUtils","id":"method-isDigitsOnly","meta":{}},{"name":"isEmpty","tagname":"method","owner":"android.text.TextUtils","id":"method-isEmpty","meta":{}},{"name":"isGraphic","tagname":"method","owner":"android.text.TextUtils","id":"method-isGraphic","meta":{"deprecated":{"text":"<p>Use isGraphic(CharSequence) instead.</p>\n"}}},{"name":"join","tagname":"method","owner":"android.text.TextUtils","id":"method-join","meta":{}},{"name":"lastIndexOf","tagname":"method","owner":"android.text.TextUtils","id":"method-lastIndexOf","meta":{}},{"name":"length","tagname":"method","owner":"android.text.TextUtils","id":"method-length","meta":{}},{"name":"listEllipsize","tagname":"method","owner":"android.text.TextUtils","id":"method-listEllipsize","meta":{}},{"name":"makeSafeForPresentation","tagname":"method","owner":"android.text.TextUtils","id":"method-makeSafeForPresentation","meta":{}},{"name":"nullIfEmpty","tagname":"method","owner":"android.text.TextUtils","id":"method-nullIfEmpty","meta":{}},{"name":"regionMatches","tagname":"method","owner":"android.text.TextUtils","id":"method-regionMatches","meta":{}},{"name":"replace","tagname":"method","owner":"android.text.TextUtils","id":"method-replace","meta":{}},{"name":"split","tagname":"method","owner":"android.text.TextUtils","id":"method-split","meta":{}},{"name":"stringOrSpannedString","tagname":"method","owner":"android.text.TextUtils","id":"method-stringOrSpannedString","meta":{}},{"name":"substring","tagname":"method","owner":"android.text.TextUtils","id":"method-substring","meta":{}},{"name":"toUpperCase","tagname":"method","owner":"android.text.TextUtils","id":"method-toUpperCase","meta":{}},{"name":"writeToParcel","tagname":"method","owner":"android.text.TextUtils","id":"method-writeToParcel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.TextUtils","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.text.TextUtils</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/TextUtils.html#android-text-TextUtils' target='_blank'>TextUtils.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CAP_MODE_CHARACTERS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-property-CAP_MODE_CHARACTERS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-property-CAP_MODE_CHARACTERS' class='name expandable'>CAP_MODE_CHARACTERS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Capitalization mode for getCapsMode: capitalize all\ncharacters. ...</div><div class='long'><p>Capitalization mode for <a href=\"#!/api/android.text.TextUtils-method-getCapsMode\" rel=\"android.text.TextUtils-method-getCapsMode\" class=\"docClass\">getCapsMode</a>: capitalize all\ncharacters.  This value is explicitly defined to be the same as\n<a href=\"#!/api/android.text.InputType-property-TYPE_TEXT_FLAG_CAP_CHARACTERS\" rel=\"android.text.InputType-property-TYPE_TEXT_FLAG_CAP_CHARACTERS\" class=\"docClass\">android.text.InputType.TYPE_TEXT_FLAG_CAP_CHARACTERS</a>.</p>\n<p>Defaults to: <code>&quot;4096&quot;</code></p></div></div></div><div id='property-CAP_MODE_SENTENCES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-property-CAP_MODE_SENTENCES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-property-CAP_MODE_SENTENCES' class='name expandable'>CAP_MODE_SENTENCES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Capitalization mode for getCapsMode: capitalize the first\ncharacter of each sentence. ...</div><div class='long'><p>Capitalization mode for <a href=\"#!/api/android.text.TextUtils-method-getCapsMode\" rel=\"android.text.TextUtils-method-getCapsMode\" class=\"docClass\">getCapsMode</a>: capitalize the first\ncharacter of each sentence.  This value is explicitly defined to be the same as\n<a href=\"#!/api/android.text.InputType-property-TYPE_TEXT_FLAG_CAP_SENTENCES\" rel=\"android.text.InputType-property-TYPE_TEXT_FLAG_CAP_SENTENCES\" class=\"docClass\">android.text.InputType.TYPE_TEXT_FLAG_CAP_SENTENCES</a>.</p>\n<p>Defaults to: <code>&quot;16384&quot;</code></p></div></div></div><div id='property-CAP_MODE_WORDS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-property-CAP_MODE_WORDS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-property-CAP_MODE_WORDS' class='name expandable'>CAP_MODE_WORDS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Capitalization mode for getCapsMode: capitalize the first\ncharacter of all words. ...</div><div class='long'><p>Capitalization mode for <a href=\"#!/api/android.text.TextUtils-method-getCapsMode\" rel=\"android.text.TextUtils-method-getCapsMode\" class=\"docClass\">getCapsMode</a>: capitalize the first\ncharacter of all words.  This value is explicitly defined to be the same as\n<a href=\"#!/api/android.text.InputType-property-TYPE_TEXT_FLAG_CAP_WORDS\" rel=\"android.text.InputType-property-TYPE_TEXT_FLAG_CAP_WORDS\" class=\"docClass\">android.text.InputType.TYPE_TEXT_FLAG_CAP_WORDS</a>.</p>\n<p>Defaults to: <code>&quot;8192&quot;</code></p></div></div></div><div id='property-CHAR_SEQUENCE_CREATOR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-property-CHAR_SEQUENCE_CREATOR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-property-CHAR_SEQUENCE_CREATOR' class='name expandable'>CHAR_SEQUENCE_CREATOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SAFE_STRING_FLAG_FIRST_LINE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-property-SAFE_STRING_FLAG_FIRST_LINE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_FIRST_LINE' class='name expandable'>SAFE_STRING_FLAG_FIRST_LINE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return only first line of text (truncate at first newline). ...</div><div class='long'><p>Return only first line of text (truncate at first newline). Cannot be set at the same time as\n<a href=\"#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_SINGLE_LINE\" rel=\"android.text.TextUtils-property-SAFE_STRING_FLAG_SINGLE_LINE\" class=\"docClass\">SAFE_STRING_FLAG_SINGLE_LINE</a>.</p>\n\n<p>@see <a href=\"#!/api/android.text.TextUtils-method-makeSafeForPresentation\" rel=\"android.text.TextUtils-method-makeSafeForPresentation\" class=\"docClass\">makeSafeForPresentation</a>(String, int, float, int)</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-SAFE_STRING_FLAG_SINGLE_LINE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-property-SAFE_STRING_FLAG_SINGLE_LINE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_SINGLE_LINE' class='name expandable'>SAFE_STRING_FLAG_SINGLE_LINE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Force entire string into single line of text (no newlines). ...</div><div class='long'><p>Force entire string into single line of text (no newlines). Cannot be set at the same time as\n<a href=\"#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_FIRST_LINE\" rel=\"android.text.TextUtils-property-SAFE_STRING_FLAG_FIRST_LINE\" class=\"docClass\">SAFE_STRING_FLAG_FIRST_LINE</a>.</p>\n\n<p>@see <a href=\"#!/api/android.text.TextUtils-method-makeSafeForPresentation\" rel=\"android.text.TextUtils-method-makeSafeForPresentation\" class=\"docClass\">makeSafeForPresentation</a>(String, int, float, int)</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SAFE_STRING_FLAG_TRIM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-property-SAFE_STRING_FLAG_TRIM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_TRIM' class='name expandable'>SAFE_STRING_FLAG_TRIM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove whitespace and non-breaking spaces from the edges\nof the label. ...</div><div class='long'><p>Remove whitespace and non-breaking spaces from the edges\nof the label.</p>\n\n<p>@see <a href=\"#!/api/android.text.TextUtils-method-makeSafeForPresentation\" rel=\"android.text.TextUtils-method-makeSafeForPresentation\" class=\"docClass\">makeSafeForPresentation</a>(String, int, float, int)</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-concat' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-concat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-concat' class='name expandable'>concat</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a CharSequence concatenating the specified CharSequences,\n retaining their spans if any. ...</div><div class='long'><p>Returns a CharSequence concatenating the specified CharSequences,\n retaining their spans if any.</p>\n\n<p> If there are no parameters, an empty string will be returned.</p>\n\n<p> If the number of parameters is exactly one, that parameter is returned as output, even if it\n is null.</p>\n\n<p> If the number of parameters is at least two, any null CharSequence among the parameters is\n treated as if it was the string <code>\"null\"</code>.</p>\n\n<p> If there are paragraph spans in the source CharSequences that satisfy paragraph boundary\n requirements in the sources but would no longer satisfy them in the concatenated\n CharSequence, they may get extended in the resulting CharSequence or not retained.</p>\n</div></div></div><div id='method-copySpansFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-copySpansFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-copySpansFrom' class='name expandable'>copySpansFrom</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copies the spans from the region start...end in\n source to the region\n destoff...destoff+end-start in dest. ...</div><div class='long'><p>Copies the spans from the region <code>start...end</code> in\n <code>source</code> to the region\n <code>destoff...destoff+end-start</code> in <code>dest</code>.\n Spans in <code>source</code> that begin before <code>start</code>\n or end after <code>end</code> but overlap this range are trimmed\n as if they began at <code>start</code> or ended at <code>end</code>.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IndexOutOfBoundsException if any of the copied spans\n are out of range in <code>dest</code>.</p>\n</div></li></ul></div></div></div><div id='method-dumpSpans' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-dumpSpans' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-dumpSpans' class='name expandable'>dumpSpans</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Debugging tool to print the spans in a CharSequence. ...</div><div class='long'><p>Debugging tool to print the spans in a CharSequence.  The output will\n be printed one span per line.  If the CharSequence is not a Spanned,\n then the entire string will be printed on a single line.</p>\n</div></div></div><div id='method-emptyIfNull' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-emptyIfNull' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-emptyIfNull' class='name expandable'>emptyIfNull</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-equals' class='name expandable'>equals</a>( <span class='pre'>a, b</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if a and b are equal, including if they are both null. ...</div><div class='long'><p>Returns true if a and b are equal, including if they are both null.\n <p><i>Note: In platform versions 1.1 and earlier, this method only worked well if\n both the arguments were instances of String.</i></p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Object {CharSequence}<div class='sub-desc'><p>first CharSequence to check</p>\n</div></li><li><span class='pre'>b</span> : Object {CharSequence}<div class='sub-desc'><p>second CharSequence to check</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a and b are equal</p>\n</div></li></ul></div></div></div><div id='method-expandTemplate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-expandTemplate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-expandTemplate' class='name expandable'>expandTemplate</a>( <span class='pre'>template, values</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Replace instances of \"^1\", \"^2\", etc. ...</div><div class='long'><p>Replace instances of \"^1\", \"^2\", etc. in the\n <code>template</code> CharSequence with the corresponding\n <code>values</code>.  \"^^\" is used to produce a single caret in\n the output.  Only up to 9 replacement values are supported,\n \"^10\" will be produce the first replacement value followed by a\n '0'.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>template</span> : Object {CharSequence}<div class='sub-desc'><p>the input text containing \"^1\"-style\n placeholder values.  This object is not modified; a copy is\n returned.</p>\n</div></li><li><span class='pre'>values</span> : Object {java.lang.CharSequence[]}<div class='sub-desc'><p>CharSequences substituted into the template.  The\n first is substituted for \"^1\", the second for \"^2\", and so on.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>the new CharSequence produced by doing the replacement</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the template requests a\n value that was not provided, or if more than 9 values are\n provided.</p>\n</div></li></ul></div></div></div><div id='method-firstNotEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-firstNotEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-firstNotEmpty' class='name expandable'>firstNotEmpty</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getCapsMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getCapsMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getCapsMode' class='name expandable'>getCapsMode</a>( <span class='pre'>cs, off, reqModes</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine what caps mode should be in effect at the current offset in\n the text. ...</div><div class='long'><p>Determine what caps mode should be in effect at the current offset in\n the text.  Only the mode bits set in <var>reqModes</var> will be\n checked.  Note that the caps mode flags here are explicitly defined\n to match those in <a href=\"#!/api/android.text.InputType\" rel=\"android.text.InputType\" class=\"docClass\">android.text.InputType</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cs</span> : Object {CharSequence}<div class='sub-desc'><p>The text that should be checked for caps modes.</p>\n</div></li><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>Location in the text at which to check.</p>\n</div></li><li><span class='pre'>reqModes</span> : Number<div class='sub-desc'><p>The modes to be checked: may be any combination of\n <a href=\"#!/api/android.text.TextUtils-property-CAP_MODE_CHARACTERS\" rel=\"android.text.TextUtils-property-CAP_MODE_CHARACTERS\" class=\"docClass\">CAP_MODE_CHARACTERS</a>, <a href=\"#!/api/android.text.TextUtils-property-CAP_MODE_WORDS\" rel=\"android.text.TextUtils-property-CAP_MODE_WORDS\" class=\"docClass\">CAP_MODE_WORDS</a>, and\n <a href=\"#!/api/android.text.TextUtils-property-CAP_MODE_SENTENCES\" rel=\"android.text.TextUtils-property-CAP_MODE_SENTENCES\" class=\"docClass\">CAP_MODE_SENTENCES</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns the actual capitalization modes that can be in effect\n at the current position, which is any combination of\n <a href=\"#!/api/android.text.TextUtils-property-CAP_MODE_CHARACTERS\" rel=\"android.text.TextUtils-property-CAP_MODE_CHARACTERS\" class=\"docClass\">CAP_MODE_CHARACTERS</a>, <a href=\"#!/api/android.text.TextUtils-property-CAP_MODE_WORDS\" rel=\"android.text.TextUtils-property-CAP_MODE_WORDS\" class=\"docClass\">CAP_MODE_WORDS</a>, and\n <a href=\"#!/api/android.text.TextUtils-property-CAP_MODE_SENTENCES\" rel=\"android.text.TextUtils-property-CAP_MODE_SENTENCES\" class=\"docClass\">CAP_MODE_SENTENCES</a>.</p>\n</div></li></ul></div></div></div><div id='method-getChars' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getChars' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getChars' class='name expandable'>getChars</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getEllipsisString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getEllipsisString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getEllipsisString' class='name expandable'>getEllipsisString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getLayoutDirectionFromLocale' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getLayoutDirectionFromLocale' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getLayoutDirectionFromLocale' class='name expandable'>getLayoutDirectionFromLocale</a>( <span class='pre'>locale</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the layout direction for a given Locale ...</div><div class='long'><p>Return the layout direction for a given Locale</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the Locale for which we want the layout direction. Can be null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the layout direction. This may be one of:\n android.view.View.LAYOUT_DIRECTION_LTR or\n android.view.View.LAYOUT_DIRECTION_RTL.</p>\n\n<p> Be careful: this code will need to be updated when vertical scripts will be supported</p>\n</div></li></ul></div></div></div><div id='method-getOffsetAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getOffsetAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getOffsetAfter' class='name expandable'>getOffsetAfter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getOffsetBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getOffsetBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getOffsetBefore' class='name expandable'>getOffsetBefore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getReverse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getReverse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getReverse' class='name expandable'>getReverse</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This function only reverses individual {@code char}s and not their associated\n spans. ...</div><div class='long'><p>This function only reverses individual {@code char}s and not their associated\n spans. It doesn't support surrogate pairs (that correspond to non-BMP code points), combining\n sequences or conjuncts either.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Do not use.</p>\n\n        </div>\n</div></div></div><div id='method-getTrimmedLength' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-getTrimmedLength' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-getTrimmedLength' class='name expandable'>getTrimmedLength</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the length that the specified CharSequence would have if\n spaces and ASCII control characters were trimmed fr...</div><div class='long'><p>Returns the length that the specified CharSequence would have if\n spaces and ASCII control characters were trimmed from the start and end,\n as by String.trim.</p>\n</div></div></div><div id='method-htmlEncode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-htmlEncode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-htmlEncode' class='name expandable'>htmlEncode</a>( <span class='pre'>s</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Html-encode the string. ...</div><div class='long'><p>Html-encode the string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : String<div class='sub-desc'><p>the string to be encoded</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the encoded string</p>\n</div></li></ul></div></div></div><div id='method-indexOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-indexOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-indexOf' class='name expandable'>indexOf</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-isDigitsOnly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-isDigitsOnly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-isDigitsOnly' class='name expandable'>isDigitsOnly</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the given CharSequence contains only digits. ...</div><div class='long'><p>Returns whether the given CharSequence contains only digits.</p>\n</div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'>str</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the string is null or 0-length. ...</div><div class='long'><p>Returns true if the string is null or 0-length.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>str</span> : Object {CharSequence}<div class='sub-desc'><p>the string to be examined</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if str is null or zero length</p>\n</div></li></ul></div></div></div><div id='method-isGraphic' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-isGraphic' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-isGraphic' class='name expandable'>isGraphic</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns whether this character is a printable character. ...</div><div class='long'><p>Returns whether this character is a printable character.</p>\n\n<p> This does not support non-BMP characters and should not be used.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use isGraphic(CharSequence) instead.</p>\n\n        </div>\n</div></div></div><div id='method-join' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-join' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-join' class='name expandable'>join</a>( <span class='pre'>delimiter, tokens</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string containing the tokens joined by delimiters. ...</div><div class='long'><p>Returns a string containing the tokens joined by delimiters.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delimiter</span> : Object {CharSequence}<div class='sub-desc'><p>a CharSequence that will be inserted between the tokens. If null, the string\n     \"null\" will be used as the delimiter.</p>\n</div></li><li><span class='pre'>tokens</span> : Object {java.lang.Iterable}<div class='sub-desc'><p>an array objects to be joined. Strings will be formed from the objects by\n     calling object.toString(). If tokens is null, a NullPointerException will be thrown. If\n     tokens is empty, an empty string will be returned.</p>\n</div></li></ul></div></div></div><div id='method-lastIndexOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-lastIndexOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-lastIndexOf' class='name expandable'>lastIndexOf</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-length' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-length' class='name expandable'>length</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-listEllipsize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-listEllipsize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-listEllipsize' class='name expandable'>listEllipsize</a>( <span class='pre'>context, elements, separator, paint, avail, moreId</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats a list of CharSequences by repeatedly inserting the separator between them,\n but stopping when the resulting ...</div><div class='long'><p>Formats a list of CharSequences by repeatedly inserting the separator between them,\n but stopping when the resulting sequence is too wide for the specified width.</p>\n\n<p> This method actually tries to fit the maximum number of elements. So if {@code \"A, 11 more\"\n fits}, {@code \"A, B, 10 more\"} doesn't fit, but {@code \"A, B, C, 9 more\"} fits again (due to\n the glyphs for the digits being very wide, for example), it returns\n {@code \"A, B, C, 9 more\"}. Because of this, this method may be inefficient for very long\n lists.</p>\n\n<p> Note that the elements of the returned value, as well as the string for {@code moreId}, will\n be bidi-wrapped using <a href=\"#!/api/android.text.BidiFormatter-method-unicodeWrap\" rel=\"android.text.BidiFormatter-method-unicodeWrap\" class=\"docClass\">android.text.BidiFormatter.unicodeWrap</a> based on the locale of the input\n Context. If the input {@code Context} is null, the default BidiFormatter from\n android.text.BidiFormatter.getInstance() will be used.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>the {@code Context} to get the {@code moreId} resource from. If {@code null},\n     an ellipsis (U+2026) would be used for {@code moreId}.</p>\n</div></li><li><span class='pre'>elements</span> : Object {java.util.List}<div class='sub-desc'><p>the list to format</p>\n</div></li><li><span class='pre'>separator</span> : String<div class='sub-desc'><p>a separator, such as {@code \", \"}</p>\n</div></li><li><span class='pre'>paint</span> : Object {TextPaint}<div class='sub-desc'><p>the Paint with which to measure the text</p>\n</div></li><li><span class='pre'>avail</span> : Number<div class='sub-desc'><p>the horizontal width available for the text (in pixels)</p>\n</div></li><li><span class='pre'>moreId</span> : Number<div class='sub-desc'><p>the resource ID for the pluralized string to insert at the end of sequence when\n     some of the elements don't fit.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>the formatted CharSequence. If even the shortest sequence (e.g. {@code \"A, 11 more\"})\n     doesn't fit, it will return an empty string.</p>\n</div></li></ul></div></div></div><div id='method-makeSafeForPresentation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-makeSafeForPresentation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-makeSafeForPresentation' class='name expandable'>makeSafeForPresentation</a>( <span class='pre'>unclean, maxCharactersToConsider, ellipsizeDip, flags</span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove html, remove bad characters, and truncate string. ...</div><div class='long'><p>Remove html, remove bad characters, and truncate string.</p>\n\n<p> <p>This method is meant to remove common mistakes and nefarious formatting from strings that\n were loaded from untrusted sources (such as other packages).</p>\n\n<p> <p>This method first treats the string like HTML and then ...\n <ul>\n <li>Removes new lines or truncates at first new line\n <li>Trims the white-space off the end\n <li>Truncates the string\n </li></li></li></ul>\n ... if specified.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unclean</span> : String<div class='sub-desc'><p>The input string</p>\n</div></li><li><span class='pre'>maxCharactersToConsider</span> : Number<div class='sub-desc'><p>The maximum number of characters of {@code unclean} to\n                                consider from the input string. {@code 0} disables this\n                                feature.</p>\n</div></li><li><span class='pre'>ellipsizeDip</span> : Number<div class='sub-desc'><p>Assuming maximum length of the string (in dip), assuming font size 42.\n                     This is roughly 50 characters for {@code ellipsizeDip == 1000}.<br />\n                     Usually ellipsizing should be left to the view showing the string. If a\n                     string is used as an input to another string, it might be useful to\n                     control the length of the input string though. {@code 0} disables this\n                     feature.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Flags controlling cleaning behavior (Can be <a href=\"#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_TRIM\" rel=\"android.text.TextUtils-property-SAFE_STRING_FLAG_TRIM\" class=\"docClass\">SAFE_STRING_FLAG_TRIM</a>,\n              <a href=\"#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_SINGLE_LINE\" rel=\"android.text.TextUtils-property-SAFE_STRING_FLAG_SINGLE_LINE\" class=\"docClass\">SAFE_STRING_FLAG_SINGLE_LINE</a>,\n              and <a href=\"#!/api/android.text.TextUtils-property-SAFE_STRING_FLAG_FIRST_LINE\" rel=\"android.text.TextUtils-property-SAFE_STRING_FLAG_FIRST_LINE\" class=\"docClass\">SAFE_STRING_FLAG_FIRST_LINE</a>)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>The cleaned string</p>\n</div></li></ul></div></div></div><div id='method-nullIfEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-nullIfEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-nullIfEmpty' class='name expandable'>nullIfEmpty</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-regionMatches' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-regionMatches' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-regionMatches' class='name expandable'>regionMatches</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-replace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-replace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-replace' class='name expandable'>replace</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a new CharSequence in which each of the source strings is\n replaced by the corresponding element of the destin...</div><div class='long'><p>Return a new CharSequence in which each of the source strings is\n replaced by the corresponding element of the destinations.</p>\n</div></div></div><div id='method-split' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-split' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-split' class='name expandable'>split</a>( <span class='pre'>text, pattern</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Splits a string on a pattern. ...</div><div class='long'><p>Splits a string on a pattern. This method yields the same result as\n {@code pattern.split(text, -1)} except that if {@code text.isEmpty()} then this method\n returns an empty array whereas {@code pattern.split(\"\", -1)} would have returned an array\n with a single {@code \"\"}.</p>\n\n<p> The {@code -1} means that trailing empty Strings are not removed from the result;\n Note that whether a leading zero-width match can result in a leading {@code \"\"} depends\n on whether your app targets\n an SDK version {@code &lt;= 28}; see int).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>the string to split</p>\n</div></li><li><span class='pre'>pattern</span> : Object {Pattern}<div class='sub-desc'><p>the regular expression to match</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an array of strings. The array will be empty if text is empty</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if expression or text is null</p>\n</div></li></ul></div></div></div><div id='method-stringOrSpannedString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-stringOrSpannedString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-stringOrSpannedString' class='name expandable'>stringOrSpannedString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-substring' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-substring' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-substring' class='name expandable'>substring</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new String object containing the given range of characters\n from the source string. ...</div><div class='long'><p>Create a new String object containing the given range of characters\n from the source string.  This is different than simply calling\n int) CharSequence.subSequence\n in that it does not preserve any style runs in the source sequence,\n allowing a more efficient implementation.</p>\n</div></div></div><div id='method-toUpperCase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-toUpperCase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-toUpperCase' class='name expandable'>toUpperCase</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Transforms a CharSequences to uppercase, copying the sources spans and keeping them spans as\n much as possible close ...</div><div class='long'><p>Transforms a CharSequences to uppercase, copying the sources spans and keeping them spans as\n much as possible close to their relative original places. In the case the the uppercase\n string is identical to the sources, the source itself is returned instead of being copied.</p>\n\n<p> If copySpans is set, source must be an instance of Spanned.</p>\n\n<p> {@hide}</p>\n</div></div></div><div id='method-writeToParcel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.TextUtils'>android.text.TextUtils</span><br/><a href='source/TextUtils.html#android-text-TextUtils-method-writeToParcel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.TextUtils-method-writeToParcel' class='name expandable'>writeToParcel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flatten a CharSequence and whatever styles can be copied across processes\n into the parcel. ...</div><div class='long'><p>Flatten a CharSequence and whatever styles can be copied across processes\n into the parcel.</p>\n</div></div></div></div></div></div></div>","meta":{}});