Ext.data.JsonP.android_text_NoCopySpan_Concrete({"tagname":"class","name":"android.text.NoCopySpan.Concrete","autodetected":{},"files":[{"filename":"Concrete.js","href":"Concrete.html#android-text-NoCopySpan-Concrete"}],"extends":"java.lang.Object","members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.text.NoCopySpan.Concrete","short_doc":"implements android.text.NoCopySpan\n\nConvenience equivalent for when you would just want a new Object() for\n a span bu...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.text.NoCopySpan.Concrete</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Concrete.html#android-text-NoCopySpan-Concrete' target='_blank'>Concrete.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.text.NoCopySpan\" rel=\"android.text.NoCopySpan\" class=\"docClass\">android.text.NoCopySpan</a></p>\n\n<p>Convenience equivalent for when you would just want a new Object() for\n a span but want it to be no-copy.  Use this instead.</p>\n</div><div class='members'></div></div>","meta":{}});