Ext.data.JsonP.android_text_Spannable({"tagname":"class","name":"android.text.Spannable","autodetected":{},"files":[{"filename":"Spannable.js","href":"Spannable.html#android-text-Spannable"}],"members":[{"name":"setSpan","tagname":"method","owner":"android.text.Spannable","id":"method-setSpan","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.Spannable","short_doc":"implements android.text.Spanned\n\n This is the interface for text to which markup objects can be\n attached and detached. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Spannable.html#android-text-Spannable' target='_blank'>Spannable.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.text.Spanned\" rel=\"android.text.Spanned\" class=\"docClass\">android.text.Spanned</a></p>\n\n<p> This is the interface for text to which markup objects can be\n attached and detached.  Not all Spannable classes have mutable text;\n see <a href=\"#!/api/android.text.Editable\" rel=\"android.text.Editable\" class=\"docClass\">android.text.Editable</a> for that.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-setSpan' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.Spannable'>android.text.Spannable</span><br/><a href='source/Spannable.html#android-text-Spannable-method-setSpan' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.Spannable-method-setSpan' class='name expandable'>setSpan</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attach the specified markup object to the range start&hellip;end\n of the text, or move the object to that range if it...</div><div class='long'><p>Attach the specified markup object to the range <code>start&hellip;end</code>\n of the text, or move the object to that range if it was already\n attached elsewhere.  See <a href=\"#!/api/android.text.Spanned\" rel=\"android.text.Spanned\" class=\"docClass\">android.text.Spanned</a> for an explanation of\n what the flags mean.  The object can be one that has meaning only\n within your application, or it can be one that the text system will\n use to affect text display or behavior.  Some noteworthy ones are\n the subclasses of android.text.style.CharacterStyle and\n android.text.style.ParagraphStyle, and\n <a href=\"#!/api/android.text.TextWatcher\" rel=\"android.text.TextWatcher\" class=\"docClass\">android.text.TextWatcher</a> and\n <a href=\"#!/api/android.text.SpanWatcher\" rel=\"android.text.SpanWatcher\" class=\"docClass\">android.text.SpanWatcher</a>.</p>\n</div></div></div></div></div></div></div>","meta":{}});