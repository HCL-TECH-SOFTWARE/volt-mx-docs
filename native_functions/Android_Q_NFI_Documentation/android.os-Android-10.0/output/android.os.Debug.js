Ext.data.JsonP.android_os_Debug({"tagname":"class","name":"android.os.Debug","autodetected":{},"files":[{"filename":"Debug.js","href":"Debug.html#android-os-Debug"}],"extends":"java.lang.Object","members":[{"name":"SHOW_CLASSLOADER","tagname":"property","owner":"android.os.Debug","id":"property-SHOW_CLASSLOADER","meta":{}},{"name":"SHOW_FULL_DETAIL","tagname":"property","owner":"android.os.Debug","id":"property-SHOW_FULL_DETAIL","meta":{}},{"name":"SHOW_INITIALIZED","tagname":"property","owner":"android.os.Debug","id":"property-SHOW_INITIALIZED","meta":{}},{"name":"TRACE_COUNT_ALLOCS","tagname":"property","owner":"android.os.Debug","id":"property-TRACE_COUNT_ALLOCS","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"attachJvmtiAgent","tagname":"method","owner":"android.os.Debug","id":"method-attachJvmtiAgent","meta":{}},{"name":"changeDebugPort","tagname":"method","owner":"android.os.Debug","id":"method-changeDebugPort","meta":{"deprecated":{"text":"<p>no longer needed or useful</p>\n"}}},{"name":"dumpService","tagname":"method","owner":"android.os.Debug","id":"method-dumpService","meta":{}},{"name":"enableEmulatorTraceOutput","tagname":"method","owner":"android.os.Debug","id":"method-enableEmulatorTraceOutput","meta":{}},{"name":"getBinderDeathObjectCount","tagname":"method","owner":"android.os.Debug","id":"method-getBinderDeathObjectCount","meta":{}},{"name":"getBinderLocalObjectCount","tagname":"method","owner":"android.os.Debug","id":"method-getBinderLocalObjectCount","meta":{}},{"name":"getBinderProxyObjectCount","tagname":"method","owner":"android.os.Debug","id":"method-getBinderProxyObjectCount","meta":{}},{"name":"getBinderReceivedTransactions","tagname":"method","owner":"android.os.Debug","id":"method-getBinderReceivedTransactions","meta":{}},{"name":"getBinderSentTransactions","tagname":"method","owner":"android.os.Debug","id":"method-getBinderSentTransactions","meta":{}},{"name":"getCaller","tagname":"method","owner":"android.os.Debug","id":"method-getCaller","meta":{}},{"name":"getCallers","tagname":"method","owner":"android.os.Debug","id":"method-getCallers","meta":{}},{"name":"getGlobalAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalAllocCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getGlobalAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalAllocSize","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getGlobalClassInitCount","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalClassInitCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getGlobalClassInitTime","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalClassInitTime","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getGlobalExternalAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalExternalAllocCount","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"getGlobalExternalAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalExternalAllocSize","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"getGlobalExternalFreedCount","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalExternalFreedCount","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"getGlobalExternalFreedSize","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalExternalFreedSize","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"getGlobalFreedCount","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalFreedCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getGlobalFreedSize","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalFreedSize","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getGlobalGcInvocationCount","tagname":"method","owner":"android.os.Debug","id":"method-getGlobalGcInvocationCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getLoadedClassCount","tagname":"method","owner":"android.os.Debug","id":"method-getLoadedClassCount","meta":{}},{"name":"getNativeHeapAllocatedSize","tagname":"method","owner":"android.os.Debug","id":"method-getNativeHeapAllocatedSize","meta":{}},{"name":"getNativeHeapFreeSize","tagname":"method","owner":"android.os.Debug","id":"method-getNativeHeapFreeSize","meta":{}},{"name":"getNativeHeapSize","tagname":"method","owner":"android.os.Debug","id":"method-getNativeHeapSize","meta":{}},{"name":"getRuntimeStat","tagname":"method","owner":"android.os.Debug","id":"method-getRuntimeStat","meta":{}},{"name":"getRuntimeStats","tagname":"method","owner":"android.os.Debug","id":"method-getRuntimeStats","meta":{}},{"name":"getThreadAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-getThreadAllocCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getThreadAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-getThreadAllocSize","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"getThreadExternalAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-getThreadExternalAllocCount","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"getThreadExternalAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-getThreadExternalAllocSize","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"getThreadGcInvocationCount","tagname":"method","owner":"android.os.Debug","id":"method-getThreadGcInvocationCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"isDebuggerConnected","tagname":"method","owner":"android.os.Debug","id":"method-isDebuggerConnected","meta":{}},{"name":"printLoadedClasses","tagname":"method","owner":"android.os.Debug","id":"method-printLoadedClasses","meta":{}},{"name":"resetAllCounts","tagname":"method","owner":"android.os.Debug","id":"method-resetAllCounts","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetGlobalAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalAllocCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetGlobalAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalAllocSize","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetGlobalClassInitCount","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalClassInitCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetGlobalClassInitTime","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalClassInitTime","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetGlobalExternalAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalExternalAllocCount","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"resetGlobalExternalAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalExternalAllocSize","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"resetGlobalExternalFreedCount","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalExternalFreedCount","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"resetGlobalExternalFreedSize","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalExternalFreedSize","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"resetGlobalFreedCount","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalFreedCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetGlobalFreedSize","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalFreedSize","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetGlobalGcInvocationCount","tagname":"method","owner":"android.os.Debug","id":"method-resetGlobalGcInvocationCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetThreadAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-resetThreadAllocCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetThreadAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-resetThreadAllocSize","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"resetThreadExternalAllocCount","tagname":"method","owner":"android.os.Debug","id":"method-resetThreadExternalAllocCount","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"resetThreadExternalAllocSize","tagname":"method","owner":"android.os.Debug","id":"method-resetThreadExternalAllocSize","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"resetThreadGcInvocationCount","tagname":"method","owner":"android.os.Debug","id":"method-resetThreadGcInvocationCount","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"setAllocationLimit","tagname":"method","owner":"android.os.Debug","id":"method-setAllocationLimit","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"setFieldsOn","tagname":"method","owner":"android.os.Debug","id":"method-setFieldsOn","meta":{}},{"name":"setGlobalAllocationLimit","tagname":"method","owner":"android.os.Debug","id":"method-setGlobalAllocationLimit","meta":{"deprecated":{"text":"<p>This method is now obsolete.</p>\n"}}},{"name":"startAllocCounting","tagname":"method","owner":"android.os.Debug","id":"method-startAllocCounting","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"startMethodTracingSampling","tagname":"method","owner":"android.os.Debug","id":"method-startMethodTracingSampling","meta":{}},{"name":"startNativeTracing","tagname":"method","owner":"android.os.Debug","id":"method-startNativeTracing","meta":{}},{"name":"stopAllocCounting","tagname":"method","owner":"android.os.Debug","id":"method-stopAllocCounting","meta":{"deprecated":{"text":"<p>Accurate counting is a burden on the runtime and may be removed.</p>\n"}}},{"name":"stopMethodTracing","tagname":"method","owner":"android.os.Debug","id":"method-stopMethodTracing","meta":{}},{"name":"stopNativeTracing","tagname":"method","owner":"android.os.Debug","id":"method-stopNativeTracing","meta":{}},{"name":"threadCpuTimeNanos","tagname":"method","owner":"android.os.Debug","id":"method-threadCpuTimeNanos","meta":{}},{"name":"waitForDebugger","tagname":"method","owner":"android.os.Debug","id":"method-waitForDebugger","meta":{}},{"name":"waitingForDebugger","tagname":"method","owner":"android.os.Debug","id":"method-waitingForDebugger","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.Debug","short_doc":"Provides various debugging methods for Android applications, including\n tracing and allocation counts. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.os.Debug</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Debug.html#android-os-Debug' target='_blank'>Debug.js</a></div></pre><div class='doc-contents'><p>Provides various debugging methods for Android applications, including\n tracing and allocation counts.\n <p><strong>Logging Trace Files</strong></p>\n <p>Debug can create log files that give details about an application, such as\n a call stack and start/stop times for any running methods. See <a\n href=\"{@docRoot}studio/profile/traceview.html\">Inspect Trace Logs with\n Traceview</a> for information about reading trace files. To start logging\n trace files, call one of the startMethodTracing() methods. To stop tracing,\n call <a href=\"#!/api/android.os.Debug-method-stopMethodTracing\" rel=\"android.os.Debug-method-stopMethodTracing\" class=\"docClass\">stopMethodTracing</a>().</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-SHOW_CLASSLOADER' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-property-SHOW_CLASSLOADER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-property-SHOW_CLASSLOADER' class='name expandable'>SHOW_CLASSLOADER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-SHOW_FULL_DETAIL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-property-SHOW_FULL_DETAIL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-property-SHOW_FULL_DETAIL' class='name expandable'>SHOW_FULL_DETAIL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flags for printLoadedClasses(). ...</div><div class='long'><p>Flags for printLoadedClasses().  Default behavior is to only show\nthe class name.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-SHOW_INITIALIZED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-property-SHOW_INITIALIZED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-property-SHOW_INITIALIZED' class='name expandable'>SHOW_INITIALIZED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-TRACE_COUNT_ALLOCS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-property-TRACE_COUNT_ALLOCS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-property-TRACE_COUNT_ALLOCS' class='name expandable'>TRACE_COUNT_ALLOCS</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Flags for startMethodTracing(). ...</div><div class='long'><p>Flags for startMethodTracing().  These can be ORed together.</p>\n\n<p>TRACE_COUNT_ALLOCS adds the results from startAllocCounting to the\ntrace key file.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-attachJvmtiAgent' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-attachJvmtiAgent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-attachJvmtiAgent' class='name expandable'>attachJvmtiAgent</a>( <span class='pre'>library, options, classLoader</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attach a library as a jvmti agent to the current runtime, with the given classloader\n determining the library search ...</div><div class='long'><p>Attach a library as a jvmti agent to the current runtime, with the given classloader\n determining the library search path.\n <p>\n Note: agents may only be attached to debuggable apps. Otherwise, this function will\n throw a SecurityException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>library</span> : String<div class='sub-desc'><p>the library containing the agent.</p>\n</div></li><li><span class='pre'>options</span> : String<div class='sub-desc'><p>the options passed to the agent.</p>\n</div></li><li><span class='pre'>classLoader</span> : Object {ClassLoader}<div class='sub-desc'><p>the classloader determining the library search path.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if the agent could not be attached.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if the app is not debuggable.</p>\n</div></li></ul></div></div></div><div id='method-changeDebugPort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-changeDebugPort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-changeDebugPort' class='name expandable'>changeDebugPort</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Change the JDWP port. ...</div><div class='long'><p>Change the JDWP port.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>no longer needed or useful</p>\n\n        </div>\n</div></div></div><div id='method-dumpService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-dumpService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-dumpService' class='name expandable'>dumpService</a>( <span class='pre'>name, fd, args</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Get a debugging dump of a system service by name. ...</div><div class='long'><p>Get a debugging dump of a system service by name.</p>\n\n<p> <p>Most services require the caller to hold android.permission.DUMP.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>of the service to dump</p>\n</div></li><li><span class='pre'>fd</span> : Object {FileDescriptor}<div class='sub-desc'><p>to write dump output to (usually an output log file)</p>\n</div></li><li><span class='pre'>args</span> : Object {java.lang.String[]}<div class='sub-desc'><p>to pass to the service's dump method, may be null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the service was dumped successfully, false if\n     the service could not be found or had an error while dumping</p>\n</div></li></ul></div></div></div><div id='method-enableEmulatorTraceOutput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-enableEmulatorTraceOutput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-enableEmulatorTraceOutput' class='name expandable'>enableEmulatorTraceOutput</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable \"emulator traces\", in which information about the current\n method is made available to the \"emulator -trace\" f...</div><div class='long'><p>Enable \"emulator traces\", in which information about the current\n method is made available to the \"emulator -trace\" feature.  There\n is no corresponding \"disable\" call -- this is intended for use by\n the framework when tracing should be turned on and left that way, so\n that traces captured with F9/F10 will include the necessary data.</p>\n\n<p> This puts the VM into \"profile\" mode, which has performance\n consequences.</p>\n\n<p> To temporarily enable tracing, use <a href=\"#!/api/android.os.Debug-method-startNativeTracing\" rel=\"android.os.Debug-method-startNativeTracing\" class=\"docClass\">startNativeTracing</a>().</p>\n</div></div></div><div id='method-getBinderDeathObjectCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getBinderDeathObjectCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getBinderDeathObjectCount' class='name expandable'>getBinderDeathObjectCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of death notification links to Binder objects that\n exist in the current process. ...</div><div class='long'><p>Returns the number of death notification links to Binder objects that\n exist in the current process.</p>\n</div></div></div><div id='method-getBinderLocalObjectCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getBinderLocalObjectCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getBinderLocalObjectCount' class='name expandable'>getBinderLocalObjectCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of active local Binder objects that exist in the\n current process. ...</div><div class='long'><p>Returns the number of active local Binder objects that exist in the\n current process.</p>\n</div></div></div><div id='method-getBinderProxyObjectCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getBinderProxyObjectCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getBinderProxyObjectCount' class='name expandable'>getBinderProxyObjectCount</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of references to remote proxy Binder objects that\n exist in the current process. ...</div><div class='long'><p>Returns the number of references to remote proxy Binder objects that\n exist in the current process.</p>\n</div></div></div><div id='method-getBinderReceivedTransactions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getBinderReceivedTransactions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getBinderReceivedTransactions' class='name expandable'>getBinderReceivedTransactions</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of received transactions from the binder driver. ...</div><div class='long'><p>Returns the number of received transactions from the binder driver.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of received transactions or -1 if it could not read the stats.</p>\n</div></li></ul></div></div></div><div id='method-getBinderSentTransactions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getBinderSentTransactions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getBinderSentTransactions' class='name expandable'>getBinderSentTransactions</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of sent transactions from this process. ...</div><div class='long'><p>Returns the number of sent transactions from this process.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The number of sent transactions or -1 if it could not read t.</p>\n</div></li></ul></div></div></div><div id='method-getCaller' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getCaller' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getCaller' class='name expandable'>getCaller</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a String describing the immediate caller of the calling method.\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getCallers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getCallers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getCallers' class='name expandable'>getCallers</a>( <span class='pre'>depth, linePrefix</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Like getCallers(int), but each location is append to the string\n as a new line with linePrefix in front of it. ...</div><div class='long'><p>Like <a href=\"#!/api/android.os.Debug-method-getCallers\" rel=\"android.os.Debug-method-getCallers\" class=\"docClass\">getCallers</a>(int), but each location is append to the string\n as a new line with <var>linePrefix</var> in front of it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>depth</span> : Number<div class='sub-desc'><p>the number of levels to return, starting with the immediate caller.</p>\n</div></li><li><span class='pre'>linePrefix</span> : String<div class='sub-desc'><p>prefix to put in front of each location.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string describing the call stack.\n {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getGlobalAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalAllocCount' class='name expandable'>getGlobalAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the global count of objects allocated by the runtime between a\n start and stop. ...</div><div class='long'><p>Returns the global count of objects allocated by the runtime between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalAllocSize' class='name expandable'>getGlobalAllocSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the global size, in bytes, of objects allocated by the runtime between a\n start and stop. ...</div><div class='long'><p>Returns the global size, in bytes, of objects allocated by the runtime between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalClassInitCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalClassInitCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalClassInitCount' class='name expandable'>getGlobalClassInitCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the number of classes successfully initialized (ie those that executed without\n throwing an exception) betwee...</div><div class='long'><p>Returns the number of classes successfully initialized (ie those that executed without\n throwing an exception) between a start and\n stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalClassInitTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalClassInitTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalClassInitTime' class='name expandable'>getGlobalClassInitTime</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the time spent successfully initializing classes between a\n start and stop. ...</div><div class='long'><p>Returns the time spent successfully initializing classes between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalExternalAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalExternalAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalExternalAllocCount' class='name expandable'>getGlobalExternalAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and always returns 0. ...</div><div class='long'><p>This method exists for compatibility and always returns 0.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalExternalAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalExternalAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalExternalAllocSize' class='name expandable'>getGlobalExternalAllocSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and always returns 0. ...</div><div class='long'><p>This method exists for compatibility and always returns 0.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalExternalFreedCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalExternalFreedCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalExternalFreedCount' class='name expandable'>getGlobalExternalFreedCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and always returns 0. ...</div><div class='long'><p>This method exists for compatibility and always returns 0.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalExternalFreedSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalExternalFreedSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalExternalFreedSize' class='name expandable'>getGlobalExternalFreedSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalFreedCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalFreedCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalFreedCount' class='name expandable'>getGlobalFreedCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the global count of objects freed by the runtime between a\n start and stop. ...</div><div class='long'><p>Returns the global count of objects freed by the runtime between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalFreedSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalFreedSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalFreedSize' class='name expandable'>getGlobalFreedSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the global size, in bytes, of objects freed by the runtime between a\n start and stop. ...</div><div class='long'><p>Returns the global size, in bytes, of objects freed by the runtime between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getGlobalGcInvocationCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getGlobalGcInvocationCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getGlobalGcInvocationCount' class='name expandable'>getGlobalGcInvocationCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the number of non-concurrent GC invocations between a\n start and stop. ...</div><div class='long'><p>Returns the number of non-concurrent GC invocations between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getLoadedClassCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getLoadedClassCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getLoadedClassCount' class='name expandable'>getLoadedClassCount</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the number of loaded classes. ...</div><div class='long'><p>Get the number of loaded classes.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of loaded classes.</p>\n</div></li></ul></div></div></div><div id='method-getNativeHeapAllocatedSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getNativeHeapAllocatedSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getNativeHeapAllocatedSize' class='name expandable'>getNativeHeapAllocatedSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the amount of allocated memory in the native heap. ...</div><div class='long'><p>Returns the amount of allocated memory in the native heap.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The allocated size in bytes.</p>\n</div></li></ul></div></div></div><div id='method-getNativeHeapFreeSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getNativeHeapFreeSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getNativeHeapFreeSize' class='name expandable'>getNativeHeapFreeSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the amount of free memory in the native heap. ...</div><div class='long'><p>Returns the amount of free memory in the native heap.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The freed size in bytes.</p>\n</div></li></ul></div></div></div><div id='method-getNativeHeapSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getNativeHeapSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getNativeHeapSize' class='name expandable'>getNativeHeapSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the size of the native heap. ...</div><div class='long'><p>Returns the size of the native heap.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The size of the native heap in bytes.</p>\n</div></li></ul></div></div></div><div id='method-getRuntimeStat' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getRuntimeStat' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getRuntimeStat' class='name expandable'>getRuntimeStat</a>( <span class='pre'>statName</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value of a particular runtime statistic or {@code null} if no\n such runtime statistic exists. ...</div><div class='long'><p>Returns the value of a particular runtime statistic or {@code null} if no\n such runtime statistic exists.</p>\n\n<p> <p>The following table lists the runtime statistics that the runtime supports.\n Note runtime statistics may be added or removed in a future API level.</p></p>\n\n<p> <table>\n     <thead>\n         <tr>\n             <th>Runtime statistic name</th>\n             <th>Meaning</th>\n             <th>Example</th>\n             <th>Supported (API Levels)</th>\n         </tr>\n     </thead>\n     <tbody>\n         <tr>\n             <td>art.gc.gc-count</td>\n             <td>The number of garbage collection runs.</td>\n             <td>{@code 164}</td>\n             <td>23</td>\n         </tr>\n         <tr>\n             <td>art.gc.gc-time</td>\n             <td>The total duration of garbage collection runs in ms.</td>\n             <td>{@code 62364}</td>\n             <td>23</td>\n         </tr>\n         <tr>\n             <td>art.gc.bytes-allocated</td>\n             <td>The total number of bytes that the application allocated.</td>\n             <td>{@code 1463948408}</td>\n             <td>23</td>\n         </tr>\n         <tr>\n             <td>art.gc.bytes-freed</td>\n             <td>The total number of bytes that garbage collection reclaimed.</td>\n             <td>{@code 1313493084}</td>\n             <td>23</td>\n         </tr>\n         <tr>\n             <td>art.gc.blocking-gc-count</td>\n             <td>The number of blocking garbage collection runs.</td>\n             <td>{@code 2}</td>\n             <td>23</td>\n         </tr>\n         <tr>\n             <td>art.gc.blocking-gc-time</td>\n             <td>The total duration of blocking garbage collection runs in ms.</td>\n             <td>{@code 804}</td>\n             <td>23</td>\n         </tr>\n         <tr>\n             <td>art.gc.gc-count-rate-histogram</td>\n             <td>Every 10 seconds, the gc-count-rate is computed as the number of garbage\n                 collection runs that have occurred over the last 10\n                 seconds. art.gc.gc-count-rate-histogram is a histogram of the gc-count-rate\n                 samples taken since the process began. The histogram can be used to identify\n                 instances of high rates of garbage collection runs. For example, a histogram\n                 of \"0:34503,1:45350,2:11281,3:8088,4:43,5:8\" shows that most of the time\n                 there are between 0 and 2 garbage collection runs every 10 seconds, but there\n                 were 8 distinct 10-second intervals in which 5 garbage collection runs\n                 occurred.</td>\n             <td>{@code 0:34503,1:45350,2:11281,3:8088,4:43,5:8}</td>\n             <td>23</td>\n         </tr>\n         <tr>\n             <td>art.gc.blocking-gc-count-rate-histogram</td>\n             <td>Every 10 seconds, the blocking-gc-count-rate is computed as the number of\n                 blocking garbage collection runs that have occurred over the last 10\n                 seconds. art.gc.blocking-gc-count-rate-histogram is a histogram of the\n                 blocking-gc-count-rate samples taken since the process began. The histogram\n                 can be used to identify instances of high rates of blocking garbage\n                 collection runs. For example, a histogram of \"0:99269,1:1,2:1\" shows that\n                 most of the time there are zero blocking garbage collection runs every 10\n                 seconds, but there was one 10-second interval in which one blocking garbage\n                 collection run occurred, and there was one interval in which two blocking\n                 garbage collection runs occurred.</td>\n             <td>{@code 0:99269,1:1,2:1}</td>\n             <td>23</td>\n         </tr>\n     </tbody>\n </table></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>statName</span> : String<div class='sub-desc'><p>the name of the runtime statistic to look up.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the value of the specified runtime statistic or {@code null} if the\n         runtime statistic doesn't exist.</p>\n</div></li></ul></div></div></div><div id='method-getRuntimeStats' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getRuntimeStats' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getRuntimeStats' class='name expandable'>getRuntimeStats</a>( <span class='pre'></span> ) : Object {java.util.Map}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a map of the names/values of the runtime statistics\n that getRuntimeStat(String) supports. ...</div><div class='long'><p>Returns a map of the names/values of the runtime statistics\n that <a href=\"#!/api/android.os.Debug-method-getRuntimeStat\" rel=\"android.os.Debug-method-getRuntimeStat\" class=\"docClass\">getRuntimeStat</a>(String) supports.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Map}</span><div class='sub-desc'><p>a map of the names/values of the supported runtime statistics.</p>\n</div></li></ul></div></div></div><div id='method-getThreadAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getThreadAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getThreadAllocCount' class='name expandable'>getThreadAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the thread-local count of objects allocated by the runtime between a\n start and stop. ...</div><div class='long'><p>Returns the thread-local count of objects allocated by the runtime between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-getThreadAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getThreadAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getThreadAllocSize' class='name expandable'>getThreadAllocSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the thread-local size of objects allocated by the runtime between a\n start and stop. ...</div><div class='long'><p>Returns the thread-local size of objects allocated by the runtime between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The allocated size in bytes.</p>\n</div></li></ul></div></div></div><div id='method-getThreadExternalAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getThreadExternalAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getThreadExternalAllocCount' class='name expandable'>getThreadExternalAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-getThreadExternalAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getThreadExternalAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getThreadExternalAllocSize' class='name expandable'>getThreadExternalAllocSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-getThreadGcInvocationCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-getThreadGcInvocationCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-getThreadGcInvocationCount' class='name expandable'>getThreadGcInvocationCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the number of thread-local non-concurrent GC invocations between a\n start and stop. ...</div><div class='long'><p>Returns the number of thread-local non-concurrent GC invocations between a\n start and stop.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-isDebuggerConnected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-isDebuggerConnected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-isDebuggerConnected' class='name expandable'>isDebuggerConnected</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine if a debugger is currently attached. ...</div><div class='long'><p>Determine if a debugger is currently attached.</p>\n</div></div></div><div id='method-printLoadedClasses' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-printLoadedClasses' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-printLoadedClasses' class='name expandable'>printLoadedClasses</a>( <span class='pre'>flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dump a list of all currently loaded class to the log file. ...</div><div class='long'><p>Dump a list of all currently loaded class to the log file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>See constants above.</p>\n</div></li></ul></div></div></div><div id='method-resetAllCounts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetAllCounts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetAllCounts' class='name expandable'>resetAllCounts</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears all the global and thread-local memory allocation counters. ...</div><div class='long'><p>Clears all the global and thread-local memory allocation counters.\n@see <a href=\"#!/api/android.os.Debug-method-startAllocCounting\" rel=\"android.os.Debug-method-startAllocCounting\" class=\"docClass\">startAllocCounting</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalAllocCount' class='name expandable'>resetGlobalAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the global count of objects allocated. ...</div><div class='long'><p>Clears the global count of objects allocated.\n@see <a href=\"#!/api/android.os.Debug-method-getGlobalAllocCount\" rel=\"android.os.Debug-method-getGlobalAllocCount\" class=\"docClass\">getGlobalAllocCount</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalAllocSize' class='name expandable'>resetGlobalAllocSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the global size of objects allocated. ...</div><div class='long'><p>Clears the global size of objects allocated.\n@see <a href=\"#!/api/android.os.Debug-method-getGlobalAllocSize\" rel=\"android.os.Debug-method-getGlobalAllocSize\" class=\"docClass\">getGlobalAllocSize</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalClassInitCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalClassInitCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalClassInitCount' class='name expandable'>resetGlobalClassInitCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the count of classes initialized. ...</div><div class='long'><p>Clears the count of classes initialized.\n@see <a href=\"#!/api/android.os.Debug-method-getGlobalClassInitCount\" rel=\"android.os.Debug-method-getGlobalClassInitCount\" class=\"docClass\">getGlobalClassInitCount</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalClassInitTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalClassInitTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalClassInitTime' class='name expandable'>resetGlobalClassInitTime</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the count of time spent initializing classes. ...</div><div class='long'><p>Clears the count of time spent initializing classes.\n@see <a href=\"#!/api/android.os.Debug-method-getGlobalClassInitTime\" rel=\"android.os.Debug-method-getGlobalClassInitTime\" class=\"docClass\">getGlobalClassInitTime</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalExternalAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalExternalAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalExternalAllocCount' class='name expandable'>resetGlobalExternalAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalExternalAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalExternalAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalExternalAllocSize' class='name expandable'>resetGlobalExternalAllocSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalExternalFreedCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalExternalFreedCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalExternalFreedCount' class='name expandable'>resetGlobalExternalFreedCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalExternalFreedSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalExternalFreedSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalExternalFreedSize' class='name expandable'>resetGlobalExternalFreedSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalFreedCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalFreedCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalFreedCount' class='name expandable'>resetGlobalFreedCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the global count of objects freed. ...</div><div class='long'><p>Clears the global count of objects freed.\n@see <a href=\"#!/api/android.os.Debug-method-getGlobalFreedCount\" rel=\"android.os.Debug-method-getGlobalFreedCount\" class=\"docClass\">getGlobalFreedCount</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalFreedSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalFreedSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalFreedSize' class='name expandable'>resetGlobalFreedSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the global size of objects freed. ...</div><div class='long'><p>Clears the global size of objects freed.\n@see <a href=\"#!/api/android.os.Debug-method-getGlobalFreedSize\" rel=\"android.os.Debug-method-getGlobalFreedSize\" class=\"docClass\">getGlobalFreedSize</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetGlobalGcInvocationCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetGlobalGcInvocationCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetGlobalGcInvocationCount' class='name expandable'>resetGlobalGcInvocationCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the count of non-concurrent GC invocations. ...</div><div class='long'><p>Clears the count of non-concurrent GC invocations.\n@see <a href=\"#!/api/android.os.Debug-method-getGlobalGcInvocationCount\" rel=\"android.os.Debug-method-getGlobalGcInvocationCount\" class=\"docClass\">getGlobalGcInvocationCount</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetThreadAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetThreadAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetThreadAllocCount' class='name expandable'>resetThreadAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the thread-local count of objects allocated. ...</div><div class='long'><p>Clears the thread-local count of objects allocated.\n@see <a href=\"#!/api/android.os.Debug-method-getThreadAllocCount\" rel=\"android.os.Debug-method-getThreadAllocCount\" class=\"docClass\">getThreadAllocCount</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetThreadAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetThreadAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetThreadAllocSize' class='name expandable'>resetThreadAllocSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the thread-local count of objects allocated. ...</div><div class='long'><p>Clears the thread-local count of objects allocated.\n@see <a href=\"#!/api/android.os.Debug-method-getThreadAllocSize\" rel=\"android.os.Debug-method-getThreadAllocSize\" class=\"docClass\">getThreadAllocSize</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-resetThreadExternalAllocCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetThreadExternalAllocCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetThreadExternalAllocCount' class='name expandable'>resetThreadExternalAllocCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-resetThreadExternalAllocSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetThreadExternalAllocSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetThreadExternalAllocSize' class='name expandable'>resetThreadExternalAllocSize</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method exists for compatibility and has no effect. ...</div><div class='long'><p>This method exists for compatibility and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-resetThreadGcInvocationCount' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-resetThreadGcInvocationCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-resetThreadGcInvocationCount' class='name expandable'>resetThreadGcInvocationCount</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Clears the thread-local count of non-concurrent GC invocations. ...</div><div class='long'><p>Clears the thread-local count of non-concurrent GC invocations.\n@see <a href=\"#!/api/android.os.Debug-method-getThreadGcInvocationCount\" rel=\"android.os.Debug-method-getThreadGcInvocationCount\" class=\"docClass\">getThreadGcInvocationCount</a>()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-setAllocationLimit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-setAllocationLimit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-setAllocationLimit' class='name expandable'>setAllocationLimit</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Establish an object allocation limit in the current thread. ...</div><div class='long'><p>Establish an object allocation limit in the current thread.\n This feature was never enabled in release builds.  The\n allocation limits feature was removed in Honeycomb.  This\n method exists for compatibility and always returns -1 and has\n no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-setFieldsOn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-setFieldsOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-setFieldsOn' class='name expandable'>setFieldsOn</a>( <span class='pre'>cl, partial, cl, partial</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reflectively sets static fields of a class based on internal debugging\n properties. ...</div><div class='long'><p>Reflectively sets static fields of a class based on internal debugging\n properties.  This method is a no-op if false is\n false.\n <p>\n <strong>NOTE TO APPLICATION DEVELOPERS</strong>: false will\n always be false in release builds.  This API is typically only useful\n for platform developers.\n </p>\n Class setup: define a class whose only fields are non-final, static\n primitive types (except for \"char\") or Strings.  In a static block\n after the field definitions/initializations, pass the class to\n this method, Debug.setFieldsOn(). Example:</p>\n\n<p><pre> package com.example;</pre></p>\n\n<p> import <a href=\"#!/api/android.os.Debug\" rel=\"android.os.Debug\" class=\"docClass\">android.os.Debug</a>;</p>\n\n<p> public class MyDebugVars {\n    public static String s = \"a string\";\n    public static String s2 = \"second string\";\n    public static String ns = null;\n    public static boolean b = false;\n    public static int i = 5;</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cl</span> : Object {java.lang.Class}<div class='sub-desc'><p>The class to (possibly) modify</p>\n</div></li><li><span class='pre'>partial</span> : Boolean<div class='sub-desc'><p>If false, sets all static fields, otherwise, only set\n        fields with the <a href=\"#!/api/android.os.Debug.DebugProperty\" rel=\"android.os.Debug.DebugProperty\" class=\"docClass\">android.os.Debug.DebugProperty</a>\n        annotation</p>\n</div></li><li><span class='pre'>cl</span> : Object<div class='sub-desc'><p>The class to (possibly) modify</p>\n</div></li><li><span class='pre'>partial</span> : Object<div class='sub-desc'><p>If false, sets all static fields, otherwise, only set\n        fields with the <a href=\"#!/api/android.os.Debug.DebugProperty\" rel=\"android.os.Debug.DebugProperty\" class=\"docClass\">android.os.Debug.DebugProperty</a>\n        annotation</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if any fields are final or non-static,\n         or if the type of the field does not match the type of\n         the internal debugging property value.</p>\n</div></li></ul></div></div></div><div id='method-setGlobalAllocationLimit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-setGlobalAllocationLimit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-setGlobalAllocationLimit' class='name expandable'>setGlobalAllocationLimit</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Establish a global object allocation limit. ...</div><div class='long'><p>Establish a global object allocation limit.  This feature was\n never enabled in release builds.  The allocation limits feature\n was removed in Honeycomb.  This method exists for compatibility\n and always returns -1 and has no effect.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method is now obsolete.</p>\n\n        </div>\n</div></div></div><div id='method-startAllocCounting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-startAllocCounting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-startAllocCounting' class='name expandable'>startAllocCounting</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Start counting the number and aggregate size of memory allocations. ...</div><div class='long'><p>Start counting the number and aggregate size of memory allocations.</p>\n\n<p> <p>The start method resets the counts and enables counting.\n The stop method disables the counting so that the analysis\n code doesn't cause additional allocations.  The various <code>get</code> methods return\n the specified value. And the various <code>reset</code> methods reset the specified\n count.</p></p>\n\n<p> <p>Counts are kept for the system as a whole (global) and for each thread.\n The per-thread counts for threads other than the current thread\n are not cleared by the \"reset\" or \"start\" calls.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-startMethodTracingSampling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-startMethodTracingSampling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-startMethodTracingSampling' class='name expandable'>startMethodTracingSampling</a>( <span class='pre'>tracePath, bufferSize, intervalUs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Start sampling-based method tracing, specifying the trace log file name,\n the buffer size, and the sampling interval. ...</div><div class='long'><p>Start sampling-based method tracing, specifying the trace log file name,\n the buffer size, and the sampling interval.\n <p>\n When a relative file path is given, the trace file will be placed under\n your package-specific directory on primary shared/external storage, as\n returned by Context.getExternalFilesDir(String).\n <p>\n See <a href=\"{@docRoot}studio/profile/traceview.html\">Inspect Trace Logs\n with Traceview</a> for information about reading trace files.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tracePath</span> : String<div class='sub-desc'><p>Path to the trace log file to create. If {@code null},\n            this will default to \"dmtrace.trace\". If the file already\n            exists, it will be truncated. If the path given does not end\n            in \".trace\", it will be appended for you.</p>\n</div></li><li><span class='pre'>bufferSize</span> : Number<div class='sub-desc'><p>The maximum amount of trace data we gather. If not\n            given, it defaults to 8MB.</p>\n</div></li><li><span class='pre'>intervalUs</span> : Number<div class='sub-desc'><p>The amount of time between each sample in microseconds.</p>\n</div></li></ul></div></div></div><div id='method-startNativeTracing' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-startNativeTracing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-startNativeTracing' class='name expandable'>startNativeTracing</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable qemu tracing. ...</div><div class='long'><p>Enable qemu tracing. For this to work requires running everything inside\n the qemu emulator; otherwise, this method will have no effect. The trace\n file is specified on the command line when the emulator is started. For\n example, the following command line <br />\n <code>emulator -trace foo</code><br />\n will start running the emulator and create a trace file named \"foo\". This\n method simply enables writing the trace records to the trace file.</p>\n\n<p> <p>\n The main differences between this and startMethodTracing() are\n that tracing in the qemu emulator traces every cpu instruction of every\n process, including kernel code, so we have more complete information,\n including all context switches. We can also get more detailed information\n such as cache misses. The sequence of calls is determined by\n post-processing the instruction trace. The qemu tracing is also done\n without modifying the application or perturbing the timing of calls\n because no instrumentation is added to the application being traced.\n </p></p>\n\n<p> <p>\n One limitation of using this method compared to using\n startMethodTracing() on the real device is that the emulator\n does not model all of the real hardware effects such as memory and\n bus contention.  The emulator also has a simple cache model and cannot\n capture all the complexities of a real cache.\n </p></p>\n</div></div></div><div id='method-stopAllocCounting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-stopAllocCounting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-stopAllocCounting' class='name expandable'>stopAllocCounting</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Stop counting the number and aggregate size of memory allocations. ...</div><div class='long'><p>Stop counting the number and aggregate size of memory allocations.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Accurate counting is a burden on the runtime and may be removed.</p>\n\n        </div>\n</div></div></div><div id='method-stopMethodTracing' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-stopMethodTracing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-stopMethodTracing' class='name expandable'>stopMethodTracing</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop method tracing. ...</div><div class='long'><p>Stop method tracing.</p>\n</div></div></div><div id='method-stopNativeTracing' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-stopNativeTracing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-stopNativeTracing' class='name expandable'>stopNativeTracing</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop qemu tracing. ...</div><div class='long'><p>Stop qemu tracing.  See <a href=\"#!/api/android.os.Debug-method-startNativeTracing\" rel=\"android.os.Debug-method-startNativeTracing\" class=\"docClass\">startNativeTracing</a>() to start tracing.</p>\n\n<p> <p>Tracing can be started and stopped as many times as desired.  When\n the qemu emulator itself is stopped then the buffered trace records\n are flushed and written to the trace file.  In fact, it is not necessary\n to call this method at all; simply killing qemu is sufficient.  But\n starting and stopping a trace is useful for examining a specific\n region of code.</p></p>\n</div></div></div><div id='method-threadCpuTimeNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-threadCpuTimeNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-threadCpuTimeNanos' class='name expandable'>threadCpuTimeNanos</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get an indication of thread CPU usage. ...</div><div class='long'><p>Get an indication of thread CPU usage.  The value returned\n indicates the amount of time that the current thread has spent\n executing code or waiting for certain types of I/O.</p>\n\n<p> The time is expressed in nanoseconds, and is only meaningful\n when compared to the result from an earlier call.  Note that\n nanosecond resolution does not imply nanosecond accuracy.</p>\n\n<p> On system which don't support this operation, the call returns -1.</p>\n</div></div></div><div id='method-waitForDebugger' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-waitForDebugger' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-waitForDebugger' class='name expandable'>waitForDebugger</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Wait until a debugger attaches. ...</div><div class='long'><p>Wait until a debugger attaches.  As soon as the debugger attaches,\n this returns, so you will need to place a breakpoint after the\n waitForDebugger() call if you want to start tracing immediately.</p>\n</div></div></div><div id='method-waitingForDebugger' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Debug'>android.os.Debug</span><br/><a href='source/Debug.html#android-os-Debug-method-waitingForDebugger' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Debug-method-waitingForDebugger' class='name expandable'>waitingForDebugger</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns \"true\" if one or more threads is waiting for a debugger\n to attach. ...</div><div class='long'><p>Returns \"true\" if one or more threads is waiting for a debugger\n to attach.</p>\n</div></div></div></div></div></div></div>","meta":{}});