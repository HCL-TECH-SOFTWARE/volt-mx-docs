Ext.data.JsonP.android_os_ServiceManagerNative({"tagname":"class","name":"android.os.ServiceManagerNative","autodetected":{},"files":[{"filename":"ServiceManagerNative.js","href":"ServiceManagerNative.html#android-os-ServiceManagerNative"}],"extends":"android.os.Binder","hide":true,"members":[{"name":"asBinder","tagname":"method","owner":"android.os.ServiceManagerNative","id":"method-asBinder","meta":{}},{"name":"asInterface","tagname":"method","owner":"android.os.ServiceManagerNative","id":"method-asInterface","meta":{}},{"name":"attachInterface","tagname":"method","owner":"android.os.Binder","id":"method-attachInterface","meta":{}},{"name":"clearCallingIdentity","tagname":"method","owner":"android.os.Binder","id":"method-clearCallingIdentity","meta":{}},{"name":"clearCallingWorkSource","tagname":"method","owner":"android.os.Binder","id":"method-clearCallingWorkSource","meta":{}},{"name":"dump","tagname":"method","owner":"android.os.Binder","id":"method-dump","meta":{}},{"name":"dumpAsync","tagname":"method","owner":"android.os.Binder","id":"method-dumpAsync","meta":{}},{"name":"flushPendingCommands","tagname":"method","owner":"android.os.Binder","id":"method-flushPendingCommands","meta":{}},{"name":"getCallingPid","tagname":"method","owner":"android.os.Binder","id":"method-getCallingPid","meta":{}},{"name":"getCallingUid","tagname":"method","owner":"android.os.Binder","id":"method-getCallingUid","meta":{}},{"name":"getCallingUidOrThrow","tagname":"method","owner":"android.os.Binder","id":"method-getCallingUidOrThrow","meta":{}},{"name":"getCallingUserHandle","tagname":"method","owner":"android.os.Binder","id":"method-getCallingUserHandle","meta":{}},{"name":"getCallingWorkSourceUid","tagname":"method","owner":"android.os.Binder","id":"method-getCallingWorkSourceUid","meta":{}},{"name":"getInterfaceDescriptor","tagname":"method","owner":"android.os.Binder","id":"method-getInterfaceDescriptor","meta":{}},{"name":"isBinderAlive","tagname":"method","owner":"android.os.Binder","id":"method-isBinderAlive","meta":{}},{"name":"joinThreadPool","tagname":"method","owner":"android.os.Binder","id":"method-joinThreadPool","meta":{}},{"name":"linkToDeath","tagname":"method","owner":"android.os.Binder","id":"method-linkToDeath","meta":{}},{"name":"onTransact","tagname":"method","owner":"android.os.ServiceManagerNative","id":"method-onTransact","meta":{}},{"name":"pingBinder","tagname":"method","owner":"android.os.Binder","id":"method-pingBinder","meta":{}},{"name":"queryLocalInterface","tagname":"method","owner":"android.os.Binder","id":"method-queryLocalInterface","meta":{}},{"name":"restoreCallingIdentity","tagname":"method","owner":"android.os.Binder","id":"method-restoreCallingIdentity","meta":{}},{"name":"restoreCallingWorkSource","tagname":"method","owner":"android.os.Binder","id":"method-restoreCallingWorkSource","meta":{}},{"name":"setCallingWorkSourceUid","tagname":"method","owner":"android.os.Binder","id":"method-setCallingWorkSourceUid","meta":{}},{"name":"setDumpDisabled","tagname":"method","owner":"android.os.Binder","id":"method-setDumpDisabled","meta":{}},{"name":"transact","tagname":"method","owner":"android.os.Binder","id":"method-transact","meta":{}},{"name":"unlinkToDeath","tagname":"method","owner":"android.os.Binder","id":"method-unlinkToDeath","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.ServiceManagerNative","short_doc":"implements android.os.IServiceManager\n\nNative implementation of the service manager. ...","classIcon":"icon-class","superclasses":["java.lang.Object","android.os.Binder"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='docClass'>android.os.Binder</a><div class='subclass '><strong>android.os.ServiceManagerNative</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ServiceManagerNative.html#android-os-ServiceManagerNative' target='_blank'>ServiceManagerNative.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.os.IServiceManager\" rel=\"android.os.IServiceManager\" class=\"docClass\">android.os.IServiceManager</a></p>\n\n<p>Native implementation of the service manager.  Most clients will only\n care about getDefault() and possibly asInterface().</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-asBinder' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ServiceManagerNative'>android.os.ServiceManagerNative</span><br/><a href='source/ServiceManagerNative.html#android-os-ServiceManagerNative-method-asBinder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ServiceManagerNative-method-asBinder' class='name expandable'>asBinder</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-asInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ServiceManagerNative'>android.os.ServiceManagerNative</span><br/><a href='source/ServiceManagerNative.html#android-os-ServiceManagerNative-method-asInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ServiceManagerNative-method-asInterface' class='name expandable'>asInterface</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Cast a Binder object into a service manager interface, generating\n a proxy if needed. ...</div><div class='long'><p>Cast a Binder object into a service manager interface, generating\n a proxy if needed.</p>\n</div></div></div><div id='method-attachInterface' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-attachInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-attachInterface' class='name expandable'>attachInterface</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience method for associating a specific interface with the Binder. ...</div><div class='long'><p>Convenience method for associating a specific interface with the Binder.\n After calling, queryLocalInterface() will be implemented for you\n to return the given owner IInterface when the corresponding\n descriptor is requested.</p>\n</div></div></div><div id='method-clearCallingIdentity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-clearCallingIdentity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-clearCallingIdentity' class='name expandable'>clearCallingIdentity</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Reset the identity of the incoming IPC on the current thread. ...</div><div class='long'><p>Reset the identity of the incoming IPC on the current thread.  This can\n be useful if, while handling an incoming call, you will be calling\n on interfaces of other objects that may be local to your process and\n need to do permission checks on the calls coming into them (so they\n will check the permission of your own local process, and not whatever\n process originally called you).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns an opaque token that can be used to restore the\n original calling identity by passing it to\n restoreCallingIdentity(long).\n@see <a href=\"#!/api/android.os.Binder-method-getCallingPid\" rel=\"android.os.Binder-method-getCallingPid\" class=\"docClass\">getCallingPid</a>()\n@see <a href=\"#!/api/android.os.Binder-method-getCallingUid\" rel=\"android.os.Binder-method-getCallingUid\" class=\"docClass\">getCallingUid</a>()\n@see <a href=\"#!/api/android.os.Binder-method-restoreCallingIdentity\" rel=\"android.os.Binder-method-restoreCallingIdentity\" class=\"docClass\">restoreCallingIdentity</a>(long)</p>\n</div></li></ul></div></div></div><div id='method-clearCallingWorkSource' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-clearCallingWorkSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-clearCallingWorkSource' class='name expandable'>clearCallingWorkSource</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Clears the work source on this thread. ...</div><div class='long'><p>Clears the work source on this thread.</p>\n\n<p> <p>The work source will be propagated for future outgoing binder transactions\n executed on this thread.</p>\n\n<p> <p>restoreCallingWorkSource(long) must always be called after clearing the\n worksource.</p>\n\n<p> <p>A typical use case would be</p>\n\n<pre> long token = Binder.clearCallingWorkSource();\n try {\n   // Call an API.\n } finally {\n   Binder.restoreCallingWorkSource(token);\n }\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>token to restore original work source.</p>\n</div></li></ul></div></div></div><div id='method-dump' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-dump' class='name expandable'>dump</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implemented to call the more convenient version\n PrintWriter, String[]). ...</div><div class='long'><p>Implemented to call the more convenient version\n PrintWriter, String[]).</p>\n</div></div></div><div id='method-dumpAsync' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-dumpAsync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-dumpAsync' class='name expandable'>dumpAsync</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like String[]), but ensures the target\n executes asynchronously. ...</div><div class='long'><p>Like String[]), but ensures the target\n executes asynchronously.</p>\n</div></div></div><div id='method-flushPendingCommands' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-flushPendingCommands' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-flushPendingCommands' class='name expandable'>flushPendingCommands</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Flush any Binder commands pending in the current thread to the kernel\n driver. ...</div><div class='long'><p>Flush any Binder commands pending in the current thread to the kernel\n driver.  This can be\n useful to call before performing an operation that may block for a long\n time, to ensure that any pending object references have been released\n in order to prevent the process from holding on to objects longer than\n it needs to.</p>\n</div></div></div><div id='method-getCallingPid' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-getCallingPid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-getCallingPid' class='name expandable'>getCallingPid</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the ID of the process that sent you the current transaction\n that is being processed. ...</div><div class='long'><p>Return the ID of the process that sent you the current transaction\n that is being processed.  This pid can be used with higher-level\n system services to determine its identity and check permissions.\n If the current thread is not currently executing an incoming transaction,\n then its own pid is returned.</p>\n</div></div></div><div id='method-getCallingUid' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-getCallingUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-getCallingUid' class='name expandable'>getCallingUid</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Linux uid assigned to the process that sent you the\n current transaction that is being processed. ...</div><div class='long'><p>Return the Linux uid assigned to the process that sent you the\n current transaction that is being processed.  This uid can be used with\n higher-level system services to determine its identity and check\n permissions.  If the current thread is not currently executing an\n incoming transaction, then its own uid is returned.</p>\n</div></div></div><div id='method-getCallingUidOrThrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-getCallingUidOrThrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-getCallingUidOrThrow' class='name expandable'>getCallingUidOrThrow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Linux uid assigned to the process that sent the transaction\n currently being processed. ...</div><div class='long'><p>Return the Linux uid assigned to the process that sent the transaction\n currently being processed.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the current thread is not currently\n        executing an incoming transaction.</p>\n</div></li></ul></div></div></div><div id='method-getCallingUserHandle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-getCallingUserHandle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-getCallingUserHandle' class='name expandable'>getCallingUserHandle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the UserHandle assigned to the process that sent you the\n current transaction that is being processed. ...</div><div class='long'><p>Return the UserHandle assigned to the process that sent you the\n current transaction that is being processed.  This is the user\n of the caller.  It is distinct from <a href=\"#!/api/android.os.Binder-method-getCallingUid\" rel=\"android.os.Binder-method-getCallingUid\" class=\"docClass\">getCallingUid</a>() in that a\n particular user will have multiple distinct apps running under it each\n with their own uid.  If the current thread is not currently executing an\n incoming transaction, then its own UserHandle is returned.</p>\n</div></div></div><div id='method-getCallingWorkSourceUid' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-getCallingWorkSourceUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-getCallingWorkSourceUid' class='name expandable'>getCallingWorkSourceUid</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the work source set by the caller. ...</div><div class='long'><p>Returns the work source set by the caller.</p>\n\n<p> Unlike getCallingUid(), this result of this method cannot be trusted. The\n caller can set the value to whatever they want. Only use this value if you trust the calling\n uid.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The original UID responsible for the binder transaction.</p>\n</div></li></ul></div></div></div><div id='method-getInterfaceDescriptor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-getInterfaceDescriptor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-getInterfaceDescriptor' class='name expandable'>getInterfaceDescriptor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation returns an empty interface name. ...</div><div class='long'><p>Default implementation returns an empty interface name.</p>\n</div></div></div><div id='method-isBinderAlive' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-isBinderAlive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-isBinderAlive' class='name expandable'>isBinderAlive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc}\n\n Note that if you're calling on a local binder, this always returns true\n because your process is aliv...</div><div class='long'><p>{@inheritDoc}</p>\n\n<p> Note that if you're calling on a local binder, this always returns true\n because your process is alive if you're calling it.</p>\n</div></div></div><div id='method-joinThreadPool' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-joinThreadPool' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-joinThreadPool' class='name expandable'>joinThreadPool</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add the calling thread to the IPC thread pool. ...</div><div class='long'><p>Add the calling thread to the IPC thread pool.  This function does\n not return until the current process is exiting.</p>\n</div></div></div><div id='method-linkToDeath' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-linkToDeath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-linkToDeath' class='name expandable'>linkToDeath</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Local implementation is a no-op. ...</div><div class='long'><p>Local implementation is a no-op.</p>\n</div></div></div><div id='method-onTransact' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ServiceManagerNative'>android.os.ServiceManagerNative</span><br/><a href='source/ServiceManagerNative.html#android-os-ServiceManagerNative-method-onTransact' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ServiceManagerNative-method-onTransact' class='name expandable'>onTransact</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-pingBinder' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-pingBinder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-pingBinder' class='name expandable'>pingBinder</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation always returns true -- if you got here,\n the object is alive. ...</div><div class='long'><p>Default implementation always returns true -- if you got here,\n the object is alive.</p>\n</div></div></div><div id='method-queryLocalInterface' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-queryLocalInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-queryLocalInterface' class='name expandable'>queryLocalInterface</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Use information supplied to attachInterface() to return the\n associated IInterface if it matches the requested\n descr...</div><div class='long'><p>Use information supplied to attachInterface() to return the\n associated IInterface if it matches the requested\n descriptor.</p>\n</div></div></div><div id='method-restoreCallingIdentity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-restoreCallingIdentity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-restoreCallingIdentity' class='name expandable'>restoreCallingIdentity</a>( <span class='pre'>token</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restore the identity of the incoming IPC on the current thread\n back to a previously identity that was returned by cl...</div><div class='long'><p>Restore the identity of the incoming IPC on the current thread\n back to a previously identity that was returned by <a href=\"#!/api/android.os.Binder-method-clearCallingIdentity\" rel=\"android.os.Binder-method-clearCallingIdentity\" class=\"docClass\">clearCallingIdentity</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Number<div class='sub-desc'><p>The opaque token that was previously returned by\n <a href=\"#!/api/android.os.Binder-method-clearCallingIdentity\" rel=\"android.os.Binder-method-clearCallingIdentity\" class=\"docClass\">clearCallingIdentity</a>.\n@see <a href=\"#!/api/android.os.Binder-method-clearCallingIdentity\" rel=\"android.os.Binder-method-clearCallingIdentity\" class=\"docClass\">clearCallingIdentity</a></p>\n</div></li></ul></div></div></div><div id='method-restoreCallingWorkSource' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-restoreCallingWorkSource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-restoreCallingWorkSource' class='name expandable'>restoreCallingWorkSource</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restores the work source on this thread using a token returned by\n or {@link clearCallingWorkSource(). ...</div><div class='long'><p>Restores the work source on this thread using a token returned by\n or {@link clearCallingWorkSource().</p>\n\n<p> <p>A typical use case would be</p>\n\n<pre> long token = Binder.setCallingWorkSourceUid(uid);\n try {\n   // Call an API.\n } finally {\n   Binder.restoreCallingWorkSource(token);\n }\n </pre>\n\n</div></div></div><div id='method-setCallingWorkSourceUid' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-setCallingWorkSourceUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-setCallingWorkSourceUid' class='name expandable'>setCallingWorkSourceUid</a>( <span class='pre'>workSource</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the work source for this thread. ...</div><div class='long'><p>Sets the work source for this thread.</p>\n\n<p> <p>All the following binder calls on this thread will use the provided work source. If this\n is called during an on-going binder transaction, all the following binder calls will use the\n work source until the end of the transaction.</p>\n\n<p> <p>The concept of worksource is similar to <a href=\"#!/api/android.os.WorkSource\" rel=\"android.os.WorkSource\" class=\"docClass\">android.os.WorkSource</a>. However, for performance\n reasons, we only support one UID. This UID represents the original user responsible for the\n binder calls.</p>\n\n<p> <p>restoreCallingWorkSource(long) must always be called after setting the\n worksource.</p>\n\n<p> <p>A typical use case would be</p>\n\n<pre> long token = Binder.setCallingWorkSourceUid(uid);\n try {\n   // Call an API.\n } finally {\n   Binder.restoreCallingWorkSource(token);\n }\n </pre>\n\n\n<p> <p>The work source will be propagated for future outgoing binder transactions\n executed on this thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>workSource</span> : Number<div class='sub-desc'><p>The original UID responsible for the binder call.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>token to restore original work source.</p>\n</div></li></ul></div></div></div><div id='method-setDumpDisabled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-setDumpDisabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-setDumpDisabled' class='name expandable'>setDumpDisabled</a>( <span class='pre'>msg, msg</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control disabling of dump calls in this process. ...</div><div class='long'><p>Control disabling of dump calls in this process.  This is used by the system\n process watchdog to disable incoming dump calls while it has detecting the system\n is hung and is reporting that back to the activity controller.  This is to\n prevent the controller from getting hung up on bug reports at this point.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>msg</span> : String<div class='sub-desc'><p>The message to show instead of the dump; if null, dumps are\n re-enabled.</p>\n</div></li><li><span class='pre'>msg</span> : Object<div class='sub-desc'><p>The message to show instead of the dump; if null, dumps are\n re-enabled.</p>\n</div></li></ul></div></div></div><div id='method-transact' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-transact' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-transact' class='name expandable'>transact</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation rewinds the parcels and calls onTransact. ...</div><div class='long'><p>Default implementation rewinds the parcels and calls onTransact.  On\n the remote side, transact calls into the binder to do the IPC.</p>\n</div></div></div><div id='method-unlinkToDeath' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.os.Binder' rel='android.os.Binder' class='defined-in docClass'>android.os.Binder</a><br/><a href='source/Binder.html#android-os-Binder-method-unlinkToDeath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Binder-method-unlinkToDeath' class='name expandable'>unlinkToDeath</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Local implementation is a no-op. ...</div><div class='long'><p>Local implementation is a no-op.</p>\n</div></div></div></div></div></div></div>","meta":{}});