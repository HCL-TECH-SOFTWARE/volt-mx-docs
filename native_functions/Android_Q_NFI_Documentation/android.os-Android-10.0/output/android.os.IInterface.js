Ext.data.JsonP.android_os_IInterface({"tagname":"class","name":"android.os.IInterface","autodetected":{},"files":[{"filename":"IInterface.js","href":"IInterface.html#android-os-IInterface"}],"members":[{"name":"asBinder","tagname":"method","owner":"android.os.IInterface","id":"method-asBinder","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.IInterface","short_doc":"Base class for Binder interfaces. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/IInterface.html#android-os-IInterface' target='_blank'>IInterface.js</a></div></pre><div class='doc-contents'><p>Base class for Binder interfaces.  When defining a new interface,\n you must derive it from IInterface.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-asBinder' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.IInterface'>android.os.IInterface</span><br/><a href='source/IInterface.html#android-os-IInterface-method-asBinder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.IInterface-method-asBinder' class='name expandable'>asBinder</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the Binder object associated with this interface. ...</div><div class='long'><p>Retrieve the Binder object associated with this interface.\n You must use this instead of a plain cast, so that proxy objects\n can return the correct result.</p>\n</div></div></div></div></div></div></div>","meta":{}});