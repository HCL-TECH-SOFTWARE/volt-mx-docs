Ext.data.JsonP.android_os_ResultReceiver({"tagname":"class","name":"android.os.ResultReceiver","autodetected":{},"files":[{"filename":"ResultReceiver.js","href":"ResultReceiver.html#android-os-ResultReceiver"}],"extends":"java.lang.Object","members":[{"name":"CREATOR","tagname":"property","owner":"android.os.ResultReceiver","id":"property-CREATOR","meta":{}},{"name":"describeContents","tagname":"method","owner":"android.os.ResultReceiver","id":"method-describeContents","meta":{}},{"name":"send","tagname":"method","owner":"android.os.ResultReceiver","id":"method-send","meta":{}},{"name":"writeToParcel","tagname":"method","owner":"android.os.ResultReceiver","id":"method-writeToParcel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.ResultReceiver","short_doc":"implements android.os.Parcelable\n\nGeneric interface for receiving a callback result from someone. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["android.os.SynchronousResultReceiver"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.os.ResultReceiver</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.os.SynchronousResultReceiver' rel='android.os.SynchronousResultReceiver' class='docClass'>android.os.SynchronousResultReceiver</a></div><h4>Files</h4><div class='dependency'><a href='source/ResultReceiver.html#android-os-ResultReceiver' target='_blank'>ResultReceiver.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.os.Parcelable\" rel=\"android.os.Parcelable\" class=\"docClass\">android.os.Parcelable</a></p>\n\n<p>Generic interface for receiving a callback result from someone.  Use this\n by creating a subclass and implement onReceiveResult, which you can\n then pass to others and send through IPC, and receive results they\n supply with <a href=\"#!/api/android.os.ResultReceiver-method-send\" rel=\"android.os.ResultReceiver-method-send\" class=\"docClass\">send</a>.</p>\n\n<p> <p>Note: the implementation underneath is just a simple wrapper around\n a <a href=\"#!/api/android.os.Binder\" rel=\"android.os.Binder\" class=\"docClass\">android.os.Binder</a> that is used to perform the communication.  This means\n semantically you should treat it as such: this class does not impact process\n lifecycle management (you must be using some higher-level component to tell\n the system that your process needs to continue running), the connection will\n break if your process goes away for any reason, etc.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CREATOR' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ResultReceiver'>android.os.ResultReceiver</span><br/><a href='source/ResultReceiver.html#android-os-ResultReceiver-property-CREATOR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ResultReceiver-property-CREATOR' class='name expandable'>CREATOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-describeContents' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ResultReceiver'>android.os.ResultReceiver</span><br/><a href='source/ResultReceiver.html#android-os-ResultReceiver-method-describeContents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ResultReceiver-method-describeContents' class='name expandable'>describeContents</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-send' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ResultReceiver'>android.os.ResultReceiver</span><br/><a href='source/ResultReceiver.html#android-os-ResultReceiver-method-send' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ResultReceiver-method-send' class='name expandable'>send</a>( <span class='pre'>resultCode, resultData</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Deliver a result to this receiver. ...</div><div class='long'><p>Deliver a result to this receiver.  Will call onReceiveResult,\n always asynchronously if the receiver has supplied a Handler in which\n to dispatch the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resultCode</span> : Number<div class='sub-desc'><p>Arbitrary result code to deliver, as defined by you.</p>\n</div></li><li><span class='pre'>resultData</span> : Object {Bundle}<div class='sub-desc'><p>Any additional data provided by you.</p>\n</div></li></ul></div></div></div><div id='method-writeToParcel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ResultReceiver'>android.os.ResultReceiver</span><br/><a href='source/ResultReceiver.html#android-os-ResultReceiver-method-writeToParcel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ResultReceiver-method-writeToParcel' class='name expandable'>writeToParcel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});