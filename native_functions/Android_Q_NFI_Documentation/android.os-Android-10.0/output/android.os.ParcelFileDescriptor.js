Ext.data.JsonP.android_os_ParcelFileDescriptor({"tagname":"class","name":"android.os.ParcelFileDescriptor","autodetected":{},"files":[{"filename":"ParcelFileDescriptor.js","href":"ParcelFileDescriptor.html#android-os-ParcelFileDescriptor"}],"extends":"java.lang.Object","members":[{"name":"CREATOR","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-CREATOR","meta":{}},{"name":"MODE_APPEND","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_APPEND","meta":{}},{"name":"MODE_CREATE","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_CREATE","meta":{}},{"name":"MODE_READ_ONLY","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_READ_ONLY","meta":{}},{"name":"MODE_READ_WRITE","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_READ_WRITE","meta":{}},{"name":"MODE_TRUNCATE","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_TRUNCATE","meta":{}},{"name":"MODE_WORLD_READABLE","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_WORLD_READABLE","meta":{"deprecated":{"text":"<p>Creating world-readable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as ContentProvider,\n            BroadcastReceiver, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.</p>\n"}}},{"name":"MODE_WORLD_WRITEABLE","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_WORLD_WRITEABLE","meta":{"deprecated":{"text":"<p>Creating world-writable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as ContentProvider,\n            BroadcastReceiver, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.</p>\n"}}},{"name":"MODE_WRITE_ONLY","tagname":"property","owner":"android.os.ParcelFileDescriptor","id":"property-MODE_WRITE_ONLY","meta":{}},{"name":"adoptFd","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-adoptFd","meta":{}},{"name":"canDetectErrors","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-canDetectErrors","meta":{}},{"name":"checkError","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-checkError","meta":{}},{"name":"close","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-close","meta":{}},{"name":"closeWithError","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-closeWithError","meta":{}},{"name":"createPipe","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-createPipe","meta":{}},{"name":"createReliablePipe","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-createReliablePipe","meta":{}},{"name":"describeContents","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-describeContents","meta":{}},{"name":"detachFd","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-detachFd","meta":{}},{"name":"dup","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-dup","meta":{}},{"name":"fromData","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-fromData","meta":{}},{"name":"fromDatagramSocket","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-fromDatagramSocket","meta":{}},{"name":"fromFd","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-fromFd","meta":{}},{"name":"fromPfd","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-fromPfd","meta":{}},{"name":"fromSocket","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-fromSocket","meta":{}},{"name":"getFd","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-getFd","meta":{}},{"name":"getFileDescriptor","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-getFileDescriptor","meta":{}},{"name":"getStatSize","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-getStatSize","meta":{}},{"name":"open","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-open","meta":{}},{"name":"parseMode","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-parseMode","meta":{}},{"name":"toString","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-toString","meta":{}},{"name":"writeToParcel","tagname":"method","owner":"android.os.ParcelFileDescriptor","id":"method-writeToParcel","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.ParcelFileDescriptor","short_doc":"implements android.os.Parcelable\n\n implements java.io.Closeable\n\nThe FileDescriptor returned by android.os.Parcel.rea...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.os.ParcelFileDescriptor</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor' target='_blank'>ParcelFileDescriptor.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.os.Parcelable\" rel=\"android.os.Parcelable\" class=\"docClass\">android.os.Parcelable</a></p>\n\n<p> implements java.io.Closeable</p>\n\n<p>The FileDescriptor returned by <a href=\"#!/api/android.os.Parcel-method-readFileDescriptor\" rel=\"android.os.Parcel-method-readFileDescriptor\" class=\"docClass\">android.os.Parcel.readFileDescriptor</a>, allowing\n you to close it when done with it.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CREATOR' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-CREATOR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-CREATOR' class='name expandable'>CREATOR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MODE_APPEND' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_APPEND' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_APPEND' class='name expandable'>MODE_APPEND</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>For use with open: append to end of file while writing. ...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: append to end of file while writing.</p>\n<p>Defaults to: <code>&quot;33554432&quot;</code></p></div></div></div><div id='property-MODE_CREATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_CREATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_CREATE' class='name expandable'>MODE_CREATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>For use with open: create the file if it doesn't already exist. ...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: create the file if it doesn't already exist.</p>\n<p>Defaults to: <code>&quot;134217728&quot;</code></p></div></div></div><div id='property-MODE_READ_ONLY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_READ_ONLY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_READ_ONLY' class='name expandable'>MODE_READ_ONLY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>For use with open: open the file with read-only access. ...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: open the file with read-only access.</p>\n<p>Defaults to: <code>&quot;268435456&quot;</code></p></div></div></div><div id='property-MODE_READ_WRITE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_READ_WRITE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_READ_WRITE' class='name expandable'>MODE_READ_WRITE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>For use with open: open the file with read and write access. ...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: open the file with read and write access.</p>\n<p>Defaults to: <code>&quot;805306368&quot;</code></p></div></div></div><div id='property-MODE_TRUNCATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_TRUNCATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_TRUNCATE' class='name expandable'>MODE_TRUNCATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>For use with open: erase contents of file when opening. ...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: erase contents of file when opening.</p>\n<p>Defaults to: <code>&quot;67108864&quot;</code></p></div></div></div><div id='property-MODE_WORLD_READABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_WORLD_READABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_WORLD_READABLE' class='name expandable'>MODE_WORLD_READABLE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>For use with open: if MODE_CREATE has been supplied and\nthis file doesn't already exist, then create the file with pe...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: if <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_CREATE\" rel=\"android.os.ParcelFileDescriptor-property-MODE_CREATE\" class=\"docClass\">MODE_CREATE</a> has been supplied and\nthis file doesn't already exist, then create the file with permissions\nsuch that any application can read it.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Creating world-readable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as ContentProvider,\n            BroadcastReceiver, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.</p>\n\n        </div>\n</div></div></div><div id='property-MODE_WORLD_WRITEABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_WORLD_WRITEABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_WORLD_WRITEABLE' class='name expandable'>MODE_WORLD_WRITEABLE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>For use with open: if MODE_CREATE has been supplied and\nthis file doesn't already exist, then create the file with pe...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: if <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_CREATE\" rel=\"android.os.ParcelFileDescriptor-property-MODE_CREATE\" class=\"docClass\">MODE_CREATE</a> has been supplied and\nthis file doesn't already exist, then create the file with permissions\nsuch that any application can write it.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Creating world-writable files is very dangerous, and likely\n            to cause security holes in applications. It is strongly\n            discouraged; instead, applications should use more formal\n            mechanism for interactions such as ContentProvider,\n            BroadcastReceiver, and android.app.Service.\n            There are no guarantees that this access mode will remain on\n            a file, such as when it goes through a backup and restore.</p>\n\n        </div>\n</div></div></div><div id='property-MODE_WRITE_ONLY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-property-MODE_WRITE_ONLY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-property-MODE_WRITE_ONLY' class='name expandable'>MODE_WRITE_ONLY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>For use with open: open the file with write-only access. ...</div><div class='long'><p>For use with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>: open the file with write-only access.</p>\n<p>Defaults to: <code>&quot;536870912&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adoptFd' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-adoptFd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-adoptFd' class='name expandable'>adoptFd</a>( <span class='pre'>fd</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Take ownership of a raw native fd in to a new ParcelFileDescriptor. ...</div><div class='long'><p>Take ownership of a raw native fd in to a new ParcelFileDescriptor.\n The returned ParcelFileDescriptor now owns the given fd, and will be\n responsible for closing it.\n <p>\n <strong>WARNING:</strong> You must not close the fd yourself after\n this call, and ownership of the file descriptor must have been\n released prior to the call to this function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fd</span> : Number<div class='sub-desc'><p>The native fd that the ParcelFileDescriptor should adopt.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>Returns a new ParcelFileDescriptor holding a FileDescriptor\n for the given fd.</p>\n</div></li></ul></div></div></div><div id='method-canDetectErrors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-canDetectErrors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-canDetectErrors' class='name expandable'>canDetectErrors</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Indicates if this ParcelFileDescriptor can communicate and detect remote\n errors/crashes. ...</div><div class='long'><p>Indicates if this ParcelFileDescriptor can communicate and detect remote\n errors/crashes.\n@see <a href=\"#!/api/android.os.ParcelFileDescriptor-method-checkError\" rel=\"android.os.ParcelFileDescriptor-method-checkError\" class=\"docClass\">checkError</a>()</p>\n</div></div></div><div id='method-checkError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-checkError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-checkError' class='name expandable'>checkError</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Detect and throw if the other end of a pipe or socket pair encountered an\n error or crashed. ...</div><div class='long'><p>Detect and throw if the other end of a pipe or socket pair encountered an\n error or crashed. This allows a reader to distinguish between a valid EOF\n and an error/crash.\n <p>\n If this ParcelFileDescriptor is unable to detect remote errors, it will\n return silently.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException for normal errors.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>FileDescriptorDetachedException\n            if the remote side called detachFd(). Once detached, the remote\n            side is unable to communicate any errors through\n            closeWithError(String).\n@see <a href=\"#!/api/android.os.ParcelFileDescriptor-method-canDetectErrors\" rel=\"android.os.ParcelFileDescriptor-method-canDetectErrors\" class=\"docClass\">canDetectErrors</a>()</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close the ParcelFileDescriptor. ...</div><div class='long'><p>Close the ParcelFileDescriptor. This implementation closes the underlying\n OS resources allocated to represent this stream.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException\n             If an error occurs attempting to close this ParcelFileDescriptor.</p>\n</div></li></ul></div></div></div><div id='method-closeWithError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-closeWithError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-closeWithError' class='name expandable'>closeWithError</a>( <span class='pre'>msg</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Close the ParcelFileDescriptor, informing any peer that an error occurred\n while processing. ...</div><div class='long'><p>Close the ParcelFileDescriptor, informing any peer that an error occurred\n while processing. If the creator of this descriptor is not observing\n errors, it will close normally.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>msg</span> : String<div class='sub-desc'><p>describing the error; must not be null.</p>\n</div></li></ul></div></div></div><div id='method-createPipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-createPipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-createPipe' class='name expandable'>createPipe</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create two ParcelFileDescriptors structured as a data pipe. ...</div><div class='long'><p>Create two ParcelFileDescriptors structured as a data pipe.  The first\n ParcelFileDescriptor in the returned array is the read side; the second\n is the write side.</p>\n</div></div></div><div id='method-createReliablePipe' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-createReliablePipe' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-createReliablePipe' class='name expandable'>createReliablePipe</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create two ParcelFileDescriptors structured as a data pipe. ...</div><div class='long'><p>Create two ParcelFileDescriptors structured as a data pipe. The first\n ParcelFileDescriptor in the returned array is the read side; the second\n is the write side.\n <p>\n The write end has the ability to deliver an error message through\n <a href=\"#!/api/android.os.ParcelFileDescriptor-method-closeWithError\" rel=\"android.os.ParcelFileDescriptor-method-closeWithError\" class=\"docClass\">closeWithError</a>(String) which can be handled by the read end\n calling <a href=\"#!/api/android.os.ParcelFileDescriptor-method-checkError\" rel=\"android.os.ParcelFileDescriptor-method-checkError\" class=\"docClass\">checkError</a>(), usually after detecting an EOF.\n This can also be used to detect remote crashes.</p>\n</div></div></div><div id='method-describeContents' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-describeContents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-describeContents' class='name expandable'>describeContents</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-detachFd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-detachFd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-detachFd' class='name expandable'>detachFd</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the native fd int for this ParcelFileDescriptor and detach it from\n the object here. ...</div><div class='long'><p>Return the native fd int for this ParcelFileDescriptor and detach it from\n the object here. You are now responsible for closing the fd in native\n code.\n <p>\n You should not detach when the original creator of the descriptor is\n expecting a reliable signal through <a href=\"#!/api/android.os.ParcelFileDescriptor-method-close\" rel=\"android.os.ParcelFileDescriptor-method-close\" class=\"docClass\">close</a>() or\n <a href=\"#!/api/android.os.ParcelFileDescriptor-method-closeWithError\" rel=\"android.os.ParcelFileDescriptor-method-closeWithError\" class=\"docClass\">closeWithError</a>(String).\n@see <a href=\"#!/api/android.os.ParcelFileDescriptor-method-canDetectErrors\" rel=\"android.os.ParcelFileDescriptor-method-canDetectErrors\" class=\"docClass\">canDetectErrors</a>()</p>\n</div></div></div><div id='method-dup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-dup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-dup' class='name expandable'>dup</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new ParcelFileDescriptor that is a dup of the existing\n FileDescriptor. ...</div><div class='long'><p>Create a new ParcelFileDescriptor that is a dup of the existing\n FileDescriptor.  This obeys standard POSIX semantics, where the\n new file descriptor shared state such as file position with the\n original file descriptor.</p>\n</div></div></div><div id='method-fromData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-fromData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-fromData' class='name expandable'>fromData</a>( <span class='pre'>data, name, name</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object {byte[]}<div class='sub-desc'><p>Data to copy.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Name for the shared memory area that may back the file descriptor.\n        This is purely informative and may be {@code null}.</p>\n</div></li><li><span class='pre'>name</span> : Object<div class='sub-desc'><p>Name for the shared memory area that may back the file descriptor.\n        This is purely informative and may be {@code null}.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>A ParcelFileDescriptor.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if there is an error while creating the shared memory area.</p>\n</div></li></ul></div></div></div><div id='method-fromDatagramSocket' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-fromDatagramSocket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-fromDatagramSocket' class='name expandable'>fromDatagramSocket</a>( <span class='pre'>datagramSocket</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new ParcelFileDescriptor from the specified DatagramSocket. ...</div><div class='long'><p>Create a new ParcelFileDescriptor from the specified DatagramSocket. The\n new ParcelFileDescriptor holds a dup of the original FileDescriptor in\n the DatagramSocket, so you must still close the DatagramSocket as well\n as the new ParcelFileDescriptor.\n <p>\n <strong>WARNING:</strong> Prior to API level 29, this function would not\n actually dup the DatagramSocket's FileDescriptor, and would take a\n reference to the its internal FileDescriptor instead. If the DatagramSocket\n gets garbage collected before the ParcelFileDescriptor, this may\n lead to the ParcelFileDescriptor being unexpectedly closed. To avoid\n this, the following pattern can be used:\n <pre>{@code\n    ParcelFileDescriptor pfd = ParcelFileDescriptor.fromDatagramSocket(socket).dup();\n }</pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>datagramSocket</span> : Object {DatagramSocket}<div class='sub-desc'><p>The DatagramSocket whose FileDescriptor is used\n               to create a new ParcelFileDescriptor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>A new ParcelFileDescriptor with a duped copy of the\n FileDescriptor of the specified Socket.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UncheckedIOException if dup(FileDescriptor) throws IOException.</p>\n</div></li></ul></div></div></div><div id='method-fromFd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-fromFd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-fromFd' class='name expandable'>fromFd</a>( <span class='pre'>fd</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new ParcelFileDescriptor from a raw native fd. ...</div><div class='long'><p>Create a new ParcelFileDescriptor from a raw native fd.  The new\n ParcelFileDescriptor holds a dup of the original fd passed in here,\n so you must still close that fd as well as the new ParcelFileDescriptor.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fd</span> : Number<div class='sub-desc'><p>The native fd that the ParcelFileDescriptor should dup.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>Returns a new ParcelFileDescriptor holding a FileDescriptor\n for a dup of the given fd.</p>\n</div></li></ul></div></div></div><div id='method-fromPfd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-fromPfd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-fromPfd' class='name expandable'>fromPfd</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-fromSocket' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-fromSocket' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-fromSocket' class='name expandable'>fromSocket</a>( <span class='pre'>socket</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new ParcelFileDescriptor from the specified Socket. ...</div><div class='long'><p>Create a new ParcelFileDescriptor from the specified Socket.  The new\n ParcelFileDescriptor holds a dup of the original FileDescriptor in\n the Socket, so you must still close the Socket as well as the new\n ParcelFileDescriptor.\n <p>\n <strong>WARNING:</strong> Prior to API level 29, this function would not\n actually dup the Socket's FileDescriptor, and would take a\n reference to the its internal FileDescriptor instead. If the Socket\n gets garbage collected before the ParcelFileDescriptor, this may\n lead to the ParcelFileDescriptor being unexpectedly closed. To avoid\n this, the following pattern can be used:\n <pre>{@code\n    ParcelFileDescriptor pfd = ParcelFileDescriptor.fromSocket(socket).dup();\n }</pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>socket</span> : Object {Socket}<div class='sub-desc'><p>The Socket whose FileDescriptor is used to create\n               a new ParcelFileDescriptor.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>A new ParcelFileDescriptor with a duped copy of the\n FileDescriptor of the specified Socket.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UncheckedIOException if dup(FileDescriptor) throws IOException.</p>\n</div></li></ul></div></div></div><div id='method-getFd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-getFd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-getFd' class='name expandable'>getFd</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the native fd int for this ParcelFileDescriptor. ...</div><div class='long'><p>Return the native fd int for this ParcelFileDescriptor.  The\n ParcelFileDescriptor still owns the fd, and it still must be closed\n through this API.\n <p>\n <strong>WARNING:</strong> Do not call close on the return value of this\n function or pass it to a function that assumes ownership of the fd.</p>\n</div></div></div><div id='method-getFileDescriptor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-getFileDescriptor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-getFileDescriptor' class='name expandable'>getFileDescriptor</a>( <span class='pre'></span> ) : Object {java.io.FileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the actual FileDescriptor associated with this object. ...</div><div class='long'><p>Retrieve the actual FileDescriptor associated with this object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.FileDescriptor}</span><div class='sub-desc'><p>Returns the FileDescriptor associated with this object.</p>\n</div></li></ul></div></div></div><div id='method-getStatSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-getStatSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-getStatSize' class='name expandable'>getStatSize</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the total size of the file representing this fd, as determined by\n {@code stat()}. ...</div><div class='long'><p>Return the total size of the file representing this fd, as determined by\n {@code stat()}. Returns -1 if the fd is not a file.</p>\n</div></div></div><div id='method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-open' class='name expandable'>open</a>( <span class='pre'>file, mode, handler, listener</span> ) : Object {android.os.ParcelFileDescriptor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new ParcelFileDescriptor accessing a given file. ...</div><div class='long'><p>Create a new ParcelFileDescriptor accessing a given file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>file</span> : Object {File}<div class='sub-desc'><p>The file to be opened.</p>\n</div></li><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>The desired access mode, must be one of\n            <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_READ_ONLY\" rel=\"android.os.ParcelFileDescriptor-property-MODE_READ_ONLY\" class=\"docClass\">MODE_READ_ONLY</a>, <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_WRITE_ONLY\" rel=\"android.os.ParcelFileDescriptor-property-MODE_WRITE_ONLY\" class=\"docClass\">MODE_WRITE_ONLY</a>, or\n            <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_READ_WRITE\" rel=\"android.os.ParcelFileDescriptor-property-MODE_READ_WRITE\" class=\"docClass\">MODE_READ_WRITE</a>; may also be any combination of\n            <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_CREATE\" rel=\"android.os.ParcelFileDescriptor-property-MODE_CREATE\" class=\"docClass\">MODE_CREATE</a>, <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_TRUNCATE\" rel=\"android.os.ParcelFileDescriptor-property-MODE_TRUNCATE\" class=\"docClass\">MODE_TRUNCATE</a>,\n            <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_WORLD_READABLE\" rel=\"android.os.ParcelFileDescriptor-property-MODE_WORLD_READABLE\" class=\"docClass\">MODE_WORLD_READABLE</a>, and\n            <a href=\"#!/api/android.os.ParcelFileDescriptor-property-MODE_WORLD_WRITEABLE\" rel=\"android.os.ParcelFileDescriptor-property-MODE_WORLD_WRITEABLE\" class=\"docClass\">MODE_WORLD_WRITEABLE</a>.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>to call listener from; must not be null.</p>\n</div></li><li><span class='pre'>listener</span> : Object {ParcelFileDescriptor.OnCloseListener}<div class='sub-desc'><p>to be invoked when the returned descriptor has been\n            closed; must not be null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.ParcelFileDescriptor}</span><div class='sub-desc'><p>a new ParcelFileDescriptor pointing to the given file.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>FileNotFoundException if the given file does not exist or can not\n             be opened with the requested mode.\n@see <a href=\"#!/api/android.os.ParcelFileDescriptor-method-parseMode\" rel=\"android.os.ParcelFileDescriptor-method-parseMode\" class=\"docClass\">parseMode</a>(String)</p>\n</div></li></ul></div></div></div><div id='method-parseMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-parseMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-parseMode' class='name expandable'>parseMode</a>( <span class='pre'>mode</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts a string representing a file mode, such as \"rw\", into a bitmask suitable for use\n with open. ...</div><div class='long'><p>Converts a string representing a file mode, such as \"rw\", into a bitmask suitable for use\n with <a href=\"#!/api/android.os.ParcelFileDescriptor-method-open\" rel=\"android.os.ParcelFileDescriptor-method-open\" class=\"docClass\">open</a>.\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : String<div class='sub-desc'><p>The string representation of the file mode. Can be \"r\", \"w\", \"wt\", \"wa\", \"rw\"\n             or \"rwt\".</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A bitmask representing the given file mode.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the given string does not match a known file mode.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-writeToParcel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ParcelFileDescriptor'>android.os.ParcelFileDescriptor</span><br/><a href='source/ParcelFileDescriptor.html#android-os-ParcelFileDescriptor-method-writeToParcel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ParcelFileDescriptor-method-writeToParcel' class='name expandable'>writeToParcel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc}\n If android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE is set in flags,\n the file descriptor will be c...</div><div class='long'><p>{@inheritDoc}\n If <a href=\"#!/api/android.os.Parcelable-property-PARCELABLE_WRITE_RETURN_VALUE\" rel=\"android.os.Parcelable-property-PARCELABLE_WRITE_RETURN_VALUE\" class=\"docClass\">android.os.Parcelable.PARCELABLE_WRITE_RETURN_VALUE</a> is set in flags,\n the file descriptor will be closed after a copy is written to the Parcel.</p>\n</div></div></div></div></div></div></div>","meta":{}});