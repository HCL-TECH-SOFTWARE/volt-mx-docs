Ext.data.JsonP.android_os_ConditionVariable({"tagname":"class","name":"android.os.ConditionVariable","autodetected":{},"files":[{"filename":"ConditionVariable.js","href":"ConditionVariable.html#android-os-ConditionVariable"}],"extends":"java.lang.Object","members":[{"name":"block","tagname":"method","owner":"android.os.ConditionVariable","id":"method-block","meta":{}},{"name":"close","tagname":"method","owner":"android.os.ConditionVariable","id":"method-close","meta":{}},{"name":"open","tagname":"method","owner":"android.os.ConditionVariable","id":"method-open","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.ConditionVariable","short_doc":"Class that implements the condition variable locking paradigm. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.os.ConditionVariable</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ConditionVariable.html#android-os-ConditionVariable' target='_blank'>ConditionVariable.js</a></div></pre><div class='doc-contents'><p>Class that implements the condition variable locking paradigm.</p>\n\n<p> <p>\n This differs from the built-in java.lang.Object wait() and notify()\n in that this class contains the condition to wait on itself.  That means\n open(), close() and block() are sticky.  If open() is called before block(),\n block() will not block, and instead return immediately.</p>\n\n<p> <p>\n This class uses itself as the object to wait on, so if you wait()\n or notify() on a ConditionVariable, the results are undefined.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-block' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ConditionVariable'>android.os.ConditionVariable</span><br/><a href='source/ConditionVariable.html#android-os-ConditionVariable-method-block' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ConditionVariable-method-block' class='name expandable'>block</a>( <span class='pre'>timeoutMs</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Block the current thread until the condition is opened or until\n timeoutMs milliseconds have passed. ...</div><div class='long'><p>Block the current thread until the condition is opened or until\n timeoutMs milliseconds have passed.</p>\n\n<p> <p>\n If the condition is already opened, return immediately.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeoutMs</span> : Number<div class='sub-desc'><p>the maximum time to wait in milliseconds.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the condition was opened, false if the call returns\n because of the timeout.</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ConditionVariable'>android.os.ConditionVariable</span><br/><a href='source/ConditionVariable.html#android-os-ConditionVariable-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ConditionVariable-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reset the condition to the closed state. ...</div><div class='long'><p>Reset the condition to the closed state.</p>\n\n<p> <p>\n Any threads that call block() will block until someone calls open.</p>\n</div></div></div><div id='method-open' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ConditionVariable'>android.os.ConditionVariable</span><br/><a href='source/ConditionVariable.html#android-os-ConditionVariable-method-open' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ConditionVariable-method-open' class='name expandable'>open</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Open the condition, and release all threads that are blocked. ...</div><div class='long'><p>Open the condition, and release all threads that are blocked.</p>\n\n<p> <p>\n Any threads that later approach block() will not block unless close()\n is called.</p>\n</div></div></div></div></div></div></div>","meta":{}});