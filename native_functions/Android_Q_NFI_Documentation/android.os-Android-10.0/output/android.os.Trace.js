Ext.data.JsonP.android_os_Trace({"tagname":"class","name":"android.os.Trace","autodetected":{},"files":[{"filename":"Trace.js","href":"Trace.html#android-os-Trace"}],"extends":"java.lang.Object","members":[{"name":"beginAsyncSection","tagname":"method","owner":"android.os.Trace","id":"method-beginAsyncSection","meta":{}},{"name":"beginSection","tagname":"method","owner":"android.os.Trace","id":"method-beginSection","meta":{}},{"name":"endAsyncSection","tagname":"method","owner":"android.os.Trace","id":"method-endAsyncSection","meta":{}},{"name":"endSection","tagname":"method","owner":"android.os.Trace","id":"method-endSection","meta":{}},{"name":"isEnabled","tagname":"method","owner":"android.os.Trace","id":"method-isEnabled","meta":{}},{"name":"setCounter","tagname":"method","owner":"android.os.Trace","id":"method-setCounter","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.Trace","short_doc":"Writes trace events to the system trace buffer. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.os.Trace</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Trace.html#android-os-Trace' target='_blank'>Trace.js</a></div></pre><div class='doc-contents'><p>Writes trace events to the system trace buffer.  These trace events can be\n collected and visualized using the Systrace tool.</p>\n\n<p> <p>This tracing mechanism is independent of the method tracing mechanism\n offered by android.os.Debug.startMethodTracing.  In particular, it enables\n tracing of events that occur across multiple processes.\n <p>For information about using the Systrace tool, read <a\n href=\"{@docRoot}tools/debugging/systrace.html\">Analyzing Display and Performance\n with Systrace</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-beginAsyncSection' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Trace'>android.os.Trace</span><br/><a href='source/Trace.html#android-os-Trace-method-beginAsyncSection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Trace-method-beginAsyncSection' class='name expandable'>beginAsyncSection</a>( <span class='pre'>methodName, cookie</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a trace message to indicate that a given section of code has\n begun. ...</div><div class='long'><p>Writes a trace message to indicate that a given section of code has\n begun. Must be followed by a call to int) with the same\n methodName and cookie. Unlike <a href=\"#!/api/android.os.Trace-method-beginSection\" rel=\"android.os.Trace-method-beginSection\" class=\"docClass\">beginSection</a>(String) and <a href=\"#!/api/android.os.Trace-method-endSection\" rel=\"android.os.Trace-method-endSection\" class=\"docClass\">endSection</a>(),\n asynchronous events do not need to be nested. The name and cookie used to\n begin an event must be used to end it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>methodName</span> : String<div class='sub-desc'><p>The method name to appear in the trace.</p>\n</div></li><li><span class='pre'>cookie</span> : Number<div class='sub-desc'><p>Unique identifier for distinguishing simultaneous events</p>\n</div></li></ul></div></div></div><div id='method-beginSection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Trace'>android.os.Trace</span><br/><a href='source/Trace.html#android-os-Trace-method-beginSection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Trace-method-beginSection' class='name expandable'>beginSection</a>( <span class='pre'>sectionName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a trace message to indicate that a given section of code has begun. ...</div><div class='long'><p>Writes a trace message to indicate that a given section of code has begun. This call must\n be followed by a corresponding call to <a href=\"#!/api/android.os.Trace-method-endSection\" rel=\"android.os.Trace-method-endSection\" class=\"docClass\">endSection</a>() on the same thread.</p>\n\n<p> <p class=\"note\"> At this time the vertical bar character '|', newline character '\\n', and\n null character '\\0' are used internally by the tracing mechanism.  If sectionName contains\n these characters they will be replaced with a space character in the trace.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sectionName</span> : String<div class='sub-desc'><p>The name of the code section to appear in the trace.  This may be at\n most 127 Unicode code units long.</p>\n</div></li></ul></div></div></div><div id='method-endAsyncSection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Trace'>android.os.Trace</span><br/><a href='source/Trace.html#android-os-Trace-method-endAsyncSection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Trace-method-endAsyncSection' class='name expandable'>endAsyncSection</a>( <span class='pre'>methodName, cookie</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a trace message to indicate that the current method has ended. ...</div><div class='long'><p>Writes a trace message to indicate that the current method has ended.\n Must be called exactly once for each call to int)\n using the same name and cookie.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>methodName</span> : String<div class='sub-desc'><p>The method name to appear in the trace.</p>\n</div></li><li><span class='pre'>cookie</span> : Number<div class='sub-desc'><p>Unique identifier for distinguishing simultaneous events</p>\n</div></li></ul></div></div></div><div id='method-endSection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Trace'>android.os.Trace</span><br/><a href='source/Trace.html#android-os-Trace-method-endSection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Trace-method-endSection' class='name expandable'>endSection</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a trace message to indicate that a given section of code has ended. ...</div><div class='long'><p>Writes a trace message to indicate that a given section of code has ended. This call must\n be preceeded by a corresponding call to <a href=\"#!/api/android.os.Trace-method-beginSection\" rel=\"android.os.Trace-method-beginSection\" class=\"docClass\">beginSection</a>(String). Calling this method\n will mark the end of the most recently begun section of code, so care must be taken to\n ensure that beginSection / endSection pairs are properly nested and called from the same\n thread.</p>\n</div></div></div><div id='method-isEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Trace'>android.os.Trace</span><br/><a href='source/Trace.html#android-os-Trace-method-isEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Trace-method-isEnabled' class='name expandable'>isEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether or not tracing is currently enabled. ...</div><div class='long'><p>Checks whether or not tracing is currently enabled. This is useful to avoid intermediate\n string creation for trace sections that require formatting. It is not necessary\n to guard all Trace method calls as they internally already check this. However it is\n recommended to use this to prevent creating any temporary objects that would then be\n passed to those methods to reduce runtime cost when tracing isn't enabled.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if tracing is currently enabled, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-setCounter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.Trace'>android.os.Trace</span><br/><a href='source/Trace.html#android-os-Trace-method-setCounter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.Trace-method-setCounter' class='name expandable'>setCounter</a>( <span class='pre'>counterName, counterValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes trace message to indicate the value of a given counter. ...</div><div class='long'><p>Writes trace message to indicate the value of a given counter.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>counterName</span> : String<div class='sub-desc'><p>The counter name to appear in the trace.</p>\n</div></li><li><span class='pre'>counterValue</span> : Number<div class='sub-desc'><p>The counter value.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});