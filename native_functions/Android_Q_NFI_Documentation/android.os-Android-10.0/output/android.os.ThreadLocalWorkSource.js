Ext.data.JsonP.android_os_ThreadLocalWorkSource({"tagname":"class","name":"android.os.ThreadLocalWorkSource","autodetected":{},"files":[{"filename":"ThreadLocalWorkSource.js","href":"ThreadLocalWorkSource.html#android-os-ThreadLocalWorkSource"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"UID_NONE","tagname":"property","owner":"android.os.ThreadLocalWorkSource","id":"property-UID_NONE","meta":{}},{"name":"clear","tagname":"method","owner":"android.os.ThreadLocalWorkSource","id":"method-clear","meta":{}},{"name":"getUid","tagname":"method","owner":"android.os.ThreadLocalWorkSource","id":"method-getUid","meta":{}},{"name":"restore","tagname":"method","owner":"android.os.ThreadLocalWorkSource","id":"method-restore","meta":{}},{"name":"setUid","tagname":"method","owner":"android.os.ThreadLocalWorkSource","id":"method-setUid","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.ThreadLocalWorkSource","short_doc":"Tracks who triggered the work currently executed on this thread. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.os.ThreadLocalWorkSource</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ThreadLocalWorkSource.html#android-os-ThreadLocalWorkSource' target='_blank'>ThreadLocalWorkSource.js</a></div></pre><div class='doc-contents'><p>Tracks who triggered the work currently executed on this thread.</p>\n\n<p> <p>ThreadLocalWorkSource is automatically updated inside system server for incoming/outgoing\n binder calls and messages posted to handler threads.</p>\n\n<p> <p>ThreadLocalWorkSource can also be set manually if needed to refine the WorkSource.</p>\n\n<p> <p>Example:\n <ul>\n <li>Bluetooth process calls android.os.PowerManager.isInteractive() API on behalf of app foo.\n <li>ThreadLocalWorkSource will be automatically set to the UID of foo.\n <li>Any code on the thread handling android.os.PowerManagerService.isInteractive() can call\n getUid() to blame any resource used to handle this call.\n <li>If a message is posted from the binder thread, the code handling the message can also call\n getUid() and it will return the UID of foo since the work source is\n automatically propagated.\n </li></li></li></li></ul></p>\n\n<p> Only for use within system server.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-UID_NONE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ThreadLocalWorkSource'>android.os.ThreadLocalWorkSource</span><br/><a href='source/ThreadLocalWorkSource.html#android-os-ThreadLocalWorkSource-property-UID_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ThreadLocalWorkSource-property-UID_NONE' class='name expandable'>UID_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clear' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ThreadLocalWorkSource'>android.os.ThreadLocalWorkSource</span><br/><a href='source/ThreadLocalWorkSource.html#android-os-ThreadLocalWorkSource-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ThreadLocalWorkSource-method-clear' class='name expandable'>clear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Clears the stored work source uid. ...</div><div class='long'><p>Clears the stored work source uid.</p>\n\n<p> <p>This method should be used when we do not know who to blame. If the UID to blame is the\n UID of the current process, it is better to attribute the work to the current process\n explicitly instead of clearing the work source:</p>\n\n<pre> ThreadLocalWorkSource.setUid(Process.myUid());\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a token that can be used to restore the state.</p>\n</div></li></ul></div></div></div><div id='method-getUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ThreadLocalWorkSource'>android.os.ThreadLocalWorkSource</span><br/><a href='source/ThreadLocalWorkSource.html#android-os-ThreadLocalWorkSource-method-getUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ThreadLocalWorkSource-method-getUid' class='name expandable'>getUid</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the UID to blame for the code currently executed on this thread. ...</div><div class='long'><p>Returns the UID to blame for the code currently executed on this thread.</p>\n\n<p> <p>This UID is set automatically by common frameworks (e.g. Binder and Handler frameworks)\n and automatically propagated inside system server.\n <p>It can also be set manually using <a href=\"#!/api/android.os.ThreadLocalWorkSource-method-setUid\" rel=\"android.os.ThreadLocalWorkSource-method-setUid\" class=\"docClass\">setUid</a>(int).</p>\n</div></div></div><div id='method-restore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ThreadLocalWorkSource'>android.os.ThreadLocalWorkSource</span><br/><a href='source/ThreadLocalWorkSource.html#android-os-ThreadLocalWorkSource-method-restore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ThreadLocalWorkSource-method-restore' class='name expandable'>restore</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restores the state using the provided token. ...</div><div class='long'><p>Restores the state using the provided token.</p>\n</div></div></div><div id='method-setUid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.ThreadLocalWorkSource'>android.os.ThreadLocalWorkSource</span><br/><a href='source/ThreadLocalWorkSource.html#android-os-ThreadLocalWorkSource-method-setUid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.ThreadLocalWorkSource-method-setUid' class='name expandable'>setUid</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the UID to blame for the code currently executed on this thread. ...</div><div class='long'><p>Sets the UID to blame for the code currently executed on this thread.</p>\n\n<p> <p>Inside system server, this UID will be automatically propagated.\n <p>It will be used to attribute future resources used on this thread (e.g. binder\n transactions or processing handler messages) and on any other threads the UID is propagated\n to.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a token that can be used to restore the state.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});