Ext.data.JsonP.android_os_UpdateEngine({"tagname":"class","name":"android.os.UpdateEngine","autodetected":{},"files":[{"filename":"UpdateEngine.js","href":"UpdateEngine.html#android-os-UpdateEngine"}],"extends":"java.lang.Object","members":[{"name":"applyPayload","tagname":"method","owner":"android.os.UpdateEngine","id":"method-applyPayload","meta":{}},{"name":"bind","tagname":"method","owner":"android.os.UpdateEngine","id":"method-bind","meta":{}},{"name":"cancel","tagname":"method","owner":"android.os.UpdateEngine","id":"method-cancel","meta":{}},{"name":"resetStatus","tagname":"method","owner":"android.os.UpdateEngine","id":"method-resetStatus","meta":{}},{"name":"resume","tagname":"method","owner":"android.os.UpdateEngine","id":"method-resume","meta":{}},{"name":"suspend","tagname":"method","owner":"android.os.UpdateEngine","id":"method-suspend","meta":{}},{"name":"unbind","tagname":"method","owner":"android.os.UpdateEngine","id":"method-unbind","meta":{}},{"name":"verifyPayloadMetadata","tagname":"method","owner":"android.os.UpdateEngine","id":"method-verifyPayloadMetadata","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.os.UpdateEngine","short_doc":"UpdateEngine handles calls to the update engine which takes care of A/B OTA\n updates. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.os.UpdateEngine</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UpdateEngine.html#android-os-UpdateEngine' target='_blank'>UpdateEngine.js</a></div></pre><div class='doc-contents'><p>UpdateEngine handles calls to the update engine which takes care of A/B OTA\n updates. It wraps up the update engine Binder APIs and exposes them as\n SystemApis, which will be called by the system app responsible for OTAs.\n On a Google device, this will be GmsCore.</p>\n\n<p> The minimal flow is:\n <ol>\n <li>Create a new UpdateEngine instance.\n <li>Call <a href=\"#!/api/android.os.UpdateEngine-method-bind\" rel=\"android.os.UpdateEngine-method-bind\" class=\"docClass\">bind</a>, optionally providing callbacks.\n <li>Call <a href=\"#!/api/android.os.UpdateEngine-method-applyPayload\" rel=\"android.os.UpdateEngine-method-applyPayload\" class=\"docClass\">applyPayload</a>.\n </li></li></li></ol></p>\n\n<p> In addition, methods are provided to <a href=\"#!/api/android.os.UpdateEngine-method-cancel\" rel=\"android.os.UpdateEngine-method-cancel\" class=\"docClass\">cancel</a> or\n <a href=\"#!/api/android.os.UpdateEngine-method-suspend\" rel=\"android.os.UpdateEngine-method-suspend\" class=\"docClass\">suspend</a>/<a href=\"#!/api/android.os.UpdateEngine-method-resume\" rel=\"android.os.UpdateEngine-method-resume\" class=\"docClass\">resume</a> application of an update.</p>\n\n<p> The APIs defined in this class and UpdateEngineCallback class must be in\n sync with the ones in\n {@code system/update_engine/binder_bindings/android/os/IUpdateEngine.aidl}\n and\n {@code system/update_engine/binder_bindings/android/os/IUpdateEngineCallback.aidl}.</p>\n\n<p> {@hide}</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-applyPayload' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-applyPayload' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-applyPayload' class='name expandable'>applyPayload</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Applies the payload found at the given {@code url}. ...</div><div class='long'><p>Applies the payload found at the given {@code url}. For non-streaming\n updates, the URL can be a local file using the {@code file://} scheme.</p>\n\n<p> <p>The {@code offset} and {@code size} parameters specify the location\n of the payload within the file represented by the URL. This is useful\n if the downloadable package at the URL contains more than just the\n update_engine payload (such as extra metadata). This is true for\n Google's OTA system, where the URL points to a zip file in which the\n payload is stored uncompressed within the zip file alongside other\n data.</p>\n\n<p> <p>The {@code headerKeyValuePairs} parameter is used to pass metadata\n to update_engine. In Google's implementation, this is stored as\n {@code payload_properties.txt} in the zip file. It's generated by the\n script {@code system/update_engine/scripts/brillo_update_payload}.\n The complete list of keys and their documentation is in\n {@code system/update_engine/common/constants.cc}, but an example\n might be:</p>\n\n<pre> String[] pairs = {\n   \"FILE_HASH=lURPCIkIAjtMOyB/EjQcl8zDzqtD6Ta3tJef6G/+z2k=\",\n   \"FILE_SIZE=871903868\",\n   \"METADATA_HASH=tBvj43QOB0Jn++JojcpVdbRLz0qdAuL+uTkSy7hokaw=\",\n   \"METADATA_SIZE=70604\"\n };\n </pre>\n\n\n<p> <p>The callback functions registered via {@code <a href=\"#!/api/android.os.UpdateEngine-method-bind\" rel=\"android.os.UpdateEngine-method-bind\" class=\"docClass\">bind</a>} will be called\n during and at the end of the payload application.</p>\n\n<p> <p>By default the newly updated slot will be set active upon\n successfully finishing an update. Device will attempt to boot into the\n new slot on next reboot. This behavior can be customized by specifying\n {@code SWITCH_SLOT_ON_REBOOT=0} in {@code headerKeyValuePairs}, which\n allows the caller to later determine a good time to boot into the new\n slot. Calling {@code applyPayload} again with the same payload but with\n {@code SWITCH_SLOT_ON_REBOOT=1} will do the minimal work to set the new\n slot active, after verifying its integrity.</p>\n</div></div></div><div id='method-bind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-bind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-bind' class='name expandable'>bind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Equivalent to {@code bind(callback, null)}. ...</div><div class='long'><p>Equivalent to {@code bind(callback, null)}.</p>\n</div></div></div><div id='method-cancel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-cancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-cancel' class='name expandable'>cancel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Permanently cancels an in-progress update. ...</div><div class='long'><p>Permanently cancels an in-progress update.</p>\n\n<p> <p>See <a href=\"#!/api/android.os.UpdateEngine-method-resetStatus\" rel=\"android.os.UpdateEngine-method-resetStatus\" class=\"docClass\">resetStatus</a> to undo a finshed update (only available\n before the updated system has been rebooted).</p>\n\n<p> <p>See <a href=\"#!/api/android.os.UpdateEngine-method-suspend\" rel=\"android.os.UpdateEngine-method-suspend\" class=\"docClass\">suspend</a> for a way to temporarily stop an in-progress\n update with the ability to resume it later.</p>\n</div></div></div><div id='method-resetStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-resetStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-resetStatus' class='name expandable'>resetStatus</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets the bootable flag on the non-current partition and all internal\n update_engine state. ...</div><div class='long'><p>Resets the bootable flag on the non-current partition and all internal\n update_engine state. This can be used after an unwanted payload has been\n successfully applied and the device has not yet been rebooted to signal\n that we no longer want to boot into that updated system. After this call\n completes, update_engine will no longer report\n {@code UPDATED_NEED_REBOOT}, so your callback can remove any outstanding\n notification that rebooting into the new system is possible.</p>\n</div></div></div><div id='method-resume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-resume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-resume' class='name expandable'>resume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resumes a suspended update. ...</div><div class='long'><p>Resumes a suspended update.</p>\n</div></div></div><div id='method-suspend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-suspend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-suspend' class='name expandable'>suspend</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Suspends an in-progress update. ...</div><div class='long'><p>Suspends an in-progress update. This can be undone by calling\n <a href=\"#!/api/android.os.UpdateEngine-method-resume\" rel=\"android.os.UpdateEngine-method-resume\" class=\"docClass\">resume</a>.</p>\n</div></div></div><div id='method-unbind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-unbind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-unbind' class='name expandable'>unbind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unbinds the last bound callback function. ...</div><div class='long'><p>Unbinds the last bound callback function.</p>\n</div></div></div><div id='method-verifyPayloadMetadata' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.os.UpdateEngine'>android.os.UpdateEngine</span><br/><a href='source/UpdateEngine.html#android-os-UpdateEngine-method-verifyPayloadMetadata' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.os.UpdateEngine-method-verifyPayloadMetadata' class='name expandable'>verifyPayloadMetadata</a>( <span class='pre'>payloadMetadataFilename</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Verifies that a payload associated with the given payload metadata\n {@code payloadMetadataFilename} can be safely app...</div><div class='long'><p>Verifies that a payload associated with the given payload metadata\n {@code payloadMetadataFilename} can be safely applied to ths device.\n Returns {@code true} if the update can successfully be applied and\n returns {@code false} otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>payloadMetadataFilename</span> : String<div class='sub-desc'><p>the location of the metadata without the\n {@code file://} prefix.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});