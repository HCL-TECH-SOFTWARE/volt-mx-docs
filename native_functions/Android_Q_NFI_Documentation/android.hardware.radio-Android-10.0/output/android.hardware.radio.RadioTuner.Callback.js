Ext.data.JsonP.android_hardware_radio_RadioTuner_Callback({"tagname":"class","name":"android.hardware.radio.RadioTuner.Callback","autodetected":{},"files":[{"filename":"Callback.js","href":"Callback.html#android-hardware-radio-RadioTuner-Callback"}],"extends":"java.lang.Object","members":[{"name":"onAntennaState","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onAntennaState","meta":{}},{"name":"onBackgroundScanAvailabilityChange","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onBackgroundScanAvailabilityChange","meta":{}},{"name":"onBackgroundScanComplete","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onBackgroundScanComplete","meta":{}},{"name":"onConfigurationChanged","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onConfigurationChanged","meta":{"deprecated":{"text":"<p>Only applicable for HAL 1.x.</p>\n"}}},{"name":"onControlChanged","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onControlChanged","meta":{}},{"name":"onEmergencyAnnouncement","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onEmergencyAnnouncement","meta":{}},{"name":"onError","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onError","meta":{"deprecated":{"text":"<p>Use onTuneFailed for tune, scan and step;\n             other use cases (configuration, background scan) are already deprecated.</p>\n"}}},{"name":"onMetadataChanged","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onMetadataChanged","meta":{"deprecated":{"text":"<p>Use onProgramInfoChanged(RadioManager.ProgramInfo) instead.</p>\n"}}},{"name":"onParametersUpdated","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onParametersUpdated","meta":{}},{"name":"onProgramInfoChanged","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onProgramInfoChanged","meta":{}},{"name":"onProgramListChanged","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onProgramListChanged","meta":{}},{"name":"onTrafficAnnouncement","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onTrafficAnnouncement","meta":{}},{"name":"onTuneFailed","tagname":"method","owner":"android.hardware.radio.RadioTuner.Callback","id":"method-onTuneFailed","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.radio.RadioTuner.Callback","short_doc":"Callback provided by the client application when opening a android.hardware.radio.RadioTuner\n to receive asynchronous...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.radio.RadioTuner.Callback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback' target='_blank'>Callback.js</a></div></pre><div class='doc-contents'><p>Callback provided by the client application when opening a <a href=\"#!/api/android.hardware.radio.RadioTuner\" rel=\"android.hardware.radio.RadioTuner\" class=\"docClass\">android.hardware.radio.RadioTuner</a>\n to receive asynchronous operation results, updates and error notifications.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onAntennaState' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onAntennaState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onAntennaState' class='name expandable'>onAntennaState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>onAntennaState() is called when the antenna is connected or disconnected. ...</div><div class='long'><p>onAntennaState() is called when the antenna is connected or disconnected.</p>\n</div></div></div><div id='method-onBackgroundScanAvailabilityChange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onBackgroundScanAvailabilityChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onBackgroundScanAvailabilityChange' class='name expandable'>onBackgroundScanAvailabilityChange</a>( <span class='pre'>isAvailable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>onBackgroundScanAvailabilityChange() is called when background scan\n feature becomes available or not. ...</div><div class='long'><p>onBackgroundScanAvailabilityChange() is called when background scan\n feature becomes available or not.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isAvailable</span> : Boolean<div class='sub-desc'><p>true, if the tuner turned temporarily background-\n                    capable, false in the other case.</p>\n</div></li></ul></div></div></div><div id='method-onBackgroundScanComplete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onBackgroundScanComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onBackgroundScanComplete' class='name expandable'>onBackgroundScanComplete</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a background scan completes successfully. ...</div><div class='long'><p>Called when a background scan completes successfully.</p>\n</div></div></div><div id='method-onConfigurationChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onConfigurationChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onConfigurationChanged' class='name expandable'>onConfigurationChanged</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>onConfigurationChanged() is called upon successful completion of\n android.hardware.radio.RadioManager.BandConfig, boo...</div><div class='long'><p>onConfigurationChanged() is called upon successful completion of\n android.hardware.radio.RadioManager.BandConfig, boolean, android.hardware.radio.RadioTuner.Callback, Handler)\n or android.hardware.radio.RadioTuner.setConfiguration(RadioManager.BandConfig)</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Only applicable for HAL 1.x.</p>\n\n        </div>\n</div></div></div><div id='method-onControlChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onControlChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onControlChanged' class='name expandable'>onControlChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>onControlChanged() is called when the client loses or gains control of the radio tuner. ...</div><div class='long'><p>onControlChanged() is called when the client loses or gains control of the radio tuner.\n The control is always granted after a successful call to\n android.hardware.radio.RadioManager.BandConfig, boolean, android.hardware.radio.RadioTuner.Callback, Handler).\n If another client opens the same tuner, onControlChanged() will be called with\n control set to {@code false} to indicate loss of control.\n At this point, RadioTuner APIs other than getters will return\n <a href=\"#!/api/android.hardware.radio.RadioManager-property-STATUS_INVALID_OPERATION\" rel=\"android.hardware.radio.RadioManager-property-STATUS_INVALID_OPERATION\" class=\"docClass\">android.hardware.radio.RadioManager.STATUS_INVALID_OPERATION</a>.\n When the other client releases the tuner, onControlChanged() will be called\n with control set to {@code true}.</p>\n</div></div></div><div id='method-onEmergencyAnnouncement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onEmergencyAnnouncement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onEmergencyAnnouncement' class='name expandable'>onEmergencyAnnouncement</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>onEmergencyAnnouncement() is called when an emergency annoucement starts and stops. ...</div><div class='long'><p>onEmergencyAnnouncement() is called when an emergency annoucement starts and stops.</p>\n</div></div></div><div id='method-onError' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onError' class='name expandable'>onError</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>onError() is called when an error occured while performing an asynchronous\n operation of when the hardware or system ...</div><div class='long'><p>onError() is called when an error occured while performing an asynchronous\n operation of when the hardware or system service experiences a problem.\n status is one of ERROR_HARDWARE_FAILURE, ERROR_SERVER_DIED,\n ERROR_CANCELLED, ERROR_SCAN_TIMEOUT,\n ERROR_CONFIG</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use onTuneFailed for tune, scan and step;\n             other use cases (configuration, background scan) are already deprecated.</p>\n\n        </div>\n</div></div></div><div id='method-onMetadataChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onMetadataChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onMetadataChanged' class='name expandable'>onMetadataChanged</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called when metadata is updated for the current program. ...</div><div class='long'><p>Called when metadata is updated for the current program.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use onProgramInfoChanged(RadioManager.ProgramInfo) instead.</p>\n\n        </div>\n</div></div></div><div id='method-onParametersUpdated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onParametersUpdated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onParametersUpdated' class='name expandable'>onParametersUpdated</a>( <span class='pre'>parameters</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Generic callback for passing updates to vendor-specific parameter values. ...</div><div class='long'><p>Generic callback for passing updates to vendor-specific parameter values.\n The framework does not interpret the parameters, they are passed\n in an opaque manner between a vendor application and HAL.</p>\n\n<p> It's up to the HAL implementation if and how to implement this callback,\n as long as it obeys the prefix rule. In particular, only selected keys\n may be notified this way. However, setParameters must not trigger\n this callback, while an internal event can change parameters\n asynchronously.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parameters</span> : Object {java.util.Map}<div class='sub-desc'><p>Vendor-specific key-value pairs.</p>\n</div></li></ul></div></div></div><div id='method-onProgramInfoChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onProgramInfoChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onProgramInfoChanged' class='name expandable'>onProgramInfoChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when program info (including metadata) for the current program has changed. ...</div><div class='long'><p>Called when program info (including metadata) for the current program has changed.</p>\n\n<p> It happens either upon successful completion of boolean),\n boolean), int); when\n a switching to alternate frequency occurs; or when metadata is updated.</p>\n</div></div></div><div id='method-onProgramListChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onProgramListChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onProgramListChanged' class='name expandable'>onProgramListChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when available program list changed. ...</div><div class='long'><p>Called when available program list changed.</p>\n\n<p> Use android.hardware.radio.RadioTuner.getProgramList(String) to get an actual list.</p>\n</div></div></div><div id='method-onTrafficAnnouncement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onTrafficAnnouncement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onTrafficAnnouncement' class='name expandable'>onTrafficAnnouncement</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>onTrafficAnnouncement() is called when a traffic announcement starts and stops. ...</div><div class='long'><p>onTrafficAnnouncement() is called when a traffic announcement starts and stops.</p>\n</div></div></div><div id='method-onTuneFailed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.radio.RadioTuner.Callback'>android.hardware.radio.RadioTuner.Callback</span><br/><a href='source/Callback.html#android-hardware-radio-RadioTuner-Callback-method-onTuneFailed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.radio.RadioTuner.Callback-method-onTuneFailed' class='name expandable'>onTuneFailed</a>( <span class='pre'>result, selector</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when tune, scan or step operation fails. ...</div><div class='long'><p>Called when tune, scan or step operation fails.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>result</span> : Number<div class='sub-desc'><p>cause of the failure</p>\n</div></li><li><span class='pre'>selector</span> : Object {ProgramSelector}<div class='sub-desc'><p>ProgramSelector argument of tune that failed;\n                 null for scan and step.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});