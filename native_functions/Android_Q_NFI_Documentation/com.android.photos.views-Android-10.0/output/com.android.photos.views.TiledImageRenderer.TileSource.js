Ext.data.JsonP.com_android_photos_views_TiledImageRenderer_TileSource({"tagname":"class","name":"com.android.photos.views.TiledImageRenderer.TileSource","autodetected":{},"files":[{"filename":"TileSource.js","href":"TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource"}],"members":[{"name":"getImageHeight","tagname":"method","owner":"com.android.photos.views.TiledImageRenderer.TileSource","id":"method-getImageHeight","meta":{}},{"name":"getImageWidth","tagname":"method","owner":"com.android.photos.views.TiledImageRenderer.TileSource","id":"method-getImageWidth","meta":{}},{"name":"getPreview","tagname":"method","owner":"com.android.photos.views.TiledImageRenderer.TileSource","id":"method-getPreview","meta":{}},{"name":"getRotation","tagname":"method","owner":"com.android.photos.views.TiledImageRenderer.TileSource","id":"method-getRotation","meta":{}},{"name":"getTile","tagname":"method","owner":"com.android.photos.views.TiledImageRenderer.TileSource","id":"method-getTile","meta":{}},{"name":"getTileSize","tagname":"method","owner":"com.android.photos.views.TiledImageRenderer.TileSource","id":"method-getTileSize","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.photos.views.TiledImageRenderer.TileSource","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource' target='_blank'>TileSource.js</a></div></pre><div class='doc-contents'><p>Interface for providing tiles to a <a href=\"#!/api/com.android.photos.views.TiledImageRenderer\" rel=\"com.android.photos.views.TiledImageRenderer\" class=\"docClass\">com.android.photos.views.TiledImageRenderer</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getImageHeight' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.photos.views.TiledImageRenderer.TileSource'>com.android.photos.views.TiledImageRenderer.TileSource</span><br/><a href='source/TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource-method-getImageHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.photos.views.TiledImageRenderer.TileSource-method-getImageHeight' class='name expandable'>getImageHeight</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getImageWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.photos.views.TiledImageRenderer.TileSource'>com.android.photos.views.TiledImageRenderer.TileSource</span><br/><a href='source/TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource-method-getImageWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.photos.views.TiledImageRenderer.TileSource-method-getImageWidth' class='name expandable'>getImageWidth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getPreview' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.photos.views.TiledImageRenderer.TileSource'>com.android.photos.views.TiledImageRenderer.TileSource</span><br/><a href='source/TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource-method-getPreview' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.photos.views.TiledImageRenderer.TileSource-method-getPreview' class='name expandable'>getPreview</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a Preview image if available. ...</div><div class='long'><p>Return a Preview image if available. This will be used as the base layer\n if higher res tiles are not yet available</p>\n</div></div></div><div id='method-getRotation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.photos.views.TiledImageRenderer.TileSource'>com.android.photos.views.TiledImageRenderer.TileSource</span><br/><a href='source/TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource-method-getRotation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.photos.views.TiledImageRenderer.TileSource-method-getRotation' class='name expandable'>getRotation</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getTile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.photos.views.TiledImageRenderer.TileSource'>com.android.photos.views.TiledImageRenderer.TileSource</span><br/><a href='source/TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource-method-getTile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.photos.views.TiledImageRenderer.TileSource-method-getTile' class='name expandable'>getTile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The tile returned by this method can be specified this way: Assuming\n the image size is (width, height), first take t...</div><div class='long'><p>The tile returned by this method can be specified this way: Assuming\n the image size is (width, height), first take the intersection of (0,\n 0) - (width, height) and (x, y) - (x + tileSize, y + tileSize). If\n in extending the region, we found some part of the region is outside\n the image, those pixels are filled with black.</p>\n\n<p> If level > 0, it does the same operation on a down-scaled version of\n the original image (down-scaled by a factor of 2<sup>level</sup>), but (x, y)\n still refers to the coordinate on the original image.</p>\n\n<p> The method would be called by the decoder thread.</p>\n</div></div></div><div id='method-getTileSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.photos.views.TiledImageRenderer.TileSource'>com.android.photos.views.TiledImageRenderer.TileSource</span><br/><a href='source/TileSource.html#com-android-photos-views-TiledImageRenderer-TileSource-method-getTileSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.photos.views.TiledImageRenderer.TileSource-method-getTileSize' class='name expandable'>getTileSize</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If the source does not care about the tile size, it should use\n com.android.photos.views.TiledImageRenderer.suggested...</div><div class='long'><p>If the source does not care about the tile size, it should use\n com.android.photos.views.TiledImageRenderer.suggestedTileSize(Context)</p>\n</div></div></div></div></div></div></div>","meta":{}});