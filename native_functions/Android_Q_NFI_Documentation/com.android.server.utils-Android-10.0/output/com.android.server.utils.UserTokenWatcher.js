Ext.data.JsonP.com_android_server_utils_UserTokenWatcher({"tagname":"class","name":"com.android.server.utils.UserTokenWatcher","autodetected":{},"files":[{"filename":"UserTokenWatcher.js","href":"UserTokenWatcher.html#com-android-server-utils-UserTokenWatcher"}],"extends":"java.lang.Object","members":[{"name":"acquire","tagname":"method","owner":"com.android.server.utils.UserTokenWatcher","id":"method-acquire","meta":{}},{"name":"dump","tagname":"method","owner":"com.android.server.utils.UserTokenWatcher","id":"method-dump","meta":{}},{"name":"isAcquired","tagname":"method","owner":"com.android.server.utils.UserTokenWatcher","id":"method-isAcquired","meta":{}},{"name":"release","tagname":"method","owner":"com.android.server.utils.UserTokenWatcher","id":"method-release","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.utils.UserTokenWatcher","short_doc":"Multi-user aware TokenWatcher. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.utils.UserTokenWatcher</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UserTokenWatcher.html#com-android-server-utils-UserTokenWatcher' target='_blank'>UserTokenWatcher.js</a></div></pre><div class='doc-contents'><p>Multi-user aware TokenWatcher.</p>\n\n<p> <a href=\"#!/api/com.android.server.utils.UserTokenWatcher\" rel=\"com.android.server.utils.UserTokenWatcher\" class=\"docClass\">com.android.server.utils.UserTokenWatcher</a> is thread-safe.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acquire' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.utils.UserTokenWatcher'>com.android.server.utils.UserTokenWatcher</span><br/><a href='source/UserTokenWatcher.html#com-android-server-utils-UserTokenWatcher-method-acquire' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.utils.UserTokenWatcher-method-acquire' class='name expandable'>acquire</a>( <span class='pre'>token, tag, userId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Record that this token has been acquired for the given user. ...</div><div class='long'><p>Record that this token has been acquired for the given user.  When acquire is called, and\n the user's count goes from 0 to 1, the acquired callback is called on the given\n handler.</p>\n\n<p> Note that the same {@code token} can only be acquired once per user. If this\n {@code token} has already been acquired for the given user, no action is taken. The first\n subsequent call to <a href=\"#!/api/com.android.server.utils.UserTokenWatcher-method-release\" rel=\"com.android.server.utils.UserTokenWatcher-method-release\" class=\"docClass\">release</a> will release this {@code token}\n immediately.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>An IBinder object.</p>\n</div></li><li><span class='pre'>tag</span> : String<div class='sub-desc'><p>A string used by the <a href=\"#!/api/com.android.server.utils.UserTokenWatcher-method-dump\" rel=\"com.android.server.utils.UserTokenWatcher-method-dump\" class=\"docClass\">dump</a> method for debugging,\n               to see who has references.</p>\n</div></li><li><span class='pre'>userId</span> : Number<div class='sub-desc'><p>A user id</p>\n</div></li></ul></div></div></div><div id='method-dump' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.utils.UserTokenWatcher'>com.android.server.utils.UserTokenWatcher</span><br/><a href='source/UserTokenWatcher.html#com-android-server-utils-UserTokenWatcher-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.utils.UserTokenWatcher-method-dump' class='name expandable'>dump</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dumps the current state. ...</div><div class='long'><p>Dumps the current state.</p>\n</div></div></div><div id='method-isAcquired' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.utils.UserTokenWatcher'>com.android.server.utils.UserTokenWatcher</span><br/><a href='source/UserTokenWatcher.html#com-android-server-utils-UserTokenWatcher-method-isAcquired' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.utils.UserTokenWatcher-method-isAcquired' class='name expandable'>isAcquired</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the given user has any registered tokens that have not been cleaned up. ...</div><div class='long'><p>Returns whether the given user has any registered tokens that have not been cleaned up.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true, if the given user has registered tokens.</p>\n</div></li></ul></div></div></div><div id='method-release' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.utils.UserTokenWatcher'>com.android.server.utils.UserTokenWatcher</span><br/><a href='source/UserTokenWatcher.html#com-android-server-utils-UserTokenWatcher-method-release' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.utils.UserTokenWatcher-method-release' class='name expandable'>release</a>( <span class='pre'>token, userId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Record that this token has been released for the given user. ...</div><div class='long'><p>Record that this token has been released for the given user.  When release is called, and\n the user's count goes from 1 to 0, the released callback is called on the given\n handler.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>An IBinder object.</p>\n</div></li><li><span class='pre'>userId</span> : Number<div class='sub-desc'><p>A user id</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});