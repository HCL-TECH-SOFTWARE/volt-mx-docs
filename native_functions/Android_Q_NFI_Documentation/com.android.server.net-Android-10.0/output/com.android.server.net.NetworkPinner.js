Ext.data.JsonP.com_android_server_net_NetworkPinner({"tagname":"class","name":"com.android.server.net.NetworkPinner","autodetected":{},"files":[{"filename":"NetworkPinner.js","href":"NetworkPinner.html#com-android-server-net-NetworkPinner"}],"extends":"android.net.ConnectivityManager.NetworkCallback","members":[{"name":"pin","tagname":"method","owner":"com.android.server.net.NetworkPinner","id":"method-pin","meta":{}},{"name":"unpin","tagname":"method","owner":"com.android.server.net.NetworkPinner","id":"method-unpin","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.net.NetworkPinner","short_doc":"A class that pins a process to the first network that satisfies a particular NetworkRequest. ...","classIcon":"icon-class","superclasses":["android.net.ConnectivityManager.NetworkCallback"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.net.ConnectivityManager.NetworkCallback<div class='subclass '><strong>com.android.server.net.NetworkPinner</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/NetworkPinner.html#com-android-server-net-NetworkPinner' target='_blank'>NetworkPinner.js</a></div></pre><div class='doc-contents'><p>A class that pins a process to the first network that satisfies a particular NetworkRequest.</p>\n\n<p> We use this to maintain compatibility with pre-M apps that call WifiManager.enableNetwork()\n to connect to a Wi-Fi network that has no Internet access, and then assume that they will be\n able to use that network because it's the system default.</p>\n\n<p> In order to maintain compatibility with apps that call setProcessDefaultNetwork themselves,\n we try not to set the default network unless they have already done so, and we try not to\n clear the default network unless we set it ourselves.</p>\n\n<p> This should maintain behaviour that's compatible with L, which would pin the whole system to\n any wifi network that was created via enableNetwork(..., true) until that network\n disconnected.</p>\n\n<p> Note that while this hack allows network traffic to flow, it is quite limited. For example:</p>\n\n<ol>\n<li>setProcessDefaultNetwork only affects this process, so:\n\n<ul>\n<li>Any subprocesses spawned by this process will not be pinned to Wi-Fi.</li>\n<li>If this app relies on any other apps on the device also being on Wi-Fi, that won't work\neither, because other apps on the device will not be pinned.</li>\n</ul>\n</li>\n<li>The behaviour of other APIs is not modified. For example:\n\n<ul>\n<li>getActiveNetworkInfo will return the system default network, not Wi-Fi.</li>\n<li>There will be no CONNECTIVITY_ACTION broadcasts about TYPE_WIFI.</li>\n<li>getProcessDefaultNetwork will not return null, so if any apps are relying on that, they\nwill be surprised as well.</li>\n</ul>\n</li>\n</ol>\n\n\n<p> This class is a per-process singleton because the process default network is a per-process\n singleton.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-pin' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.net.NetworkPinner'>com.android.server.net.NetworkPinner</span><br/><a href='source/NetworkPinner.html#com-android-server-net-NetworkPinner-method-pin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.net.NetworkPinner-method-pin' class='name expandable'>pin</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-unpin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.net.NetworkPinner'>com.android.server.net.NetworkPinner</span><br/><a href='source/NetworkPinner.html#com-android-server-net-NetworkPinner-method-unpin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.net.NetworkPinner-method-unpin' class='name expandable'>unpin</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});