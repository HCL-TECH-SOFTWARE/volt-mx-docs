Ext.data.JsonP.android_media_tv_TvView_OnUnhandledInputEventListener({"tagname":"class","name":"android.media.tv.TvView.OnUnhandledInputEventListener","autodetected":{},"files":[{"filename":"OnUnhandledInputEventListener.js","href":"OnUnhandledInputEventListener.html#android-media-tv-TvView-OnUnhandledInputEventListener"}],"members":[{"name":"onUnhandledInputEvent","tagname":"method","owner":"android.media.tv.TvView.OnUnhandledInputEventListener","id":"method-onUnhandledInputEvent","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.tv.TvView.OnUnhandledInputEventListener","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnUnhandledInputEventListener.html#android-media-tv-TvView-OnUnhandledInputEventListener' target='_blank'>OnUnhandledInputEventListener.js</a></div></pre><div class='doc-contents'><p>Interface definition for a callback to be invoked when the unhandled input event is received.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onUnhandledInputEvent' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvView.OnUnhandledInputEventListener'>android.media.tv.TvView.OnUnhandledInputEventListener</span><br/><a href='source/OnUnhandledInputEventListener.html#android-media-tv-TvView-OnUnhandledInputEventListener-method-onUnhandledInputEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvView.OnUnhandledInputEventListener-method-onUnhandledInputEvent' class='name expandable'>onUnhandledInputEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an input event was not handled by the bound TV input. ...</div><div class='long'><p>Called when an input event was not handled by the bound TV input.</p>\n\n<p> <p>This is called asynchronously from where the event is dispatched. It gives the host\n application a chance to handle the unhandled input events.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {InputEvent}<div class='sub-desc'><p>The input event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If you handled the event, return {@code true}. If you want to allow the event to\n         be handled by the next receiver, return {@code false}.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});