Ext.data.JsonP.android_media_tv_TvInputService_RecordingSession({"tagname":"class","name":"android.media.tv.TvInputService.RecordingSession","autodetected":{},"files":[{"filename":"RecordingSession.js","href":"RecordingSession.html#android-media-tv-TvInputService-RecordingSession"}],"extends":"java.lang.Object","members":[{"name":"notifyError","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-notifyError","meta":{}},{"name":"notifyRecordingStopped","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-notifyRecordingStopped","meta":{}},{"name":"notifyTuned","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-notifyTuned","meta":{}},{"name":"onAppPrivateCommand","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-onAppPrivateCommand","meta":{}},{"name":"onRelease","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-onRelease","meta":{}},{"name":"onStartRecording","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-onStartRecording","meta":{}},{"name":"onStopRecording","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-onStopRecording","meta":{}},{"name":"onTune","tagname":"method","owner":"android.media.tv.TvInputService.RecordingSession","id":"method-onTune","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.media.tv.TvInputService.RecordingSession","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.media.tv.TvInputService.RecordingSession</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession' target='_blank'>RecordingSession.js</a></div></pre><div class='doc-contents'><p>Base class for derived classes to implement to provide a TV input recording session.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-notifyError' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-notifyError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyError' class='name expandable'>notifyError</a>( <span class='pre'>error</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs the application that there is an error and this recording session is no longer\n able to start or continue rec...</div><div class='long'><p>Informs the application that there is an error and this recording session is no longer\n able to start or continue recording. It may be called at any time after the recording\n session is created until <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-onRelease\" rel=\"android.media.tv.TvInputService.RecordingSession-method-onRelease\" class=\"docClass\">onRelease</a>() is called.</p>\n\n<p> <p>The application may release the current session upon receiving the error code through\n android.media.tv.TvRecordingClient.RecordingCallback.onError(int). The session may call\n <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyRecordingStopped\" rel=\"android.media.tv.TvInputService.RecordingSession-method-notifyRecordingStopped\" class=\"docClass\">notifyRecordingStopped</a>(Uri) if a partially recorded but still playable program\n is available, before calling this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Number<div class='sub-desc'><p>The error code. Should be one of the followings.\n <ul>\n <li>TvInputManager.RECORDING_ERROR_UNKNOWN\n <li>TvInputManager.RECORDING_ERROR_INSUFFICIENT_SPACE\n <li>TvInputManager.RECORDING_ERROR_RESOURCE_BUSY\n </li></li></li></ul></p>\n</div></li></ul></div></div></div><div id='method-notifyRecordingStopped' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-notifyRecordingStopped' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyRecordingStopped' class='name expandable'>notifyRecordingStopped</a>( <span class='pre'>recordedProgramUri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs the application that this recording session has stopped recording and created a\n new data entry in the androi...</div><div class='long'><p>Informs the application that this recording session has stopped recording and created a\n new data entry in the <a href=\"#!/api/android.media.tv.TvContract.RecordedPrograms\" rel=\"android.media.tv.TvContract.RecordedPrograms\" class=\"docClass\">android.media.tv.TvContract.RecordedPrograms</a> table that describes the newly\n recorded program.</p>\n\n<p> <p>The recording session must call this method in response to <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-onStopRecording\" rel=\"android.media.tv.TvInputService.RecordingSession-method-onStopRecording\" class=\"docClass\">onStopRecording</a>().\n The session may call it even before receiving a call to <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-onStopRecording\" rel=\"android.media.tv.TvInputService.RecordingSession-method-onStopRecording\" class=\"docClass\">onStopRecording</a>() if a\n partially recorded program is available when there is an error.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recordedProgramUri</span> : Object {Uri}<div class='sub-desc'><p>The URI of the newly recorded program.</p>\n</div></li></ul></div></div></div><div id='method-notifyTuned' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-notifyTuned' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyTuned' class='name expandable'>notifyTuned</a>( <span class='pre'>channelUri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs the application that this recording session has been tuned to the given channel\n and is ready to start record...</div><div class='long'><p>Informs the application that this recording session has been tuned to the given channel\n and is ready to start recording.</p>\n\n<p> <p>Upon receiving a call to <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-onTune\" rel=\"android.media.tv.TvInputService.RecordingSession-method-onTune\" class=\"docClass\">onTune</a>(Uri), the session is expected to tune to the\n passed channel and call this method to indicate that it is now available for immediate\n recording. When <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-onStartRecording\" rel=\"android.media.tv.TvInputService.RecordingSession-method-onStartRecording\" class=\"docClass\">onStartRecording</a>(Uri) is called, recording must start with\n minimal delay.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>channelUri</span> : Object {Uri}<div class='sub-desc'><p>The URI of a channel.</p>\n</div></li></ul></div></div></div><div id='method-onAppPrivateCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-onAppPrivateCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-onAppPrivateCommand' class='name expandable'>onAppPrivateCommand</a>( <span class='pre'>action, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Processes a private command sent from the application to the TV input. ...</div><div class='long'><p>Processes a private command sent from the application to the TV input. This can be used\n to provide domain-specific features that are only known between certain TV inputs and\n their clients.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : String<div class='sub-desc'><p>Name of the command to be performed. This <em>must</em> be a scoped name,\n            i.e. prefixed with a package name you own, so that different developers will\n            not create conflicting commands.</p>\n</div></li><li><span class='pre'>data</span> : Object {Bundle}<div class='sub-desc'><p>Any data to include with the command.</p>\n</div></li></ul></div></div></div><div id='method-onRelease' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-onRelease' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-onRelease' class='name expandable'>onRelease</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application requests to release all the resources held by this recording\n session. ...</div><div class='long'><p>Called when the application requests to release all the resources held by this recording\n session.</p>\n</div></div></div><div id='method-onStartRecording' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-onStartRecording' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-onStartRecording' class='name expandable'>onStartRecording</a>( <span class='pre'>programUri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application requests to start TV program recording. ...</div><div class='long'><p>Called when the application requests to start TV program recording. Recording must start\n immediately when this method is called.</p>\n\n<p> <p>The application may supply the URI for a TV program for filling in program specific\n data fields in the <a href=\"#!/api/android.media.tv.TvContract.RecordedPrograms\" rel=\"android.media.tv.TvContract.RecordedPrograms\" class=\"docClass\">android.media.tv.TvContract.RecordedPrograms</a> table.\n A non-null {@code programUri} implies the started recording should be of that specific\n program, whereas null {@code programUri} does not impose such a requirement and the\n recording can span across multiple TV programs. In either case, the application must call\n android.media.tv.TvRecordingClient.stopRecording() to stop the recording.</p>\n\n<p> <p>The session must call <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyError\" rel=\"android.media.tv.TvInputService.RecordingSession-method-notifyError\" class=\"docClass\">notifyError</a>(int) if the start request cannot be\n fulfilled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>programUri</span> : Object {Uri}<div class='sub-desc'><p>The URI for the TV program to record, built by\n            TvContract.buildProgramUri(long). Can be {@code null}.</p>\n</div></li></ul></div></div></div><div id='method-onStopRecording' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-onStopRecording' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-onStopRecording' class='name expandable'>onStopRecording</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application requests to stop TV program recording. ...</div><div class='long'><p>Called when the application requests to stop TV program recording. Recording must stop\n immediately when this method is called.</p>\n\n<p> <p>The session must create a new data entry in the\n <a href=\"#!/api/android.media.tv.TvContract.RecordedPrograms\" rel=\"android.media.tv.TvContract.RecordedPrograms\" class=\"docClass\">android.media.tv.TvContract.RecordedPrograms</a> table that describes the newly\n recorded program and call <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyRecordingStopped\" rel=\"android.media.tv.TvInputService.RecordingSession-method-notifyRecordingStopped\" class=\"docClass\">notifyRecordingStopped</a>(Uri) with the URI to that\n entry.\n If the stop request cannot be fulfilled, the session must call <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyError\" rel=\"android.media.tv.TvInputService.RecordingSession-method-notifyError\" class=\"docClass\">notifyError</a>(int).</p>\n</div></div></div><div id='method-onTune' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.media.tv.TvInputService.RecordingSession'>android.media.tv.TvInputService.RecordingSession</span><br/><a href='source/RecordingSession.html#android-media-tv-TvInputService-RecordingSession-method-onTune' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.media.tv.TvInputService.RecordingSession-method-onTune' class='name expandable'>onTune</a>( <span class='pre'>channelUri, params</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the application requests to tune to a given channel for TV program recording. ...</div><div class='long'><p>Called when the application requests to tune to a given channel for TV program recording.\n Override this method in order to handle domain-specific features that are only known\n between certain TV inputs and their clients.</p>\n\n<p> <p>The application may call this method before starting or after stopping recording, but\n not during recording. The default implementation calls <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-onTune\" rel=\"android.media.tv.TvInputService.RecordingSession-method-onTune\" class=\"docClass\">onTune</a>(Uri).</p>\n\n<p> <p>The session must call <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyTuned\" rel=\"android.media.tv.TvInputService.RecordingSession-method-notifyTuned\" class=\"docClass\">notifyTuned</a>(Uri) if the tune request was fulfilled, or\n <a href=\"#!/api/android.media.tv.TvInputService.RecordingSession-method-notifyError\" rel=\"android.media.tv.TvInputService.RecordingSession-method-notifyError\" class=\"docClass\">notifyError</a>(int) otherwise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>channelUri</span> : Object {Uri}<div class='sub-desc'><p>The URI of a channel.</p>\n</div></li><li><span class='pre'>params</span> : Object {Bundle}<div class='sub-desc'><p>Domain-specific data for this tune request. Keys <em>must</em> be a scoped\n            name, i.e. prefixed with a package name you own, so that different developers\n            will not create conflicting keys.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});