Ext.data.JsonP.com_android_bitmap_util_InputStreamBuffer({"tagname":"class","name":"com.android.bitmap.util.InputStreamBuffer","autodetected":{},"files":[{"filename":"InputStreamBuffer.js","href":"InputStreamBuffer.html#com-android-bitmap-util-InputStreamBuffer"}],"extends":"java.lang.Object","members":[{"name":"advanceTo","tagname":"method","owner":"com.android.bitmap.util.InputStreamBuffer","id":"method-advanceTo","meta":{}},{"name":"get","tagname":"method","owner":"com.android.bitmap.util.InputStreamBuffer","id":"method-get","meta":{}},{"name":"has","tagname":"method","owner":"com.android.bitmap.util.InputStreamBuffer","id":"method-has","meta":{}},{"name":"toDebugString","tagname":"method","owner":"com.android.bitmap.util.InputStreamBuffer","id":"method-toDebugString","meta":{}},{"name":"toString","tagname":"method","owner":"com.android.bitmap.util.InputStreamBuffer","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.bitmap.util.InputStreamBuffer","short_doc":"Wrapper for InputStream that allows you to read bytes from it like a byte[]. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.bitmap.util.InputStreamBuffer</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/InputStreamBuffer.html#com-android-bitmap-util-InputStreamBuffer' target='_blank'>InputStreamBuffer.js</a></div></pre><div class='doc-contents'><p>Wrapper for InputStream that allows you to read bytes from it like a byte[]. An\n internal buffer is kept as small as possible to avoid large unnecessary allocations.</p>\n\n<p> <p/>\n Care must be taken so that the internal buffer is kept small. The best practice is to\n precalculate the maximum buffer size that you will need. For example,\n say you have a loop that reads bytes from index <code>0</code> to <code>10</code>,\n skips to index <code>N</code>, reads from index <code>N</code> to <code>N+10</code>, etc. Then\n you know that the internal buffer can have a maximum size of <code>10</code>,\n and you should set the <code>bufferSize</code> parameter to <code>10</code> in the constructor.</p>\n\n<p> <p/>\n Use <a href=\"#!/api/com.android.bitmap.util.InputStreamBuffer-method-advanceTo\" rel=\"com.android.bitmap.util.InputStreamBuffer-method-advanceTo\" class=\"docClass\">advanceTo</a>(int) to declare that you will not need to access lesser indexes. This\n helps to keep the internal buffer small. In the above example, after reading bytes from index\n <code>0</code> to <code>10</code>, you should call <code>advanceTo(N)</code> so that internal\n buffer becomes filled with bytes from index <code>N</code> to <code>N+10</code>.</p>\n\n<p> <p/>\n If you know that you are reading bytes from a <strong>strictly</strong> increasing or equal\n index, then you should set the <code>autoAdvance</code> parameter to <code>true</code> in the\n constructor. For complicated access patterns, or when you prefer to control the internal\n buffer yourself, set <code>autoAdvance</code> to <code>false</code>. When\n <code>autoAdvance</code> is enabled, every time an index is beyond the buffer length,\n the buffer will be shifted forward such that the index requested becomes the first element in\n the buffer.</p>\n\n<p> <p/>\n All public methods with parameter <code>index</code> are absolute indexed. The index is from\n the beginning of the wrapped input stream.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-advanceTo' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.util.InputStreamBuffer'>com.android.bitmap.util.InputStreamBuffer</span><br/><a href='source/InputStreamBuffer.html#com-android-bitmap-util-InputStreamBuffer-method-advanceTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.util.InputStreamBuffer-method-advanceTo' class='name expandable'>advanceTo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to advance the head of the buffer to the requested index. ...</div><div class='long'><p>Attempts to advance the head of the buffer to the requested index. If the index is less\n than the head of the buffer, the internal state will not be changed.</p>\n\n<p> <p/>\n Advancing does not fill the internal buffer. The next <a href=\"#!/api/com.android.bitmap.util.InputStreamBuffer-method-get\" rel=\"com.android.bitmap.util.InputStreamBuffer-method-get\" class=\"docClass\">get</a>(int) or\n <a href=\"#!/api/com.android.bitmap.util.InputStreamBuffer-method-has\" rel=\"com.android.bitmap.util.InputStreamBuffer-method-has\" class=\"docClass\">has</a>(int) call will fill the buffer.</p>\n</div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.util.InputStreamBuffer'>com.android.bitmap.util.InputStreamBuffer</span><br/><a href='source/InputStreamBuffer.html#com-android-bitmap-util-InputStreamBuffer-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.util.InputStreamBuffer-method-get' class='name expandable'>get</a>( <span class='pre'>index</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempt to get byte at the requested index from the wrapped input stream. ...</div><div class='long'><p>Attempt to get byte at the requested index from the wrapped input stream. If the internal\n buffer contains the requested index, return immediately. If the index is less than the\n head of the buffer, or the index is greater or equal to the size of the wrapped input stream,\n a runtime exception is thrown.</p>\n\n<p> <p/>\n If the index is not in the internal buffer, but it can be requested from the input stream,\n fill(int) will be called first, and the byte at the index returned.</p>\n\n<p> <p/>\n You should always call <a href=\"#!/api/com.android.bitmap.util.InputStreamBuffer-method-has\" rel=\"com.android.bitmap.util.InputStreamBuffer-method-has\" class=\"docClass\">has</a>(int) with the same index, unless you are sure that no\n exceptions will be thrown as described above.</p>\n\n<p> <p/>\n Consider calling <a href=\"#!/api/com.android.bitmap.util.InputStreamBuffer-method-advanceTo\" rel=\"com.android.bitmap.util.InputStreamBuffer-method-advanceTo\" class=\"docClass\">advanceTo</a>(int) if you know that you will never request a lesser\n index in the future.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The requested index.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The byte at that index.</p>\n</div></li></ul></div></div></div><div id='method-has' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.util.InputStreamBuffer'>com.android.bitmap.util.InputStreamBuffer</span><br/><a href='source/InputStreamBuffer.html#com-android-bitmap-util-InputStreamBuffer-method-has' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.util.InputStreamBuffer-method-has' class='name expandable'>has</a>( <span class='pre'>index</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempt to return whether the requested index is within the size of the wrapped input\n stream. ...</div><div class='long'><p>Attempt to return whether the requested index is within the size of the wrapped input\n stream. One side effect is fill(int) will be called.</p>\n\n<p> <p/>\n If this method returns true, it is guaranteed that <a href=\"#!/api/com.android.bitmap.util.InputStreamBuffer-method-get\" rel=\"com.android.bitmap.util.InputStreamBuffer-method-get\" class=\"docClass\">get</a>(int) with the same index\n will not fail. That means that if the requested index is within the size of the wrapped\n input stream, but the index is less than the head of the internal buffer,\n a runtime exception is thrown.</p>\n\n<p> <p/>\n See <a href=\"#!/api/com.android.bitmap.util.InputStreamBuffer-method-get\" rel=\"com.android.bitmap.util.InputStreamBuffer-method-get\" class=\"docClass\">get</a>(int) for caveats. A lot of the same warnings about exceptions and\n <code>advanceTo()</code> apply.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The requested index.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if requested index is within the size of the wrapped input stream. False if\n the index is beyond the size.</p>\n</div></li></ul></div></div></div><div id='method-toDebugString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.util.InputStreamBuffer'>com.android.bitmap.util.InputStreamBuffer</span><br/><a href='source/InputStreamBuffer.html#com-android-bitmap-util-InputStreamBuffer-method-toDebugString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.util.InputStreamBuffer-method-toDebugString' class='name expandable'>toDebugString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.bitmap.util.InputStreamBuffer'>com.android.bitmap.util.InputStreamBuffer</span><br/><a href='source/InputStreamBuffer.html#com-android-bitmap-util-InputStreamBuffer-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.bitmap.util.InputStreamBuffer-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});