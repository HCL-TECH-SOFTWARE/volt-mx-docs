Ext.data.JsonP.android_net_sip_SipSession({"tagname":"class","name":"android.net.sip.SipSession","autodetected":{},"files":[{"filename":"SipSession.js","href":"SipSession.html#android-net-sip-SipSession"}],"extends":"java.lang.Object","members":[{"name":"answerCall","tagname":"method","owner":"android.net.sip.SipSession","id":"method-answerCall","meta":{}},{"name":"changeCall","tagname":"method","owner":"android.net.sip.SipSession","id":"method-changeCall","meta":{}},{"name":"endCall","tagname":"method","owner":"android.net.sip.SipSession","id":"method-endCall","meta":{}},{"name":"getCallId","tagname":"method","owner":"android.net.sip.SipSession","id":"method-getCallId","meta":{}},{"name":"getLocalIp","tagname":"method","owner":"android.net.sip.SipSession","id":"method-getLocalIp","meta":{}},{"name":"getLocalProfile","tagname":"method","owner":"android.net.sip.SipSession","id":"method-getLocalProfile","meta":{}},{"name":"getPeerProfile","tagname":"method","owner":"android.net.sip.SipSession","id":"method-getPeerProfile","meta":{}},{"name":"getState","tagname":"method","owner":"android.net.sip.SipSession","id":"method-getState","meta":{}},{"name":"isInCall","tagname":"method","owner":"android.net.sip.SipSession","id":"method-isInCall","meta":{}},{"name":"makeCall","tagname":"method","owner":"android.net.sip.SipSession","id":"method-makeCall","meta":{}},{"name":"register","tagname":"method","owner":"android.net.sip.SipSession","id":"method-register","meta":{}},{"name":"setListener","tagname":"method","owner":"android.net.sip.SipSession","id":"method-setListener","meta":{}},{"name":"unregister","tagname":"method","owner":"android.net.sip.SipSession","id":"method-unregister","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.sip.SipSession","short_doc":"Represents a SIP session that is associated with a SIP dialog or a standalone\n transaction not within a dialog. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.sip.SipSession</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SipSession.html#android-net-sip-SipSession' target='_blank'>SipSession.js</a></div></pre><div class='doc-contents'><p>Represents a SIP session that is associated with a SIP dialog or a standalone\n transaction not within a dialog.\n <p>You can get a <a href=\"#!/api/android.net.sip.SipSession\" rel=\"android.net.sip.SipSession\" class=\"docClass\">android.net.sip.SipSession</a> from <a href=\"#!/api/android.net.sip.SipManager\" rel=\"android.net.sip.SipManager\" class=\"docClass\">android.net.sip.SipManager</a> with <a href=\"#!/api/android.net.sip.SipManager-method-createSipSession\" rel=\"android.net.sip.SipManager-method-createSipSession\" class=\"docClass\">createSipSession()</a> (when initiating calls) or <a href=\"#!/api/android.net.sip.SipManager-method-getSessionFor\" rel=\"android.net.sip.SipManager-method-getSessionFor\" class=\"docClass\">getSessionFor()</a> (when receiving calls).</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-answerCall' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-answerCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-answerCall' class='name expandable'>answerCall</a>( <span class='pre'>sessionDescription, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Answers an incoming call with the specified session description. ...</div><div class='long'><p>Answers an incoming call with the specified session description. The\n method is only valid to call when the session state is in\n <a href=\"#!/api/android.net.sip.SipSession.State-property-INCOMING_CALL\" rel=\"android.net.sip.SipSession.State-property-INCOMING_CALL\" class=\"docClass\">android.net.sip.SipSession.State.INCOMING_CALL</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sessionDescription</span> : String<div class='sub-desc'><p>the session description to answer this call</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>the session will be timed out if the call is not\n        established within {@code timeout} seconds. Default value (defined\n        by SIP protocol) is used if {@code timeout} is zero or negative.</p>\n</div></li></ul></div></div></div><div id='method-changeCall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-changeCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-changeCall' class='name expandable'>changeCall</a>( <span class='pre'>sessionDescription, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Changes the session description during a call. ...</div><div class='long'><p>Changes the session description during a call. The method is only valid\n to call when the session state is in <a href=\"#!/api/android.net.sip.SipSession.State-property-IN_CALL\" rel=\"android.net.sip.SipSession.State-property-IN_CALL\" class=\"docClass\">android.net.sip.SipSession.State.IN_CALL</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sessionDescription</span> : String<div class='sub-desc'><p>the new session description</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>the session will be timed out if the call is not\n        established within {@code timeout} seconds. Default value (defined\n        by SIP protocol) is used if {@code timeout} is zero or negative.</p>\n</div></li></ul></div></div></div><div id='method-endCall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-endCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-endCall' class='name expandable'>endCall</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ends an established call, terminates an outgoing call or rejects an\n incoming call. ...</div><div class='long'><p>Ends an established call, terminates an outgoing call or rejects an\n incoming call. The method is only valid to call when the session state is\n in <a href=\"#!/api/android.net.sip.SipSession.State-property-IN_CALL\" rel=\"android.net.sip.SipSession.State-property-IN_CALL\" class=\"docClass\">android.net.sip.SipSession.State.IN_CALL</a>,\n <a href=\"#!/api/android.net.sip.SipSession.State-property-INCOMING_CALL\" rel=\"android.net.sip.SipSession.State-property-INCOMING_CALL\" class=\"docClass\">android.net.sip.SipSession.State.INCOMING_CALL</a>,\n <a href=\"#!/api/android.net.sip.SipSession.State-property-OUTGOING_CALL\" rel=\"android.net.sip.SipSession.State-property-OUTGOING_CALL\" class=\"docClass\">android.net.sip.SipSession.State.OUTGOING_CALL</a> or\n <a href=\"#!/api/android.net.sip.SipSession.State-property-OUTGOING_CALL_RING_BACK\" rel=\"android.net.sip.SipSession.State-property-OUTGOING_CALL_RING_BACK\" class=\"docClass\">android.net.sip.SipSession.State.OUTGOING_CALL_RING_BACK</a>.</p>\n</div></div></div><div id='method-getCallId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-getCallId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-getCallId' class='name expandable'>getCallId</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the call ID of the session. ...</div><div class='long'><p>Gets the call ID of the session.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the call ID</p>\n</div></li></ul></div></div></div><div id='method-getLocalIp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-getLocalIp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-getLocalIp' class='name expandable'>getLocalIp</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the IP address of the local host on which this SIP session runs. ...</div><div class='long'><p>Gets the IP address of the local host on which this SIP session runs.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the IP address of the local host</p>\n</div></li></ul></div></div></div><div id='method-getLocalProfile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-getLocalProfile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-getLocalProfile' class='name expandable'>getLocalProfile</a>( <span class='pre'></span> ) : Object {android.net.sip.SipProfile}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the SIP profile that this session is associated with. ...</div><div class='long'><p>Gets the SIP profile that this session is associated with.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.sip.SipProfile}</span><div class='sub-desc'><p>the SIP profile that this session is associated with</p>\n</div></li></ul></div></div></div><div id='method-getPeerProfile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-getPeerProfile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-getPeerProfile' class='name expandable'>getPeerProfile</a>( <span class='pre'></span> ) : Object {android.net.sip.SipProfile}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the SIP profile that this session is connected to. ...</div><div class='long'><p>Gets the SIP profile that this session is connected to. Only available\n when the session is associated with a SIP dialog.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.sip.SipProfile}</span><div class='sub-desc'><p>the SIP profile that this session is connected to</p>\n</div></li></ul></div></div></div><div id='method-getState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-getState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-getState' class='name expandable'>getState</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the session state. ...</div><div class='long'><p>Gets the session state. The value returned must be one of the states in\n <a href=\"#!/api/android.net.sip.SipSession.State\" rel=\"android.net.sip.SipSession.State\" class=\"docClass\">android.net.sip.SipSession.State</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the session state</p>\n</div></li></ul></div></div></div><div id='method-isInCall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-isInCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-isInCall' class='name expandable'>isInCall</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the session is in a call. ...</div><div class='long'><p>Checks if the session is in a call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the session is in a call</p>\n</div></li></ul></div></div></div><div id='method-makeCall' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-makeCall' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-makeCall' class='name expandable'>makeCall</a>( <span class='pre'>callee, sessionDescription, timeout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Initiates a call to the specified profile. ...</div><div class='long'><p>Initiates a call to the specified profile. The session listener is called\n back upon defined session events. The method is only valid to call when\n the session state is in <a href=\"#!/api/android.net.sip.SipSession.State-property-READY_TO_CALL\" rel=\"android.net.sip.SipSession.State-property-READY_TO_CALL\" class=\"docClass\">android.net.sip.SipSession.State.READY_TO_CALL</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callee</span> : Object {SipProfile}<div class='sub-desc'><p>the SIP profile to make the call to</p>\n</div></li><li><span class='pre'>sessionDescription</span> : String<div class='sub-desc'><p>the session description of this call</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>the session will be timed out if the call is not\n        established within {@code timeout} seconds. Default value (defined\n        by SIP protocol) is used if {@code timeout} is zero or negative.\n@see Listener</p>\n</div></li></ul></div></div></div><div id='method-register' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-register' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-register' class='name expandable'>register</a>( <span class='pre'>duration</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs registration to the server specified by the associated local\n profile. ...</div><div class='long'><p>Performs registration to the server specified by the associated local\n profile. The session listener is called back upon success or failure of\n registration. The method is only valid to call when the session state is\n in <a href=\"#!/api/android.net.sip.SipSession.State-property-READY_TO_CALL\" rel=\"android.net.sip.SipSession.State-property-READY_TO_CALL\" class=\"docClass\">android.net.sip.SipSession.State.READY_TO_CALL</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>duration</span> : Number<div class='sub-desc'><p>duration in second before the registration expires\n@see Listener</p>\n</div></li></ul></div></div></div><div id='method-setListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-setListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-setListener' class='name expandable'>setListener</a>( <span class='pre'>listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the listener to listen to the session events. ...</div><div class='long'><p>Sets the listener to listen to the session events. A {@code SipSession}\n can only hold one listener at a time. Subsequent calls to this method\n override the previous listener.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {SipSession.Listener}<div class='sub-desc'><p>to listen to the session events of this object</p>\n</div></li></ul></div></div></div><div id='method-unregister' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.sip.SipSession'>android.net.sip.SipSession</span><br/><a href='source/SipSession.html#android-net-sip-SipSession-method-unregister' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.sip.SipSession-method-unregister' class='name expandable'>unregister</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs unregistration to the server specified by the associated local\n profile. ...</div><div class='long'><p>Performs unregistration to the server specified by the associated local\n profile. Unregistration is technically the same as registration with zero\n expiration duration. The session listener is called back upon success or\n failure of unregistration. The method is only valid to call when the\n session state is in <a href=\"#!/api/android.net.sip.SipSession.State-property-READY_TO_CALL\" rel=\"android.net.sip.SipSession.State-property-READY_TO_CALL\" class=\"docClass\">android.net.sip.SipSession.State.READY_TO_CALL</a>.\n@see Listener</p>\n</div></div></div></div></div></div></div>","meta":{}});