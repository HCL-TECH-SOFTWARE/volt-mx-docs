Ext.data.JsonP.com_android_setupwizardlib_template_RequireScrollMixin({"tagname":"class","name":"com.android.setupwizardlib.template.RequireScrollMixin","autodetected":{},"files":[{"filename":"RequireScrollMixin.js","href":"RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin"}],"extends":"java.lang.Object","members":[{"name":"createOnClickListener","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-createOnClickListener","meta":{}},{"name":"getOnRequireScrollStateChangedListener","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-getOnRequireScrollStateChangedListener","meta":{}},{"name":"isScrollingRequired","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-isScrollingRequired","meta":{}},{"name":"requireScroll","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-requireScroll","meta":{}},{"name":"requireScrollWithButton","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-requireScrollWithButton","meta":{}},{"name":"requireScrollWithNavigationBar","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-requireScrollWithNavigationBar","meta":{}},{"name":"setOnRequireScrollStateChangedListener","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-setOnRequireScrollStateChangedListener","meta":{}},{"name":"setScrollHandlingDelegate","tagname":"method","owner":"com.android.setupwizardlib.template.RequireScrollMixin","id":"method-setScrollHandlingDelegate","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.setupwizardlib.template.RequireScrollMixin","short_doc":"implements com.android.setupwizardlib.template.Mixin\n\nA mixin to require the a scrollable container (BottomScrollView...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.setupwizardlib.template.RequireScrollMixin</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin' target='_blank'>RequireScrollMixin.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/com.android.setupwizardlib.template.Mixin\" rel=\"com.android.setupwizardlib.template.Mixin\" class=\"docClass\">com.android.setupwizardlib.template.Mixin</a></p>\n\n<p>A mixin to require the a scrollable container (BottomScrollView, RecyclerView or ListView) to be\n scrolled to bottom, making sure that the user sees all content above and below the fold.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createOnClickListener' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-createOnClickListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-createOnClickListener' class='name expandable'>createOnClickListener</a>( <span class='pre'>listener</span> ) : Object {android.view.View.OnClickListener}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an OnClickListener which if scrolling is required, will scroll the page down,\n and if scrolling is not requir...</div><div class='long'><p>Creates an OnClickListener which if scrolling is required, will scroll the page down,\n and if scrolling is not required, delegates to the wrapped {@code listener}. Note that you\n should call <a href=\"#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-requireScroll\" rel=\"com.android.setupwizardlib.template.RequireScrollMixin-method-requireScroll\" class=\"docClass\">requireScroll</a>() as well in order to start requiring scrolling.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {View.OnClickListener}<div class='sub-desc'><p>The listener to be invoked when scrolling is not needed and the user taps on\n     the button. If {@code null}, the click listener will be a no-op when scroll is not\n     required.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View.OnClickListener}</span><div class='sub-desc'><p>A new OnClickListener which will scroll the page down or delegate to the given\n     listener depending on the current require-scroll state.</p>\n</div></li></ul></div></div></div><div id='method-getOnRequireScrollStateChangedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-getOnRequireScrollStateChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-getOnRequireScrollStateChangedListener' class='name expandable'>getOnRequireScrollStateChangedListener</a>( <span class='pre'></span> ) : Object {com.android.setupwizardlib.template.RequireScrollMixin.OnRequireScrollStateChangedListener}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.setupwizardlib.template.RequireScrollMixin.OnRequireScrollStateChangedListener}</span><div class='sub-desc'><p>The scroll state listener previously set, or {@code null} if none is registered.</p>\n</div></li></ul></div></div></div><div id='method-isScrollingRequired' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-isScrollingRequired' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-isScrollingRequired' class='name expandable'>isScrollingRequired</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if scrolling is required. Note that this mixin only requires the user to scroll to\n     the bottom once - if the user scrolled to the bottom and back-up, scrolling to bottom is\n     not required again.</p>\n</div></li></ul></div></div></div><div id='method-requireScroll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-requireScroll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-requireScroll' class='name expandable'>requireScroll</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Start requiring scrolling on the layout. ...</div><div class='long'><p>Start requiring scrolling on the layout. After calling this method, this mixin will start\n listening to scroll events from the scrolling container, and call <a href=\"#!/api/com.android.setupwizardlib.template.RequireScrollMixin.OnRequireScrollStateChangedListener\" rel=\"com.android.setupwizardlib.template.RequireScrollMixin.OnRequireScrollStateChangedListener\" class=\"docClass\">com.android.setupwizardlib.template.RequireScrollMixin.OnRequireScrollStateChangedListener</a> when the scroll state changes.</p>\n</div></div></div><div id='method-requireScrollWithButton' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-requireScrollWithButton' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-requireScrollWithButton' class='name expandable'>requireScrollWithButton</a>( <span class='pre'>button, moreText, onClickListener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Use the given {@code button} to require scrolling. ...</div><div class='long'><p>Use the given {@code button} to require scrolling. When scrolling is required, the button label\n will change to {@code moreText}, and tapping the button will cause the page to scroll down.</p>\n\n<p> <p>Note: Calling View.setOnClickListener on the button after this method will remove\n its link to the require-scroll mechanism. If you need to do that, obtain the click listener\n from <a href=\"#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-createOnClickListener\" rel=\"com.android.setupwizardlib.template.RequireScrollMixin-method-createOnClickListener\" class=\"docClass\">createOnClickListener</a>(OnClickListener).</p>\n\n<p> <p>Note: The normal button label is taken from the button's text at the time of calling this\n method. Calling android.widget.TextView.setText after calling this method causes\n undefined behavior.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>button</span> : Object {Button}<div class='sub-desc'><p>The button to use for require scroll. The button's \"normal\" label is taken from\n     the text at the time of calling this method, and the click listener of it will be replaced.</p>\n</div></li><li><span class='pre'>moreText</span> : Object {CharSequence}<div class='sub-desc'><p>The button label when scroll is required.</p>\n</div></li><li><span class='pre'>onClickListener</span> : Object {View.OnClickListener}<div class='sub-desc'><p>The listener for clicks when scrolling is not required.</p>\n</div></li></ul></div></div></div><div id='method-requireScrollWithNavigationBar' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-requireScrollWithNavigationBar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-requireScrollWithNavigationBar' class='name expandable'>requireScrollWithNavigationBar</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Coordinate with the given navigation bar to require scrolling on the page. ...</div><div class='long'><p>Coordinate with the given navigation bar to require scrolling on the page. The more button will\n be shown instead of the next button while scrolling is required.</p>\n</div></div></div><div id='method-setOnRequireScrollStateChangedListener' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-setOnRequireScrollStateChangedListener' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-setOnRequireScrollStateChangedListener' class='name expandable'>setOnRequireScrollStateChangedListener</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Listen to require scroll state changes. ...</div><div class='long'><p>Listen to require scroll state changes. When scroll is required, com.android.setupwizardlib.template.RequireScrollMixin.OnRequireScrollStateChangedListener.onRequireScrollStateChanged(boolean) is called with {@code\n true}, and vice versa.</p>\n</div></div></div><div id='method-setScrollHandlingDelegate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.setupwizardlib.template.RequireScrollMixin'>com.android.setupwizardlib.template.RequireScrollMixin</span><br/><a href='source/RequireScrollMixin.html#com-android-setupwizardlib-template-RequireScrollMixin-method-setScrollHandlingDelegate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.setupwizardlib.template.RequireScrollMixin-method-setScrollHandlingDelegate' class='name expandable'>setScrollHandlingDelegate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the delegate to handle scrolling. ...</div><div class='long'><p>Sets the delegate to handle scrolling. The type of delegate should depend on whether the\n scrolling view is a BottomScrollView, RecyclerView or ListView.</p>\n</div></div></div></div></div></div></div>","meta":{}});