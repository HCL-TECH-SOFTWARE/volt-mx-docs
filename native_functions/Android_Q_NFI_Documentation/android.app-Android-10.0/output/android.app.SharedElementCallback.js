Ext.data.JsonP.android_app_SharedElementCallback({"tagname":"class","name":"android.app.SharedElementCallback","autodetected":{},"files":[{"filename":"SharedElementCallback.js","href":"SharedElementCallback.html#android-app-SharedElementCallback"}],"extends":"java.lang.Object","members":[{"name":"onCaptureSharedElementSnapshot","tagname":"method","owner":"android.app.SharedElementCallback","id":"method-onCaptureSharedElementSnapshot","meta":{}},{"name":"onCreateSnapshotView","tagname":"method","owner":"android.app.SharedElementCallback","id":"method-onCreateSnapshotView","meta":{}},{"name":"onMapSharedElements","tagname":"method","owner":"android.app.SharedElementCallback","id":"method-onMapSharedElements","meta":{}},{"name":"onRejectSharedElements","tagname":"method","owner":"android.app.SharedElementCallback","id":"method-onRejectSharedElements","meta":{}},{"name":"onSharedElementEnd","tagname":"method","owner":"android.app.SharedElementCallback","id":"method-onSharedElementEnd","meta":{}},{"name":"onSharedElementStart","tagname":"method","owner":"android.app.SharedElementCallback","id":"method-onSharedElementStart","meta":{}},{"name":"onSharedElementsArrived","tagname":"method","owner":"android.app.SharedElementCallback","id":"method-onSharedElementsArrived","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.SharedElementCallback","short_doc":"Listener provided in\n android.app.Activity.setEnterSharedElementCallback(SharedElementCallback) and\n android.app.Acti...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.SharedElementCallback</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SharedElementCallback.html#android-app-SharedElementCallback' target='_blank'>SharedElementCallback.js</a></div></pre><div class='doc-contents'><p>Listener provided in\n android.app.Activity.setEnterSharedElementCallback(SharedElementCallback) and\n android.app.Activity.setExitSharedElementCallback(SharedElementCallback) as well as\n android.app.Fragment.setEnterSharedElementCallback(SharedElementCallback) and\n android.app.Fragment.setExitSharedElementCallback(SharedElementCallback)\n to monitor the Shared element transitions. The events can be used to customize Activity\n and Fragment Transition behavior.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onCaptureSharedElementSnapshot' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.SharedElementCallback'>android.app.SharedElementCallback</span><br/><a href='source/SharedElementCallback.html#android-app-SharedElementCallback-method-onCaptureSharedElementSnapshot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.SharedElementCallback-method-onCaptureSharedElementSnapshot' class='name expandable'>onCaptureSharedElementSnapshot</a>( <span class='pre'>sharedElement, viewToGlobalMatrix, screenBounds</span> ) : Object {android.os.Parcelable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a snapshot of a shared element to be used by the remote Activity and reconstituted\n with android.os.Parcelable). ...</div><div class='long'><p>Creates a snapshot of a shared element to be used by the remote Activity and reconstituted\n with android.os.Parcelable). A\n null return value will mean that the remote Activity will have a null snapshot View in\n java.util.List, java.util.List) and\n java.util.List, java.util.List).</p>\n\n<p> <p>This is not called for Fragment Transitions.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sharedElement</span> : Object {View}<div class='sub-desc'><p>The shared element View to create a snapshot for.</p>\n</div></li><li><span class='pre'>viewToGlobalMatrix</span> : Object {Matrix}<div class='sub-desc'><p>A matrix containing a transform from the view to the screen\n                           coordinates.</p>\n</div></li><li><span class='pre'>screenBounds</span> : Object {RectF}<div class='sub-desc'><p>The bounds of shared element in screen coordinate space. This is\n                     the bounds of the view with the viewToGlobalMatrix applied.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Parcelable}</span><div class='sub-desc'><p>A snapshot to send to the remote Activity to be reconstituted with\n android.os.Parcelable) and passed\n into java.util.List, java.util.List) and\n java.util.List, java.util.List).</p>\n</div></li></ul></div></div></div><div id='method-onCreateSnapshotView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.SharedElementCallback'>android.app.SharedElementCallback</span><br/><a href='source/SharedElementCallback.html#android-app-SharedElementCallback-method-onCreateSnapshotView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.SharedElementCallback-method-onCreateSnapshotView' class='name expandable'>onCreateSnapshotView</a>( <span class='pre'>context, snapshot</span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Reconstitutes a snapshot View from a Parcelable returned in\n android.graphics.Matrix,\n android.graphics.RectF) to be ...</div><div class='long'><p>Reconstitutes a snapshot View from a Parcelable returned in\n android.graphics.Matrix,\n android.graphics.RectF) to be used in java.util.List, java.util.List) and java.util.List, java.util.List). The returned View will be sized and positioned after\n this call so that it is ready to be added to the decor View's overlay.</p>\n\n<p> <p>This is not called for Fragment Transitions.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The Context used to create the snapshot View.</p>\n</div></li><li><span class='pre'>snapshot</span> : Object {Parcelable}<div class='sub-desc'><p>The Parcelable returned by android.view.View, android.graphics.Matrix, android.graphics.RectF).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>A View to be sent in java.util.List,\n java.util.List) and java.util.List,\n java.util.List). A null value will produce a null snapshot value for those two methods.</p>\n</div></li></ul></div></div></div><div id='method-onMapSharedElements' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.SharedElementCallback'>android.app.SharedElementCallback</span><br/><a href='source/SharedElementCallback.html#android-app-SharedElementCallback-method-onMapSharedElements' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.SharedElementCallback-method-onMapSharedElements' class='name expandable'>onMapSharedElements</a>( <span class='pre'>names, sharedElements</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets the SharedElementCallback adjust the mapping of shared element names to\n Views. ...</div><div class='long'><p>Lets the SharedElementCallback adjust the mapping of shared element names to\n Views.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : Object {java.util.List}<div class='sub-desc'><p>The names of all shared elements transferred from the calling Activity\n              or Fragment in the order they were provided.</p>\n</div></li><li><span class='pre'>sharedElements</span> : Object {java.util.Map}<div class='sub-desc'><p>The mapping of shared element names to Views. The best guess\n                       will be filled into sharedElements based on the transitionNames.</p>\n</div></li></ul></div></div></div><div id='method-onRejectSharedElements' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.SharedElementCallback'>android.app.SharedElementCallback</span><br/><a href='source/SharedElementCallback.html#android-app-SharedElementCallback-method-onRejectSharedElements' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.SharedElementCallback-method-onRejectSharedElements' class='name expandable'>onRejectSharedElements</a>( <span class='pre'>rejectedSharedElements</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called after java.util.Map) when\n transferring shared elements in. ...</div><div class='long'><p>Called after java.util.Map) when\n transferring shared elements in. Any shared elements that have no mapping will be in\n <var>rejectedSharedElements</var>. The elements remaining in\n <var>rejectedSharedElements</var> will be transitioned out of the Scene. If a\n View is removed from <var>rejectedSharedElements</var>, it must be handled by the\n <code>SharedElementCallback</code>.\n <p>\n Views in rejectedSharedElements will have their position and size set to the\n position of the calling shared element, relative to the Window decor View and contain\n snapshots of the View from the calling Activity or Fragment. This\n view may be safely added to the decor View's overlay to remain in position.\n </p>\n <p>This method is not called for Fragment Transitions. All rejected shared elements\n will be handled by the exit transition.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rejectedSharedElements</span> : Object {java.util.List}<div class='sub-desc'><p>Views containing visual information of shared elements\n                               that are not part of the entering scene. These Views\n                               are positioned relative to the Window decor View. A\n                               View removed from this list will not be transitioned\n                               automatically.</p>\n</div></li></ul></div></div></div><div id='method-onSharedElementEnd' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.SharedElementCallback'>android.app.SharedElementCallback</span><br/><a href='source/SharedElementCallback.html#android-app-SharedElementCallback-method-onSharedElementEnd' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.SharedElementCallback-method-onSharedElementEnd' class='name expandable'>onSharedElementEnd</a>( <span class='pre'>sharedElementNames, sharedElements, sharedElementSnapshots</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>In Activity Transitions, onSharedElementEnd is called immediately before\n capturing the end of the shared element sta...</div><div class='long'><p>In Activity Transitions, onSharedElementEnd is called immediately before\n capturing the end of the shared element state on enter and reenter transitions and\n immediately before capturing the start of the shared element state for exit and return\n transitions.\n <p>\n In Fragment Transitions, onSharedElementEnd is called immediately before capturing the\n end state of all shared element transitions.\n <p>\n This call can be used to adjust the transition end state by modifying the shared\n element Views. Note that no layout step will be executed between onSharedElementEnd\n and the transition state capture.\n <p>\n Any changes made in List, List) that are not updated\n during layout should be corrected in onSharedElementEnd. For example, rotation or scale\n will not be affected by layout and if changed in\n List, List), it will also have to be reset in\n onSharedElementEnd again to correct the end state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sharedElementNames</span> : Object {java.util.List}<div class='sub-desc'><p>The names of the shared elements that were accepted into\n                           the View hierarchy.</p>\n</div></li><li><span class='pre'>sharedElements</span> : Object {java.util.List}<div class='sub-desc'><p>The shared elements that are part of the View hierarchy.</p>\n</div></li><li><span class='pre'>sharedElementSnapshots</span> : Object {java.util.List}<div class='sub-desc'><p>The Views containing snap shots of the shared element\n                               from the launching Window. These elements will not\n                               be part of the scene, but will be positioned relative\n                               to the Window decor View. This list will be null for\n                               Fragment Transitions.</p>\n</div></li></ul></div></div></div><div id='method-onSharedElementStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.SharedElementCallback'>android.app.SharedElementCallback</span><br/><a href='source/SharedElementCallback.html#android-app-SharedElementCallback-method-onSharedElementStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.SharedElementCallback-method-onSharedElementStart' class='name expandable'>onSharedElementStart</a>( <span class='pre'>sharedElementNames, sharedElements, sharedElementSnapshots</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>In Activity Transitions, onSharedElementStart is called immediately before\n capturing the start of the shared element...</div><div class='long'><p>In Activity Transitions, onSharedElementStart is called immediately before\n capturing the start of the shared element state on enter and reenter transitions and\n immediately before capturing the end of the shared element state for exit and return\n transitions.\n <p>\n In Fragment Transitions, onSharedElementStart is called immediately before capturing the\n start state of all shared element transitions.\n <p>\n This call can be used to adjust the transition start state by modifying the shared\n element Views. Note that no layout step will be executed between onSharedElementStart\n and the transition state capture.\n <p>\n For Activity Transitions, any changes made in List, List)\n that are not updated during by layout should be corrected in onSharedElementStart for exit and\n return transitions. For example, rotation or scale will not be affected by layout and\n if changed in List, List), it will also have to be reset\n in onSharedElementStart again to correct the end state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sharedElementNames</span> : Object {java.util.List}<div class='sub-desc'><p>The names of the shared elements that were accepted into\n                           the View hierarchy.</p>\n</div></li><li><span class='pre'>sharedElements</span> : Object {java.util.List}<div class='sub-desc'><p>The shared elements that are part of the View hierarchy.</p>\n</div></li><li><span class='pre'>sharedElementSnapshots</span> : Object {java.util.List}<div class='sub-desc'><p>The Views containing snap shots of the shared element\n                               from the launching Window. These elements will not\n                               be part of the scene, but will be positioned relative\n                               to the Window decor View. This list is null for Fragment\n                               Transitions.</p>\n</div></li></ul></div></div></div><div id='method-onSharedElementsArrived' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.SharedElementCallback'>android.app.SharedElementCallback</span><br/><a href='source/SharedElementCallback.html#android-app-SharedElementCallback-method-onSharedElementsArrived' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.SharedElementCallback-method-onSharedElementsArrived' class='name expandable'>onSharedElementsArrived</a>( <span class='pre'>sharedElementNames, sharedElements, listener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called during an Activity Transition when the shared elements have arrived at the\n final location and are ready to be...</div><div class='long'><p>Called during an Activity Transition when the shared elements have arrived at the\n final location and are ready to be transferred. This method is called for both the\n source and destination Activities.\n <p>\n When the shared elements are ready to be transferred,\n android.app.SharedElementCallback.OnSharedElementsReadyListener.onSharedElementsReady()\n must be called to trigger the transfer.\n <p>\n The default behavior is to trigger the transfer immediately.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sharedElementNames</span> : Object {java.util.List}<div class='sub-desc'><p>The names of the shared elements that are being transferred..</p>\n</div></li><li><span class='pre'>sharedElements</span> : Object {java.util.List}<div class='sub-desc'><p>The shared elements that are part of the View hierarchy.</p>\n</div></li><li><span class='pre'>listener</span> : Object {SharedElementCallback.OnSharedElementsReadyListener}<div class='sub-desc'><p>The listener to call when the shared elements are ready to be hidden\n                 in the source Activity or shown in the destination Activity.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});