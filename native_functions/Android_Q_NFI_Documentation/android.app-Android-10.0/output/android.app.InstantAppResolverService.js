Ext.data.JsonP.android_app_InstantAppResolverService({"tagname":"class","name":"android.app.InstantAppResolverService","autodetected":{},"files":[{"filename":"InstantAppResolverService.js","href":"InstantAppResolverService.html#android-app-InstantAppResolverService"}],"extends":"android.app.Service","hide":true,"members":[{"name":"START_CONTINUATION_MASK","tagname":"property","owner":"android.app.Service","id":"property-START_CONTINUATION_MASK","meta":{}},{"name":"START_FLAG_REDELIVERY","tagname":"property","owner":"android.app.Service","id":"property-START_FLAG_REDELIVERY","meta":{}},{"name":"START_FLAG_RETRY","tagname":"property","owner":"android.app.Service","id":"property-START_FLAG_RETRY","meta":{}},{"name":"START_NOT_STICKY","tagname":"property","owner":"android.app.Service","id":"property-START_NOT_STICKY","meta":{}},{"name":"START_REDELIVER_INTENT","tagname":"property","owner":"android.app.Service","id":"property-START_REDELIVER_INTENT","meta":{}},{"name":"START_STICKY","tagname":"property","owner":"android.app.Service","id":"property-START_STICKY","meta":{}},{"name":"START_STICKY_COMPATIBILITY","tagname":"property","owner":"android.app.Service","id":"property-START_STICKY_COMPATIBILITY","meta":{}},{"name":"STOP_FOREGROUND_DETACH","tagname":"property","owner":"android.app.Service","id":"property-STOP_FOREGROUND_DETACH","meta":{}},{"name":"STOP_FOREGROUND_REMOVE","tagname":"property","owner":"android.app.Service","id":"property-STOP_FOREGROUND_REMOVE","meta":{}},{"name":"attachBaseContext","tagname":"method","owner":"android.app.InstantAppResolverService","id":"method-attachBaseContext","meta":{}},{"name":"getApplication","tagname":"method","owner":"android.app.Service","id":"method-getApplication","meta":{}},{"name":"getForegroundServiceType","tagname":"method","owner":"android.app.Service","id":"method-getForegroundServiceType","meta":{}},{"name":"onBind","tagname":"method","owner":"android.app.InstantAppResolverService","id":"method-onBind","meta":{}},{"name":"onConfigurationChanged","tagname":"method","owner":"android.app.Service","id":"method-onConfigurationChanged","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.app.Service","id":"method-onCreate","meta":{}},{"name":"onDestroy","tagname":"method","owner":"android.app.Service","id":"method-onDestroy","meta":{}},{"name":"onGetInstantAppIntentFilter","tagname":"method","owner":"android.app.InstantAppResolverService","id":"method-onGetInstantAppIntentFilter","meta":{}},{"name":"onGetInstantAppResolveInfo","tagname":"method","owner":"android.app.InstantAppResolverService","id":"method-onGetInstantAppResolveInfo","meta":{}},{"name":"onLowMemory","tagname":"method","owner":"android.app.Service","id":"method-onLowMemory","meta":{}},{"name":"onRebind","tagname":"method","owner":"android.app.Service","id":"method-onRebind","meta":{}},{"name":"onStart","tagname":"method","owner":"android.app.Service","id":"method-onStart","meta":{"deprecated":{"text":"<p>Implement int, int) instead.</p>\n"}}},{"name":"onStartCommand","tagname":"method","owner":"android.app.Service","id":"method-onStartCommand","meta":{}},{"name":"onTaskRemoved","tagname":"method","owner":"android.app.Service","id":"method-onTaskRemoved","meta":{}},{"name":"onTrimMemory","tagname":"method","owner":"android.app.Service","id":"method-onTrimMemory","meta":{}},{"name":"onUnbind","tagname":"method","owner":"android.app.Service","id":"method-onUnbind","meta":{}},{"name":"startForeground","tagname":"method","owner":"android.app.Service","id":"method-startForeground","meta":{}},{"name":"stopForeground","tagname":"method","owner":"android.app.Service","id":"method-stopForeground","meta":{}},{"name":"stopSelf","tagname":"method","owner":"android.app.Service","id":"method-stopSelf","meta":{}},{"name":"stopSelfResult","tagname":"method","owner":"android.app.Service","id":"method-stopSelfResult","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.InstantAppResolverService","classIcon":"icon-class","superclasses":["android.content.ContextWrapper","android.app.Service"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.content.ContextWrapper<div class='subclass '><a href='#!/api/android.app.Service' rel='android.app.Service' class='docClass'>android.app.Service</a><div class='subclass '><strong>android.app.InstantAppResolverService</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/InstantAppResolverService.html#android-app-InstantAppResolverService' target='_blank'>InstantAppResolverService.js</a></div></pre><div class='doc-contents'><p>Base class for implementing the resolver service.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-START_CONTINUATION_MASK' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-START_CONTINUATION_MASK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-START_CONTINUATION_MASK' class='name expandable'>START_CONTINUATION_MASK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bits returned by onStartCommand describing how to continue\nthe service if it is killed. ...</div><div class='long'><p>Bits returned by <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a> describing how to continue\nthe service if it is killed.  May be <a href=\"#!/api/android.app.Service-property-START_STICKY\" rel=\"android.app.Service-property-START_STICKY\" class=\"docClass\">START_STICKY</a>,\n<a href=\"#!/api/android.app.Service-property-START_NOT_STICKY\" rel=\"android.app.Service-property-START_NOT_STICKY\" class=\"docClass\">START_NOT_STICKY</a>, <a href=\"#!/api/android.app.Service-property-START_REDELIVER_INTENT\" rel=\"android.app.Service-property-START_REDELIVER_INTENT\" class=\"docClass\">START_REDELIVER_INTENT</a>,\nor <a href=\"#!/api/android.app.Service-property-START_STICKY_COMPATIBILITY\" rel=\"android.app.Service-property-START_STICKY_COMPATIBILITY\" class=\"docClass\">START_STICKY_COMPATIBILITY</a>.</p>\n<p>Defaults to: <code>&quot;15&quot;</code></p></div></div></div><div id='property-START_FLAG_REDELIVERY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-START_FLAG_REDELIVERY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-START_FLAG_REDELIVERY' class='name expandable'>START_FLAG_REDELIVERY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This flag is set in onStartCommand if the Intent is a\nre-delivery of a previously delivered intent, because the servi...</div><div class='long'><p>This flag is set in <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a> if the Intent is a\nre-delivery of a previously delivered intent, because the service\nhad previously returned <a href=\"#!/api/android.app.Service-property-START_REDELIVER_INTENT\" rel=\"android.app.Service-property-START_REDELIVER_INTENT\" class=\"docClass\">START_REDELIVER_INTENT</a> but had been\nkilled before calling <a href=\"#!/api/android.app.Service-method-stopSelf\" rel=\"android.app.Service-method-stopSelf\" class=\"docClass\">stopSelf</a>(int) for that Intent.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-START_FLAG_RETRY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-START_FLAG_RETRY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-START_FLAG_RETRY' class='name expandable'>START_FLAG_RETRY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This flag is set in onStartCommand if the Intent is a\nretry because the original attempt never got to or returned fro...</div><div class='long'><p>This flag is set in <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a> if the Intent is a\nretry because the original attempt never got to or returned from\nint, int).</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-START_NOT_STICKY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-START_NOT_STICKY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-START_NOT_STICKY' class='name expandable'>START_NOT_STICKY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Constant to return from onStartCommand: if this service's\nprocess is killed while it is started (after returning from...</div><div class='long'><p>Constant to return from <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>: if this service's\nprocess is killed while it is started (after returning from\n<a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>), and there are no new start intents to\ndeliver to it, then take the service out of the started state and\ndon't recreate until a future explicit call to\nContext.startService(Intent).  The\nservice will not receive a int, int)\ncall with a null Intent because it will not be restarted if there\nare no pending Intents to deliver.</p>\n\n<p><p>This mode makes sense for things that want to do some work as a\nresult of being started, but can be stopped when under memory pressure\nand will explicit start themselves again later to do more work.  An\nexample of such a service would be one that polls for data from\na server: it could schedule an alarm to poll every N minutes by having\nthe alarm start its service.  When its <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a> is\ncalled from the alarm, it schedules a new alarm for N minutes later,\nand spawns a thread to do its networking.  If its process is killed\nwhile doing that check, the service will not be restarted until the\nalarm goes off.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-START_REDELIVER_INTENT' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-START_REDELIVER_INTENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-START_REDELIVER_INTENT' class='name expandable'>START_REDELIVER_INTENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Constant to return from onStartCommand: if this service's\nprocess is killed while it is started (after returning from...</div><div class='long'><p>Constant to return from <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>: if this service's\nprocess is killed while it is started (after returning from\n<a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>), then it will be scheduled for a restart\nand the last delivered Intent re-delivered to it again via\n<a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>.  This Intent will remain scheduled for\nredelivery until the service calls <a href=\"#!/api/android.app.Service-method-stopSelf\" rel=\"android.app.Service-method-stopSelf\" class=\"docClass\">stopSelf</a>(int) with the\nstart ID provided to <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>.  The\nservice will not receive a int, int)\ncall with a null Intent because it will only be restarted if\nit is not finished processing all Intents sent to it (and any such\npending events will be delivered at the point of restart).</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-START_STICKY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-START_STICKY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-START_STICKY' class='name expandable'>START_STICKY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Constant to return from onStartCommand: if this service's\nprocess is killed while it is started (after returning from...</div><div class='long'><p>Constant to return from <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>: if this service's\nprocess is killed while it is started (after returning from\n<a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>), then leave it in the started state but\ndon't retain this delivered intent.  Later the system will try to\nre-create the service.  Because it is in the started state, it will\nguarantee to call <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a> after creating the new\nservice instance; if there are not any pending start commands to be\ndelivered to the service, it will be called with a null intent\nobject, so you must take care to check for this.</p>\n\n<p><p>This mode makes sense for things that will be explicitly started\nand stopped to run for arbitrary periods of time, such as a service\nperforming background music playback.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-START_STICKY_COMPATIBILITY' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-START_STICKY_COMPATIBILITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-START_STICKY_COMPATIBILITY' class='name expandable'>START_STICKY_COMPATIBILITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Constant to return from onStartCommand: compatibility\nversion of START_STICKY that does not guarantee that\nonStartCom...</div><div class='long'><p>Constant to return from <a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a>: compatibility\nversion of <a href=\"#!/api/android.app.Service-property-START_STICKY\" rel=\"android.app.Service-property-START_STICKY\" class=\"docClass\">START_STICKY</a> that does not guarantee that\n<a href=\"#!/api/android.app.Service-method-onStartCommand\" rel=\"android.app.Service-method-onStartCommand\" class=\"docClass\">onStartCommand</a> will be called again after being killed.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-STOP_FOREGROUND_DETACH' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-STOP_FOREGROUND_DETACH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-STOP_FOREGROUND_DETACH' class='name expandable'>STOP_FOREGROUND_DETACH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for stopForeground(int): if set, the notification previously provided\nto startForeground will be detached from t...</div><div class='long'><p>Flag for <a href=\"#!/api/android.app.Service-method-stopForeground\" rel=\"android.app.Service-method-stopForeground\" class=\"docClass\">stopForeground</a>(int): if set, the notification previously provided\nto <a href=\"#!/api/android.app.Service-method-startForeground\" rel=\"android.app.Service-method-startForeground\" class=\"docClass\">startForeground</a> will be detached from the service.  Only makes sense\nwhen <a href=\"#!/api/android.app.Service-property-STOP_FOREGROUND_REMOVE\" rel=\"android.app.Service-property-STOP_FOREGROUND_REMOVE\" class=\"docClass\">STOP_FOREGROUND_REMOVE</a> is <b>not</b> set -- in this case, the notification\nwill remain shown, but be completely detached from the service and so no longer changed\nexcept through direct calls to the notification manager.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-STOP_FOREGROUND_REMOVE' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-property-STOP_FOREGROUND_REMOVE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-property-STOP_FOREGROUND_REMOVE' class='name expandable'>STOP_FOREGROUND_REMOVE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for stopForeground(int): if set, the notification previously provided\nto startForeground will be removed. ...</div><div class='long'><p>Flag for <a href=\"#!/api/android.app.Service-method-stopForeground\" rel=\"android.app.Service-method-stopForeground\" class=\"docClass\">stopForeground</a>(int): if set, the notification previously provided\nto <a href=\"#!/api/android.app.Service-method-startForeground\" rel=\"android.app.Service-method-startForeground\" class=\"docClass\">startForeground</a> will be removed.  Otherwise it will remain\nuntil a later call (to android.app.Notification) or\n<a href=\"#!/api/android.app.Service-method-stopForeground\" rel=\"android.app.Service-method-stopForeground\" class=\"docClass\">stopForeground</a>(int) removes it, or the service is destroyed.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-attachBaseContext' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.InstantAppResolverService'>android.app.InstantAppResolverService</span><br/><a href='source/InstantAppResolverService.html#android-app-InstantAppResolverService-method-attachBaseContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.InstantAppResolverService-method-attachBaseContext' class='name expandable'>attachBaseContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getApplication' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-getApplication' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-getApplication' class='name expandable'>getApplication</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the application that owns this service. ...</div><div class='long'><p>Return the application that owns this service.</p>\n</div></div></div><div id='method-getForegroundServiceType' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-getForegroundServiceType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-getForegroundServiceType' class='name expandable'>getForegroundServiceType</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>If the service has become a foreground service by calling\n android.app.Notification)\n or android.app.Notification, in...</div><div class='long'><p>If the service has become a foreground service by calling\n android.app.Notification)\n or android.app.Notification, int), <a href=\"#!/api/android.app.Service-method-getForegroundServiceType\" rel=\"android.app.Service-method-getForegroundServiceType\" class=\"docClass\">getForegroundServiceType</a>()\n returns the current foreground service type.</p>\n\n<p> <p>If there is no foregroundServiceType specified\n in manifest, android.app.ServiceInfo.FOREGROUND_SERVICE_TYPE_NONE is returned. </p></p>\n\n<p> <p>If the service is not a foreground service,\n android.app.ServiceInfo.FOREGROUND_SERVICE_TYPE_NONE is returned.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>current foreground service type flags.</p>\n</div></li></ul></div></div></div><div id='method-onBind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.InstantAppResolverService'>android.app.InstantAppResolverService</span><br/><a href='source/InstantAppResolverService.html#android-app-InstantAppResolverService-method-onBind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.InstantAppResolverService-method-onBind' class='name expandable'>onBind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.app.Service-method-onBind\" rel=\"android.app.Service-method-onBind\" class=\"docClass\">android.app.Service.onBind</a></p></div></div></div><div id='method-onConfigurationChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onConfigurationChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onConfigurationChanged' class='name expandable'>onConfigurationChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onCreate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the system when the service is first created. ...</div><div class='long'><p>Called by the system when the service is first created.  Do not call this method directly.</p>\n</div></div></div><div id='method-onDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onDestroy' class='name expandable'>onDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the system to notify a Service that it is no longer used and is being removed. ...</div><div class='long'><p>Called by the system to notify a Service that it is no longer used and is being removed.  The\n service should clean up any resources it holds (threads, registered\n receivers, etc) at this point.  Upon return, there will be no more calls\n in to this Service object and it is effectively dead.  Do not call this method directly.</p>\n</div></div></div><div id='method-onGetInstantAppIntentFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.InstantAppResolverService'>android.app.InstantAppResolverService</span><br/><a href='source/InstantAppResolverService.html#android-app-InstantAppResolverService-method-onGetInstantAppIntentFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.InstantAppResolverService-method-onGetInstantAppIntentFilter' class='name expandable'>onGetInstantAppIntentFilter</a>( <span class='pre'>sanitizedIntent, hostDigestPrefix, userHandle, token, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to retrieve intent filters for potentially matching instant applications. ...</div><div class='long'><p>Called to retrieve intent filters for potentially matching instant applications. Unlike\n int[], UserHandle, String,\n android.app.InstantAppResolverService.InstantAppResolutionCallback), the response may take as long as necessary to respond. All\n InstantAppResolveInfos provided in response to this method must be completely\n populated.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sanitizedIntent</span> : Object {Intent}<div class='sub-desc'><p>The sanitized Intent used for resolution.</p>\n</div></li><li><span class='pre'>hostDigestPrefix</span> : Object {int[]}<div class='sub-desc'><p>The hash prefix of the instant app's domain or null if no host is\n                         defined.</p>\n</div></li><li><span class='pre'>userHandle</span> : Object {UserHandle}<div class='sub-desc'><p>The user for which to resolve the instant app.</p>\n</div></li><li><span class='pre'>token</span> : String<div class='sub-desc'><p>A unique identifier that was provided in Intent, int[], UserHandle, String, InstantAppResolutionCallback) and provided\n              to the currently visible installer via Intent.EXTRA_INSTANT_APP_TOKEN.</p>\n</div></li><li><span class='pre'>callback</span> : Object {InstantAppResolverService.InstantAppResolutionCallback}<div class='sub-desc'><p>The InstantAppResolutionCallback to provide results to.</p>\n</div></li></ul></div></div></div><div id='method-onGetInstantAppResolveInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.InstantAppResolverService'>android.app.InstantAppResolverService</span><br/><a href='source/InstantAppResolverService.html#android-app-InstantAppResolverService-method-onGetInstantAppResolveInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.InstantAppResolverService-method-onGetInstantAppResolveInfo' class='name expandable'>onGetInstantAppResolveInfo</a>( <span class='pre'>sanitizedIntent, hostDigestPrefix, userHandle, token, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to retrieve resolve info for instant applications immediately. ...</div><div class='long'><p>Called to retrieve resolve info for instant applications immediately. The response will be\n ignored if not provided within a reasonable time. InstantAppResolveInfos provided\n in response to this method may be partial to request a second phase of resolution which will\n result in a subsequent call to int[], UserHandle,\n String, android.app.InstantAppResolverService.InstantAppResolutionCallback)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sanitizedIntent</span> : Object {Intent}<div class='sub-desc'><p>The sanitized Intent used for resolution. A sanitized Intent\n                        is an intent with potential PII removed from the original intent.\n                        Fields removed include extras and the host + path of the data, if\n                        defined.</p>\n</div></li><li><span class='pre'>hostDigestPrefix</span> : Object {int[]}<div class='sub-desc'><p>The hash prefix of the instant app's domain.</p>\n</div></li><li><span class='pre'>userHandle</span> : Object {UserHandle}<div class='sub-desc'><p>The user for which to resolve the instant app.</p>\n</div></li><li><span class='pre'>token</span> : String<div class='sub-desc'><p>A unique identifier that will be provided in calls to int[], UserHandle, String,\n              InstantAppResolutionCallback) and provided to the installer via Intent.EXTRA_INSTANT_APP_TOKEN to tie a single launch together.</p>\n</div></li><li><span class='pre'>callback</span> : Object {InstantAppResolverService.InstantAppResolutionCallback}<div class='sub-desc'><p>The InstantAppResolutionCallback to provide results to.\n@see InstantAppResolveInfo</p>\n</div></li></ul></div></div></div><div id='method-onLowMemory' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onLowMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onLowMemory' class='name expandable'>onLowMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onRebind' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onRebind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onRebind' class='name expandable'>onRebind</a>( <span class='pre'>intent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when new clients have connected to the service, after it had\n previously been notified that all had disconnect...</div><div class='long'><p>Called when new clients have connected to the service, after it had\n previously been notified that all had disconnected in its\n <a href=\"#!/api/android.app.Service-method-onUnbind\" rel=\"android.app.Service-method-onUnbind\" class=\"docClass\">onUnbind</a>.  This will only be called if the implementation\n of <a href=\"#!/api/android.app.Service-method-onUnbind\" rel=\"android.app.Service-method-onUnbind\" class=\"docClass\">onUnbind</a> was overridden to return true.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent that was used to bind to this service,\n as given to Context.bindService.  Note that any extras that were included with\n the Intent at that point will <em>not</em> be seen here.</p>\n</div></li></ul></div></div></div><div id='method-onStart' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onStart' class='name expandable'>onStart</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Implement int, int) instead.</p>\n\n        </div>\n</div></div></div><div id='method-onStartCommand' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onStartCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onStartCommand' class='name expandable'>onStartCommand</a>( <span class='pre'>intent, flags, startId</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the system every time a client explicitly starts the service by calling\n android.content.Context.startServi...</div><div class='long'><p>Called by the system every time a client explicitly starts the service by calling\n android.content.Context.startService, providing the arguments it supplied and a\n unique integer token representing the start request.  Do not call this method directly.</p>\n\n<p> <p>For backwards compatibility, the default implementation calls\n <a href=\"#!/api/android.app.Service-method-onStart\" rel=\"android.app.Service-method-onStart\" class=\"docClass\">onStart</a> and returns either <a href=\"#!/api/android.app.Service-property-START_STICKY\" rel=\"android.app.Service-property-START_STICKY\" class=\"docClass\">START_STICKY</a>\n or <a href=\"#!/api/android.app.Service-property-START_STICKY_COMPATIBILITY\" rel=\"android.app.Service-property-START_STICKY_COMPATIBILITY\" class=\"docClass\">START_STICKY_COMPATIBILITY</a>.</p>\n\n<p> <p class=\"caution\">Note that the system calls this on your\n service's main thread.  A service's main thread is the same\n thread where UI operations take place for Activities running in the\n same process.  You should always avoid stalling the main\n thread's event loop.  When doing long-running operations,\n network calls, or heavy disk I/O, you should kick off a new\n thread, or use android.os.AsyncTask.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent supplied to android.content.Context.startService,\n as given.  This may be null if the service is being restarted after\n its process has gone away, and it had previously returned anything\n except <a href=\"#!/api/android.app.Service-property-START_STICKY_COMPATIBILITY\" rel=\"android.app.Service-property-START_STICKY_COMPATIBILITY\" class=\"docClass\">START_STICKY_COMPATIBILITY</a>.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Additional data about this start request.</p>\n</div></li><li><span class='pre'>startId</span> : Number<div class='sub-desc'><p>A unique integer representing this specific request to\n start.  Use with stopSelfResult(int).</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The return value indicates what semantics the system should\n use for the service's current started state.  It may be one of the\n constants associated with the <a href=\"#!/api/android.app.Service-property-START_CONTINUATION_MASK\" rel=\"android.app.Service-property-START_CONTINUATION_MASK\" class=\"docClass\">START_CONTINUATION_MASK</a> bits.\n@see <a href=\"#!/api/android.app.Service-method-stopSelfResult\" rel=\"android.app.Service-method-stopSelfResult\" class=\"docClass\">stopSelfResult</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-onTaskRemoved' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onTaskRemoved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onTaskRemoved' class='name expandable'>onTaskRemoved</a>( <span class='pre'>rootIntent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called if the service is currently running and the user has\n removed a task that comes from the service's app...</div><div class='long'><p>This is called if the service is currently running and the user has\n removed a task that comes from the service's application.  If you have\n set android.app.ServiceInfo.FLAG_STOP_WITH_TASK\n then you will not receive this callback; instead, the service will simply\n be stopped.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rootIntent</span> : Object {Intent}<div class='sub-desc'><p>The original root Intent that was used to launch\n the task that is being removed.</p>\n</div></li></ul></div></div></div><div id='method-onTrimMemory' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onTrimMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onTrimMemory' class='name expandable'>onTrimMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onUnbind' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-onUnbind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-onUnbind' class='name expandable'>onUnbind</a>( <span class='pre'>intent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when all clients have disconnected from a particular interface\n published by the service. ...</div><div class='long'><p>Called when all clients have disconnected from a particular interface\n published by the service.  The default implementation does nothing and\n returns false.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent that was used to bind to this service,\n as given to Context.bindService.  Note that any extras that were included with\n the Intent at that point will <em>not</em> be seen here.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Return true if you would like to have the service's\n <a href=\"#!/api/android.app.Service-method-onRebind\" rel=\"android.app.Service-method-onRebind\" class=\"docClass\">onRebind</a> method later called when new clients bind to it.</p>\n</div></li></ul></div></div></div><div id='method-startForeground' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-startForeground' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-startForeground' class='name expandable'>startForeground</a>( <span class='pre'>id, notification, foregroundServiceType</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>An overloaded version of android.app.Notification) with additional\n foregroundServiceType parameter. ...</div><div class='long'><p>An overloaded version of android.app.Notification) with additional\n foregroundServiceType parameter.</p>\n\n<p> <p>Apps built with SDK version android.os.Build.VERSION_CODES.Q or later can specify\n the foreground service types using attribute android.R.attr.foregroundServiceType in\n service element of manifest file. The value of attribute\n android.R.attr.foregroundServiceType can be multiple flags ORed together.</p></p>\n\n<p> <p>The foregroundServiceType parameter must be a subset flags of what is specified in manifest\n attribute android.R.attr.foregroundServiceType, if not, an IllegalArgumentException is\n thrown. Specify foregroundServiceType parameter as\n android.content.pm.ServiceInfo.FOREGROUND_SERVICE_TYPE_MANIFEST to use all flags that\n is specified in manifest attribute foregroundServiceType.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The identifier for this notification as per\n Notification)\n NotificationManager.notify(int, Notification); must not be 0.</p>\n</div></li><li><span class='pre'>notification</span> : Object {Notification}<div class='sub-desc'><p>The Notification to be displayed.</p>\n</div></li><li><span class='pre'>foregroundServiceType</span> : Number<div class='sub-desc'><p>must be a subset flags of manifest attribute\n android.R.attr.foregroundServiceType flags.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if param foregroundServiceType is not subset of manifest\n     attribute android.R.attr.foregroundServiceType.\n@see android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MANIFEST</p>\n</div></li></ul></div></div></div><div id='method-stopForeground' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-stopForeground' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-stopForeground' class='name expandable'>stopForeground</a>( <span class='pre'>flags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove this service from foreground state, allowing it to be killed if\n more memory is needed. ...</div><div class='long'><p>Remove this service from foreground state, allowing it to be killed if\n more memory is needed.  This does not stop the service from running (for that\n you use <a href=\"#!/api/android.app.Service-method-stopSelf\" rel=\"android.app.Service-method-stopSelf\" class=\"docClass\">stopSelf</a>() or related methods), just takes it out of the\n foreground state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>additional behavior options.\n@see <a href=\"#!/api/android.app.Service-method-startForeground\" rel=\"android.app.Service-method-startForeground\" class=\"docClass\">startForeground</a>(int, Notification)</p>\n</div></li></ul></div></div></div><div id='method-stopSelf' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-stopSelf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-stopSelf' class='name expandable'>stopSelf</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Old version of stopSelfResult that doesn't return a result. ...</div><div class='long'><p>Old version of <a href=\"#!/api/android.app.Service-method-stopSelfResult\" rel=\"android.app.Service-method-stopSelfResult\" class=\"docClass\">stopSelfResult</a> that doesn't return a result.\n@see <a href=\"#!/api/android.app.Service-method-stopSelfResult\" rel=\"android.app.Service-method-stopSelfResult\" class=\"docClass\">stopSelfResult</a></p>\n</div></div></div><div id='method-stopSelfResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Service' rel='android.app.Service' class='defined-in docClass'>android.app.Service</a><br/><a href='source/Service.html#android-app-Service-method-stopSelfResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Service-method-stopSelfResult' class='name expandable'>stopSelfResult</a>( <span class='pre'>startId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop the service if the most recent time it was started was\n startId. ...</div><div class='long'><p>Stop the service if the most recent time it was started was\n <var>startId</var>.  This is the same as calling android.content.Context.stopService for this particular service but allows you to\n safely avoid stopping if there is a start request from a client that you\n haven't yet seen in <a href=\"#!/api/android.app.Service-method-onStart\" rel=\"android.app.Service-method-onStart\" class=\"docClass\">onStart</a>.</p>\n\n<p> <p><em>Be careful about ordering of your calls to this function.</em>.\n If you call this function with the most-recently received ID before\n you have called it for previously received IDs, the service will be\n immediately stopped anyway.  If you may end up processing IDs out\n of order (such as by dispatching them on separate threads), then you\n are responsible for stopping them in the same order you received them.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startId</span> : Number<div class='sub-desc'><p>The most recent start identifier received in <a href=\"#!/api/android.app.Service-method-onStart\" rel=\"android.app.Service-method-onStart\" class=\"docClass\">onStart</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if the startId matches the last start request\n and the service will be stopped, else false.\n@see <a href=\"#!/api/android.app.Service-method-stopSelf\" rel=\"android.app.Service-method-stopSelf\" class=\"docClass\">stopSelf</a>()</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});