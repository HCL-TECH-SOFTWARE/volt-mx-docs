Ext.data.JsonP.android_app_WallpaperManager({"tagname":"class","name":"android.app.WallpaperManager","autodetected":{},"files":[{"filename":"WallpaperManager.js","href":"WallpaperManager.html#android-app-WallpaperManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_CHANGE_LIVE_WALLPAPER","tagname":"property","owner":"android.app.WallpaperManager","id":"property-ACTION_CHANGE_LIVE_WALLPAPER","meta":{}},{"name":"ACTION_CROP_AND_SET_WALLPAPER","tagname":"property","owner":"android.app.WallpaperManager","id":"property-ACTION_CROP_AND_SET_WALLPAPER","meta":{}},{"name":"ACTION_LIVE_WALLPAPER_CHOOSER","tagname":"property","owner":"android.app.WallpaperManager","id":"property-ACTION_LIVE_WALLPAPER_CHOOSER","meta":{}},{"name":"COMMAND_DROP","tagname":"property","owner":"android.app.WallpaperManager","id":"property-COMMAND_DROP","meta":{}},{"name":"COMMAND_SECONDARY_TAP","tagname":"property","owner":"android.app.WallpaperManager","id":"property-COMMAND_SECONDARY_TAP","meta":{}},{"name":"COMMAND_TAP","tagname":"property","owner":"android.app.WallpaperManager","id":"property-COMMAND_TAP","meta":{}},{"name":"EXTRA_LIVE_WALLPAPER_COMPONENT","tagname":"property","owner":"android.app.WallpaperManager","id":"property-EXTRA_LIVE_WALLPAPER_COMPONENT","meta":{}},{"name":"FLAG_LOCK","tagname":"property","owner":"android.app.WallpaperManager","id":"property-FLAG_LOCK","meta":{}},{"name":"FLAG_SYSTEM","tagname":"property","owner":"android.app.WallpaperManager","id":"property-FLAG_SYSTEM","meta":{}},{"name":"WALLPAPER_PREVIEW_META_DATA","tagname":"property","owner":"android.app.WallpaperManager","id":"property-WALLPAPER_PREVIEW_META_DATA","meta":{}},{"name":"clear","tagname":"method","owner":"android.app.WallpaperManager","id":"method-clear","meta":{}},{"name":"clearWallpaperOffsets","tagname":"method","owner":"android.app.WallpaperManager","id":"method-clearWallpaperOffsets","meta":{}},{"name":"forgetLoadedWallpaper","tagname":"method","owner":"android.app.WallpaperManager","id":"method-forgetLoadedWallpaper","meta":{}},{"name":"getBuiltInDrawable","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getBuiltInDrawable","meta":{}},{"name":"getCropAndSetWallpaperIntent","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getCropAndSetWallpaperIntent","meta":{}},{"name":"getDesiredMinimumHeight","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getDesiredMinimumHeight","meta":{}},{"name":"getDesiredMinimumWidth","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getDesiredMinimumWidth","meta":{}},{"name":"getDrawable","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getDrawable","meta":{}},{"name":"getFastDrawable","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getFastDrawable","meta":{}},{"name":"getInstance","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getInstance","meta":{}},{"name":"getWallpaperId","tagname":"method","owner":"android.app.WallpaperManager","id":"method-getWallpaperId","meta":{}},{"name":"hasResourceWallpaper","tagname":"method","owner":"android.app.WallpaperManager","id":"method-hasResourceWallpaper","meta":{}},{"name":"isSetWallpaperAllowed","tagname":"method","owner":"android.app.WallpaperManager","id":"method-isSetWallpaperAllowed","meta":{}},{"name":"isWallpaperSupported","tagname":"method","owner":"android.app.WallpaperManager","id":"method-isWallpaperSupported","meta":{}},{"name":"peekDrawable","tagname":"method","owner":"android.app.WallpaperManager","id":"method-peekDrawable","meta":{}},{"name":"peekFastDrawable","tagname":"method","owner":"android.app.WallpaperManager","id":"method-peekFastDrawable","meta":{}},{"name":"sendWallpaperCommand","tagname":"method","owner":"android.app.WallpaperManager","id":"method-sendWallpaperCommand","meta":{}},{"name":"setDisplayPadding","tagname":"method","owner":"android.app.WallpaperManager","id":"method-setDisplayPadding","meta":{}},{"name":"setResource","tagname":"method","owner":"android.app.WallpaperManager","id":"method-setResource","meta":{}},{"name":"setStream","tagname":"method","owner":"android.app.WallpaperManager","id":"method-setStream","meta":{}},{"name":"setWallpaperOffsetSteps","tagname":"method","owner":"android.app.WallpaperManager","id":"method-setWallpaperOffsetSteps","meta":{}},{"name":"setWallpaperOffsets","tagname":"method","owner":"android.app.WallpaperManager","id":"method-setWallpaperOffsets","meta":{}},{"name":"suggestDesiredDimensions","tagname":"method","owner":"android.app.WallpaperManager","id":"method-suggestDesiredDimensions","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.WallpaperManager","short_doc":"Provides access to the system wallpaper. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.WallpaperManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WallpaperManager.html#android-app-WallpaperManager' target='_blank'>WallpaperManager.js</a></div></pre><div class='doc-contents'><p>Provides access to the system wallpaper. With WallpaperManager, you can\n get the current wallpaper, get the desired dimensions for the wallpaper, set\n the wallpaper, and more.</p>\n\n<p> <p> An app can check whether wallpapers are supported for the current user, by calling\n <a href=\"#!/api/android.app.WallpaperManager-method-isWallpaperSupported\" rel=\"android.app.WallpaperManager-method-isWallpaperSupported\" class=\"docClass\">isWallpaperSupported</a>(), and whether setting of wallpapers is allowed, by calling\n <a href=\"#!/api/android.app.WallpaperManager-method-isSetWallpaperAllowed\" rel=\"android.app.WallpaperManager-method-isSetWallpaperAllowed\" class=\"docClass\">isSetWallpaperAllowed</a>().</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_CHANGE_LIVE_WALLPAPER' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-ACTION_CHANGE_LIVE_WALLPAPER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-ACTION_CHANGE_LIVE_WALLPAPER' class='name expandable'>ACTION_CHANGE_LIVE_WALLPAPER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Directly launch live wallpaper preview, allowing the user to immediately\nconfirm to switch to a specific live wallpaper. ...</div><div class='long'><p>Directly launch live wallpaper preview, allowing the user to immediately\nconfirm to switch to a specific live wallpaper.  You must specify\n<a href=\"#!/api/android.app.WallpaperManager-property-EXTRA_LIVE_WALLPAPER_COMPONENT\" rel=\"android.app.WallpaperManager-property-EXTRA_LIVE_WALLPAPER_COMPONENT\" class=\"docClass\">EXTRA_LIVE_WALLPAPER_COMPONENT</a> with the ComponentName of\na live wallpaper component that is to be shown.</p>\n<p>Defaults to: <code>&quot;android.service.wallpaper.CHANGE_LIVE_WALLPAPER&quot;</code></p></div></div></div><div id='property-ACTION_CROP_AND_SET_WALLPAPER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-ACTION_CROP_AND_SET_WALLPAPER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-ACTION_CROP_AND_SET_WALLPAPER' class='name expandable'>ACTION_CROP_AND_SET_WALLPAPER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: Show settings for choosing wallpaper. ...</div><div class='long'><p>Activity Action: Show settings for choosing wallpaper. Do not use directly to construct\nan intent; instead, use <a href=\"#!/api/android.app.WallpaperManager-method-getCropAndSetWallpaperIntent\" rel=\"android.app.WallpaperManager-method-getCropAndSetWallpaperIntent\" class=\"docClass\">getCropAndSetWallpaperIntent</a>.</p>\n\n<p><p>Input:  Intent.getData is the URI of the image to crop and set as wallpaper.\n<p>Output: RESULT_OK if user decided to crop/set the wallpaper, RESULT_CANCEL otherwise\nActivities that support this intent should specify a MIME filter of \"image/*\"</p>\n<p>Defaults to: <code>&quot;android.service.wallpaper.CROP_AND_SET_WALLPAPER&quot;</code></p></div></div></div><div id='property-ACTION_LIVE_WALLPAPER_CHOOSER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-ACTION_LIVE_WALLPAPER_CHOOSER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-ACTION_LIVE_WALLPAPER_CHOOSER' class='name expandable'>ACTION_LIVE_WALLPAPER_CHOOSER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Launch an activity for the user to pick the current global live\nwallpaper. ...</div><div class='long'><p>Launch an activity for the user to pick the current global live\nwallpaper.</p>\n<p>Defaults to: <code>&quot;android.service.wallpaper.LIVE_WALLPAPER_CHOOSER&quot;</code></p></div></div></div><div id='property-COMMAND_DROP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-COMMAND_DROP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-COMMAND_DROP' class='name expandable'>COMMAND_DROP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Command for sendWallpaperCommand: reported by the wallpaper\nhost when the user drops an object into an area of the host. ...</div><div class='long'><p>Command for <a href=\"#!/api/android.app.WallpaperManager-method-sendWallpaperCommand\" rel=\"android.app.WallpaperManager-method-sendWallpaperCommand\" class=\"docClass\">sendWallpaperCommand</a>: reported by the wallpaper\nhost when the user drops an object into an area of the host.  The x\nand y arguments are the location of the drop.</p>\n<p>Defaults to: <code>&quot;android.home.drop&quot;</code></p></div></div></div><div id='property-COMMAND_SECONDARY_TAP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-COMMAND_SECONDARY_TAP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-COMMAND_SECONDARY_TAP' class='name expandable'>COMMAND_SECONDARY_TAP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Command for sendWallpaperCommand: reported by the wallpaper\nhost when the user releases a secondary pointer on an emp...</div><div class='long'><p>Command for <a href=\"#!/api/android.app.WallpaperManager-method-sendWallpaperCommand\" rel=\"android.app.WallpaperManager-method-sendWallpaperCommand\" class=\"docClass\">sendWallpaperCommand</a>: reported by the wallpaper\nhost when the user releases a secondary pointer on an empty area\n(not performing an action in the host).  The x and y arguments are\nthe location of the secondary tap in screen coordinates.</p>\n<p>Defaults to: <code>&quot;android.wallpaper.secondaryTap&quot;</code></p></div></div></div><div id='property-COMMAND_TAP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-COMMAND_TAP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-COMMAND_TAP' class='name expandable'>COMMAND_TAP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Command for sendWallpaperCommand: reported by the wallpaper\nhost when the user taps on an empty area (not performing ...</div><div class='long'><p>Command for <a href=\"#!/api/android.app.WallpaperManager-method-sendWallpaperCommand\" rel=\"android.app.WallpaperManager-method-sendWallpaperCommand\" class=\"docClass\">sendWallpaperCommand</a>: reported by the wallpaper\nhost when the user taps on an empty area (not performing an action\nin the host).  The x and y arguments are the location of the tap in\nscreen coordinates.</p>\n<p>Defaults to: <code>&quot;android.wallpaper.tap&quot;</code></p></div></div></div><div id='property-EXTRA_LIVE_WALLPAPER_COMPONENT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-EXTRA_LIVE_WALLPAPER_COMPONENT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-EXTRA_LIVE_WALLPAPER_COMPONENT' class='name expandable'>EXTRA_LIVE_WALLPAPER_COMPONENT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra in ACTION_CHANGE_LIVE_WALLPAPER that specifies the\nComponentName of a live wallpaper that should be shown as a ...</div><div class='long'><p>Extra in <a href=\"#!/api/android.app.WallpaperManager-property-ACTION_CHANGE_LIVE_WALLPAPER\" rel=\"android.app.WallpaperManager-property-ACTION_CHANGE_LIVE_WALLPAPER\" class=\"docClass\">ACTION_CHANGE_LIVE_WALLPAPER</a> that specifies the\nComponentName of a live wallpaper that should be shown as a preview,\nfor the user to confirm.</p>\n<p>Defaults to: <code>&quot;android.service.wallpaper.extra.LIVE_WALLPAPER_COMPONENT&quot;</code></p></div></div></div><div id='property-FLAG_LOCK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-FLAG_LOCK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-FLAG_LOCK' class='name expandable'>FLAG_LOCK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag: set or retrieve the lock-screen-specific wallpaper. ...</div><div class='long'><p>Flag: set or retrieve the lock-screen-specific wallpaper.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-FLAG_SYSTEM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-FLAG_SYSTEM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-FLAG_SYSTEM' class='name expandable'>FLAG_SYSTEM</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag: set or retrieve the general system wallpaper. ...</div><div class='long'><p>Flag: set or retrieve the general system wallpaper.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-WALLPAPER_PREVIEW_META_DATA' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-property-WALLPAPER_PREVIEW_META_DATA' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-property-WALLPAPER_PREVIEW_META_DATA' class='name expandable'>WALLPAPER_PREVIEW_META_DATA</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Manifest entry for activities that respond to Intent.ACTION_SET_WALLPAPER\nwhich allows them to provide a custom large...</div><div class='long'><p>Manifest entry for activities that respond to Intent.ACTION_SET_WALLPAPER\nwhich allows them to provide a custom large icon associated with this action.</p>\n<p>Defaults to: <code>&quot;android.wallpaper.preview&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-clear' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-clear' class='name expandable'>clear</a>( <span class='pre'>which</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove one or more currently set wallpapers, reverting to the system default\n display for each one. ...</div><div class='long'><p>Remove one or more currently set wallpapers, reverting to the system default\n display for each one.  If <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_SYSTEM\" rel=\"android.app.WallpaperManager-property-FLAG_SYSTEM\" class=\"docClass\">FLAG_SYSTEM</a> is set in the {@code which}\n parameter, the intent Intent.ACTION_WALLPAPER_CHANGED will be broadcast\n upon success.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>which</span> : Number<div class='sub-desc'><p>A bitwise combination of <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_SYSTEM\" rel=\"android.app.WallpaperManager-property-FLAG_SYSTEM\" class=\"docClass\">FLAG_SYSTEM</a> or\n   <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_LOCK\" rel=\"android.app.WallpaperManager-property-FLAG_LOCK\" class=\"docClass\">FLAG_LOCK</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException If an error occurs reverting to the built-in wallpaper.</p>\n</div></li></ul></div></div></div><div id='method-clearWallpaperOffsets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-clearWallpaperOffsets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-clearWallpaperOffsets' class='name expandable'>clearWallpaperOffsets</a>( <span class='pre'>windowToken</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clear the offsets previously associated with this window through\n float, float). ...</div><div class='long'><p>Clear the offsets previously associated with this window through\n float, float).  This reverts\n the window to its default state, where it does not cause the wallpaper\n to scroll from whatever its last offsets were.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>windowToken</span> : Object {IBinder}<div class='sub-desc'><p>The window who these offsets should be associated\n with, as returned by View.getWindowToken().</p>\n</div></li></ul></div></div></div><div id='method-forgetLoadedWallpaper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-forgetLoadedWallpaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-forgetLoadedWallpaper' class='name expandable'>forgetLoadedWallpaper</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove all internal references to the last loaded wallpaper. ...</div><div class='long'><p>Remove all internal references to the last loaded wallpaper.  Useful\n for apps that want to reduce memory usage when they only temporarily\n need to have the wallpaper.  After calling, the next request for the\n wallpaper will require reloading it again from disk.</p>\n</div></div></div><div id='method-getBuiltInDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getBuiltInDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getBuiltInDrawable' class='name expandable'>getBuiltInDrawable</a>( <span class='pre'>outWidth, outWidth, scaleToFit, horizontalAlignment, verticalAlignment, which</span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a drawable for the built-in static wallpaper of the specified type. ...</div><div class='long'><p>Returns a drawable for the built-in static wallpaper of the specified type.  Based on the\n parameters, the drawable can be cropped and scaled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outWidth</span> : Number<div class='sub-desc'><p>The width of the returned drawable</p>\n</div></li><li><span class='pre'>outWidth</span> : Number<div class='sub-desc'><p>The height of the returned drawable</p>\n</div></li><li><span class='pre'>scaleToFit</span> : Boolean<div class='sub-desc'><p>If true, scale the wallpaper down rather than just cropping it</p>\n</div></li><li><span class='pre'>horizontalAlignment</span> : Number<div class='sub-desc'><p>A float value between 0 and 1 specifying where to crop the image;\n        0 for left-aligned, 0.5 for horizontal center-aligned, and 1 for right-aligned</p>\n</div></li><li><span class='pre'>verticalAlignment</span> : Number<div class='sub-desc'><p>A float value between 0 and 1 specifying where to crop the image;\n        0 for top-aligned, 0.5 for vertical center-aligned, and 1 for bottom-aligned</p>\n</div></li><li><span class='pre'>which</span> : Number<div class='sub-desc'><p>The {@code FLAG_*} identifier of a valid wallpaper type.  Throws\n     IllegalArgumentException if an invalid wallpaper is requested.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>A Drawable presenting the built-in default wallpaper image of the given type,\n        or {@code null} if no default image of that type is defined on this device.</p>\n</div></li></ul></div></div></div><div id='method-getCropAndSetWallpaperIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getCropAndSetWallpaperIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getCropAndSetWallpaperIntent' class='name expandable'>getCropAndSetWallpaperIntent</a>( <span class='pre'>imageUri</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets an Intent that will launch an activity that crops the given\n image and sets the device's wallpaper. ...</div><div class='long'><p>Gets an Intent that will launch an activity that crops the given\n image and sets the device's wallpaper. If there is a default HOME activity\n that supports cropping wallpapers, it will be preferred as the default.\n Use this method instead of directly creating a <a href=\"#!/api/android.app.WallpaperManager-property-ACTION_CROP_AND_SET_WALLPAPER\" rel=\"android.app.WallpaperManager-property-ACTION_CROP_AND_SET_WALLPAPER\" class=\"docClass\">ACTION_CROP_AND_SET_WALLPAPER</a>\n intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>imageUri</span> : Object {Uri}<div class='sub-desc'><p>The image URI that will be set in the intent. The must be a content\n                 URI and its provider must resolve its type to \"image/*\"</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the URI is not a content URI or its MIME type is\n         not \"image/*\"</p>\n</div></li></ul></div></div></div><div id='method-getDesiredMinimumHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getDesiredMinimumHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getDesiredMinimumHeight' class='name expandable'>getDesiredMinimumHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the desired minimum height for the wallpaper. ...</div><div class='long'><p>Returns the desired minimum height for the wallpaper. Callers of\n setBitmap(android.graphics.Bitmap) or\n setStream(java.io.InputStream) should check this value\n beforehand to make sure the supplied wallpaper respects the desired\n minimum height.</p>\n\n<p> If the returned value is &lt;= 0, the caller should use the height of\n the default display instead.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The desired minimum height for the wallpaper. This value should\n be honored by applications that set the wallpaper but it is not\n mandatory.</p>\n</div></li></ul></div></div></div><div id='method-getDesiredMinimumWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getDesiredMinimumWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getDesiredMinimumWidth' class='name expandable'>getDesiredMinimumWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the desired minimum width for the wallpaper. ...</div><div class='long'><p>Returns the desired minimum width for the wallpaper. Callers of\n setBitmap(android.graphics.Bitmap) or\n setStream(java.io.InputStream) should check this value\n beforehand to make sure the supplied wallpaper respects the desired\n minimum width.</p>\n\n<p> If the returned value is &lt;= 0, the caller should use the width of\n the default display instead.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The desired minimum width for the wallpaper. This value should\n be honored by applications that set the wallpaper but it is not\n mandatory.</p>\n</div></li></ul></div></div></div><div id='method-getDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getDrawable' class='name expandable'>getDrawable</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current system wallpaper; if\n no wallpaper is set, the system built-in static wallpaper is returned. ...</div><div class='long'><p>Retrieve the current system wallpaper; if\n no wallpaper is set, the system built-in static wallpaper is returned.\n This is returned as an\n abstract Drawable that you can install in a View to display whatever\n wallpaper the user has currently set.\n <p>\n This method can return null if there is no system wallpaper available, if\n wallpapers are not supported in the current user, or if the calling app is not\n permitted to access the system wallpaper.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>Returns a Drawable object that will draw the system wallpaper,\n     or {@code null} if no system wallpaper exists or if the calling application\n     is not able to access the wallpaper.</p>\n</div></li></ul></div></div></div><div id='method-getFastDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getFastDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getFastDrawable' class='name expandable'>getFastDrawable</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Like getDrawable(), but the returned Drawable has a number\n of limitations to reduce its overhead as much as possible. ...</div><div class='long'><p>Like <a href=\"#!/api/android.app.WallpaperManager-method-getDrawable\" rel=\"android.app.WallpaperManager-method-getDrawable\" class=\"docClass\">getDrawable</a>(), but the returned Drawable has a number\n of limitations to reduce its overhead as much as possible. It will\n never scale the wallpaper (only centering it if the requested bounds\n do match the bitmap bounds, which should not be typical), doesn't\n allow setting an alpha, color filter, or other attributes, etc.  The\n bounds of the returned drawable will be initialized to the same bounds\n as the wallpaper, so normally you will not need to touch it.  The\n drawable also assumes that it will be used in a context running in\n the same density as the screen (not in density compatibility mode).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>Returns a Drawable object that will draw the wallpaper.</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve a WallpaperManager associated with the given Context. ...</div><div class='long'><p>Retrieve a WallpaperManager associated with the given Context.</p>\n</div></div></div><div id='method-getWallpaperId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-getWallpaperId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-getWallpaperId' class='name expandable'>getWallpaperId</a>( <span class='pre'>which</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the ID of the current wallpaper of the given kind. ...</div><div class='long'><p>Get the ID of the current wallpaper of the given kind.  If there is no\n such wallpaper configured, returns a negative number.</p>\n\n<p> <p>Every time the wallpaper image is set, a new ID is assigned to it.\n This method allows the caller to determine whether the wallpaper imagery\n has changed, regardless of how that change happened.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>which</span> : Number<div class='sub-desc'><p>The wallpaper whose ID is to be returned.  Must be a single\n     defined kind of wallpaper, either <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_SYSTEM\" rel=\"android.app.WallpaperManager-property-FLAG_SYSTEM\" class=\"docClass\">FLAG_SYSTEM</a> or\n     <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_LOCK\" rel=\"android.app.WallpaperManager-property-FLAG_LOCK\" class=\"docClass\">FLAG_LOCK</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The positive numeric ID of the current wallpaper of the given kind,\n     or a negative value if no such wallpaper is configured.</p>\n</div></li></ul></div></div></div><div id='method-hasResourceWallpaper' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-hasResourceWallpaper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-hasResourceWallpaper' class='name expandable'>hasResourceWallpaper</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether any users are currently set to use the wallpaper\n with the given resource ID. ...</div><div class='long'><p>Return whether any users are currently set to use the wallpaper\n with the given resource ID.  That is, their wallpaper has been\n set through <a href=\"#!/api/android.app.WallpaperManager-method-setResource\" rel=\"android.app.WallpaperManager-method-setResource\" class=\"docClass\">setResource</a>(int) with the same resource id.</p>\n</div></div></div><div id='method-isSetWallpaperAllowed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-isSetWallpaperAllowed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-isSetWallpaperAllowed' class='name expandable'>isSetWallpaperAllowed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the calling package is allowed to set the wallpaper for the calling user. ...</div><div class='long'><p>Returns whether the calling package is allowed to set the wallpaper for the calling user.\n If this function returns {@code false}, any attempts to change the wallpaper will have\n no effect. Always returns {@code true} for device owner and profile owner.\n@see android.os.UserManager#DISALLOW_SET_WALLPAPER</p>\n</div></div></div><div id='method-isWallpaperSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-isWallpaperSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-isWallpaperSupported' class='name expandable'>isWallpaperSupported</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether wallpapers are supported for the calling user. ...</div><div class='long'><p>Returns whether wallpapers are supported for the calling user. If this function returns\n {@code false}, any attempts to changing the wallpaper will have no effect,\n and any attempt to obtain of the wallpaper will return {@code null}.</p>\n</div></div></div><div id='method-peekDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-peekDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-peekDrawable' class='name expandable'>peekDrawable</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current system wallpaper; if there is no wallpaper set,\n a null pointer is returned. ...</div><div class='long'><p>Retrieve the current system wallpaper; if there is no wallpaper set,\n a null pointer is returned. This is returned as an\n abstract Drawable that you can install in a View to display whatever\n wallpaper the user has currently set.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>Returns a Drawable object that will draw the wallpaper or a\n null pointer if these is none.</p>\n</div></li></ul></div></div></div><div id='method-peekFastDrawable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-peekFastDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-peekFastDrawable' class='name expandable'>peekFastDrawable</a>( <span class='pre'></span> ) : Object {android.graphics.drawable.Drawable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Like getFastDrawable(), but if there is no wallpaper set,\n a null pointer is returned. ...</div><div class='long'><p>Like <a href=\"#!/api/android.app.WallpaperManager-method-getFastDrawable\" rel=\"android.app.WallpaperManager-method-getFastDrawable\" class=\"docClass\">getFastDrawable</a>(), but if there is no wallpaper set,\n a null pointer is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.drawable.Drawable}</span><div class='sub-desc'><p>Returns an optimized Drawable object that will draw the\n wallpaper or a null pointer if these is none.</p>\n</div></li></ul></div></div></div><div id='method-sendWallpaperCommand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-sendWallpaperCommand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-sendWallpaperCommand' class='name expandable'>sendWallpaperCommand</a>( <span class='pre'>windowToken, action, x, y, z, extras</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Send an arbitrary command to the current active wallpaper. ...</div><div class='long'><p>Send an arbitrary command to the current active wallpaper.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>windowToken</span> : Object {IBinder}<div class='sub-desc'><p>The window who these offsets should be associated\n with, as returned by View.getWindowToken().</p>\n</div></li><li><span class='pre'>action</span> : String<div class='sub-desc'><p>Name of the command to perform.  This must be a scoped\n name to avoid collisions, such as \"com.mycompany.wallpaper.DOIT\".</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>Arbitrary integer argument based on command.</p>\n</div></li><li><span class='pre'>y</span> : Number<div class='sub-desc'><p>Arbitrary integer argument based on command.</p>\n</div></li><li><span class='pre'>z</span> : Number<div class='sub-desc'><p>Arbitrary integer argument based on command.</p>\n</div></li><li><span class='pre'>extras</span> : Object {Bundle}<div class='sub-desc'><p>Optional additional information for the command, or null.</p>\n</div></li></ul></div></div></div><div id='method-setDisplayPadding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-setDisplayPadding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-setDisplayPadding' class='name expandable'>setDisplayPadding</a>( <span class='pre'>padding</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specify extra padding that the wallpaper should have outside of the display. ...</div><div class='long'><p>Specify extra padding that the wallpaper should have outside of the display.\n That is, the given padding supplies additional pixels the wallpaper should extend\n outside of the display itself.</p>\n\n<p> <p>This method requires the caller to hold the permission\n android.Manifest.permission.SET_WALLPAPER_HINTS.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>padding</span> : Object {Rect}<div class='sub-desc'><p>The number of pixels the wallpaper should extend beyond the display,\n on its left, top, right, and bottom sides.</p>\n</div></li></ul></div></div></div><div id='method-setResource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-setResource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-setResource' class='name expandable'>setResource</a>( <span class='pre'>resid, which</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Version of setResource(int) that allows the caller to specify which\n of the supported wallpaper categories to set. ...</div><div class='long'><p>Version of <a href=\"#!/api/android.app.WallpaperManager-method-setResource\" rel=\"android.app.WallpaperManager-method-setResource\" class=\"docClass\">setResource</a>(int) that allows the caller to specify which\n of the supported wallpaper categories to set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resid</span> : Number<div class='sub-desc'><p>The resource ID of the bitmap to be used as the wallpaper image</p>\n</div></li><li><span class='pre'>which</span> : Number<div class='sub-desc'><p>Flags indicating which wallpaper(s) to configure with the new imagery\n@see <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_LOCK\" rel=\"android.app.WallpaperManager-property-FLAG_LOCK\" class=\"docClass\">FLAG_LOCK</a>\n@see <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_SYSTEM\" rel=\"android.app.WallpaperManager-property-FLAG_SYSTEM\" class=\"docClass\">FLAG_SYSTEM</a></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An integer ID assigned to the newly active wallpaper; or zero on failure.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException</p>\n</div></li></ul></div></div></div><div id='method-setStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-setStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-setStream' class='name expandable'>setStream</a>( <span class='pre'>bitmapData, visibleCropHint, allowBackup, which</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Version of Rect, boolean) that allows the caller\n to specify which of the supported wallpaper categories to set. ...</div><div class='long'><p>Version of Rect, boolean) that allows the caller\n to specify which of the supported wallpaper categories to set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>bitmapData</span> : Object {InputStream}<div class='sub-desc'><p>A stream containing the raw data to install as a wallpaper.  This\n     data can be in any format handled by BitmapRegionDecoder.</p>\n</div></li><li><span class='pre'>visibleCropHint</span> : Object {Rect}<div class='sub-desc'><p>The rectangular subregion of the streamed image that should be\n     displayed as wallpaper.  Passing {@code null} for this parameter means that\n     the full image should be displayed if possible given the image's and device's\n     aspect ratios, etc.</p>\n</div></li><li><span class='pre'>allowBackup</span> : Boolean<div class='sub-desc'><p>{@code true} if the OS is permitted to back up this wallpaper\n     image for restore to a future device; {@code false} otherwise.</p>\n</div></li><li><span class='pre'>which</span> : Number<div class='sub-desc'><p>Flags indicating which wallpaper(s) to configure with the new imagery.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>An integer ID assigned to the newly active wallpaper; or zero on failure.\n@see <a href=\"#!/api/android.app.WallpaperManager-method-getWallpaperId\" rel=\"android.app.WallpaperManager-method-getWallpaperId\" class=\"docClass\">getWallpaperId</a>(int)\n@see <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_LOCK\" rel=\"android.app.WallpaperManager-property-FLAG_LOCK\" class=\"docClass\">FLAG_LOCK</a>\n@see <a href=\"#!/api/android.app.WallpaperManager-property-FLAG_SYSTEM\" rel=\"android.app.WallpaperManager-property-FLAG_SYSTEM\" class=\"docClass\">FLAG_SYSTEM</a></p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException</p>\n</div></li></ul></div></div></div><div id='method-setWallpaperOffsetSteps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-setWallpaperOffsetSteps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-setWallpaperOffsetSteps' class='name expandable'>setWallpaperOffsetSteps</a>( <span class='pre'>xStep, yStep</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>For applications that use multiple virtual screens showing a wallpaper,\n specify the step size between virtual screens. ...</div><div class='long'><p>For applications that use multiple virtual screens showing a wallpaper,\n specify the step size between virtual screens. For example, if the\n launcher has 3 virtual screens, it would specify an xStep of 0.5,\n since the X offset for those screens are 0.0, 0.5 and 1.0</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xStep</span> : Number<div class='sub-desc'><p>The X offset delta from one screen to the next one</p>\n</div></li><li><span class='pre'>yStep</span> : Number<div class='sub-desc'><p>The Y offset delta from one screen to the next one</p>\n</div></li></ul></div></div></div><div id='method-setWallpaperOffsets' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-setWallpaperOffsets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-setWallpaperOffsets' class='name expandable'>setWallpaperOffsets</a>( <span class='pre'>windowToken, xOffset, yOffset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the display position of the current wallpaper within any larger space, when\n that wallpaper is visible behind the...</div><div class='long'><p>Set the display position of the current wallpaper within any larger space, when\n that wallpaper is visible behind the given window.  The X and Y offsets\n are floating point numbers ranging from 0 to 1, representing where the\n wallpaper should be positioned within the screen space.  These only\n make sense when the wallpaper is larger than the display.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>windowToken</span> : Object {IBinder}<div class='sub-desc'><p>The window who these offsets should be associated\n with, as returned by View.getWindowToken().</p>\n</div></li><li><span class='pre'>xOffset</span> : Number<div class='sub-desc'><p>The offset along the X dimension, from 0 to 1.</p>\n</div></li><li><span class='pre'>yOffset</span> : Number<div class='sub-desc'><p>The offset along the Y dimension, from 0 to 1.</p>\n</div></li></ul></div></div></div><div id='method-suggestDesiredDimensions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.WallpaperManager'>android.app.WallpaperManager</span><br/><a href='source/WallpaperManager.html#android-app-WallpaperManager-method-suggestDesiredDimensions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.WallpaperManager-method-suggestDesiredDimensions' class='name expandable'>suggestDesiredDimensions</a>( <span class='pre'>minimumWidth, minimumHeight</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>For use only by the current home application, to specify the size of\n wallpaper it would like to use. ...</div><div class='long'><p>For use only by the current home application, to specify the size of\n wallpaper it would like to use.  This allows such applications to have\n a virtual wallpaper that is larger than the physical screen, matching\n the size of their workspace.</p>\n\n<p> <p>Note developers, who don't seem to be reading this.  This is\n for <em>home apps</em> to tell what size wallpaper they would like.\n Nobody else should be calling this!  Certainly not other non-home\n apps that change the wallpaper.  Those apps are supposed to\n <b>retrieve</b> the suggested size so they can construct a wallpaper\n that matches it.</p>\n\n<p> <p>This method requires the caller to hold the permission\n android.Manifest.permission.SET_WALLPAPER_HINTS.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minimumWidth</span> : Number<div class='sub-desc'><p>Desired minimum width</p>\n</div></li><li><span class='pre'>minimumHeight</span> : Number<div class='sub-desc'><p>Desired minimum height</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});