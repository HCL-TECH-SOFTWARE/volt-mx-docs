Ext.data.JsonP.android_app_ListFragment({"tagname":"class","name":"android.app.ListFragment","autodetected":{},"files":[{"filename":"ListFragment.js","href":"ListFragment.html#android-app-ListFragment"}],"extends":"android.app.Fragment","deprecated":{"text":"<p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.app.ListFragment for consistent behavior across all devices\n      and access to <a href=\"{@docRoot}topic/libraries/architecture/lifecycle.html\">Lifecycle</a>.</p>\n"},"members":[{"name":"dump","tagname":"method","owner":"android.app.Fragment","id":"method-dump","meta":{}},{"name":"equals","tagname":"method","owner":"android.app.Fragment","id":"method-equals","meta":{}},{"name":"getActivity","tagname":"method","owner":"android.app.Fragment","id":"method-getActivity","meta":{}},{"name":"getAllowEnterTransitionOverlap","tagname":"method","owner":"android.app.Fragment","id":"method-getAllowEnterTransitionOverlap","meta":{}},{"name":"getAllowReturnTransitionOverlap","tagname":"method","owner":"android.app.Fragment","id":"method-getAllowReturnTransitionOverlap","meta":{}},{"name":"getArguments","tagname":"method","owner":"android.app.Fragment","id":"method-getArguments","meta":{}},{"name":"getChildFragmentManager","tagname":"method","owner":"android.app.Fragment","id":"method-getChildFragmentManager","meta":{}},{"name":"getContext","tagname":"method","owner":"android.app.Fragment","id":"method-getContext","meta":{}},{"name":"getEnterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-getEnterTransition","meta":{}},{"name":"getExitTransition","tagname":"method","owner":"android.app.Fragment","id":"method-getExitTransition","meta":{}},{"name":"getFragmentManager","tagname":"method","owner":"android.app.Fragment","id":"method-getFragmentManager","meta":{}},{"name":"getHost","tagname":"method","owner":"android.app.Fragment","id":"method-getHost","meta":{}},{"name":"getId","tagname":"method","owner":"android.app.Fragment","id":"method-getId","meta":{}},{"name":"getLayoutInflater","tagname":"method","owner":"android.app.Fragment","id":"method-getLayoutInflater","meta":{}},{"name":"getListAdapter","tagname":"method","owner":"android.app.ListFragment","id":"method-getListAdapter","meta":{}},{"name":"getListView","tagname":"method","owner":"android.app.ListFragment","id":"method-getListView","meta":{}},{"name":"getLoaderManager","tagname":"method","owner":"android.app.Fragment","id":"method-getLoaderManager","meta":{"deprecated":{"text":"<p>Use android.support.v4.app.Fragment.getLoaderManager()</p>\n"}}},{"name":"getParentFragment","tagname":"method","owner":"android.app.Fragment","id":"method-getParentFragment","meta":{}},{"name":"getReenterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-getReenterTransition","meta":{}},{"name":"getResources","tagname":"method","owner":"android.app.Fragment","id":"method-getResources","meta":{}},{"name":"getRetainInstance","tagname":"method","owner":"android.app.Fragment","id":"method-getRetainInstance","meta":{}},{"name":"getReturnTransition","tagname":"method","owner":"android.app.Fragment","id":"method-getReturnTransition","meta":{}},{"name":"getSelectedItemId","tagname":"method","owner":"android.app.ListFragment","id":"method-getSelectedItemId","meta":{}},{"name":"getSelectedItemPosition","tagname":"method","owner":"android.app.ListFragment","id":"method-getSelectedItemPosition","meta":{}},{"name":"getSharedElementEnterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-getSharedElementEnterTransition","meta":{}},{"name":"getSharedElementReturnTransition","tagname":"method","owner":"android.app.Fragment","id":"method-getSharedElementReturnTransition","meta":{}},{"name":"getString","tagname":"method","owner":"android.app.Fragment","id":"method-getString","meta":{}},{"name":"getTag","tagname":"method","owner":"android.app.Fragment","id":"method-getTag","meta":{}},{"name":"getTargetFragment","tagname":"method","owner":"android.app.Fragment","id":"method-getTargetFragment","meta":{}},{"name":"getTargetRequestCode","tagname":"method","owner":"android.app.Fragment","id":"method-getTargetRequestCode","meta":{}},{"name":"getText","tagname":"method","owner":"android.app.Fragment","id":"method-getText","meta":{}},{"name":"getUserVisibleHint","tagname":"method","owner":"android.app.Fragment","id":"method-getUserVisibleHint","meta":{}},{"name":"getView","tagname":"method","owner":"android.app.Fragment","id":"method-getView","meta":{}},{"name":"hashCode","tagname":"method","owner":"android.app.Fragment","id":"method-hashCode","meta":{}},{"name":"instantiate","tagname":"method","owner":"android.app.Fragment","id":"method-instantiate","meta":{}},{"name":"isAdded","tagname":"method","owner":"android.app.Fragment","id":"method-isAdded","meta":{}},{"name":"isDetached","tagname":"method","owner":"android.app.Fragment","id":"method-isDetached","meta":{}},{"name":"isHidden","tagname":"method","owner":"android.app.Fragment","id":"method-isHidden","meta":{}},{"name":"isInLayout","tagname":"method","owner":"android.app.Fragment","id":"method-isInLayout","meta":{}},{"name":"isRemoving","tagname":"method","owner":"android.app.Fragment","id":"method-isRemoving","meta":{}},{"name":"isResumed","tagname":"method","owner":"android.app.Fragment","id":"method-isResumed","meta":{}},{"name":"isStateSaved","tagname":"method","owner":"android.app.Fragment","id":"method-isStateSaved","meta":{}},{"name":"isVisible","tagname":"method","owner":"android.app.Fragment","id":"method-isVisible","meta":{}},{"name":"onActivityCreated","tagname":"method","owner":"android.app.Fragment","id":"method-onActivityCreated","meta":{}},{"name":"onActivityResult","tagname":"method","owner":"android.app.Fragment","id":"method-onActivityResult","meta":{}},{"name":"onAttach","tagname":"method","owner":"android.app.Fragment","id":"method-onAttach","meta":{"deprecated":{"text":"<p>Use onAttach(Context) instead.</p>\n"}}},{"name":"onAttachFragment","tagname":"method","owner":"android.app.Fragment","id":"method-onAttachFragment","meta":{}},{"name":"onConfigurationChanged","tagname":"method","owner":"android.app.Fragment","id":"method-onConfigurationChanged","meta":{}},{"name":"onContextItemSelected","tagname":"method","owner":"android.app.Fragment","id":"method-onContextItemSelected","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.app.Fragment","id":"method-onCreate","meta":{}},{"name":"onCreateAnimator","tagname":"method","owner":"android.app.Fragment","id":"method-onCreateAnimator","meta":{}},{"name":"onCreateContextMenu","tagname":"method","owner":"android.app.Fragment","id":"method-onCreateContextMenu","meta":{}},{"name":"onCreateOptionsMenu","tagname":"method","owner":"android.app.Fragment","id":"method-onCreateOptionsMenu","meta":{}},{"name":"onCreateView","tagname":"method","owner":"android.app.ListFragment","id":"method-onCreateView","meta":{}},{"name":"onDestroy","tagname":"method","owner":"android.app.Fragment","id":"method-onDestroy","meta":{}},{"name":"onDestroyOptionsMenu","tagname":"method","owner":"android.app.Fragment","id":"method-onDestroyOptionsMenu","meta":{}},{"name":"onDestroyView","tagname":"method","owner":"android.app.ListFragment","id":"method-onDestroyView","meta":{}},{"name":"onDetach","tagname":"method","owner":"android.app.Fragment","id":"method-onDetach","meta":{}},{"name":"onGetLayoutInflater","tagname":"method","owner":"android.app.Fragment","id":"method-onGetLayoutInflater","meta":{}},{"name":"onHiddenChanged","tagname":"method","owner":"android.app.Fragment","id":"method-onHiddenChanged","meta":{}},{"name":"onInflate","tagname":"method","owner":"android.app.Fragment","id":"method-onInflate","meta":{"deprecated":{"text":"<p>Use AttributeSet, Bundle) instead.</p>\n"}}},{"name":"onListItemClick","tagname":"method","owner":"android.app.ListFragment","id":"method-onListItemClick","meta":{}},{"name":"onLowMemory","tagname":"method","owner":"android.app.Fragment","id":"method-onLowMemory","meta":{}},{"name":"onMultiWindowModeChanged","tagname":"method","owner":"android.app.Fragment","id":"method-onMultiWindowModeChanged","meta":{"deprecated":{"text":"<p>Use Configuration) instead.</p>\n"}}},{"name":"onOptionsItemSelected","tagname":"method","owner":"android.app.Fragment","id":"method-onOptionsItemSelected","meta":{}},{"name":"onOptionsMenuClosed","tagname":"method","owner":"android.app.Fragment","id":"method-onOptionsMenuClosed","meta":{}},{"name":"onPause","tagname":"method","owner":"android.app.Fragment","id":"method-onPause","meta":{}},{"name":"onPictureInPictureModeChanged","tagname":"method","owner":"android.app.Fragment","id":"method-onPictureInPictureModeChanged","meta":{"deprecated":{"text":"<p>Use Configuration) instead.</p>\n"}}},{"name":"onPrepareOptionsMenu","tagname":"method","owner":"android.app.Fragment","id":"method-onPrepareOptionsMenu","meta":{}},{"name":"onRequestPermissionsResult","tagname":"method","owner":"android.app.Fragment","id":"method-onRequestPermissionsResult","meta":{}},{"name":"onResume","tagname":"method","owner":"android.app.Fragment","id":"method-onResume","meta":{}},{"name":"onSaveInstanceState","tagname":"method","owner":"android.app.Fragment","id":"method-onSaveInstanceState","meta":{}},{"name":"onStart","tagname":"method","owner":"android.app.Fragment","id":"method-onStart","meta":{}},{"name":"onStop","tagname":"method","owner":"android.app.Fragment","id":"method-onStop","meta":{}},{"name":"onTrimMemory","tagname":"method","owner":"android.app.Fragment","id":"method-onTrimMemory","meta":{}},{"name":"onViewCreated","tagname":"method","owner":"android.app.ListFragment","id":"method-onViewCreated","meta":{}},{"name":"onViewStateRestored","tagname":"method","owner":"android.app.Fragment","id":"method-onViewStateRestored","meta":{}},{"name":"postponeEnterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-postponeEnterTransition","meta":{}},{"name":"registerForContextMenu","tagname":"method","owner":"android.app.Fragment","id":"method-registerForContextMenu","meta":{}},{"name":"requestPermissions","tagname":"method","owner":"android.app.Fragment","id":"method-requestPermissions","meta":{}},{"name":"setAllowEnterTransitionOverlap","tagname":"method","owner":"android.app.Fragment","id":"method-setAllowEnterTransitionOverlap","meta":{}},{"name":"setAllowReturnTransitionOverlap","tagname":"method","owner":"android.app.Fragment","id":"method-setAllowReturnTransitionOverlap","meta":{}},{"name":"setArguments","tagname":"method","owner":"android.app.Fragment","id":"method-setArguments","meta":{}},{"name":"setEmptyText","tagname":"method","owner":"android.app.ListFragment","id":"method-setEmptyText","meta":{}},{"name":"setEnterSharedElementCallback","tagname":"method","owner":"android.app.Fragment","id":"method-setEnterSharedElementCallback","meta":{}},{"name":"setEnterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-setEnterTransition","meta":{}},{"name":"setExitSharedElementCallback","tagname":"method","owner":"android.app.Fragment","id":"method-setExitSharedElementCallback","meta":{}},{"name":"setExitTransition","tagname":"method","owner":"android.app.Fragment","id":"method-setExitTransition","meta":{}},{"name":"setHasOptionsMenu","tagname":"method","owner":"android.app.Fragment","id":"method-setHasOptionsMenu","meta":{}},{"name":"setInitialSavedState","tagname":"method","owner":"android.app.Fragment","id":"method-setInitialSavedState","meta":{}},{"name":"setListAdapter","tagname":"method","owner":"android.app.ListFragment","id":"method-setListAdapter","meta":{}},{"name":"setListShown","tagname":"method","owner":"android.app.ListFragment","id":"method-setListShown","meta":{}},{"name":"setListShownNoAnimation","tagname":"method","owner":"android.app.ListFragment","id":"method-setListShownNoAnimation","meta":{}},{"name":"setMenuVisibility","tagname":"method","owner":"android.app.Fragment","id":"method-setMenuVisibility","meta":{}},{"name":"setReenterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-setReenterTransition","meta":{}},{"name":"setRetainInstance","tagname":"method","owner":"android.app.Fragment","id":"method-setRetainInstance","meta":{}},{"name":"setReturnTransition","tagname":"method","owner":"android.app.Fragment","id":"method-setReturnTransition","meta":{}},{"name":"setSelection","tagname":"method","owner":"android.app.ListFragment","id":"method-setSelection","meta":{}},{"name":"setSharedElementEnterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-setSharedElementEnterTransition","meta":{}},{"name":"setSharedElementReturnTransition","tagname":"method","owner":"android.app.Fragment","id":"method-setSharedElementReturnTransition","meta":{}},{"name":"setTargetFragment","tagname":"method","owner":"android.app.Fragment","id":"method-setTargetFragment","meta":{}},{"name":"setUserVisibleHint","tagname":"method","owner":"android.app.Fragment","id":"method-setUserVisibleHint","meta":{}},{"name":"shouldShowRequestPermissionRationale","tagname":"method","owner":"android.app.Fragment","id":"method-shouldShowRequestPermissionRationale","meta":{}},{"name":"startActivity","tagname":"method","owner":"android.app.Fragment","id":"method-startActivity","meta":{}},{"name":"startActivityForResult","tagname":"method","owner":"android.app.Fragment","id":"method-startActivityForResult","meta":{}},{"name":"startIntentSenderForResult","tagname":"method","owner":"android.app.Fragment","id":"method-startIntentSenderForResult","meta":{}},{"name":"startPostponedEnterTransition","tagname":"method","owner":"android.app.Fragment","id":"method-startPostponedEnterTransition","meta":{}},{"name":"toString","tagname":"method","owner":"android.app.Fragment","id":"method-toString","meta":{}},{"name":"unregisterForContextMenu","tagname":"method","owner":"android.app.Fragment","id":"method-unregisterForContextMenu","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.ListFragment","short_doc":"A fragment that displays a list of items by binding to a data source such as\n an array or Cursor, and exposes event h...","classIcon":"icon-class","superclasses":["java.lang.Object","android.app.Fragment"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='docClass'>android.app.Fragment</a><div class='subclass '><strong>android.app.ListFragment</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ListFragment.html#android-app-ListFragment' target='_blank'>ListFragment.js</a></div></pre><div class='doc-contents'><p>A fragment that displays a list of items by binding to a data source such as\n an array or Cursor, and exposes event handlers when the user selects an item.\n <p>\n ListFragment hosts a ListView object that can\n be bound to different data sources, typically either an array or a Cursor\n holding query results. Binding, screen layout, and row layout are discussed\n in the following sections.\n <p>\n <strong>Screen Layout</strong>\n </p>\n <p>\n ListFragment has a default layout that consists of a single list view.\n However, if you desire, you can customize the fragment layout by returning\n your own view hierarchy from <a href=\"#!/api/android.app.ListFragment-method-onCreateView\" rel=\"android.app.ListFragment-method-onCreateView\" class=\"docClass\">onCreateView</a>.\n To do this, your view hierarchy <em>must</em> contain a ListView object with the\n id \"@android:id/list\" (or android.R.id.list if it's in code)\n <p>\n Optionally, your view hierarchy can contain another view object of any type to\n display when the list view is empty. This \"empty list\" notifier must have an\n id \"android:empty\". Note that when an empty view is present, the list view\n will be hidden when there is no data to display.\n <p>\n The following code demonstrates an (ugly) custom list layout. It has a list\n with a green background, and an alternate red \"no data\" message.\n </p></p>\n\n<pre> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n &lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n         android:orientation=&quot;vertical&quot;\n         android:layout_width=&quot;match_parent&quot;\n         android:layout_height=&quot;match_parent&quot;\n         android:paddingLeft=&quot;8dp&quot;\n         android:paddingRight=&quot;8dp&quot;&gt;\n\n     &lt;ListView android:id=&quot;@id/android:list&quot;\n               android:layout_width=&quot;match_parent&quot;\n               android:layout_height=&quot;match_parent&quot;\n               android:background=&quot;#00FF00&quot;\n               android:layout_weight=&quot;1&quot;\n               android:drawSelectorOnTop=&quot;false&quot;/&gt;\n\n     &lt;TextView android:id=&quot;@id/android:empty&quot;\n               android:layout_width=&quot;match_parent&quot;\n               android:layout_height=&quot;match_parent&quot;\n               android:background=&quot;#FF0000&quot;\n               android:text=&quot;No data&quot;/&gt;\n &lt;/LinearLayout&gt;\n </pre>\n\n\n<p> <p>\n <strong>Row Layout</strong>\n </p>\n <p>\n You can specify the layout of individual rows in the list. You do this by\n specifying a layout resource in the ListAdapter object hosted by the fragment\n (the ListAdapter binds the ListView to the data; more on this later).\n <p>\n A ListAdapter constructor takes a parameter that specifies a layout resource\n for each row. It also has two additional parameters that let you specify\n which data field to associate with which object in the row layout resource.\n These two parameters are typically parallel arrays.\n </p>\n <p>\n Android provides some standard row layout resources. These are in the\n android.R.layout class, and have names such as simple_list_item_1,\n simple_list_item_2, and two_line_list_item. The following layout XML is the\n source for the resource two_line_list_item, which displays two data\n fields,one above the other, for each list row.\n </p></p>\n\n<pre> &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n &lt;LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     android:layout_width=&quot;match_parent&quot;\n     android:layout_height=&quot;wrap_content&quot;\n     android:orientation=&quot;vertical&quot;&gt;\n\n     &lt;TextView android:id=&quot;@+id/text1&quot;\n         android:textSize=&quot;16sp&quot;\n         android:textStyle=&quot;bold&quot;\n         android:layout_width=&quot;match_parent&quot;\n         android:layout_height=&quot;wrap_content&quot;/&gt;\n\n     &lt;TextView android:id=&quot;@+id/text2&quot;\n         android:textSize=&quot;16sp&quot;\n         android:layout_width=&quot;match_parent&quot;\n         android:layout_height=&quot;wrap_content&quot;/&gt;\n &lt;/LinearLayout&gt;\n </pre>\n\n\n<p> <p>\n You must identify the data bound to each TextView object in this layout. The\n syntax for this is discussed in the next section.\n </p>\n <p>\n <strong>Binding to Data</strong>\n </p>\n <p>\n You bind the ListFragment's ListView object to data using a class that\n implements the ListAdapter interface.\n Android provides two standard list adapters:\n SimpleAdapter for static data (Maps),\n and SimpleCursorAdapter for Cursor\n query results.\n </p>\n <p>\n You <b>must</b> use\n android.app.ListFragment.setListAdapter() to\n associate the list with an adapter.  Do not directly call\n ListView.setAdapter() or else\n important initialization will be skipped.\n </p></p>\n\n<p> @see <a href=\"#!/api/android.app.ListFragment-method-setListAdapter\" rel=\"android.app.ListFragment-method-setListAdapter\" class=\"docClass\">setListAdapter</a>\n @see android.widget.ListView</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.app.ListFragment for consistent behavior across all devices\n      and access to <a href=\"{@docRoot}topic/libraries/architecture/lifecycle.html\">Lifecycle</a>.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dump' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-dump' class='name expandable'>dump</a>( <span class='pre'>prefix, fd, writer, args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Print the Fragments's state into the given stream. ...</div><div class='long'><p>Print the Fragments's state into the given stream.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : String<div class='sub-desc'><p>Text to print at the front of each line.</p>\n</div></li><li><span class='pre'>fd</span> : Object {FileDescriptor}<div class='sub-desc'><p>The raw file descriptor that the dump is being sent to.</p>\n</div></li><li><span class='pre'>writer</span> : Object {PrintWriter}<div class='sub-desc'><p>The PrintWriter to which you should dump your state.  This will be\n closed for you after you return.</p>\n</div></li><li><span class='pre'>args</span> : Object {java.lang.String[]}<div class='sub-desc'><p>additional arguments to the dump request.</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-equals' class='name expandable'>equals</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Subclasses can not override equals(). ...</div><div class='long'><p>Subclasses can not override equals().</p>\n</div></div></div><div id='method-getActivity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getActivity' class='name expandable'>getActivity</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Activity this fragment is currently associated with. ...</div><div class='long'><p>Return the Activity this fragment is currently associated with.</p>\n</div></div></div><div id='method-getAllowEnterTransitionOverlap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getAllowEnterTransitionOverlap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getAllowEnterTransitionOverlap' class='name expandable'>getAllowEnterTransitionOverlap</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the exit transition and enter transition overlap or not. ...</div><div class='long'><p>Returns whether the exit transition and enter transition overlap or not.\n When true, the enter transition will start as soon as possible. When false, the\n enter transition will wait until the exit transition completes before starting.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true when the enter transition should start as soon as possible or false to\n when it should wait until the exiting transition completes.\n@attr ref android.R.styleable#Fragment_fragmentAllowEnterTransitionOverlap</p>\n</div></li></ul></div></div></div><div id='method-getAllowReturnTransitionOverlap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getAllowReturnTransitionOverlap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getAllowReturnTransitionOverlap' class='name expandable'>getAllowReturnTransitionOverlap</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the return transition and reenter transition overlap or not. ...</div><div class='long'><p>Returns whether the return transition and reenter transition overlap or not.\n When true, the reenter transition will start as soon as possible. When false, the\n reenter transition will wait until the return transition completes before starting.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true to start the reenter transition when possible or false to wait until the\n         return transition completes.\n@attr ref android.R.styleable#Fragment_fragmentAllowReturnTransitionOverlap</p>\n</div></li></ul></div></div></div><div id='method-getArguments' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getArguments' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getArguments' class='name expandable'>getArguments</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the arguments supplied to setArguments, if any. ...</div><div class='long'><p>Return the arguments supplied to <a href=\"#!/api/android.app.Fragment-method-setArguments\" rel=\"android.app.Fragment-method-setArguments\" class=\"docClass\">setArguments</a>, if any.</p>\n</div></div></div><div id='method-getChildFragmentManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getChildFragmentManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getChildFragmentManager' class='name expandable'>getChildFragmentManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a private FragmentManager for placing and managing Fragments\n inside of this Fragment. ...</div><div class='long'><p>Return a private FragmentManager for placing and managing Fragments\n inside of this Fragment.</p>\n</div></div></div><div id='method-getContext' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getContext' class='name expandable'>getContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Context this fragment is currently associated with. ...</div><div class='long'><p>Return the Context this fragment is currently associated with.</p>\n</div></div></div><div id='method-getEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getEnterTransition' class='name expandable'>getEnterTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Transition that will be used to move Views into the initial scene. ...</div><div class='long'><p>Returns the Transition that will be used to move Views into the initial scene. The entering\n Views will be those that are regular Views or ViewGroups that have\n ViewGroup.isTransitionGroup return true. Typical Transitions will extend\n android.transition.Visibility as entering is governed by changing visibility from\n View.INVISIBLE to View.VISIBLE.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>the Transition to use to move Views into the initial Scene.\n@attr ref android.R.styleable#Fragment_fragmentEnterTransition</p>\n</div></li></ul></div></div></div><div id='method-getExitTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getExitTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getExitTransition' class='name expandable'>getExitTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Transition that will be used to move Views out of the scene when the\n fragment is removed, hidden, or det...</div><div class='long'><p>Returns the Transition that will be used to move Views out of the scene when the\n fragment is removed, hidden, or detached when not popping the back stack.\n The exiting Views will be those that are regular Views or ViewGroups that\n have ViewGroup.isTransitionGroup return true. Typical Transitions will extend\n android.transition.Visibility as exiting is governed by changing visibility\n from View.VISIBLE to View.INVISIBLE. If transition is null, the views will\n remain unaffected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>the Transition to use to move Views out of the Scene when the Fragment\n         is being closed not due to popping the back stack.\n@attr ref android.R.styleable#Fragment_fragmentExitTransition</p>\n</div></li></ul></div></div></div><div id='method-getFragmentManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getFragmentManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getFragmentManager' class='name expandable'>getFragmentManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the FragmentManager for interacting with fragments associated\n with this fragment's activity. ...</div><div class='long'><p>Return the FragmentManager for interacting with fragments associated\n with this fragment's activity.  Note that this will be non-null slightly\n before <a href=\"#!/api/android.app.Fragment-method-getActivity\" rel=\"android.app.Fragment-method-getActivity\" class=\"docClass\">getActivity</a>(), during the time from when the fragment is\n placed in a <a href=\"#!/api/android.app.FragmentTransaction\" rel=\"android.app.FragmentTransaction\" class=\"docClass\">android.app.FragmentTransaction</a> until it is committed and\n attached to its activity.</p>\n\n<p> <p>If this Fragment is a child of another Fragment, the FragmentManager\n returned here will be the parent's <a href=\"#!/api/android.app.Fragment-method-getChildFragmentManager\" rel=\"android.app.Fragment-method-getChildFragmentManager\" class=\"docClass\">getChildFragmentManager</a>().</p>\n</div></div></div><div id='method-getHost' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getHost' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getHost' class='name expandable'>getHost</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the host object of this fragment. ...</div><div class='long'><p>Return the host object of this fragment. May return {@code null} if the fragment\n isn't currently being hosted.</p>\n</div></div></div><div id='method-getId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the identifier this fragment is known by. ...</div><div class='long'><p>Return the identifier this fragment is known by.  This is either\n the android:id value supplied in a layout or the container view ID\n supplied when adding the fragment.</p>\n</div></div></div><div id='method-getLayoutInflater' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getLayoutInflater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getLayoutInflater' class='name expandable'>getLayoutInflater</a>( <span class='pre'></span> ) : Object {android.view.LayoutInflater}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the cached LayoutInflater used to inflate Views of this Fragment. ...</div><div class='long'><p>Returns the cached LayoutInflater used to inflate Views of this Fragment. If\n <a href=\"#!/api/android.app.Fragment-method-onGetLayoutInflater\" rel=\"android.app.Fragment-method-onGetLayoutInflater\" class=\"docClass\">onGetLayoutInflater</a>(Bundle) has not been called <a href=\"#!/api/android.app.Fragment-method-onGetLayoutInflater\" rel=\"android.app.Fragment-method-onGetLayoutInflater\" class=\"docClass\">onGetLayoutInflater</a>(Bundle)\n will be called with a {@code null} argument and that value will be cached.\n <p>\n The cached LayoutInflater will be replaced immediately prior to\n ViewGroup, Bundle) and cleared immediately after\n <a href=\"#!/api/android.app.Fragment-method-onDetach\" rel=\"android.app.Fragment-method-onDetach\" class=\"docClass\">onDetach</a>().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.LayoutInflater}</span><div class='sub-desc'><p>The LayoutInflater used to inflate Views of this Fragment.</p>\n</div></li></ul></div></div></div><div id='method-getListAdapter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-getListAdapter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-getListAdapter' class='name expandable'>getListAdapter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the ListAdapter associated with this fragment's ListView. ...</div><div class='long'><p>Get the ListAdapter associated with this fragment's ListView.</p>\n</div></div></div><div id='method-getListView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-getListView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-getListView' class='name expandable'>getListView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the fragment's list view widget. ...</div><div class='long'><p>Get the fragment's list view widget.</p>\n</div></div></div><div id='method-getLoaderManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getLoaderManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getLoaderManager' class='name expandable'>getLoaderManager</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return the LoaderManager for this fragment, creating it if needed. ...</div><div class='long'><p>Return the LoaderManager for this fragment, creating it if needed.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use android.support.v4.app.Fragment.getLoaderManager()</p>\n\n        </div>\n</div></div></div><div id='method-getParentFragment' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getParentFragment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getParentFragment' class='name expandable'>getParentFragment</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the parent Fragment containing this Fragment. ...</div><div class='long'><p>Returns the parent Fragment containing this Fragment.  If this Fragment\n is attached directly to an Activity, returns null.</p>\n</div></div></div><div id='method-getReenterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getReenterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getReenterTransition' class='name expandable'>getReenterTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Transition that will be used to move Views in to the scene when returning due\n to popping a back stack. ...</div><div class='long'><p>Returns the Transition that will be used to move Views in to the scene when returning due\n to popping a back stack. The entering Views will be those that are regular Views\n or ViewGroups that have ViewGroup.isTransitionGroup return true. Typical Transitions\n will extend android.transition.Visibility as exiting is governed by changing\n visibility from View.VISIBLE to View.INVISIBLE. If transition is null,\n the views will remain unaffected. If nothing is set, the default will be to use the same\n transition as setExitTransition(android.transition.Transition).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>the Transition to use to move Views into the scene when reentering from a\n                   previously-started Activity.\n@attr ref android.R.styleable#Fragment_fragmentReenterTransition</p>\n</div></li></ul></div></div></div><div id='method-getResources' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getResources' class='name expandable'>getResources</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return getActivity().getResources(). ...</div><div class='long'><p>Return <code>getActivity().getResources()</code>.</p>\n</div></div></div><div id='method-getRetainInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getRetainInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getRetainInstance' class='name expandable'>getRetainInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getReturnTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getReturnTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getReturnTransition' class='name expandable'>getReturnTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Transition that will be used to move Views out of the scene when the Fragment is\n preparing to be removed...</div><div class='long'><p>Returns the Transition that will be used to move Views out of the scene when the Fragment is\n preparing to be removed, hidden, or detached because of popping the back stack. The exiting\n Views will be those that are regular Views or ViewGroups that have\n ViewGroup.isTransitionGroup return true. Typical Transitions will extend\n android.transition.Visibility as entering is governed by changing visibility from\n View.VISIBLE to View.INVISIBLE. If <code>transition</code> is null,\n entering Views will remain unaffected.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>the Transition to use to move Views out of the Scene when the Fragment\n         is preparing to close.\n@attr ref android.R.styleable#Fragment_fragmentExitTransition</p>\n</div></li></ul></div></div></div><div id='method-getSelectedItemId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-getSelectedItemId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-getSelectedItemId' class='name expandable'>getSelectedItemId</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the cursor row ID of the currently selected list item. ...</div><div class='long'><p>Get the cursor row ID of the currently selected list item.</p>\n</div></div></div><div id='method-getSelectedItemPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-getSelectedItemPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-getSelectedItemPosition' class='name expandable'>getSelectedItemPosition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the position of the currently selected list item. ...</div><div class='long'><p>Get the position of the currently selected list item.</p>\n</div></div></div><div id='method-getSharedElementEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getSharedElementEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getSharedElementEnterTransition' class='name expandable'>getSharedElementEnterTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Transition that will be used for shared elements transferred into the content\n Scene. ...</div><div class='long'><p>Returns the Transition that will be used for shared elements transferred into the content\n Scene. Typical Transitions will affect size and location, such as\n android.transition.ChangeBounds. A null\n value will cause transferred shared elements to blink to the final position.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>The Transition to use for shared elements transferred into the content\n                   Scene.\n@attr ref android.R.styleable#Fragment_fragmentSharedElementEnterTransition</p>\n</div></li></ul></div></div></div><div id='method-getSharedElementReturnTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getSharedElementReturnTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getSharedElementReturnTransition' class='name expandable'>getSharedElementReturnTransition</a>( <span class='pre'></span> ) : Object {android.transition.Transition}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Transition that will be used for shared elements transferred back during a\n pop of the back stack. ...</div><div class='long'><p>Return the Transition that will be used for shared elements transferred back during a\n pop of the back stack. This Transition acts in the leaving Fragment.\n Typical Transitions will affect size and location, such as\n android.transition.ChangeBounds. A null\n value will cause transferred shared elements to blink to the final position.\n If no value is set, the default will be to use the same value as\n setSharedElementEnterTransition(android.transition.Transition).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Transition}</span><div class='sub-desc'><p>The Transition to use for shared elements transferred out of the content\n                   Scene.\n@attr ref android.R.styleable#Fragment_fragmentSharedElementReturnTransition</p>\n</div></li></ul></div></div></div><div id='method-getString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getString' class='name expandable'>getString</a>( <span class='pre'>resId, formatArgs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a localized formatted string from the application's package's\n default string table, substituting the format a...</div><div class='long'><p>Return a localized formatted string from the application's package's\n default string table, substituting the format arguments as defined in\n java.util.Formatter and java.lang.String.format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resId</span> : Number<div class='sub-desc'><p>Resource id for the format string</p>\n</div></li><li><span class='pre'>formatArgs</span> : Object {java.lang.Object[]}<div class='sub-desc'><p>The format arguments that will be used for substitution.</p>\n</div></li></ul></div></div></div><div id='method-getTag' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getTag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getTag' class='name expandable'>getTag</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the tag name of the fragment, if specified. ...</div><div class='long'><p>Get the tag name of the fragment, if specified.</p>\n</div></div></div><div id='method-getTargetFragment' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getTargetFragment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getTargetFragment' class='name expandable'>getTargetFragment</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the target fragment set by setTargetFragment. ...</div><div class='long'><p>Return the target fragment set by <a href=\"#!/api/android.app.Fragment-method-setTargetFragment\" rel=\"android.app.Fragment-method-setTargetFragment\" class=\"docClass\">setTargetFragment</a>.</p>\n</div></div></div><div id='method-getTargetRequestCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getTargetRequestCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getTargetRequestCode' class='name expandable'>getTargetRequestCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the target request code set by setTargetFragment. ...</div><div class='long'><p>Return the target request code set by <a href=\"#!/api/android.app.Fragment-method-setTargetFragment\" rel=\"android.app.Fragment-method-setTargetFragment\" class=\"docClass\">setTargetFragment</a>.</p>\n</div></div></div><div id='method-getText' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getText' class='name expandable'>getText</a>( <span class='pre'>resId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a localized, styled CharSequence from the application's package's\n default string table. ...</div><div class='long'><p>Return a localized, styled CharSequence from the application's package's\n default string table.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resId</span> : Number<div class='sub-desc'><p>Resource id for the CharSequence text</p>\n</div></li></ul></div></div></div><div id='method-getUserVisibleHint' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getUserVisibleHint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getUserVisibleHint' class='name expandable'>getUserVisibleHint</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>The current value of the user-visible hint on this fragment.\n@see <a href=\"#!/api/android.app.Fragment-method-setUserVisibleHint\" rel=\"android.app.Fragment-method-setUserVisibleHint\" class=\"docClass\">setUserVisibleHint</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-getView' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-getView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-getView' class='name expandable'>getView</a>( <span class='pre'></span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the root view for the fragment's layout (the one returned by onCreateView),\n if provided. ...</div><div class='long'><p>Get the root view for the fragment's layout (the one returned by <a href=\"#!/api/android.app.Fragment-method-onCreateView\" rel=\"android.app.Fragment-method-onCreateView\" class=\"docClass\">onCreateView</a>),\n if provided.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>The fragment's root view, or null if it has no layout.</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Subclasses can not override hashCode(). ...</div><div class='long'><p>Subclasses can not override hashCode().</p>\n</div></div></div><div id='method-instantiate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-instantiate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-instantiate' class='name expandable'>instantiate</a>( <span class='pre'>context, fname, args</span> ) : Object {android.app.Fragment}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new instance of a Fragment with the given class name. ...</div><div class='long'><p>Create a new instance of a Fragment with the given class name.  This is\n the same as calling its empty constructor.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The calling context being used to instantiate the fragment.\n This is currently just used to get its ClassLoader.</p>\n</div></li><li><span class='pre'>fname</span> : String<div class='sub-desc'><p>The class name of the fragment to instantiate.</p>\n</div></li><li><span class='pre'>args</span> : Object {Bundle}<div class='sub-desc'><p>Bundle of arguments to supply to the fragment, which it\n can retrieve with getArguments().  May be null.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Fragment}</span><div class='sub-desc'><p>Returns a new fragment instance.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>InstantiationException If there is a failure in instantiating\n the given fragment class.  This is a runtime exception; it is not\n normally expected to happen.</p>\n</div></li></ul></div></div></div><div id='method-isAdded' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isAdded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isAdded' class='name expandable'>isAdded</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the fragment is currently added to its activity. ...</div><div class='long'><p>Return true if the fragment is currently added to its activity.</p>\n</div></div></div><div id='method-isDetached' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isDetached' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isDetached' class='name expandable'>isDetached</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the fragment has been explicitly detached from the UI. ...</div><div class='long'><p>Return true if the fragment has been explicitly detached from the UI.\n That is, android.app.FragmentTransaction.detach(Fragment) has been used on it.</p>\n</div></div></div><div id='method-isHidden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isHidden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isHidden' class='name expandable'>isHidden</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the fragment has been hidden. ...</div><div class='long'><p>Return true if the fragment has been hidden.  By default fragments\n are shown.  You can find out about changes to this state with\n <a href=\"#!/api/android.app.Fragment-method-onHiddenChanged\" rel=\"android.app.Fragment-method-onHiddenChanged\" class=\"docClass\">onHiddenChanged</a>.  Note that the hidden state is orthogonal\n to other states -- that is, to be visible to the user, a fragment\n must be both started and not hidden.</p>\n</div></div></div><div id='method-isInLayout' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isInLayout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isInLayout' class='name expandable'>isInLayout</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the layout is included as part of an activity view\n hierarchy via the &lt;fragment&gt; tag. ...</div><div class='long'><p>Return true if the layout is included as part of an activity view\n hierarchy via the &lt;fragment&gt; tag.  This will always be true when\n fragments are created through the &lt;fragment&gt; tag, <em>except</em>\n in the case where an old fragment is restored from a previous state and\n it does not appear in the layout of the current state.</p>\n</div></div></div><div id='method-isRemoving' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isRemoving' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isRemoving' class='name expandable'>isRemoving</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if this fragment is currently being removed from its\n activity. ...</div><div class='long'><p>Return true if this fragment is currently being removed from its\n activity.  This is  <em>not</em> whether its activity is finishing, but\n rather whether it is in the process of being removed from its activity.</p>\n</div></div></div><div id='method-isResumed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isResumed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isResumed' class='name expandable'>isResumed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the fragment is in the resumed state. ...</div><div class='long'><p>Return true if the fragment is in the resumed state.  This is true\n for the duration of <a href=\"#!/api/android.app.Fragment-method-onResume\" rel=\"android.app.Fragment-method-onResume\" class=\"docClass\">onResume</a>() and <a href=\"#!/api/android.app.Fragment-method-onPause\" rel=\"android.app.Fragment-method-onPause\" class=\"docClass\">onPause</a>() as well.</p>\n</div></div></div><div id='method-isStateSaved' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isStateSaved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isStateSaved' class='name expandable'>isStateSaved</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this fragment is added and its state has already been saved\n by its host. ...</div><div class='long'><p>Returns true if this fragment is added and its state has already been saved\n by its host. Any operations that would change saved state should not be performed\n if this method returns true, and some operations such as <a href=\"#!/api/android.app.Fragment-method-setArguments\" rel=\"android.app.Fragment-method-setArguments\" class=\"docClass\">setArguments</a>(Bundle)\n will fail.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this fragment's state has already been saved by its host</p>\n</div></li></ul></div></div></div><div id='method-isVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-isVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-isVisible' class='name expandable'>isVisible</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return true if the fragment is currently visible to the user. ...</div><div class='long'><p>Return true if the fragment is currently visible to the user.  This means\n it: (1) has been added, (2) has its view attached to the window, and\n (3) is not hidden.</p>\n</div></div></div><div id='method-onActivityCreated' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onActivityCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onActivityCreated' class='name expandable'>onActivityCreated</a>( <span class='pre'>savedInstanceState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the fragment's activity has been created and this\n fragment's view hierarchy instantiated. ...</div><div class='long'><p>Called when the fragment's activity has been created and this\n fragment's view hierarchy instantiated.  It can be used to do final\n initialization once these pieces are in place, such as retrieving\n views or restoring state.  It is also useful for fragments that use\n <a href=\"#!/api/android.app.Fragment-method-setRetainInstance\" rel=\"android.app.Fragment-method-setRetainInstance\" class=\"docClass\">setRetainInstance</a>(boolean) to retain their instance,\n as this callback tells the fragment when it is fully associated with\n the new activity instance.  This is called after <a href=\"#!/api/android.app.Fragment-method-onCreateView\" rel=\"android.app.Fragment-method-onCreateView\" class=\"docClass\">onCreateView</a>\n and before <a href=\"#!/api/android.app.Fragment-method-onViewStateRestored\" rel=\"android.app.Fragment-method-onViewStateRestored\" class=\"docClass\">onViewStateRestored</a>(Bundle).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>If the fragment is being re-created from\n a previous saved state, this is the state.</p>\n</div></li></ul></div></div></div><div id='method-onActivityResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onActivityResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onActivityResult' class='name expandable'>onActivityResult</a>( <span class='pre'>requestCode, resultCode, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Receive the result from a previous call to\n int). ...</div><div class='long'><p>Receive the result from a previous call to\n int).  This follows the\n related Activity API as described there in\n int, Intent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>The integer request code originally supplied to\n                    startActivityForResult(), allowing you to identify who this\n                    result came from.</p>\n</div></li><li><span class='pre'>resultCode</span> : Number<div class='sub-desc'><p>The integer result code returned by the child activity\n                   through its setResult().</p>\n</div></li><li><span class='pre'>data</span> : Object {Intent}<div class='sub-desc'><p>An Intent, which can return result data to the caller\n               (various data can be attached to Intent \"extras\").</p>\n</div></li></ul></div></div></div><div id='method-onAttach' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onAttach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onAttach' class='name expandable'>onAttach</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use onAttach(Context) instead.</p>\n\n        </div>\n</div></div></div><div id='method-onAttachFragment' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onAttachFragment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onAttachFragment' class='name expandable'>onAttachFragment</a>( <span class='pre'>childFragment</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a fragment is attached as a child of this fragment. ...</div><div class='long'><p>Called when a fragment is attached as a child of this fragment.</p>\n\n<p> <p>This is called after the attached fragment's <code>onAttach</code> and before\n the attached fragment's <code>onCreate</code> if the fragment has not yet had a previous\n call to <code>onCreate</code>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>childFragment</span> : Object {Fragment}<div class='sub-desc'><p>child fragment being attached</p>\n</div></li></ul></div></div></div><div id='method-onConfigurationChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onConfigurationChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onConfigurationChanged' class='name expandable'>onConfigurationChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onContextItemSelected' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onContextItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onContextItemSelected' class='name expandable'>onContextItemSelected</a>( <span class='pre'>item</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever an item in a context menu is selected. ...</div><div class='long'><p>This hook is called whenever an item in a context menu is selected. The\n default implementation simply returns false to have the normal processing\n happen (calling the item's Runnable or sending a message to its Handler\n as appropriate). You can use this method for any items for which you\n would like to do processing without those other facilities.\n <p>\n Use MenuItem.getMenuInfo() to get extra information set by the\n View that added this menu item.\n <p>\n Derived classes should call through to the base class for it to perform\n the default menu handling.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : Object {MenuItem}<div class='sub-desc'><p>The context menu item that was selected.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return false to allow normal context menu processing to\n         proceed, true to consume it here.</p>\n</div></li></ul></div></div></div><div id='method-onCreate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'>savedInstanceState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to do initial creation of a fragment. ...</div><div class='long'><p>Called to do initial creation of a fragment.  This is called after\n <a href=\"#!/api/android.app.Fragment-method-onAttach\" rel=\"android.app.Fragment-method-onAttach\" class=\"docClass\">onAttach</a>(Activity) and before\n ViewGroup, Bundle), but is not called if the fragment\n instance is retained across Activity re-creation (see <a href=\"#!/api/android.app.Fragment-method-setRetainInstance\" rel=\"android.app.Fragment-method-setRetainInstance\" class=\"docClass\">setRetainInstance</a>(boolean)).</p>\n\n<p> <p>Note that this can be called while the fragment's activity is\n still in the process of being created.  As such, you can not rely\n on things like the activity's content view hierarchy being initialized\n at this point.  If you want to do work once the activity itself is\n created, see <a href=\"#!/api/android.app.Fragment-method-onActivityCreated\" rel=\"android.app.Fragment-method-onActivityCreated\" class=\"docClass\">onActivityCreated</a>(Bundle).</p>\n\n<p> <p>If your app's <code>targetSdkVersion</code> is android.os.Build.VERSION_CODES.M\n or lower, child fragments being restored from the savedInstanceState are restored after\n <code>onCreate</code> returns. When targeting android.os.Build.VERSION_CODES.N or\n above and running on an N or newer platform version\n they are restored by <code>Fragment.onCreate</code>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>If the fragment is being re-created from\n a previous saved state, this is the state.</p>\n</div></li></ul></div></div></div><div id='method-onCreateAnimator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onCreateAnimator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onCreateAnimator' class='name expandable'>onCreateAnimator</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a fragment loads an animation. ...</div><div class='long'><p>Called when a fragment loads an animation.</p>\n</div></div></div><div id='method-onCreateContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onCreateContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onCreateContextMenu' class='name expandable'>onCreateContextMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a context menu for the {@code view} is about to be shown. ...</div><div class='long'><p>Called when a context menu for the {@code view} is about to be shown.\n Unlike <a href=\"#!/api/android.app.Fragment-method-onCreateOptionsMenu\" rel=\"android.app.Fragment-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a>, this will be called every\n time the context menu is about to be shown and should be populated for\n the view (or item inside the view for AdapterView subclasses,\n this can be found in the {@code menuInfo})).\n <p>\n Use onContextItemSelected(android.view.MenuItem) to know when an\n item has been selected.\n <p>\n The default implementation calls up to\n <a href=\"#!/api/android.app.Activity-method-onCreateContextMenu\" rel=\"android.app.Activity-method-onCreateContextMenu\" class=\"docClass\">android.app.Activity.onCreateContextMenu</a>, though\n you can not call this implementation if you don't want that behavior.\n <p>\n It is not safe to hold onto the context menu after this method returns.\n {@inheritDoc}</p>\n</div></div></div><div id='method-onCreateOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onCreateOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onCreateOptionsMenu' class='name expandable'>onCreateOptionsMenu</a>( <span class='pre'>menu</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Initialize the contents of the Activity's standard options menu. ...</div><div class='long'><p>Initialize the contents of the Activity's standard options menu.  You\n should place your menu items in to <var>menu</var>.  For this method\n to be called, you must have first called <a href=\"#!/api/android.app.Fragment-method-setHasOptionsMenu\" rel=\"android.app.Fragment-method-setHasOptionsMenu\" class=\"docClass\">setHasOptionsMenu</a>.  See\n android.app.Activity.onCreateOptionsMenu\n for more information.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The options menu in which you place your items.\n@see <a href=\"#!/api/android.app.Fragment-method-setHasOptionsMenu\" rel=\"android.app.Fragment-method-setHasOptionsMenu\" class=\"docClass\">setHasOptionsMenu</a>\n@see <a href=\"#!/api/android.app.Fragment-method-onPrepareOptionsMenu\" rel=\"android.app.Fragment-method-onPrepareOptionsMenu\" class=\"docClass\">onPrepareOptionsMenu</a>\n@see <a href=\"#!/api/android.app.Fragment-method-onOptionsItemSelected\" rel=\"android.app.Fragment-method-onOptionsItemSelected\" class=\"docClass\">onOptionsItemSelected</a></p>\n</div></li></ul></div></div></div><div id='method-onCreateView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-onCreateView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-onCreateView' class='name expandable'>onCreateView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide default implementation to return a simple list view. ...</div><div class='long'><p>Provide default implementation to return a simple list view.  Subclasses\n can override to replace with their own layout.  If doing so, the\n returned view hierarchy <em>must</em> have a ListView whose id\n is android.R.id.list and can optionally\n have a sibling view id android.R.id.empty\n that is to be shown when the list is empty.</p>\n\n<p> <p>If you are overriding this method with your own custom content,\n consider including the standard layout android.R.layout.list_content\n in your layout file, so that you continue to retain all of the standard\n behavior of ListFragment.  In particular, this is currently the only\n way to have the built-in indeterminant progress state be shown.</p>\n<p>Overrides: <a href=\"#!/api/android.app.Fragment-method-onCreateView\" rel=\"android.app.Fragment-method-onCreateView\" class=\"docClass\">android.app.Fragment.onCreateView</a></p></div></div></div><div id='method-onDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onDestroy' class='name expandable'>onDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the fragment is no longer in use. ...</div><div class='long'><p>Called when the fragment is no longer in use.  This is called\n after <a href=\"#!/api/android.app.Fragment-method-onStop\" rel=\"android.app.Fragment-method-onStop\" class=\"docClass\">onStop</a>() and before <a href=\"#!/api/android.app.Fragment-method-onDetach\" rel=\"android.app.Fragment-method-onDetach\" class=\"docClass\">onDetach</a>().</p>\n</div></div></div><div id='method-onDestroyOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onDestroyOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onDestroyOptionsMenu' class='name expandable'>onDestroyOptionsMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when this fragment's option menu items are no longer being\n included in the overall options menu. ...</div><div class='long'><p>Called when this fragment's option menu items are no longer being\n included in the overall options menu.  Receiving this call means that\n the menu needed to be rebuilt, but this fragment's items were not\n included in the newly built menu (its MenuInflater)\n was not called).</p>\n</div></div></div><div id='method-onDestroyView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-onDestroyView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-onDestroyView' class='name expandable'>onDestroyView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Detach from list view. ...</div><div class='long'><p>Detach from list view.</p>\n<p>Overrides: <a href=\"#!/api/android.app.Fragment-method-onDestroyView\" rel=\"android.app.Fragment-method-onDestroyView\" class=\"docClass\">android.app.Fragment.onDestroyView</a></p></div></div></div><div id='method-onDetach' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onDetach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onDetach' class='name expandable'>onDetach</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the fragment is no longer attached to its activity. ...</div><div class='long'><p>Called when the fragment is no longer attached to its activity.  This is called after\n <a href=\"#!/api/android.app.Fragment-method-onDestroy\" rel=\"android.app.Fragment-method-onDestroy\" class=\"docClass\">onDestroy</a>(), except in the cases where the fragment instance is retained across\n Activity re-creation (see <a href=\"#!/api/android.app.Fragment-method-setRetainInstance\" rel=\"android.app.Fragment-method-setRetainInstance\" class=\"docClass\">setRetainInstance</a>(boolean)), in which case it is called\n after <a href=\"#!/api/android.app.Fragment-method-onStop\" rel=\"android.app.Fragment-method-onStop\" class=\"docClass\">onStop</a>().</p>\n</div></div></div><div id='method-onGetLayoutInflater' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onGetLayoutInflater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onGetLayoutInflater' class='name expandable'>onGetLayoutInflater</a>( <span class='pre'></span> ) : Object {android.view.LayoutInflater}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the LayoutInflater used to inflate Views of this Fragment. ...</div><div class='long'><p>Returns the LayoutInflater used to inflate Views of this Fragment. The default\n implementation will throw an exception if the Fragment is not attached.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.LayoutInflater}</span><div class='sub-desc'><p>The LayoutInflater used to inflate Views of this Fragment.</p>\n</div></li></ul></div></div></div><div id='method-onHiddenChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onHiddenChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onHiddenChanged' class='name expandable'>onHiddenChanged</a>( <span class='pre'>hidden</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the hidden state (as returned by isHidden() of\n the fragment has changed. ...</div><div class='long'><p>Called when the hidden state (as returned by <a href=\"#!/api/android.app.Fragment-method-isHidden\" rel=\"android.app.Fragment-method-isHidden\" class=\"docClass\">isHidden</a>() of\n the fragment has changed.  Fragments start out not hidden; this will\n be called whenever the fragment changes state from that.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hidden</span> : Boolean<div class='sub-desc'><p>True if the fragment is now hidden, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-onInflate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onInflate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onInflate' class='name expandable'>onInflate</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use AttributeSet, Bundle) instead.</p>\n\n        </div>\n</div></div></div><div id='method-onListItemClick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-onListItemClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-onListItemClick' class='name expandable'>onListItemClick</a>( <span class='pre'>l, v, position, id</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will be called when an item in the list is selected. ...</div><div class='long'><p>This method will be called when an item in the list is selected.\n Subclasses should override. Subclasses can call\n getListView().getItemAtPosition(position) if they need to access the\n data associated with the selected item.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>l</span> : Object {ListView}<div class='sub-desc'><p>The ListView where the click happened</p>\n</div></li><li><span class='pre'>v</span> : Object {View}<div class='sub-desc'><p>The view that was clicked within the ListView</p>\n</div></li><li><span class='pre'>position</span> : Number<div class='sub-desc'><p>The position of the view in the list</p>\n</div></li><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The row id of the item that was clicked</p>\n</div></li></ul></div></div></div><div id='method-onLowMemory' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onLowMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onLowMemory' class='name expandable'>onLowMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onMultiWindowModeChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onMultiWindowModeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onMultiWindowModeChanged' class='name expandable'>onMultiWindowModeChanged</a>( <span class='pre'>isInMultiWindowMode</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called when the Fragment's activity changes from fullscreen mode to multi-window mode and\n visa-versa. ...</div><div class='long'><p>Called when the Fragment's activity changes from fullscreen mode to multi-window mode and\n visa-versa. This is generally tied to <a href=\"#!/api/android.app.Activity-method-onMultiWindowModeChanged\" rel=\"android.app.Activity-method-onMultiWindowModeChanged\" class=\"docClass\">android.app.Activity.onMultiWindowModeChanged</a> of the\n containing Activity.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use Configuration) instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isInMultiWindowMode</span> : Boolean<div class='sub-desc'><p>True if the activity is in multi-window mode.</p>\n</div></li></ul></div></div></div><div id='method-onOptionsItemSelected' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onOptionsItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onOptionsItemSelected' class='name expandable'>onOptionsItemSelected</a>( <span class='pre'>item</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever an item in your options menu is selected. ...</div><div class='long'><p>This hook is called whenever an item in your options menu is selected.\n The default implementation simply returns false to have the normal\n processing happen (calling the item's Runnable or sending a message to\n its Handler as appropriate).  You can use this method for any items\n for which you would like to do processing without those other\n facilities.</p>\n\n<p> <p>Derived classes should call through to the base class for it to\n perform the default menu handling.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : Object {MenuItem}<div class='sub-desc'><p>The menu item that was selected.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return false to allow normal menu processing to\n         proceed, true to consume it here.\n@see <a href=\"#!/api/android.app.Fragment-method-onCreateOptionsMenu\" rel=\"android.app.Fragment-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a></p>\n</div></li></ul></div></div></div><div id='method-onOptionsMenuClosed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onOptionsMenuClosed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onOptionsMenuClosed' class='name expandable'>onOptionsMenuClosed</a>( <span class='pre'>menu</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever the options menu is being closed (either by the user canceling\n the menu with the back/m...</div><div class='long'><p>This hook is called whenever the options menu is being closed (either by the user canceling\n the menu with the back/menu button, or when an item is selected).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The options menu as last shown or first initialized by\n             onCreateOptionsMenu().</p>\n</div></li></ul></div></div></div><div id='method-onPause' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onPause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onPause' class='name expandable'>onPause</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the Fragment is no longer resumed. ...</div><div class='long'><p>Called when the Fragment is no longer resumed.  This is generally\n tied to android.app.Activity.onPause of the containing\n Activity's lifecycle.</p>\n</div></div></div><div id='method-onPictureInPictureModeChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onPictureInPictureModeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onPictureInPictureModeChanged' class='name expandable'>onPictureInPictureModeChanged</a>( <span class='pre'>isInPictureInPictureMode</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called by the system when the activity changes to and from picture-in-picture mode. ...</div><div class='long'><p>Called by the system when the activity changes to and from picture-in-picture mode. This is\n generally tied to <a href=\"#!/api/android.app.Activity-method-onPictureInPictureModeChanged\" rel=\"android.app.Activity-method-onPictureInPictureModeChanged\" class=\"docClass\">android.app.Activity.onPictureInPictureModeChanged</a> of the containing Activity.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use Configuration) instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isInPictureInPictureMode</span> : Boolean<div class='sub-desc'><p>True if the activity is in picture-in-picture mode.</p>\n</div></li></ul></div></div></div><div id='method-onPrepareOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onPrepareOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onPrepareOptionsMenu' class='name expandable'>onPrepareOptionsMenu</a>( <span class='pre'>menu</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepare the Screen's standard options menu to be displayed. ...</div><div class='long'><p>Prepare the Screen's standard options menu to be displayed.  This is\n called right before the menu is shown, every time it is shown.  You can\n use this method to efficiently enable/disable items or otherwise\n dynamically modify the contents.  See\n android.app.Activity.onPrepareOptionsMenu\n for more information.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The options menu as last shown or first initialized by\n             onCreateOptionsMenu().\n@see <a href=\"#!/api/android.app.Fragment-method-setHasOptionsMenu\" rel=\"android.app.Fragment-method-setHasOptionsMenu\" class=\"docClass\">setHasOptionsMenu</a>\n@see <a href=\"#!/api/android.app.Fragment-method-onCreateOptionsMenu\" rel=\"android.app.Fragment-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a></p>\n</div></li></ul></div></div></div><div id='method-onRequestPermissionsResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onRequestPermissionsResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onRequestPermissionsResult' class='name expandable'>onRequestPermissionsResult</a>( <span class='pre'>requestCode, permissions, grantResults</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback for the result from requesting permissions. ...</div><div class='long'><p>Callback for the result from requesting permissions. This method\n is invoked for every call on int).\n <p>\n <strong>Note:</strong> It is possible that the permissions request interaction\n with the user is interrupted. In this case you will receive empty permissions\n and results arrays which should be treated as a cancellation.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>The request code passed in int).</p>\n</div></li><li><span class='pre'>permissions</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The requested permissions. Never null.</p>\n</div></li><li><span class='pre'>grantResults</span> : Object {int[]}<div class='sub-desc'><p>The grant results for the corresponding permissions\n     which is either android.content.pm.PackageManager.PERMISSION_GRANTED\n     or android.content.pm.PackageManager.PERMISSION_DENIED. Never null.\n@see <a href=\"#!/api/android.app.Fragment-method-requestPermissions\" rel=\"android.app.Fragment-method-requestPermissions\" class=\"docClass\">requestPermissions</a>(String[], int)</p>\n</div></li></ul></div></div></div><div id='method-onResume' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onResume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onResume' class='name expandable'>onResume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the fragment is visible to the user and actively running. ...</div><div class='long'><p>Called when the fragment is visible to the user and actively running.\n This is generally\n tied to android.app.Activity.onResume of the containing\n Activity's lifecycle.</p>\n</div></div></div><div id='method-onSaveInstanceState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onSaveInstanceState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onSaveInstanceState' class='name expandable'>onSaveInstanceState</a>( <span class='pre'>outState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to ask the fragment to save its current dynamic state, so it\n can later be reconstructed in a new instance of ...</div><div class='long'><p>Called to ask the fragment to save its current dynamic state, so it\n can later be reconstructed in a new instance of its process is\n restarted.  If a new instance of the fragment later needs to be\n created, the data you place in the Bundle here will be available\n in the Bundle given to <a href=\"#!/api/android.app.Fragment-method-onCreate\" rel=\"android.app.Fragment-method-onCreate\" class=\"docClass\">onCreate</a>(Bundle),\n ViewGroup, Bundle), and\n <a href=\"#!/api/android.app.Fragment-method-onActivityCreated\" rel=\"android.app.Fragment-method-onActivityCreated\" class=\"docClass\">onActivityCreated</a>(Bundle).</p>\n\n<p> <p>This corresponds to android.app.Activity.onSaveInstanceState(Bundle) and most of the discussion there\n applies here as well.  Note however: <em>this method may be called\n at any time before <a href=\"#!/api/android.app.Fragment-method-onDestroy\" rel=\"android.app.Fragment-method-onDestroy\" class=\"docClass\">onDestroy</a>()</em>.  There are many situations\n where a fragment may be mostly torn down (such as when placed on the\n back stack with no UI showing), but its state will not be saved until\n its owning activity actually needs to save its state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outState</span> : Object {Bundle}<div class='sub-desc'><p>Bundle in which to place your saved state.</p>\n</div></li></ul></div></div></div><div id='method-onStart' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onStart' class='name expandable'>onStart</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the Fragment is visible to the user. ...</div><div class='long'><p>Called when the Fragment is visible to the user.  This is generally\n tied to android.app.Activity.onStart of the containing\n Activity's lifecycle.</p>\n</div></div></div><div id='method-onStop' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onStop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onStop' class='name expandable'>onStop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the Fragment is no longer started. ...</div><div class='long'><p>Called when the Fragment is no longer started.  This is generally\n tied to android.app.Activity.onStop of the containing\n Activity's lifecycle.</p>\n</div></div></div><div id='method-onTrimMemory' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onTrimMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onTrimMemory' class='name expandable'>onTrimMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onViewCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-onViewCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-onViewCreated' class='name expandable'>onViewCreated</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attach to list view once the view hierarchy has been created. ...</div><div class='long'><p>Attach to list view once the view hierarchy has been created.</p>\n<p>Overrides: <a href=\"#!/api/android.app.Fragment-method-onViewCreated\" rel=\"android.app.Fragment-method-onViewCreated\" class=\"docClass\">android.app.Fragment.onViewCreated</a></p></div></div></div><div id='method-onViewStateRestored' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-onViewStateRestored' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-onViewStateRestored' class='name expandable'>onViewStateRestored</a>( <span class='pre'>savedInstanceState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when all saved state has been restored into the view hierarchy\n of the fragment. ...</div><div class='long'><p>Called when all saved state has been restored into the view hierarchy\n of the fragment.  This can be used to do initialization based on saved\n state that you are letting the view hierarchy track itself, such as\n whether check box widgets are currently checked.  This is called\n after <a href=\"#!/api/android.app.Fragment-method-onActivityCreated\" rel=\"android.app.Fragment-method-onActivityCreated\" class=\"docClass\">onActivityCreated</a>(Bundle) and before\n <a href=\"#!/api/android.app.Fragment-method-onStart\" rel=\"android.app.Fragment-method-onStart\" class=\"docClass\">onStart</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>If the fragment is being re-created from\n a previous saved state, this is the state.</p>\n</div></li></ul></div></div></div><div id='method-postponeEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-postponeEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-postponeEnterTransition' class='name expandable'>postponeEnterTransition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Postpone the entering Fragment transition until startPostponedEnterTransition()\n or android.app.FragmentManager.execu...</div><div class='long'><p>Postpone the entering Fragment transition until <a href=\"#!/api/android.app.Fragment-method-startPostponedEnterTransition\" rel=\"android.app.Fragment-method-startPostponedEnterTransition\" class=\"docClass\">startPostponedEnterTransition</a>()\n or android.app.FragmentManager.executePendingTransactions() has been called.\n <p>\n This method gives the Fragment the ability to delay Fragment animations\n until all data is loaded. Until then, the added, shown, and\n attached Fragments will be INVISIBLE and removed, hidden, and detached Fragments won't\n be have their Views removed. The transaction runs when all postponed added Fragments in the\n transaction have called <a href=\"#!/api/android.app.Fragment-method-startPostponedEnterTransition\" rel=\"android.app.Fragment-method-startPostponedEnterTransition\" class=\"docClass\">startPostponedEnterTransition</a>().\n <p>\n This method should be called before being added to the FragmentTransaction or\n in <a href=\"#!/api/android.app.Fragment-method-onCreate\" rel=\"android.app.Fragment-method-onCreate\" class=\"docClass\">onCreate</a>(Bundle), <a href=\"#!/api/android.app.Fragment-method-onAttach\" rel=\"android.app.Fragment-method-onAttach\" class=\"docClass\">onAttach</a>(Context), or\n ViewGroup, Bundle)}.\n <a href=\"#!/api/android.app.Fragment-method-startPostponedEnterTransition\" rel=\"android.app.Fragment-method-startPostponedEnterTransition\" class=\"docClass\">startPostponedEnterTransition</a>() must be called to allow the Fragment to\n start the transitions.\n <p>\n When a FragmentTransaction is started that may affect a postponed FragmentTransaction,\n based on which containers are in their operations, the postponed FragmentTransaction\n will have its start triggered. The early triggering may result in faulty or nonexistent\n animations in the postponed transaction. FragmentTransactions that operate only on\n independent containers will not interfere with each other's postponement.\n <p>\n Calling postponeEnterTransition on Fragments with a null View will not postpone the\n transition. Likewise, postponement only works if FragmentTransaction optimizations are\n enabled.\n@see Activity#postponeEnterTransition()\n@see FragmentTransaction#setReorderingAllowed(boolean)</p>\n</div></div></div><div id='method-registerForContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-registerForContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-registerForContextMenu' class='name expandable'>registerForContextMenu</a>( <span class='pre'>view, view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a context menu to be shown for the given view (multiple views\n can show the context menu). ...</div><div class='long'><p>Registers a context menu to be shown for the given view (multiple views\n can show the context menu). This method will set the\n OnCreateContextMenuListener on the view to this fragment, so\n View, ContextMenuInfo) will be\n called when it is time to show the context menu.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The view that should show a context menu.</p>\n</div></li><li><span class='pre'>view</span> : Object<div class='sub-desc'><p>The view that should show a context menu.</p>\n</div></li></ul></div></div></div><div id='method-requestPermissions' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-requestPermissions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-requestPermissions' class='name expandable'>requestPermissions</a>( <span class='pre'>permissions, requestCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Requests permissions to be granted to this application. ...</div><div class='long'><p>Requests permissions to be granted to this application. These permissions\n must be requested in your manifest, they should not be granted to your app,\n and they should have protection level #PROTECTION_DANGEROUS dangerous, regardless whether they are declared by\n the platform or a third-party app.\n <p>\n Normal permissions android.content.pm.PermissionInfo.PROTECTION_NORMAL\n are granted at install time if requested in the manifest. Signature permissions\n android.content.pm.PermissionInfo.PROTECTION_SIGNATURE are granted at\n install time if requested in the manifest and the signature of your app matches\n the signature of the app declaring the permissions.\n </p>\n <p>\n If your app does not have the requested permissions the user will be presented\n with UI for accepting them. After the user has accepted or rejected the\n requested permissions you will receive a callback on String[], int[]) reporting whether the\n permissions were granted or not.\n </p>\n <p>\n Note that requesting a permission does not guarantee it will be granted and\n your app should be able to run without having this permission.\n </p>\n <p>\n This method may start an activity allowing the user to choose which permissions\n to grant and which to reject. Hence, you should be prepared that your activity\n may be paused and resumed. Further, granting some permissions may require\n a restart of you application. In such a case, the system will recreate the\n activity stack before delivering the result to String[], int[]).\n </p>\n <p>\n When checking whether you have a permission you should use android.content.Context.checkSelfPermission(String).\n </p>\n <p>\n Calling this API for permissions already granted to your app would show UI\n to the user to decide whether the app can still hold these permissions. This\n can be useful if the way your app uses data guarded by the permissions\n changes significantly.\n </p>\n <p>\n You cannot request a permission if your activity sets noHistory to\n <code>true</code> because in this case the activity would not receive\n result callbacks including String[], int[]).\n </p>\n <p>\n A sample permissions request looks like this:\n </p>\n <code><pre><p>\n private void showContacts() {\n     if (getActivity().checkSelfPermission(Manifest.permission.READ_CONTACTS)\n             != PackageManager.PERMISSION_GRANTED) {\n         requestPermissions(new String[]{Manifest.permission.READ_CONTACTS},\n                 PERMISSIONS_REQUEST_READ_CONTACTS);\n     } else {\n         doShowContacts();\n     }\n }</p>\n\n<p> {@literal }Override\n public void onRequestPermissionsResult(int requestCode, String[] permissions,\n         int[] grantResults) {\n     if (requestCode == PERMISSIONS_REQUEST_READ_CONTACTS\n             &amp;&amp; grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n         doShowContacts();\n     }\n }\n </p></pre></code></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permissions</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The requested permissions. Must me non-null and not empty.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Application specific request code to match with a result\n    reported to String[], int[]).\n    Should be >= 0.\n@see <a href=\"#!/api/android.app.Fragment-method-onRequestPermissionsResult\" rel=\"android.app.Fragment-method-onRequestPermissionsResult\" class=\"docClass\">onRequestPermissionsResult</a>(int, String[], int[])\n@see android.content.Context#checkSelfPermission(String)</p>\n</div></li></ul></div></div></div><div id='method-setAllowEnterTransitionOverlap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setAllowEnterTransitionOverlap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setAllowEnterTransitionOverlap' class='name expandable'>setAllowEnterTransitionOverlap</a>( <span class='pre'>allow</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the exit transition and enter transition overlap or not. ...</div><div class='long'><p>Sets whether the exit transition and enter transition overlap or not.\n When true, the enter transition will start as soon as possible. When false, the\n enter transition will wait until the exit transition completes before starting.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>allow</span> : Boolean<div class='sub-desc'><p>true to start the enter transition when possible or false to\n              wait until the exiting transition completes.\n@attr ref android.R.styleable#Fragment_fragmentAllowEnterTransitionOverlap</p>\n</div></li></ul></div></div></div><div id='method-setAllowReturnTransitionOverlap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setAllowReturnTransitionOverlap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setAllowReturnTransitionOverlap' class='name expandable'>setAllowReturnTransitionOverlap</a>( <span class='pre'>allow</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the return transition and reenter transition overlap or not. ...</div><div class='long'><p>Sets whether the return transition and reenter transition overlap or not.\n When true, the reenter transition will start as soon as possible. When false, the\n reenter transition will wait until the return transition completes before starting.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>allow</span> : Boolean<div class='sub-desc'><p>true to start the reenter transition when possible or false to wait until the\n              return transition completes.\n@attr ref android.R.styleable#Fragment_fragmentAllowReturnTransitionOverlap</p>\n</div></li></ul></div></div></div><div id='method-setArguments' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setArguments' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setArguments' class='name expandable'>setArguments</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Supply the construction arguments for this fragment. ...</div><div class='long'><p>Supply the construction arguments for this fragment.\n The arguments supplied here will be retained across fragment destroy and\n creation.</p>\n\n<p> <p>This method cannot be called if the fragment is added to a FragmentManager and\n if <a href=\"#!/api/android.app.Fragment-method-isStateSaved\" rel=\"android.app.Fragment-method-isStateSaved\" class=\"docClass\">isStateSaved</a>() would return true. Prior to Build.VERSION_CODES.O,\n this method may only be called if the fragment has not yet been added to a FragmentManager.\n </p></p>\n</div></div></div><div id='method-setEmptyText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-setEmptyText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-setEmptyText' class='name expandable'>setEmptyText</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The default content for a ListFragment has a TextView that can\n be shown when the list is empty. ...</div><div class='long'><p>The default content for a ListFragment has a TextView that can\n be shown when the list is empty.  If you would like to have it\n shown, call this method to supply the text it should use.</p>\n</div></div></div><div id='method-setEnterSharedElementCallback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setEnterSharedElementCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setEnterSharedElementCallback' class='name expandable'>setEnterSharedElementCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>When custom transitions are used with Fragments, the enter transition callback\n is called when this Fragment is attac...</div><div class='long'><p>When custom transitions are used with Fragments, the enter transition callback\n is called when this Fragment is attached or detached when not popping the back stack.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {SharedElementCallback}<div class='sub-desc'><p>Used to manipulate the shared element transitions on this Fragment\n                 when added not as a pop from the back stack.</p>\n</div></li></ul></div></div></div><div id='method-setEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setEnterTransition' class='name expandable'>setEnterTransition</a>( <span class='pre'>transition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Transition that will be used to move Views into the initial scene. ...</div><div class='long'><p>Sets the Transition that will be used to move Views into the initial scene. The entering\n Views will be those that are regular Views or ViewGroups that have\n ViewGroup.isTransitionGroup return true. Typical Transitions will extend\n android.transition.Visibility as entering is governed by changing visibility from\n View.INVISIBLE to View.VISIBLE. If <code>transition</code> is null,\n entering Views will remain unaffected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transition</span> : Object {Transition}<div class='sub-desc'><p>The Transition to use to move Views into the initial Scene.\n@attr ref android.R.styleable#Fragment_fragmentEnterTransition</p>\n</div></li></ul></div></div></div><div id='method-setExitSharedElementCallback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setExitSharedElementCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setExitSharedElementCallback' class='name expandable'>setExitSharedElementCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>When custom transitions are used with Fragments, the exit transition callback\n is called when this Fragment is attach...</div><div class='long'><p>When custom transitions are used with Fragments, the exit transition callback\n is called when this Fragment is attached or detached when popping the back stack.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {SharedElementCallback}<div class='sub-desc'><p>Used to manipulate the shared element transitions on this Fragment\n                 when added as a pop from the back stack.</p>\n</div></li></ul></div></div></div><div id='method-setExitTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setExitTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setExitTransition' class='name expandable'>setExitTransition</a>( <span class='pre'>transition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Transition that will be used to move Views out of the scene when the\n fragment is removed, hidden, or detach...</div><div class='long'><p>Sets the Transition that will be used to move Views out of the scene when the\n fragment is removed, hidden, or detached when not popping the back stack.\n The exiting Views will be those that are regular Views or ViewGroups that\n have ViewGroup.isTransitionGroup return true. Typical Transitions will extend\n android.transition.Visibility as exiting is governed by changing visibility\n from View.VISIBLE to View.INVISIBLE. If transition is null, the views will\n remain unaffected.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transition</span> : Object {Transition}<div class='sub-desc'><p>The Transition to use to move Views out of the Scene when the Fragment\n                   is being closed not due to popping the back stack.\n@attr ref android.R.styleable#Fragment_fragmentExitTransition</p>\n</div></li></ul></div></div></div><div id='method-setHasOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setHasOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setHasOptionsMenu' class='name expandable'>setHasOptionsMenu</a>( <span class='pre'>hasMenu</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report that this fragment would like to participate in populating\n the options menu by receiving a call to onCreateOp...</div><div class='long'><p>Report that this fragment would like to participate in populating\n the options menu by receiving a call to <a href=\"#!/api/android.app.Fragment-method-onCreateOptionsMenu\" rel=\"android.app.Fragment-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a>\n and related methods.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hasMenu</span> : Boolean<div class='sub-desc'><p>If true, the fragment has menu items to contribute.</p>\n</div></li></ul></div></div></div><div id='method-setInitialSavedState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setInitialSavedState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setInitialSavedState' class='name expandable'>setInitialSavedState</a>( <span class='pre'>state</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the initial saved state that this Fragment should restore itself\n from when first being constructed, as returned ...</div><div class='long'><p>Set the initial saved state that this Fragment should restore itself\n from when first being constructed, as returned by\n android.app.FragmentManager.saveFragmentInstanceState.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>state</span> : Object {Fragment.SavedState}<div class='sub-desc'><p>The state the fragment should be restored from.</p>\n</div></li></ul></div></div></div><div id='method-setListAdapter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-setListAdapter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-setListAdapter' class='name expandable'>setListAdapter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide the cursor for the list view. ...</div><div class='long'><p>Provide the cursor for the list view.</p>\n</div></div></div><div id='method-setListShown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-setListShown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-setListShown' class='name expandable'>setListShown</a>( <span class='pre'>shown</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control whether the list is being displayed. ...</div><div class='long'><p>Control whether the list is being displayed.  You can make it not\n displayed if you are waiting for the initial data to show in it.  During\n this time an indeterminant progress indicator will be shown instead.</p>\n\n<p> <p>Applications do not normally need to use this themselves.  The default\n behavior of ListFragment is to start with the list not being shown, only\n showing it once an adapter is given with <a href=\"#!/api/android.app.ListFragment-method-setListAdapter\" rel=\"android.app.ListFragment-method-setListAdapter\" class=\"docClass\">setListAdapter</a>(ListAdapter).\n If the list at that point had not been shown, when it does get shown\n it will be do without the user ever seeing the hidden state.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>shown</span> : Boolean<div class='sub-desc'><p>If true, the list view is shown; if false, the progress\n indicator.  The initial value is true.</p>\n</div></li></ul></div></div></div><div id='method-setListShownNoAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-setListShownNoAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-setListShownNoAnimation' class='name expandable'>setListShownNoAnimation</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like setListShown(boolean), but no animation is used when\n transitioning from the previous state. ...</div><div class='long'><p>Like <a href=\"#!/api/android.app.ListFragment-method-setListShown\" rel=\"android.app.ListFragment-method-setListShown\" class=\"docClass\">setListShown</a>(boolean), but no animation is used when\n transitioning from the previous state.</p>\n</div></div></div><div id='method-setMenuVisibility' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setMenuVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setMenuVisibility' class='name expandable'>setMenuVisibility</a>( <span class='pre'>menuVisible</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a hint for whether this fragment's menu should be visible. ...</div><div class='long'><p>Set a hint for whether this fragment's menu should be visible.  This\n is useful if you know that a fragment has been placed in your view\n hierarchy so that the user can not currently seen it, so any menu items\n it has should also not be shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menuVisible</span> : Boolean<div class='sub-desc'><p>The default is true, meaning the fragment's menu will\n be shown as usual.  If false, the user will not see the menu.</p>\n</div></li></ul></div></div></div><div id='method-setReenterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setReenterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setReenterTransition' class='name expandable'>setReenterTransition</a>( <span class='pre'>transition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Transition that will be used to move Views in to the scene when returning due\n to popping a back stack. ...</div><div class='long'><p>Sets the Transition that will be used to move Views in to the scene when returning due\n to popping a back stack. The entering Views will be those that are regular Views\n or ViewGroups that have ViewGroup.isTransitionGroup return true. Typical Transitions\n will extend android.transition.Visibility as exiting is governed by changing\n visibility from View.VISIBLE to View.INVISIBLE. If transition is null,\n the views will remain unaffected. If nothing is set, the default will be to use the same\n transition as setExitTransition(android.transition.Transition).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transition</span> : Object {Transition}<div class='sub-desc'><p>The Transition to use to move Views into the scene when reentering from a\n                   previously-started Activity.\n@attr ref android.R.styleable#Fragment_fragmentReenterTransition</p>\n</div></li></ul></div></div></div><div id='method-setRetainInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setRetainInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setRetainInstance' class='name expandable'>setRetainInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control whether a fragment instance is retained across Activity\n re-creation (such as from a configuration change). ...</div><div class='long'><p>Control whether a fragment instance is retained across Activity\n re-creation (such as from a configuration change).  This can only\n be used with fragments not in the back stack.  If set, the fragment\n lifecycle will be slightly different when an activity is recreated:\n <ul>\n <li> <a href=\"#!/api/android.app.Fragment-method-onDestroy\" rel=\"android.app.Fragment-method-onDestroy\" class=\"docClass\">onDestroy</a>() will not be called (but <a href=\"#!/api/android.app.Fragment-method-onDetach\" rel=\"android.app.Fragment-method-onDetach\" class=\"docClass\">onDetach</a>() still\n will be, because the fragment is being detached from its current activity).\n <li> <a href=\"#!/api/android.app.Fragment-method-onCreate\" rel=\"android.app.Fragment-method-onCreate\" class=\"docClass\">onCreate</a>(Bundle) will not be called since the fragment\n is not being re-created.\n <li> <a href=\"#!/api/android.app.Fragment-method-onAttach\" rel=\"android.app.Fragment-method-onAttach\" class=\"docClass\">onAttach</a>(Activity) and <a href=\"#!/api/android.app.Fragment-method-onActivityCreated\" rel=\"android.app.Fragment-method-onActivityCreated\" class=\"docClass\">onActivityCreated</a>(Bundle) <b>will</b>\n still be called.\n </li></li></li></ul></p>\n</div></div></div><div id='method-setReturnTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setReturnTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setReturnTransition' class='name expandable'>setReturnTransition</a>( <span class='pre'>transition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Transition that will be used to move Views out of the scene when the Fragment is\n preparing to be removed, h...</div><div class='long'><p>Sets the Transition that will be used to move Views out of the scene when the Fragment is\n preparing to be removed, hidden, or detached because of popping the back stack. The exiting\n Views will be those that are regular Views or ViewGroups that have\n ViewGroup.isTransitionGroup return true. Typical Transitions will extend\n android.transition.Visibility as entering is governed by changing visibility from\n View.VISIBLE to View.INVISIBLE. If <code>transition</code> is null,\n entering Views will remain unaffected. If nothing is set, the default will be to\n use the same value as set in setEnterTransition(android.transition.Transition).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transition</span> : Object {Transition}<div class='sub-desc'><p>The Transition to use to move Views out of the Scene when the Fragment\n                   is preparing to close.\n@attr ref android.R.styleable#Fragment_fragmentExitTransition</p>\n</div></li></ul></div></div></div><div id='method-setSelection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ListFragment'>android.app.ListFragment</span><br/><a href='source/ListFragment.html#android-app-ListFragment-method-setSelection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ListFragment-method-setSelection' class='name expandable'>setSelection</a>( <span class='pre'>position</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the currently selected list item to the specified\n position with the adapter's data ...</div><div class='long'><p>Set the currently selected list item to the specified\n position with the adapter's data</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>position</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setSharedElementEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setSharedElementEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setSharedElementEnterTransition' class='name expandable'>setSharedElementEnterTransition</a>( <span class='pre'>transition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Transition that will be used for shared elements transferred into the content\n Scene. ...</div><div class='long'><p>Sets the Transition that will be used for shared elements transferred into the content\n Scene. Typical Transitions will affect size and location, such as\n android.transition.ChangeBounds. A null\n value will cause transferred shared elements to blink to the final position.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transition</span> : Object {Transition}<div class='sub-desc'><p>The Transition to use for shared elements transferred into the content\n                   Scene.\n@attr ref android.R.styleable#Fragment_fragmentSharedElementEnterTransition</p>\n</div></li></ul></div></div></div><div id='method-setSharedElementReturnTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setSharedElementReturnTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setSharedElementReturnTransition' class='name expandable'>setSharedElementReturnTransition</a>( <span class='pre'>transition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the Transition that will be used for shared elements transferred back during a\n pop of the back stack. ...</div><div class='long'><p>Sets the Transition that will be used for shared elements transferred back during a\n pop of the back stack. This Transition acts in the leaving Fragment.\n Typical Transitions will affect size and location, such as\n android.transition.ChangeBounds. A null\n value will cause transferred shared elements to blink to the final position.\n If no value is set, the default will be to use the same value as\n setSharedElementEnterTransition(android.transition.Transition).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>transition</span> : Object {Transition}<div class='sub-desc'><p>The Transition to use for shared elements transferred out of the content\n                   Scene.\n@attr ref android.R.styleable#Fragment_fragmentSharedElementReturnTransition</p>\n</div></li></ul></div></div></div><div id='method-setTargetFragment' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setTargetFragment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setTargetFragment' class='name expandable'>setTargetFragment</a>( <span class='pre'>fragment, requestCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Optional target for this fragment. ...</div><div class='long'><p>Optional target for this fragment.  This may be used, for example,\n if this fragment is being started by another, and when done wants to\n give a result back to the first.  The target set here is retained\n across instances via <a href=\"#!/api/android.app.FragmentManager-method-putFragment\" rel=\"android.app.FragmentManager-method-putFragment\" class=\"docClass\">android.app.FragmentManager.putFragment()</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fragment</span> : Object {Fragment}<div class='sub-desc'><p>The fragment that is the target of this one.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Optional request code, for convenience if you\n are going to call back with int, Intent).</p>\n</div></li></ul></div></div></div><div id='method-setUserVisibleHint' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-setUserVisibleHint' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-setUserVisibleHint' class='name expandable'>setUserVisibleHint</a>( <span class='pre'>isVisibleToUser</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a hint to the system about whether this fragment's UI is currently visible\n to the user. ...</div><div class='long'><p>Set a hint to the system about whether this fragment's UI is currently visible\n to the user. This hint defaults to true and is persistent across fragment instance\n state save and restore.</p>\n\n<p> <p>An app may set this to false to indicate that the fragment's UI is\n scrolled out of visibility or is otherwise not directly visible to the user.\n This may be used by the system to prioritize operations such as fragment lifecycle updates\n or loader ordering behavior.</p></p>\n\n<p> <p><strong>Note:</strong> This method may be called outside of the fragment lifecycle\n and thus has no ordering guarantees with regard to fragment lifecycle method calls.</p></p>\n\n<p> <p><strong>Note:</strong> Prior to Android N there was a platform bug that could cause\n <code>setUserVisibleHint</code> to bring a fragment up to the started state before its\n <code>FragmentTransaction</code> had been committed. As some apps relied on this behavior,\n it is preserved for apps that declare a <code>targetSdkVersion</code> of 23 or lower.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isVisibleToUser</span> : Boolean<div class='sub-desc'><p>true if this fragment's UI is currently visible to the user (default),\n                        false if it is not.</p>\n</div></li></ul></div></div></div><div id='method-shouldShowRequestPermissionRationale' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-shouldShowRequestPermissionRationale' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-shouldShowRequestPermissionRationale' class='name expandable'>shouldShowRequestPermissionRationale</a>( <span class='pre'>permission</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets whether you should show UI with rationale for requesting a permission. ...</div><div class='long'><p>Gets whether you should show UI with rationale for requesting a permission.\n You should do this only if you do not have the permission and the context in\n which the permission is requested does not clearly communicate to the user\n what would be the benefit from granting this permission.\n <p>\n For example, if you write a camera app, requesting the camera permission\n would be expected by the user and no rationale for why it is requested is\n needed. If however, the app needs location for tagging photos then a non-tech\n savvy user may wonder how location is related to taking photos. In this case\n you may choose to show UI with rationale of requesting this permission.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>A permission your app wants to request.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether you can show permission rationale UI.\n@see Context#checkSelfPermission(String)\n@see <a href=\"#!/api/android.app.Fragment-method-requestPermissions\" rel=\"android.app.Fragment-method-requestPermissions\" class=\"docClass\">requestPermissions</a>(String[], int)\n@see <a href=\"#!/api/android.app.Fragment-method-onRequestPermissionsResult\" rel=\"android.app.Fragment-method-onRequestPermissionsResult\" class=\"docClass\">onRequestPermissionsResult</a>(int, String[], int[])</p>\n</div></li></ul></div></div></div><div id='method-startActivity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-startActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-startActivity' class='name expandable'>startActivity</a>( <span class='pre'>intent, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call Bundle) from the fragment's\n containing Activity. ...</div><div class='long'><p>Call Bundle) from the fragment's\n containing Activity.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent to start.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul></div></div></div><div id='method-startActivityForResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-startActivityForResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-startActivityForResult' class='name expandable'>startActivityForResult</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call int, Bundle) from the fragment's\n containing Activity. ...</div><div class='long'><p>Call int, Bundle) from the fragment's\n containing Activity.</p>\n</div></div></div><div id='method-startIntentSenderForResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-startIntentSenderForResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-startIntentSenderForResult' class='name expandable'>startIntentSenderForResult</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call int, Intent, int, int, int,\n Bundle) from the fragment's containing Activity. ...</div><div class='long'><p>Call int, Intent, int, int, int,\n Bundle) from the fragment's containing Activity.</p>\n</div></div></div><div id='method-startPostponedEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-startPostponedEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-startPostponedEnterTransition' class='name expandable'>startPostponedEnterTransition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Begin postponed transitions after postponeEnterTransition() was called. ...</div><div class='long'><p>Begin postponed transitions after <a href=\"#!/api/android.app.Fragment-method-postponeEnterTransition\" rel=\"android.app.Fragment-method-postponeEnterTransition\" class=\"docClass\">postponeEnterTransition</a>() was called.\n If postponeEnterTransition() was called, you must call startPostponedEnterTransition()\n or android.app.FragmentManager.executePendingTransactions() to complete the FragmentTransaction.\n If postponement was interrupted with android.app.FragmentManager.executePendingTransactions(),\n before {@code startPostponedEnterTransition()}, animations may not run or may execute\n improperly.\n@see Activity#startPostponedEnterTransition()</p>\n</div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-unregisterForContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Fragment' rel='android.app.Fragment' class='defined-in docClass'>android.app.Fragment</a><br/><a href='source/Fragment.html#android-app-Fragment-method-unregisterForContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Fragment-method-unregisterForContextMenu' class='name expandable'>unregisterForContextMenu</a>( <span class='pre'>view, view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prevents a context menu to be shown for the given view. ...</div><div class='long'><p>Prevents a context menu to be shown for the given view. This method will\n remove the OnCreateContextMenuListener on the view.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The view that should stop showing a context menu.</p>\n</div></li><li><span class='pre'>view</span> : Object<div class='sub-desc'><p>The view that should stop showing a context menu.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.app.ListFragment for consistent behavior across all devices\n      and access to <a href=\"{@docRoot}topic/libraries/architecture/lifecycle.html\">Lifecycle</a>.</p>\n"}}});