Ext.data.JsonP.android_app_ActivityOptions({"tagname":"class","name":"android.app.ActivityOptions","autodetected":{},"files":[{"filename":"ActivityOptions.js","href":"ActivityOptions.html#android-app-ActivityOptions"}],"extends":"java.lang.Object","members":[{"name":"EXTRA_USAGE_TIME_REPORT","tagname":"property","owner":"android.app.ActivityOptions","id":"property-EXTRA_USAGE_TIME_REPORT","meta":{}},{"name":"EXTRA_USAGE_TIME_REPORT_PACKAGES","tagname":"property","owner":"android.app.ActivityOptions","id":"property-EXTRA_USAGE_TIME_REPORT_PACKAGES","meta":{}},{"name":"getLaunchBounds","tagname":"method","owner":"android.app.ActivityOptions","id":"method-getLaunchBounds","meta":{}},{"name":"getLaunchDisplayId","tagname":"method","owner":"android.app.ActivityOptions","id":"method-getLaunchDisplayId","meta":{}},{"name":"getLockTaskMode","tagname":"method","owner":"android.app.ActivityOptions","id":"method-getLockTaskMode","meta":{}},{"name":"makeBasic","tagname":"method","owner":"android.app.ActivityOptions","id":"method-makeBasic","meta":{}},{"name":"makeClipRevealAnimation","tagname":"method","owner":"android.app.ActivityOptions","id":"method-makeClipRevealAnimation","meta":{}},{"name":"makeScaleUpAnimation","tagname":"method","owner":"android.app.ActivityOptions","id":"method-makeScaleUpAnimation","meta":{}},{"name":"makeSceneTransitionAnimation","tagname":"method","owner":"android.app.ActivityOptions","id":"method-makeSceneTransitionAnimation","meta":{}},{"name":"makeTaskLaunchBehind","tagname":"method","owner":"android.app.ActivityOptions","id":"method-makeTaskLaunchBehind","meta":{}},{"name":"makeThumbnailScaleUpAnimation","tagname":"method","owner":"android.app.ActivityOptions","id":"method-makeThumbnailScaleUpAnimation","meta":{}},{"name":"requestUsageTimeReport","tagname":"method","owner":"android.app.ActivityOptions","id":"method-requestUsageTimeReport","meta":{}},{"name":"setAppVerificationBundle","tagname":"method","owner":"android.app.ActivityOptions","id":"method-setAppVerificationBundle","meta":{}},{"name":"setLaunchBounds","tagname":"method","owner":"android.app.ActivityOptions","id":"method-setLaunchBounds","meta":{}},{"name":"setLaunchDisplayId","tagname":"method","owner":"android.app.ActivityOptions","id":"method-setLaunchDisplayId","meta":{}},{"name":"setLockTaskEnabled","tagname":"method","owner":"android.app.ActivityOptions","id":"method-setLockTaskEnabled","meta":{}},{"name":"toBundle","tagname":"method","owner":"android.app.ActivityOptions","id":"method-toBundle","meta":{}},{"name":"update","tagname":"method","owner":"android.app.ActivityOptions","id":"method-update","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.ActivityOptions","short_doc":"Helper class for building an options Bundle that can be used with\n android.os.Bundle)\n Context.startActivity(Intent, ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.ActivityOptions</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ActivityOptions.html#android-app-ActivityOptions' target='_blank'>ActivityOptions.js</a></div></pre><div class='doc-contents'><p>Helper class for building an options Bundle that can be used with\n android.os.Bundle)\n Context.startActivity(Intent, Bundle) and related methods.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-EXTRA_USAGE_TIME_REPORT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-property-EXTRA_USAGE_TIME_REPORT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-property-EXTRA_USAGE_TIME_REPORT' class='name expandable'>EXTRA_USAGE_TIME_REPORT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A long in the extras delivered by requestUsageTimeReport that contains\nthe total time (in ms) the user spent in the a...</div><div class='long'><p>A long in the extras delivered by <a href=\"#!/api/android.app.ActivityOptions-method-requestUsageTimeReport\" rel=\"android.app.ActivityOptions-method-requestUsageTimeReport\" class=\"docClass\">requestUsageTimeReport</a> that contains\nthe total time (in ms) the user spent in the app flow.</p>\n<p>Defaults to: <code>&quot;android.activity.usage_time&quot;</code></p></div></div></div><div id='property-EXTRA_USAGE_TIME_REPORT_PACKAGES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-property-EXTRA_USAGE_TIME_REPORT_PACKAGES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-property-EXTRA_USAGE_TIME_REPORT_PACKAGES' class='name expandable'>EXTRA_USAGE_TIME_REPORT_PACKAGES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A Bundle in the extras delivered by requestUsageTimeReport that contains\ndetailed information about the time spent in...</div><div class='long'><p>A Bundle in the extras delivered by <a href=\"#!/api/android.app.ActivityOptions-method-requestUsageTimeReport\" rel=\"android.app.ActivityOptions-method-requestUsageTimeReport\" class=\"docClass\">requestUsageTimeReport</a> that contains\ndetailed information about the time spent in each package associated with the app;\neach key is a package name, whose value is a long containing the time (in ms).</p>\n<p>Defaults to: <code>&quot;android.usage_time_packages&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getLaunchBounds' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-getLaunchBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-getLaunchBounds' class='name expandable'>getLaunchBounds</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the bounds that should be used to launch the activity. ...</div><div class='long'><p>Returns the bounds that should be used to launch the activity.\n@see <a href=\"#!/api/android.app.ActivityOptions-method-setLaunchBounds\" rel=\"android.app.ActivityOptions-method-setLaunchBounds\" class=\"docClass\">setLaunchBounds</a>(Rect)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>Bounds used to launch the activity.</p>\n</div></li></ul></div></div></div><div id='method-getLaunchDisplayId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-getLaunchDisplayId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-getLaunchDisplayId' class='name expandable'>getLaunchDisplayId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the id of the display where activity should be launched. ...</div><div class='long'><p>Gets the id of the display where activity should be launched.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The id of the display where activity should be launched,\n         android.view.Display.INVALID_DISPLAY if not set.\n@see <a href=\"#!/api/android.app.ActivityOptions-method-setLaunchDisplayId\" rel=\"android.app.ActivityOptions-method-setLaunchDisplayId\" class=\"docClass\">setLaunchDisplayId</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getLockTaskMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-getLockTaskMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-getLockTaskMode' class='name expandable'>getLockTaskMode</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets whether the activity is to be launched into LockTask mode. ...</div><div class='long'><p>Gets whether the activity is to be launched into LockTask mode.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the activity is to be launched into LockTask mode.\n@see Activity#startLockTask()\n@see android.app.admin.DevicePolicyManager#setLockTaskPackages(ComponentName, String[])</p>\n</div></li></ul></div></div></div><div id='method-makeBasic' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-makeBasic' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-makeBasic' class='name expandable'>makeBasic</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a basic ActivityOptions that has no special animation associated with it. ...</div><div class='long'><p>Create a basic ActivityOptions that has no special animation associated with it.\n Other options can still be set.</p>\n</div></div></div><div id='method-makeClipRevealAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-makeClipRevealAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-makeClipRevealAnimation' class='name expandable'>makeClipRevealAnimation</a>( <span class='pre'>source, startX, startY, width, height</span> ) : Object {android.app.ActivityOptions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an ActivityOptions specifying an animation where the new\n activity is revealed from a small originating area o...</div><div class='long'><p>Create an ActivityOptions specifying an animation where the new\n activity is revealed from a small originating area of the screen to\n its final full representation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {View}<div class='sub-desc'><p>The View that the new activity is animating from.  This\n defines the coordinate space for <var>startX</var> and <var>startY</var>.</p>\n</div></li><li><span class='pre'>startX</span> : Number<div class='sub-desc'><p>The x starting location of the new activity, relative to <var>source</var>.</p>\n</div></li><li><span class='pre'>startY</span> : Number<div class='sub-desc'><p>The y starting location of the activity, relative to <var>source</var>.</p>\n</div></li><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The initial width of the new activity.</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>The initial height of the new activity.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActivityOptions}</span><div class='sub-desc'><p>Returns a new ActivityOptions object that you can use to\n supply these options as the options Bundle when starting an activity.</p>\n</div></li></ul></div></div></div><div id='method-makeScaleUpAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-makeScaleUpAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-makeScaleUpAnimation' class='name expandable'>makeScaleUpAnimation</a>( <span class='pre'>source, startX, startY, width, height</span> ) : Object {android.app.ActivityOptions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an ActivityOptions specifying an animation where the new\n activity is scaled from a small originating area of ...</div><div class='long'><p>Create an ActivityOptions specifying an animation where the new\n activity is scaled from a small originating area of the screen to\n its final full representation.</p>\n\n<p> <p>If the Intent this is being used with has not set its\n Intent.setSourceBounds,\n those bounds will be filled in for you based on the initial\n bounds passed in here.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {View}<div class='sub-desc'><p>The View that the new activity is animating from.  This\n defines the coordinate space for <var>startX</var> and <var>startY</var>.</p>\n</div></li><li><span class='pre'>startX</span> : Number<div class='sub-desc'><p>The x starting location of the new activity, relative to <var>source</var>.</p>\n</div></li><li><span class='pre'>startY</span> : Number<div class='sub-desc'><p>The y starting location of the activity, relative to <var>source</var>.</p>\n</div></li><li><span class='pre'>width</span> : Number<div class='sub-desc'><p>The initial width of the new activity.</p>\n</div></li><li><span class='pre'>height</span> : Number<div class='sub-desc'><p>The initial height of the new activity.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActivityOptions}</span><div class='sub-desc'><p>Returns a new ActivityOptions object that you can use to\n supply these options as the options Bundle when starting an activity.</p>\n</div></li></ul></div></div></div><div id='method-makeSceneTransitionAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-makeSceneTransitionAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-makeSceneTransitionAnimation' class='name expandable'>makeSceneTransitionAnimation</a>( <span class='pre'>activity, sharedElements</span> ) : Object {android.app.ActivityOptions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an ActivityOptions to transition between Activities using cross-Activity scene\n animations. ...</div><div class='long'><p>Create an ActivityOptions to transition between Activities using cross-Activity scene\n animations. This method carries the position of multiple shared elements to the started\n Activity. The position of the first element in sharedElements\n will be used as the epicenter for the exit Transition. The position of the associated\n shared element in the launched Activity will be the epicenter of its entering Transition.</p>\n\n<p> <p>This requires android.view.Window.FEATURE_ACTIVITY_TRANSITIONS to be\n enabled on the calling Activity to cause an exit transition. The same must be in\n the called Activity to get an entering transition.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The Activity whose window contains the shared elements.</p>\n</div></li><li><span class='pre'>sharedElements</span> : Object {android.util.Pair[]}<div class='sub-desc'><p>The names of the shared elements to transfer to the called\n                       Activity and their associated Views. The Views must each have\n                       a unique shared element name.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActivityOptions}</span><div class='sub-desc'><p>Returns a new ActivityOptions object that you can use to\n         supply these options as the options Bundle when starting an activity.\n@see android.transition.Transition#setEpicenterCallback(\n          android.transition.Transition.EpicenterCallback)</p>\n</div></li></ul></div></div></div><div id='method-makeTaskLaunchBehind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-makeTaskLaunchBehind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-makeTaskLaunchBehind' class='name expandable'>makeTaskLaunchBehind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If set along with Intent.FLAG_ACTIVITY_NEW_DOCUMENT then the task being launched will not be\n presented to the user b...</div><div class='long'><p>If set along with Intent.FLAG_ACTIVITY_NEW_DOCUMENT then the task being launched will not be\n presented to the user but will instead be only available through the recents task list.\n In addition, the new task wil be affiliated with the launching activity's task.\n Affiliated tasks are grouped together in the recents task list.</p>\n\n<p> <p>This behavior is not supported for activities with launchMode values of\n <code>singleInstance</code> or <code>singleTask</code>.</p>\n</div></div></div><div id='method-makeThumbnailScaleUpAnimation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-makeThumbnailScaleUpAnimation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-makeThumbnailScaleUpAnimation' class='name expandable'>makeThumbnailScaleUpAnimation</a>( <span class='pre'>source, thumbnail, startX, startY</span> ) : Object {android.app.ActivityOptions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an ActivityOptions specifying an animation where a thumbnail\n is scaled from a given position to the new activ...</div><div class='long'><p>Create an ActivityOptions specifying an animation where a thumbnail\n is scaled from a given position to the new activity window that is\n being started.</p>\n\n<p> <p>If the Intent this is being used with has not set its\n Intent.setSourceBounds,\n those bounds will be filled in for you based on the initial\n thumbnail location and size provided here.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>source</span> : Object {View}<div class='sub-desc'><p>The View that this thumbnail is animating from.  This\n defines the coordinate space for <var>startX</var> and <var>startY</var>.</p>\n</div></li><li><span class='pre'>thumbnail</span> : Object {Bitmap}<div class='sub-desc'><p>The bitmap that will be shown as the initial thumbnail\n of the animation.</p>\n</div></li><li><span class='pre'>startX</span> : Number<div class='sub-desc'><p>The x starting location of the bitmap, relative to <var>source</var>.</p>\n</div></li><li><span class='pre'>startY</span> : Number<div class='sub-desc'><p>The y starting location of the bitmap, relative to <var>source</var>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActivityOptions}</span><div class='sub-desc'><p>Returns a new ActivityOptions object that you can use to\n supply these options as the options Bundle when starting an activity.</p>\n</div></li></ul></div></div></div><div id='method-requestUsageTimeReport' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-requestUsageTimeReport' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-requestUsageTimeReport' class='name expandable'>requestUsageTimeReport</a>( <span class='pre'>receiver</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask the system track that time the user spends in the app being launched, and\n report it back once done. ...</div><div class='long'><p>Ask the system track that time the user spends in the app being launched, and\n report it back once done.  The report will be sent to the given receiver, with\n the extras <a href=\"#!/api/android.app.ActivityOptions-property-EXTRA_USAGE_TIME_REPORT\" rel=\"android.app.ActivityOptions-property-EXTRA_USAGE_TIME_REPORT\" class=\"docClass\">EXTRA_USAGE_TIME_REPORT</a> and <a href=\"#!/api/android.app.ActivityOptions-property-EXTRA_USAGE_TIME_REPORT_PACKAGES\" rel=\"android.app.ActivityOptions-property-EXTRA_USAGE_TIME_REPORT_PACKAGES\" class=\"docClass\">EXTRA_USAGE_TIME_REPORT_PACKAGES</a>\n filled in.</p>\n\n<p> <p>The time interval tracked is from launching this activity until the user leaves\n that activity's flow.  They are considered to stay in the flow as long as\n new activities are being launched or returned to from the original flow,\n even if this crosses package or task boundaries.  For example, if the originator\n starts an activity to view an image, and while there the user selects to share,\n which launches their email app in a new task, and they complete the share, the\n time during that entire operation will be included until they finally hit back from\n the original image viewer activity.</p></p>\n\n<p> <p>The user is considered to complete a flow once they switch to another\n activity that is not part of the tracked flow.  This may happen, for example, by\n using the notification shade, launcher, or recents to launch or switch to another\n app.  Simply going in to these navigation elements does not break the flow (although\n the launcher and recents stops time tracking of the session); it is the act of\n going somewhere else that completes the tracking.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>receiver</span> : Object {PendingIntent}<div class='sub-desc'><p>A broadcast receiver that willl receive the report.</p>\n</div></li></ul></div></div></div><div id='method-setAppVerificationBundle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-setAppVerificationBundle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-setAppVerificationBundle' class='name expandable'>setAppVerificationBundle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the Bundle that is provided to the app installer for additional verification\n if the call to Context.startActivit...</div><div class='long'><p>Set the Bundle that is provided to the app installer for additional verification\n if the call to Context.startActivity results in an app being installed.</p>\n\n<p> This Bundle is not provided to any other app besides the installer.</p>\n</div></div></div><div id='method-setLaunchBounds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-setLaunchBounds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-setLaunchBounds' class='name expandable'>setLaunchBounds</a>( <span class='pre'>screenSpacePixelRect</span> ) : Object {android.app.ActivityOptions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the bounds (window size and position) that the activity should be launched in. ...</div><div class='long'><p>Sets the bounds (window size and position) that the activity should be launched in.\n Rect position should be provided in pixels and in screen coordinates.\n Set to {@code null} to explicitly launch fullscreen.\n <p>\n <strong>NOTE:</strong> This value is ignored on devices that don't have\n android.content.pm.PackageManager.FEATURE_FREEFORM_WINDOW_MANAGEMENT or\n android.content.pm.PackageManager.FEATURE_PICTURE_IN_PICTURE enabled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>screenSpacePixelRect</span> : Object {Rect}<div class='sub-desc'><p>launch bounds or {@code null} for fullscreen</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActivityOptions}</span><div class='sub-desc'><p>{@code this} ActivityOptions instance</p>\n</div></li></ul></div></div></div><div id='method-setLaunchDisplayId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-setLaunchDisplayId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-setLaunchDisplayId' class='name expandable'>setLaunchDisplayId</a>( <span class='pre'>launchDisplayId</span> ) : Object {android.app.ActivityOptions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the id of the display where activity should be launched. ...</div><div class='long'><p>Sets the id of the display where activity should be launched.\n An app can launch activities on public displays or private displays that are owned by the app\n or where an app already has activities. Otherwise, trying to launch on a private display\n or providing an invalid display id will result in an exception.\n <p>\n Setting launch display id will be ignored on devices that don't have\n android.content.pm.PackageManager.FEATURE_ACTIVITIES_ON_SECONDARY_DISPLAYS.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>launchDisplayId</span> : Number<div class='sub-desc'><p>The id of the display where the activity should be launched.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActivityOptions}</span><div class='sub-desc'><p>{@code this} ActivityOptions instance.</p>\n</div></li></ul></div></div></div><div id='method-setLockTaskEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-setLockTaskEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-setLockTaskEnabled' class='name expandable'>setLockTaskEnabled</a>( <span class='pre'>lockTaskMode</span> ) : Object {android.app.ActivityOptions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether the activity is to be launched into LockTask mode. ...</div><div class='long'><p>Sets whether the activity is to be launched into LockTask mode.</p>\n\n<p> Use this option to start an activity in LockTask mode. Note that only apps permitted by\n android.app.admin.DevicePolicyManager can run in LockTask mode. Therefore, if\n android.app.admin.DevicePolicyManager.isLockTaskPermitted(String) returns\n {@code false} for the package of the target activity, a SecurityException will be\n thrown during Bundle). This method doesn't affect\n activities that are already running — relaunch the activity to run in lock task mode.</p>\n\n<p> Defaults to {@code false} if not set.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>lockTaskMode</span> : Boolean<div class='sub-desc'><p>{@code true} if the activity is to be launched into LockTask mode.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActivityOptions}</span><div class='sub-desc'><p>{@code this} ActivityOptions instance.\n@see Activity#startLockTask()\n@see android.app.admin.DevicePolicyManager#setLockTaskPackages(ComponentName, String[])</p>\n</div></li></ul></div></div></div><div id='method-toBundle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-toBundle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-toBundle' class='name expandable'>toBundle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the created options as a Bundle, which can be passed to\n android.os.Bundle)\n Context.startActivity(Intent, Bu...</div><div class='long'><p>Returns the created options as a Bundle, which can be passed to\n android.os.Bundle)\n Context.startActivity(Intent, Bundle) and related methods.\n Note that the returned Bundle is still owned by the ActivityOptions\n object; you must not modify it, but can supply it to the startActivity\n methods that take an options Bundle.</p>\n</div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityOptions'>android.app.ActivityOptions</span><br/><a href='source/ActivityOptions.html#android-app-ActivityOptions-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityOptions-method-update' class='name expandable'>update</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Update the current values in this ActivityOptions from those supplied\n in otherOptions. ...</div><div class='long'><p>Update the current values in this ActivityOptions from those supplied\n in <var>otherOptions</var>.  Any values\n defined in <var>otherOptions</var> replace those in the base options.</p>\n</div></div></div></div></div></div></div>","meta":{}});