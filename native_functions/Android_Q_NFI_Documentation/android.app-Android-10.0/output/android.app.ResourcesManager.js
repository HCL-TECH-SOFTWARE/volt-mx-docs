Ext.data.JsonP.android_app_ResourcesManager({"tagname":"class","name":"android.app.ResourcesManager","autodetected":{},"files":[{"filename":"ResourcesManager.js","href":"ResourcesManager.html#android-app-ResourcesManager"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"appendLibAssetForMainAssetPath","tagname":"method","owner":"android.app.ResourcesManager","id":"method-appendLibAssetForMainAssetPath","meta":{}},{"name":"appendLibAssetsForMainAssetPath","tagname":"method","owner":"android.app.ResourcesManager","id":"method-appendLibAssetsForMainAssetPath","meta":{}},{"name":"applyCompatConfigurationLocked","tagname":"method","owner":"android.app.ResourcesManager","id":"method-applyCompatConfigurationLocked","meta":{}},{"name":"applyConfigurationToResourcesLocked","tagname":"method","owner":"android.app.ResourcesManager","id":"method-applyConfigurationToResourcesLocked","meta":{}},{"name":"createBaseActivityResources","tagname":"method","owner":"android.app.ResourcesManager","id":"method-createBaseActivityResources","meta":{}},{"name":"getAdjustedDisplay","tagname":"method","owner":"android.app.ResourcesManager","id":"method-getAdjustedDisplay","meta":{}},{"name":"getConfiguration","tagname":"method","owner":"android.app.ResourcesManager","id":"method-getConfiguration","meta":{}},{"name":"getInstance","tagname":"method","owner":"android.app.ResourcesManager","id":"method-getInstance","meta":{}},{"name":"getResources","tagname":"method","owner":"android.app.ResourcesManager","id":"method-getResources","meta":{}},{"name":"invalidatePath","tagname":"method","owner":"android.app.ResourcesManager","id":"method-invalidatePath","meta":{}},{"name":"updateResourcesForActivity","tagname":"method","owner":"android.app.ResourcesManager","id":"method-updateResourcesForActivity","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.ResourcesManager","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.ResourcesManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ResourcesManager.html#android-app-ResourcesManager' target='_blank'>ResourcesManager.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-appendLibAssetForMainAssetPath' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-appendLibAssetForMainAssetPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-appendLibAssetForMainAssetPath' class='name expandable'>appendLibAssetForMainAssetPath</a>( <span class='pre'>assetPath, libAsset</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the library asset path to any ResourcesImpl object that contains the main\n assetPath. ...</div><div class='long'><p>Appends the library asset path to any ResourcesImpl object that contains the main\n assetPath.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>assetPath</span> : String<div class='sub-desc'><p>The main asset path for which to add the library asset path.</p>\n</div></li><li><span class='pre'>libAsset</span> : String<div class='sub-desc'><p>The library asset path to add.</p>\n</div></li></ul></div></div></div><div id='method-appendLibAssetsForMainAssetPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-appendLibAssetsForMainAssetPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-appendLibAssetsForMainAssetPath' class='name expandable'>appendLibAssetsForMainAssetPath</a>( <span class='pre'>assetPath, libAssets</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends the library asset paths to any ResourcesImpl object that contains the main\n assetPath. ...</div><div class='long'><p>Appends the library asset paths to any ResourcesImpl object that contains the main\n assetPath.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>assetPath</span> : String<div class='sub-desc'><p>The main asset path for which to add the library asset path.</p>\n</div></li><li><span class='pre'>libAssets</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The library asset paths to add.</p>\n</div></li></ul></div></div></div><div id='method-applyCompatConfigurationLocked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-applyCompatConfigurationLocked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-applyCompatConfigurationLocked' class='name expandable'>applyCompatConfigurationLocked</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-applyConfigurationToResourcesLocked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-applyConfigurationToResourcesLocked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-applyConfigurationToResourcesLocked' class='name expandable'>applyConfigurationToResourcesLocked</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-createBaseActivityResources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-createBaseActivityResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-createBaseActivityResources' class='name expandable'>createBaseActivityResources</a>( <span class='pre'>activityToken, resDir, splitResDirs, overlayDirs, libDirs, displayId, overrideConfig, compatInfo, classLoader</span> ) : Object {android.content.res.Resources}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates base resources for an Activity. ...</div><div class='long'><p>Creates base resources for an Activity. Calls to\n String, String[], String[], String[], int, Configuration,\n CompatibilityInfo, ClassLoader) with the same activityToken will have their override\n configurations merged with the one specified here.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activityToken</span> : Object {IBinder}<div class='sub-desc'><p>Represents an Activity.</p>\n</div></li><li><span class='pre'>resDir</span> : String<div class='sub-desc'><p>The base resource path. Can be null (only framework resources will be loaded).</p>\n</div></li><li><span class='pre'>splitResDirs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of split resource paths. Can be null.</p>\n</div></li><li><span class='pre'>overlayDirs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of overlay paths. Can be null.</p>\n</div></li><li><span class='pre'>libDirs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of resource library paths. Can be null.</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The ID of the display for which to create the resources.</p>\n</div></li><li><span class='pre'>overrideConfig</span> : Object {Configuration}<div class='sub-desc'><p>The configuration to apply on top of the base configuration. Can be\n                       null. This provides the base override for this Activity.</p>\n</div></li><li><span class='pre'>compatInfo</span> : Object {CompatibilityInfo}<div class='sub-desc'><p>The compatibility settings to use. Cannot be null. A default to use is\n                   CompatibilityInfo.DEFAULT_COMPATIBILITY_INFO.</p>\n</div></li><li><span class='pre'>classLoader</span> : Object {ClassLoader}<div class='sub-desc'><p>The class loader to use when inflating Resources. If null, the\n                    ClassLoader.getSystemClassLoader() is used.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.res.Resources}</span><div class='sub-desc'><p>a Resources object from which to access resources.</p>\n</div></li></ul></div></div></div><div id='method-getAdjustedDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-getAdjustedDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-getAdjustedDisplay' class='name expandable'>getAdjustedDisplay</a>( <span class='pre'>displayId, resources</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an adjusted Display object based on the inputs or null if display isn't\n available. ...</div><div class='long'><p>Returns an adjusted Display object based on the inputs or null if display isn't\n available.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>display Id.</p>\n</div></li><li><span class='pre'>resources</span> : Object {Resources}<div class='sub-desc'><p>The Resources backing the display adjustments.</p>\n</div></li></ul></div></div></div><div id='method-getConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-getConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-getConfiguration' class='name expandable'>getConfiguration</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getResources' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-getResources' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-getResources' class='name expandable'>getResources</a>( <span class='pre'>activityToken, resDir, splitResDirs, overlayDirs, libDirs, displayId, overrideConfig, compatInfo, classLoader</span> ) : Object {android.content.res.Resources}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets or creates a new Resources object associated with the IBinder token. ...</div><div class='long'><p>Gets or creates a new Resources object associated with the IBinder token. References returned\n by this method live as long as the Activity, meaning they can be cached and used by the\n Activity even after a configuration change. If any other parameter is changed\n (resDir, splitResDirs, overrideConfig) for a given Activity, the same Resources object\n is updated and handed back to the caller. However, changing the class loader will result in a\n new Resources object.\n <p/>\n If activityToken is null, a cached Resources object will be returned if it matches the\n input parameters. Otherwise a new Resources object that satisfies these parameters is\n returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activityToken</span> : Object {IBinder}<div class='sub-desc'><p>Represents an Activity. If null, global resources are assumed.</p>\n</div></li><li><span class='pre'>resDir</span> : String<div class='sub-desc'><p>The base resource path. Can be null (only framework resources will be loaded).</p>\n</div></li><li><span class='pre'>splitResDirs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of split resource paths. Can be null.</p>\n</div></li><li><span class='pre'>overlayDirs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of overlay paths. Can be null.</p>\n</div></li><li><span class='pre'>libDirs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>An array of resource library paths. Can be null.</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>The ID of the display for which to create the resources.</p>\n</div></li><li><span class='pre'>overrideConfig</span> : Object {Configuration}<div class='sub-desc'><p>The configuration to apply on top of the base configuration. Can be\n null. Mostly used with Activities that are in multi-window which may override width and\n height properties from the base config.</p>\n</div></li><li><span class='pre'>compatInfo</span> : Object {CompatibilityInfo}<div class='sub-desc'><p>The compatibility settings to use. Cannot be null. A default to use is\n CompatibilityInfo.DEFAULT_COMPATIBILITY_INFO.</p>\n</div></li><li><span class='pre'>classLoader</span> : Object {ClassLoader}<div class='sub-desc'><p>The class loader to use when inflating Resources. If null, the\n ClassLoader.getSystemClassLoader() is used.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.res.Resources}</span><div class='sub-desc'><p>a Resources object from which to access resources.</p>\n</div></li></ul></div></div></div><div id='method-invalidatePath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-invalidatePath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-invalidatePath' class='name expandable'>invalidatePath</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Invalidate and destroy any resources that reference content under the\n given filesystem path. ...</div><div class='long'><p>Invalidate and destroy any resources that reference content under the\n given filesystem path. Typically used when unmounting a storage device to\n try as hard as possible to release any open FDs.</p>\n</div></div></div><div id='method-updateResourcesForActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ResourcesManager'>android.app.ResourcesManager</span><br/><a href='source/ResourcesManager.html#android-app-ResourcesManager-method-updateResourcesForActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ResourcesManager-method-updateResourcesForActivity' class='name expandable'>updateResourcesForActivity</a>( <span class='pre'>activityToken, overrideConfig, displayId, movedToDifferentDisplay</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates an Activity's Resources object with overrideConfig. ...</div><div class='long'><p>Updates an Activity's Resources object with overrideConfig. The Resources object\n that was previously returned by\n String, String[], String[], String[], int, Configuration,\n CompatibilityInfo, ClassLoader) is\n still valid and will have the updated configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activityToken</span> : Object {IBinder}<div class='sub-desc'><p>The Activity token.</p>\n</div></li><li><span class='pre'>overrideConfig</span> : Object {Configuration}<div class='sub-desc'><p>The configuration override to update.</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>Id of the display where activity currently resides.</p>\n</div></li><li><span class='pre'>movedToDifferentDisplay</span> : Boolean<div class='sub-desc'><p>Indicates if the activity was moved to different display.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});