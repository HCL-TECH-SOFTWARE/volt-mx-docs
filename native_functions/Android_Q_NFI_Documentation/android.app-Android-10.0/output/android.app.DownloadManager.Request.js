Ext.data.JsonP.android_app_DownloadManager_Request({"tagname":"class","name":"android.app.DownloadManager.Request","autodetected":{},"files":[{"filename":"Request.js","href":"Request.html#android-app-DownloadManager-Request"}],"extends":"java.lang.Object","members":[{"name":"NETWORK_MOBILE","tagname":"property","owner":"android.app.DownloadManager.Request","id":"property-NETWORK_MOBILE","meta":{}},{"name":"NETWORK_WIFI","tagname":"property","owner":"android.app.DownloadManager.Request","id":"property-NETWORK_WIFI","meta":{}},{"name":"VISIBILITY_HIDDEN","tagname":"property","owner":"android.app.DownloadManager.Request","id":"property-VISIBILITY_HIDDEN","meta":{}},{"name":"VISIBILITY_VISIBLE","tagname":"property","owner":"android.app.DownloadManager.Request","id":"property-VISIBILITY_VISIBLE","meta":{}},{"name":"VISIBILITY_VISIBLE_NOTIFY_COMPLETED","tagname":"property","owner":"android.app.DownloadManager.Request","id":"property-VISIBILITY_VISIBLE_NOTIFY_COMPLETED","meta":{}},{"name":"VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION","tagname":"property","owner":"android.app.DownloadManager.Request","id":"property-VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION","meta":{}},{"name":"addRequestHeader","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-addRequestHeader","meta":{}},{"name":"allowScanningByMediaScanner","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-allowScanningByMediaScanner","meta":{"deprecated":{"text":"<p>Starting in Q, this value is ignored. Files downloaded to\n directories owned by applications (e.g. Context.getExternalFilesDir(String))\n will not be scanned by MediaScanner and the rest will be scanned.</p>\n"}}},{"name":"setAllowedNetworkTypes","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setAllowedNetworkTypes","meta":{}},{"name":"setAllowedOverMetered","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setAllowedOverMetered","meta":{}},{"name":"setAllowedOverRoaming","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setAllowedOverRoaming","meta":{}},{"name":"setDescription","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setDescription","meta":{}},{"name":"setDestinationInExternalFilesDir","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setDestinationInExternalFilesDir","meta":{}},{"name":"setDestinationInExternalPublicDir","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setDestinationInExternalPublicDir","meta":{}},{"name":"setDestinationUri","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setDestinationUri","meta":{}},{"name":"setMimeType","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setMimeType","meta":{}},{"name":"setNotificationVisibility","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setNotificationVisibility","meta":{}},{"name":"setRequiresCharging","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setRequiresCharging","meta":{}},{"name":"setRequiresDeviceIdle","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setRequiresDeviceIdle","meta":{}},{"name":"setShowRunningNotification","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setShowRunningNotification","meta":{"deprecated":{"text":"<p>use setNotificationVisibility(int)</p>\n"}}},{"name":"setTitle","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setTitle","meta":{}},{"name":"setVisibleInDownloadsUi","tagname":"method","owner":"android.app.DownloadManager.Request","id":"method-setVisibleInDownloadsUi","meta":{"deprecated":{"text":"<p>Starting in Q, this value is ignored. Only files downloaded to\n public Downloads directory (as returned by\n Environment.getExternalStoragePublicDirectory(String) with\n Environment.DIRECTORY_DOWNLOADS) will be visible in system's Downloads UI\n and the rest will not be visible.\n (e.g. Context.getExternalFilesDir(String)) will not be visible.</p>\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.DownloadManager.Request","short_doc":"This class contains all the information necessary to request a new download. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.DownloadManager.Request</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Request.html#android-app-DownloadManager-Request' target='_blank'>Request.js</a></div></pre><div class='doc-contents'><p>This class contains all the information necessary to request a new download. The URI is the\n only required parameter.</p>\n\n<p> Note that the default download destination is a shared volume where the system might delete\n your file if it needs to reclaim space for system use. If this is a problem, use a location\n on external storage (see <a href=\"#!/api/android.app.DownloadManager.Request-method-setDestinationUri\" rel=\"android.app.DownloadManager.Request-method-setDestinationUri\" class=\"docClass\">setDestinationUri</a>(Uri).</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-NETWORK_MOBILE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-property-NETWORK_MOBILE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-property-NETWORK_MOBILE' class='name expandable'>NETWORK_MOBILE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bit flag for setAllowedNetworkTypes corresponding to\nConnectivityManager.TYPE_MOBILE. ...</div><div class='long'><p>Bit flag for <a href=\"#!/api/android.app.DownloadManager.Request-method-setAllowedNetworkTypes\" rel=\"android.app.DownloadManager.Request-method-setAllowedNetworkTypes\" class=\"docClass\">setAllowedNetworkTypes</a> corresponding to\nConnectivityManager.TYPE_MOBILE.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-NETWORK_WIFI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-property-NETWORK_WIFI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-property-NETWORK_WIFI' class='name expandable'>NETWORK_WIFI</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Bit flag for setAllowedNetworkTypes corresponding to\nConnectivityManager.TYPE_WIFI. ...</div><div class='long'><p>Bit flag for <a href=\"#!/api/android.app.DownloadManager.Request-method-setAllowedNetworkTypes\" rel=\"android.app.DownloadManager.Request-method-setAllowedNetworkTypes\" class=\"docClass\">setAllowedNetworkTypes</a> corresponding to\nConnectivityManager.TYPE_WIFI.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-VISIBILITY_HIDDEN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-property-VISIBILITY_HIDDEN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-property-VISIBILITY_HIDDEN' class='name expandable'>VISIBILITY_HIDDEN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This download doesn't show in the UI or in the notifications. ...</div><div class='long'><p>This download doesn't show in the UI or in the notifications.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-VISIBILITY_VISIBLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-property-VISIBILITY_VISIBLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-property-VISIBILITY_VISIBLE' class='name expandable'>VISIBILITY_VISIBLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This download is visible but only shows in the notifications\nwhile it's in progress. ...</div><div class='long'><p>This download is visible but only shows in the notifications\nwhile it's in progress.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-VISIBILITY_VISIBLE_NOTIFY_COMPLETED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-property-VISIBILITY_VISIBLE_NOTIFY_COMPLETED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-property-VISIBILITY_VISIBLE_NOTIFY_COMPLETED' class='name expandable'>VISIBILITY_VISIBLE_NOTIFY_COMPLETED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This download is visible and shows in the notifications while\nin progress and after completion. ...</div><div class='long'><p>This download is visible and shows in the notifications while\nin progress and after completion.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-property-VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-property-VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION' class='name expandable'>VISIBILITY_VISIBLE_NOTIFY_ONLY_COMPLETION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>This download shows in the notifications after completion ONLY. ...</div><div class='long'><p>This download shows in the notifications after completion ONLY.\nIt is usuable only with\nString,\nboolean, String, String, long, boolean).</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addRequestHeader' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-addRequestHeader' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-addRequestHeader' class='name expandable'>addRequestHeader</a>( <span class='pre'>header, value</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Add an HTTP header to be included with the download request. ...</div><div class='long'><p>Add an HTTP header to be included with the download request.  The header will be added to\n the end of the list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>header</span> : String<div class='sub-desc'><p>HTTP header name</p>\n</div></li><li><span class='pre'>value</span> : String<div class='sub-desc'><p>header value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object\n@see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\">HTTP/1.1\n      Message Headers</a></p>\n</div></li></ul></div></div></div><div id='method-allowScanningByMediaScanner' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-allowScanningByMediaScanner' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-allowScanningByMediaScanner' class='name expandable'>allowScanningByMediaScanner</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>If the file to be downloaded is to be scanned by MediaScanner, this method\n should be called before android.app.Downl...</div><div class='long'><p>If the file to be downloaded is to be scanned by MediaScanner, this method\n should be called before android.app.DownloadManager.enqueue(Request) is called.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Starting in Q, this value is ignored. Files downloaded to\n directories owned by applications (e.g. Context.getExternalFilesDir(String))\n will not be scanned by MediaScanner and the rest will be scanned.</p>\n\n        </div>\n</div></div></div><div id='method-setAllowedNetworkTypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setAllowedNetworkTypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setAllowedNetworkTypes' class='name expandable'>setAllowedNetworkTypes</a>( <span class='pre'>flags</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Restrict the types of networks over which this download may proceed. ...</div><div class='long'><p>Restrict the types of networks over which this download may proceed.\n By default, all network types are allowed. Consider using\n <a href=\"#!/api/android.app.DownloadManager.Request-method-setAllowedOverMetered\" rel=\"android.app.DownloadManager.Request-method-setAllowedOverMetered\" class=\"docClass\">setAllowedOverMetered</a>(boolean) instead, since it's more\n flexible.\n <p>\n As of android.os.Build.VERSION_CODES.N, setting only the\n <a href=\"#!/api/android.app.DownloadManager.Request-property-NETWORK_WIFI\" rel=\"android.app.DownloadManager.Request-property-NETWORK_WIFI\" class=\"docClass\">NETWORK_WIFI</a> flag here is equivalent to calling\n <a href=\"#!/api/android.app.DownloadManager.Request-method-setAllowedOverMetered\" rel=\"android.app.DownloadManager.Request-method-setAllowedOverMetered\" class=\"docClass\">setAllowedOverMetered</a>(boolean) with {@code false}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>any combination of the NETWORK_* bit flags.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setAllowedOverMetered' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setAllowedOverMetered' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setAllowedOverMetered' class='name expandable'>setAllowedOverMetered</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set whether this download may proceed over a metered network\n connection. ...</div><div class='long'><p>Set whether this download may proceed over a metered network\n connection. By default, metered networks are allowed.\n@see ConnectivityManager#isActiveNetworkMetered()</p>\n</div></div></div><div id='method-setAllowedOverRoaming' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setAllowedOverRoaming' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setAllowedOverRoaming' class='name expandable'>setAllowedOverRoaming</a>( <span class='pre'>allowed</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set whether this download may proceed over a roaming connection. ...</div><div class='long'><p>Set whether this download may proceed over a roaming connection.  By default, roaming is\n allowed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>allowed</span> : Boolean<div class='sub-desc'><p>whether to allow a roaming connection to be used</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setDescription' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setDescription' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setDescription' class='name expandable'>setDescription</a>( <span class='pre'></span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a description of this download, to be displayed in notifications (if enabled) ...</div><div class='long'><p>Set a description of this download, to be displayed in notifications (if enabled)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setDestinationInExternalFilesDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setDestinationInExternalFilesDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setDestinationInExternalFilesDir' class='name expandable'>setDestinationInExternalFilesDir</a>( <span class='pre'>context, dirType, subPath</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the local destination for the downloaded file to a path within\n the application's external files directory (as re...</div><div class='long'><p>Set the local destination for the downloaded file to a path within\n the application's external files directory (as returned by\n Context.getExternalFilesDir(String).\n <p>\n The downloaded file is not scanned by MediaScanner. But it can be\n made scannable by calling <a href=\"#!/api/android.app.DownloadManager.Request-method-allowScanningByMediaScanner\" rel=\"android.app.DownloadManager.Request-method-allowScanningByMediaScanner\" class=\"docClass\">allowScanningByMediaScanner</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>the Context to use in determining the external\n            files directory</p>\n</div></li><li><span class='pre'>dirType</span> : String<div class='sub-desc'><p>the directory type to pass to\n            Context.getExternalFilesDir(String)</p>\n</div></li><li><span class='pre'>subPath</span> : String<div class='sub-desc'><p>the path within the external directory, including the\n            destination filename</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If the external storage directory\n             cannot be found or created.</p>\n</div></li></ul></div></div></div><div id='method-setDestinationInExternalPublicDir' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setDestinationInExternalPublicDir' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setDestinationInExternalPublicDir' class='name expandable'>setDestinationInExternalPublicDir</a>( <span class='pre'>dirType, subPath</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the local destination for the downloaded file to a path within\n the public external storage directory (as returne...</div><div class='long'><p>Set the local destination for the downloaded file to a path within\n the public external storage directory (as returned by\n Environment.getExternalStoragePublicDirectory(String)).\n <p>\n The downloaded file is not scanned by MediaScanner. But it can be\n made scannable by calling <a href=\"#!/api/android.app.DownloadManager.Request-method-allowScanningByMediaScanner\" rel=\"android.app.DownloadManager.Request-method-allowScanningByMediaScanner\" class=\"docClass\">allowScanningByMediaScanner</a>().</p>\n\n<p> <p> For applications targeting android.os.Build.VERSION_CODES.Q or above,\n WRITE_EXTERNAL_STORAGE\n permission is not needed and the {@code dirType} must be one of the known public\n directories like Environment.DIRECTORY_DOWNLOADS,\n Environment.DIRECTORY_PICTURES, Environment.DIRECTORY_MOVIES, etc.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dirType</span> : String<div class='sub-desc'><p>the directory type to pass to Environment.getExternalStoragePublicDirectory(String)</p>\n</div></li><li><span class='pre'>subPath</span> : String<div class='sub-desc'><p>the path within the external directory, including the\n            destination filename</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException If the external storage directory\n             cannot be found or created.</p>\n</div></li></ul></div></div></div><div id='method-setDestinationUri' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setDestinationUri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setDestinationUri' class='name expandable'>setDestinationUri</a>( <span class='pre'>uri</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the local destination for the downloaded file. ...</div><div class='long'><p>Set the local destination for the downloaded file. Must be a file URI to a path on\n external storage, and the calling application must have the WRITE_EXTERNAL_STORAGE\n permission.\n <p>\n The downloaded file is not scanned by MediaScanner.\n But it can be made scannable by calling <a href=\"#!/api/android.app.DownloadManager.Request-method-allowScanningByMediaScanner\" rel=\"android.app.DownloadManager.Request-method-allowScanningByMediaScanner\" class=\"docClass\">allowScanningByMediaScanner</a>().\n <p>\n By default, downloads are saved to a generated filename in the shared download cache and\n may be deleted by the system at any time to reclaim space.</p>\n\n<p> <p> For applications targeting android.os.Build.VERSION_CODES.Q or above,\n WRITE EXTERNAL_STORAGE\n permission is not needed and the {@code uri} must refer to a path within the\n directories owned by the application (e.g. Context.getExternalFilesDir(String))\n or a path within the top-level Downloads directory (as returned by\n Environment.getExternalStoragePublicDirectory(String) with\n Environment.DIRECTORY_DOWNLOADS).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>a file Uri indicating the destination for the downloaded file.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setMimeType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setMimeType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setMimeType' class='name expandable'>setMimeType</a>( <span class='pre'></span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the MIME content type of this download. ...</div><div class='long'><p>Set the MIME content type of this download.  This will override the content type declared\n in the server's response.\n@see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec3.html#sec3.7\">HTTP/1.1\n      Media Types</a></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setNotificationVisibility' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setNotificationVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setNotificationVisibility' class='name expandable'>setNotificationVisibility</a>( <span class='pre'>visibility</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Control whether a system notification is posted by the download manager while this\n download is running or when it is...</div><div class='long'><p>Control whether a system notification is posted by the download manager while this\n download is running or when it is completed.\n If enabled, the download manager posts notifications about downloads\n through the system <a href=\"#!/api/android.app.NotificationManager\" rel=\"android.app.NotificationManager\" class=\"docClass\">android.app.NotificationManager</a>.\n By default, a notification is shown only when the download is in progress.</p>\n\n<p><p>\n It can take the following values: <a href=\"#!/api/android.app.DownloadManager.Request-property-VISIBILITY_HIDDEN\" rel=\"android.app.DownloadManager.Request-property-VISIBILITY_HIDDEN\" class=\"docClass\">VISIBILITY_HIDDEN</a>,\n <a href=\"#!/api/android.app.DownloadManager.Request-property-VISIBILITY_VISIBLE\" rel=\"android.app.DownloadManager.Request-property-VISIBILITY_VISIBLE\" class=\"docClass\">VISIBILITY_VISIBLE</a>,\n <a href=\"#!/api/android.app.DownloadManager.Request-property-VISIBILITY_VISIBLE_NOTIFY_COMPLETED\" rel=\"android.app.DownloadManager.Request-property-VISIBILITY_VISIBLE_NOTIFY_COMPLETED\" class=\"docClass\">VISIBILITY_VISIBLE_NOTIFY_COMPLETED</a>.\n<p>\n If set to <a href=\"#!/api/android.app.DownloadManager.Request-property-VISIBILITY_HIDDEN\" rel=\"android.app.DownloadManager.Request-property-VISIBILITY_HIDDEN\" class=\"docClass\">VISIBILITY_HIDDEN</a>, this requires the permission\n android.permission.DOWNLOAD_WITHOUT_NOTIFICATION.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>visibility</span> : Number<div class='sub-desc'><p>the visibility setting value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setRequiresCharging' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setRequiresCharging' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setRequiresCharging' class='name expandable'>setRequiresCharging</a>( <span class='pre'>requiresCharging</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specify that to run this download, the device needs to be plugged in. ...</div><div class='long'><p>Specify that to run this download, the device needs to be plugged in.\n This defaults to false.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requiresCharging</span> : Boolean<div class='sub-desc'><p>Whether or not the device is plugged in.\n@see android.app.job.JobInfo.Builder#setRequiresCharging(boolean)</p>\n</div></li></ul></div></div></div><div id='method-setRequiresDeviceIdle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setRequiresDeviceIdle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setRequiresDeviceIdle' class='name expandable'>setRequiresDeviceIdle</a>( <span class='pre'>requiresDeviceIdle</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specify that to run, the download needs the device to be in idle\n mode. ...</div><div class='long'><p>Specify that to run, the download needs the device to be in idle\n mode. This defaults to false.\n <p>\n Idle mode is a loose definition provided by the system, which means\n that the device is not in use, and has not been in use for some time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requiresDeviceIdle</span> : Boolean<div class='sub-desc'><p>Whether or not the device need be within an\n            idle maintenance window.\n@see android.app.job.JobInfo.Builder#setRequiresDeviceIdle(boolean)</p>\n</div></li></ul></div></div></div><div id='method-setShowRunningNotification' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setShowRunningNotification' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setShowRunningNotification' class='name expandable'>setShowRunningNotification</a>( <span class='pre'>show</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Control whether a system notification is posted by the download manager while this\n download is running. ...</div><div class='long'><p>Control whether a system notification is posted by the download manager while this\n download is running. If enabled, the download manager posts notifications about downloads\n through the system <a href=\"#!/api/android.app.NotificationManager\" rel=\"android.app.NotificationManager\" class=\"docClass\">android.app.NotificationManager</a>. By default, a notification is\n shown.</p>\n\n<p> If set to false, this requires the permission\n android.permission.DOWNLOAD_WITHOUT_NOTIFICATION.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>use setNotificationVisibility(int)</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>show</span> : Boolean<div class='sub-desc'><p>whether the download manager should show a notification for this download.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setTitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setTitle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setTitle' class='name expandable'>setTitle</a>( <span class='pre'></span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the title of this download, to be displayed in notifications (if enabled). ...</div><div class='long'><p>Set the title of this download, to be displayed in notifications (if enabled).  If no\n title is given, a default one will be assigned based on the download filename, once the\n download starts.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div><div id='method-setVisibleInDownloadsUi' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.DownloadManager.Request'>android.app.DownloadManager.Request</span><br/><a href='source/Request.html#android-app-DownloadManager-Request-method-setVisibleInDownloadsUi' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.DownloadManager.Request-method-setVisibleInDownloadsUi' class='name expandable'>setVisibleInDownloadsUi</a>( <span class='pre'>isVisible</span> ) : Object {android.app.DownloadManager.Request}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Set whether this download should be displayed in the system's Downloads UI. ...</div><div class='long'><p>Set whether this download should be displayed in the system's Downloads UI. True by\n default.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Starting in Q, this value is ignored. Only files downloaded to\n public Downloads directory (as returned by\n Environment.getExternalStoragePublicDirectory(String) with\n Environment.DIRECTORY_DOWNLOADS) will be visible in system's Downloads UI\n and the rest will not be visible.\n (e.g. Context.getExternalFilesDir(String)) will not be visible.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isVisible</span> : Boolean<div class='sub-desc'><p>whether to display this download in the Downloads UI</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.DownloadManager.Request}</span><div class='sub-desc'><p>this object</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});