Ext.data.JsonP.android_app_Instrumentation({"tagname":"class","name":"android.app.Instrumentation","autodetected":{},"files":[{"filename":"Instrumentation.js","href":"Instrumentation.html#android-app-Instrumentation"}],"extends":"java.lang.Object","members":[{"name":"REPORT_KEY_IDENTIFIER","tagname":"property","owner":"android.app.Instrumentation","id":"property-REPORT_KEY_IDENTIFIER","meta":{}},{"name":"REPORT_KEY_STREAMRESULT","tagname":"property","owner":"android.app.Instrumentation","id":"property-REPORT_KEY_STREAMRESULT","meta":{}},{"name":"acquireLooperManager","tagname":"method","owner":"android.app.Instrumentation","id":"method-acquireLooperManager","meta":{}},{"name":"addMonitor","tagname":"method","owner":"android.app.Instrumentation","id":"method-addMonitor","meta":{}},{"name":"addResults","tagname":"method","owner":"android.app.Instrumentation","id":"method-addResults","meta":{}},{"name":"callActivityOnCreate","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnCreate","meta":{}},{"name":"callActivityOnDestroy","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnDestroy","meta":{}},{"name":"callActivityOnPause","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnPause","meta":{}},{"name":"callActivityOnPostCreate","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnPostCreate","meta":{}},{"name":"callActivityOnRestart","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnRestart","meta":{}},{"name":"callActivityOnRestoreInstanceState","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnRestoreInstanceState","meta":{}},{"name":"callActivityOnResume","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnResume","meta":{}},{"name":"callActivityOnSaveInstanceState","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnSaveInstanceState","meta":{}},{"name":"callActivityOnStart","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnStart","meta":{}},{"name":"callActivityOnStop","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnStop","meta":{}},{"name":"callActivityOnUserLeaving","tagname":"method","owner":"android.app.Instrumentation","id":"method-callActivityOnUserLeaving","meta":{}},{"name":"callApplicationOnCreate","tagname":"method","owner":"android.app.Instrumentation","id":"method-callApplicationOnCreate","meta":{}},{"name":"checkMonitorHit","tagname":"method","owner":"android.app.Instrumentation","id":"method-checkMonitorHit","meta":{}},{"name":"endPerformanceSnapshot","tagname":"method","owner":"android.app.Instrumentation","id":"method-endPerformanceSnapshot","meta":{}},{"name":"execStartActivities","tagname":"method","owner":"android.app.Instrumentation","id":"method-execStartActivities","meta":{}},{"name":"execStartActivitiesAsUser","tagname":"method","owner":"android.app.Instrumentation","id":"method-execStartActivitiesAsUser","meta":{}},{"name":"execStartActivity","tagname":"method","owner":"android.app.Instrumentation","id":"method-execStartActivity","meta":{}},{"name":"finish","tagname":"method","owner":"android.app.Instrumentation","id":"method-finish","meta":{}},{"name":"getAllocCounts","tagname":"method","owner":"android.app.Instrumentation","id":"method-getAllocCounts","meta":{}},{"name":"getBinderCounts","tagname":"method","owner":"android.app.Instrumentation","id":"method-getBinderCounts","meta":{}},{"name":"getComponentName","tagname":"method","owner":"android.app.Instrumentation","id":"method-getComponentName","meta":{}},{"name":"getContext","tagname":"method","owner":"android.app.Instrumentation","id":"method-getContext","meta":{}},{"name":"getProcessName","tagname":"method","owner":"android.app.Instrumentation","id":"method-getProcessName","meta":{}},{"name":"getTargetContext","tagname":"method","owner":"android.app.Instrumentation","id":"method-getTargetContext","meta":{}},{"name":"getUiAutomation","tagname":"method","owner":"android.app.Instrumentation","id":"method-getUiAutomation","meta":{}},{"name":"invokeContextMenuAction","tagname":"method","owner":"android.app.Instrumentation","id":"method-invokeContextMenuAction","meta":{}},{"name":"invokeMenuActionSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-invokeMenuActionSync","meta":{}},{"name":"isProfiling","tagname":"method","owner":"android.app.Instrumentation","id":"method-isProfiling","meta":{}},{"name":"newActivity","tagname":"method","owner":"android.app.Instrumentation","id":"method-newActivity","meta":{}},{"name":"newApplication","tagname":"method","owner":"android.app.Instrumentation","id":"method-newApplication","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.app.Instrumentation","id":"method-onCreate","meta":{}},{"name":"onDestroy","tagname":"method","owner":"android.app.Instrumentation","id":"method-onDestroy","meta":{}},{"name":"onException","tagname":"method","owner":"android.app.Instrumentation","id":"method-onException","meta":{}},{"name":"onStart","tagname":"method","owner":"android.app.Instrumentation","id":"method-onStart","meta":{}},{"name":"removeMonitor","tagname":"method","owner":"android.app.Instrumentation","id":"method-removeMonitor","meta":{}},{"name":"runOnMainSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-runOnMainSync","meta":{}},{"name":"sendCharacterSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-sendCharacterSync","meta":{}},{"name":"sendKeyDownUpSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-sendKeyDownUpSync","meta":{}},{"name":"sendKeySync","tagname":"method","owner":"android.app.Instrumentation","id":"method-sendKeySync","meta":{}},{"name":"sendPointerSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-sendPointerSync","meta":{}},{"name":"sendStatus","tagname":"method","owner":"android.app.Instrumentation","id":"method-sendStatus","meta":{}},{"name":"sendStringSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-sendStringSync","meta":{}},{"name":"sendTrackballEventSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-sendTrackballEventSync","meta":{}},{"name":"setAutomaticPerformanceSnapshots","tagname":"method","owner":"android.app.Instrumentation","id":"method-setAutomaticPerformanceSnapshots","meta":{}},{"name":"setInTouchMode","tagname":"method","owner":"android.app.Instrumentation","id":"method-setInTouchMode","meta":{}},{"name":"start","tagname":"method","owner":"android.app.Instrumentation","id":"method-start","meta":{}},{"name":"startActivitySync","tagname":"method","owner":"android.app.Instrumentation","id":"method-startActivitySync","meta":{}},{"name":"startAllocCounting","tagname":"method","owner":"android.app.Instrumentation","id":"method-startAllocCounting","meta":{}},{"name":"startPerformanceSnapshot","tagname":"method","owner":"android.app.Instrumentation","id":"method-startPerformanceSnapshot","meta":{}},{"name":"startProfiling","tagname":"method","owner":"android.app.Instrumentation","id":"method-startProfiling","meta":{}},{"name":"stopAllocCounting","tagname":"method","owner":"android.app.Instrumentation","id":"method-stopAllocCounting","meta":{}},{"name":"stopProfiling","tagname":"method","owner":"android.app.Instrumentation","id":"method-stopProfiling","meta":{}},{"name":"waitForIdle","tagname":"method","owner":"android.app.Instrumentation","id":"method-waitForIdle","meta":{}},{"name":"waitForIdleSync","tagname":"method","owner":"android.app.Instrumentation","id":"method-waitForIdleSync","meta":{}},{"name":"waitForMonitor","tagname":"method","owner":"android.app.Instrumentation","id":"method-waitForMonitor","meta":{}},{"name":"waitForMonitorWithTimeout","tagname":"method","owner":"android.app.Instrumentation","id":"method-waitForMonitorWithTimeout","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.Instrumentation","short_doc":"Base class for implementing application instrumentation code. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.Instrumentation</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Instrumentation.html#android-app-Instrumentation' target='_blank'>Instrumentation.js</a></div></pre><div class='doc-contents'><p>Base class for implementing application instrumentation code.  When running\n with instrumentation turned on, this class will be instantiated for you\n before any of the application code, allowing you to monitor all of the\n interaction the system has with the application.  An Instrumentation\n implementation is described to the system through an AndroidManifest.xml's\n &lt;instrumentation&gt; tag.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-REPORT_KEY_IDENTIFIER' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-property-REPORT_KEY_IDENTIFIER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-property-REPORT_KEY_IDENTIFIER' class='name expandable'>REPORT_KEY_IDENTIFIER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If included in the status or final bundle sent to an IInstrumentationWatcher, this key\nidentifies the class that is w...</div><div class='long'><p>If included in the status or final bundle sent to an IInstrumentationWatcher, this key\nidentifies the class that is writing the report.  This can be used to provide more structured\nlogging or reporting capabilities in the IInstrumentationWatcher.</p>\n<p>Defaults to: <code>&quot;id&quot;</code></p></div></div></div><div id='property-REPORT_KEY_STREAMRESULT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-property-REPORT_KEY_STREAMRESULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-property-REPORT_KEY_STREAMRESULT' class='name expandable'>REPORT_KEY_STREAMRESULT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>If included in the status or final bundle sent to an IInstrumentationWatcher, this key\nidentifies a string which can ...</div><div class='long'><p>If included in the status or final bundle sent to an IInstrumentationWatcher, this key\nidentifies a string which can simply be printed to the output stream.  Using these streams\nprovides a \"pretty printer\" version of the status &amp; final packets.  Any bundles including\nthis key should also include the complete set of raw key/value pairs, so that the\ninstrumentation can also be launched, and results collected, by an automated system.</p>\n<p>Defaults to: <code>&quot;stream&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-acquireLooperManager' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-acquireLooperManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-acquireLooperManager' class='name expandable'>acquireLooperManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Takes control of the execution of messages on the specified looper until\n TestLooperManager.release is called. ...</div><div class='long'><p>Takes control of the execution of messages on the specified looper until\n TestLooperManager.release is called.</p>\n</div></div></div><div id='method-addMonitor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-addMonitor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-addMonitor' class='name expandable'>addMonitor</a>( <span class='pre'>cls, result, block</span> ) : Object {android.app.Instrumentation.ActivityMonitor}<span class=\"signature\"></span></div><div class='description'><div class='short'>A convenience wrapper for addMonitor(ActivityMonitor) that\n creates a class matching android.app.ActivityMonitor for ...</div><div class='long'><p>A convenience wrapper for <a href=\"#!/api/android.app.Instrumentation-method-addMonitor\" rel=\"android.app.Instrumentation-method-addMonitor\" class=\"docClass\">addMonitor</a>(ActivityMonitor) that\n creates a class matching android.app.ActivityMonitor for you and returns it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : String<div class='sub-desc'><p>The activity class this monitor is responsible for.</p>\n</div></li><li><span class='pre'>result</span> : Object {Instrumentation.ActivityResult}<div class='sub-desc'><p>A canned result to return if the monitor is hit; can\n               be null.</p>\n</div></li><li><span class='pre'>block</span> : Boolean<div class='sub-desc'><p>Controls whether the monitor should block the activity\n              start (returning its canned result) or let the call\n              proceed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Instrumentation.ActivityMonitor}</span><div class='sub-desc'><p>The newly created and added activity monitor.\n@see <a href=\"#!/api/android.app.Instrumentation-method-addMonitor\" rel=\"android.app.Instrumentation-method-addMonitor\" class=\"docClass\">addMonitor</a>(ActivityMonitor)\n@see <a href=\"#!/api/android.app.Instrumentation-method-checkMonitorHit\" rel=\"android.app.Instrumentation-method-checkMonitorHit\" class=\"docClass\">checkMonitorHit</a></p>\n</div></li></ul></div></div></div><div id='method-addResults' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-addResults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-addResults' class='name expandable'>addResults</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report some results in the middle of instrumentation execution. ...</div><div class='long'><p>Report some results in the middle of instrumentation execution.  Later results (including\n those provided by <a href=\"#!/api/android.app.Instrumentation-method-finish\" rel=\"android.app.Instrumentation-method-finish\" class=\"docClass\">finish</a>) will be combined with Bundle.putAll.</p>\n</div></div></div><div id='method-callActivityOnCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnCreate' class='name expandable'>callActivityOnCreate</a>( <span class='pre'>activity, icicle, persistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onCreate\n method. ...</div><div class='long'><p>Perform calling of an activity's <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">android.app.Activity.onCreate</a>\n method.  The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being created.</p>\n</div></li><li><span class='pre'>icicle</span> : Object {Bundle}<div class='sub-desc'><p>The previously frozen state (or null) to pass through to</p>\n</div></li><li><span class='pre'>persistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>The previously persisted state (or null)</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnDestroy' class='name expandable'>callActivityOnDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-callActivityOnPause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnPause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnPause' class='name expandable'>callActivityOnPause</a>( <span class='pre'>activity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onPause method. ...</div><div class='long'><p>Perform calling of an activity's android.app.Activity.onPause method.  The\n default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being paused.</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnPostCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnPostCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnPostCreate' class='name expandable'>callActivityOnPostCreate</a>( <span class='pre'>activity, savedInstanceState, persistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onPostCreate method. ...</div><div class='long'><p>Perform calling of an activity's <a href=\"#!/api/android.app.Activity-method-onPostCreate\" rel=\"android.app.Activity-method-onPostCreate\" class=\"docClass\">android.app.Activity.onPostCreate</a> method.\n The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being created.</p>\n</div></li><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>The previously frozen state (or null) to pass through to\n               onPostCreate().</p>\n</div></li><li><span class='pre'>persistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>The previously persisted state (or null)</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnRestart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnRestart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnRestart' class='name expandable'>callActivityOnRestart</a>( <span class='pre'>activity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onRestart\n method. ...</div><div class='long'><p>Perform calling of an activity's android.app.Activity.onRestart\n method.  The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being restarted.</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnRestoreInstanceState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnRestoreInstanceState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnRestoreInstanceState' class='name expandable'>callActivityOnRestoreInstanceState</a>( <span class='pre'>activity, savedInstanceState, persistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onRestoreInstanceState\n method. ...</div><div class='long'><p>Perform calling of an activity's <a href=\"#!/api/android.app.Activity-method-onRestoreInstanceState\" rel=\"android.app.Activity-method-onRestoreInstanceState\" class=\"docClass\">android.app.Activity.onRestoreInstanceState</a>\n method.  The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being restored.</p>\n</div></li><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>The previously saved state being restored (or null).</p>\n</div></li><li><span class='pre'>persistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>The previously persisted state (or null)</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnResume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnResume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnResume' class='name expandable'>callActivityOnResume</a>( <span class='pre'>activity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onResume method. ...</div><div class='long'><p>Perform calling of an activity's android.app.Activity.onResume method.  The\n default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being resumed.</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnSaveInstanceState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnSaveInstanceState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnSaveInstanceState' class='name expandable'>callActivityOnSaveInstanceState</a>( <span class='pre'>activity, outState, outPersistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onSaveInstanceState\n method. ...</div><div class='long'><p>Perform calling of an activity's <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">android.app.Activity.onSaveInstanceState</a>\n method.  The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being saved.</p>\n</div></li><li><span class='pre'>outState</span> : Object {Bundle}<div class='sub-desc'><p>The bundle to pass to the call.</p>\n</div></li><li><span class='pre'>outPersistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>The persistent bundle to pass to the call.</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnStart' class='name expandable'>callActivityOnStart</a>( <span class='pre'>activity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onStart\n method. ...</div><div class='long'><p>Perform calling of an activity's android.app.Activity.onStart\n method.  The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being started.</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnStop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnStop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnStop' class='name expandable'>callActivityOnStop</a>( <span class='pre'>activity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onStop\n method. ...</div><div class='long'><p>Perform calling of an activity's android.app.Activity.onStop\n method.  The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being stopped.</p>\n</div></li></ul></div></div></div><div id='method-callActivityOnUserLeaving' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callActivityOnUserLeaving' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callActivityOnUserLeaving' class='name expandable'>callActivityOnUserLeaving</a>( <span class='pre'>activity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of an activity's android.app.Activity.onUserLeaveHint method. ...</div><div class='long'><p>Perform calling of an activity's android.app.Activity.onUserLeaveHint method.\n The default implementation simply calls through to that method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity being notified that the user has navigated away</p>\n</div></li></ul></div></div></div><div id='method-callApplicationOnCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-callApplicationOnCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-callApplicationOnCreate' class='name expandable'>callApplicationOnCreate</a>( <span class='pre'>app</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform calling of the application's android.app.Application.onCreate\n method. ...</div><div class='long'><p>Perform calling of the application's <a href=\"#!/api/android.app.Application-method-onCreate\" rel=\"android.app.Application-method-onCreate\" class=\"docClass\">android.app.Application.onCreate</a>\n method.  The default implementation simply calls through to that method.</p>\n\n<p> <p>Note: This method will be called immediately after <a href=\"#!/api/android.app.Instrumentation-method-onCreate\" rel=\"android.app.Instrumentation-method-onCreate\" class=\"docClass\">onCreate</a>(Bundle).\n Often instrumentation tests start their test thread in onCreate(); you\n need to be careful of races between these.  (Well between it and\n everything else, but let's start here.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>app</span> : Object {Application}<div class='sub-desc'><p>The application being created.</p>\n</div></li></ul></div></div></div><div id='method-checkMonitorHit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-checkMonitorHit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-checkMonitorHit' class='name expandable'>checkMonitorHit</a>( <span class='pre'>monitor, minHits</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Test whether an existing android.app.ActivityMonitor has been hit. ...</div><div class='long'><p>Test whether an existing android.app.ActivityMonitor has been hit.  If the\n monitor has been hit at least <var>minHits</var> times, then it will be\n removed from the activity monitor list and true returned.  Otherwise it\n is left as-is and false is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>monitor</span> : Object {Instrumentation.ActivityMonitor}<div class='sub-desc'><p>The ActivityMonitor to check.</p>\n</div></li><li><span class='pre'>minHits</span> : Number<div class='sub-desc'><p>The minimum number of hits required.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the hit count has been reached, else false.\n@see <a href=\"#!/api/android.app.Instrumentation-method-addMonitor\" rel=\"android.app.Instrumentation-method-addMonitor\" class=\"docClass\">addMonitor</a></p>\n</div></li></ul></div></div></div><div id='method-endPerformanceSnapshot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-endPerformanceSnapshot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-endPerformanceSnapshot' class='name expandable'>endPerformanceSnapshot</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-execStartActivities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-execStartActivities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-execStartActivities' class='name expandable'>execStartActivities</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like IBinder, IBinder, android.app.Activity, Intent, int, Bundle),\n but accepts an array of activities to be started. ...</div><div class='long'><p>Like IBinder, IBinder, android.app.Activity, Intent, int, Bundle),\n but accepts an array of activities to be started.  Note that active\n android.app.ActivityMonitor objects only match against the first activity in\n the array.</p>\n\n<p> {@hide}</p>\n</div></div></div><div id='method-execStartActivitiesAsUser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-execStartActivitiesAsUser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-execStartActivitiesAsUser' class='name expandable'>execStartActivitiesAsUser</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Like IBinder, IBinder, android.app.Activity, Intent, int, Bundle),\n but accepts an array of activities to be started. ...</div><div class='long'><p>Like IBinder, IBinder, android.app.Activity, Intent, int, Bundle),\n but accepts an array of activities to be started.  Note that active\n android.app.ActivityMonitor objects only match against the first activity in\n the array.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The corresponding flag ActivityManager.START_CANCELED,\n         ActivityManager.START_SUCCESS etc. indicating whether the launch was\n         successful.</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-execStartActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-execStartActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-execStartActivity' class='name expandable'>execStartActivity</a>( <span class='pre'>who, contextThread, token, target, intent, requestCode</span> ) : Object {android.app.Instrumentation.ActivityResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Like IBinder, IBinder, android.app.Activity, Intent, int, Bundle),\n but for starting as a particular user. ...</div><div class='long'><p>Like IBinder, IBinder, android.app.Activity, Intent, int, Bundle),\n but for starting as a particular user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>who</span> : Object {Context}<div class='sub-desc'><p>The Context from which the activity is being started.</p>\n</div></li><li><span class='pre'>contextThread</span> : Object {IBinder}<div class='sub-desc'><p>The main thread of the Context from which the activity\n                      is being started.</p>\n</div></li><li><span class='pre'>token</span> : Object {IBinder}<div class='sub-desc'><p>Internal token identifying to the system who is starting\n              the activity; may be null.</p>\n</div></li><li><span class='pre'>target</span> : String<div class='sub-desc'><p>Which fragment is performing the start (and thus receiving\n               any result).</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The actual Intent to start.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Identifier for this request's result; less than zero\n                    if the caller is not expecting a result.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Instrumentation.ActivityResult}</span><div class='sub-desc'><p>To force the return of a particular result, return an\n         ActivityResult object containing the desired data; otherwise\n         return null.  The default implementation always returns null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.ActivityNotFoundException\n@see Activity#startActivity(Intent)\n@see Activity#startActivityForResult(Intent, int)\n@see Activity#startActivityFromChild</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-finish' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-finish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-finish' class='name expandable'>finish</a>( <span class='pre'>resultCode, results</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Terminate instrumentation of the application. ...</div><div class='long'><p>Terminate instrumentation of the application.  This will cause the\n application process to exit, removing this instrumentation from the next\n time the application is started.  If multiple processes are currently running\n for this instrumentation, all of those processes will be killed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resultCode</span> : Number<div class='sub-desc'><p>Overall success/failure of instrumentation.</p>\n</div></li><li><span class='pre'>results</span> : Object {Bundle}<div class='sub-desc'><p>Any results to send back to the code that started the\n                instrumentation.</p>\n</div></li></ul></div></div></div><div id='method-getAllocCounts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-getAllocCounts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-getAllocCounts' class='name expandable'>getAllocCounts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a bundle with the current results from the allocation counting. ...</div><div class='long'><p>Returns a bundle with the current results from the allocation counting.</p>\n</div></div></div><div id='method-getBinderCounts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-getBinderCounts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-getBinderCounts' class='name expandable'>getBinderCounts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a bundle with the counts for various binder counts for this process. ...</div><div class='long'><p>Returns a bundle with the counts for various binder counts for this process. Currently the only two that are\n reported are the number of send and the number of received transactions.</p>\n</div></div></div><div id='method-getComponentName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-getComponentName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-getComponentName' class='name expandable'>getComponentName</a>( <span class='pre'></span> ) : Object {android.content.ComponentName}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns complete component name of this instrumentation. ...</div><div class='long'><p>Returns complete component name of this instrumentation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.ComponentName}</span><div class='sub-desc'><p>Returns the complete component name for this instrumentation.</p>\n</div></li></ul></div></div></div><div id='method-getContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-getContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-getContext' class='name expandable'>getContext</a>( <span class='pre'></span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Context of this instrumentation's package. ...</div><div class='long'><p>Return the Context of this instrumentation's package.  Note that this is\n often different than the Context of the application being\n instrumentated, since the instrumentation code often lives is a\n different package than that of the application it is running against.\n See <a href=\"#!/api/android.app.Instrumentation-method-getTargetContext\" rel=\"android.app.Instrumentation-method-getTargetContext\" class=\"docClass\">getTargetContext</a> to retrieve a Context for the target\n application.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>The instrumentation's package context.\n@see <a href=\"#!/api/android.app.Instrumentation-method-getTargetContext\" rel=\"android.app.Instrumentation-method-getTargetContext\" class=\"docClass\">getTargetContext</a></p>\n</div></li></ul></div></div></div><div id='method-getProcessName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-getProcessName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-getProcessName' class='name expandable'>getProcessName</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the name of the process this instrumentation is running in. ...</div><div class='long'><p>Return the name of the process this instrumentation is running in.  Note this should\n only be used for testing and debugging.  If you are thinking about using this to,\n for example, conditionalize what is initialized in an Application class, it is strongly\n recommended to instead use lazy initialization (such as a getter for the state that\n only creates it when requested).  This can greatly reduce the work your process does\n when created for secondary things, such as to receive a broadcast.</p>\n</div></div></div><div id='method-getTargetContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-getTargetContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-getTargetContext' class='name expandable'>getTargetContext</a>( <span class='pre'></span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a Context for the target application being instrumented. ...</div><div class='long'><p>Return a Context for the target application being instrumented.  Note\n that this is often different than the Context of the instrumentation\n code, since the instrumentation code often lives is a different package\n than that of the application it is running against. See\n <a href=\"#!/api/android.app.Instrumentation-method-getContext\" rel=\"android.app.Instrumentation-method-getContext\" class=\"docClass\">getContext</a> to retrieve a Context for the instrumentation code.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>A Context in the target application.\n@see <a href=\"#!/api/android.app.Instrumentation-method-getContext\" rel=\"android.app.Instrumentation-method-getContext\" class=\"docClass\">getContext</a></p>\n</div></li></ul></div></div></div><div id='method-getUiAutomation' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-getUiAutomation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-getUiAutomation' class='name expandable'>getUiAutomation</a>( <span class='pre'>flags</span> ) : Object {android.app.UiAutomation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the android.app.UiAutomation instance with flags set. ...</div><div class='long'><p>Gets the <a href=\"#!/api/android.app.UiAutomation\" rel=\"android.app.UiAutomation\" class=\"docClass\">android.app.UiAutomation</a> instance with flags set.\n <p>\n <strong>Note:</strong> The APIs exposed via the returned <a href=\"#!/api/android.app.UiAutomation\" rel=\"android.app.UiAutomation\" class=\"docClass\">android.app.UiAutomation</a>\n work across application boundaries while the APIs exposed by the instrumentation\n do not. For example, sendPointerSync(MotionEvent) will\n not allow you to inject the event in an app different from the instrumentation\n target, while boolean)\n will work regardless of the current application.\n </p>\n <p>\n A typical test case should be using either the <a href=\"#!/api/android.app.UiAutomation\" rel=\"android.app.UiAutomation\" class=\"docClass\">android.app.UiAutomation</a> or\n <a href=\"#!/api/android.app.Instrumentation\" rel=\"android.app.Instrumentation\" class=\"docClass\">android.app.Instrumentation</a> APIs. Using both APIs at the same time is not\n a mistake by itself but a client has to be aware of the APIs limitations.\n </p>\n <p>\n If a <a href=\"#!/api/android.app.UiAutomation\" rel=\"android.app.UiAutomation\" class=\"docClass\">android.app.UiAutomation</a> exists with different flags, the flags on that instance will be\n changed, and then it will be returned.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>The flags to be passed to the UiAutomation, for example\n        UiAutomation.FLAG_DONT_SUPPRESS_ACCESSIBILITY_SERVICES.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.UiAutomation}</span><div class='sub-desc'><p>The UI automation instance.\n@see UiAutomation</p>\n</div></li></ul></div></div></div><div id='method-invokeContextMenuAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-invokeContextMenuAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-invokeContextMenuAction' class='name expandable'>invokeContextMenuAction</a>( <span class='pre'>targetActivity, id, flag</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Show the context menu for the currently focused view and executes a\n particular context menu item. ...</div><div class='long'><p>Show the context menu for the currently focused view and executes a\n particular context menu item.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetActivity</span> : Object {Activity}<div class='sub-desc'><p>The activity in question.</p>\n</div></li><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The identifier associated with the context menu item.</p>\n</div></li><li><span class='pre'>flag</span> : Number<div class='sub-desc'><p>Additional flags, if any.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the invocation was successful (for example, it could be\n         false if item is disabled).</p>\n</div></li></ul></div></div></div><div id='method-invokeMenuActionSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-invokeMenuActionSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-invokeMenuActionSync' class='name expandable'>invokeMenuActionSync</a>( <span class='pre'>targetActivity, id, flag</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Execute a particular menu item. ...</div><div class='long'><p>Execute a particular menu item.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetActivity</span> : Object {Activity}<div class='sub-desc'><p>The activity in question.</p>\n</div></li><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The identifier associated with the menu item.</p>\n</div></li><li><span class='pre'>flag</span> : Number<div class='sub-desc'><p>Additional flags, if any.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the invocation was successful (for example, it could be\n         false if item is disabled).</p>\n</div></li></ul></div></div></div><div id='method-isProfiling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-isProfiling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-isProfiling' class='name expandable'>isProfiling</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check whether this instrumentation was started with profiling enabled. ...</div><div class='long'><p>Check whether this instrumentation was started with profiling enabled.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if profiling was enabled when starting, else false.</p>\n</div></li></ul></div></div></div><div id='method-newActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-newActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-newActivity' class='name expandable'>newActivity</a>( <span class='pre'>cl, className, intent</span> ) : Object {android.app.Activity}<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform instantiation of the process's android.app.Activity object. ...</div><div class='long'><p>Perform instantiation of the process's <a href=\"#!/api/android.app.Activity\" rel=\"android.app.Activity\" class=\"docClass\">android.app.Activity</a> object.  The\n default implementation provides the normal system behavior.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cl</span> : Object {ClassLoader}<div class='sub-desc'><p>The ClassLoader with which to instantiate the object.</p>\n</div></li><li><span class='pre'>className</span> : String<div class='sub-desc'><p>The name of the class implementing the Activity\n                  object.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent object that specified the activity class being\n               instantiated.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Activity}</span><div class='sub-desc'><p>The newly instantiated Activity object.</p>\n</div></li></ul></div></div></div><div id='method-newApplication' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-newApplication' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-newApplication' class='name expandable'>newApplication</a>( <span class='pre'>clazz, context</span> ) : Object {android.app.Application}<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform instantiation of the process's android.app.Application object. ...</div><div class='long'><p>Perform instantiation of the process's <a href=\"#!/api/android.app.Application\" rel=\"android.app.Application\" class=\"docClass\">android.app.Application</a> object.  The\n default implementation provides the normal system behavior.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clazz</span> : Object {java.lang.Class}<div class='sub-desc'><p>The class used to create an Application object from.</p>\n</div></li><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The context to initialize the application with</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Application}</span><div class='sub-desc'><p>The newly instantiated Application object.</p>\n</div></li></ul></div></div></div><div id='method-onCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'>arguments</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the instrumentation is starting, before any application code\n has been loaded. ...</div><div class='long'><p>Called when the instrumentation is starting, before any application code\n has been loaded.  Usually this will be implemented to simply call\n <a href=\"#!/api/android.app.Instrumentation-method-start\" rel=\"android.app.Instrumentation-method-start\" class=\"docClass\">start</a> to begin the instrumentation thread, which will then\n continue execution in <a href=\"#!/api/android.app.Instrumentation-method-onStart\" rel=\"android.app.Instrumentation-method-onStart\" class=\"docClass\">onStart</a>.</p>\n\n<p> <p>If you do not need your own thread -- that is you are writing your\n instrumentation to be completely asynchronous (returning to the event\n loop so that the application can run), you can simply begin your\n instrumentation here, for example call Context.startActivity to\n begin the appropriate first activity of the application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arguments</span> : Object {Bundle}<div class='sub-desc'><p>Any additional arguments that were supplied when the\n                  instrumentation was started.</p>\n</div></li></ul></div></div></div><div id='method-onDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-onDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-onDestroy' class='name expandable'>onDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the instrumented application is stopping, after all of the\n normal application cleanup has occurred. ...</div><div class='long'><p>Called when the instrumented application is stopping, after all of the\n normal application cleanup has occurred.</p>\n</div></div></div><div id='method-onException' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-onException' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-onException' class='name expandable'>onException</a>( <span class='pre'>obj, e</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called whenever the system captures an unhandled exception that\n was thrown by the application. ...</div><div class='long'><p>This is called whenever the system captures an unhandled exception that\n was thrown by the application.  The default implementation simply\n returns false, allowing normal system handling of the exception to take\n place.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>The client object that generated the exception.  May be an\n            Application, Activity, BroadcastReceiver, Service, or null.</p>\n</div></li><li><span class='pre'>e</span> : Object {Throwable}<div class='sub-desc'><p>The exception that was thrown.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>To allow normal system exception process to occur, return false.\n         If true is returned, the system will proceed as if the exception\n         didn't happen.</p>\n</div></li></ul></div></div></div><div id='method-onStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-onStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-onStart' class='name expandable'>onStart</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Method where the instrumentation thread enters execution. ...</div><div class='long'><p>Method where the instrumentation thread enters execution.  This allows\n you to run your instrumentation code in a separate thread than the\n application, so that it can perform blocking operation such as\n <a href=\"#!/api/android.app.Instrumentation-method-sendKeySync\" rel=\"android.app.Instrumentation-method-sendKeySync\" class=\"docClass\">sendKeySync</a> or <a href=\"#!/api/android.app.Instrumentation-method-startActivitySync\" rel=\"android.app.Instrumentation-method-startActivitySync\" class=\"docClass\">startActivitySync</a>.</p>\n\n<p> <p>You will typically want to call finish() when this function is done,\n to end your instrumentation.</p>\n</div></div></div><div id='method-removeMonitor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-removeMonitor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-removeMonitor' class='name expandable'>removeMonitor</a>( <span class='pre'>monitor</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove an android.app.ActivityMonitor that was previously added with\n addMonitor. ...</div><div class='long'><p>Remove an android.app.ActivityMonitor that was previously added with\n <a href=\"#!/api/android.app.Instrumentation-method-addMonitor\" rel=\"android.app.Instrumentation-method-addMonitor\" class=\"docClass\">addMonitor</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>monitor</span> : Object {Instrumentation.ActivityMonitor}<div class='sub-desc'><p>The monitor to remove.\n@see <a href=\"#!/api/android.app.Instrumentation-method-addMonitor\" rel=\"android.app.Instrumentation-method-addMonitor\" class=\"docClass\">addMonitor</a></p>\n</div></li></ul></div></div></div><div id='method-runOnMainSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-runOnMainSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-runOnMainSync' class='name expandable'>runOnMainSync</a>( <span class='pre'>runner</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Execute a call on the application's main thread, blocking until it is\n complete. ...</div><div class='long'><p>Execute a call on the application's main thread, blocking until it is\n complete.  Useful for doing things that are not thread-safe, such as\n looking at or modifying the view hierarchy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>runner</span> : Object {Runnable}<div class='sub-desc'><p>The code to run on the main thread.</p>\n</div></li></ul></div></div></div><div id='method-sendCharacterSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-sendCharacterSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-sendCharacterSync' class='name expandable'>sendCharacterSync</a>( <span class='pre'>keyCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Higher-level method for sending both the down and up key events for a\n particular character key code. ...</div><div class='long'><p>Higher-level method for sending both the down and up key events for a\n particular character key code.  Equivalent to creating both KeyEvent\n objects by hand and calling <a href=\"#!/api/android.app.Instrumentation-method-sendKeySync\" rel=\"android.app.Instrumentation-method-sendKeySync\" class=\"docClass\">sendKeySync</a>.  The event appears\n as if it came from keyboard 0, the built in one.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyCode</span> : Number<div class='sub-desc'><p>The key code of the character to send.</p>\n</div></li></ul></div></div></div><div id='method-sendKeyDownUpSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-sendKeyDownUpSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-sendKeyDownUpSync' class='name expandable'>sendKeyDownUpSync</a>( <span class='pre'>key</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends an up and down key event sync to the currently focused window. ...</div><div class='long'><p>Sends an up and down key event sync to the currently focused window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Number<div class='sub-desc'><p>The integer keycode for the event.</p>\n</div></li></ul></div></div></div><div id='method-sendKeySync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-sendKeySync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-sendKeySync' class='name expandable'>sendKeySync</a>( <span class='pre'>event</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Send a key event to the currently focused window/view and wait for it to\n be processed. ...</div><div class='long'><p>Send a key event to the currently focused window/view and wait for it to\n be processed.  Finished at some point after the recipient has returned\n from its event processing, though it may <em>not</em> have completely\n finished reacting from the event -- for example, if it needs to update\n its display as a result, it may still be in the process of doing that.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The event to send to the current focus.</p>\n</div></li></ul></div></div></div><div id='method-sendPointerSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-sendPointerSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-sendPointerSync' class='name expandable'>sendPointerSync</a>( <span class='pre'>event</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dispatch a pointer event. ...</div><div class='long'><p>Dispatch a pointer event. Finished at some point after the recipient has\n returned from its event processing, though it may <em>not</em> have\n completely finished reacting from the event -- for example, if it needs\n to update its display as a result, it may still be in the process of\n doing that.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>A motion event describing the pointer action.  (As noted in\n long, int, float, float, int), be sure to use\n SystemClock.uptimeMillis() as the timebase.</p>\n</div></li></ul></div></div></div><div id='method-sendStatus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-sendStatus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-sendStatus' class='name expandable'>sendStatus</a>( <span class='pre'>resultCode, results</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide a status report about the application. ...</div><div class='long'><p>Provide a status report about the application.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resultCode</span> : Number<div class='sub-desc'><p>Current success/failure of instrumentation.</p>\n</div></li><li><span class='pre'>results</span> : Object {Bundle}<div class='sub-desc'><p>Any results to send back to the code that started the instrumentation.</p>\n</div></li></ul></div></div></div><div id='method-sendStringSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-sendStringSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-sendStringSync' class='name expandable'>sendStringSync</a>( <span class='pre'>text</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends the key events corresponding to the text to the app being\n instrumented. ...</div><div class='long'><p>Sends the key events corresponding to the text to the app being\n instrumented.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : String<div class='sub-desc'><p>The text to be sent.</p>\n</div></li></ul></div></div></div><div id='method-sendTrackballEventSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-sendTrackballEventSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-sendTrackballEventSync' class='name expandable'>sendTrackballEventSync</a>( <span class='pre'>event</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dispatch a trackball event. ...</div><div class='long'><p>Dispatch a trackball event. Finished at some point after the recipient has\n returned from its event processing, though it may <em>not</em> have\n completely finished reacting from the event -- for example, if it needs\n to update its display as a result, it may still be in the process of\n doing that.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>A motion event describing the trackball action.  (As noted in\n long, int, float, float, int), be sure to use\n SystemClock.uptimeMillis() as the timebase.</p>\n</div></li></ul></div></div></div><div id='method-setAutomaticPerformanceSnapshots' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-setAutomaticPerformanceSnapshots' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-setAutomaticPerformanceSnapshots' class='name expandable'>setAutomaticPerformanceSnapshots</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setInTouchMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-setInTouchMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-setInTouchMode' class='name expandable'>setInTouchMode</a>( <span class='pre'>inTouch</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Force the global system in or out of touch mode. ...</div><div class='long'><p>Force the global system in or out of touch mode.  This can be used if\n your instrumentation relies on the UI being in one more or the other\n when it starts.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inTouch</span> : Boolean<div class='sub-desc'><p>Set to true to be in touch mode, false to be in\n focus mode.</p>\n</div></li></ul></div></div></div><div id='method-start' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-start' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-start' class='name expandable'>start</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create and start a new thread in which to run instrumentation. ...</div><div class='long'><p>Create and start a new thread in which to run instrumentation.  This new\n thread will call to <a href=\"#!/api/android.app.Instrumentation-method-onStart\" rel=\"android.app.Instrumentation-method-onStart\" class=\"docClass\">onStart</a> where you can implement the\n instrumentation.</p>\n</div></div></div><div id='method-startActivitySync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-startActivitySync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-startActivitySync' class='name expandable'>startActivitySync</a>( <span class='pre'>intent, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Start a new activity and wait for it to begin running before returning. ...</div><div class='long'><p>Start a new activity and wait for it to begin running before returning.\n In addition to being synchronous, this method as some semantic\n differences from the standard Context.startActivity call: the\n activity component is resolved before talking with the activity manager\n (its class name is specified in the Intent that this method ultimately\n starts), and it does not allow you to start activities that run in a\n different process.  In addition, if the given Intent resolves to\n multiple activities, instead of displaying a dialog for the user to\n select an activity, an exception will be thrown.</p>\n\n<p> <p>The function returns as soon as the activity goes idle following the\n call to its <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">android.app.Activity.onCreate</a>.  Generally this means it has gone\n through the full initialization including android.app.Activity.onResume and\n drawn and displayed its initial window.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>Description of the activity to start.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n May be null if there are no options.  See <a href=\"#!/api/android.app.ActivityOptions\" rel=\"android.app.ActivityOptions\" class=\"docClass\">android.app.ActivityOptions</a>\n for how to build the Bundle supplied here; there are no supported definitions\n for building it manually.\n@see Context#startActivity(Intent, Bundle)</p>\n</div></li></ul></div></div></div><div id='method-startAllocCounting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-startAllocCounting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-startAllocCounting' class='name expandable'>startAllocCounting</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-startPerformanceSnapshot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-startPerformanceSnapshot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-startPerformanceSnapshot' class='name expandable'>startPerformanceSnapshot</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-startProfiling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-startProfiling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-startProfiling' class='name expandable'>startProfiling</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method will start profiling if isProfiling() returns true. ...</div><div class='long'><p>This method will start profiling if isProfiling() returns true. You should\n only call this method if you set the handleProfiling attribute in the\n manifest file for this Instrumentation to true.</p>\n</div></div></div><div id='method-stopAllocCounting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-stopAllocCounting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-stopAllocCounting' class='name expandable'>stopAllocCounting</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-stopProfiling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-stopProfiling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-stopProfiling' class='name expandable'>stopProfiling</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops profiling if isProfiling() returns true. ...</div><div class='long'><p>Stops profiling if isProfiling() returns true.</p>\n</div></div></div><div id='method-waitForIdle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-waitForIdle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-waitForIdle' class='name expandable'>waitForIdle</a>( <span class='pre'>recipient</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Schedule a callback for when the application's main thread goes idle\n (has no more events to process). ...</div><div class='long'><p>Schedule a callback for when the application's main thread goes idle\n (has no more events to process).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recipient</span> : Object {Runnable}<div class='sub-desc'><p>Called the next time the thread's message queue is\n                  idle.</p>\n</div></li></ul></div></div></div><div id='method-waitForIdleSync' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-waitForIdleSync' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-waitForIdleSync' class='name expandable'>waitForIdleSync</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Synchronously wait for the application to be idle. ...</div><div class='long'><p>Synchronously wait for the application to be idle.  Can not be called\n from the main application thread -- use <a href=\"#!/api/android.app.Instrumentation-method-start\" rel=\"android.app.Instrumentation-method-start\" class=\"docClass\">start</a> to execute\n instrumentation in its own thread.</p>\n</div></div></div><div id='method-waitForMonitor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-waitForMonitor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-waitForMonitor' class='name expandable'>waitForMonitor</a>( <span class='pre'>monitor</span> ) : Object {android.app.Activity}<span class=\"signature\"></span></div><div class='description'><div class='short'>Wait for an existing android.app.ActivityMonitor to be hit. ...</div><div class='long'><p>Wait for an existing android.app.ActivityMonitor to be hit.  Once the\n monitor has been hit, it is removed from the activity monitor list and\n the first created Activity object that matched it is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>monitor</span> : Object {Instrumentation.ActivityMonitor}<div class='sub-desc'><p>The ActivityMonitor to wait for.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Activity}</span><div class='sub-desc'><p>The Activity object that matched the monitor.</p>\n</div></li></ul></div></div></div><div id='method-waitForMonitorWithTimeout' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.Instrumentation'>android.app.Instrumentation</span><br/><a href='source/Instrumentation.html#android-app-Instrumentation-method-waitForMonitorWithTimeout' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Instrumentation-method-waitForMonitorWithTimeout' class='name expandable'>waitForMonitorWithTimeout</a>( <span class='pre'>monitor, timeOut</span> ) : Object {android.app.Activity}<span class=\"signature\"></span></div><div class='description'><div class='short'>Wait for an existing android.app.ActivityMonitor to be hit till the timeout\n expires. ...</div><div class='long'><p>Wait for an existing android.app.ActivityMonitor to be hit till the timeout\n expires.  Once the monitor has been hit, it is removed from the activity\n monitor list and the first created Activity object that matched it is\n returned.  If the timeout expires, a null object is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>monitor</span> : Object {Instrumentation.ActivityMonitor}<div class='sub-desc'><p>The ActivityMonitor to wait for.</p>\n</div></li><li><span class='pre'>timeOut</span> : Number<div class='sub-desc'><p>The timeout value in milliseconds.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Activity}</span><div class='sub-desc'><p>The Activity object that matched the monitor.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});