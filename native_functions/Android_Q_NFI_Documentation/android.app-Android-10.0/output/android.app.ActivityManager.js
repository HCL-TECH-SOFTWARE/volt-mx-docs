Ext.data.JsonP.android_app_ActivityManager({"tagname":"class","name":"android.app.ActivityManager","autodetected":{},"files":[{"filename":"ActivityManager.js","href":"ActivityManager.html#android-app-ActivityManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_REPORT_HEAP_LIMIT","tagname":"property","owner":"android.app.ActivityManager","id":"property-ACTION_REPORT_HEAP_LIMIT","meta":{}},{"name":"FLAG_AND_LOCKED","tagname":"property","owner":"android.app.ActivityManager","id":"property-FLAG_AND_LOCKED","meta":{}},{"name":"FLAG_AND_UNLOCKED","tagname":"property","owner":"android.app.ActivityManager","id":"property-FLAG_AND_UNLOCKED","meta":{}},{"name":"FLAG_AND_UNLOCKING_OR_UNLOCKED","tagname":"property","owner":"android.app.ActivityManager","id":"property-FLAG_AND_UNLOCKING_OR_UNLOCKED","meta":{}},{"name":"FLAG_OR_STOPPED","tagname":"property","owner":"android.app.ActivityManager","id":"property-FLAG_OR_STOPPED","meta":{}},{"name":"LOCK_TASK_MODE_LOCKED","tagname":"property","owner":"android.app.ActivityManager","id":"property-LOCK_TASK_MODE_LOCKED","meta":{}},{"name":"LOCK_TASK_MODE_NONE","tagname":"property","owner":"android.app.ActivityManager","id":"property-LOCK_TASK_MODE_NONE","meta":{}},{"name":"LOCK_TASK_MODE_PINNED","tagname":"property","owner":"android.app.ActivityManager","id":"property-LOCK_TASK_MODE_PINNED","meta":{}},{"name":"META_HOME_ALTERNATE","tagname":"property","owner":"android.app.ActivityManager","id":"property-META_HOME_ALTERNATE","meta":{}},{"name":"MOVE_TASK_NO_USER_ACTION","tagname":"property","owner":"android.app.ActivityManager","id":"property-MOVE_TASK_NO_USER_ACTION","meta":{}},{"name":"MOVE_TASK_WITH_HOME","tagname":"property","owner":"android.app.ActivityManager","id":"property-MOVE_TASK_WITH_HOME","meta":{}},{"name":"RECENT_IGNORE_UNAVAILABLE","tagname":"property","owner":"android.app.ActivityManager","id":"property-RECENT_IGNORE_UNAVAILABLE","meta":{}},{"name":"RECENT_WITH_EXCLUDED","tagname":"property","owner":"android.app.ActivityManager","id":"property-RECENT_WITH_EXCLUDED","meta":{}},{"name":"addAppTask","tagname":"method","owner":"android.app.ActivityManager","id":"method-addAppTask","meta":{}},{"name":"clearApplicationUserData","tagname":"method","owner":"android.app.ActivityManager","id":"method-clearApplicationUserData","meta":{}},{"name":"clearWatchHeapLimit","tagname":"method","owner":"android.app.ActivityManager","id":"method-clearWatchHeapLimit","meta":{}},{"name":"dumpPackageState","tagname":"method","owner":"android.app.ActivityManager","id":"method-dumpPackageState","meta":{}},{"name":"getAppTaskThumbnailSize","tagname":"method","owner":"android.app.ActivityManager","id":"method-getAppTaskThumbnailSize","meta":{}},{"name":"getAppTasks","tagname":"method","owner":"android.app.ActivityManager","id":"method-getAppTasks","meta":{}},{"name":"getDeviceConfigurationInfo","tagname":"method","owner":"android.app.ActivityManager","id":"method-getDeviceConfigurationInfo","meta":{}},{"name":"getLargeMemoryClass","tagname":"method","owner":"android.app.ActivityManager","id":"method-getLargeMemoryClass","meta":{}},{"name":"getLauncherLargeIconDensity","tagname":"method","owner":"android.app.ActivityManager","id":"method-getLauncherLargeIconDensity","meta":{}},{"name":"getLauncherLargeIconSize","tagname":"method","owner":"android.app.ActivityManager","id":"method-getLauncherLargeIconSize","meta":{}},{"name":"getLockTaskModeState","tagname":"method","owner":"android.app.ActivityManager","id":"method-getLockTaskModeState","meta":{}},{"name":"getMaxNumPictureInPictureActions","tagname":"method","owner":"android.app.ActivityManager","id":"method-getMaxNumPictureInPictureActions","meta":{"removed":{"text":"\n"}}},{"name":"getMemoryClass","tagname":"method","owner":"android.app.ActivityManager","id":"method-getMemoryClass","meta":{}},{"name":"getMemoryInfo","tagname":"method","owner":"android.app.ActivityManager","id":"method-getMemoryInfo","meta":{}},{"name":"getMyMemoryState","tagname":"method","owner":"android.app.ActivityManager","id":"method-getMyMemoryState","meta":{}},{"name":"getProcessMemoryInfo","tagname":"method","owner":"android.app.ActivityManager","id":"method-getProcessMemoryInfo","meta":{}},{"name":"getProcessesInErrorState","tagname":"method","owner":"android.app.ActivityManager","id":"method-getProcessesInErrorState","meta":{}},{"name":"getRecentTasks","tagname":"method","owner":"android.app.ActivityManager","id":"method-getRecentTasks","meta":{}},{"name":"getRunningAppProcesses","tagname":"method","owner":"android.app.ActivityManager","id":"method-getRunningAppProcesses","meta":{}},{"name":"getRunningServiceControlPanel","tagname":"method","owner":"android.app.ActivityManager","id":"method-getRunningServiceControlPanel","meta":{}},{"name":"getRunningServices","tagname":"method","owner":"android.app.ActivityManager","id":"method-getRunningServices","meta":{}},{"name":"getRunningTasks","tagname":"method","owner":"android.app.ActivityManager","id":"method-getRunningTasks","meta":{}},{"name":"handleIncomingUser","tagname":"method","owner":"android.app.ActivityManager","id":"method-handleIncomingUser","meta":{}},{"name":"isActivityStartAllowedOnDisplay","tagname":"method","owner":"android.app.ActivityManager","id":"method-isActivityStartAllowedOnDisplay","meta":{}},{"name":"isBackgroundRestricted","tagname":"method","owner":"android.app.ActivityManager","id":"method-isBackgroundRestricted","meta":{}},{"name":"isInLockTaskMode","tagname":"method","owner":"android.app.ActivityManager","id":"method-isInLockTaskMode","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/android.app.ActivityManager-method-getLockTaskModeState\" rel=\"android.app.ActivityManager-method-getLockTaskModeState\" class=\"docClass\">getLockTaskModeState</a> instead.</p>\n"}}},{"name":"isLowRamDevice","tagname":"method","owner":"android.app.ActivityManager","id":"method-isLowRamDevice","meta":{}},{"name":"isRunningInTestHarness","tagname":"method","owner":"android.app.ActivityManager","id":"method-isRunningInTestHarness","meta":{"deprecated":{"text":"<p>this method is false for all user builds. Users looking to check if their device\n is running in a device farm should see isRunningInUserTestHarness().</p>\n"}}},{"name":"isRunningInUserTestHarness","tagname":"method","owner":"android.app.ActivityManager","id":"method-isRunningInUserTestHarness","meta":{}},{"name":"isUserAMonkey","tagname":"method","owner":"android.app.ActivityManager","id":"method-isUserAMonkey","meta":{}},{"name":"isVrModePackageEnabled","tagname":"method","owner":"android.app.ActivityManager","id":"method-isVrModePackageEnabled","meta":{}},{"name":"killBackgroundProcesses","tagname":"method","owner":"android.app.ActivityManager","id":"method-killBackgroundProcesses","meta":{}},{"name":"moveTaskToFront","tagname":"method","owner":"android.app.ActivityManager","id":"method-moveTaskToFront","meta":{}},{"name":"restartPackage","tagname":"method","owner":"android.app.ActivityManager","id":"method-restartPackage","meta":{"deprecated":{"text":"<p>This is now just a wrapper for\n killBackgroundProcesses(String); the previous behavior here\n is no longer available to applications because it allows them to\n break other applications by removing their alarms, stopping their\n services, etc.</p>\n"}}},{"name":"setVrThread","tagname":"method","owner":"android.app.ActivityManager","id":"method-setVrThread","meta":{}},{"name":"setWatchHeapLimit","tagname":"method","owner":"android.app.ActivityManager","id":"method-setWatchHeapLimit","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.ActivityManager","short_doc":"This class gives information about, and interacts\n with, activities, services, and the containing\n process. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.ActivityManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ActivityManager.html#android-app-ActivityManager' target='_blank'>ActivityManager.js</a></div></pre><div class='doc-contents'><p>\n This class gives information about, and interacts\n with, activities, services, and the containing\n process.\n </p>\n\n\n<p> <p>\n A number of the methods in this class are for\n debugging or informational purposes and they should\n not be used to affect any runtime behavior of\n your app. These methods are called out as such in\n the method level documentation.\n </p></p>\n\n<p>\n Most application developers should not have the need to\n use this class, most of whose methods are for specialized\n use cases. However, a few methods are more broadly applicable.\n For instance, isLowRamDevice()\n enables your app to detect whether it is running on a low-memory device,\n and behave accordingly.\n clearApplicationUserData()\n is for apps with reset-data functionality.\n </p>\n\n\n<p> <p>\n In some special use cases, where an app interacts with\n its Task stack, the app may use the\n <a href=\"#!/api/android.app.ActivityManager.AppTask\" rel=\"android.app.ActivityManager.AppTask\" class=\"docClass\">android.app.ActivityManager.AppTask</a> and\n <a href=\"#!/api/android.app.ActivityManager.RecentTaskInfo\" rel=\"android.app.ActivityManager.RecentTaskInfo\" class=\"docClass\">android.app.ActivityManager.RecentTaskInfo</a> inner\n classes. However, in general, the methods in this class should\n be used for testing and debugging purposes only.\n </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_REPORT_HEAP_LIMIT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-ACTION_REPORT_HEAP_LIMIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-ACTION_REPORT_HEAP_LIMIT' class='name expandable'>ACTION_REPORT_HEAP_LIMIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Action an app can implement to handle reports from setWatchHeapLimit(long). ...</div><div class='long'><p>Action an app can implement to handle reports from <a href=\"#!/api/android.app.ActivityManager-method-setWatchHeapLimit\" rel=\"android.app.ActivityManager-method-setWatchHeapLimit\" class=\"docClass\">setWatchHeapLimit</a>(long).\nIf your package has an activity handling this action, it will be launched with the\nheap data provided to it the same way as Intent.ACTION_SEND.  Note that to\nmatch the activty must support this action and a MIME type of \"<em>&#47;</em>\".</p>\n<p>Defaults to: <code>&quot;android.app.action.REPORT_HEAP_LIMIT&quot;</code></p></div></div></div><div id='property-FLAG_AND_LOCKED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-FLAG_AND_LOCKED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-FLAG_AND_LOCKED' class='name expandable'>FLAG_AND_LOCKED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-FLAG_AND_UNLOCKED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-FLAG_AND_UNLOCKED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-FLAG_AND_UNLOCKED' class='name expandable'>FLAG_AND_UNLOCKED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-FLAG_AND_UNLOCKING_OR_UNLOCKED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-FLAG_AND_UNLOCKING_OR_UNLOCKED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-FLAG_AND_UNLOCKING_OR_UNLOCKED' class='name expandable'>FLAG_AND_UNLOCKING_OR_UNLOCKED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;8&quot;</code></p></div></div></div><div id='property-FLAG_OR_STOPPED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-FLAG_OR_STOPPED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-FLAG_OR_STOPPED' class='name expandable'>FLAG_OR_STOPPED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-LOCK_TASK_MODE_LOCKED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-LOCK_TASK_MODE_LOCKED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-LOCK_TASK_MODE_LOCKED' class='name expandable'>LOCK_TASK_MODE_LOCKED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Full lock task mode is active. ...</div><div class='long'><p>Full lock task mode is active.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-LOCK_TASK_MODE_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-LOCK_TASK_MODE_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-LOCK_TASK_MODE_NONE' class='name expandable'>LOCK_TASK_MODE_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Lock task mode is not active. ...</div><div class='long'><p>Lock task mode is not active.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-LOCK_TASK_MODE_PINNED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-LOCK_TASK_MODE_PINNED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-LOCK_TASK_MODE_PINNED' class='name expandable'>LOCK_TASK_MODE_PINNED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>App pinning mode is active. ...</div><div class='long'><p>App pinning mode is active.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-META_HOME_ALTERNATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-META_HOME_ALTERNATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-META_HOME_ALTERNATE' class='name expandable'>META_HOME_ALTERNATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>{@code\n} name for a 'home' Activity that declares a package that is to be\nuninstalled in lieu of the declaring one. ...</div><div class='long'><p><a href=\"{@docRoot}guide/topics/manifest/meta-data-element.html\">{@code\n<meta-data>}</a> name for a 'home' Activity that declares a package that is to be\nuninstalled in lieu of the declaring one.  The package named here must be\nsigned with the same certificate as the one declaring the {@code <meta-data>}.</p>\n<p>Defaults to: <code>&quot;android.app.home.alternate&quot;</code></p></div></div></div><div id='property-MOVE_TASK_NO_USER_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-MOVE_TASK_NO_USER_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-MOVE_TASK_NO_USER_ACTION' class='name expandable'>MOVE_TASK_NO_USER_ACTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for int): don't count this as a\nuser-instigated action, so the current activity will not receive a\nhint that the...</div><div class='long'><p>Flag for int): don't count this as a\nuser-instigated action, so the current activity will not receive a\nhint that the user is leaving.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-MOVE_TASK_WITH_HOME' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-MOVE_TASK_WITH_HOME' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-MOVE_TASK_WITH_HOME' class='name expandable'>MOVE_TASK_WITH_HOME</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for int): also move the \"home\"\nactivity along with the task, so it is positioned immediately behind\nthe task. ...</div><div class='long'><p>Flag for int): also move the \"home\"\nactivity along with the task, so it is positioned immediately behind\nthe task.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-RECENT_IGNORE_UNAVAILABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-RECENT_IGNORE_UNAVAILABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-RECENT_IGNORE_UNAVAILABLE' class='name expandable'>RECENT_IGNORE_UNAVAILABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Provides a list that does not contain any\nrecent tasks that currently are not available to the user. ...</div><div class='long'><p>Provides a list that does not contain any\nrecent tasks that currently are not available to the user.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-RECENT_WITH_EXCLUDED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-property-RECENT_WITH_EXCLUDED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-property-RECENT_WITH_EXCLUDED' class='name expandable'>RECENT_WITH_EXCLUDED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag for use with getRecentTasks: return all tasks, even those\nthat have set their\nandroid.content.Intent.FLAG_ACTIVI...</div><div class='long'><p>Flag for use with <a href=\"#!/api/android.app.ActivityManager-method-getRecentTasks\" rel=\"android.app.ActivityManager-method-getRecentTasks\" class=\"docClass\">getRecentTasks</a>: return all tasks, even those\nthat have set their\nandroid.content.Intent.FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS flag.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addAppTask' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-addAppTask' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-addAppTask' class='name expandable'>addAppTask</a>( <span class='pre'>activity, intent, description, thumbnail</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a new android.app.ActivityManager.AppTask for the calling application. ...</div><div class='long'><p>Add a new <a href=\"#!/api/android.app.ActivityManager.AppTask\" rel=\"android.app.ActivityManager.AppTask\" class=\"docClass\">android.app.ActivityManager.AppTask</a> for the calling application.  This will create a new\n recents entry that is added to the <b>end</b> of all existing recents.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>activity</span> : Object {Activity}<div class='sub-desc'><p>The activity that is adding the entry.   This is used to help determine\n the context that the new recents entry will be in.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent that describes the recents entry.  This is the same Intent that\n you would have used to launch the activity for it.  In generally you will want to set\n both Intent.FLAG_ACTIVITY_NEW_DOCUMENT and\n Intent.FLAG_ACTIVITY_RETAIN_IN_RECENTS; the latter is required since this recents\n entry will exist without an activity, so it doesn't make sense to not retain it when\n its activity disappears.  The given Intent here also must have an explicit ComponentName\n set on it.</p>\n</div></li><li><span class='pre'>description</span> : Object {ActivityManager.TaskDescription}<div class='sub-desc'><p>Optional additional description information.</p>\n</div></li><li><span class='pre'>thumbnail</span> : Object {Bitmap}<div class='sub-desc'><p>Thumbnail to use for the recents entry.  Should be the size given by\n getAppTaskThumbnailSize().  If the bitmap is not that exact size, it will be\n recreated in your process, probably in a way you don't like, before the recents entry\n is added.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns the task id of the newly added app task, or -1 if the add failed.  The\n most likely cause of failure is that there is no more room for more tasks for your app.</p>\n</div></li></ul></div></div></div><div id='method-clearApplicationUserData' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-clearApplicationUserData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-clearApplicationUserData' class='name expandable'>clearApplicationUserData</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Permits an application to erase its own data from disk. ...</div><div class='long'><p>Permits an application to erase its own data from disk.  This is equivalent to\n the user choosing to clear the app's data from within the device settings UI.  It\n erases all dynamic data associated with the app -- its private data and data in its\n private area on external storage -- but does not remove the installed application\n itself, nor any OBB files. It also revokes all runtime permissions that the app has acquired,\n clears all notifications and removes all Uri grants related to this application.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the application successfully requested that the application's\n     data be erased; {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-clearWatchHeapLimit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-clearWatchHeapLimit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-clearWatchHeapLimit' class='name expandable'>clearWatchHeapLimit</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Clear a heap watch limit previously set by setWatchHeapLimit(long). ...</div><div class='long'><p>Clear a heap watch limit previously set by <a href=\"#!/api/android.app.ActivityManager-method-setWatchHeapLimit\" rel=\"android.app.ActivityManager-method-setWatchHeapLimit\" class=\"docClass\">setWatchHeapLimit</a>(long).</p>\n</div></div></div><div id='method-dumpPackageState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-dumpPackageState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-dumpPackageState' class='name expandable'>dumpPackageState</a>( <span class='pre'>fd, packageName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Perform a system dump of various state associated with the given application\n package name. ...</div><div class='long'><p>Perform a system dump of various state associated with the given application\n package name.  This call blocks while the dump is being performed, so should\n not be done on a UI thread.  The data will be written to the given file\n descriptor as text.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fd</span> : Object {FileDescriptor}<div class='sub-desc'><p>The file descriptor that the dump should be written to.  The file\n descriptor is <em>not</em> closed by this function; the caller continues to\n own it.</p>\n</div></li><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The name of the package that is to be dumped.</p>\n</div></li></ul></div></div></div><div id='method-getAppTaskThumbnailSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getAppTaskThumbnailSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getAppTaskThumbnailSize' class='name expandable'>getAppTaskThumbnailSize</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the current design dimensions for android.app.ActivityManager.AppTask thumbnails, for use\n with addAppTask. ...</div><div class='long'><p>Return the current design dimensions for <a href=\"#!/api/android.app.ActivityManager.AppTask\" rel=\"android.app.ActivityManager.AppTask\" class=\"docClass\">android.app.ActivityManager.AppTask</a> thumbnails, for use\n with <a href=\"#!/api/android.app.ActivityManager-method-addAppTask\" rel=\"android.app.ActivityManager-method-addAppTask\" class=\"docClass\">addAppTask</a>.</p>\n</div></div></div><div id='method-getAppTasks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getAppTasks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getAppTasks' class='name expandable'>getAppTasks</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the list of tasks associated with the calling application. ...</div><div class='long'><p>Get the list of tasks associated with the calling application.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>The list of tasks associated with the application making this call.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException</p>\n</div></li></ul></div></div></div><div id='method-getDeviceConfigurationInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getDeviceConfigurationInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getDeviceConfigurationInfo' class='name expandable'>getDeviceConfigurationInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the device configuration attributes. ...</div><div class='long'><p>Get the device configuration attributes.</p>\n</div></div></div><div id='method-getLargeMemoryClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getLargeMemoryClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getLargeMemoryClass' class='name expandable'>getLargeMemoryClass</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the approximate per-application memory class of the current\n device when an application is running with a larg...</div><div class='long'><p>Return the approximate per-application memory class of the current\n device when an application is running with a large heap.  This is the\n space available for memory-intensive applications; most applications\n should not need this amount of memory, and should instead stay with the\n <a href=\"#!/api/android.app.ActivityManager-method-getMemoryClass\" rel=\"android.app.ActivityManager-method-getMemoryClass\" class=\"docClass\">getMemoryClass</a>() limit.  The returned value is in megabytes.\n This may be the same size as <a href=\"#!/api/android.app.ActivityManager-method-getMemoryClass\" rel=\"android.app.ActivityManager-method-getMemoryClass\" class=\"docClass\">getMemoryClass</a>() on memory\n constrained devices, or it may be significantly larger on devices with\n a large amount of available RAM.</p>\n\n<p> <p>This is the size of the application's Dalvik heap if it has\n specified <code>android:largeHeap=\"true\"</code> in its manifest.</p>\n</div></div></div><div id='method-getLauncherLargeIconDensity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getLauncherLargeIconDensity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getLauncherLargeIconDensity' class='name expandable'>getLauncherLargeIconDensity</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the preferred density of icons for the launcher. ...</div><div class='long'><p>Get the preferred density of icons for the launcher. This is used when\n custom drawables are created (e.g., for shortcuts).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>density in terms of DPI</p>\n</div></li></ul></div></div></div><div id='method-getLauncherLargeIconSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getLauncherLargeIconSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getLauncherLargeIconSize' class='name expandable'>getLauncherLargeIconSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the preferred launcher icon size. ...</div><div class='long'><p>Get the preferred launcher icon size. This is used when custom drawables\n are created (e.g., for shortcuts).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>dimensions of square icons in terms of pixels</p>\n</div></li></ul></div></div></div><div id='method-getLockTaskModeState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getLockTaskModeState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getLockTaskModeState' class='name expandable'>getLockTaskModeState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the current state of task locking. ...</div><div class='long'><p>Return the current state of task locking. The three possible outcomes\n are <a href=\"#!/api/android.app.ActivityManager-property-LOCK_TASK_MODE_NONE\" rel=\"android.app.ActivityManager-property-LOCK_TASK_MODE_NONE\" class=\"docClass\">LOCK_TASK_MODE_NONE</a>, <a href=\"#!/api/android.app.ActivityManager-property-LOCK_TASK_MODE_LOCKED\" rel=\"android.app.ActivityManager-property-LOCK_TASK_MODE_LOCKED\" class=\"docClass\">LOCK_TASK_MODE_LOCKED</a>\n and <a href=\"#!/api/android.app.ActivityManager-property-LOCK_TASK_MODE_PINNED\" rel=\"android.app.ActivityManager-property-LOCK_TASK_MODE_PINNED\" class=\"docClass\">LOCK_TASK_MODE_PINNED</a>.\n@see Activity#startLockTask()</p>\n</div></div></div><div id='method-getMaxNumPictureInPictureActions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getMaxNumPictureInPictureActions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getMaxNumPictureInPictureActions' class='name expandable'>getMaxNumPictureInPictureActions</a>( <span class='pre'></span> )<span class=\"signature\"><span class='removed' >removed</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n</div></div></div><div id='method-getMemoryClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getMemoryClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getMemoryClass' class='name expandable'>getMemoryClass</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the approximate per-application memory class of the current\n device. ...</div><div class='long'><p>Return the approximate per-application memory class of the current\n device.  This gives you an idea of how hard a memory limit you should\n impose on your application to let the overall system work best.  The\n returned value is in megabytes; the baseline Android memory class is\n 16 (which happens to be the Java heap limit of those devices); some\n devices with more memory may return 24 or even higher numbers.</p>\n</div></div></div><div id='method-getMemoryInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getMemoryInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getMemoryInfo' class='name expandable'>getMemoryInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return general information about the memory state of the system. ...</div><div class='long'><p>Return general information about the memory state of the system.  This\n can be used to help decide how to manage your own memory, though note\n that polling is not recommended and\n ComponentCallbacks2.onTrimMemory(int) is the preferred way to do this.\n Also see <a href=\"#!/api/android.app.ActivityManager-method-getMyMemoryState\" rel=\"android.app.ActivityManager-method-getMyMemoryState\" class=\"docClass\">getMyMemoryState</a> for how to retrieve the current trim\n level of your process as needed, which gives a better hint for how to\n manage its memory.</p>\n</div></div></div><div id='method-getMyMemoryState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getMyMemoryState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getMyMemoryState' class='name expandable'>getMyMemoryState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return global memory state information for the calling process. ...</div><div class='long'><p>Return global memory state information for the calling process.  This\n does not fill in all fields of the <a href=\"#!/api/android.app.ActivityManager.RunningAppProcessInfo\" rel=\"android.app.ActivityManager.RunningAppProcessInfo\" class=\"docClass\">android.app.ActivityManager.RunningAppProcessInfo</a>.  The\n only fields that will be filled in are\n <a href=\"#!/api/android.app.ActivityManager.RunningAppProcessInfo-property-pid\" rel=\"android.app.ActivityManager.RunningAppProcessInfo-property-pid\" class=\"docClass\">android.app.ActivityManager.RunningAppProcessInfo.pid</a>,\n <a href=\"#!/api/android.app.ActivityManager.RunningAppProcessInfo-property-uid\" rel=\"android.app.ActivityManager.RunningAppProcessInfo-property-uid\" class=\"docClass\">android.app.ActivityManager.RunningAppProcessInfo.uid</a>,\n <a href=\"#!/api/android.app.ActivityManager.RunningAppProcessInfo-property-lastTrimLevel\" rel=\"android.app.ActivityManager.RunningAppProcessInfo-property-lastTrimLevel\" class=\"docClass\">android.app.ActivityManager.RunningAppProcessInfo.lastTrimLevel</a>,\n <a href=\"#!/api/android.app.ActivityManager.RunningAppProcessInfo-property-importance\" rel=\"android.app.ActivityManager.RunningAppProcessInfo-property-importance\" class=\"docClass\">android.app.ActivityManager.RunningAppProcessInfo.importance</a>,\n <a href=\"#!/api/android.app.ActivityManager.RunningAppProcessInfo-property-lru\" rel=\"android.app.ActivityManager.RunningAppProcessInfo-property-lru\" class=\"docClass\">android.app.ActivityManager.RunningAppProcessInfo.lru</a>, and\n <a href=\"#!/api/android.app.ActivityManager.RunningAppProcessInfo-property-importanceReasonCode\" rel=\"android.app.ActivityManager.RunningAppProcessInfo-property-importanceReasonCode\" class=\"docClass\">android.app.ActivityManager.RunningAppProcessInfo.importanceReasonCode</a>.</p>\n</div></div></div><div id='method-getProcessMemoryInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getProcessMemoryInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getProcessMemoryInfo' class='name expandable'>getProcessMemoryInfo</a>( <span class='pre'>pids</span> ) : Object {android.os.Debug.MemoryInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return information about the memory usage of one or more processes. ...</div><div class='long'><p>Return information about the memory usage of one or more processes.</p>\n\n<p> <p><b>Note: this method is only intended for debugging or building\n a user-facing process management UI.</b></p></p>\n\n<p> <p>As of Android Q, for regular apps this method\n will only return information about the memory info for the processes running as the\n caller's uid; no other process memory info is available and will be zero.\n Also of Android Q the sample rate allowed\n by this API is significantly limited, if called faster the limit you will receive the\n same data as the previous call.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pids</span> : Object {int[]}<div class='sub-desc'><p>The pids of the processes whose memory usage is to be\n retrieved.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Debug.MemoryInfo}</span><div class='sub-desc'><p>Returns an array of memory information, one for each\n requested pid.</p>\n</div></li></ul></div></div></div><div id='method-getProcessesInErrorState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getProcessesInErrorState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getProcessesInErrorState' class='name expandable'>getProcessesInErrorState</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a list of any processes that are currently in an error condition. ...</div><div class='long'><p>Returns a list of any processes that are currently in an error condition.  The result\n will be null if all processes are running properly at this time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>Returns a list of ProcessErrorStateInfo records, or null if there are no\n current error conditions (it will not return an empty list).  This list ordering is not\n specified.</p>\n</div></li></ul></div></div></div><div id='method-getRecentTasks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getRecentTasks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getRecentTasks' class='name expandable'>getRecentTasks</a>( <span class='pre'>maxNum, flags, flags</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a list of the tasks that the user has recently launched, with\n the most recent being first and older ones afte...</div><div class='long'><p></p>\n\n\n<p>Return a list of the tasks that the user has recently launched, with\n the most recent being first and older ones after in order.</p>\n\n<p> <p><b>Note: this method is only intended for debugging and presenting\n task management user interfaces</b>.  This should never be used for\n core logic in an application, such as deciding between different\n behaviors based on the information found here.  Such uses are\n <em>not</em> supported, and will likely break in the future.  For\n example, if multiple applications can be actively running at the\n same time, assumptions made about the meaning of the data here for\n purposes of control flow will be incorrect.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>maxNum</span> : Number<div class='sub-desc'><p>The maximum number of entries to return in the list.  The\n actual number returned may be smaller, depending on how many tasks the\n user has started and the maximum number the system can remember.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Information about what to return.  May be any combination\n of <a href=\"#!/api/android.app.ActivityManager-property-RECENT_WITH_EXCLUDED\" rel=\"android.app.ActivityManager-property-RECENT_WITH_EXCLUDED\" class=\"docClass\">RECENT_WITH_EXCLUDED</a> and <a href=\"#!/api/android.app.ActivityManager-property-RECENT_IGNORE_UNAVAILABLE\" rel=\"android.app.ActivityManager-property-RECENT_IGNORE_UNAVAILABLE\" class=\"docClass\">RECENT_IGNORE_UNAVAILABLE</a>.</p>\n</div></li><li><span class='pre'>flags</span> : Object<div class='sub-desc'><p>Information about what to return.  May be any combination\n of <a href=\"#!/api/android.app.ActivityManager-property-RECENT_WITH_EXCLUDED\" rel=\"android.app.ActivityManager-property-RECENT_WITH_EXCLUDED\" class=\"docClass\">RECENT_WITH_EXCLUDED</a> and <a href=\"#!/api/android.app.ActivityManager-property-RECENT_IGNORE_UNAVAILABLE\" rel=\"android.app.ActivityManager-property-RECENT_IGNORE_UNAVAILABLE\" class=\"docClass\">RECENT_IGNORE_UNAVAILABLE</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>Returns a list of RecentTaskInfo records describing each of\n the recent tasks.</p>\n</div></li></ul></div></div></div><div id='method-getRunningAppProcesses' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getRunningAppProcesses' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getRunningAppProcesses' class='name expandable'>getRunningAppProcesses</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a list of application processes that are running on the device. ...</div><div class='long'><p>Returns a list of application processes that are running on the device.</p>\n\n<p> <p><b>Note: this method is only intended for debugging or building\n a user-facing process management UI.</b></p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>Returns a list of RunningAppProcessInfo records, or null if there are no\n running processes (it will not return an empty list).  This list ordering is not\n specified.</p>\n</div></li></ul></div></div></div><div id='method-getRunningServiceControlPanel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getRunningServiceControlPanel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getRunningServiceControlPanel' class='name expandable'>getRunningServiceControlPanel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a PendingIntent you can start to show a control panel for the\n given running service. ...</div><div class='long'><p>Returns a PendingIntent you can start to show a control panel for the\n given running service.  If the service does not have a control panel,\n null is returned.</p>\n</div></div></div><div id='method-getRunningServices' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getRunningServices' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getRunningServices' class='name expandable'>getRunningServices</a>( <span class='pre'>maxNum, maxNum</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a list of the services that are currently running. ...</div><div class='long'><p>Return a list of the services that are currently running.</p>\n\n<p> <p><b>Note: this method is only intended for debugging or implementing\n service management type user interfaces.</b></p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>maxNum</span> : Number<div class='sub-desc'><p>The maximum number of entries to return in the list.  The\n actual number returned may be smaller, depending on how many services\n are running.</p>\n</div></li><li><span class='pre'>maxNum</span> : Object<div class='sub-desc'><p>The maximum number of entries to return in the list.  The\n actual number returned may be smaller, depending on how many services\n are running.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>Returns a list of RunningServiceInfo records describing each of\n the running tasks.</p>\n</div></li></ul></div></div></div><div id='method-getRunningTasks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-getRunningTasks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-getRunningTasks' class='name expandable'>getRunningTasks</a>( <span class='pre'>maxNum, maxNum</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a list of the tasks that are currently running, with\n the most recent being first and older ones after in order. ...</div><div class='long'><p>Return a list of the tasks that are currently running, with\n the most recent being first and older ones after in order.  Note that\n \"running\" does not mean any of the task's code is currently loaded or\n activity -- the task may have been frozen by the system, so that it\n can be restarted in its previous state when next brought to the\n foreground.</p>\n\n<p> <p><b>Note: this method is only intended for debugging and presenting\n task management user interfaces</b>.  This should never be used for\n core logic in an application, such as deciding between different\n behaviors based on the information found here.  Such uses are\n <em>not</em> supported, and will likely break in the future.  For\n example, if multiple applications can be actively running at the\n same time, assumptions made about the meaning of the data here for\n purposes of control flow will be incorrect.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>maxNum</span> : Number<div class='sub-desc'><p>The maximum number of entries to return in the list.  The\n actual number returned may be smaller, depending on how many tasks the\n user has started.</p>\n</div></li><li><span class='pre'>maxNum</span> : Object<div class='sub-desc'><p>The maximum number of entries to return in the list.  The\n actual number returned may be smaller, depending on how many tasks the\n user has started.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>Returns a list of RunningTaskInfo records describing each of\n the running tasks.</p>\n</div></li></ul></div></div></div><div id='method-handleIncomingUser' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-handleIncomingUser' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-handleIncomingUser' class='name expandable'>handleIncomingUser</a>( <span class='pre'>callingPid, callingUid, userId, allowAll, requireFull, name, callerPackage, callerPackage</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callingPid</span> : Number<div class='sub-desc'><p>The pid of the incoming call, as per Binder.getCallingPid().</p>\n</div></li><li><span class='pre'>callingUid</span> : Number<div class='sub-desc'><p>The uid of the incoming call, as per Binder.getCallingUid().</p>\n</div></li><li><span class='pre'>userId</span> : Number<div class='sub-desc'><p>The user id argument supplied by the caller -- this is the user\n they want to run as.</p>\n</div></li><li><span class='pre'>allowAll</span> : Boolean<div class='sub-desc'><p>If true, we will allow USER_ALL.  This means you must be prepared\n to get a USER_ALL returned and deal with it correctly.  If false,\n an exception will be thrown if USER_ALL is supplied.</p>\n</div></li><li><span class='pre'>requireFull</span> : Boolean<div class='sub-desc'><p>If true, the caller must hold\n android.Manifest.permission.INTERACT_ACROSS_USERS_FULL to be able to run as a\n different user than their current process; otherwise they must hold\n android.Manifest.permission.INTERACT_ACROSS_USERS.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Optional textual name of the incoming call; only for generating error messages.</p>\n</div></li><li><span class='pre'>callerPackage</span> : String<div class='sub-desc'><p>Optional package name of caller; only for error messages.</p>\n</div></li><li><span class='pre'>callerPackage</span> : Object<div class='sub-desc'><p>Optional package name of caller; only for error messages.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns the user ID that the call should run as.  Will always be a concrete\n user number, unless <var>allowAll</var> is true in which case it could also be\n USER_ALL.</p>\n</div></li></ul></div></div></div><div id='method-isActivityStartAllowedOnDisplay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isActivityStartAllowedOnDisplay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isActivityStartAllowedOnDisplay' class='name expandable'>isActivityStartAllowedOnDisplay</a>( <span class='pre'>context, displayId, intent, context, displayId, intent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check if the context is allowed to start an activity on specified display. ...</div><div class='long'><p>Check if the context is allowed to start an activity on specified display. Some launch\n restrictions may apply to secondary displays that are private, virtual, or owned by the\n system, in which case an activity start may throw a SecurityException. Call this\n method prior to starting an activity on a secondary display to check if the current context\n has access to it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>Source context, from which an activity will be started.</p>\n</div></li><li><span class='pre'>displayId</span> : Number<div class='sub-desc'><p>Target display id.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>Intent used to launch an activity.</p>\n</div></li><li><span class='pre'>context</span> : Object<div class='sub-desc'><p>Source context, from which an activity will be started.</p>\n</div></li><li><span class='pre'>displayId</span> : Object<div class='sub-desc'><p>Target display id.</p>\n</div></li><li><span class='pre'>intent</span> : Object<div class='sub-desc'><p>Intent used to launch an activity.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if a call to start an activity on the target display is allowed for the\n provided context and no SecurityException will be thrown, {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isBackgroundRestricted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isBackgroundRestricted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isBackgroundRestricted' class='name expandable'>isBackgroundRestricted</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Query whether the user has enabled background restrictions for this app. ...</div><div class='long'><p>Query whether the user has enabled background restrictions for this app.</p>\n\n<p> <p> The user may chose to do this, if they see that an app is consuming an unreasonable\n amount of battery while in the background. </p></p>\n\n<p> <p> If true, any work that the app tries to do will be aggressively restricted while it is in\n the background. At a minimum, jobs and alarms will not execute and foreground services\n cannot be started unless an app activity is in the foreground. </p></p>\n\n<p> <p><b> Note that these restrictions stay in effect even when the device is charging.</b></p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if user has enforced background restrictions for this app, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isInLockTaskMode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isInLockTaskMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isInLockTaskMode' class='name expandable'>isInLockTaskMode</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return whether currently in lock task mode. ...</div><div class='long'><p>Return whether currently in lock task mode.  When in this mode\n no new tasks can be created or switched to.\n@see Activity#startLockTask()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use <a href=\"#!/api/android.app.ActivityManager-method-getLockTaskModeState\" rel=\"android.app.ActivityManager-method-getLockTaskModeState\" class=\"docClass\">getLockTaskModeState</a> instead.</p>\n\n        </div>\n</div></div></div><div id='method-isLowRamDevice' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isLowRamDevice' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isLowRamDevice' class='name expandable'>isLowRamDevice</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this is a low-RAM device. ...</div><div class='long'><p>Returns true if this is a low-RAM device.  Exactly whether a device is low-RAM\n is ultimately up to the device configuration, but currently it generally means\n something with 1GB or less of RAM.  This is mostly intended to be used by apps\n to determine whether they should turn off certain features that require more RAM.</p>\n</div></div></div><div id='method-isRunningInTestHarness' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isRunningInTestHarness' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isRunningInTestHarness' class='name expandable'>isRunningInTestHarness</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns \"true\" if device is running in a test harness. ...</div><div class='long'><p>Returns \"true\" if device is running in a test harness.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>this method is false for all user builds. Users looking to check if their device\n is running in a device farm should see isRunningInUserTestHarness().</p>\n\n        </div>\n</div></div></div><div id='method-isRunningInUserTestHarness' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isRunningInUserTestHarness' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isRunningInUserTestHarness' class='name expandable'>isRunningInUserTestHarness</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns \"true\" if the device is running in Test Harness Mode. ...</div><div class='long'><p>Returns \"true\" if the device is running in Test Harness Mode.</p>\n\n<p> <p>Test Harness Mode is a feature that allows devices to run without human interaction in a\n device farm/testing harness (such as Firebase Test Lab). You should check this method if you\n want your app to behave differently when running in a test harness to skip setup screens that\n would impede UI testing. e.g. a keyboard application that has a full screen setup page for\n the first time it is launched.</p>\n\n<p> <p>Note that you should <em>not</em> use this to determine whether or not your app is running\n an instrumentation test, as it is not set for a standard device running a test.</p>\n</div></div></div><div id='method-isUserAMonkey' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isUserAMonkey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isUserAMonkey' class='name expandable'>isUserAMonkey</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns \"true\" if the user interface is currently being messed with\n by a monkey. ...</div><div class='long'><p>Returns \"true\" if the user interface is currently being messed with\n by a monkey.</p>\n</div></div></div><div id='method-isVrModePackageEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-isVrModePackageEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-isVrModePackageEnabled' class='name expandable'>isVrModePackageEnabled</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-killBackgroundProcesses' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-killBackgroundProcesses' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-killBackgroundProcesses' class='name expandable'>killBackgroundProcesses</a>( <span class='pre'>packageName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Have the system immediately kill all background processes associated\n with the given package. ...</div><div class='long'><p>Have the system immediately kill all background processes associated\n with the given package.  This is the same as the kernel killing those\n processes to reclaim memory; the system will take care of restarting\n these processes in the future as needed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>packageName</span> : String<div class='sub-desc'><p>The name of the package whose processes are to\n be killed.</p>\n</div></li></ul></div></div></div><div id='method-moveTaskToFront' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-moveTaskToFront' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-moveTaskToFront' class='name expandable'>moveTaskToFront</a>( <span class='pre'>taskId, flags, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask that the task associated with a given task ID be moved to the\n front of the stack, so it is now visible to the user. ...</div><div class='long'><p>Ask that the task associated with a given task ID be moved to the\n front of the stack, so it is now visible to the user.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>taskId</span> : Number<div class='sub-desc'><p>The identifier of the task to be moved, as found in\n RunningTaskInfo or RecentTaskInfo.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>Additional operational flags.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for the operation, either null or\n as per android.os.Bundle)\n Context.startActivity(Intent, Bundle).</p>\n</div></li></ul></div></div></div><div id='method-restartPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-restartPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-restartPackage' class='name expandable'>restartPackage</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This is now just a wrapper for\n killBackgroundProcesses(String); the previous behavior here\n is no longer available to applications because it allows them to\n break other applications by removing their alarms, stopping their\n services, etc.</p>\n\n        </div>\n</div></div></div><div id='method-setVrThread' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-setVrThread' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-setVrThread' class='name expandable'>setVrThread</a>( <span class='pre'>tid, tid</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable more aggressive scheduling for latency-sensitive low-runtime VR threads. ...</div><div class='long'><p>Enable more aggressive scheduling for latency-sensitive low-runtime VR threads. Only one\n thread can be a VR thread in a process at a time, and that thread may be subject to\n restrictions on the amount of time it can run.</p>\n\n<p> If persistent VR mode is set, whatever thread has been granted aggressive scheduling via this\n method will return to normal operation, and calling this method will do nothing while\n persistent VR mode is enabled.</p>\n\n<p> To reset the VR thread for an application, a tid of 0 can be passed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tid</span> : Number<div class='sub-desc'><p>tid of the VR thread</p>\n</div></li><li><span class='pre'>tid</span> : Object<div class='sub-desc'><p>tid of the VR thread</p>\n</div></li></ul></div></div></div><div id='method-setWatchHeapLimit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.ActivityManager'>android.app.ActivityManager</span><br/><a href='source/ActivityManager.html#android-app-ActivityManager-method-setWatchHeapLimit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.ActivityManager-method-setWatchHeapLimit' class='name expandable'>setWatchHeapLimit</a>( <span class='pre'>pssSize</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request that the system start watching for the calling process to exceed a pss\n size as given here. ...</div><div class='long'><p>Request that the system start watching for the calling process to exceed a pss\n size as given here.  Once called, the system will look for any occasions where it\n sees the associated process with a larger pss size and, when this happens, automatically\n pull a heap dump from it and allow the user to share the data.  Note that this request\n continues running even if the process is killed and restarted.  To remove the watch,\n use <a href=\"#!/api/android.app.ActivityManager-method-clearWatchHeapLimit\" rel=\"android.app.ActivityManager-method-clearWatchHeapLimit\" class=\"docClass\">clearWatchHeapLimit</a>().</p>\n\n<p> <p>This API only works if the calling process has been marked as\n android.app.ApplicationInfo.FLAG_DEBUGGABLE or this is running on a debuggable\n (userdebug or eng) build.</p></p>\n\n<p> <p>Callers can optionally implement <a href=\"#!/api/android.app.ActivityManager-property-ACTION_REPORT_HEAP_LIMIT\" rel=\"android.app.ActivityManager-property-ACTION_REPORT_HEAP_LIMIT\" class=\"docClass\">ACTION_REPORT_HEAP_LIMIT</a> to directly\n handle heap limit reports themselves.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pssSize</span> : Number<div class='sub-desc'><p>The size in bytes to set the limit at.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});