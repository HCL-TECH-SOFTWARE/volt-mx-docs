Ext.data.JsonP.android_app_AppOpsManager_DataBucketKey({"tagname":"class","name":"android.app.AppOpsManager.DataBucketKey","autodetected":{},"files":[{"filename":"DataBucketKey.js","href":"DataBucketKey.html#android-app-AppOpsManager-DataBucketKey"}],"hide":true,"members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.app.AppOpsManager.DataBucketKey","short_doc":"implements java.lang.annotation.Annotation\n\n Key for a data bucket storing app op state. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/DataBucketKey.html#android-app-AppOpsManager-DataBucketKey' target='_blank'>DataBucketKey.js</a></div></pre><div class='doc-contents'><p>implements java.lang.annotation.Annotation</p>\n\n<p> Key for a data bucket storing app op state. The bucket\n is composed of the uid state and state flags. This way\n we can query data for given uid state and a set of flags where\n the flags control which type of data to get. For example,\n one can get the ops an app did on behalf of other apps\n while in the background.</p>\n</div><div class='members'></div></div>","meta":{}});