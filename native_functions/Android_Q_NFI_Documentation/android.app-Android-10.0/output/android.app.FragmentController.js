Ext.data.JsonP.android_app_FragmentController({"tagname":"class","name":"android.app.FragmentController","autodetected":{},"files":[{"filename":"FragmentController.js","href":"FragmentController.html#android-app-FragmentController"}],"extends":"java.lang.Object","deprecated":{"text":"<p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.app.FragmentController</p>\n"},"members":[{"name":"attachHost","tagname":"method","owner":"android.app.FragmentController","id":"method-attachHost","meta":{}},{"name":"createController","tagname":"method","owner":"android.app.FragmentController","id":"method-createController","meta":{}},{"name":"dispatchActivityCreated","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchActivityCreated","meta":{}},{"name":"dispatchConfigurationChanged","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchConfigurationChanged","meta":{}},{"name":"dispatchContextItemSelected","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchContextItemSelected","meta":{}},{"name":"dispatchCreate","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchCreate","meta":{}},{"name":"dispatchCreateOptionsMenu","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchCreateOptionsMenu","meta":{}},{"name":"dispatchDestroy","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchDestroy","meta":{}},{"name":"dispatchDestroyView","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchDestroyView","meta":{}},{"name":"dispatchLowMemory","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchLowMemory","meta":{}},{"name":"dispatchMultiWindowModeChanged","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchMultiWindowModeChanged","meta":{}},{"name":"dispatchOptionsItemSelected","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchOptionsItemSelected","meta":{}},{"name":"dispatchOptionsMenuClosed","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchOptionsMenuClosed","meta":{}},{"name":"dispatchPause","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchPause","meta":{}},{"name":"dispatchPictureInPictureModeChanged","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchPictureInPictureModeChanged","meta":{}},{"name":"dispatchPrepareOptionsMenu","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchPrepareOptionsMenu","meta":{}},{"name":"dispatchResume","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchResume","meta":{}},{"name":"dispatchStart","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchStart","meta":{}},{"name":"dispatchStop","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchStop","meta":{}},{"name":"dispatchTrimMemory","tagname":"method","owner":"android.app.FragmentController","id":"method-dispatchTrimMemory","meta":{}},{"name":"doLoaderDestroy","tagname":"method","owner":"android.app.FragmentController","id":"method-doLoaderDestroy","meta":{}},{"name":"doLoaderStart","tagname":"method","owner":"android.app.FragmentController","id":"method-doLoaderStart","meta":{}},{"name":"doLoaderStop","tagname":"method","owner":"android.app.FragmentController","id":"method-doLoaderStop","meta":{}},{"name":"dumpLoaders","tagname":"method","owner":"android.app.FragmentController","id":"method-dumpLoaders","meta":{}},{"name":"execPendingActions","tagname":"method","owner":"android.app.FragmentController","id":"method-execPendingActions","meta":{}},{"name":"findFragmentByWho","tagname":"method","owner":"android.app.FragmentController","id":"method-findFragmentByWho","meta":{}},{"name":"getFragmentManager","tagname":"method","owner":"android.app.FragmentController","id":"method-getFragmentManager","meta":{}},{"name":"getLoaderManager","tagname":"method","owner":"android.app.FragmentController","id":"method-getLoaderManager","meta":{}},{"name":"noteStateNotSaved","tagname":"method","owner":"android.app.FragmentController","id":"method-noteStateNotSaved","meta":{}},{"name":"onCreateView","tagname":"method","owner":"android.app.FragmentController","id":"method-onCreateView","meta":{}},{"name":"reportLoaderStart","tagname":"method","owner":"android.app.FragmentController","id":"method-reportLoaderStart","meta":{}},{"name":"restoreAllState","tagname":"method","owner":"android.app.FragmentController","id":"method-restoreAllState","meta":{}},{"name":"restoreLoaderNonConfig","tagname":"method","owner":"android.app.FragmentController","id":"method-restoreLoaderNonConfig","meta":{}},{"name":"retainLoaderNonConfig","tagname":"method","owner":"android.app.FragmentController","id":"method-retainLoaderNonConfig","meta":{}},{"name":"retainNestedNonConfig","tagname":"method","owner":"android.app.FragmentController","id":"method-retainNestedNonConfig","meta":{}},{"name":"retainNonConfig","tagname":"method","owner":"android.app.FragmentController","id":"method-retainNonConfig","meta":{"deprecated":{"text":"<p>use retainNestedNonConfig() to also track retained\n             nested child fragments</p>\n"}}},{"name":"saveAllState","tagname":"method","owner":"android.app.FragmentController","id":"method-saveAllState","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.FragmentController","short_doc":"Provides integration points with a android.app.FragmentManager for a fragment host. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.FragmentController</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FragmentController.html#android-app-FragmentController' target='_blank'>FragmentController.js</a></div></pre><div class='doc-contents'><p>Provides integration points with a <a href=\"#!/api/android.app.FragmentManager\" rel=\"android.app.FragmentManager\" class=\"docClass\">android.app.FragmentManager</a> for a fragment host.\n <p>\n It is the responsibility of the host to take care of the Fragment's lifecycle.\n The methods provided by <a href=\"#!/api/android.app.FragmentController\" rel=\"android.app.FragmentController\" class=\"docClass\">android.app.FragmentController</a> are for that purpose.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.app.FragmentController</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-attachHost' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-attachHost' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-attachHost' class='name expandable'>attachHost</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attaches the host to the FragmentManager for this controller. ...</div><div class='long'><p>Attaches the host to the FragmentManager for this controller. The host must be\n attached before the FragmentManager can be used to manage Fragments.</p>\n</div></div></div><div id='method-createController' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-createController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-createController' class='name expandable'>createController</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a android.app.FragmentController. ...</div><div class='long'><p>Returns a <a href=\"#!/api/android.app.FragmentController\" rel=\"android.app.FragmentController\" class=\"docClass\">android.app.FragmentController</a>.</p>\n</div></div></div><div id='method-dispatchActivityCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchActivityCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchActivityCreated' class='name expandable'>dispatchActivityCreated</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the activity created state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the activity created state.\n <p>Call when Fragments should be informed their host has been created.\n@see Fragment#onActivityCreated(Bundle)</p>\n</div></div></div><div id='method-dispatchConfigurationChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchConfigurationChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchConfigurationChanged' class='name expandable'>dispatchConfigurationChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager\n know a configuration change occurred. ...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager\n know a configuration change occurred.\n <p>Call when there is a configuration change.\n@see Fragment#onConfigurationChanged(Configuration)</p>\n</div></div></div><div id='method-dispatchContextItemSelected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchContextItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchContextItemSelected' class='name expandable'>dispatchContextItemSelected</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends a context item selection event to the Fragments managed by the\n controller's FragmentManager. ...</div><div class='long'><p>Sends a context item selection event to the Fragments managed by the\n controller's FragmentManager. Once the event has been consumed,\n no additional handling will be performed.\n <p>Call immediately after an options menu item has been selected</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the context menu selection event was consumed\n@see Fragment#onContextItemSelected(MenuItem)</p>\n</div></li></ul></div></div></div><div id='method-dispatchCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchCreate' class='name expandable'>dispatchCreate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the create state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the create state.\n <p>Call when Fragments should be created.\n@see Fragment#onCreate(Bundle)</p>\n</div></div></div><div id='method-dispatchCreateOptionsMenu' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchCreateOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchCreateOptionsMenu' class='name expandable'>dispatchCreateOptionsMenu</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager\n know they should create an options menu. ...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager\n know they should create an options menu.\n <p>Call when the Fragment should create an options menu.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the options menu contains items to display\n@see Fragment#onCreateOptionsMenu(Menu, MenuInflater)</p>\n</div></li></ul></div></div></div><div id='method-dispatchDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchDestroy' class='name expandable'>dispatchDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the destroy state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the destroy state.\n <p>Call when Fragments should be destroyed.\n@see Fragment#onDestroy()</p>\n</div></div></div><div id='method-dispatchDestroyView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchDestroyView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchDestroyView' class='name expandable'>dispatchDestroyView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the destroy view state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the destroy view state.\n <p>Call when the Fragment's views should be destroyed.\n@see Fragment#onDestroyView()</p>\n</div></div></div><div id='method-dispatchLowMemory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchLowMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchLowMemory' class='name expandable'>dispatchLowMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager\n know the device is in a low memory condition. ...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager\n know the device is in a low memory condition.\n <p>Call when the device is low on memory and Fragment's should trim\n their memory usage.\n@see Fragment#onLowMemory()</p>\n</div></div></div><div id='method-dispatchMultiWindowModeChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchMultiWindowModeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchMultiWindowModeChanged' class='name expandable'>dispatchMultiWindowModeChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager know the multi-window mode of\n the activity changed. ...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager know the multi-window mode of\n the activity changed.\n <p>Call when the multi-window mode of the activity changed.\n@see Fragment#onMultiWindowModeChanged</p>\n</div></div></div><div id='method-dispatchOptionsItemSelected' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchOptionsItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchOptionsItemSelected' class='name expandable'>dispatchOptionsItemSelected</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sends an option item selection event to the Fragments managed by the\n controller's FragmentManager. ...</div><div class='long'><p>Sends an option item selection event to the Fragments managed by the\n controller's FragmentManager. Once the event has been consumed,\n no additional handling will be performed.\n <p>Call immediately after an options menu item has been selected</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the options menu selection event was consumed\n@see Fragment#onOptionsItemSelected(MenuItem)</p>\n</div></li></ul></div></div></div><div id='method-dispatchOptionsMenuClosed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchOptionsMenuClosed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchOptionsMenuClosed' class='name expandable'>dispatchOptionsMenuClosed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager\n know their options menu has closed. ...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager\n know their options menu has closed.\n <p>Call immediately after closing the Fragment's options menu.\n@see Fragment#onOptionsMenuClosed(Menu)</p>\n</div></div></div><div id='method-dispatchPause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchPause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchPause' class='name expandable'>dispatchPause</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the pause state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the pause state.\n <p>Call when Fragments should be paused.\n@see Fragment#onPause()</p>\n</div></div></div><div id='method-dispatchPictureInPictureModeChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchPictureInPictureModeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchPictureInPictureModeChanged' class='name expandable'>dispatchPictureInPictureModeChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager know the picture-in-picture\n mode of the activity chan...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager know the picture-in-picture\n mode of the activity changed.\n <p>Call when the picture-in-picture mode of the activity changed.\n@see Fragment#onPictureInPictureModeChanged</p>\n</div></div></div><div id='method-dispatchPrepareOptionsMenu' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchPrepareOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchPrepareOptionsMenu' class='name expandable'>dispatchPrepareOptionsMenu</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager\n know they should prepare their options menu for display. ...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager\n know they should prepare their options menu for display.\n <p>Call immediately before displaying the Fragment's options menu.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the options menu contains items to display\n@see Fragment#onPrepareOptionsMenu(Menu)</p>\n</div></li></ul></div></div></div><div id='method-dispatchResume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchResume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchResume' class='name expandable'>dispatchResume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the resume state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the resume state.\n <p>Call when Fragments should be resumed.\n@see Fragment#onResume()</p>\n</div></div></div><div id='method-dispatchStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchStart' class='name expandable'>dispatchStart</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the start state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the start state.\n <p>Call when Fragments should be started.\n@see Fragment#onStart()</p>\n</div></div></div><div id='method-dispatchStop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchStop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchStop' class='name expandable'>dispatchStop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Moves all Fragments managed by the controller's FragmentManager\n into the stop state. ...</div><div class='long'><p>Moves all Fragments managed by the controller's FragmentManager\n into the stop state.\n <p>Call when Fragments should be stopped.\n@see Fragment#onStop()</p>\n</div></div></div><div id='method-dispatchTrimMemory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dispatchTrimMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dispatchTrimMemory' class='name expandable'>dispatchTrimMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets all Fragments managed by the controller's FragmentManager\n know they should trim their memory usage. ...</div><div class='long'><p>Lets all Fragments managed by the controller's FragmentManager\n know they should trim their memory usage.\n <p>Call when the Fragment can release allocated memory [such as if\n the Fragment is in the background].\n@see Fragment#onTrimMemory(int)</p>\n</div></div></div><div id='method-doLoaderDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-doLoaderDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-doLoaderDestroy' class='name expandable'>doLoaderDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Destroys the loaders and, if their state is not being retained, removes them. ...</div><div class='long'><p>Destroys the loaders and, if their state is not being retained, removes them.</p>\n</div></div></div><div id='method-doLoaderStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-doLoaderStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-doLoaderStart' class='name expandable'>doLoaderStart</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts the loaders. ...</div><div class='long'><p>Starts the loaders.</p>\n</div></div></div><div id='method-doLoaderStop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-doLoaderStop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-doLoaderStop' class='name expandable'>doLoaderStop</a>( <span class='pre'>retain</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stops the loaders, optionally retaining their state. ...</div><div class='long'><p>Stops the loaders, optionally retaining their state. This is useful for keeping the\n loader state across configuration changes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>retain</span> : Boolean<div class='sub-desc'><p>When {@code true}, the loaders aren't stopped, but, their instances\n are retained in a started state</p>\n</div></li></ul></div></div></div><div id='method-dumpLoaders' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-dumpLoaders' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-dumpLoaders' class='name expandable'>dumpLoaders</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dumps the current state of the loaders. ...</div><div class='long'><p>Dumps the current state of the loaders.</p>\n</div></div></div><div id='method-execPendingActions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-execPendingActions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-execPendingActions' class='name expandable'>execPendingActions</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Execute any pending actions for the Fragments managed by the\n controller's FragmentManager. ...</div><div class='long'><p>Execute any pending actions for the Fragments managed by the\n controller's FragmentManager.\n <p>Call when queued actions can be performed [eg when the\n Fragment moves into a start or resume state].</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if queued actions were performed</p>\n</div></li></ul></div></div></div><div id='method-findFragmentByWho' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-findFragmentByWho' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-findFragmentByWho' class='name expandable'>findFragmentByWho</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a fragment with the given identifier. ...</div><div class='long'><p>Returns a fragment with the given identifier.</p>\n</div></div></div><div id='method-getFragmentManager' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-getFragmentManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-getFragmentManager' class='name expandable'>getFragmentManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a android.app.FragmentManager for this controller. ...</div><div class='long'><p>Returns a <a href=\"#!/api/android.app.FragmentManager\" rel=\"android.app.FragmentManager\" class=\"docClass\">android.app.FragmentManager</a> for this controller.</p>\n</div></div></div><div id='method-getLoaderManager' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-getLoaderManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-getLoaderManager' class='name expandable'>getLoaderManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a android.app.LoaderManager. ...</div><div class='long'><p>Returns a <a href=\"#!/api/android.app.LoaderManager\" rel=\"android.app.LoaderManager\" class=\"docClass\">android.app.LoaderManager</a>.</p>\n</div></div></div><div id='method-noteStateNotSaved' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-noteStateNotSaved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-noteStateNotSaved' class='name expandable'>noteStateNotSaved</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Marks the fragment state as unsaved. ...</div><div class='long'><p>Marks the fragment state as unsaved. This allows for \"state loss\" detection.</p>\n</div></div></div><div id='method-onCreateView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-onCreateView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-onCreateView' class='name expandable'>onCreateView</a>( <span class='pre'>parent, name, context, attrs</span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Instantiates a Fragment's view. ...</div><div class='long'><p>Instantiates a Fragment's view.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parent</span> : Object {View}<div class='sub-desc'><p>The parent that the created view will be placed\n in; <em>note that this may be null</em>.</p>\n</div></li><li><span class='pre'>name</span> : String<div class='sub-desc'><p>Tag name to be inflated.</p>\n</div></li><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>The context the view is being created in.</p>\n</div></li><li><span class='pre'>attrs</span> : Object {AttributeSet}<div class='sub-desc'><p>Inflation attributes as specified in XML file.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>view the newly created view</p>\n</div></li></ul></div></div></div><div id='method-reportLoaderStart' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-reportLoaderStart' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-reportLoaderStart' class='name expandable'>reportLoaderStart</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Lets the loaders know the host is ready to receive notifications. ...</div><div class='long'><p>Lets the loaders know the host is ready to receive notifications.</p>\n</div></div></div><div id='method-restoreAllState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-restoreAllState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-restoreAllState' class='name expandable'>restoreAllState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restores the saved state for all Fragments. ...</div><div class='long'><p>Restores the saved state for all Fragments. The given FragmentManagerNonConfig are Fragment\n instances retained across configuration changes, including nested fragments\n@see <a href=\"#!/api/android.app.FragmentController-method-retainNestedNonConfig\" rel=\"android.app.FragmentController-method-retainNestedNonConfig\" class=\"docClass\">retainNestedNonConfig</a>()</p>\n</div></div></div><div id='method-restoreLoaderNonConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-restoreLoaderNonConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-restoreLoaderNonConfig' class='name expandable'>restoreLoaderNonConfig</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restores the saved state for all LoaderManagers. ...</div><div class='long'><p>Restores the saved state for all LoaderManagers. The given LoaderManager list are\n LoaderManager instances retained across configuration changes.\n@see <a href=\"#!/api/android.app.FragmentController-method-retainLoaderNonConfig\" rel=\"android.app.FragmentController-method-retainLoaderNonConfig\" class=\"docClass\">retainLoaderNonConfig</a>()</p>\n</div></div></div><div id='method-retainLoaderNonConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-retainLoaderNonConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-retainLoaderNonConfig' class='name expandable'>retainLoaderNonConfig</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a list of LoaderManagers that have opted to retain their instance across\n configuration changes. ...</div><div class='long'><p>Returns a list of LoaderManagers that have opted to retain their instance across\n configuration changes.</p>\n</div></div></div><div id='method-retainNestedNonConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-retainNestedNonConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-retainNestedNonConfig' class='name expandable'>retainNestedNonConfig</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a nested tree of Fragments that have opted to retain their instance across\n configuration changes. ...</div><div class='long'><p>Returns a nested tree of Fragments that have opted to retain their instance across\n configuration changes.</p>\n</div></div></div><div id='method-retainNonConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-retainNonConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-retainNonConfig' class='name expandable'>retainNonConfig</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns a list of Fragments that have opted to retain their instance across\n configuration changes. ...</div><div class='long'><p>Returns a list of Fragments that have opted to retain their instance across\n configuration changes.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>use retainNestedNonConfig() to also track retained\n             nested child fragments</p>\n\n        </div>\n</div></div></div><div id='method-saveAllState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.FragmentController'>android.app.FragmentController</span><br/><a href='source/FragmentController.html#android-app-FragmentController-method-saveAllState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.FragmentController-method-saveAllState' class='name expandable'>saveAllState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Saves the state for all Fragments. ...</div><div class='long'><p>Saves the state for all Fragments.</p>\n</div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use the <a href=\"{@docRoot}tools/extras/support-library.html\">Support Library</a>\n      android.support.v4.app.FragmentController</p>\n"}}});