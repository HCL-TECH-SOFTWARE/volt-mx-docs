Ext.data.JsonP.android_app_NotificationManager({"tagname":"class","name":"android.app.NotificationManager","autodetected":{},"files":[{"filename":"NotificationManager.js","href":"NotificationManager.html#android-app-NotificationManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_APP_BLOCK_STATE_CHANGED","tagname":"property","owner":"android.app.NotificationManager","id":"property-ACTION_APP_BLOCK_STATE_CHANGED","meta":{}},{"name":"ACTION_AUTOMATIC_ZEN_RULE","tagname":"property","owner":"android.app.NotificationManager","id":"property-ACTION_AUTOMATIC_ZEN_RULE","meta":{}},{"name":"ACTION_INTERRUPTION_FILTER_CHANGED","tagname":"property","owner":"android.app.NotificationManager","id":"property-ACTION_INTERRUPTION_FILTER_CHANGED","meta":{}},{"name":"ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED","tagname":"property","owner":"android.app.NotificationManager","id":"property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED","meta":{}},{"name":"ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED","tagname":"property","owner":"android.app.NotificationManager","id":"property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED","meta":{}},{"name":"ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED","tagname":"property","owner":"android.app.NotificationManager","id":"property-ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED","meta":{}},{"name":"ACTION_NOTIFICATION_POLICY_CHANGED","tagname":"property","owner":"android.app.NotificationManager","id":"property-ACTION_NOTIFICATION_POLICY_CHANGED","meta":{}},{"name":"EXTRA_AUTOMATIC_RULE_ID","tagname":"property","owner":"android.app.NotificationManager","id":"property-EXTRA_AUTOMATIC_RULE_ID","meta":{}},{"name":"EXTRA_BLOCKED_STATE","tagname":"property","owner":"android.app.NotificationManager","id":"property-EXTRA_BLOCKED_STATE","meta":{}},{"name":"EXTRA_NOTIFICATION_CHANNEL_GROUP_ID","tagname":"property","owner":"android.app.NotificationManager","id":"property-EXTRA_NOTIFICATION_CHANNEL_GROUP_ID","meta":{}},{"name":"EXTRA_NOTIFICATION_CHANNEL_ID","tagname":"property","owner":"android.app.NotificationManager","id":"property-EXTRA_NOTIFICATION_CHANNEL_ID","meta":{}},{"name":"IMPORTANCE_DEFAULT","tagname":"property","owner":"android.app.NotificationManager","id":"property-IMPORTANCE_DEFAULT","meta":{}},{"name":"IMPORTANCE_HIGH","tagname":"property","owner":"android.app.NotificationManager","id":"property-IMPORTANCE_HIGH","meta":{}},{"name":"IMPORTANCE_LOW","tagname":"property","owner":"android.app.NotificationManager","id":"property-IMPORTANCE_LOW","meta":{}},{"name":"IMPORTANCE_MAX","tagname":"property","owner":"android.app.NotificationManager","id":"property-IMPORTANCE_MAX","meta":{}},{"name":"IMPORTANCE_MIN","tagname":"property","owner":"android.app.NotificationManager","id":"property-IMPORTANCE_MIN","meta":{}},{"name":"IMPORTANCE_NONE","tagname":"property","owner":"android.app.NotificationManager","id":"property-IMPORTANCE_NONE","meta":{}},{"name":"IMPORTANCE_UNSPECIFIED","tagname":"property","owner":"android.app.NotificationManager","id":"property-IMPORTANCE_UNSPECIFIED","meta":{}},{"name":"INTERRUPTION_FILTER_ALARMS","tagname":"property","owner":"android.app.NotificationManager","id":"property-INTERRUPTION_FILTER_ALARMS","meta":{}},{"name":"INTERRUPTION_FILTER_ALL","tagname":"property","owner":"android.app.NotificationManager","id":"property-INTERRUPTION_FILTER_ALL","meta":{}},{"name":"INTERRUPTION_FILTER_NONE","tagname":"property","owner":"android.app.NotificationManager","id":"property-INTERRUPTION_FILTER_NONE","meta":{}},{"name":"INTERRUPTION_FILTER_PRIORITY","tagname":"property","owner":"android.app.NotificationManager","id":"property-INTERRUPTION_FILTER_PRIORITY","meta":{}},{"name":"INTERRUPTION_FILTER_UNKNOWN","tagname":"property","owner":"android.app.NotificationManager","id":"property-INTERRUPTION_FILTER_UNKNOWN","meta":{}},{"name":"META_DATA_AUTOMATIC_RULE_TYPE","tagname":"property","owner":"android.app.NotificationManager","id":"property-META_DATA_AUTOMATIC_RULE_TYPE","meta":{}},{"name":"META_DATA_RULE_INSTANCE_LIMIT","tagname":"property","owner":"android.app.NotificationManager","id":"property-META_DATA_RULE_INSTANCE_LIMIT","meta":{}},{"name":"addAutomaticZenRule","tagname":"method","owner":"android.app.NotificationManager","id":"method-addAutomaticZenRule","meta":{}},{"name":"areBubblesAllowed","tagname":"method","owner":"android.app.NotificationManager","id":"method-areBubblesAllowed","meta":{}},{"name":"areNotificationsEnabled","tagname":"method","owner":"android.app.NotificationManager","id":"method-areNotificationsEnabled","meta":{}},{"name":"areNotificationsPaused","tagname":"method","owner":"android.app.NotificationManager","id":"method-areNotificationsPaused","meta":{}},{"name":"canNotifyAsPackage","tagname":"method","owner":"android.app.NotificationManager","id":"method-canNotifyAsPackage","meta":{}},{"name":"cancel","tagname":"method","owner":"android.app.NotificationManager","id":"method-cancel","meta":{}},{"name":"cancelAll","tagname":"method","owner":"android.app.NotificationManager","id":"method-cancelAll","meta":{}},{"name":"createNotificationChannel","tagname":"method","owner":"android.app.NotificationManager","id":"method-createNotificationChannel","meta":{}},{"name":"createNotificationChannelGroup","tagname":"method","owner":"android.app.NotificationManager","id":"method-createNotificationChannelGroup","meta":{}},{"name":"createNotificationChannelGroups","tagname":"method","owner":"android.app.NotificationManager","id":"method-createNotificationChannelGroups","meta":{}},{"name":"createNotificationChannels","tagname":"method","owner":"android.app.NotificationManager","id":"method-createNotificationChannels","meta":{}},{"name":"deleteNotificationChannel","tagname":"method","owner":"android.app.NotificationManager","id":"method-deleteNotificationChannel","meta":{}},{"name":"deleteNotificationChannelGroup","tagname":"method","owner":"android.app.NotificationManager","id":"method-deleteNotificationChannelGroup","meta":{}},{"name":"from","tagname":"method","owner":"android.app.NotificationManager","id":"method-from","meta":{}},{"name":"getActiveNotifications","tagname":"method","owner":"android.app.NotificationManager","id":"method-getActiveNotifications","meta":{}},{"name":"getAutomaticZenRule","tagname":"method","owner":"android.app.NotificationManager","id":"method-getAutomaticZenRule","meta":{}},{"name":"getAutomaticZenRules","tagname":"method","owner":"android.app.NotificationManager","id":"method-getAutomaticZenRules","meta":{}},{"name":"getCurrentInterruptionFilter","tagname":"method","owner":"android.app.NotificationManager","id":"method-getCurrentInterruptionFilter","meta":{}},{"name":"getImportance","tagname":"method","owner":"android.app.NotificationManager","id":"method-getImportance","meta":{}},{"name":"getNotificationChannel","tagname":"method","owner":"android.app.NotificationManager","id":"method-getNotificationChannel","meta":{}},{"name":"getNotificationChannelGroup","tagname":"method","owner":"android.app.NotificationManager","id":"method-getNotificationChannelGroup","meta":{}},{"name":"getNotificationChannelGroups","tagname":"method","owner":"android.app.NotificationManager","id":"method-getNotificationChannelGroups","meta":{}},{"name":"getNotificationChannels","tagname":"method","owner":"android.app.NotificationManager","id":"method-getNotificationChannels","meta":{}},{"name":"getNotificationDelegate","tagname":"method","owner":"android.app.NotificationManager","id":"method-getNotificationDelegate","meta":{}},{"name":"getNotificationPolicy","tagname":"method","owner":"android.app.NotificationManager","id":"method-getNotificationPolicy","meta":{}},{"name":"isNotificationListenerAccessGranted","tagname":"method","owner":"android.app.NotificationManager","id":"method-isNotificationListenerAccessGranted","meta":{}},{"name":"isNotificationPolicyAccessGranted","tagname":"method","owner":"android.app.NotificationManager","id":"method-isNotificationPolicyAccessGranted","meta":{}},{"name":"notify","tagname":"method","owner":"android.app.NotificationManager","id":"method-notify","meta":{}},{"name":"notifyAsPackage","tagname":"method","owner":"android.app.NotificationManager","id":"method-notifyAsPackage","meta":{}},{"name":"removeAutomaticZenRule","tagname":"method","owner":"android.app.NotificationManager","id":"method-removeAutomaticZenRule","meta":{}},{"name":"setAutomaticZenRuleState","tagname":"method","owner":"android.app.NotificationManager","id":"method-setAutomaticZenRuleState","meta":{}},{"name":"setInterruptionFilter","tagname":"method","owner":"android.app.NotificationManager","id":"method-setInterruptionFilter","meta":{}},{"name":"setNotificationDelegate","tagname":"method","owner":"android.app.NotificationManager","id":"method-setNotificationDelegate","meta":{}},{"name":"setNotificationPolicy","tagname":"method","owner":"android.app.NotificationManager","id":"method-setNotificationPolicy","meta":{}},{"name":"shouldHideSilentStatusBarIcons","tagname":"method","owner":"android.app.NotificationManager","id":"method-shouldHideSilentStatusBarIcons","meta":{}},{"name":"updateAutomaticZenRule","tagname":"method","owner":"android.app.NotificationManager","id":"method-updateAutomaticZenRule","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.NotificationManager","short_doc":"Class to notify the user of events that happen. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.NotificationManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/NotificationManager.html#android-app-NotificationManager' target='_blank'>NotificationManager.js</a></div></pre><div class='doc-contents'><p>Class to notify the user of events that happen.  This is how you tell\n the user that something has happened in the background. {@more}</p>\n\n<p> Notifications can take different forms:\n <ul>\n      <li>A persistent icon that goes in the status bar and is accessible\n          through the launcher, (when the user selects it, a designated Intent\n          can be launched),</li>\n      <li>Turning on or flashing LEDs on the device, or</li>\n      <li>Alerting the user by flashing the backlight, playing a sound,\n          or vibrating.</li>\n </ul></p>\n\n<p> <p>\n Each of the notify methods takes an int id parameter and optionally a\n String tag parameter, which may be {@code null}.  These parameters\n are used to form a pair (tag, id), or ({@code null}, id) if tag is\n unspecified.  This pair identifies this notification from your app to the\n system, so that pair should be unique within your app.  If you call one\n of the notify methods with a (tag, id) pair that is currently active and\n a new set of notification parameters, it will be updated.  For example,\n if you pass a new status bar icon, the old icon in the status bar will\n be replaced with the new one.  This is also the same tag and id you pass\n to the <a href=\"#!/api/android.app.NotificationManager-method-cancel\" rel=\"android.app.NotificationManager-method-cancel\" class=\"docClass\">cancel</a>(int) or int) method to clear\n this notification.</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For a guide to creating notifications, read the\n <a href=\"{@docRoot}guide/topics/ui/notifiers/notifications.html\">Status Bar Notifications</a>\n developer guide.</p>\n </div></p>\n\n<p> @see <a href=\"#!/api/android.app.Notification\" rel=\"android.app.Notification\" class=\"docClass\">android.app.Notification</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_APP_BLOCK_STATE_CHANGED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-ACTION_APP_BLOCK_STATE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-ACTION_APP_BLOCK_STATE_CHANGED' class='name expandable'>ACTION_APP_BLOCK_STATE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Intent that is broadcast when an application is blocked or unblocked. ...</div><div class='long'><p>Intent that is broadcast when an application is blocked or unblocked.</p>\n\n<p>This broadcast is only sent to the app whose block state has changed.</p>\n\n<p>Input: nothing\nOutput: <a href=\"#!/api/android.app.NotificationManager-property-EXTRA_BLOCKED_STATE\" rel=\"android.app.NotificationManager-property-EXTRA_BLOCKED_STATE\" class=\"docClass\">EXTRA_BLOCKED_STATE</a></p>\n<p>Defaults to: <code>&quot;android.app.action.APP_BLOCK_STATE_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_AUTOMATIC_ZEN_RULE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE' class='name expandable'>ACTION_AUTOMATIC_ZEN_RULE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: Launch an Automatic Zen Rule configuration screen\n\n\nInput: Optionally, EXTRA_AUTOMATIC_RULE_ID, if t...</div><div class='long'><p>Activity Action: Launch an Automatic Zen Rule configuration screen</p>\n\n<p><p>\nInput: Optionally, <a href=\"#!/api/android.app.NotificationManager-property-EXTRA_AUTOMATIC_RULE_ID\" rel=\"android.app.NotificationManager-property-EXTRA_AUTOMATIC_RULE_ID\" class=\"docClass\">EXTRA_AUTOMATIC_RULE_ID</a>, if the configuration screen for an\nexisting rule should be displayed. If the rule id is missing or null, apps should display\na configuration screen where users can create a new instance of the rule.\n<p>\nOutput: Nothing\n<p>\n    You can have multiple activities handling this intent, if you support multiple\n    <a href=\"#!/api/android.app.AutomaticZenRule\" rel=\"android.app.AutomaticZenRule\" class=\"docClass\">rules</a>. In order for the system to properly display all of your\n    rule types so that users can create new instances or configure existing ones, you need\n    to add some extra metadata (<a href=\"#!/api/android.app.NotificationManager-property-META_DATA_AUTOMATIC_RULE_TYPE\" rel=\"android.app.NotificationManager-property-META_DATA_AUTOMATIC_RULE_TYPE\" class=\"docClass\">META_DATA_AUTOMATIC_RULE_TYPE</a>)\n    to your activity tag in your manifest. If you'd like to limit the number of rules a user\n    can create from this flow, you can additionally optionally include\n    <a href=\"#!/api/android.app.NotificationManager-property-META_DATA_RULE_INSTANCE_LIMIT\" rel=\"android.app.NotificationManager-property-META_DATA_RULE_INSTANCE_LIMIT\" class=\"docClass\">META_DATA_RULE_INSTANCE_LIMIT</a>.</p>\n\n<pre><code>For example,\n&amp;lt;meta-data\n    android:name=\"android.app.zen.automatic.ruleType\"\n    android:value=\"@string/my_condition_rule\"&gt;\n&amp;lt;/meta-data&gt;\n&amp;lt;meta-data\n    android:name=\"android.app.zen.automatic.ruleInstanceLimit\"\n    android:value=\"1\"&gt;\n&amp;lt;/meta-data&gt;\n</code></pre>\n\n<p></p>\n</p></p>\n\n<p>@see <a href=\"#!/api/android.app.NotificationManager-method-addAutomaticZenRule\" rel=\"android.app.NotificationManager-method-addAutomaticZenRule\" class=\"docClass\">addAutomaticZenRule</a>(AutomaticZenRule)</p>\n<p>Defaults to: <code>&quot;android.app.action.AUTOMATIC_ZEN_RULE&quot;</code></p></div></div></div><div id='property-ACTION_INTERRUPTION_FILTER_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-ACTION_INTERRUPTION_FILTER_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-ACTION_INTERRUPTION_FILTER_CHANGED' class='name expandable'>ACTION_INTERRUPTION_FILTER_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Intent that is broadcast when the state of getCurrentInterruptionFilter() changes. ...</div><div class='long'><p>Intent that is broadcast when the state of getCurrentInterruptionFilter() changes.\nThis broadcast is only sent to registered receivers.</p>\n<p>Defaults to: <code>&quot;android.app.action.INTERRUPTION_FILTER_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED' class='name expandable'>ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Intent that is broadcast when a android.app.NotificationChannel is blocked\n(when android.app.NotificationChannel.getI...</div><div class='long'><p>Intent that is broadcast when a <a href=\"#!/api/android.app.NotificationChannel\" rel=\"android.app.NotificationChannel\" class=\"docClass\">android.app.NotificationChannel</a> is blocked\n(when android.app.NotificationChannel.getImportance() is <a href=\"#!/api/android.app.NotificationManager-property-IMPORTANCE_NONE\" rel=\"android.app.NotificationManager-property-IMPORTANCE_NONE\" class=\"docClass\">IMPORTANCE_NONE</a>) or unblocked\n(when android.app.NotificationChannel.getImportance() is anything other than\n<a href=\"#!/api/android.app.NotificationManager-property-IMPORTANCE_NONE\" rel=\"android.app.NotificationManager-property-IMPORTANCE_NONE\" class=\"docClass\">IMPORTANCE_NONE</a>).</p>\n\n<p>This broadcast is only sent to the app that owns the channel that has changed.</p>\n\n<p>Input: nothing\nOutput: <a href=\"#!/api/android.app.NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_ID\" rel=\"android.app.NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_ID\" class=\"docClass\">EXTRA_NOTIFICATION_CHANNEL_ID</a>\nOutput: <a href=\"#!/api/android.app.NotificationManager-property-EXTRA_BLOCKED_STATE\" rel=\"android.app.NotificationManager-property-EXTRA_BLOCKED_STATE\" class=\"docClass\">EXTRA_BLOCKED_STATE</a></p>\n<p>Defaults to: <code>&quot;android.app.action.NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED' class='name expandable'>ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Intent that is broadcast when a android.app.NotificationChannelGroup is\nblocked or unblocked. ...</div><div class='long'><p>Intent that is broadcast when a <a href=\"#!/api/android.app.NotificationChannelGroup\" rel=\"android.app.NotificationChannelGroup\" class=\"docClass\">android.app.NotificationChannelGroup</a> is\nblocked or unblocked.</p>\n\n<p>This broadcast is only sent to the app that owns the channel group that has changed.</p>\n\n<p>Input: nothing\nOutput: <a href=\"#!/api/android.app.NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_GROUP_ID\" rel=\"android.app.NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_GROUP_ID\" class=\"docClass\">EXTRA_NOTIFICATION_CHANNEL_GROUP_ID</a>\nOutput: <a href=\"#!/api/android.app.NotificationManager-property-EXTRA_BLOCKED_STATE\" rel=\"android.app.NotificationManager-property-EXTRA_BLOCKED_STATE\" class=\"docClass\">EXTRA_BLOCKED_STATE</a></p>\n<p>Defaults to: <code>&quot;android.app.action.NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED' class='name expandable'>ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Intent that is broadcast when the state of isNotificationPolicyAccessGranted()\nchanges. ...</div><div class='long'><p>Intent that is broadcast when the state of <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>()\nchanges.</p>\n\n<p>This broadcast is only sent to registered receivers, and only to the apps that have changed.</p>\n<p>Defaults to: <code>&quot;android.app.action.NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED&quot;</code></p></div></div></div><div id='property-ACTION_NOTIFICATION_POLICY_CHANGED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-ACTION_NOTIFICATION_POLICY_CHANGED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_POLICY_CHANGED' class='name expandable'>ACTION_NOTIFICATION_POLICY_CHANGED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Intent that is broadcast when the state of getNotificationPolicy() changes. ...</div><div class='long'><p>Intent that is broadcast when the state of getNotificationPolicy() changes.\nThis broadcast is only sent to registered receivers.</p>\n<p>Defaults to: <code>&quot;android.app.action.NOTIFICATION_POLICY_CHANGED&quot;</code></p></div></div></div><div id='property-EXTRA_AUTOMATIC_RULE_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-EXTRA_AUTOMATIC_RULE_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-EXTRA_AUTOMATIC_RULE_ID' class='name expandable'>EXTRA_AUTOMATIC_RULE_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Used as an optional string extra on ACTION_AUTOMATIC_ZEN_RULE intents. ...</div><div class='long'><p>Used as an optional string extra on <a href=\"#!/api/android.app.NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE\" rel=\"android.app.NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE\" class=\"docClass\">ACTION_AUTOMATIC_ZEN_RULE</a> intents. If\nprovided, contains the id of the <a href=\"#!/api/android.app.AutomaticZenRule\" rel=\"android.app.AutomaticZenRule\" class=\"docClass\">android.app.AutomaticZenRule</a> (as returned from\naddAutomaticZenRule(AutomaticZenRule)) for which configuration\nsettings should be displayed.</p>\n<p>Defaults to: <code>&quot;android.app.extra.AUTOMATIC_RULE_ID&quot;</code></p></div></div></div><div id='property-EXTRA_BLOCKED_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-EXTRA_BLOCKED_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-EXTRA_BLOCKED_STATE' class='name expandable'>EXTRA_BLOCKED_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra for ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED or\nACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED co...</div><div class='long'><p>Extra for <a href=\"#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED\" rel=\"android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED\" class=\"docClass\">ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED</a> or\n<a href=\"#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED\" rel=\"android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED\" class=\"docClass\">ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED</a> containing the new blocked\nstate as a boolean.</p>\n\n<p>The value will be {@code true} if this channel or group is now blocked and {@code false} if\nthis channel or group is now unblocked.</p>\n<p>Defaults to: <code>&quot;android.app.extra.BLOCKED_STATE&quot;</code></p></div></div></div><div id='property-EXTRA_NOTIFICATION_CHANNEL_GROUP_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_GROUP_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_GROUP_ID' class='name expandable'>EXTRA_NOTIFICATION_CHANNEL_GROUP_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra for ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED containing the id\nof the android.app.NotificationChan...</div><div class='long'><p>Extra for <a href=\"#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED\" rel=\"android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED\" class=\"docClass\">ACTION_NOTIFICATION_CHANNEL_GROUP_BLOCK_STATE_CHANGED</a> containing the id\nof the <a href=\"#!/api/android.app.NotificationChannelGroup\" rel=\"android.app.NotificationChannelGroup\" class=\"docClass\">android.app.NotificationChannelGroup</a> which has a new blocked state.</p>\n\n<p>The value will be the android.app.NotificationChannelGroup.getId() of the group.</p>\n<p>Defaults to: <code>&quot;android.app.extra.NOTIFICATION_CHANNEL_GROUP_ID&quot;</code></p></div></div></div><div id='property-EXTRA_NOTIFICATION_CHANNEL_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-EXTRA_NOTIFICATION_CHANNEL_ID' class='name expandable'>EXTRA_NOTIFICATION_CHANNEL_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Extra for ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED containing the id of the\nandroid.app.NotificationChannel wh...</div><div class='long'><p>Extra for <a href=\"#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED\" rel=\"android.app.NotificationManager-property-ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED\" class=\"docClass\">ACTION_NOTIFICATION_CHANNEL_BLOCK_STATE_CHANGED</a> containing the id of the\n<a href=\"#!/api/android.app.NotificationChannel\" rel=\"android.app.NotificationChannel\" class=\"docClass\">android.app.NotificationChannel</a> which has a new blocked state.</p>\n\n<p>The value will be the android.app.NotificationChannel.getId() of the channel.</p>\n<p>Defaults to: <code>&quot;android.app.extra.NOTIFICATION_CHANNEL_ID&quot;</code></p></div></div></div><div id='property-IMPORTANCE_DEFAULT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-IMPORTANCE_DEFAULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-IMPORTANCE_DEFAULT' class='name expandable'>IMPORTANCE_DEFAULT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Default notification importance: shows everywhere, makes noise, but does not visually\nintrude. ...</div><div class='long'><p>Default notification importance: shows everywhere, makes noise, but does not visually\nintrude.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-IMPORTANCE_HIGH' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-IMPORTANCE_HIGH' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-IMPORTANCE_HIGH' class='name expandable'>IMPORTANCE_HIGH</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Higher notification importance: shows everywhere, makes noise and peeks. ...</div><div class='long'><p>Higher notification importance: shows everywhere, makes noise and peeks. May use full screen\nintents.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-IMPORTANCE_LOW' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-IMPORTANCE_LOW' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-IMPORTANCE_LOW' class='name expandable'>IMPORTANCE_LOW</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Low notification importance: Shows in the shade, and potentially in the status bar\n(see shouldHideSilentStatusBarIcon...</div><div class='long'><p>Low notification importance: Shows in the shade, and potentially in the status bar\n(see <a href=\"#!/api/android.app.NotificationManager-method-shouldHideSilentStatusBarIcons\" rel=\"android.app.NotificationManager-method-shouldHideSilentStatusBarIcons\" class=\"docClass\">shouldHideSilentStatusBarIcons</a>()), but is not audibly intrusive.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-IMPORTANCE_MAX' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-IMPORTANCE_MAX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-IMPORTANCE_MAX' class='name expandable'>IMPORTANCE_MAX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Unused. ...</div><div class='long'><p>Unused.</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-IMPORTANCE_MIN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-IMPORTANCE_MIN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-IMPORTANCE_MIN' class='name expandable'>IMPORTANCE_MIN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Min notification importance: only shows in the shade, below the fold. ...</div><div class='long'><p>Min notification importance: only shows in the shade, below the fold.  This should\nnot be used with android.app.Notification) Service.startForeground\nsince a foreground service is supposed to be something the user cares about so it does\nnot make semantic sense to mark its notification as minimum importance.  If you do this\nas of Android version android.os.Build.VERSION_CODES.O, the system will show\na higher-priority notification about your app running in the background.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-IMPORTANCE_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-IMPORTANCE_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-IMPORTANCE_NONE' class='name expandable'>IMPORTANCE_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A notification with no importance: does not show in the shade. ...</div><div class='long'><p>A notification with no importance: does not show in the shade.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-IMPORTANCE_UNSPECIFIED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-IMPORTANCE_UNSPECIFIED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-IMPORTANCE_UNSPECIFIED' class='name expandable'>IMPORTANCE_UNSPECIFIED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Value signifying that the user has not expressed an importance. ...</div><div class='long'><p>Value signifying that the user has not expressed an importance.</p>\n\n<p>This value is for persisting preferences, and should never be associated with\nan actual notification.</p>\n<p>Defaults to: <code>&quot;-1000&quot;</code></p></div></div></div><div id='property-INTERRUPTION_FILTER_ALARMS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-INTERRUPTION_FILTER_ALARMS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-INTERRUPTION_FILTER_ALARMS' class='name expandable'>INTERRUPTION_FILTER_ALARMS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Interruption filter constant -\n    Alarms only interruption filter - all notifications except those of category\n    a...</div><div class='long'><p>Interruption filter constant -\n    Alarms only interruption filter - all notifications except those of category\n    <a href=\"#!/api/android.app.Notification-property-CATEGORY_ALARM\" rel=\"android.app.Notification-property-CATEGORY_ALARM\" class=\"docClass\">android.app.Notification.CATEGORY_ALARM</a> are suppressed. Some audio streams are muted.</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-INTERRUPTION_FILTER_ALL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-INTERRUPTION_FILTER_ALL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-INTERRUPTION_FILTER_ALL' class='name expandable'>INTERRUPTION_FILTER_ALL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Interruption filter constant -\n    Normal interruption filter - no notifications are suppressed. ...</div><div class='long'><p>Interruption filter constant -\n    Normal interruption filter - no notifications are suppressed.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-INTERRUPTION_FILTER_NONE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-INTERRUPTION_FILTER_NONE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-INTERRUPTION_FILTER_NONE' class='name expandable'>INTERRUPTION_FILTER_NONE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Interruption filter constant -\n    No interruptions filter - all notifications are suppressed and all audio streams (...</div><div class='long'><p>Interruption filter constant -\n    No interruptions filter - all notifications are suppressed and all audio streams (except\n    those used for phone calls) and vibrations are muted.</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-INTERRUPTION_FILTER_PRIORITY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-INTERRUPTION_FILTER_PRIORITY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-INTERRUPTION_FILTER_PRIORITY' class='name expandable'>INTERRUPTION_FILTER_PRIORITY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Interruption filter constant -\n    Priority interruption filter - all notifications are suppressed except those that ...</div><div class='long'><p>Interruption filter constant -\n    Priority interruption filter - all notifications are suppressed except those that match\n    the priority criteria. Some audio streams are muted. See\n    <a href=\"#!/api/android.app.NotificationManager.Policy-property-priorityCallSenders\" rel=\"android.app.NotificationManager.Policy-property-priorityCallSenders\" class=\"docClass\">android.app.NotificationManager.Policy.priorityCallSenders</a>, <a href=\"#!/api/android.app.NotificationManager.Policy-property-priorityCategories\" rel=\"android.app.NotificationManager.Policy-property-priorityCategories\" class=\"docClass\">android.app.NotificationManager.Policy.priorityCategories</a>,\n    <a href=\"#!/api/android.app.NotificationManager.Policy-property-priorityMessageSenders\" rel=\"android.app.NotificationManager.Policy-property-priorityMessageSenders\" class=\"docClass\">android.app.NotificationManager.Policy.priorityMessageSenders</a> to define or query this criteria. Users can\n    additionally specify packages that can bypass this interruption filter.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-INTERRUPTION_FILTER_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-INTERRUPTION_FILTER_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-INTERRUPTION_FILTER_UNKNOWN' class='name expandable'>INTERRUPTION_FILTER_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Interruption filter constant - returned when\n the value is unavailable for any reason. ...</div><div class='long'><p>Interruption filter constant - returned when\n the value is unavailable for any reason.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-META_DATA_AUTOMATIC_RULE_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-META_DATA_AUTOMATIC_RULE_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-META_DATA_AUTOMATIC_RULE_TYPE' class='name expandable'>META_DATA_AUTOMATIC_RULE_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A required {@code meta-data} tag for activities that handle\nACTION_AUTOMATIC_ZEN_RULE. ...</div><div class='long'><p>A required {@code meta-data} tag for activities that handle\n<a href=\"#!/api/android.app.NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE\" rel=\"android.app.NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE\" class=\"docClass\">ACTION_AUTOMATIC_ZEN_RULE</a>.</p>\n\n<p>This tag should contain a localized name of the type of the zen rule provided by the\nactivity.</p>\n<p>Defaults to: <code>&quot;android.service.zen.automatic.ruleType&quot;</code></p></div></div></div><div id='property-META_DATA_RULE_INSTANCE_LIMIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-property-META_DATA_RULE_INSTANCE_LIMIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-property-META_DATA_RULE_INSTANCE_LIMIT' class='name expandable'>META_DATA_RULE_INSTANCE_LIMIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An optional {@code meta-data} tag for activities that handle\nACTION_AUTOMATIC_ZEN_RULE. ...</div><div class='long'><p>An optional {@code meta-data} tag for activities that handle\n<a href=\"#!/api/android.app.NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE\" rel=\"android.app.NotificationManager-property-ACTION_AUTOMATIC_ZEN_RULE\" class=\"docClass\">ACTION_AUTOMATIC_ZEN_RULE</a>.</p>\n\n<p>This tag should contain the maximum number of rule instances that\ncan be created for this rule type. Omit or enter a value &lt;= 0 to allow unlimited instances.</p>\n<p>Defaults to: <code>&quot;android.service.zen.automatic.ruleInstanceLimit&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addAutomaticZenRule' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-addAutomaticZenRule' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-addAutomaticZenRule' class='name expandable'>addAutomaticZenRule</a>( <span class='pre'>automaticZenRule</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates the given zen rule. ...</div><div class='long'><p>Creates the given zen rule.</p>\n\n<p> <p>\n Throws a SecurityException if policy access is granted to this package.\n See <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>automaticZenRule</span> : Object {AutomaticZenRule}<div class='sub-desc'><p>the rule to create.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The id of the newly created rule; null if the rule could not be created.</p>\n</div></li></ul></div></div></div><div id='method-areBubblesAllowed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-areBubblesAllowed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-areBubblesAllowed' class='name expandable'>areBubblesAllowed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether notifications posted by this app can appear outside of the\n notification shade, floating over other apps...</div><div class='long'><p>Sets whether notifications posted by this app can appear outside of the\n notification shade, floating over other apps' content.</p>\n\n<p> <p>This value will be ignored for notifications that are posted to channels that do not\n allow bubbles (android.app.NotificationChannel.canBubble().\n@see Notification#getBubbleMetadata()</p>\n</div></div></div><div id='method-areNotificationsEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-areNotificationsEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-areNotificationsEnabled' class='name expandable'>areNotificationsEnabled</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether notifications from the calling package are blocked. ...</div><div class='long'><p>Returns whether notifications from the calling package are blocked.</p>\n</div></div></div><div id='method-areNotificationsPaused' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-areNotificationsPaused' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-areNotificationsPaused' class='name expandable'>areNotificationsPaused</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether notifications from this package are temporarily hidden. ...</div><div class='long'><p>Returns whether notifications from this package are temporarily hidden. This\n could be done because the package was marked as distracting to the user via\n {@code PackageManager#setDistractingPackageRestrictions(String[], int)} or because the\n package is {@code PackageManager#setPackagesSuspended(String[], boolean, PersistableBundle,\n PersistableBundle, SuspendDialogInfo) suspended}.</p>\n</div></div></div><div id='method-canNotifyAsPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-canNotifyAsPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-canNotifyAsPackage' class='name expandable'>canNotifyAsPackage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether you are allowed to post notifications on behalf of a given package, with\n String, int, android.app.No...</div><div class='long'><p>Returns whether you are allowed to post notifications on behalf of a given package, with\n String, int, android.app.Notification).</p>\n\n<p> See <a href=\"#!/api/android.app.NotificationManager-method-setNotificationDelegate\" rel=\"android.app.NotificationManager-method-setNotificationDelegate\" class=\"docClass\">setNotificationDelegate</a>(String).</p>\n</div></div></div><div id='method-cancel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-cancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-cancel' class='name expandable'>cancel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancel a previously shown notification. ...</div><div class='long'><p>Cancel a previously shown notification.  If it's transient, the view\n will be hidden.  If it's persistent, it will be removed from the status\n bar.</p>\n</div></div></div><div id='method-cancelAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-cancelAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-cancelAll' class='name expandable'>cancelAll</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Cancel all previously shown notifications. ...</div><div class='long'><p>Cancel all previously shown notifications. See <a href=\"#!/api/android.app.NotificationManager-method-cancel\" rel=\"android.app.NotificationManager-method-cancel\" class=\"docClass\">cancel</a> for the\n detailed behavior.</p>\n</div></div></div><div id='method-createNotificationChannel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-createNotificationChannel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-createNotificationChannel' class='name expandable'>createNotificationChannel</a>( <span class='pre'>channel</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a notification channel that notifications can be posted to. ...</div><div class='long'><p>Creates a notification channel that notifications can be posted to.</p>\n\n<p> This can also be used to restore a deleted channel and to update an existing channel's\n name, description, group, and/or importance.</p>\n\n<p> <p>The name and description should only be changed if the locale changes\n or in response to the user renaming this channel. For example, if a user has a channel\n named 'John Doe' that represents messages from a 'John Doe', and 'John Doe' changes his name\n to 'John Smith,' the channel can be renamed to match.</p>\n\n<p> <p>The importance of an existing channel will only be changed if the new importance is lower\n than the current value and the user has not altered any settings on this channel.</p>\n\n<p> <p>The group an existing channel will only be changed if the channel does not already\n belong to a group.</p>\n\n<p> All other fields are ignored for channels that already exist.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>channel</span> : Object {NotificationChannel}<div class='sub-desc'><p>the channel to create.  Note that the created channel may differ from this\n                 value. If the provided channel is malformed, a RemoteException will be\n                 thrown.</p>\n</div></li></ul></div></div></div><div id='method-createNotificationChannelGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-createNotificationChannelGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-createNotificationChannelGroup' class='name expandable'>createNotificationChannelGroup</a>( <span class='pre'>group</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a group container for android.app.NotificationChannel objects. ...</div><div class='long'><p>Creates a group container for <a href=\"#!/api/android.app.NotificationChannel\" rel=\"android.app.NotificationChannel\" class=\"docClass\">android.app.NotificationChannel</a> objects.</p>\n\n<p> This can be used to rename an existing group.\n <p>\n     Group information is only used for presentation, not for behavior. Groups are optional\n     for channels, and you can have a mix of channels that belong to groups and channels\n     that do not.\n </p>\n <p>\n     For example, if your application supports multiple accounts, and those accounts will\n     have similar channels, you can create a group for each account with account specific\n     labels instead of appending account information to each channel's label.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>group</span> : Object {NotificationChannelGroup}<div class='sub-desc'><p>The group to create</p>\n</div></li></ul></div></div></div><div id='method-createNotificationChannelGroups' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-createNotificationChannelGroups' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-createNotificationChannelGroups' class='name expandable'>createNotificationChannelGroups</a>( <span class='pre'>groups</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates multiple notification channel groups. ...</div><div class='long'><p>Creates multiple notification channel groups.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>groups</span> : Object {java.util.List}<div class='sub-desc'><p>The list of groups to create</p>\n</div></li></ul></div></div></div><div id='method-createNotificationChannels' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-createNotificationChannels' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-createNotificationChannels' class='name expandable'>createNotificationChannels</a>( <span class='pre'>channels</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates multiple notification channels that different notifications can be posted to. ...</div><div class='long'><p>Creates multiple notification channels that different notifications can be posted to. See\n <a href=\"#!/api/android.app.NotificationManager-method-createNotificationChannel\" rel=\"android.app.NotificationManager-method-createNotificationChannel\" class=\"docClass\">createNotificationChannel</a>(NotificationChannel).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>channels</span> : Object {java.util.List}<div class='sub-desc'><p>the list of channels to attempt to create.</p>\n</div></li></ul></div></div></div><div id='method-deleteNotificationChannel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-deleteNotificationChannel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-deleteNotificationChannel' class='name expandable'>deleteNotificationChannel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes the given notification channel. ...</div><div class='long'><p>Deletes the given notification channel.</p>\n\n<p> <p>If you create a new channel with\n this same id, the deleted channel will be un-deleted with all of the same settings it\n had before it was deleted.</p>\n</div></div></div><div id='method-deleteNotificationChannelGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-deleteNotificationChannelGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-deleteNotificationChannelGroup' class='name expandable'>deleteNotificationChannelGroup</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes the given notification channel group, and all notification channels that\n belong to it. ...</div><div class='long'><p>Deletes the given notification channel group, and all notification channels that\n belong to it.</p>\n</div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-from' class='name expandable'>from</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-getActiveNotifications' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getActiveNotifications' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getActiveNotifications' class='name expandable'>getActiveNotifications</a>( <span class='pre'></span> ) : Object {android.service.notification.StatusBarNotification}<span class=\"signature\"></span></div><div class='description'><div class='short'>Recover a list of active notifications: ones that have been posted by the calling app that\n have not yet been dismiss...</div><div class='long'><p>Recover a list of active notifications: ones that have been posted by the calling app that\n have not yet been dismissed by the user or int)ed by the app.</p>\n\n<p> <p><Each notification is embedded in a {@link StatusBarNotification} object, including the\n original <code>tag and <code>id</code> supplied to\n int, android.app.Notification) notify()\n (via getTag() and\n getId()) as well as a copy of the original\n <a href=\"#!/api/android.app.Notification\" rel=\"android.app.Notification\" class=\"docClass\">android.app.Notification</a> object (via StatusBarNotification.getNotification()).\n </Each></p>\n <p>From Build.VERSION_CODES.Q, will also return notifications you've posted as an\n app's notification delegate via\n String, int, android.app.Notification).\n </p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.service.notification.StatusBarNotification}</span><div class='sub-desc'><p>An array of StatusBarNotification.</p>\n</div></li></ul></div></div></div><div id='method-getAutomaticZenRule' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getAutomaticZenRule' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getAutomaticZenRule' class='name expandable'>getAutomaticZenRule</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the AutomaticZenRule with the given id, if it exists and the caller has access. ...</div><div class='long'><p>Returns the AutomaticZenRule with the given id, if it exists and the caller has access.</p>\n\n<p> <p>\n Throws a SecurityException if policy access is granted to this package.\n See <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>.</p>\n\n<p> <p>\n Returns null if there are no zen rules that match the given id, or if the calling package\n doesn't own the matching rule. See <a href=\"#!/api/android.app.AutomaticZenRule-method-getOwner\" rel=\"android.app.AutomaticZenRule-method-getOwner\" class=\"docClass\">android.app.AutomaticZenRule.getOwner</a>.</p>\n</div></div></div><div id='method-getAutomaticZenRules' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getAutomaticZenRules' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getAutomaticZenRules' class='name expandable'>getAutomaticZenRules</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns AutomaticZenRules owned by the caller. ...</div><div class='long'><p>Returns AutomaticZenRules owned by the caller.</p>\n\n<p> <p>\n Throws a SecurityException if policy access is granted to this package.\n See <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>.</p>\n</div></div></div><div id='method-getCurrentInterruptionFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getCurrentInterruptionFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getCurrentInterruptionFilter' class='name expandable'>getCurrentInterruptionFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the current notification interruption filter. ...</div><div class='long'><p>Gets the current notification interruption filter.\n <p>\n The interruption filter defines which notifications are allowed to\n interrupt the user (e.g. via sound &amp; vibration) and is applied\n globally.</p>\n</div></div></div><div id='method-getImportance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getImportance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getImportance' class='name expandable'>getImportance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the user specified importance for notifications from the calling\n package. ...</div><div class='long'><p>Returns the user specified importance for notifications from the calling\n package.</p>\n</div></div></div><div id='method-getNotificationChannel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getNotificationChannel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getNotificationChannel' class='name expandable'>getNotificationChannel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the notification channel settings for a given channel id. ...</div><div class='long'><p>Returns the notification channel settings for a given channel id.</p>\n\n<p> <p>The channel must belong to your package, or to a package you are an approved notification\n delegate for (see <a href=\"#!/api/android.app.NotificationManager-method-canNotifyAsPackage\" rel=\"android.app.NotificationManager-method-canNotifyAsPackage\" class=\"docClass\">canNotifyAsPackage</a>(String)), or it will not be returned. To query\n a channel as a notification delegate, call this method from a context created for that\n package (see int)).</p></p>\n</div></div></div><div id='method-getNotificationChannelGroup' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getNotificationChannelGroup' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getNotificationChannelGroup' class='name expandable'>getNotificationChannelGroup</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the notification channel group settings for a given channel group id. ...</div><div class='long'><p>Returns the notification channel group settings for a given channel group id.</p>\n\n<p> The channel group must belong to your package, or null will be returned.</p>\n</div></div></div><div id='method-getNotificationChannelGroups' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getNotificationChannelGroups' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getNotificationChannelGroups' class='name expandable'>getNotificationChannelGroups</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns all notification channel groups belonging to the calling app. ...</div><div class='long'><p>Returns all notification channel groups belonging to the calling app.</p>\n</div></div></div><div id='method-getNotificationChannels' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getNotificationChannels' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getNotificationChannels' class='name expandable'>getNotificationChannels</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns all notification channels belonging to the calling package. ...</div><div class='long'><p>Returns all notification channels belonging to the calling package.</p>\n\n<p> <p>Approved notification delegates (see <a href=\"#!/api/android.app.NotificationManager-method-canNotifyAsPackage\" rel=\"android.app.NotificationManager-method-canNotifyAsPackage\" class=\"docClass\">canNotifyAsPackage</a>(String)) can query\n notification channels belonging to packages they are the delegate for. To do so, call this\n method from a context created for that package (see\n int)).</p></p>\n</div></div></div><div id='method-getNotificationDelegate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getNotificationDelegate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getNotificationDelegate' class='name expandable'>getNotificationDelegate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the delegate that can post notifications on\n your behalf, if there currently is one. ...</div><div class='long'><p>Returns the delegate that can post notifications on\n your behalf, if there currently is one.</p>\n</div></div></div><div id='method-getNotificationPolicy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-getNotificationPolicy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-getNotificationPolicy' class='name expandable'>getNotificationPolicy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the current user-specified default notification policy. ...</div><div class='long'><p>Gets the current user-specified default notification policy.</p>\n\n<p> <p></p>\n</div></div></div><div id='method-isNotificationListenerAccessGranted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-isNotificationListenerAccessGranted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-isNotificationListenerAccessGranted' class='name expandable'>isNotificationListenerAccessGranted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks whether the user has approved a given\n android.service.notification.NotificationListenerService. ...</div><div class='long'><p>Checks whether the user has approved a given\n android.service.notification.NotificationListenerService.</p>\n\n<p> <p>\n The listener service must belong to the calling app.</p>\n\n<p> <p>\n Apps can request notification listener access by sending the user to the activity that\n matches the system intent action\n android.provider.Settings.ACTION_NOTIFICATION_LISTENER_SETTINGS.</p>\n</div></div></div><div id='method-isNotificationPolicyAccessGranted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-isNotificationPolicyAccessGranted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted' class='name expandable'>isNotificationPolicyAccessGranted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks the ability to modify notification do not disturb policy for the calling package. ...</div><div class='long'><p>Checks the ability to modify notification do not disturb policy for the calling package.</p>\n\n<p> <p>\n Returns true if the calling package can modify notification policy.</p>\n\n<p> <p>\n Apps can request policy access by sending the user to the activity that matches the system\n intent action android.provider.Settings.ACTION_NOTIFICATION_POLICY_ACCESS_SETTINGS.</p>\n\n<p> <p>\n Use <a href=\"#!/api/android.app.NotificationManager-property-ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED\" rel=\"android.app.NotificationManager-property-ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED\" class=\"docClass\">ACTION_NOTIFICATION_POLICY_ACCESS_GRANTED_CHANGED</a> to listen for\n user grant or denial of this access.</p>\n</div></div></div><div id='method-notify' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-notify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-notify' class='name expandable'>notify</a>( <span class='pre'>tag, id, notification</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Posts a notification to be shown in the status bar. ...</div><div class='long'><p>Posts a notification to be shown in the status bar. If a notification with\n the same tag and id has already been posted by your application and has not yet been\n canceled, it will be replaced by the updated information.</p>\n\n<p> All listener services will\n be granted Intent.FLAG_GRANT_READ_URI_PERMISSION access to any uris\n provided on this notification or the\n <a href=\"#!/api/android.app.NotificationChannel\" rel=\"android.app.NotificationChannel\" class=\"docClass\">android.app.NotificationChannel</a> this notification is posted to using\n Uri, int). Permission will be revoked when the\n notification is canceled, or you can revoke permissions with\n int).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tag</span> : String<div class='sub-desc'><p>A string identifier for this notification.  May be {@code null}.</p>\n</div></li><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>An identifier for this notification.  The pair (tag, id) must be unique\n        within your application.</p>\n</div></li><li><span class='pre'>notification</span> : Object {Notification}<div class='sub-desc'><p>A Notification object describing what to\n        show the user. Must not be null.</p>\n</div></li></ul></div></div></div><div id='method-notifyAsPackage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-notifyAsPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-notifyAsPackage' class='name expandable'>notifyAsPackage</a>( <span class='pre'>targetPackage, tag, id, notification</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Posts a notification as a specified package to be shown in the status bar. ...</div><div class='long'><p>Posts a notification as a specified package to be shown in the status bar. If a notification\n with the same tag and id has already been posted for that package and has not yet been\n canceled, it will be replaced by the updated information.</p>\n\n<p> All listener services will\n be granted Intent.FLAG_GRANT_READ_URI_PERMISSION access to any uris\n provided on this notification or the\n <a href=\"#!/api/android.app.NotificationChannel\" rel=\"android.app.NotificationChannel\" class=\"docClass\">android.app.NotificationChannel</a> this notification is posted to using\n Uri, int). Permission will be revoked when the\n notification is canceled, or you can revoke permissions with\n int).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetPackage</span> : String<div class='sub-desc'><p>The package to post the notification as. The package must have granted\n                      you access to post notifications on their behalf with\n                      setNotificationDelegate(String).</p>\n</div></li><li><span class='pre'>tag</span> : String<div class='sub-desc'><p>A string identifier for this notification.  May be {@code null}.</p>\n</div></li><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>An identifier for this notification.  The pair (tag, id) must be unique\n        within your application.</p>\n</div></li><li><span class='pre'>notification</span> : Object {Notification}<div class='sub-desc'><p>A Notification object describing what to\n        show the user. Must not be null.</p>\n</div></li></ul></div></div></div><div id='method-removeAutomaticZenRule' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-removeAutomaticZenRule' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-removeAutomaticZenRule' class='name expandable'>removeAutomaticZenRule</a>( <span class='pre'>id</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Deletes the automatic zen rule with the given id. ...</div><div class='long'><p>Deletes the automatic zen rule with the given id.</p>\n\n<p> <p>\n Throws a SecurityException if policy access is granted to this package.\n See <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>.</p>\n\n<p> <p>\n Callers can only delete rules that they own. See <a href=\"#!/api/android.app.AutomaticZenRule-method-getOwner\" rel=\"android.app.AutomaticZenRule-method-getOwner\" class=\"docClass\">android.app.AutomaticZenRule.getOwner</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>the id of the rule to delete.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the rule was successfully deleted.</p>\n</div></li></ul></div></div></div><div id='method-setAutomaticZenRuleState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-setAutomaticZenRuleState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-setAutomaticZenRuleState' class='name expandable'>setAutomaticZenRuleState</a>( <span class='pre'>id, condition</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs the notification manager that the state of an android.app.AutomaticZenRule has changed. ...</div><div class='long'><p>Informs the notification manager that the state of an <a href=\"#!/api/android.app.AutomaticZenRule\" rel=\"android.app.AutomaticZenRule\" class=\"docClass\">android.app.AutomaticZenRule</a> has changed.\n Use this method to put the system into Do Not Disturb mode or request that it exits Do Not\n Disturb mode. The calling app must own the provided <a href=\"#!/api/android.app.AutomaticZenRule\" rel=\"android.app.AutomaticZenRule\" class=\"docClass\">android.app.AutomaticZenRule</a>.\n <p>\n     This method can be used in conjunction with or as a replacement to\n     android.service.notification.ConditionProviderService.notifyCondition(Condition).\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>The id of the rule whose state should change</p>\n</div></li><li><span class='pre'>condition</span> : Object {Condition}<div class='sub-desc'><p>The new state of this rule</p>\n</div></li></ul></div></div></div><div id='method-setInterruptionFilter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-setInterruptionFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-setInterruptionFilter' class='name expandable'>setInterruptionFilter</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the current notification interruption filter. ...</div><div class='long'><p>Sets the current notification interruption filter.\n <p>\n The interruption filter defines which notifications are allowed to\n interrupt the user (e.g. via sound &amp; vibration) and is applied\n globally.\n <p>\n Only available if policy access is granted to this package. See\n <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>.</p>\n</div></div></div><div id='method-setNotificationDelegate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-setNotificationDelegate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-setNotificationDelegate' class='name expandable'>setNotificationDelegate</a>( <span class='pre'>delegate</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Allows a package to post notifications on your behalf using\n String, int, android.app.Notification). ...</div><div class='long'><p>Allows a package to post notifications on your behalf using\n String, int, android.app.Notification).</p>\n\n<p> This can be used to allow persistent processes to post notifications based on messages\n received on your behalf from the cloud, without your process having to wake up.</p>\n\n<p> You can check if you have an allowed delegate with <a href=\"#!/api/android.app.NotificationManager-method-getNotificationDelegate\" rel=\"android.app.NotificationManager-method-getNotificationDelegate\" class=\"docClass\">getNotificationDelegate</a>() and\n revoke your delegate by passing null to this method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>delegate</span> : String<div class='sub-desc'><p>Package name of the app which can send notifications on your behalf.</p>\n</div></li></ul></div></div></div><div id='method-setNotificationPolicy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-setNotificationPolicy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-setNotificationPolicy' class='name expandable'>setNotificationPolicy</a>( <span class='pre'>policy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the current notification policy. ...</div><div class='long'><p>Sets the current notification policy.</p>\n\n<p> <p>\n Only available if policy access is granted to this package.\n See <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>policy</span> : Object {NotificationManager.Policy}<div class='sub-desc'><p>The new desired policy.</p>\n</div></li></ul></div></div></div><div id='method-shouldHideSilentStatusBarIcons' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-shouldHideSilentStatusBarIcons' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-shouldHideSilentStatusBarIcons' class='name expandable'>shouldHideSilentStatusBarIcons</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether the user wants silent notifications (see IMPORTANCE_LOW to appear\n in the status bar. ...</div><div class='long'><p>Returns whether the user wants silent notifications (see <a href=\"#!/api/android.app.NotificationManager-property-IMPORTANCE_LOW\" rel=\"android.app.NotificationManager-property-IMPORTANCE_LOW\" class=\"docClass\">IMPORTANCE_LOW</a> to appear\n in the status bar.</p>\n\n<p> <p>Only available for notification\n listeners.</p>\n</div></div></div><div id='method-updateAutomaticZenRule' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.NotificationManager'>android.app.NotificationManager</span><br/><a href='source/NotificationManager.html#android-app-NotificationManager-method-updateAutomaticZenRule' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.NotificationManager-method-updateAutomaticZenRule' class='name expandable'>updateAutomaticZenRule</a>( <span class='pre'>id, automaticZenRule</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates the given zen rule. ...</div><div class='long'><p>Updates the given zen rule.</p>\n\n<p> <p>\n Throws a SecurityException if policy access is granted to this package.\n See <a href=\"#!/api/android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" rel=\"android.app.NotificationManager-method-isNotificationPolicyAccessGranted\" class=\"docClass\">isNotificationPolicyAccessGranted</a>.</p>\n\n<p> <p>\n Callers can only update rules that they own. See <a href=\"#!/api/android.app.AutomaticZenRule-method-getOwner\" rel=\"android.app.AutomaticZenRule-method-getOwner\" class=\"docClass\">android.app.AutomaticZenRule.getOwner</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>The id of the rule to update</p>\n</div></li><li><span class='pre'>automaticZenRule</span> : Object {AutomaticZenRule}<div class='sub-desc'><p>the rule to update.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the rule was successfully updated.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});