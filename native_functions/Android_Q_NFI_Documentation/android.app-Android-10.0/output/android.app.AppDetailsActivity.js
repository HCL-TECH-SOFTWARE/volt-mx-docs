Ext.data.JsonP.android_app_AppDetailsActivity({"tagname":"class","name":"android.app.AppDetailsActivity","autodetected":{},"files":[{"filename":"AppDetailsActivity.js","href":"AppDetailsActivity.html#android-app-AppDetailsActivity"}],"extends":"android.app.Activity","hide":true,"members":[{"name":"DEFAULT_KEYS_DIALER","tagname":"property","owner":"android.app.Activity","id":"property-DEFAULT_KEYS_DIALER","meta":{}},{"name":"DEFAULT_KEYS_DISABLE","tagname":"property","owner":"android.app.Activity","id":"property-DEFAULT_KEYS_DISABLE","meta":{}},{"name":"DEFAULT_KEYS_SEARCH_GLOBAL","tagname":"property","owner":"android.app.Activity","id":"property-DEFAULT_KEYS_SEARCH_GLOBAL","meta":{}},{"name":"DEFAULT_KEYS_SEARCH_LOCAL","tagname":"property","owner":"android.app.Activity","id":"property-DEFAULT_KEYS_SEARCH_LOCAL","meta":{}},{"name":"DEFAULT_KEYS_SHORTCUT","tagname":"property","owner":"android.app.Activity","id":"property-DEFAULT_KEYS_SHORTCUT","meta":{}},{"name":"RESULT_CANCELED","tagname":"property","owner":"android.app.Activity","id":"property-RESULT_CANCELED","meta":{}},{"name":"RESULT_FIRST_USER","tagname":"property","owner":"android.app.Activity","id":"property-RESULT_FIRST_USER","meta":{}},{"name":"RESULT_OK","tagname":"property","owner":"android.app.Activity","id":"property-RESULT_OK","meta":{}},{"name":"addContentView","tagname":"method","owner":"android.app.Activity","id":"method-addContentView","meta":{}},{"name":"closeContextMenu","tagname":"method","owner":"android.app.Activity","id":"method-closeContextMenu","meta":{}},{"name":"closeOptionsMenu","tagname":"method","owner":"android.app.Activity","id":"method-closeOptionsMenu","meta":{}},{"name":"createPendingResult","tagname":"method","owner":"android.app.Activity","id":"method-createPendingResult","meta":{}},{"name":"dismissDialog","tagname":"method","owner":"android.app.Activity","id":"method-dismissDialog","meta":{"deprecated":{"text":"<p>Use the new DialogFragment class with\n FragmentManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n"}}},{"name":"dismissKeyboardShortcutsHelper","tagname":"method","owner":"android.app.Activity","id":"method-dismissKeyboardShortcutsHelper","meta":{}},{"name":"dispatchGenericMotionEvent","tagname":"method","owner":"android.app.Activity","id":"method-dispatchGenericMotionEvent","meta":{}},{"name":"dispatchKeyEvent","tagname":"method","owner":"android.app.Activity","id":"method-dispatchKeyEvent","meta":{}},{"name":"dispatchKeyShortcutEvent","tagname":"method","owner":"android.app.Activity","id":"method-dispatchKeyShortcutEvent","meta":{}},{"name":"dispatchPopulateAccessibilityEvent","tagname":"method","owner":"android.app.Activity","id":"method-dispatchPopulateAccessibilityEvent","meta":{}},{"name":"dispatchTouchEvent","tagname":"method","owner":"android.app.Activity","id":"method-dispatchTouchEvent","meta":{}},{"name":"dispatchTrackballEvent","tagname":"method","owner":"android.app.Activity","id":"method-dispatchTrackballEvent","meta":{}},{"name":"dump","tagname":"method","owner":"android.app.Activity","id":"method-dump","meta":{}},{"name":"enterPictureInPictureMode","tagname":"method","owner":"android.app.Activity","id":"method-enterPictureInPictureMode","meta":{}},{"name":"findViewById","tagname":"method","owner":"android.app.Activity","id":"method-findViewById","meta":{}},{"name":"finish","tagname":"method","owner":"android.app.Activity","id":"method-finish","meta":{}},{"name":"finishActivity","tagname":"method","owner":"android.app.Activity","id":"method-finishActivity","meta":{}},{"name":"finishActivityFromChild","tagname":"method","owner":"android.app.Activity","id":"method-finishActivityFromChild","meta":{}},{"name":"finishAffinity","tagname":"method","owner":"android.app.Activity","id":"method-finishAffinity","meta":{}},{"name":"finishAfterTransition","tagname":"method","owner":"android.app.Activity","id":"method-finishAfterTransition","meta":{}},{"name":"finishAndRemoveTask","tagname":"method","owner":"android.app.Activity","id":"method-finishAndRemoveTask","meta":{}},{"name":"finishFromChild","tagname":"method","owner":"android.app.Activity","id":"method-finishFromChild","meta":{}},{"name":"getActionBar","tagname":"method","owner":"android.app.Activity","id":"method-getActionBar","meta":{}},{"name":"getApplication","tagname":"method","owner":"android.app.Activity","id":"method-getApplication","meta":{}},{"name":"getCallingActivity","tagname":"method","owner":"android.app.Activity","id":"method-getCallingActivity","meta":{}},{"name":"getCallingPackage","tagname":"method","owner":"android.app.Activity","id":"method-getCallingPackage","meta":{}},{"name":"getChangingConfigurations","tagname":"method","owner":"android.app.Activity","id":"method-getChangingConfigurations","meta":{}},{"name":"getComponentName","tagname":"method","owner":"android.app.Activity","id":"method-getComponentName","meta":{}},{"name":"getContentScene","tagname":"method","owner":"android.app.Activity","id":"method-getContentScene","meta":{}},{"name":"getContentTransitionManager","tagname":"method","owner":"android.app.Activity","id":"method-getContentTransitionManager","meta":{}},{"name":"getCurrentFocus","tagname":"method","owner":"android.app.Activity","id":"method-getCurrentFocus","meta":{}},{"name":"getFragmentManager","tagname":"method","owner":"android.app.Activity","id":"method-getFragmentManager","meta":{"deprecated":{"text":"<p>Use android.support.v4.app.FragmentActivity.getSupportFragmentManager()</p>\n"}}},{"name":"getIntent","tagname":"method","owner":"android.app.Activity","id":"method-getIntent","meta":{}},{"name":"getLastNonConfigurationInstance","tagname":"method","owner":"android.app.Activity","id":"method-getLastNonConfigurationInstance","meta":{}},{"name":"getLayoutInflater","tagname":"method","owner":"android.app.Activity","id":"method-getLayoutInflater","meta":{}},{"name":"getLoaderManager","tagname":"method","owner":"android.app.Activity","id":"method-getLoaderManager","meta":{"deprecated":{"text":"<p>Use android.support.v4.app.FragmentActivity.getSupportLoaderManager()</p>\n"}}},{"name":"getLocalClassName","tagname":"method","owner":"android.app.Activity","id":"method-getLocalClassName","meta":{}},{"name":"getMaxNumPictureInPictureActions","tagname":"method","owner":"android.app.Activity","id":"method-getMaxNumPictureInPictureActions","meta":{}},{"name":"getMediaController","tagname":"method","owner":"android.app.Activity","id":"method-getMediaController","meta":{}},{"name":"getMenuInflater","tagname":"method","owner":"android.app.Activity","id":"method-getMenuInflater","meta":{}},{"name":"getNextAutofillId","tagname":"method","owner":"android.app.Activity","id":"method-getNextAutofillId","meta":{}},{"name":"getParent","tagname":"method","owner":"android.app.Activity","id":"method-getParent","meta":{}},{"name":"getParentActivityIntent","tagname":"method","owner":"android.app.Activity","id":"method-getParentActivityIntent","meta":{}},{"name":"getPreferences","tagname":"method","owner":"android.app.Activity","id":"method-getPreferences","meta":{}},{"name":"getReferrer","tagname":"method","owner":"android.app.Activity","id":"method-getReferrer","meta":{}},{"name":"getRequestedOrientation","tagname":"method","owner":"android.app.Activity","id":"method-getRequestedOrientation","meta":{}},{"name":"getSearchEvent","tagname":"method","owner":"android.app.Activity","id":"method-getSearchEvent","meta":{}},{"name":"getSystemService","tagname":"method","owner":"android.app.Activity","id":"method-getSystemService","meta":{}},{"name":"getTaskId","tagname":"method","owner":"android.app.Activity","id":"method-getTaskId","meta":{}},{"name":"getTitle","tagname":"method","owner":"android.app.Activity","id":"method-getTitle","meta":{}},{"name":"getTitleColor","tagname":"method","owner":"android.app.Activity","id":"method-getTitleColor","meta":{}},{"name":"getVoiceInteractor","tagname":"method","owner":"android.app.Activity","id":"method-getVoiceInteractor","meta":{}},{"name":"getVolumeControlStream","tagname":"method","owner":"android.app.Activity","id":"method-getVolumeControlStream","meta":{}},{"name":"getWindow","tagname":"method","owner":"android.app.Activity","id":"method-getWindow","meta":{}},{"name":"getWindowManager","tagname":"method","owner":"android.app.Activity","id":"method-getWindowManager","meta":{}},{"name":"hasWindowFocus","tagname":"method","owner":"android.app.Activity","id":"method-hasWindowFocus","meta":{}},{"name":"invalidateOptionsMenu","tagname":"method","owner":"android.app.Activity","id":"method-invalidateOptionsMenu","meta":{}},{"name":"isActivityTransitionRunning","tagname":"method","owner":"android.app.Activity","id":"method-isActivityTransitionRunning","meta":{}},{"name":"isChangingConfigurations","tagname":"method","owner":"android.app.Activity","id":"method-isChangingConfigurations","meta":{}},{"name":"isChild","tagname":"method","owner":"android.app.Activity","id":"method-isChild","meta":{}},{"name":"isDestroyed","tagname":"method","owner":"android.app.Activity","id":"method-isDestroyed","meta":{}},{"name":"isFinishing","tagname":"method","owner":"android.app.Activity","id":"method-isFinishing","meta":{}},{"name":"isImmersive","tagname":"method","owner":"android.app.Activity","id":"method-isImmersive","meta":{}},{"name":"isInMultiWindowMode","tagname":"method","owner":"android.app.Activity","id":"method-isInMultiWindowMode","meta":{}},{"name":"isInPictureInPictureMode","tagname":"method","owner":"android.app.Activity","id":"method-isInPictureInPictureMode","meta":{}},{"name":"isLocalVoiceInteractionSupported","tagname":"method","owner":"android.app.Activity","id":"method-isLocalVoiceInteractionSupported","meta":{}},{"name":"isTaskRoot","tagname":"method","owner":"android.app.Activity","id":"method-isTaskRoot","meta":{}},{"name":"isVoiceInteraction","tagname":"method","owner":"android.app.Activity","id":"method-isVoiceInteraction","meta":{}},{"name":"isVoiceInteractionRoot","tagname":"method","owner":"android.app.Activity","id":"method-isVoiceInteractionRoot","meta":{}},{"name":"managedQuery","tagname":"method","owner":"android.app.Activity","id":"method-managedQuery","meta":{"deprecated":{"text":"<p>Use CursorLoader instead.</p>\n"}}},{"name":"moveTaskToBack","tagname":"method","owner":"android.app.Activity","id":"method-moveTaskToBack","meta":{}},{"name":"navigateUpTo","tagname":"method","owner":"android.app.Activity","id":"method-navigateUpTo","meta":{}},{"name":"navigateUpToFromChild","tagname":"method","owner":"android.app.Activity","id":"method-navigateUpToFromChild","meta":{}},{"name":"onActionModeFinished","tagname":"method","owner":"android.app.Activity","id":"method-onActionModeFinished","meta":{}},{"name":"onActionModeStarted","tagname":"method","owner":"android.app.Activity","id":"method-onActionModeStarted","meta":{}},{"name":"onActivityReenter","tagname":"method","owner":"android.app.Activity","id":"method-onActivityReenter","meta":{}},{"name":"onAttachFragment","tagname":"method","owner":"android.app.Activity","id":"method-onAttachFragment","meta":{"deprecated":{"text":"<p>Use android.support.v4.app.FragmentActivity.onAttachFragment(android.support.v4.app.Fragment)</p>\n"}}},{"name":"onAttachedToWindow","tagname":"method","owner":"android.app.Activity","id":"method-onAttachedToWindow","meta":{}},{"name":"onBackPressed","tagname":"method","owner":"android.app.Activity","id":"method-onBackPressed","meta":{}},{"name":"onConfigurationChanged","tagname":"method","owner":"android.app.Activity","id":"method-onConfigurationChanged","meta":{}},{"name":"onContentChanged","tagname":"method","owner":"android.app.Activity","id":"method-onContentChanged","meta":{}},{"name":"onContextItemSelected","tagname":"method","owner":"android.app.Activity","id":"method-onContextItemSelected","meta":{}},{"name":"onContextMenuClosed","tagname":"method","owner":"android.app.Activity","id":"method-onContextMenuClosed","meta":{}},{"name":"onCreate","tagname":"method","owner":"android.app.Activity","id":"method-onCreate","meta":{}},{"name":"onCreateContextMenu","tagname":"method","owner":"android.app.Activity","id":"method-onCreateContextMenu","meta":{}},{"name":"onCreateDescription","tagname":"method","owner":"android.app.Activity","id":"method-onCreateDescription","meta":{}},{"name":"onCreateNavigateUpTaskStack","tagname":"method","owner":"android.app.Activity","id":"method-onCreateNavigateUpTaskStack","meta":{}},{"name":"onCreateOptionsMenu","tagname":"method","owner":"android.app.Activity","id":"method-onCreateOptionsMenu","meta":{}},{"name":"onCreatePanelMenu","tagname":"method","owner":"android.app.Activity","id":"method-onCreatePanelMenu","meta":{}},{"name":"onCreatePanelView","tagname":"method","owner":"android.app.Activity","id":"method-onCreatePanelView","meta":{}},{"name":"onCreateThumbnail","tagname":"method","owner":"android.app.Activity","id":"method-onCreateThumbnail","meta":{"deprecated":{"text":"<p>Method doesn't do anything and will be removed in the future.</p>\n"}}},{"name":"onCreateView","tagname":"method","owner":"android.app.Activity","id":"method-onCreateView","meta":{}},{"name":"onDetachedFromWindow","tagname":"method","owner":"android.app.Activity","id":"method-onDetachedFromWindow","meta":{}},{"name":"onEnterAnimationComplete","tagname":"method","owner":"android.app.Activity","id":"method-onEnterAnimationComplete","meta":{}},{"name":"onGenericMotionEvent","tagname":"method","owner":"android.app.Activity","id":"method-onGenericMotionEvent","meta":{}},{"name":"onGetDirectActions","tagname":"method","owner":"android.app.Activity","id":"method-onGetDirectActions","meta":{}},{"name":"onKeyDown","tagname":"method","owner":"android.app.Activity","id":"method-onKeyDown","meta":{}},{"name":"onKeyLongPress","tagname":"method","owner":"android.app.Activity","id":"method-onKeyLongPress","meta":{}},{"name":"onKeyMultiple","tagname":"method","owner":"android.app.Activity","id":"method-onKeyMultiple","meta":{}},{"name":"onKeyShortcut","tagname":"method","owner":"android.app.Activity","id":"method-onKeyShortcut","meta":{}},{"name":"onKeyUp","tagname":"method","owner":"android.app.Activity","id":"method-onKeyUp","meta":{}},{"name":"onLocalVoiceInteractionStarted","tagname":"method","owner":"android.app.Activity","id":"method-onLocalVoiceInteractionStarted","meta":{}},{"name":"onLocalVoiceInteractionStopped","tagname":"method","owner":"android.app.Activity","id":"method-onLocalVoiceInteractionStopped","meta":{}},{"name":"onLowMemory","tagname":"method","owner":"android.app.Activity","id":"method-onLowMemory","meta":{}},{"name":"onMenuItemSelected","tagname":"method","owner":"android.app.Activity","id":"method-onMenuItemSelected","meta":{}},{"name":"onMenuOpened","tagname":"method","owner":"android.app.Activity","id":"method-onMenuOpened","meta":{}},{"name":"onMultiWindowModeChanged","tagname":"method","owner":"android.app.Activity","id":"method-onMultiWindowModeChanged","meta":{"deprecated":{"text":"<p>Use Configuration) instead.</p>\n"}}},{"name":"onNavigateUp","tagname":"method","owner":"android.app.Activity","id":"method-onNavigateUp","meta":{}},{"name":"onNavigateUpFromChild","tagname":"method","owner":"android.app.Activity","id":"method-onNavigateUpFromChild","meta":{}},{"name":"onOptionsItemSelected","tagname":"method","owner":"android.app.Activity","id":"method-onOptionsItemSelected","meta":{}},{"name":"onOptionsMenuClosed","tagname":"method","owner":"android.app.Activity","id":"method-onOptionsMenuClosed","meta":{}},{"name":"onPanelClosed","tagname":"method","owner":"android.app.Activity","id":"method-onPanelClosed","meta":{}},{"name":"onPerformDirectAction","tagname":"method","owner":"android.app.Activity","id":"method-onPerformDirectAction","meta":{}},{"name":"onPictureInPictureModeChanged","tagname":"method","owner":"android.app.Activity","id":"method-onPictureInPictureModeChanged","meta":{"deprecated":{"text":"<p>Use Configuration) instead.</p>\n"}}},{"name":"onPostCreate","tagname":"method","owner":"android.app.Activity","id":"method-onPostCreate","meta":{}},{"name":"onPrepareNavigateUpTaskStack","tagname":"method","owner":"android.app.Activity","id":"method-onPrepareNavigateUpTaskStack","meta":{}},{"name":"onPrepareOptionsMenu","tagname":"method","owner":"android.app.Activity","id":"method-onPrepareOptionsMenu","meta":{}},{"name":"onPreparePanel","tagname":"method","owner":"android.app.Activity","id":"method-onPreparePanel","meta":{}},{"name":"onProvideAssistContent","tagname":"method","owner":"android.app.Activity","id":"method-onProvideAssistContent","meta":{}},{"name":"onProvideAssistData","tagname":"method","owner":"android.app.Activity","id":"method-onProvideAssistData","meta":{}},{"name":"onProvideKeyboardShortcuts","tagname":"method","owner":"android.app.Activity","id":"method-onProvideKeyboardShortcuts","meta":{}},{"name":"onProvideReferrer","tagname":"method","owner":"android.app.Activity","id":"method-onProvideReferrer","meta":{}},{"name":"onRequestPermissionsResult","tagname":"method","owner":"android.app.Activity","id":"method-onRequestPermissionsResult","meta":{}},{"name":"onRestoreInstanceState","tagname":"method","owner":"android.app.Activity","id":"method-onRestoreInstanceState","meta":{}},{"name":"onRetainNonConfigurationInstance","tagname":"method","owner":"android.app.Activity","id":"method-onRetainNonConfigurationInstance","meta":{}},{"name":"onSaveInstanceState","tagname":"method","owner":"android.app.Activity","id":"method-onSaveInstanceState","meta":{}},{"name":"onSearchRequested","tagname":"method","owner":"android.app.Activity","id":"method-onSearchRequested","meta":{}},{"name":"onStateNotSaved","tagname":"method","owner":"android.app.Activity","id":"method-onStateNotSaved","meta":{"deprecated":{"text":"<p>starting with android.os.Build.VERSION_CODES.P onSaveInstanceState is\n called after onStop, so this hint isn't accurate anymore: you should consider your\n state not saved in between {@code onStart} and {@code onStop} callbacks inclusively.</p>\n"}}},{"name":"onTopResumedActivityChanged","tagname":"method","owner":"android.app.Activity","id":"method-onTopResumedActivityChanged","meta":{}},{"name":"onTouchEvent","tagname":"method","owner":"android.app.Activity","id":"method-onTouchEvent","meta":{}},{"name":"onTrackballEvent","tagname":"method","owner":"android.app.Activity","id":"method-onTrackballEvent","meta":{}},{"name":"onTrimMemory","tagname":"method","owner":"android.app.Activity","id":"method-onTrimMemory","meta":{}},{"name":"onUserInteraction","tagname":"method","owner":"android.app.Activity","id":"method-onUserInteraction","meta":{}},{"name":"onVisibleBehindCanceled","tagname":"method","owner":"android.app.Activity","id":"method-onVisibleBehindCanceled","meta":{"deprecated":{"text":"<p>This method's functionality is no longer supported as of\n android.os.Build.VERSION_CODES.O and will be removed in a future release.</p>\n"}}},{"name":"onWindowAttributesChanged","tagname":"method","owner":"android.app.Activity","id":"method-onWindowAttributesChanged","meta":{}},{"name":"onWindowFocusChanged","tagname":"method","owner":"android.app.Activity","id":"method-onWindowFocusChanged","meta":{}},{"name":"onWindowStartingActionMode","tagname":"method","owner":"android.app.Activity","id":"method-onWindowStartingActionMode","meta":{}},{"name":"openContextMenu","tagname":"method","owner":"android.app.Activity","id":"method-openContextMenu","meta":{}},{"name":"openOptionsMenu","tagname":"method","owner":"android.app.Activity","id":"method-openOptionsMenu","meta":{}},{"name":"overridePendingTransition","tagname":"method","owner":"android.app.Activity","id":"method-overridePendingTransition","meta":{}},{"name":"postponeEnterTransition","tagname":"method","owner":"android.app.Activity","id":"method-postponeEnterTransition","meta":{}},{"name":"recreate","tagname":"method","owner":"android.app.Activity","id":"method-recreate","meta":{}},{"name":"registerActivityLifecycleCallbacks","tagname":"method","owner":"android.app.Activity","id":"method-registerActivityLifecycleCallbacks","meta":{}},{"name":"registerForContextMenu","tagname":"method","owner":"android.app.Activity","id":"method-registerForContextMenu","meta":{}},{"name":"releaseInstance","tagname":"method","owner":"android.app.Activity","id":"method-releaseInstance","meta":{}},{"name":"removeDialog","tagname":"method","owner":"android.app.Activity","id":"method-removeDialog","meta":{"deprecated":{"text":"<p>Use the new DialogFragment class with\n FragmentManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n"}}},{"name":"reportFullyDrawn","tagname":"method","owner":"android.app.Activity","id":"method-reportFullyDrawn","meta":{}},{"name":"requestDragAndDropPermissions","tagname":"method","owner":"android.app.Activity","id":"method-requestDragAndDropPermissions","meta":{}},{"name":"requestPermissions","tagname":"method","owner":"android.app.Activity","id":"method-requestPermissions","meta":{}},{"name":"requestShowKeyboardShortcuts","tagname":"method","owner":"android.app.Activity","id":"method-requestShowKeyboardShortcuts","meta":{}},{"name":"requestVisibleBehind","tagname":"method","owner":"android.app.Activity","id":"method-requestVisibleBehind","meta":{}},{"name":"requestWindowFeature","tagname":"method","owner":"android.app.Activity","id":"method-requestWindowFeature","meta":{}},{"name":"requireViewById","tagname":"method","owner":"android.app.Activity","id":"method-requireViewById","meta":{}},{"name":"runOnUiThread","tagname":"method","owner":"android.app.Activity","id":"method-runOnUiThread","meta":{}},{"name":"setActionBar","tagname":"method","owner":"android.app.Activity","id":"method-setActionBar","meta":{}},{"name":"setContentTransitionManager","tagname":"method","owner":"android.app.Activity","id":"method-setContentTransitionManager","meta":{}},{"name":"setContentView","tagname":"method","owner":"android.app.Activity","id":"method-setContentView","meta":{}},{"name":"setDefaultKeyMode","tagname":"method","owner":"android.app.Activity","id":"method-setDefaultKeyMode","meta":{}},{"name":"setEnterSharedElementCallback","tagname":"method","owner":"android.app.Activity","id":"method-setEnterSharedElementCallback","meta":{}},{"name":"setExitSharedElementCallback","tagname":"method","owner":"android.app.Activity","id":"method-setExitSharedElementCallback","meta":{}},{"name":"setFeatureDrawable","tagname":"method","owner":"android.app.Activity","id":"method-setFeatureDrawable","meta":{}},{"name":"setFeatureDrawableAlpha","tagname":"method","owner":"android.app.Activity","id":"method-setFeatureDrawableAlpha","meta":{}},{"name":"setFeatureDrawableResource","tagname":"method","owner":"android.app.Activity","id":"method-setFeatureDrawableResource","meta":{}},{"name":"setFeatureDrawableUri","tagname":"method","owner":"android.app.Activity","id":"method-setFeatureDrawableUri","meta":{}},{"name":"setFinishOnTouchOutside","tagname":"method","owner":"android.app.Activity","id":"method-setFinishOnTouchOutside","meta":{}},{"name":"setImmersive","tagname":"method","owner":"android.app.Activity","id":"method-setImmersive","meta":{}},{"name":"setInheritShowWhenLocked","tagname":"method","owner":"android.app.Activity","id":"method-setInheritShowWhenLocked","meta":{}},{"name":"setIntent","tagname":"method","owner":"android.app.Activity","id":"method-setIntent","meta":{}},{"name":"setMediaController","tagname":"method","owner":"android.app.Activity","id":"method-setMediaController","meta":{}},{"name":"setPictureInPictureArgs","tagname":"method","owner":"android.app.Activity","id":"method-setPictureInPictureArgs","meta":{"removed":{"text":"\n"}}},{"name":"setPictureInPictureParams","tagname":"method","owner":"android.app.Activity","id":"method-setPictureInPictureParams","meta":{}},{"name":"setProgress","tagname":"method","owner":"android.app.Activity","id":"method-setProgress","meta":{"deprecated":{"text":"<p>No longer supported starting in API 21.</p>\n"}}},{"name":"setProgressBarIndeterminate","tagname":"method","owner":"android.app.Activity","id":"method-setProgressBarIndeterminate","meta":{"deprecated":{"text":"<p>No longer supported starting in API 21.</p>\n"}}},{"name":"setProgressBarIndeterminateVisibility","tagname":"method","owner":"android.app.Activity","id":"method-setProgressBarIndeterminateVisibility","meta":{"deprecated":{"text":"<p>No longer supported starting in API 21.</p>\n"}}},{"name":"setProgressBarVisibility","tagname":"method","owner":"android.app.Activity","id":"method-setProgressBarVisibility","meta":{"deprecated":{"text":"<p>No longer supported starting in API 21.</p>\n"}}},{"name":"setRequestedOrientation","tagname":"method","owner":"android.app.Activity","id":"method-setRequestedOrientation","meta":{}},{"name":"setResult","tagname":"method","owner":"android.app.Activity","id":"method-setResult","meta":{}},{"name":"setSecondaryProgress","tagname":"method","owner":"android.app.Activity","id":"method-setSecondaryProgress","meta":{"deprecated":{"text":"<p>No longer supported starting in API 21.</p>\n"}}},{"name":"setShowWhenLocked","tagname":"method","owner":"android.app.Activity","id":"method-setShowWhenLocked","meta":{}},{"name":"setTaskDescription","tagname":"method","owner":"android.app.Activity","id":"method-setTaskDescription","meta":{}},{"name":"setTheme","tagname":"method","owner":"android.app.Activity","id":"method-setTheme","meta":{}},{"name":"setTitle","tagname":"method","owner":"android.app.Activity","id":"method-setTitle","meta":{}},{"name":"setTitleColor","tagname":"method","owner":"android.app.Activity","id":"method-setTitleColor","meta":{"deprecated":{"text":"<p>Use action bar styles instead.</p>\n"}}},{"name":"setTurnScreenOn","tagname":"method","owner":"android.app.Activity","id":"method-setTurnScreenOn","meta":{}},{"name":"setVisible","tagname":"method","owner":"android.app.Activity","id":"method-setVisible","meta":{}},{"name":"setVolumeControlStream","tagname":"method","owner":"android.app.Activity","id":"method-setVolumeControlStream","meta":{}},{"name":"setVrModeEnabled","tagname":"method","owner":"android.app.Activity","id":"method-setVrModeEnabled","meta":{}},{"name":"shouldShowRequestPermissionRationale","tagname":"method","owner":"android.app.Activity","id":"method-shouldShowRequestPermissionRationale","meta":{}},{"name":"shouldUpRecreateTask","tagname":"method","owner":"android.app.Activity","id":"method-shouldUpRecreateTask","meta":{}},{"name":"showAssist","tagname":"method","owner":"android.app.Activity","id":"method-showAssist","meta":{}},{"name":"showDialog","tagname":"method","owner":"android.app.Activity","id":"method-showDialog","meta":{"deprecated":{"text":"<p>Use the new DialogFragment class with\n FragmentManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n"}}},{"name":"showLockTaskEscapeMessage","tagname":"method","owner":"android.app.Activity","id":"method-showLockTaskEscapeMessage","meta":{}},{"name":"startActionMode","tagname":"method","owner":"android.app.Activity","id":"method-startActionMode","meta":{}},{"name":"startActivities","tagname":"method","owner":"android.app.Activity","id":"method-startActivities","meta":{}},{"name":"startActivity","tagname":"method","owner":"android.app.Activity","id":"method-startActivity","meta":{}},{"name":"startActivityFromChild","tagname":"method","owner":"android.app.Activity","id":"method-startActivityFromChild","meta":{}},{"name":"startActivityFromFragment","tagname":"method","owner":"android.app.Activity","id":"method-startActivityFromFragment","meta":{"deprecated":{"text":"<p>Use android.support.v4.app.Fragment,Intent,int,Bundle)</p>\n"}}},{"name":"startActivityIfNeeded","tagname":"method","owner":"android.app.Activity","id":"method-startActivityIfNeeded","meta":{}},{"name":"startIntentSender","tagname":"method","owner":"android.app.Activity","id":"method-startIntentSender","meta":{}},{"name":"startIntentSenderForResult","tagname":"method","owner":"android.app.Activity","id":"method-startIntentSenderForResult","meta":{}},{"name":"startIntentSenderFromChild","tagname":"method","owner":"android.app.Activity","id":"method-startIntentSenderFromChild","meta":{}},{"name":"startLocalVoiceInteraction","tagname":"method","owner":"android.app.Activity","id":"method-startLocalVoiceInteraction","meta":{}},{"name":"startLockTask","tagname":"method","owner":"android.app.Activity","id":"method-startLockTask","meta":{}},{"name":"startManagingCursor","tagname":"method","owner":"android.app.Activity","id":"method-startManagingCursor","meta":{"deprecated":{"text":"<p>Use the new android.content.CursorLoader class with\n LoaderManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n"}}},{"name":"startNextMatchingActivity","tagname":"method","owner":"android.app.Activity","id":"method-startNextMatchingActivity","meta":{}},{"name":"startPostponedEnterTransition","tagname":"method","owner":"android.app.Activity","id":"method-startPostponedEnterTransition","meta":{}},{"name":"startSearch","tagname":"method","owner":"android.app.Activity","id":"method-startSearch","meta":{}},{"name":"stopLocalVoiceInteraction","tagname":"method","owner":"android.app.Activity","id":"method-stopLocalVoiceInteraction","meta":{}},{"name":"stopLockTask","tagname":"method","owner":"android.app.Activity","id":"method-stopLockTask","meta":{}},{"name":"stopManagingCursor","tagname":"method","owner":"android.app.Activity","id":"method-stopManagingCursor","meta":{"deprecated":{"text":"<p>Use the new android.content.CursorLoader class with\n LoaderManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n"}}},{"name":"takeKeyEvents","tagname":"method","owner":"android.app.Activity","id":"method-takeKeyEvents","meta":{}},{"name":"triggerSearch","tagname":"method","owner":"android.app.Activity","id":"method-triggerSearch","meta":{}},{"name":"unregisterActivityLifecycleCallbacks","tagname":"method","owner":"android.app.Activity","id":"method-unregisterActivityLifecycleCallbacks","meta":{}},{"name":"unregisterForContextMenu","tagname":"method","owner":"android.app.Activity","id":"method-unregisterForContextMenu","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.AppDetailsActivity","classIcon":"icon-class","superclasses":["android.view.ContextThemeWrapper","android.app.Activity"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.view.ContextThemeWrapper<div class='subclass '><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='docClass'>android.app.Activity</a><div class='subclass '><strong>android.app.AppDetailsActivity</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/AppDetailsActivity.html#android-app-AppDetailsActivity' target='_blank'>AppDetailsActivity.js</a></div></pre><div class='doc-contents'><p>Helper activity that forwards you to app details page.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DEFAULT_KEYS_DIALER' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-DEFAULT_KEYS_DIALER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-DEFAULT_KEYS_DIALER' class='name expandable'>DEFAULT_KEYS_DIALER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with setDefaultKeyMode to launch the dialer during default\nkey handling. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a> to launch the dialer during default\nkey handling.</p>\n\n<p>@see <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a></p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-DEFAULT_KEYS_DISABLE' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-DEFAULT_KEYS_DISABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-DEFAULT_KEYS_DISABLE' class='name expandable'>DEFAULT_KEYS_DISABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with setDefaultKeyMode to turn off default handling of\nkeys. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a> to turn off default handling of\nkeys.</p>\n\n<p>@see <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a></p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-DEFAULT_KEYS_SEARCH_GLOBAL' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-DEFAULT_KEYS_SEARCH_GLOBAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-DEFAULT_KEYS_SEARCH_GLOBAL' class='name expandable'>DEFAULT_KEYS_SEARCH_GLOBAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with setDefaultKeyMode to specify that unhandled keystrokes\nwill start a global search (typically web search, but...</div><div class='long'><p>Use with <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a> to specify that unhandled keystrokes\nwill start a global search (typically web search, but some platforms may define alternate\nmethods for global search)</p>\n\n<p><p>See <a href=\"#!/api/android.app.SearchManager\" rel=\"android.app.SearchManager\" class=\"docClass\">android.app.SearchManager</a> for more details.</p>\n\n<p>@see <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a></p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-DEFAULT_KEYS_SEARCH_LOCAL' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-DEFAULT_KEYS_SEARCH_LOCAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-DEFAULT_KEYS_SEARCH_LOCAL' class='name expandable'>DEFAULT_KEYS_SEARCH_LOCAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with setDefaultKeyMode to specify that unhandled keystrokes\nwill start an application-defined search. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a> to specify that unhandled keystrokes\nwill start an application-defined search.  (If the application or activity does not\nactually define a search, the keys will be ignored.)</p>\n\n<p><p>See <a href=\"#!/api/android.app.SearchManager\" rel=\"android.app.SearchManager\" class=\"docClass\">android.app.SearchManager</a> for more details.</p>\n\n<p>@see <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a></p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-DEFAULT_KEYS_SHORTCUT' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-DEFAULT_KEYS_SHORTCUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-DEFAULT_KEYS_SHORTCUT' class='name expandable'>DEFAULT_KEYS_SHORTCUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Use with setDefaultKeyMode to execute a menu shortcut in\ndefault key handling. ...</div><div class='long'><p>Use with <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a> to execute a menu shortcut in\ndefault key handling.</p>\n\n<p><p>That is, the user does not need to hold down the menu key to execute menu shortcuts.</p>\n\n<p>@see <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a></p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-RESULT_CANCELED' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-RESULT_CANCELED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-RESULT_CANCELED' class='name expandable'>RESULT_CANCELED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard activity result: operation canceled. ...</div><div class='long'><p>Standard activity result: operation canceled.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-RESULT_FIRST_USER' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-RESULT_FIRST_USER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-RESULT_FIRST_USER' class='name expandable'>RESULT_FIRST_USER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Start of user-defined activity results. ...</div><div class='long'><p>Start of user-defined activity results.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-RESULT_OK' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-property-RESULT_OK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-property-RESULT_OK' class='name expandable'>RESULT_OK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard activity result: operation succeeded. ...</div><div class='long'><p>Standard activity result: operation succeeded.</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addContentView' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-addContentView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-addContentView' class='name expandable'>addContentView</a>( <span class='pre'>view, params</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add an additional content view to the activity. ...</div><div class='long'><p>Add an additional content view to the activity.  Added after any existing\n ones in the activity -- existing views are NOT removed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The desired content to display.</p>\n</div></li><li><span class='pre'>params</span> : Object {ViewGroup.LayoutParams}<div class='sub-desc'><p>Layout parameters for the view.</p>\n</div></li></ul></div></div></div><div id='method-closeContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-closeContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-closeContextMenu' class='name expandable'>closeContextMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Programmatically closes the most recently opened context menu, if showing. ...</div><div class='long'><p>Programmatically closes the most recently opened context menu, if showing.</p>\n</div></div></div><div id='method-closeOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-closeOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-closeOptionsMenu' class='name expandable'>closeOptionsMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Progammatically closes the options menu. ...</div><div class='long'><p>Progammatically closes the options menu. If the options menu is already\n closed, this method does nothing.</p>\n</div></div></div><div id='method-createPendingResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-createPendingResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-createPendingResult' class='name expandable'>createPendingResult</a>( <span class='pre'>requestCode, data, flags</span> ) : Object {android.app.PendingIntent}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new PendingIntent object which you can hand to others\n for them to use to send result data back to your\n onA...</div><div class='long'><p>Create a new PendingIntent object which you can hand to others\n for them to use to send result data back to your\n onActivityResult callback.  The created object will be either\n one-shot (becoming invalid after a result is sent back) or multiple\n (allowing any number of results to be sent through it).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Private request code for the sender that will be\n associated with the result data when it is returned.  The sender can not\n modify this value, allowing you to identify incoming results.</p>\n</div></li><li><span class='pre'>data</span> : Object {Intent}<div class='sub-desc'><p>Default data to supply in the result, which may be modified\n by the sender.</p>\n</div></li><li><span class='pre'>flags</span> : Number<div class='sub-desc'><p>May be PendingIntent.FLAG_ONE_SHOT,\n PendingIntent.FLAG_NO_CREATE,\n PendingIntent.FLAG_CANCEL_CURRENT,\n PendingIntent.FLAG_UPDATE_CURRENT,\n or any of the flags as supported by\n Intent.fillIn() to control which unspecified parts\n of the intent that can be supplied when the actual send happens.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.PendingIntent}</span><div class='sub-desc'><p>Returns an existing or new PendingIntent matching the given\n parameters.  May return null only if\n PendingIntent.FLAG_NO_CREATE has been\n supplied.\n@see PendingIntent</p>\n</div></li></ul></div></div></div><div id='method-dismissDialog' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dismissDialog' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dismissDialog' class='name expandable'>dismissDialog</a>( <span class='pre'>id</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Dismiss a dialog that was previously shown via showDialog(int). ...</div><div class='long'><p>Dismiss a dialog that was previously shown via <a href=\"#!/api/android.app.Activity-method-showDialog\" rel=\"android.app.Activity-method-showDialog\" class=\"docClass\">showDialog</a>(int).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use the new DialogFragment class with\n FragmentManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The id of the managed dialog.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the id was not previously shown via\n   showDialog(int).\n@see #onCreateDialog(int, Bundle)\n@see #onPrepareDialog(int, Dialog, Bundle)\n@see <a href=\"#!/api/android.app.Activity-method-showDialog\" rel=\"android.app.Activity-method-showDialog\" class=\"docClass\">showDialog</a>(int)\n@see <a href=\"#!/api/android.app.Activity-method-removeDialog\" rel=\"android.app.Activity-method-removeDialog\" class=\"docClass\">removeDialog</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-dismissKeyboardShortcutsHelper' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dismissKeyboardShortcutsHelper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dismissKeyboardShortcutsHelper' class='name expandable'>dismissKeyboardShortcutsHelper</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Dismiss the Keyboard Shortcuts screen. ...</div><div class='long'><p>Dismiss the Keyboard Shortcuts screen.</p>\n</div></div></div><div id='method-dispatchGenericMotionEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dispatchGenericMotionEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dispatchGenericMotionEvent' class='name expandable'>dispatchGenericMotionEvent</a>( <span class='pre'>ev</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process generic motion events. ...</div><div class='long'><p>Called to process generic motion events.  You can override this to\n intercept all generic motion events before they are dispatched to the\n window.  Be sure to call this implementation for generic motion events\n that should be handled normally.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ev</span> : Object {MotionEvent}<div class='sub-desc'><p>The generic motion event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchKeyEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dispatchKeyEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dispatchKeyEvent' class='name expandable'>dispatchKeyEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process key events. ...</div><div class='long'><p>Called to process key events.  You can override this to intercept all\n key events before they are dispatched to the window.  Be sure to call\n this implementation for key events that should be handled normally.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchKeyShortcutEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dispatchKeyShortcutEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dispatchKeyShortcutEvent' class='name expandable'>dispatchKeyShortcutEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process a key shortcut event. ...</div><div class='long'><p>Called to process a key shortcut event.\n You can override this to intercept all key shortcut events before they are\n dispatched to the window.  Be sure to call this implementation for key shortcut\n events that should be handled normally.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>The key shortcut event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchPopulateAccessibilityEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dispatchPopulateAccessibilityEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dispatchPopulateAccessibilityEvent' class='name expandable'>dispatchPopulateAccessibilityEvent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-dispatchTouchEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dispatchTouchEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dispatchTouchEvent' class='name expandable'>dispatchTouchEvent</a>( <span class='pre'>ev</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process touch screen events. ...</div><div class='long'><p>Called to process touch screen events.  You can override this to\n intercept all touch screen events before they are dispatched to the\n window.  Be sure to call this implementation for touch screen events\n that should be handled normally.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ev</span> : Object {MotionEvent}<div class='sub-desc'><p>The touch screen event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dispatchTrackballEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dispatchTrackballEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dispatchTrackballEvent' class='name expandable'>dispatchTrackballEvent</a>( <span class='pre'>ev</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called to process trackball events. ...</div><div class='long'><p>Called to process trackball events.  You can override this to\n intercept all trackball events before they are dispatched to the\n window.  Be sure to call this implementation for trackball events\n that should be handled normally.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>ev</span> : Object {MotionEvent}<div class='sub-desc'><p>The trackball event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return true if this event was consumed.</p>\n</div></li></ul></div></div></div><div id='method-dump' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-dump' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-dump' class='name expandable'>dump</a>( <span class='pre'>prefix, fd, writer, args</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Print the Activity's state into the given stream. ...</div><div class='long'><p>Print the Activity's state into the given stream.  This gets invoked if\n you run \"adb shell dumpsys activity &lt;activity_component_name&gt;\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : String<div class='sub-desc'><p>Desired prefix to prepend at each line of output.</p>\n</div></li><li><span class='pre'>fd</span> : Object {FileDescriptor}<div class='sub-desc'><p>The raw file descriptor that the dump is being sent to.</p>\n</div></li><li><span class='pre'>writer</span> : Object {PrintWriter}<div class='sub-desc'><p>The PrintWriter to which you should dump your state.  This will be\n closed for you after you return.</p>\n</div></li><li><span class='pre'>args</span> : Object {java.lang.String[]}<div class='sub-desc'><p>additional arguments to the dump request.</p>\n</div></li></ul></div></div></div><div id='method-enterPictureInPictureMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-enterPictureInPictureMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-enterPictureInPictureMode' class='name expandable'>enterPictureInPictureMode</a>( <span class='pre'>params, params</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Puts the activity in picture-in-picture mode if possible in the current system state. ...</div><div class='long'><p>Puts the activity in picture-in-picture mode if possible in the current system state. The\n set parameters in {@param params} will be combined with the parameters from prior calls to\n <a href=\"#!/api/android.app.Activity-method-setPictureInPictureParams\" rel=\"android.app.Activity-method-setPictureInPictureParams\" class=\"docClass\">setPictureInPictureParams</a>(PictureInPictureParams).</p>\n\n<p> The system may disallow entering picture-in-picture in various cases, including when the\n activity is not visible, if the screen is locked or if the user has an activity pinned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object {PictureInPictureParams}<div class='sub-desc'><p>non-null parameters to be combined with previously set parameters when entering\n picture-in-picture.\n@see PictureInPictureParams</p>\n</div></li><li><span class='pre'>params</span> : Object<div class='sub-desc'><p>non-null parameters to be combined with previously set parameters when entering\n picture-in-picture.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the system successfully put this activity into picture-in-picture mode or was\n already in picture-in-picture mode (see isInPictureInPictureMode()). If the device\n does not support picture-in-picture, return false.</p>\n</div></li></ul></div></div></div><div id='method-findViewById' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-findViewById' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-findViewById' class='name expandable'>findViewById</a>( <span class='pre'>id</span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds a view that was identified by the {@code android:id} XML attribute\n that was processed in onCreate. ...</div><div class='long'><p>Finds a view that was identified by the {@code android:id} XML attribute\n that was processed in <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a>.\n <p>\n <strong>Note:</strong> In most cases -- depending on compiler support --\n the resulting view is automatically cast to the target class type. If\n the target class type is unconstrained, an explicit cast may be\n necessary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>the ID to search for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>a view with given ID if found, or {@code null} otherwise\n@see View#findViewById(int)\n@see Activity#requireViewById(int)</p>\n</div></li></ul></div></div></div><div id='method-finish' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-finish' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-finish' class='name expandable'>finish</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call this when your activity is done and should be closed. ...</div><div class='long'><p>Call this when your activity is done and should be closed.  The\n ActivityResult is propagated back to whoever launched you via\n onActivityResult().</p>\n</div></div></div><div id='method-finishActivity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-finishActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-finishActivity' class='name expandable'>finishActivity</a>( <span class='pre'>requestCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Force finish another activity that you had previously started with\n startActivityForResult. ...</div><div class='long'><p>Force finish another activity that you had previously started with\n startActivityForResult.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>The request code of the activity that you had\n                    given to startActivityForResult().  If there are multiple\n                    activities started with this request code, they\n                    will all be finished.</p>\n</div></li></ul></div></div></div><div id='method-finishActivityFromChild' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-finishActivityFromChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-finishActivityFromChild' class='name expandable'>finishActivityFromChild</a>( <span class='pre'>child, requestCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when a child activity of this one calls its\n finishActivity(). ...</div><div class='long'><p>This is called when a child activity of this one calls its\n finishActivity().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>child</span> : Object {Activity}<div class='sub-desc'><p>The activity making the call.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Request code that had been used to start the\n                    activity.</p>\n</div></li></ul></div></div></div><div id='method-finishAffinity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-finishAffinity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-finishAffinity' class='name expandable'>finishAffinity</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Finish this activity as well as all activities immediately below it\n in the current task that have the same affinity. ...</div><div class='long'><p>Finish this activity as well as all activities immediately below it\n in the current task that have the same affinity.  This is typically\n used when an application can be launched on to another task (such as\n from an ACTION_VIEW of a content type it understands) and the user\n has used the up navigation to switch out of the current task and in\n to its own task.  In this case, if the user has navigated down into\n any other activities of the second application, all of those should\n be removed from the original task as part of the task switch.</p>\n\n<p> <p>Note that this finish does <em>not</em> allow you to deliver results\n to the previous activity, and an exception will be thrown if you are trying\n to do so.</p></p>\n</div></div></div><div id='method-finishAfterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-finishAfterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-finishAfterTransition' class='name expandable'>finishAfterTransition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Reverses the Activity Scene entry Transition and triggers the calling Activity\n to reverse its exit Transition. ...</div><div class='long'><p>Reverses the Activity Scene entry Transition and triggers the calling Activity\n to reverse its exit Transition. When the exit Transition completes,\n <a href=\"#!/api/android.app.Activity-method-finish\" rel=\"android.app.Activity-method-finish\" class=\"docClass\">finish</a>() is called. If no entry Transition was used, finish() is called\n immediately and the Activity exit Transition is run.\n@see <a href=\"#!/api/android.app.ActivityOptions-method-makeSceneTransitionAnimation\" rel=\"android.app.ActivityOptions-method-makeSceneTransitionAnimation\" class=\"docClass\">android.app.ActivityOptions.makeSceneTransitionAnimation</a>(Activity, android.util.Pair[])</p>\n</div></div></div><div id='method-finishAndRemoveTask' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-finishAndRemoveTask' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-finishAndRemoveTask' class='name expandable'>finishAndRemoveTask</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call this when your activity is done and should be closed and the task should be completely\n removed as a part of fin...</div><div class='long'><p>Call this when your activity is done and should be closed and the task should be completely\n removed as a part of finishing the root activity of the task.</p>\n</div></div></div><div id='method-finishFromChild' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-finishFromChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-finishFromChild' class='name expandable'>finishFromChild</a>( <span class='pre'>child</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when a child activity of this one calls its\n finish method. ...</div><div class='long'><p>This is called when a child activity of this one calls its\n <a href=\"#!/api/android.app.Activity-method-finish\" rel=\"android.app.Activity-method-finish\" class=\"docClass\">finish</a> method.  The default implementation simply calls\n finish() on this activity (the parent), finishing the entire group.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>child</span> : Object {Activity}<div class='sub-desc'><p>The activity making the call.\n@see <a href=\"#!/api/android.app.Activity-method-finish\" rel=\"android.app.Activity-method-finish\" class=\"docClass\">finish</a></p>\n</div></li></ul></div></div></div><div id='method-getActionBar' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getActionBar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getActionBar' class='name expandable'>getActionBar</a>( <span class='pre'></span> ) : Object {android.app.ActionBar}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve a reference to this activity's ActionBar. ...</div><div class='long'><p>Retrieve a reference to this activity's ActionBar.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.ActionBar}</span><div class='sub-desc'><p>The Activity's ActionBar, or null if it does not have one.</p>\n</div></li></ul></div></div></div><div id='method-getApplication' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getApplication' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getApplication' class='name expandable'>getApplication</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the application that owns this activity. ...</div><div class='long'><p>Return the application that owns this activity.</p>\n</div></div></div><div id='method-getCallingActivity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getCallingActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getCallingActivity' class='name expandable'>getCallingActivity</a>( <span class='pre'></span> ) : Object {android.content.ComponentName}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the name of the activity that invoked this activity. ...</div><div class='long'><p>Return the name of the activity that invoked this activity.  This is\n who the data in <a href=\"#!/api/android.app.Activity-method-setResult\" rel=\"android.app.Activity-method-setResult\" class=\"docClass\">setResult()</a> will be sent to.  You\n can use this information to validate that the recipient is allowed to\n receive the data.</p>\n\n<p> <p class=\"note\">Note: if the calling activity is not expecting a result (that is it\n did not use the startActivityForResult\n form that includes a request code), then the calling package will be\n null.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.ComponentName}</span><div class='sub-desc'><p>The ComponentName of the activity that will receive your\n         reply, or null if none.</p>\n</div></li></ul></div></div></div><div id='method-getCallingPackage' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getCallingPackage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getCallingPackage' class='name expandable'>getCallingPackage</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the name of the package that invoked this activity. ...</div><div class='long'><p>Return the name of the package that invoked this activity.  This is who\n the data in <a href=\"#!/api/android.app.Activity-method-setResult\" rel=\"android.app.Activity-method-setResult\" class=\"docClass\">setResult()</a> will be sent to.  You can\n use this information to validate that the recipient is allowed to\n receive the data.</p>\n\n<p> <p class=\"note\">Note: if the calling activity is not expecting a result (that is it\n did not use the startActivityForResult\n form that includes a request code), then the calling package will be\n null.</p></p>\n\n<p> <p class=\"note\">Note: prior to android.os.Build.VERSION_CODES.JELLY_BEAN_MR2,\n the result from this method was unstable.  If the process hosting the calling\n package was no longer running, it would return null instead of the proper package\n name.  You can use <a href=\"#!/api/android.app.Activity-method-getCallingActivity\" rel=\"android.app.Activity-method-getCallingActivity\" class=\"docClass\">getCallingActivity</a>() and retrieve the package name\n from that instead.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The package of the activity that will receive your\n         reply, or null if none.</p>\n</div></li></ul></div></div></div><div id='method-getChangingConfigurations' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getChangingConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getChangingConfigurations' class='name expandable'>getChangingConfigurations</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>If this activity is being destroyed because it can not handle a\n configuration parameter being changed (and thus its\n...</div><div class='long'><p>If this activity is being destroyed because it can not handle a\n configuration parameter being changed (and thus its\n <a href=\"#!/api/android.app.Activity-method-onConfigurationChanged\" rel=\"android.app.Activity-method-onConfigurationChanged\" class=\"docClass\">onConfigurationChanged</a>(Configuration) method is\n <em>not</em> being called), then you can use this method to discover\n the set of changes that have occurred while in the process of being\n destroyed.  Note that there is no guarantee that these will be\n accurate (other changes could have happened at any time), so you should\n only use this as an optimization hint.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns a bit field of the configuration parameters that are\n changing, as defined by the android.content.res.Configuration\n class.</p>\n</div></li></ul></div></div></div><div id='method-getComponentName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getComponentName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getComponentName' class='name expandable'>getComponentName</a>( <span class='pre'></span> ) : Object {android.content.ComponentName}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the complete component name of this activity. ...</div><div class='long'><p>Returns the complete component name of this activity.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.ComponentName}</span><div class='sub-desc'><p>Returns the complete component name for this activity</p>\n</div></li></ul></div></div></div><div id='method-getContentScene' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getContentScene' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getContentScene' class='name expandable'>getContentScene</a>( <span class='pre'></span> ) : Object {android.transition.Scene}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the Scene representing this window's current content. ...</div><div class='long'><p>Retrieve the Scene representing this window's current content.\n Requires Window.FEATURE_CONTENT_TRANSITIONS.</p>\n\n<p> <p>This method will return null if the current content is not represented by a Scene.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.Scene}</span><div class='sub-desc'><p>Current Scene being shown or null</p>\n</div></li></ul></div></div></div><div id='method-getContentTransitionManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getContentTransitionManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getContentTransitionManager' class='name expandable'>getContentTransitionManager</a>( <span class='pre'></span> ) : Object {android.transition.TransitionManager}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the android.app.FragmentTransaction.TransitionManager responsible for default transitions in this window. ...</div><div class='long'><p>Retrieve the android.app.FragmentTransaction.TransitionManager responsible for default transitions in this window.\n Requires Window.FEATURE_CONTENT_TRANSITIONS.</p>\n\n<p> <p>This method will return non-null after content has been initialized (e.g. by using\n <a href=\"#!/api/android.app.Activity-method-setContentView\" rel=\"android.app.Activity-method-setContentView\" class=\"docClass\">setContentView</a>) if Window.FEATURE_CONTENT_TRANSITIONS has been granted.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.transition.TransitionManager}</span><div class='sub-desc'><p>This window's content TransitionManager or null if none is set.</p>\n</div></li></ul></div></div></div><div id='method-getCurrentFocus' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getCurrentFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getCurrentFocus' class='name expandable'>getCurrentFocus</a>( <span class='pre'></span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Calls android.view.Window.getCurrentFocus on the\n Window of this Activity to return the currently focused view. ...</div><div class='long'><p>Calls android.view.Window.getCurrentFocus on the\n Window of this Activity to return the currently focused view.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>View The current View with focus or null.\n@see <a href=\"#!/api/android.app.Activity-method-getWindow\" rel=\"android.app.Activity-method-getWindow\" class=\"docClass\">getWindow</a>\n@see android.view.Window#getCurrentFocus</p>\n</div></li></ul></div></div></div><div id='method-getFragmentManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getFragmentManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getFragmentManager' class='name expandable'>getFragmentManager</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return the FragmentManager for interacting with fragments associated\n with this activity. ...</div><div class='long'><p>Return the FragmentManager for interacting with fragments associated\n with this activity.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use android.support.v4.app.FragmentActivity.getSupportFragmentManager()</p>\n\n        </div>\n</div></div></div><div id='method-getIntent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getIntent' class='name expandable'>getIntent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the intent that started this activity. ...</div><div class='long'><p>Return the intent that started this activity.</p>\n</div></div></div><div id='method-getLastNonConfigurationInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getLastNonConfigurationInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getLastNonConfigurationInstance' class='name expandable'>getLastNonConfigurationInstance</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the non-configuration instance data that was previously\n returned by onRetainNonConfigurationInstance(). ...</div><div class='long'><p>Retrieve the non-configuration instance data that was previously\n returned by <a href=\"#!/api/android.app.Activity-method-onRetainNonConfigurationInstance\" rel=\"android.app.Activity-method-onRetainNonConfigurationInstance\" class=\"docClass\">onRetainNonConfigurationInstance</a>().  This will\n be available from the initial <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a> and\n onStart calls to the new instance, allowing you to extract\n any useful dynamic state from the previous instance.</p>\n\n<p> <p>Note that the data you retrieve here should <em>only</em> be used\n as an optimization for handling configuration changes.  You should always\n be able to handle getting a null pointer back, and an activity must\n still be able to restore itself to its previous state (through the\n normal <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>(Bundle) mechanism) even if this\n function returns null.</p>\n\n<p> <p><strong>Note:</strong> For most cases you should use the <a href=\"#!/api/android.app.Fragment\" rel=\"android.app.Fragment\" class=\"docClass\">android.app.Fragment</a> API\n android.app.Fragment.setRetainInstance(boolean) instead; this is also\n available on older platforms through the Android support libraries.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the object previously returned by onRetainNonConfigurationInstance()</p>\n</div></li></ul></div></div></div><div id='method-getLayoutInflater' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getLayoutInflater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getLayoutInflater' class='name expandable'>getLayoutInflater</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for calling\n android.view.Window.getLayoutInflater. ...</div><div class='long'><p>Convenience for calling\n android.view.Window.getLayoutInflater.</p>\n</div></div></div><div id='method-getLoaderManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getLoaderManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getLoaderManager' class='name expandable'>getLoaderManager</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return the LoaderManager for this activity, creating it if needed. ...</div><div class='long'><p>Return the LoaderManager for this activity, creating it if needed.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use android.support.v4.app.FragmentActivity.getSupportLoaderManager()</p>\n\n        </div>\n</div></div></div><div id='method-getLocalClassName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getLocalClassName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getLocalClassName' class='name expandable'>getLocalClassName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns class name for this activity with the package prefix removed. ...</div><div class='long'><p>Returns class name for this activity with the package prefix removed.\n This is the default name used to read and write settings.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The local class name.</p>\n</div></li></ul></div></div></div><div id='method-getMaxNumPictureInPictureActions' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getMaxNumPictureInPictureActions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getMaxNumPictureInPictureActions' class='name expandable'>getMaxNumPictureInPictureActions</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the number of actions that will be displayed in the picture-in-picture UI when the\n user interacts with the ac...</div><div class='long'><p>Return the number of actions that will be displayed in the picture-in-picture UI when the\n user interacts with the activity currently in picture-in-picture mode. This number may change\n if the global configuration changes (ie. if the device is plugged into an external display),\n but will always be larger than three.</p>\n</div></div></div><div id='method-getMediaController' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getMediaController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getMediaController' class='name expandable'>getMediaController</a>( <span class='pre'></span> ) : Object {android.media.session.MediaController}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the controller which should be receiving media key and volume events\n while this activity is in the foreground. ...</div><div class='long'><p>Gets the controller which should be receiving media key and volume events\n while this activity is in the foreground.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.media.session.MediaController}</span><div class='sub-desc'><p>The controller which should receive events.\n@see <a href=\"#!/api/android.app.Activity-method-setMediaController\" rel=\"android.app.Activity-method-setMediaController\" class=\"docClass\">setMediaController</a>(android.media.session.MediaController)</p>\n</div></li></ul></div></div></div><div id='method-getMenuInflater' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getMenuInflater' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getMenuInflater' class='name expandable'>getMenuInflater</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a MenuInflater with this context. ...</div><div class='long'><p>Returns a MenuInflater with this context.</p>\n</div></div></div><div id='method-getNextAutofillId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getNextAutofillId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getNextAutofillId' class='name expandable'>getNextAutofillId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the next autofill ID. ...</div><div class='long'><p>Gets the next autofill ID.</p>\n\n<p> <p>All IDs will be bigger than View.LAST_APP_AUTOFILL_ID. All IDs returned\n will be unique.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A ID that is unique in the activity</p>\n\n<p> {@hide}</p>\n</div></li></ul></div></div></div><div id='method-getParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getParent' class='name expandable'>getParent</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the parent activity if this view is an embedded child. ...</div><div class='long'><p>Return the parent activity if this view is an embedded child.</p>\n</div></div></div><div id='method-getParentActivityIntent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getParentActivityIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getParentActivityIntent' class='name expandable'>getParentActivityIntent</a>( <span class='pre'></span> ) : Object {android.content.Intent}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtain an Intent that will launch an explicit target activity specified by\n this activity's logical parent. ...</div><div class='long'><p>Obtain an Intent that will launch an explicit target activity specified by\n this activity's logical parent. The logical parent is named in the application's manifest\n by the parentActivityName attribute.\n Activity subclasses may override this method to modify the Intent returned by\n super.getParentActivityIntent() or to implement a different mechanism of retrieving\n the parent intent entirely.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Intent}</span><div class='sub-desc'><p>a new Intent targeting the defined parent of this activity or null if\n         there is no valid parent.</p>\n</div></li></ul></div></div></div><div id='method-getPreferences' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getPreferences' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getPreferences' class='name expandable'>getPreferences</a>( <span class='pre'>mode</span> ) : Object {android.content.SharedPreferences}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve a SharedPreferences object for accessing preferences\n that are private to this activity. ...</div><div class='long'><p>Retrieve a SharedPreferences object for accessing preferences\n that are private to this activity.  This simply calls the underlying\n int) method by passing in this activity's\n class name as the preferences name.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>Operating mode.  Use MODE_PRIVATE for the default\n             operation.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.SharedPreferences}</span><div class='sub-desc'><p>Returns the single SharedPreferences instance that can be used\n         to retrieve and modify the preference values.</p>\n</div></li></ul></div></div></div><div id='method-getReferrer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getReferrer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getReferrer' class='name expandable'>getReferrer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return information about who launched this activity. ...</div><div class='long'><p>Return information about who launched this activity.  If the launching Intent\n contains an Intent.EXTRA_REFERRER,\n that will be returned as-is; otherwise, if known, an\n android-app: referrer URI containing the\n package name that started the Intent will be returned.  This may return null if no\n referrer can be identified -- it is neither explicitly specified, nor is it known which\n application package was involved.</p>\n\n<p> <p>If called while inside the handling of onNewIntent, this function will\n return the referrer that submitted that new intent to the activity.  Otherwise, it\n always returns the referrer of the original Intent.</p></p>\n\n<p> <p>Note that this is <em>not</em> a security feature -- you can not trust the\n referrer information, applications can spoof it.</p></p>\n</div></div></div><div id='method-getRequestedOrientation' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getRequestedOrientation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getRequestedOrientation' class='name expandable'>getRequestedOrientation</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the current requested orientation of the activity. ...</div><div class='long'><p>Return the current requested orientation of the activity.  This will\n either be the orientation requested in its component's manifest, or\n the last requested orientation given to\n <a href=\"#!/api/android.app.Activity-method-setRequestedOrientation\" rel=\"android.app.Activity-method-setRequestedOrientation\" class=\"docClass\">setRequestedOrientation</a>(int).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns an orientation constant as used in\n ActivityInfo.screenOrientation.</p>\n</div></li></ul></div></div></div><div id='method-getSearchEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getSearchEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getSearchEvent' class='name expandable'>getSearchEvent</a>( <span class='pre'></span> ) : Object {android.view.SearchEvent}<span class=\"signature\"></span></div><div class='description'><div class='short'>During the onSearchRequested() callbacks, this function will return the\n SearchEvent that triggered the callback, if ...</div><div class='long'><p>During the onSearchRequested() callbacks, this function will return the\n SearchEvent that triggered the callback, if it exists.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.SearchEvent}</span><div class='sub-desc'><p>SearchEvent The SearchEvent that triggered the <a href=\"#!/api/android.app.Activity-method-onSearchRequested\" rel=\"android.app.Activity-method-onSearchRequested\" class=\"docClass\">onSearchRequested</a> callback.</p>\n</div></li></ul></div></div></div><div id='method-getSystemService' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getSystemService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getSystemService' class='name expandable'>getSystemService</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getTaskId' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getTaskId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getTaskId' class='name expandable'>getTaskId</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the identifier of the task this activity is in. ...</div><div class='long'><p>Return the identifier of the task this activity is in.  This identifier\n will remain the same for the lifetime of the activity.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Task identifier, an opaque integer.</p>\n</div></li></ul></div></div></div><div id='method-getTitle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getTitle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getTitle' class='name expandable'>getTitle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getTitleColor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getTitleColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getTitleColor' class='name expandable'>getTitleColor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getVoiceInteractor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getVoiceInteractor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getVoiceInteractor' class='name expandable'>getVoiceInteractor</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the active android.app.VoiceInteractor that the user is going through to\n interact with this activity. ...</div><div class='long'><p>Retrieve the active <a href=\"#!/api/android.app.VoiceInteractor\" rel=\"android.app.VoiceInteractor\" class=\"docClass\">android.app.VoiceInteractor</a> that the user is going through to\n interact with this activity.</p>\n</div></div></div><div id='method-getVolumeControlStream' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getVolumeControlStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getVolumeControlStream' class='name expandable'>getVolumeControlStream</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the suggested audio stream whose volume should be changed by the\n hardware volume controls. ...</div><div class='long'><p>Gets the suggested audio stream whose volume should be changed by the\n hardware volume controls.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The suggested audio stream type whose volume should be changed by\n         the hardware volume controls.\n@see <a href=\"#!/api/android.app.Activity-method-setVolumeControlStream\" rel=\"android.app.Activity-method-setVolumeControlStream\" class=\"docClass\">setVolumeControlStream</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-getWindow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getWindow' class='name expandable'>getWindow</a>( <span class='pre'></span> ) : Object {android.view.Window}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the current android.view.Window for the activity. ...</div><div class='long'><p>Retrieve the current android.view.Window for the activity.\n This can be used to directly access parts of the Window API that\n are not available through Activity/Screen.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.Window}</span><div class='sub-desc'><p>Window The current window, or null if the activity is not\n         visual.</p>\n</div></li></ul></div></div></div><div id='method-getWindowManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-getWindowManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-getWindowManager' class='name expandable'>getWindowManager</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the window manager for showing custom windows. ...</div><div class='long'><p>Retrieve the window manager for showing custom windows.</p>\n</div></div></div><div id='method-hasWindowFocus' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-hasWindowFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-hasWindowFocus' class='name expandable'>hasWindowFocus</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this activity's main window currently has window focus. ...</div><div class='long'><p>Returns true if this activity's <em>main</em> window currently has window focus.\n Note that this is not the same as the view itself having focus.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this activity's main window currently has window focus.\n@see <a href=\"#!/api/android.app.Activity-method-onWindowAttributesChanged\" rel=\"android.app.Activity-method-onWindowAttributesChanged\" class=\"docClass\">onWindowAttributesChanged</a>(android.view.WindowManager.LayoutParams)</p>\n</div></li></ul></div></div></div><div id='method-invalidateOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-invalidateOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-invalidateOptionsMenu' class='name expandable'>invalidateOptionsMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Declare that the options menu has changed, so should be recreated. ...</div><div class='long'><p>Declare that the options menu has changed, so should be recreated.\n The <a href=\"#!/api/android.app.Activity-method-onCreateOptionsMenu\" rel=\"android.app.Activity-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a>(Menu) method will be called the next\n time it needs to be displayed.</p>\n</div></div></div><div id='method-isActivityTransitionRunning' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isActivityTransitionRunning' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isActivityTransitionRunning' class='name expandable'>isActivityTransitionRunning</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns whether there are any activity transitions currently running on this\n activity. ...</div><div class='long'><p>Returns whether there are any activity transitions currently running on this\n activity. A return value of {@code true} can mean that either an enter or\n exit transition is running, including whether the background of the activity\n is animating as a part of that transition.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if a transition is currently running on this activity, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-isChangingConfigurations' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isChangingConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isChangingConfigurations' class='name expandable'>isChangingConfigurations</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check to see whether this activity is in the process of being destroyed in order to be\n recreated with a new configur...</div><div class='long'><p>Check to see whether this activity is in the process of being destroyed in order to be\n recreated with a new configuration. This is often used in\n onStop to determine whether the state needs to be cleaned up or will be passed\n on to the next instance of the activity via <a href=\"#!/api/android.app.Activity-method-onRetainNonConfigurationInstance\" rel=\"android.app.Activity-method-onRetainNonConfigurationInstance\" class=\"docClass\">onRetainNonConfigurationInstance</a>().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If the activity is being torn down in order to be recreated with a new configuration,\n returns true; else returns false.</p>\n</div></li></ul></div></div></div><div id='method-isChild' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isChild' class='name expandable'>isChild</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Is this activity embedded inside of another activity? ...</div><div class='long'><p>Is this activity embedded inside of another activity?</p>\n</div></div></div><div id='method-isDestroyed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isDestroyed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isDestroyed' class='name expandable'>isDestroyed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the final onDestroy() call has been made\n on the Activity, so this instance is now dead. ...</div><div class='long'><p>Returns true if the final onDestroy() call has been made\n on the Activity, so this instance is now dead.</p>\n</div></div></div><div id='method-isFinishing' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isFinishing' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isFinishing' class='name expandable'>isFinishing</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Check to see whether this activity is in the process of finishing,\n either because you called finish on it or someone...</div><div class='long'><p>Check to see whether this activity is in the process of finishing,\n either because you called <a href=\"#!/api/android.app.Activity-method-finish\" rel=\"android.app.Activity-method-finish\" class=\"docClass\">finish</a> on it or someone else\n has requested that it finished.  This is often used in\n onPause to determine whether the activity is simply pausing or\n completely finishing.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If the activity is finishing, returns true; else returns false.\n@see <a href=\"#!/api/android.app.Activity-method-finish\" rel=\"android.app.Activity-method-finish\" class=\"docClass\">finish</a></p>\n</div></li></ul></div></div></div><div id='method-isImmersive' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isImmersive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isImmersive' class='name expandable'>isImmersive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Bit indicating that this activity is \"immersive\" and should not be\n interrupted by notifications if possible. ...</div><div class='long'><p>Bit indicating that this activity is \"immersive\" and should not be\n interrupted by notifications if possible.</p>\n\n<p> This value is initially set by the manifest property\n <code>android:immersive</code> but may be changed at runtime by\n <a href=\"#!/api/android.app.Activity-method-setImmersive\" rel=\"android.app.Activity-method-setImmersive\" class=\"docClass\">setImmersive</a>.\n@see <a href=\"#!/api/android.app.Activity-method-setImmersive\" rel=\"android.app.Activity-method-setImmersive\" class=\"docClass\">setImmersive</a>(boolean)\n@see android.content.pm.ActivityInfo#FLAG_IMMERSIVE</p>\n</div></div></div><div id='method-isInMultiWindowMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isInMultiWindowMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isInMultiWindowMode' class='name expandable'>isInMultiWindowMode</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the activity is currently in multi-window mode. ...</div><div class='long'><p>Returns true if the activity is currently in multi-window mode.\n@see android.R.attr#resizeableActivity</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the activity is in multi-window mode.</p>\n</div></li></ul></div></div></div><div id='method-isInPictureInPictureMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isInPictureInPictureMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isInPictureInPictureMode' class='name expandable'>isInPictureInPictureMode</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the activity is currently in picture-in-picture mode. ...</div><div class='long'><p>Returns true if the activity is currently in picture-in-picture mode.\n@see android.R.attr#supportsPictureInPicture</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the activity is in picture-in-picture mode.</p>\n</div></li></ul></div></div></div><div id='method-isLocalVoiceInteractionSupported' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isLocalVoiceInteractionSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isLocalVoiceInteractionSupported' class='name expandable'>isLocalVoiceInteractionSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Queries whether the currently enabled voice interaction service supports returning\n a voice interactor for use by the...</div><div class='long'><p>Queries whether the currently enabled voice interaction service supports returning\n a voice interactor for use by the activity. This is valid only for the duration of the\n activity.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>whether the current voice interaction service supports local voice interaction</p>\n</div></li></ul></div></div></div><div id='method-isTaskRoot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isTaskRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isTaskRoot' class='name expandable'>isTaskRoot</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether this activity is the root of a task. ...</div><div class='long'><p>Return whether this activity is the root of a task.  The root is the\n first activity in a task.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if this is the root activity, else false.</p>\n</div></li></ul></div></div></div><div id='method-isVoiceInteraction' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isVoiceInteraction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isVoiceInteraction' class='name expandable'>isVoiceInteraction</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Check whether this activity is running as part of a voice interaction with the user. ...</div><div class='long'><p>Check whether this activity is running as part of a voice interaction with the user.\n If true, it should perform its interaction with the user through the\n <a href=\"#!/api/android.app.VoiceInteractor\" rel=\"android.app.VoiceInteractor\" class=\"docClass\">android.app.VoiceInteractor</a> returned by <a href=\"#!/api/android.app.Activity-method-getVoiceInteractor\" rel=\"android.app.Activity-method-getVoiceInteractor\" class=\"docClass\">getVoiceInteractor</a>.</p>\n</div></div></div><div id='method-isVoiceInteractionRoot' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-isVoiceInteractionRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-isVoiceInteractionRoot' class='name expandable'>isVoiceInteractionRoot</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like isVoiceInteraction, but only returns true if this is also the root\n of a voice interaction. ...</div><div class='long'><p>Like <a href=\"#!/api/android.app.Activity-method-isVoiceInteraction\" rel=\"android.app.Activity-method-isVoiceInteraction\" class=\"docClass\">isVoiceInteraction</a>, but only returns true if this is also the root\n of a voice interaction.  That is, returns true if this activity was directly\n started by the voice interaction service as the initiation of a voice interaction.\n Otherwise, for example if it was started by another activity while under voice\n interaction, returns false.</p>\n</div></div></div><div id='method-managedQuery' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-managedQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-managedQuery' class='name expandable'>managedQuery</a>( <span class='pre'>uri, projection, selection, selectionArgs, sortOrder</span> ) : Object {android.database.Cursor}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Wrapper around\n , String[], String, String[], String)\n that gives the resulting Cursor to call\n startManagingCursor s...</div><div class='long'><p>Wrapper around\n , String[], String, String[], String)\n that gives the resulting Cursor to call\n <a href=\"#!/api/android.app.Activity-method-startManagingCursor\" rel=\"android.app.Activity-method-startManagingCursor\" class=\"docClass\">startManagingCursor</a> so that the activity will manage its\n lifecycle for you.</p>\n\n<p> <em>If you are targeting android.os.Build.VERSION_CODES.HONEYCOMB\n or later, consider instead using <a href=\"#!/api/android.app.LoaderManager\" rel=\"android.app.LoaderManager\" class=\"docClass\">android.app.LoaderManager</a> instead, available\n via <a href=\"#!/api/android.app.Activity-method-getLoaderManager\" rel=\"android.app.Activity-method-getLoaderManager\" class=\"docClass\">getLoaderManager</a>().</em></p>\n\n<p> <p><strong>Warning:</strong> Do not call Cursor.close() on a cursor obtained using\n this method, because the activity will do that for you at the appropriate time. However, if\n you call <a href=\"#!/api/android.app.Activity-method-stopManagingCursor\" rel=\"android.app.Activity-method-stopManagingCursor\" class=\"docClass\">stopManagingCursor</a> on a cursor from a managed query, the system <em>will\n not</em> automatically close the cursor and, in that case, you must call\n Cursor.close().</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use CursorLoader instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {Uri}<div class='sub-desc'><p>The URI of the content provider to query.</p>\n</div></li><li><span class='pre'>projection</span> : Object {java.lang.String[]}<div class='sub-desc'><p>List of columns to return.</p>\n</div></li><li><span class='pre'>selection</span> : String<div class='sub-desc'><p>SQL WHERE clause.</p>\n</div></li><li><span class='pre'>selectionArgs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The arguments to selection, if any ?s are pesent</p>\n</div></li><li><span class='pre'>sortOrder</span> : String<div class='sub-desc'><p>SQL ORDER BY clause.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.database.Cursor}</span><div class='sub-desc'><p>The Cursor that was returned by query().\n@see ContentResolver#query(android.net.Uri , String[], String, String[], String)\n@see <a href=\"#!/api/android.app.Activity-method-startManagingCursor\" rel=\"android.app.Activity-method-startManagingCursor\" class=\"docClass\">startManagingCursor</a></p>\n</div></li></ul></div></div></div><div id='method-moveTaskToBack' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-moveTaskToBack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-moveTaskToBack' class='name expandable'>moveTaskToBack</a>( <span class='pre'>nonRoot</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Move the task containing this activity to the back of the activity\n stack. ...</div><div class='long'><p>Move the task containing this activity to the back of the activity\n stack.  The activity's order within the task is unchanged.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nonRoot</span> : Boolean<div class='sub-desc'><p>If false then this only works if the activity is the root\n                of a task; if true it will work for any activity in\n                a task.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If the task was moved (or it was already at the\n         back) true is returned, else false.</p>\n</div></li></ul></div></div></div><div id='method-navigateUpTo' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-navigateUpTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-navigateUpTo' class='name expandable'>navigateUpTo</a>( <span class='pre'>upIntent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Navigate from this activity to the activity specified by upIntent, finishing this activity\n in the process. ...</div><div class='long'><p>Navigate from this activity to the activity specified by upIntent, finishing this activity\n in the process. If the activity indicated by upIntent already exists in the task's history,\n this activity and all others before the indicated activity in the history stack will be\n finished.</p>\n\n<p> <p>If the indicated activity does not appear in the history stack, this will finish\n each activity in this task until the root activity of the task is reached, resulting in\n an \"in-app home\" behavior. This can be useful in apps with a complex navigation hierarchy\n when an activity may be reached by a path not passing through a canonical parent\n activity.</p></p>\n\n<p> <p>This method should be used when performing up navigation from within the same task\n as the destination. If up navigation should cross tasks in some cases, see\n <a href=\"#!/api/android.app.Activity-method-shouldUpRecreateTask\" rel=\"android.app.Activity-method-shouldUpRecreateTask\" class=\"docClass\">shouldUpRecreateTask</a>(Intent).</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>upIntent</span> : Object {Intent}<div class='sub-desc'><p>An intent representing the target destination for up navigation</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if up navigation successfully reached the activity indicated by upIntent and\n         upIntent was delivered to it. false if an instance of the indicated activity could\n         not be found and this activity was simply finished normally.</p>\n</div></li></ul></div></div></div><div id='method-navigateUpToFromChild' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-navigateUpToFromChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-navigateUpToFromChild' class='name expandable'>navigateUpToFromChild</a>( <span class='pre'>child, upIntent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when a child activity of this one calls its\n navigateUpTo method. ...</div><div class='long'><p>This is called when a child activity of this one calls its\n <a href=\"#!/api/android.app.Activity-method-navigateUpTo\" rel=\"android.app.Activity-method-navigateUpTo\" class=\"docClass\">navigateUpTo</a> method.  The default implementation simply calls\n navigateUpTo(upIntent) on this activity (the parent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>child</span> : Object {Activity}<div class='sub-desc'><p>The activity making the call.</p>\n</div></li><li><span class='pre'>upIntent</span> : Object {Intent}<div class='sub-desc'><p>An intent representing the target destination for up navigation</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if up navigation successfully reached the activity indicated by upIntent and\n         upIntent was delivered to it. false if an instance of the indicated activity could\n         not be found and this activity was simply finished normally.</p>\n</div></li></ul></div></div></div><div id='method-onActionModeFinished' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onActionModeFinished' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onActionModeFinished' class='name expandable'>onActionModeFinished</a>( <span class='pre'>mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the activity that an action mode has finished. ...</div><div class='long'><p>Notifies the activity that an action mode has finished.\n Activity subclasses overriding this method should call the superclass implementation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Object {ActionMode}<div class='sub-desc'><p>The action mode that just finished.</p>\n</div></li></ul></div></div></div><div id='method-onActionModeStarted' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onActionModeStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onActionModeStarted' class='name expandable'>onActionModeStarted</a>( <span class='pre'>mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the Activity that an action mode has been started. ...</div><div class='long'><p>Notifies the Activity that an action mode has been started.\n Activity subclasses overriding this method should call the superclass implementation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Object {ActionMode}<div class='sub-desc'><p>The new action mode.</p>\n</div></li></ul></div></div></div><div id='method-onActivityReenter' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onActivityReenter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onActivityReenter' class='name expandable'>onActivityReenter</a>( <span class='pre'>resultCode, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when an activity you launched with an activity transition exposes this\n Activity through a returning activity ...</div><div class='long'><p>Called when an activity you launched with an activity transition exposes this\n Activity through a returning activity transition, giving you the resultCode\n and any additional data from it. This method will only be called if the activity\n set a result code other than <a href=\"#!/api/android.app.Activity-property-RESULT_CANCELED\" rel=\"android.app.Activity-property-RESULT_CANCELED\" class=\"docClass\">RESULT_CANCELED</a> and it supports activity\n transitions with Window.FEATURE_ACTIVITY_TRANSITIONS.</p>\n\n<p> <p>The purpose of this function is to let the called Activity send a hint about\n its state so that this underlying Activity can prepare to be exposed. A call to\n this method does not guarantee that the called Activity has or will be exiting soon.\n It only indicates that it will expose this Activity's Window and it has\n some data to pass to prepare it.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resultCode</span> : Number<div class='sub-desc'><p>The integer result code returned by the child activity\n                   through its setResult().</p>\n</div></li><li><span class='pre'>data</span> : Object {Intent}<div class='sub-desc'><p>An Intent, which can return result data to the caller\n               (various data can be attached to Intent \"extras\").</p>\n</div></li></ul></div></div></div><div id='method-onAttachFragment' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onAttachFragment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onAttachFragment' class='name expandable'>onAttachFragment</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called when a Fragment is being attached to this activity, immediately\n after the call to its android.app.Fragment.on...</div><div class='long'><p>Called when a Fragment is being attached to this activity, immediately\n after the call to its <a href=\"#!/api/android.app.Fragment-method-onAttach\" rel=\"android.app.Fragment-method-onAttach\" class=\"docClass\">android.app.Fragment.onAttach()</a>\n method and before <a href=\"#!/api/android.app.Fragment-method-onCreate\" rel=\"android.app.Fragment-method-onCreate\" class=\"docClass\">android.app.Fragment.onCreate()</a>.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use android.support.v4.app.FragmentActivity.onAttachFragment(android.support.v4.app.Fragment)</p>\n\n        </div>\n</div></div></div><div id='method-onAttachedToWindow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onAttachedToWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onAttachedToWindow' class='name expandable'>onAttachedToWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the main window associated with the activity has been\n attached to the window manager. ...</div><div class='long'><p>Called when the main window associated with the activity has been\n attached to the window manager.\n See View.onAttachedToWindow()\n for more information.\n@see View#onAttachedToWindow</p>\n</div></div></div><div id='method-onBackPressed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onBackPressed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onBackPressed' class='name expandable'>onBackPressed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the activity has detected the user's press of the back\n key. ...</div><div class='long'><p>Called when the activity has detected the user's press of the back\n key.  The default implementation simply finishes the current activity,\n but you can override this to do whatever you want.</p>\n</div></div></div><div id='method-onConfigurationChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onConfigurationChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onConfigurationChanged' class='name expandable'>onConfigurationChanged</a>( <span class='pre'>newConfig</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the system when the device configuration changes while your\n activity is running. ...</div><div class='long'><p>Called by the system when the device configuration changes while your\n activity is running.  Note that this will <em>only</em> be called if\n you have selected configurations you would like to handle with the\n android.R.attr.configChanges attribute in your manifest.  If\n any configuration change occurs that is not selected to be reported\n by that attribute, then instead of reporting it the system will stop\n and restart the activity (to have it launched with the new\n configuration).</p>\n\n<p> <p>At the time that this function has been called, your Resources\n object will have been updated to return resource values matching the\n new configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newConfig</span> : Object {Configuration}<div class='sub-desc'><p>The new device configuration.</p>\n</div></li></ul></div></div></div><div id='method-onContentChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onContentChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onContentChanged' class='name expandable'>onContentChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onContextItemSelected' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onContextItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onContextItemSelected' class='name expandable'>onContextItemSelected</a>( <span class='pre'>item</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever an item in a context menu is selected. ...</div><div class='long'><p>This hook is called whenever an item in a context menu is selected. The\n default implementation simply returns false to have the normal processing\n happen (calling the item's Runnable or sending a message to its Handler\n as appropriate). You can use this method for any items for which you\n would like to do processing without those other facilities.\n <p>\n Use MenuItem.getMenuInfo() to get extra information set by the\n View that added this menu item.\n <p>\n Derived classes should call through to the base class for it to perform\n the default menu handling.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : Object {MenuItem}<div class='sub-desc'><p>The context menu item that was selected.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return false to allow normal context menu processing to\n         proceed, true to consume it here.</p>\n</div></li></ul></div></div></div><div id='method-onContextMenuClosed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onContextMenuClosed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onContextMenuClosed' class='name expandable'>onContextMenuClosed</a>( <span class='pre'>menu</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever the context menu is being closed (either by\n the user canceling the menu with the back/m...</div><div class='long'><p>This hook is called whenever the context menu is being closed (either by\n the user canceling the menu with the back/menu button, or when an item is\n selected).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The context menu that is being closed.</p>\n</div></li></ul></div></div></div><div id='method-onCreate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreate' class='name expandable'>onCreate</a>( <span class='pre'>savedInstanceState, persistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Same as onCreate(android.os.Bundle) but called for those activities created with\n the attribute android.R.attr.persis...</div><div class='long'><p>Same as onCreate(android.os.Bundle) but called for those activities created with\n the attribute android.R.attr.persistableMode set to\n <code>persistAcrossReboots</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>if the activity is being re-initialized after\n     previously being shut down then this Bundle contains the data it most\n     recently supplied in <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>.\n     <b><i>Note: Otherwise it is null.</i></b></p>\n</div></li><li><span class='pre'>persistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>if the activity is being re-initialized after\n     previously being shut down or powered off then this Bundle contains the data it most\n     recently supplied to outPersistentState in <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>.\n     <b><i>Note: Otherwise it is null.</i></b>\n@see <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a>(android.os.Bundle)\n@see #onStart\n@see <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>\n@see <a href=\"#!/api/android.app.Activity-method-onRestoreInstanceState\" rel=\"android.app.Activity-method-onRestoreInstanceState\" class=\"docClass\">onRestoreInstanceState</a>\n@see <a href=\"#!/api/android.app.Activity-method-onPostCreate\" rel=\"android.app.Activity-method-onPostCreate\" class=\"docClass\">onPostCreate</a></p>\n</div></li></ul></div></div></div><div id='method-onCreateContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreateContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreateContextMenu' class='name expandable'>onCreateContextMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a context menu for the {@code view} is about to be shown. ...</div><div class='long'><p>Called when a context menu for the {@code view} is about to be shown.\n Unlike <a href=\"#!/api/android.app.Activity-method-onCreateOptionsMenu\" rel=\"android.app.Activity-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a>(Menu), this will be called every\n time the context menu is about to be shown and should be populated for\n the view (or item inside the view for AdapterView subclasses,\n this can be found in the {@code menuInfo})).\n <p>\n Use onContextItemSelected(android.view.MenuItem) to know when an\n item has been selected.\n <p>\n It is not safe to hold onto the context menu after this method returns.</p>\n</div></div></div><div id='method-onCreateDescription' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreateDescription' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreateDescription' class='name expandable'>onCreateDescription</a>( <span class='pre'></span> ) : Object {java.lang.CharSequence}<span class=\"signature\"></span></div><div class='description'><div class='short'>Generate a new description for this activity. ...</div><div class='long'><p>Generate a new description for this activity.  This method is called\n before stopping the activity and can, if desired, return some textual\n description of its current state to be displayed to the user.</p>\n\n<p> <p>The default implementation returns null, which will cause you to\n inherit the description from the previous activity.  If all activities\n return null, generally the label of the top activity will be used as the\n description.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.CharSequence}</span><div class='sub-desc'><p>A description of what the user is doing.  It should be short and\n         sweet (only a few words).\n@see <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>\n@see #onStop</p>\n</div></li></ul></div></div></div><div id='method-onCreateNavigateUpTaskStack' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreateNavigateUpTaskStack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreateNavigateUpTaskStack' class='name expandable'>onCreateNavigateUpTaskStack</a>( <span class='pre'>builder</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Define the synthetic task stack that will be generated during Up navigation from\n a different task. ...</div><div class='long'><p>Define the synthetic task stack that will be generated during Up navigation from\n a different task.</p>\n\n<p> <p>The default implementation of this method adds the parent chain of this activity\n as specified in the manifest to the supplied <a href=\"#!/api/android.app.TaskStackBuilder\" rel=\"android.app.TaskStackBuilder\" class=\"docClass\">android.app.TaskStackBuilder</a>. Applications\n may choose to override this method to construct the desired task stack in a different\n way.</p></p>\n\n<p> <p>This method will be invoked by the default implementation of <a href=\"#!/api/android.app.Activity-method-onNavigateUp\" rel=\"android.app.Activity-method-onNavigateUp\" class=\"docClass\">onNavigateUp</a>()\n if <a href=\"#!/api/android.app.Activity-method-shouldUpRecreateTask\" rel=\"android.app.Activity-method-shouldUpRecreateTask\" class=\"docClass\">shouldUpRecreateTask</a>(Intent) returns true when supplied with the intent\n returned by <a href=\"#!/api/android.app.Activity-method-getParentActivityIntent\" rel=\"android.app.Activity-method-getParentActivityIntent\" class=\"docClass\">getParentActivityIntent</a>().</p></p>\n\n<p> <p>Applications that wish to supply extra Intent parameters to the parent stack defined\n by the manifest should override <a href=\"#!/api/android.app.Activity-method-onPrepareNavigateUpTaskStack\" rel=\"android.app.Activity-method-onPrepareNavigateUpTaskStack\" class=\"docClass\">onPrepareNavigateUpTaskStack</a>(TaskStackBuilder).</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>builder</span> : Object {TaskStackBuilder}<div class='sub-desc'><p>An empty TaskStackBuilder - the application should add intents representing\n                the desired task stack</p>\n</div></li></ul></div></div></div><div id='method-onCreateOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreateOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreateOptionsMenu' class='name expandable'>onCreateOptionsMenu</a>( <span class='pre'>menu</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Initialize the contents of the Activity's standard options menu. ...</div><div class='long'><p>Initialize the contents of the Activity's standard options menu.  You\n should place your menu items in to <var>menu</var>.</p>\n\n<p> <p>This is only called once, the first time the options menu is\n displayed.  To update the menu every time it is displayed, see\n <a href=\"#!/api/android.app.Activity-method-onPrepareOptionsMenu\" rel=\"android.app.Activity-method-onPrepareOptionsMenu\" class=\"docClass\">onPrepareOptionsMenu</a>.</p>\n\n<p> <p>The default implementation populates the menu with standard system\n menu items.  These are placed in the Menu.CATEGORY_SYSTEM group so that\n they will be correctly ordered with application-defined menu items.\n Deriving classes should always call through to the base implementation.</p>\n\n<p> <p>You can safely hold on to <var>menu</var> (and any items created\n from it), making modifications to it as desired, until the next\n time onCreateOptionsMenu() is called.</p>\n\n<p> <p>When you add items to the menu, you can implement the Activity's\n <a href=\"#!/api/android.app.Activity-method-onOptionsItemSelected\" rel=\"android.app.Activity-method-onOptionsItemSelected\" class=\"docClass\">onOptionsItemSelected</a> method to handle them there.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The options menu in which you place your items.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>You must return true for the menu to be displayed;\n         if you return false it will not be shown.\n@see <a href=\"#!/api/android.app.Activity-method-onPrepareOptionsMenu\" rel=\"android.app.Activity-method-onPrepareOptionsMenu\" class=\"docClass\">onPrepareOptionsMenu</a>\n@see <a href=\"#!/api/android.app.Activity-method-onOptionsItemSelected\" rel=\"android.app.Activity-method-onOptionsItemSelected\" class=\"docClass\">onOptionsItemSelected</a></p>\n</div></li></ul></div></div></div><div id='method-onCreatePanelMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreatePanelMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreatePanelMenu' class='name expandable'>onCreatePanelMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of\n android.view.Window.Callback.onCreatePanelMenu\n for activities. ...</div><div class='long'><p>Default implementation of\n android.view.Window.Callback.onCreatePanelMenu\n for activities.  This calls through to the new\n <a href=\"#!/api/android.app.Activity-method-onCreateOptionsMenu\" rel=\"android.app.Activity-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a> method for the\n android.view.Window.FEATURE_OPTIONS_PANEL panel,\n so that subclasses of Activity don't need to deal with feature codes.</p>\n</div></div></div><div id='method-onCreatePanelView' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreatePanelView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreatePanelView' class='name expandable'>onCreatePanelView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of\n android.view.Window.Callback.onCreatePanelView\n for activities. ...</div><div class='long'><p>Default implementation of\n android.view.Window.Callback.onCreatePanelView\n for activities. This\n simply returns null so that all panel sub-windows will have the default\n menu behavior.</p>\n</div></div></div><div id='method-onCreateThumbnail' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreateThumbnail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreateThumbnail' class='name expandable'>onCreateThumbnail</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Method doesn't do anything and will be removed in the future.</p>\n\n        </div>\n</div></div></div><div id='method-onCreateView' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onCreateView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onCreateView' class='name expandable'>onCreateView</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Standard implementation of\n String, Context, AttributeSet)\n used when inflating with the LayoutInflater returned by g...</div><div class='long'><p>Standard implementation of\n String, Context, AttributeSet)\n used when inflating with the LayoutInflater returned by <a href=\"#!/api/android.app.Activity-method-getSystemService\" rel=\"android.app.Activity-method-getSystemService\" class=\"docClass\">getSystemService</a>.\n This implementation handles <fragment> tags to embed fragments inside\n of the activity.\n@see android.view.LayoutInflater#createView\n@see android.view.Window#getLayoutInflater</fragment></p>\n</div></div></div><div id='method-onDetachedFromWindow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onDetachedFromWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onDetachedFromWindow' class='name expandable'>onDetachedFromWindow</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the main window associated with the activity has been\n detached from the window manager. ...</div><div class='long'><p>Called when the main window associated with the activity has been\n detached from the window manager.\n See View.onDetachedFromWindow()\n for more information.\n@see View#onDetachedFromWindow</p>\n</div></div></div><div id='method-onEnterAnimationComplete' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onEnterAnimationComplete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onEnterAnimationComplete' class='name expandable'>onEnterAnimationComplete</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Activities cannot draw during the period that their windows are animating in. ...</div><div class='long'><p>Activities cannot draw during the period that their windows are animating in. In order\n to know when it is safe to begin drawing they can override this method which will be\n called when the entering animation has completed.</p>\n</div></div></div><div id='method-onGenericMotionEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onGenericMotionEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onGenericMotionEvent' class='name expandable'>onGenericMotionEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a generic motion event was not handled by any of the\n views inside of the activity. ...</div><div class='long'><p>Called when a generic motion event was not handled by any of the\n views inside of the activity.\n <p>\n Generic motion events describe joystick movements, mouse hovers, track pad\n touches, scroll wheel movements and other input events.  The\n source of the motion event specifies\n the class of input that was received.  Implementations of this method\n must examine the bits in the source before processing the event.\n The following code example shows how this is done.\n </p><p>\n Generic motion events with source class\n android.view.InputDevice.SOURCE_CLASS_POINTER\n are delivered to the view under the pointer.  All other generic motion events are\n delivered to the focused view.\n </p><p>\n See View.onGenericMotionEvent(MotionEvent) for an example of how to\n handle this event.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>The generic motion event being processed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Return true if you have consumed the event, false if you haven't.\n The default implementation always returns false.</p>\n</div></li></ul></div></div></div><div id='method-onGetDirectActions' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onGetDirectActions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onGetDirectActions' class='name expandable'>onGetDirectActions</a>( <span class='pre'>cancellationSignal, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the list of direct actions supported by the app. ...</div><div class='long'><p>Returns the list of direct actions supported by the app.</p>\n\n<p> <p>You should return the list of actions that could be executed in the\n current context, which is in the current state of the app. If the actions\n that could be executed by the app changes you should report that via\n calling android.app.VoiceInteractor.notifyDirectActionsChanged().</p>\n\n<p> <p>To get the voice interactor you need to call <a href=\"#!/api/android.app.Activity-method-getVoiceInteractor\" rel=\"android.app.Activity-method-getVoiceInteractor\" class=\"docClass\">getVoiceInteractor</a>()\n which would return non <code>null</code> only if there is an ongoing voice\n interaction session. You an also detect when the voice interactor is no\n longer valid because the voice interaction session that is backing is finished\n by calling Runnable).</p>\n\n<p> <p>This method will be called only after onStart() is being called and\n before onStop() is being called.</p>\n\n<p> <p>You should pass to the callback the currently supported direct actions which\n cannot be <code>null</code> or contain <code>null</code> elements.</p>\n\n<p> <p>You should return the action list as soon as possible to ensure the consumer,\n for example the assistant, is as responsive as possible which would improve user\n experience of your app.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress.</p>\n</div></li><li><span class='pre'>callback</span> : Object {java.util.function.Consumer}<div class='sub-desc'><p>The callback to send the action list. The actions list cannot\n     contain <code>null</code> elements. You can call this on any thread.</p>\n</div></li></ul></div></div></div><div id='method-onKeyDown' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onKeyDown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onKeyDown' class='name expandable'>onKeyDown</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a key was pressed down and not handled by any of the views\n inside of the activity. ...</div><div class='long'><p>Called when a key was pressed down and not handled by any of the views\n inside of the activity. So, for example, key presses while the cursor\n is inside a TextView will not trigger the event (unless it is a navigation\n to another object) because TextView handles its own key presses.</p>\n\n<p> <p>If the focused view didn't want this event, this method is called.</p>\n\n<p> <p>The default implementation takes care of KeyEvent.KEYCODE_BACK\n by calling <a href=\"#!/api/android.app.Activity-method-onBackPressed\" rel=\"android.app.Activity-method-onBackPressed\" class=\"docClass\">onBackPressed</a>(), though the behavior varies based\n on the application compatibility mode: for\n android.os.Build.VERSION_CODES.ECLAIR or later applications,\n it will set up the dispatch to call <a href=\"#!/api/android.app.Activity-method-onKeyUp\" rel=\"android.app.Activity-method-onKeyUp\" class=\"docClass\">onKeyUp</a> where the action\n will be performed; for earlier applications, it will perform the\n action immediately in on-down, as those versions of the platform\n behaved.</p>\n\n<p> <p>Other additional default key handling may be performed\n if configured with <a href=\"#!/api/android.app.Activity-method-setDefaultKeyMode\" rel=\"android.app.Activity-method-setDefaultKeyMode\" class=\"docClass\">setDefaultKeyMode</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Return <code>true</code> to prevent this event from being propagated\n further, or <code>false</code> to indicate that you have not handled\n this event and it should continue to be propagated.\n@see <a href=\"#!/api/android.app.Activity-method-onKeyUp\" rel=\"android.app.Activity-method-onKeyUp\" class=\"docClass\">onKeyUp</a>\n@see android.view.KeyEvent</p>\n</div></li></ul></div></div></div><div id='method-onKeyLongPress' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onKeyLongPress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onKeyLongPress' class='name expandable'>onKeyLongPress</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of KeyEvent)\n KeyEvent.Callback.onKeyLongPress(): always returns false (doesn't handle\n the ev...</div><div class='long'><p>Default implementation of KeyEvent)\n KeyEvent.Callback.onKeyLongPress(): always returns false (doesn't handle\n the event).</p>\n\n<p> To receive this callback, you must return true from onKeyDown for the current\n event stream.\n@see KeyEvent.Callback#onKeyLongPress()\n@see KeyEvent.Callback#onKeyLongPress(int, KeyEvent)</p>\n</div></div></div><div id='method-onKeyMultiple' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onKeyMultiple' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onKeyMultiple' class='name expandable'>onKeyMultiple</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of int, KeyEvent)\n KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle\n th...</div><div class='long'><p>Default implementation of int, KeyEvent)\n KeyEvent.Callback.onKeyMultiple(): always returns false (doesn't handle\n the event).</p>\n</div></div></div><div id='method-onKeyShortcut' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onKeyShortcut' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onKeyShortcut' class='name expandable'>onKeyShortcut</a>( <span class='pre'>keyCode, event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a key shortcut event is not handled by any of the views in the Activity. ...</div><div class='long'><p>Called when a key shortcut event is not handled by any of the views in the Activity.\n Override this method to implement global key shortcuts for the Activity.\n Key shortcuts can also be implemented by setting the\n char) shortcut property of menu items.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>keyCode</span> : Number<div class='sub-desc'><p>The value in event.getKeyCode().</p>\n</div></li><li><span class='pre'>event</span> : Object {KeyEvent}<div class='sub-desc'><p>Description of the key event.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the key shortcut was handled.</p>\n</div></li></ul></div></div></div><div id='method-onKeyUp' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onKeyUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onKeyUp' class='name expandable'>onKeyUp</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a key was released and not handled by any of the views\n inside of the activity. ...</div><div class='long'><p>Called when a key was released and not handled by any of the views\n inside of the activity. So, for example, key presses while the cursor\n is inside a TextView will not trigger the event (unless it is a navigation\n to another object) because TextView handles its own key presses.</p>\n\n<p> <p>The default implementation handles KEYCODE_BACK to stop the activity\n and go back.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Return <code>true</code> to prevent this event from being propagated\n further, or <code>false</code> to indicate that you have not handled\n this event and it should continue to be propagated.\n@see <a href=\"#!/api/android.app.Activity-method-onKeyDown\" rel=\"android.app.Activity-method-onKeyDown\" class=\"docClass\">onKeyDown</a>\n@see KeyEvent</p>\n</div></li></ul></div></div></div><div id='method-onLocalVoiceInteractionStarted' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onLocalVoiceInteractionStarted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onLocalVoiceInteractionStarted' class='name expandable'>onLocalVoiceInteractionStarted</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback to indicate that startLocalVoiceInteraction(Bundle) has resulted in a\n voice interaction session being started. ...</div><div class='long'><p>Callback to indicate that <a href=\"#!/api/android.app.Activity-method-startLocalVoiceInteraction\" rel=\"android.app.Activity-method-startLocalVoiceInteraction\" class=\"docClass\">startLocalVoiceInteraction</a>(Bundle) has resulted in a\n voice interaction session being started. You can now retrieve a voice interactor using\n <a href=\"#!/api/android.app.Activity-method-getVoiceInteractor\" rel=\"android.app.Activity-method-getVoiceInteractor\" class=\"docClass\">getVoiceInteractor</a>().</p>\n</div></div></div><div id='method-onLocalVoiceInteractionStopped' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onLocalVoiceInteractionStopped' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onLocalVoiceInteractionStopped' class='name expandable'>onLocalVoiceInteractionStopped</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback to indicate that the local voice interaction has stopped either\n because it was requested through a call to ...</div><div class='long'><p>Callback to indicate that the local voice interaction has stopped either\n because it was requested through a call to <a href=\"#!/api/android.app.Activity-method-stopLocalVoiceInteraction\" rel=\"android.app.Activity-method-stopLocalVoiceInteraction\" class=\"docClass\">stopLocalVoiceInteraction</a>()\n or because it was canceled by the user. The previously acquired <a href=\"#!/api/android.app.VoiceInteractor\" rel=\"android.app.VoiceInteractor\" class=\"docClass\">android.app.VoiceInteractor</a>\n is no longer valid after this.</p>\n</div></div></div><div id='method-onLowMemory' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onLowMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onLowMemory' class='name expandable'>onLowMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onMenuItemSelected' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onMenuItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onMenuItemSelected' class='name expandable'>onMenuItemSelected</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of\n android.view.Window.Callback.onMenuItemSelected\n for activities. ...</div><div class='long'><p>Default implementation of\n android.view.Window.Callback.onMenuItemSelected\n for activities.  This calls through to the new\n <a href=\"#!/api/android.app.Activity-method-onOptionsItemSelected\" rel=\"android.app.Activity-method-onOptionsItemSelected\" class=\"docClass\">onOptionsItemSelected</a> method for the\n android.view.Window.FEATURE_OPTIONS_PANEL\n panel, so that subclasses of\n Activity don't need to deal with feature codes.</p>\n</div></div></div><div id='method-onMenuOpened' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onMenuOpened' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onMenuOpened' class='name expandable'>onMenuOpened</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>The default implementation returns true.</p>\n</div></li></ul></div></div></div><div id='method-onMultiWindowModeChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onMultiWindowModeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onMultiWindowModeChanged' class='name expandable'>onMultiWindowModeChanged</a>( <span class='pre'>isInMultiWindowMode, isInMultiWindowMode</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called by the system when the activity changes from fullscreen mode to multi-window mode and\n visa-versa. ...</div><div class='long'><p>Called by the system when the activity changes from fullscreen mode to multi-window mode and\n visa-versa.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use Configuration) instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isInMultiWindowMode</span> : Boolean<div class='sub-desc'><p>True if the activity is in multi-window mode.</p>\n</div></li><li><span class='pre'>isInMultiWindowMode</span> : Object<div class='sub-desc'><p>True if the activity is in multi-window mode.</p>\n</div></li></ul></div></div></div><div id='method-onNavigateUp' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onNavigateUp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onNavigateUp' class='name expandable'>onNavigateUp</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called whenever the user chooses to navigate Up within your application's\n activity hierarchy from the...</div><div class='long'><p>This method is called whenever the user chooses to navigate Up within your application's\n activity hierarchy from the action bar.</p>\n\n<p> <p>If the attribute parentActivityName\n was specified in the manifest for this activity or an activity-alias to it,\n default Up navigation will be handled automatically. If any activity\n along the parent chain requires extra Intent arguments, the Activity subclass\n should override the method <a href=\"#!/api/android.app.Activity-method-onPrepareNavigateUpTaskStack\" rel=\"android.app.Activity-method-onPrepareNavigateUpTaskStack\" class=\"docClass\">onPrepareNavigateUpTaskStack</a>(TaskStackBuilder)\n to supply those arguments.</p></p>\n\n<p> <p>See <a href=\"{@docRoot}guide/components/tasks-and-back-stack.html\">Tasks and Back Stack</a>\n from the developer guide and <a href=\"{@docRoot}design/patterns/navigation.html\">Navigation</a>\n from the design guide for more information about navigating within your app.</p></p>\n\n<p> <p>See the <a href=\"#!/api/android.app.TaskStackBuilder\" rel=\"android.app.TaskStackBuilder\" class=\"docClass\">android.app.TaskStackBuilder</a> class and the Activity methods\n <a href=\"#!/api/android.app.Activity-method-getParentActivityIntent\" rel=\"android.app.Activity-method-getParentActivityIntent\" class=\"docClass\">getParentActivityIntent</a>(), <a href=\"#!/api/android.app.Activity-method-shouldUpRecreateTask\" rel=\"android.app.Activity-method-shouldUpRecreateTask\" class=\"docClass\">shouldUpRecreateTask</a>(Intent), and\n <a href=\"#!/api/android.app.Activity-method-navigateUpTo\" rel=\"android.app.Activity-method-navigateUpTo\" class=\"docClass\">navigateUpTo</a>(Intent) for help implementing custom Up navigation.\n The AppNavigation sample application in the Android SDK is also available for reference.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if Up navigation completed successfully and this Activity was finished,\n         false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-onNavigateUpFromChild' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onNavigateUpFromChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onNavigateUpFromChild' class='name expandable'>onNavigateUpFromChild</a>( <span class='pre'>child</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when a child activity of this one attempts to navigate up. ...</div><div class='long'><p>This is called when a child activity of this one attempts to navigate up.\n The default implementation simply calls onNavigateUp() on this activity (the parent).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>child</span> : Object {Activity}<div class='sub-desc'><p>The activity making the call.</p>\n</div></li></ul></div></div></div><div id='method-onOptionsItemSelected' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onOptionsItemSelected' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onOptionsItemSelected' class='name expandable'>onOptionsItemSelected</a>( <span class='pre'>item</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever an item in your options menu is selected. ...</div><div class='long'><p>This hook is called whenever an item in your options menu is selected.\n The default implementation simply returns false to have the normal\n processing happen (calling the item's Runnable or sending a message to\n its Handler as appropriate).  You can use this method for any items\n for which you would like to do processing without those other\n facilities.</p>\n\n<p> <p>Derived classes should call through to the base class for it to\n perform the default menu handling.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : Object {MenuItem}<div class='sub-desc'><p>The menu item that was selected.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean Return false to allow normal menu processing to\n         proceed, true to consume it here.\n@see <a href=\"#!/api/android.app.Activity-method-onCreateOptionsMenu\" rel=\"android.app.Activity-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a></p>\n</div></li></ul></div></div></div><div id='method-onOptionsMenuClosed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onOptionsMenuClosed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onOptionsMenuClosed' class='name expandable'>onOptionsMenuClosed</a>( <span class='pre'>menu</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called whenever the options menu is being closed (either by the user canceling\n the menu with the back/m...</div><div class='long'><p>This hook is called whenever the options menu is being closed (either by the user canceling\n the menu with the back/menu button, or when an item is selected).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The options menu as last shown or first initialized by\n             onCreateOptionsMenu().</p>\n</div></li></ul></div></div></div><div id='method-onPanelClosed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onPanelClosed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onPanelClosed' class='name expandable'>onPanelClosed</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of\n Menu) for\n activities. ...</div><div class='long'><p>Default implementation of\n Menu) for\n activities. This calls through to <a href=\"#!/api/android.app.Activity-method-onOptionsMenuClosed\" rel=\"android.app.Activity-method-onOptionsMenuClosed\" class=\"docClass\">onOptionsMenuClosed</a>(Menu)\n method for the android.view.Window.FEATURE_OPTIONS_PANEL panel,\n so that subclasses of Activity don't need to deal with feature codes.\n For context menus (Window.FEATURE_CONTEXT_MENU), the\n <a href=\"#!/api/android.app.Activity-method-onContextMenuClosed\" rel=\"android.app.Activity-method-onContextMenuClosed\" class=\"docClass\">onContextMenuClosed</a>(Menu) will be called.</p>\n</div></div></div><div id='method-onPerformDirectAction' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onPerformDirectAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onPerformDirectAction' class='name expandable'>onPerformDirectAction</a>( <span class='pre'>actionId, arguments, cancellationSignal, resultListener</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called to perform an action previously defined by the app. ...</div><div class='long'><p>This is called to perform an action previously defined by the app.\n Apps also have access to <a href=\"#!/api/android.app.Activity-method-getVoiceInteractor\" rel=\"android.app.Activity-method-getVoiceInteractor\" class=\"docClass\">getVoiceInteractor</a>() to follow up on the action.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>actionId</span> : String<div class='sub-desc'><p>The ID for the action you previously reported via\n     Consumer).</p>\n</div></li><li><span class='pre'>arguments</span> : Object {Bundle}<div class='sub-desc'><p>Any additional arguments provided by the caller that are\n     specific to the given action.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress.</p>\n</div></li><li><span class='pre'>resultListener</span> : Object {java.util.function.Consumer}<div class='sub-desc'><p>The callback to provide the result back to the caller.\n     You can call this on any thread. The result bundle is action specific.\n@see <a href=\"#!/api/android.app.Activity-method-onGetDirectActions\" rel=\"android.app.Activity-method-onGetDirectActions\" class=\"docClass\">onGetDirectActions</a>(CancellationSignal, Consumer)</p>\n</div></li></ul></div></div></div><div id='method-onPictureInPictureModeChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onPictureInPictureModeChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onPictureInPictureModeChanged' class='name expandable'>onPictureInPictureModeChanged</a>( <span class='pre'>isInPictureInPictureMode, isInPictureInPictureMode</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called by the system when the activity changes to and from picture-in-picture mode. ...</div><div class='long'><p>Called by the system when the activity changes to and from picture-in-picture mode.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use Configuration) instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isInPictureInPictureMode</span> : Boolean<div class='sub-desc'><p>True if the activity is in picture-in-picture mode.</p>\n</div></li><li><span class='pre'>isInPictureInPictureMode</span> : Object<div class='sub-desc'><p>True if the activity is in picture-in-picture mode.</p>\n</div></li></ul></div></div></div><div id='method-onPostCreate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onPostCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onPostCreate' class='name expandable'>onPostCreate</a>( <span class='pre'>savedInstanceState, persistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is the same as onPostCreate(Bundle) but is called for activities\n created with the attribute android.R.attr.pers...</div><div class='long'><p>This is the same as <a href=\"#!/api/android.app.Activity-method-onPostCreate\" rel=\"android.app.Activity-method-onPostCreate\" class=\"docClass\">onPostCreate</a>(Bundle) but is called for activities\n created with the attribute android.R.attr.persistableMode set to\n <code>persistAcrossReboots</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>The data most recently supplied in <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a></p>\n</div></li><li><span class='pre'>persistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>The data caming from the PersistableBundle first\n saved in PersistableBundle).\n@see <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a></p>\n</div></li></ul></div></div></div><div id='method-onPrepareNavigateUpTaskStack' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onPrepareNavigateUpTaskStack' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onPrepareNavigateUpTaskStack' class='name expandable'>onPrepareNavigateUpTaskStack</a>( <span class='pre'>builder</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepare the synthetic task stack that will be generated during Up navigation\n from a different task. ...</div><div class='long'><p>Prepare the synthetic task stack that will be generated during Up navigation\n from a different task.</p>\n\n<p> <p>This method receives the <a href=\"#!/api/android.app.TaskStackBuilder\" rel=\"android.app.TaskStackBuilder\" class=\"docClass\">android.app.TaskStackBuilder</a> with the constructed series of\n Intents as generated by <a href=\"#!/api/android.app.Activity-method-onCreateNavigateUpTaskStack\" rel=\"android.app.Activity-method-onCreateNavigateUpTaskStack\" class=\"docClass\">onCreateNavigateUpTaskStack</a>(TaskStackBuilder).\n If any extra data should be added to these intents before launching the new task,\n the application should override this method and add that data here.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>builder</span> : Object {TaskStackBuilder}<div class='sub-desc'><p>A TaskStackBuilder that has been populated with Intents by\n                onCreateNavigateUpTaskStack.</p>\n</div></li></ul></div></div></div><div id='method-onPrepareOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onPrepareOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onPrepareOptionsMenu' class='name expandable'>onPrepareOptionsMenu</a>( <span class='pre'>menu</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Prepare the Screen's standard options menu to be displayed. ...</div><div class='long'><p>Prepare the Screen's standard options menu to be displayed.  This is\n called right before the menu is shown, every time it is shown.  You can\n use this method to efficiently enable/disable items or otherwise\n dynamically modify the contents.</p>\n\n<p> <p>The default implementation updates the system menu items based on the\n activity's state.  Deriving classes should always call through to the\n base class implementation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>menu</span> : Object {Menu}<div class='sub-desc'><p>The options menu as last shown or first initialized by\n             onCreateOptionsMenu().</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>You must return true for the menu to be displayed;\n         if you return false it will not be shown.\n@see <a href=\"#!/api/android.app.Activity-method-onCreateOptionsMenu\" rel=\"android.app.Activity-method-onCreateOptionsMenu\" class=\"docClass\">onCreateOptionsMenu</a></p>\n</div></li></ul></div></div></div><div id='method-onPreparePanel' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onPreparePanel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onPreparePanel' class='name expandable'>onPreparePanel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Default implementation of\n android.view.Window.Callback.onPreparePanel\n for activities. ...</div><div class='long'><p>Default implementation of\n android.view.Window.Callback.onPreparePanel\n for activities.  This\n calls through to the new <a href=\"#!/api/android.app.Activity-method-onPrepareOptionsMenu\" rel=\"android.app.Activity-method-onPrepareOptionsMenu\" class=\"docClass\">onPrepareOptionsMenu</a> method for the\n android.view.Window.FEATURE_OPTIONS_PANEL\n panel, so that subclasses of\n Activity don't need to deal with feature codes.</p>\n</div></div></div><div id='method-onProvideAssistContent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onProvideAssistContent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onProvideAssistContent' class='name expandable'>onProvideAssistContent</a>( <span class='pre'>outContent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when the user is requesting an assist, to provide references\n to content related to the current activity. ...</div><div class='long'><p>This is called when the user is requesting an assist, to provide references\n to content related to the current activity.  Before being called, the\n {@code outContent} Intent is filled with the base Intent of the activity (the Intent\n returned by <a href=\"#!/api/android.app.Activity-method-getIntent\" rel=\"android.app.Activity-method-getIntent\" class=\"docClass\">getIntent</a>()).  The Intent's extras are stripped of any types\n that are not valid for PersistableBundle or non-framework Parcelables, and\n the flags Intent.FLAG_GRANT_WRITE_URI_PERMISSION and\n Intent.FLAG_GRANT_PERSISTABLE_URI_PERMISSION are cleared from the Intent.</p>\n\n<p> <p>Custom implementation may adjust the content intent to better reflect the top-level\n context of the activity, and fill in its ClipData with additional content of\n interest that the user is currently viewing.  For example, an image gallery application\n that has launched in to an activity allowing the user to swipe through pictures should\n modify the intent to reference the current image they are looking it; such an\n application when showing a list of pictures should add a ClipData that has\n references to all of the pictures currently visible on screen.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outContent</span> : Object {AssistContent}<div class='sub-desc'><p>The assist content to return.</p>\n</div></li></ul></div></div></div><div id='method-onProvideAssistData' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onProvideAssistData' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onProvideAssistData' class='name expandable'>onProvideAssistData</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when the user is requesting an assist, to build a full\n Intent.ACTION_ASSIST Intent with all of the co...</div><div class='long'><p>This is called when the user is requesting an assist, to build a full\n Intent.ACTION_ASSIST Intent with all of the context of the current\n application.  You can override this method to place into the bundle anything\n you would like to appear in the Intent.EXTRA_ASSIST_CONTEXT part\n of the assist Intent.</p>\n\n<p> <p>This function will be called after any global assist callbacks that had\n been registered with <a href=\"#!/api/android.app.Application-method-registerOnProvideAssistDataListener\" rel=\"android.app.Application-method-registerOnProvideAssistDataListener\" class=\"docClass\">android.app.Application.registerOnProvideAssistDataListener</a>.</p>\n</div></div></div><div id='method-onProvideKeyboardShortcuts' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onProvideKeyboardShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onProvideKeyboardShortcuts' class='name expandable'>onProvideKeyboardShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onProvideReferrer' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onProvideReferrer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onProvideReferrer' class='name expandable'>onProvideReferrer</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override to generate the desired referrer for the content currently being shown\n by the app. ...</div><div class='long'><p>Override to generate the desired referrer for the content currently being shown\n by the app.  The default implementation returns null, meaning the referrer will simply\n be the android-app: of the package name of this activity.  Return a non-null Uri to\n have that supplied as the Intent.EXTRA_REFERRER of any activities started from it.</p>\n</div></div></div><div id='method-onRequestPermissionsResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onRequestPermissionsResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onRequestPermissionsResult' class='name expandable'>onRequestPermissionsResult</a>( <span class='pre'>requestCode, permissions, grantResults</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback for the result from requesting permissions. ...</div><div class='long'><p>Callback for the result from requesting permissions. This method\n is invoked for every call on int).\n <p>\n <strong>Note:</strong> It is possible that the permissions request interaction\n with the user is interrupted. In this case you will receive empty permissions\n and results arrays which should be treated as a cancellation.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>The request code passed in int).</p>\n</div></li><li><span class='pre'>permissions</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The requested permissions. Never null.</p>\n</div></li><li><span class='pre'>grantResults</span> : Object {int[]}<div class='sub-desc'><p>The grant results for the corresponding permissions\n     which is either android.content.pm.PackageManager.PERMISSION_GRANTED\n     or android.content.pm.PackageManager.PERMISSION_DENIED. Never null.\n@see <a href=\"#!/api/android.app.Activity-method-requestPermissions\" rel=\"android.app.Activity-method-requestPermissions\" class=\"docClass\">requestPermissions</a>(String[], int)</p>\n</div></li></ul></div></div></div><div id='method-onRestoreInstanceState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onRestoreInstanceState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onRestoreInstanceState' class='name expandable'>onRestoreInstanceState</a>( <span class='pre'>savedInstanceState, persistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is the same as onRestoreInstanceState(Bundle) but is called for activities\n created with the attribute android.R...</div><div class='long'><p>This is the same as <a href=\"#!/api/android.app.Activity-method-onRestoreInstanceState\" rel=\"android.app.Activity-method-onRestoreInstanceState\" class=\"docClass\">onRestoreInstanceState</a>(Bundle) but is called for activities\n created with the attribute android.R.attr.persistableMode set to\n <code>persistAcrossReboots</code>. The android.os.PersistableBundle passed\n came from the restored PersistableBundle first\n saved in PersistableBundle).</p>\n\n<p> <p>This method is called between onStart and\n <a href=\"#!/api/android.app.Activity-method-onPostCreate\" rel=\"android.app.Activity-method-onPostCreate\" class=\"docClass\">onPostCreate</a>.</p>\n\n<p> <p>If this method is called <a href=\"#!/api/android.app.Activity-method-onRestoreInstanceState\" rel=\"android.app.Activity-method-onRestoreInstanceState\" class=\"docClass\">onRestoreInstanceState</a>(Bundle) will not be called.</p>\n\n<p> <p>At least one of {@code savedInstanceState} or {@code persistentState} will not be null.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>savedInstanceState</span> : Object {Bundle}<div class='sub-desc'><p>the data most recently supplied in <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>\n     or null.</p>\n</div></li><li><span class='pre'>persistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>the data most recently supplied in <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>\n     or null.\n@see <a href=\"#!/api/android.app.Activity-method-onRestoreInstanceState\" rel=\"android.app.Activity-method-onRestoreInstanceState\" class=\"docClass\">onRestoreInstanceState</a>(Bundle)\n@see <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a>\n@see <a href=\"#!/api/android.app.Activity-method-onPostCreate\" rel=\"android.app.Activity-method-onPostCreate\" class=\"docClass\">onPostCreate</a>\n@see #onResume\n@see <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a></p>\n</div></li></ul></div></div></div><div id='method-onRetainNonConfigurationInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onRetainNonConfigurationInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onRetainNonConfigurationInstance' class='name expandable'>onRetainNonConfigurationInstance</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the system, as part of destroying an\n activity due to a configuration change, when it is known that a new\n ...</div><div class='long'><p>Called by the system, as part of destroying an\n activity due to a configuration change, when it is known that a new\n instance will immediately be created for the new configuration.  You\n can return any object you like here, including the activity instance\n itself, which can later be retrieved by calling\n <a href=\"#!/api/android.app.Activity-method-getLastNonConfigurationInstance\" rel=\"android.app.Activity-method-getLastNonConfigurationInstance\" class=\"docClass\">getLastNonConfigurationInstance</a>() in the new activity\n instance.</p>\n\n<p> <em>If you are targeting android.os.Build.VERSION_CODES.HONEYCOMB\n or later, consider instead using a <a href=\"#!/api/android.app.Fragment\" rel=\"android.app.Fragment\" class=\"docClass\">android.app.Fragment</a> with\n android.app.Fragment.setRetainInstance(boolean.</em></p>\n\n<p> <p>This function is called purely as an optimization, and you must\n not rely on it being called.  When it is called, a number of guarantees\n will be made to help optimize configuration switching:\n <ul>\n <li> The function will be called between onStop and\n onDestroy.\n <li> A new instance of the activity will <em>always</em> be immediately\n created after this one's onDestroy() is called.  In particular,\n <em>no</em> messages will be dispatched during this time (when the returned\n object does not have an activity to be associated with).\n <li> The object you return here will <em>always</em> be available from\n the <a href=\"#!/api/android.app.Activity-method-getLastNonConfigurationInstance\" rel=\"android.app.Activity-method-getLastNonConfigurationInstance\" class=\"docClass\">getLastNonConfigurationInstance</a>() method of the following\n activity instance as described there.\n </li></li></li></ul></p>\n\n<p> <p>These guarantees are designed so that an activity can use this API\n to propagate extensive state from the old to new activity instance, from\n loaded bitmaps, to network connections, to evenly actively running\n threads.  Note that you should <em>not</em> propagate any data that\n may change based on the configuration, including any data loaded from\n resources such as strings, layouts, or drawables.</p>\n\n<p> <p>The guarantee of no message handling during the switch to the next\n activity simplifies use with active objects.  For example if your retained\n state is an android.os.AsyncTask you are guaranteed that its\n call back functions (like android.os.AsyncTask.onPostExecute) will\n not be called from the call here until you execute the next instance's\n <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a>(Bundle).  (Note however that there is of course no such\n guarantee for android.os.AsyncTask.doInBackground since that is\n running in a separate thread.)</p>\n\n<p> <p><strong>Note:</strong> For most cases you should use the <a href=\"#!/api/android.app.Fragment\" rel=\"android.app.Fragment\" class=\"docClass\">android.app.Fragment</a> API\n android.app.Fragment.setRetainInstance(boolean) instead; this is also\n available on older platforms through the Android support libraries.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>any Object holding the desired state to propagate to the\n         next activity instance</p>\n</div></li></ul></div></div></div><div id='method-onSaveInstanceState' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onSaveInstanceState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onSaveInstanceState' class='name expandable'>onSaveInstanceState</a>( <span class='pre'>outState, outPersistentState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is the same as onSaveInstanceState but is called for activities\n created with the attribute android.R.attr.persi...</div><div class='long'><p>This is the same as <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a> but is called for activities\n created with the attribute android.R.attr.persistableMode set to\n <code>persistAcrossReboots</code>. The android.os.PersistableBundle passed\n in will be saved and presented in PersistableBundle)\n the first time that this activity is restarted following the next device reboot.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outState</span> : Object {Bundle}<div class='sub-desc'><p>Bundle in which to place your saved state.</p>\n</div></li><li><span class='pre'>outPersistentState</span> : Object {PersistableBundle}<div class='sub-desc'><p>State which will be saved across reboots.\n@see <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a>(Bundle)\n@see <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a>\n@see <a href=\"#!/api/android.app.Activity-method-onRestoreInstanceState\" rel=\"android.app.Activity-method-onRestoreInstanceState\" class=\"docClass\">onRestoreInstanceState</a>(Bundle, PersistableBundle)\n@see #onPause</p>\n</div></li></ul></div></div></div><div id='method-onSearchRequested' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onSearchRequested' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onSearchRequested' class='name expandable'>onSearchRequested</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>@see onSearchRequested(SearchEvent) ...</div><div class='long'><p>@see <a href=\"#!/api/android.app.Activity-method-onSearchRequested\" rel=\"android.app.Activity-method-onSearchRequested\" class=\"docClass\">onSearchRequested</a>(SearchEvent)</p>\n</div></div></div><div id='method-onStateNotSaved' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onStateNotSaved' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onStateNotSaved' class='name expandable'>onStateNotSaved</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called when an onResume is coming up, prior to other pre-resume callbacks\n such as onNewIntent and onActivityResult. ...</div><div class='long'><p>Called when an onResume is coming up, prior to other pre-resume callbacks\n such as onNewIntent and onActivityResult.  This is primarily intended\n to give the activity a hint that its state is no longer saved -- it will generally\n be called after <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">onSaveInstanceState</a> and prior to the activity being\n resumed/started again.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>starting with android.os.Build.VERSION_CODES.P onSaveInstanceState is\n called after onStop, so this hint isn't accurate anymore: you should consider your\n state not saved in between {@code onStart} and {@code onStop} callbacks inclusively.</p>\n\n        </div>\n</div></div></div><div id='method-onTopResumedActivityChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onTopResumedActivityChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onTopResumedActivityChanged' class='name expandable'>onTopResumedActivityChanged</a>( <span class='pre'>isTopResumedActivity</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when activity gets or loses the top resumed position in the system. ...</div><div class='long'><p>Called when activity gets or loses the top resumed position in the system.</p>\n\n<p> <p>Starting with android.os.Build.VERSION_CODES.Q multiple activities can be resumed\n at the same time in multi-window and multi-display modes. This callback should be used\n instead of onResume() as an indication that the activity can try to open\n exclusive-access devices like camera.</p></p>\n\n<p> <p>It will always be delivered after the activity was resumed and before it is paused. In\n some cases it might be skipped and activity can go straight from onResume() to\n onPause() without receiving the top resumed state.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>isTopResumedActivity</span> : Boolean<div class='sub-desc'><p>{@code true} if it's the topmost resumed activity in the system,\n                             {@code false} otherwise. A call with this as {@code true} will\n                             always be followed by another one with {@code false}.\n@see #onResume()\n@see #onPause()\n@see <a href=\"#!/api/android.app.Activity-method-onWindowFocusChanged\" rel=\"android.app.Activity-method-onWindowFocusChanged\" class=\"docClass\">onWindowFocusChanged</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-onTouchEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onTouchEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onTouchEvent' class='name expandable'>onTouchEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a touch screen event was not handled by any of the views\n under it. ...</div><div class='long'><p>Called when a touch screen event was not handled by any of the views\n under it.  This is most useful to process touch events that happen\n outside of your window bounds, where there is no view to receive it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>The touch screen event being processed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Return true if you have consumed the event, false if you haven't.\n The default implementation always returns false.</p>\n</div></li></ul></div></div></div><div id='method-onTrackballEvent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onTrackballEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onTrackballEvent' class='name expandable'>onTrackballEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the trackball was moved and not handled by any of the\n views inside of the activity. ...</div><div class='long'><p>Called when the trackball was moved and not handled by any of the\n views inside of the activity.  So, for example, if the trackball moves\n while focus is on a button, you will receive a call here because\n buttons do not normally do anything with trackball events.  The call\n here happens <em>before</em> trackball movements are converted to\n DPAD key events, which then get sent back to the view hierarchy, and\n will be processed at the point for things like focus navigation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>The trackball event being processed.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Return true if you have consumed the event, false if you haven't.\n The default implementation always returns false.</p>\n</div></li></ul></div></div></div><div id='method-onTrimMemory' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onTrimMemory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onTrimMemory' class='name expandable'>onTrimMemory</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onUserInteraction' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onUserInteraction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onUserInteraction' class='name expandable'>onUserInteraction</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called whenever a key, touch, or trackball event is dispatched to the\n activity. ...</div><div class='long'><p>Called whenever a key, touch, or trackball event is dispatched to the\n activity.  Implement this method if you wish to know that the user has\n interacted with the device in some way while your activity is running.\n This callback and onUserLeaveHint are intended to help\n activities manage status bar notifications intelligently; specifically,\n for helping activities determine the proper time to cancel a notification.</p>\n\n<p> <p>All calls to your activity's onUserLeaveHint callback will\n be accompanied by calls to <a href=\"#!/api/android.app.Activity-method-onUserInteraction\" rel=\"android.app.Activity-method-onUserInteraction\" class=\"docClass\">onUserInteraction</a>.  This\n ensures that your activity will be told of relevant user activity such\n as pulling down the notification pane and touching an item there.</p>\n\n<p> <p>Note that this callback will be invoked for the touch down action\n that begins a touch gesture, but may not be invoked for the touch-moved\n and touch-up actions that follow.\n@see #onUserLeaveHint()</p>\n</div></div></div><div id='method-onVisibleBehindCanceled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onVisibleBehindCanceled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onVisibleBehindCanceled' class='name expandable'>onVisibleBehindCanceled</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Called when a translucent activity over this activity is becoming opaque or another\n activity is being launched. ...</div><div class='long'><p>Called when a translucent activity over this activity is becoming opaque or another\n activity is being launched. Activities that override this method must call\n <code>super.onVisibleBehindCanceled()</code> or a SuperNotCalledException will be thrown.</p>\n\n<p> <p>When this method is called the activity has 500 msec to release any resources it may be\n using while visible in the background.\n If the activity has not returned from this method in 500 msec the system will destroy\n the activity and kill the process in order to recover the resources for another\n process. Otherwise onStop() will be called following return.\n@see <a href=\"#!/api/android.app.Activity-method-requestVisibleBehind\" rel=\"android.app.Activity-method-requestVisibleBehind\" class=\"docClass\">requestVisibleBehind</a>(boolean)</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This method's functionality is no longer supported as of\n android.os.Build.VERSION_CODES.O and will be removed in a future release.</p>\n\n        </div>\n</div></div></div><div id='method-onWindowAttributesChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onWindowAttributesChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onWindowAttributesChanged' class='name expandable'>onWindowAttributesChanged</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-onWindowFocusChanged' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onWindowFocusChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onWindowFocusChanged' class='name expandable'>onWindowFocusChanged</a>( <span class='pre'>hasFocus</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the current Window of the activity gains or loses\n focus. ...</div><div class='long'><p>Called when the current Window of the activity gains or loses\n focus. This is the best indicator of whether this activity is the entity\n with which the user actively interacts. The default implementation\n clears the key tracking state, so should always be called.</p>\n\n<p> <p>Note that this provides information about global focus state, which\n is managed independently of activity lifecycle.  As such, while focus\n changes will generally have some relation to lifecycle changes (an\n activity that is stopped will not generally get window focus), you\n should not rely on any particular order between the callbacks here and\n those in the other lifecycle methods such as onResume.</p>\n\n<p> <p>As a general rule, however, a foreground activity will have window\n focus...  unless it has displayed other dialogs or popups that take\n input focus, in which case the activity itself will not have focus\n when the other windows have it.  Likewise, the system may display\n system-level windows (such as the status bar notification panel or\n a system alert) which will temporarily take window input focus without\n pausing the foreground activity.</p>\n\n<p> <p>Starting with android.os.Build.VERSION_CODES.Q there can be\n multiple resumed activities at the same time in multi-window mode, so\n resumed state does not guarantee window focus even if there are no\n overlays above.</p>\n\n<p> <p>If the intent is to know when an activity is the topmost active, the\n one the user interacted with last among all activities but not including\n non-activity windows like dialogs and popups, then\n <a href=\"#!/api/android.app.Activity-method-onTopResumedActivityChanged\" rel=\"android.app.Activity-method-onTopResumedActivityChanged\" class=\"docClass\">onTopResumedActivityChanged</a>(boolean) should be used. On platform\n versions prior to android.os.Build.VERSION_CODES.Q,\n onResume is the best indicator.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hasFocus</span> : Boolean<div class='sub-desc'><p>Whether the window of this activity has focus.\n@see <a href=\"#!/api/android.app.Activity-method-hasWindowFocus\" rel=\"android.app.Activity-method-hasWindowFocus\" class=\"docClass\">hasWindowFocus</a>()\n@see #onResume\n@see View#onWindowFocusChanged(boolean)\n@see <a href=\"#!/api/android.app.Activity-method-onTopResumedActivityChanged\" rel=\"android.app.Activity-method-onTopResumedActivityChanged\" class=\"docClass\">onTopResumedActivityChanged</a>(boolean)</p>\n</div></li></ul></div></div></div><div id='method-onWindowStartingActionMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-onWindowStartingActionMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-onWindowStartingActionMode' class='name expandable'>onWindowStartingActionMode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@inheritDoc} ...</div><div class='long'><p>{@inheritDoc}</p>\n</div></div></div><div id='method-openContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-openContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-openContextMenu' class='name expandable'>openContextMenu</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Programmatically opens the context menu for a particular {@code view}. ...</div><div class='long'><p>Programmatically opens the context menu for a particular {@code view}.\n The {@code view} should have been added via\n <a href=\"#!/api/android.app.Activity-method-registerForContextMenu\" rel=\"android.app.Activity-method-registerForContextMenu\" class=\"docClass\">registerForContextMenu</a>(View).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The view to show the context menu for.</p>\n</div></li></ul></div></div></div><div id='method-openOptionsMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-openOptionsMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-openOptionsMenu' class='name expandable'>openOptionsMenu</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Programmatically opens the options menu. ...</div><div class='long'><p>Programmatically opens the options menu. If the options menu is already\n open, this method does nothing.</p>\n</div></div></div><div id='method-overridePendingTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-overridePendingTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-overridePendingTransition' class='name expandable'>overridePendingTransition</a>( <span class='pre'>enterAnim, exitAnim</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call immediately after one of the flavors of startActivity(Intent)\n or finish to specify an explicit transition anima...</div><div class='long'><p>Call immediately after one of the flavors of <a href=\"#!/api/android.app.Activity-method-startActivity\" rel=\"android.app.Activity-method-startActivity\" class=\"docClass\">startActivity</a>(Intent)\n or <a href=\"#!/api/android.app.Activity-method-finish\" rel=\"android.app.Activity-method-finish\" class=\"docClass\">finish</a> to specify an explicit transition animation to\n perform next.</p>\n\n<p> <p>As of android.os.Build.VERSION_CODES.JELLY_BEAN an alternative\n to using this with starting activities is to supply the desired animation\n information through a <a href=\"#!/api/android.app.ActivityOptions\" rel=\"android.app.ActivityOptions\" class=\"docClass\">android.app.ActivityOptions</a> bundle to\n Bundle) or a related function.  This allows\n you to specify a custom animation even when starting an activity from\n outside the context of the current top activity.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enterAnim</span> : Number<div class='sub-desc'><p>A resource ID of the animation resource to use for\n the incoming activity.  Use 0 for no animation.</p>\n</div></li><li><span class='pre'>exitAnim</span> : Number<div class='sub-desc'><p>A resource ID of the animation resource to use for\n the outgoing activity.  Use 0 for no animation.</p>\n</div></li></ul></div></div></div><div id='method-postponeEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-postponeEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-postponeEnterTransition' class='name expandable'>postponeEnterTransition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Postpone the entering activity transition when Activity was started with\n android.util.Pair[]). ...</div><div class='long'><p>Postpone the entering activity transition when Activity was started with\n android.util.Pair[]).\n <p>This method gives the Activity the ability to delay starting the entering and\n shared element transitions until all data is loaded. Until then, the Activity won't\n draw into its window, leaving the window transparent. This may also cause the\n returning animation to be delayed until data is ready. This method should be\n called in onCreate(android.os.Bundle) or in\n android.content.Intent).\n <a href=\"#!/api/android.app.Activity-method-startPostponedEnterTransition\" rel=\"android.app.Activity-method-startPostponedEnterTransition\" class=\"docClass\">startPostponedEnterTransition</a>() must be called to allow the Activity to\n start the transitions. If the Activity did not use\n android.util.Pair[]), then this method does nothing.</p></p>\n</div></div></div><div id='method-recreate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-recreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-recreate' class='name expandable'>recreate</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Cause this Activity to be recreated with a new instance. ...</div><div class='long'><p>Cause this Activity to be recreated with a new instance.  This results\n in essentially the same flow as when the Activity is created due to\n a configuration change -- the current instance will go through its\n lifecycle to onDestroy and a new instance then created after it.</p>\n</div></div></div><div id='method-registerActivityLifecycleCallbacks' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-registerActivityLifecycleCallbacks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-registerActivityLifecycleCallbacks' class='name expandable'>registerActivityLifecycleCallbacks</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Register an android.app.Application.ActivityLifecycleCallbacks instance that receives\n lifecycle callbacks for only t...</div><div class='long'><p>Register an <a href=\"#!/api/android.app.Application.ActivityLifecycleCallbacks\" rel=\"android.app.Application.ActivityLifecycleCallbacks\" class=\"docClass\">android.app.Application.ActivityLifecycleCallbacks</a> instance that receives\n lifecycle callbacks for only this Activity.\n <p>\n In relation to any\n <a href=\"#!/api/android.app.Application-method-registerActivityLifecycleCallbacks\" rel=\"android.app.Application-method-registerActivityLifecycleCallbacks\" class=\"docClass\">android.app.Application registered callbacks</a>,\n the callbacks registered here will always occur nested within those callbacks. This means:\n <ul>\n     <li>Pre events will first be sent to Application registered callbacks, then to callbacks\n     registered here.</li>\n     <li>Bundle),\n     android.app.Application.ActivityLifecycleCallbacks.onActivityStarted(Activity), and\n     android.app.Application.ActivityLifecycleCallbacks.onActivityResumed(Activity) will\n     be sent first to Application registered callbacks, then to callbacks registered here.\n     For all other events, callbacks registered here will be sent first.</li>\n     <li>Post events will first be sent to callbacks registered here, then to\n     Application registered callbacks.</li>\n </ul>\n <p>\n If multiple callbacks are registered here, they receive events in a first in (up through\n <a href=\"#!/api/android.app.Application.ActivityLifecycleCallbacks-method-onActivityPostResumed\" rel=\"android.app.Application.ActivityLifecycleCallbacks-method-onActivityPostResumed\" class=\"docClass\">android.app.Application.ActivityLifecycleCallbacks.onActivityPostResumed</a>, last out\n ordering.\n <p>\n It is strongly recommended to register this in the constructor of your Activity to ensure\n you get all available callbacks. As this callback is associated with only this Activity,\n it is not usually necessary to <a href=\"#!/api/android.app.Activity-method-unregisterActivityLifecycleCallbacks\" rel=\"android.app.Activity-method-unregisterActivityLifecycleCallbacks\" class=\"docClass\">unregister</a> it\n unless you specifically do not want to receive further lifecycle callbacks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {Application.ActivityLifecycleCallbacks}<div class='sub-desc'><p>The callback instance to register</p>\n</div></li></ul></div></div></div><div id='method-registerForContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-registerForContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-registerForContextMenu' class='name expandable'>registerForContextMenu</a>( <span class='pre'>view, view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Registers a context menu to be shown for the given view (multiple views\n can show the context menu). ...</div><div class='long'><p>Registers a context menu to be shown for the given view (multiple views\n can show the context menu). This method will set the\n OnCreateContextMenuListener on the view to this activity, so\n View, ContextMenuInfo) will be\n called when it is time to show the context menu.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The view that should show a context menu.</p>\n</div></li><li><span class='pre'>view</span> : Object<div class='sub-desc'><p>The view that should show a context menu.</p>\n</div></li></ul></div></div></div><div id='method-releaseInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-releaseInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-releaseInstance' class='name expandable'>releaseInstance</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask that the local app instance of this activity be released to free up its memory. ...</div><div class='long'><p>Ask that the local app instance of this activity be released to free up its memory.\n This is asking for the activity to be destroyed, but does <b>not</b> finish the activity --\n a new instance of the activity will later be re-created if needed due to the user\n navigating back to it.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if the activity was in a state that it has started the process\n of destroying its current instance; returns false if for any reason this could not\n be done: it is currently visible to the user, it is already being destroyed, it is\n being finished, it hasn't yet saved its state, etc.</p>\n</div></li></ul></div></div></div><div id='method-removeDialog' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-removeDialog' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-removeDialog' class='name expandable'>removeDialog</a>( <span class='pre'>id</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Removes any internal references to a dialog managed by this Activity. ...</div><div class='long'><p>Removes any internal references to a dialog managed by this Activity.\n If the dialog is showing, it will dismiss it as part of the clean up.</p>\n\n<p> <p>This can be useful if you know that you will never show a dialog again and\n want to avoid the overhead of saving and restoring it in the future.</p>\n\n<p> <p>As of android.os.Build.VERSION_CODES.GINGERBREAD, this function\n will not throw an exception if you try to remove an ID that does not\n currently have an associated dialog.</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use the new DialogFragment class with\n FragmentManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The id of the managed dialog.\n@see #onCreateDialog(int, Bundle)\n@see #onPrepareDialog(int, Dialog, Bundle)\n@see <a href=\"#!/api/android.app.Activity-method-showDialog\" rel=\"android.app.Activity-method-showDialog\" class=\"docClass\">showDialog</a>(int)\n@see <a href=\"#!/api/android.app.Activity-method-dismissDialog\" rel=\"android.app.Activity-method-dismissDialog\" class=\"docClass\">dismissDialog</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-reportFullyDrawn' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-reportFullyDrawn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-reportFullyDrawn' class='name expandable'>reportFullyDrawn</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Report to the system that your app is now fully drawn, purely for diagnostic\n purposes (calling it does not impact th...</div><div class='long'><p>Report to the system that your app is now fully drawn, purely for diagnostic\n purposes (calling it does not impact the visible behavior of the activity).\n This is only used to help instrument application launch times, so that the\n app can report when it is fully in a usable state; without this, the only thing\n the system itself can determine is the point at which the activity's window\n is <em>first</em> drawn and displayed.  To participate in app launch time\n measurement, you should always call this method after first launch (when\n onCreate(android.os.Bundle) is called), at the point where you have\n entirely drawn your UI and populated with all of the significant data.  You\n can safely call this method any time after first launch as well, in which case\n it will simply be ignored.</p>\n</div></div></div><div id='method-requestDragAndDropPermissions' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-requestDragAndDropPermissions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-requestDragAndDropPermissions' class='name expandable'>requestDragAndDropPermissions</a>( <span class='pre'>event</span> ) : Object {android.view.DragAndDropPermissions}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create DragAndDropPermissions object bound to this activity and controlling the\n access permissions for content URIs ...</div><div class='long'><p>Create DragAndDropPermissions object bound to this activity and controlling the\n access permissions for content URIs associated with the DragEvent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {DragEvent}<div class='sub-desc'><p>Drag event</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.DragAndDropPermissions}</span><div class='sub-desc'><p>The DragAndDropPermissions object used to control access to the content URIs.\n Null if no content URIs are associated with the event or if permissions could not be granted.</p>\n</div></li></ul></div></div></div><div id='method-requestPermissions' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-requestPermissions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-requestPermissions' class='name expandable'>requestPermissions</a>( <span class='pre'>permissions, requestCode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Requests permissions to be granted to this application. ...</div><div class='long'><p>Requests permissions to be granted to this application. These permissions\n must be requested in your manifest, they should not be granted to your app,\n and they should have protection level dangerous, regardless\n whether they are declared by the platform or a third-party app.\n <p>\n Normal permissions android.content.pm.PermissionInfo.PROTECTION_NORMAL\n are granted at install time if requested in the manifest. Signature permissions\n android.content.pm.PermissionInfo.PROTECTION_SIGNATURE are granted at\n install time if requested in the manifest and the signature of your app matches\n the signature of the app declaring the permissions.\n </p>\n <p>\n If your app does not have the requested permissions the user will be presented\n with UI for accepting them. After the user has accepted or rejected the\n requested permissions you will receive a callback on String[], int[]) reporting whether the\n permissions were granted or not.\n </p>\n <p>\n Note that requesting a permission does not guarantee it will be granted and\n your app should be able to run without having this permission.\n </p>\n <p>\n This method may start an activity allowing the user to choose which permissions\n to grant and which to reject. Hence, you should be prepared that your activity\n may be paused and resumed. Further, granting some permissions may require\n a restart of you application. In such a case, the system will recreate the\n activity stack before delivering the result to String[], int[]).\n </p>\n <p>\n When checking whether you have a permission you should use checkSelfPermission(String).\n </p>\n <p>\n Calling this API for permissions already granted to your app would show UI\n to the user to decide whether the app can still hold these permissions. This\n can be useful if the way your app uses data guarded by the permissions\n changes significantly.\n </p>\n <p>\n You cannot request a permission if your activity sets noHistory to\n <code>true</code> because in this case the activity would not receive\n result callbacks including String[], int[]).\n </p>\n <p>\n The <a href=\"https://github.com/googlesamples/android-RuntimePermissions\">\n RuntimePermissions</a> sample app demonstrates how to use this method to\n request permissions at run time.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permissions</span> : Object {java.lang.String[]}<div class='sub-desc'><p>The requested permissions. Must me non-null and not empty.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Application specific request code to match with a result\n    reported to String[], int[]).\n    Should be >= 0.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if requestCode is negative.\n@see <a href=\"#!/api/android.app.Activity-method-onRequestPermissionsResult\" rel=\"android.app.Activity-method-onRequestPermissionsResult\" class=\"docClass\">onRequestPermissionsResult</a>(int, String[], int[])\n@see #checkSelfPermission(String)\n@see <a href=\"#!/api/android.app.Activity-method-shouldShowRequestPermissionRationale\" rel=\"android.app.Activity-method-shouldShowRequestPermissionRationale\" class=\"docClass\">shouldShowRequestPermissionRationale</a>(String)</p>\n</div></li></ul></div></div></div><div id='method-requestShowKeyboardShortcuts' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-requestShowKeyboardShortcuts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-requestShowKeyboardShortcuts' class='name expandable'>requestShowKeyboardShortcuts</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request the Keyboard Shortcuts screen to show up. ...</div><div class='long'><p>Request the Keyboard Shortcuts screen to show up. This will trigger\n <a href=\"#!/api/android.app.Activity-method-onProvideKeyboardShortcuts\" rel=\"android.app.Activity-method-onProvideKeyboardShortcuts\" class=\"docClass\">onProvideKeyboardShortcuts</a> to retrieve the shortcuts for the foreground activity.</p>\n</div></div></div><div id='method-requestVisibleBehind' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-requestVisibleBehind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-requestVisibleBehind' class='name expandable'>requestVisibleBehind</a>( <span class='pre'>visible, visible</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Activities that want to remain visible behind a translucent activity above them must call\n this method anytime betwee...</div><div class='long'><p>Activities that want to remain visible behind a translucent activity above them must call\n this method anytime between the start of onResume() and the return from\n onPause(). If this call is successful then the activity will remain visible after\n onPause() is called, and is allowed to continue playing media in the background.</p>\n\n<p> <p>The actions of this call are reset each time that this activity is brought to the\n front. That is, every time onResume() is called the activity will be assumed\n to not have requested visible behind. Therefore, if you want this activity to continue to\n be visible in the background you must call this method again.</p>\n\n<p> <p>Only fullscreen opaque activities may make this call. I.e. this call is a nop\n for dialog and translucent activities.</p>\n\n<p> <p>Under all circumstances, the activity must stop playing and release resources prior to or\n within a call to <a href=\"#!/api/android.app.Activity-method-onVisibleBehindCanceled\" rel=\"android.app.Activity-method-onVisibleBehindCanceled\" class=\"docClass\">onVisibleBehindCanceled</a>() or if this call returns false.</p>\n\n<p> <p>False will be returned any time this method is called between the return of onPause and\n      the next call to onResume.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>visible</span> : Boolean<div class='sub-desc'><p>true to notify the system that the activity wishes to be visible behind other\n                translucent activities, false to indicate otherwise. Resources must be\n                released when passing false to this method.</p>\n</div></li><li><span class='pre'>visible</span> : Object<div class='sub-desc'><p>true to notify the system that the activity wishes to be visible behind other\n                translucent activities, false to indicate otherwise. Resources must be\n                released when passing false to this method.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the resulting visibiity state. If true the activity will remain visible beyond\n      onPause() if the next activity is translucent or not fullscreen. If false\n      then the activity may not count on being visible behind other translucent activities,\n      and must stop any media playback and release resources.\n      Returning false may occur in lieu of a call to onVisibleBehindCanceled() so\n      the return value must be checked.\n@see <a href=\"#!/api/android.app.Activity-method-onVisibleBehindCanceled\" rel=\"android.app.Activity-method-onVisibleBehindCanceled\" class=\"docClass\">onVisibleBehindCanceled</a>()</p>\n</div></li></ul></div></div></div><div id='method-requestWindowFeature' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-requestWindowFeature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-requestWindowFeature' class='name expandable'>requestWindowFeature</a>( <span class='pre'>featureId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable extended window features. ...</div><div class='long'><p>Enable extended window features.  This is a convenience for calling\n getWindow().requestFeature().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>featureId</span> : Number<div class='sub-desc'><p>The desired feature as defined in\n                  android.view.Window.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if the requested feature is supported and now\n         enabled.\n@see android.view.Window#requestFeature</p>\n</div></li></ul></div></div></div><div id='method-requireViewById' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-requireViewById' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-requireViewById' class='name expandable'>requireViewById</a>( <span class='pre'>id</span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds a view that was  identified by the {@code android:id} XML attribute that was processed\n in onCreate, or throws ...</div><div class='long'><p>Finds a view that was  identified by the {@code android:id} XML attribute that was processed\n in <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a>, or throws an IllegalArgumentException if the ID is invalid, or there is\n no matching view in the hierarchy.\n <p>\n <strong>Note:</strong> In most cases -- depending on compiler support --\n the resulting view is automatically cast to the target class type. If\n the target class type is unconstrained, an explicit cast may be\n necessary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>the ID to search for</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>a view with given ID\n@see View#requireViewById(int)\n@see Activity#findViewById(int)</p>\n</div></li></ul></div></div></div><div id='method-runOnUiThread' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-runOnUiThread' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-runOnUiThread' class='name expandable'>runOnUiThread</a>( <span class='pre'>action</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Runs the specified action on the UI thread. ...</div><div class='long'><p>Runs the specified action on the UI thread. If the current thread is the UI\n thread, then the action is executed immediately. If the current thread is\n not the UI thread, the action is posted to the event queue of the UI thread.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>action</span> : Object {Runnable}<div class='sub-desc'><p>the action to run on the UI thread</p>\n</div></li></ul></div></div></div><div id='method-setActionBar' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setActionBar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setActionBar' class='name expandable'>setActionBar</a>( <span class='pre'>toolbar</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set a Toolbar to act as the android.app.ActionBar for this\n Activity window. ...</div><div class='long'><p>Set a Toolbar to act as the <a href=\"#!/api/android.app.ActionBar\" rel=\"android.app.ActionBar\" class=\"docClass\">android.app.ActionBar</a> for this\n Activity window.</p>\n\n<p> <p>When set to a non-null value the <a href=\"#!/api/android.app.Activity-method-getActionBar\" rel=\"android.app.Activity-method-getActionBar\" class=\"docClass\">getActionBar</a>() method will return\n an <a href=\"#!/api/android.app.ActionBar\" rel=\"android.app.ActionBar\" class=\"docClass\">android.app.ActionBar</a> object that can be used to control the given toolbar as if it were\n a traditional window decor action bar. The toolbar's menu will be populated with the\n Activity's options menu and the navigation button will be wired through the standard\n home menu select action.</p></p>\n\n<p> <p>In order to use a Toolbar within the Activity's window content the application\n must not request the window feature FEATURE_ACTION_BAR.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>toolbar</span> : Object {Toolbar}<div class='sub-desc'><p>Toolbar to set as the Activity's action bar, or {@code null} to clear it</p>\n</div></li></ul></div></div></div><div id='method-setContentTransitionManager' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setContentTransitionManager' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setContentTransitionManager' class='name expandable'>setContentTransitionManager</a>( <span class='pre'>tm</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the android.app.FragmentTransaction.TransitionManager to use for default transitions in this window. ...</div><div class='long'><p>Set the android.app.FragmentTransaction.TransitionManager to use for default transitions in this window.\n Requires Window.FEATURE_CONTENT_TRANSITIONS.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tm</span> : Object {TransitionManager}<div class='sub-desc'><p>The TransitionManager to use for scene changes.</p>\n</div></li></ul></div></div></div><div id='method-setContentView' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setContentView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setContentView' class='name expandable'>setContentView</a>( <span class='pre'>view, params</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the activity content to an explicit view. ...</div><div class='long'><p>Set the activity content to an explicit view.  This view is placed\n directly into the activity's view hierarchy.  It can itself be a complex\n view hierarchy.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The desired content to display.</p>\n</div></li><li><span class='pre'>params</span> : Object {ViewGroup.LayoutParams}<div class='sub-desc'><p>Layout parameters for the view.\n@see <a href=\"#!/api/android.app.Activity-method-setContentView\" rel=\"android.app.Activity-method-setContentView\" class=\"docClass\">setContentView</a>(android.view.View)\n@see <a href=\"#!/api/android.app.Activity-method-setContentView\" rel=\"android.app.Activity-method-setContentView\" class=\"docClass\">setContentView</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-setDefaultKeyMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setDefaultKeyMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setDefaultKeyMode' class='name expandable'>setDefaultKeyMode</a>( <span class='pre'>mode</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Select the default key handling for this activity. ...</div><div class='long'><p>Select the default key handling for this activity.  This controls what\n will happen to key events that are not otherwise handled.  The default\n mode (<a href=\"#!/api/android.app.Activity-property-DEFAULT_KEYS_DISABLE\" rel=\"android.app.Activity-property-DEFAULT_KEYS_DISABLE\" class=\"docClass\">DEFAULT_KEYS_DISABLE</a>) will simply drop them on the\n floor. Other modes allow you to launch the dialer\n (<a href=\"#!/api/android.app.Activity-property-DEFAULT_KEYS_DIALER\" rel=\"android.app.Activity-property-DEFAULT_KEYS_DIALER\" class=\"docClass\">DEFAULT_KEYS_DIALER</a>), execute a shortcut in your options\n menu without requiring the menu key be held down\n (<a href=\"#!/api/android.app.Activity-property-DEFAULT_KEYS_SHORTCUT\" rel=\"android.app.Activity-property-DEFAULT_KEYS_SHORTCUT\" class=\"docClass\">DEFAULT_KEYS_SHORTCUT</a>), or launch a search (<a href=\"#!/api/android.app.Activity-property-DEFAULT_KEYS_SEARCH_LOCAL\" rel=\"android.app.Activity-property-DEFAULT_KEYS_SEARCH_LOCAL\" class=\"docClass\">DEFAULT_KEYS_SEARCH_LOCAL</a>\n and <a href=\"#!/api/android.app.Activity-property-DEFAULT_KEYS_SEARCH_GLOBAL\" rel=\"android.app.Activity-property-DEFAULT_KEYS_SEARCH_GLOBAL\" class=\"docClass\">DEFAULT_KEYS_SEARCH_GLOBAL</a>).</p>\n\n<p> <p>Note that the mode selected here does not impact the default\n handling of system keys, such as the \"back\" and \"menu\" keys, and your\n activity and its views always get a first chance to receive and handle\n all application keys.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mode</span> : Number<div class='sub-desc'><p>The desired default key mode constant.\n@see <a href=\"#!/api/android.app.Activity-method-onKeyDown\" rel=\"android.app.Activity-method-onKeyDown\" class=\"docClass\">onKeyDown</a></p>\n</div></li></ul></div></div></div><div id='method-setEnterSharedElementCallback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setEnterSharedElementCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setEnterSharedElementCallback' class='name expandable'>setEnterSharedElementCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>When android.view.View, String) was used to start an Activity, callback\n will be called to handle shared elements on ...</div><div class='long'><p>When android.view.View, String) was used to start an Activity, <var>callback</var>\n will be called to handle shared elements on the <i>launched</i> Activity. This requires\n Window.FEATURE_ACTIVITY_TRANSITIONS.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {SharedElementCallback}<div class='sub-desc'><p>Used to manipulate shared element transitions on the launched Activity.</p>\n</div></li></ul></div></div></div><div id='method-setExitSharedElementCallback' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setExitSharedElementCallback' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setExitSharedElementCallback' class='name expandable'>setExitSharedElementCallback</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>When android.view.View, String) was used to start an Activity, callback\n will be called to handle shared elements on ...</div><div class='long'><p>When android.view.View, String) was used to start an Activity, <var>callback</var>\n will be called to handle shared elements on the <i>launching</i> Activity. Most\n calls will only come when returning from the started Activity.\n This requires Window.FEATURE_ACTIVITY_TRANSITIONS.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {SharedElementCallback}<div class='sub-desc'><p>Used to manipulate shared element transitions on the launching Activity.</p>\n</div></li></ul></div></div></div><div id='method-setFeatureDrawable' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setFeatureDrawable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setFeatureDrawable' class='name expandable'>setFeatureDrawable</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for calling\n Drawable). ...</div><div class='long'><p>Convenience for calling\n Drawable).</p>\n</div></div></div><div id='method-setFeatureDrawableAlpha' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setFeatureDrawableAlpha' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setFeatureDrawableAlpha' class='name expandable'>setFeatureDrawableAlpha</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for calling\n android.view.Window.setFeatureDrawableAlpha. ...</div><div class='long'><p>Convenience for calling\n android.view.Window.setFeatureDrawableAlpha.</p>\n</div></div></div><div id='method-setFeatureDrawableResource' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setFeatureDrawableResource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setFeatureDrawableResource' class='name expandable'>setFeatureDrawableResource</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for calling\n android.view.Window.setFeatureDrawableResource. ...</div><div class='long'><p>Convenience for calling\n android.view.Window.setFeatureDrawableResource.</p>\n</div></div></div><div id='method-setFeatureDrawableUri' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setFeatureDrawableUri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setFeatureDrawableUri' class='name expandable'>setFeatureDrawableUri</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Convenience for calling\n android.view.Window.setFeatureDrawableUri. ...</div><div class='long'><p>Convenience for calling\n android.view.Window.setFeatureDrawableUri.</p>\n</div></div></div><div id='method-setFinishOnTouchOutside' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setFinishOnTouchOutside' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setFinishOnTouchOutside' class='name expandable'>setFinishOnTouchOutside</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets whether this activity is finished when touched outside its window's\n bounds. ...</div><div class='long'><p>Sets whether this activity is finished when touched outside its window's\n bounds.</p>\n</div></div></div><div id='method-setImmersive' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setImmersive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setImmersive' class='name expandable'>setImmersive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjust the current immersive mode setting. ...</div><div class='long'><p>Adjust the current immersive mode setting.</p>\n\n<p> Note that changing this value will have no effect on the activity's\n android.content.pm.ActivityInfo structure; that is, if\n <code>android:immersive</code> is set to <code>true</code>\n in the application's manifest entry for this activity, the android.app.ActivityInfo.flags member will\n always have its FLAG_IMMERSIVE bit set.\n@see <a href=\"#!/api/android.app.Activity-method-isImmersive\" rel=\"android.app.Activity-method-isImmersive\" class=\"docClass\">isImmersive</a>()\n@see android.content.pm.ActivityInfo#FLAG_IMMERSIVE</p>\n</div></div></div><div id='method-setInheritShowWhenLocked' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setInheritShowWhenLocked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setInheritShowWhenLocked' class='name expandable'>setInheritShowWhenLocked</a>( <span class='pre'>inheritShowWhenLocked</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies whether this android.app.Activity should be shown on top of the lock screen whenever\n the lockscreen is up ...</div><div class='long'><p>Specifies whether this <a href=\"#!/api/android.app.Activity\" rel=\"android.app.Activity\" class=\"docClass\">android.app.Activity</a> should be shown on top of the lock screen whenever\n the lockscreen is up and this activity has another activity behind it with the showWhenLock\n attribute set. That is, this activity is only visible on the lock screen if there is another\n activity with the showWhenLock attribute visible at the same time on the lock screen. A use\n case for this is permission dialogs, that should only be visible on the lock screen if their\n requesting activity is also visible. This value can be set as a manifest attribute using\n android.R.attr#inheritShowWhenLocked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>inheritShowWhenLocked</span> : Boolean<div class='sub-desc'><p>{@code true} to show the Activity on top of the lock\n                              screen when this activity has another activity behind it with\n                              the showWhenLock attribute set; {@code false} otherwise.\n@see <a href=\"#!/api/android.app.Activity-method-setShowWhenLocked\" rel=\"android.app.Activity-method-setShowWhenLocked\" class=\"docClass\">setShowWhenLocked</a>(boolean)\n@see android.R.attr#inheritShowWhenLocked</p>\n</div></li></ul></div></div></div><div id='method-setIntent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setIntent' class='name expandable'>setIntent</a>( <span class='pre'>newIntent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the intent returned by getIntent. ...</div><div class='long'><p>Change the intent returned by <a href=\"#!/api/android.app.Activity-method-getIntent\" rel=\"android.app.Activity-method-getIntent\" class=\"docClass\">getIntent</a>.  This holds a\n reference to the given intent; it does not copy it.  Often used in\n conjunction with onNewIntent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newIntent</span> : Object {Intent}<div class='sub-desc'><p>The new Intent object to return from getIntent\n@see <a href=\"#!/api/android.app.Activity-method-getIntent\" rel=\"android.app.Activity-method-getIntent\" class=\"docClass\">getIntent</a>\n@see #onNewIntent</p>\n</div></li></ul></div></div></div><div id='method-setMediaController' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setMediaController' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setMediaController' class='name expandable'>setMediaController</a>( <span class='pre'>controller</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets a MediaController to send media keys and volume changes to. ...</div><div class='long'><p>Sets a MediaController to send media keys and volume changes to.\n <p>\n The controller will be tied to the window of this Activity. Media key and\n volume events which are received while the Activity is in the foreground\n will be forwarded to the controller and used to invoke transport controls\n or adjust the volume. This may be used instead of or in addition to\n <a href=\"#!/api/android.app.Activity-method-setVolumeControlStream\" rel=\"android.app.Activity-method-setVolumeControlStream\" class=\"docClass\">setVolumeControlStream</a> to affect a specific session instead of a\n specific stream.\n <p>\n It is not guaranteed that the hardware volume controls will always change\n this session's volume (for example, if a call is in progress, its\n stream's volume may be changed instead). To reset back to the default use\n null as the controller.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>controller</span> : Object {MediaController}<div class='sub-desc'><p>The controller for the session which should receive\n            media keys and volume changes.</p>\n</div></li></ul></div></div></div><div id='method-setPictureInPictureArgs' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setPictureInPictureArgs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setPictureInPictureArgs' class='name expandable'>setPictureInPictureArgs</a>( <span class='pre'></span> )<span class=\"signature\"><span class='removed' >removed</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box removed-box deprecated-tag-box'>\n        <p>This method has been <strong>removed</strong> </p>\n        \n\n        </div>\n</div></div></div><div id='method-setPictureInPictureParams' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setPictureInPictureParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setPictureInPictureParams' class='name expandable'>setPictureInPictureParams</a>( <span class='pre'>params</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Updates the properties of the picture-in-picture activity, or sets it to be used later when\n enterPictureInPictureMod...</div><div class='long'><p>Updates the properties of the picture-in-picture activity, or sets it to be used later when\n <a href=\"#!/api/android.app.Activity-method-enterPictureInPictureMode\" rel=\"android.app.Activity-method-enterPictureInPictureMode\" class=\"docClass\">enterPictureInPictureMode</a>() is called.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>params</span> : Object {PictureInPictureParams}<div class='sub-desc'><p>the new parameters for the picture-in-picture.</p>\n</div></li></ul></div></div></div><div id='method-setProgress' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setProgress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setProgress' class='name expandable'>setProgress</a>( <span class='pre'>progress</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the progress for the progress bars in the title. ...</div><div class='long'><p>Sets the progress for the progress bars in the title.\n <p>\n In order for the progress bar to be shown, the feature must be requested\n via <a href=\"#!/api/android.app.Activity-method-requestWindowFeature\" rel=\"android.app.Activity-method-requestWindowFeature\" class=\"docClass\">requestWindowFeature</a>(int).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>No longer supported starting in API 21.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>progress</span> : Number<div class='sub-desc'><p>The progress for the progress bar. Valid ranges are from\n            0 to 10000 (both inclusive). If 10000 is given, the progress\n            bar will be completely filled and will fade out.</p>\n</div></li></ul></div></div></div><div id='method-setProgressBarIndeterminate' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setProgressBarIndeterminate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setProgressBarIndeterminate' class='name expandable'>setProgressBarIndeterminate</a>( <span class='pre'>indeterminate</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets whether the horizontal progress bar in the title should be indeterminate (the circular\n is always indeterminate). ...</div><div class='long'><p>Sets whether the horizontal progress bar in the title should be indeterminate (the circular\n is always indeterminate).\n <p>\n In order for the progress bar to be shown, the feature must be requested\n via <a href=\"#!/api/android.app.Activity-method-requestWindowFeature\" rel=\"android.app.Activity-method-requestWindowFeature\" class=\"docClass\">requestWindowFeature</a>(int).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>No longer supported starting in API 21.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>indeterminate</span> : Boolean<div class='sub-desc'><p>Whether the horizontal progress bar should be indeterminate.</p>\n</div></li></ul></div></div></div><div id='method-setProgressBarIndeterminateVisibility' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setProgressBarIndeterminateVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setProgressBarIndeterminateVisibility' class='name expandable'>setProgressBarIndeterminateVisibility</a>( <span class='pre'>visible</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the visibility of the indeterminate progress bar in the title. ...</div><div class='long'><p>Sets the visibility of the indeterminate progress bar in the title.\n <p>\n In order for the progress bar to be shown, the feature must be requested\n via <a href=\"#!/api/android.app.Activity-method-requestWindowFeature\" rel=\"android.app.Activity-method-requestWindowFeature\" class=\"docClass\">requestWindowFeature</a>(int).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>No longer supported starting in API 21.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>visible</span> : Boolean<div class='sub-desc'><p>Whether to show the progress bars in the title.</p>\n</div></li></ul></div></div></div><div id='method-setProgressBarVisibility' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setProgressBarVisibility' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setProgressBarVisibility' class='name expandable'>setProgressBarVisibility</a>( <span class='pre'>visible</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the visibility of the progress bar in the title. ...</div><div class='long'><p>Sets the visibility of the progress bar in the title.\n <p>\n In order for the progress bar to be shown, the feature must be requested\n via <a href=\"#!/api/android.app.Activity-method-requestWindowFeature\" rel=\"android.app.Activity-method-requestWindowFeature\" class=\"docClass\">requestWindowFeature</a>(int).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>No longer supported starting in API 21.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>visible</span> : Boolean<div class='sub-desc'><p>Whether to show the progress bars in the title.</p>\n</div></li></ul></div></div></div><div id='method-setRequestedOrientation' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setRequestedOrientation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setRequestedOrientation' class='name expandable'>setRequestedOrientation</a>( <span class='pre'>requestedOrientation</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the desired orientation of this activity. ...</div><div class='long'><p>Change the desired orientation of this activity.  If the activity\n is currently in the foreground or otherwise impacting the screen\n orientation, the screen will immediately be changed (possibly causing\n the activity to be restarted). Otherwise, this will be used the next\n time the activity is visible.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestedOrientation</span> : Number<div class='sub-desc'><p>An orientation constant as used in\n ActivityInfo.screenOrientation.</p>\n</div></li></ul></div></div></div><div id='method-setResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setResult' class='name expandable'>setResult</a>( <span class='pre'>resultCode, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call this to set the result that your activity will return to its\n caller. ...</div><div class='long'><p>Call this to set the result that your activity will return to its\n caller.</p>\n\n<p> <p>As of android.os.Build.VERSION_CODES.GINGERBREAD, the Intent\n you supply here can have Intent.FLAG_GRANT_READ_URI_PERMISSION and/or Intent.FLAG_GRANT_WRITE_URI_PERMISSION set.  This will grant the\n Activity receiving the result access to the specific URIs in the Intent.\n Access will remain until the Activity has finished (it will remain across the hosting\n process being killed and other temporary destruction) and will be added\n to any existing set of URI permissions it already holds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>resultCode</span> : Number<div class='sub-desc'><p>The result code to propagate back to the originating\n                   activity, often RESULT_CANCELED or RESULT_OK</p>\n</div></li><li><span class='pre'>data</span> : Object {Intent}<div class='sub-desc'><p>The data to propagate back to the originating activity.\n@see <a href=\"#!/api/android.app.Activity-property-RESULT_CANCELED\" rel=\"android.app.Activity-property-RESULT_CANCELED\" class=\"docClass\">RESULT_CANCELED</a>\n@see <a href=\"#!/api/android.app.Activity-property-RESULT_OK\" rel=\"android.app.Activity-property-RESULT_OK\" class=\"docClass\">RESULT_OK</a>\n@see <a href=\"#!/api/android.app.Activity-property-RESULT_FIRST_USER\" rel=\"android.app.Activity-property-RESULT_FIRST_USER\" class=\"docClass\">RESULT_FIRST_USER</a>\n@see <a href=\"#!/api/android.app.Activity-method-setResult\" rel=\"android.app.Activity-method-setResult\" class=\"docClass\">setResult</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-setSecondaryProgress' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setSecondaryProgress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setSecondaryProgress' class='name expandable'>setSecondaryProgress</a>( <span class='pre'>secondaryProgress</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Sets the secondary progress for the progress bar in the title. ...</div><div class='long'><p>Sets the secondary progress for the progress bar in the title. This\n progress is drawn between the primary progress (set via\n <a href=\"#!/api/android.app.Activity-method-setProgress\" rel=\"android.app.Activity-method-setProgress\" class=\"docClass\">setProgress</a>(int) and the background. It can be ideal for media\n scenarios such as showing the buffering progress while the default\n progress shows the play progress.\n <p>\n In order for the progress bar to be shown, the feature must be requested\n via <a href=\"#!/api/android.app.Activity-method-requestWindowFeature\" rel=\"android.app.Activity-method-requestWindowFeature\" class=\"docClass\">requestWindowFeature</a>(int).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>No longer supported starting in API 21.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>secondaryProgress</span> : Number<div class='sub-desc'><p>The secondary progress for the progress bar. Valid ranges are from\n            0 to 10000 (both inclusive).</p>\n</div></li></ul></div></div></div><div id='method-setShowWhenLocked' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setShowWhenLocked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setShowWhenLocked' class='name expandable'>setShowWhenLocked</a>( <span class='pre'>showWhenLocked</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies whether an android.app.Activity should be shown on top of the lock screen whenever\n the lockscreen is up an...</div><div class='long'><p>Specifies whether an <a href=\"#!/api/android.app.Activity\" rel=\"android.app.Activity\" class=\"docClass\">android.app.Activity</a> should be shown on top of the lock screen whenever\n the lockscreen is up and the activity is resumed. Normally an activity will be transitioned\n to the stopped state if it is started while the lockscreen is up, but with this flag set the\n activity will remain in the resumed state visible on-top of the lock screen. This value can\n be set as a manifest attribute using android.R.attr.showWhenLocked.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>showWhenLocked</span> : Boolean<div class='sub-desc'><p>{@code true} to show the Activity on top of the lock screen;\n                                   {@code false} otherwise.\n@see <a href=\"#!/api/android.app.Activity-method-setTurnScreenOn\" rel=\"android.app.Activity-method-setTurnScreenOn\" class=\"docClass\">setTurnScreenOn</a>(boolean)\n@see android.R.attr#turnScreenOn\n@see android.R.attr#showWhenLocked</p>\n</div></li></ul></div></div></div><div id='method-setTaskDescription' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setTaskDescription' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setTaskDescription' class='name expandable'>setTaskDescription</a>( <span class='pre'>taskDescription, taskDescription</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets information describing the task with this activity for presentation inside the Recents\n System UI. ...</div><div class='long'><p>Sets information describing the task with this activity for presentation inside the Recents\n System UI. When <a href=\"#!/api/android.app.ActivityManager-method-getRecentTasks\" rel=\"android.app.ActivityManager-method-getRecentTasks\" class=\"docClass\">android.app.ActivityManager.getRecentTasks</a> is called, the activities of each task\n are traversed in order from the topmost activity to the bottommost. The traversal continues\n for each property until a suitable value is found. For each task the taskDescription will be\n returned in <a href=\"#!/api/android.app.ActivityManager.TaskDescription\" rel=\"android.app.ActivityManager.TaskDescription\" class=\"docClass\">android.app.ActivityManager.TaskDescription</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>taskDescription</span> : Object {ActivityManager.TaskDescription}<div class='sub-desc'><p>The TaskDescription properties that describe the task with this activity\n@see <a href=\"#!/api/android.app.ActivityManager.TaskDescription\" rel=\"android.app.ActivityManager.TaskDescription\" class=\"docClass\">android.app.ActivityManager.TaskDescription</a></p>\n</div></li><li><span class='pre'>taskDescription</span> : Object<div class='sub-desc'><p>The TaskDescription properties that describe the task with this activity</p>\n</div></li></ul></div></div></div><div id='method-setTheme' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setTheme' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setTheme' class='name expandable'>setTheme</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setTitle' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setTitle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setTitle' class='name expandable'>setTitle</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Change the title associated with this activity. ...</div><div class='long'><p>Change the title associated with this activity.  If this is a\n top-level activity, the title for its window will change.  If it\n is an embedded activity, the parent can do whatever it wants\n with it.</p>\n</div></div></div><div id='method-setTitleColor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setTitleColor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setTitleColor' class='name expandable'>setTitleColor</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Change the color of the title associated with this activity. ...</div><div class='long'><p>Change the color of the title associated with this activity.\n <p>\n This method is deprecated starting in API Level 11 and replaced by action\n bar styles. For information on styling the Action Bar, read the <a\n href=\"{@docRoot} guide/topics/ui/actionbar.html\">Action Bar</a> developer\n guide.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use action bar styles instead.</p>\n\n        </div>\n</div></div></div><div id='method-setTurnScreenOn' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setTurnScreenOn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setTurnScreenOn' class='name expandable'>setTurnScreenOn</a>( <span class='pre'>turnScreenOn</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies whether the screen should be turned on when the android.app.Activity is resumed. ...</div><div class='long'><p>Specifies whether the screen should be turned on when the <a href=\"#!/api/android.app.Activity\" rel=\"android.app.Activity\" class=\"docClass\">android.app.Activity</a> is resumed.\n Normally an activity will be transitioned to the stopped state if it is started while the\n screen if off, but with this flag set the activity will cause the screen to turn on if the\n activity will be visible and resumed due to the screen coming on. The screen will not be\n turned on if the activity won't be visible after the screen is turned on. This flag is\n normally used in conjunction with the android.R.attr.showWhenLocked flag to make sure\n the activity is visible after the screen is turned on when the lockscreen is up. In addition,\n if this flag is set and the activity calls android.app.KeyguardManager.KeyguardDismissCallback)\n the screen will turn on.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>turnScreenOn</span> : Boolean<div class='sub-desc'><p>{@code true} to turn on the screen; {@code false} otherwise.\n@see <a href=\"#!/api/android.app.Activity-method-setShowWhenLocked\" rel=\"android.app.Activity-method-setShowWhenLocked\" class=\"docClass\">setShowWhenLocked</a>(boolean)\n@see android.R.attr#turnScreenOn\n@see android.R.attr#showWhenLocked</p>\n</div></li></ul></div></div></div><div id='method-setVisible' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setVisible' class='name expandable'>setVisible</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Control whether this activity's main window is visible. ...</div><div class='long'><p>Control whether this activity's main window is visible.  This is intended\n only for the special case of an activity that is not going to show a\n UI itself, but can't just finish prior to onResume() because it needs\n to wait for a service binding or such.  Setting this to false allows\n you to prevent your UI from being shown during that time.</p>\n\n<p> <p>The default value for this is taken from the\n android.R.attr.windowNoDisplay attribute of the activity's theme.</p>\n</div></div></div><div id='method-setVolumeControlStream' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setVolumeControlStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setVolumeControlStream' class='name expandable'>setVolumeControlStream</a>( <span class='pre'>streamType</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Suggests an audio stream whose volume should be changed by the hardware\n volume controls. ...</div><div class='long'><p>Suggests an audio stream whose volume should be changed by the hardware\n volume controls.\n <p>\n The suggested audio stream will be tied to the window of this Activity.\n Volume requests which are received while the Activity is in the\n foreground will affect this stream.\n <p>\n It is not guaranteed that the hardware volume controls will always change\n this stream's volume (for example, if a call is in progress, its stream's\n volume may be changed instead). To reset back to the default, use\n AudioManager.USE_DEFAULT_STREAM_TYPE.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>streamType</span> : Number<div class='sub-desc'><p>The type of the audio stream whose volume should be\n            changed by the hardware volume controls.</p>\n</div></li></ul></div></div></div><div id='method-setVrModeEnabled' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-setVrModeEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-setVrModeEnabled' class='name expandable'>setVrModeEnabled</a>( <span class='pre'>enabled, requestedComponent</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable or disable virtual reality (VR) mode for this Activity. ...</div><div class='long'><p>Enable or disable virtual reality (VR) mode for this Activity.</p>\n\n<p> <p>VR mode is a hint to Android system to switch to a mode optimized for VR applications\n while this Activity has user focus.</p></p>\n\n<p> <p>It is recommended that applications additionally declare\n android.R.attr.enableVrMode in their manifest to allow for smooth activity\n transitions when switching between VR activities.</p></p>\n\n<p> <p>If the requested android.service.vr.VrListenerService component is not available,\n VR mode will not be started.  Developers can handle this case as follows:</p></p>\n\n<pre> String servicePackage = \"com.whatever.app\";\n String serviceClass = \"com.whatever.app.MyVrListenerService\";\n\n // Name of the component of the VrListenerService to start.\n ComponentName serviceComponent = new ComponentName(servicePackage, serviceClass);\n\n try {\n    setVrModeEnabled(true, myComponentName);\n } catch (PackageManager.NameNotFoundException e) {\n        List&lt;ApplicationInfo> installed = getPackageManager().getInstalledApplications(0);\n        boolean isInstalled = false;\n        for (ApplicationInfo app : installed) {\n            if (app.packageName.equals(servicePackage)) {\n                isInstalled = true;\n                break;\n            }\n        }\n        if (isInstalled) {\n            // Package is installed, but not enabled in Settings.  Let user enable it.\n            startActivity(new Intent(Settings.ACTION_VR_LISTENER_SETTINGS));\n        } else {\n            // Package is not installed.  Send an intent to download this.\n            sentIntentToLaunchAppStore(servicePackage);\n        }\n }\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>{@code true} to enable this mode.</p>\n</div></li><li><span class='pre'>requestedComponent</span> : Object {ComponentName}<div class='sub-desc'><p>the name of the component to use as a\n        android.service.vr.VrListenerService while VR mode is enabled.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.pm.PackageManager.NameNotFoundException if the given component\n    to run as a android.service.vr.VrListenerService is not installed, or has\n    not been enabled in user settings.\n@see android.content.pm.PackageManager#FEATURE_VR_MODE_HIGH_PERFORMANCE\n@see android.service.vr.VrListenerService\n@see android.provider.Settings#ACTION_VR_LISTENER_SETTINGS\n@see android.R.attr#enableVrMode</p>\n</div></li></ul></div></div></div><div id='method-shouldShowRequestPermissionRationale' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-shouldShowRequestPermissionRationale' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-shouldShowRequestPermissionRationale' class='name expandable'>shouldShowRequestPermissionRationale</a>( <span class='pre'>permission</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets whether you should show UI with rationale for requesting a permission. ...</div><div class='long'><p>Gets whether you should show UI with rationale for requesting a permission.\n You should do this only if you do not have the permission and the context in\n which the permission is requested does not clearly communicate to the user\n what would be the benefit from granting this permission.\n <p>\n For example, if you write a camera app, requesting the camera permission\n would be expected by the user and no rationale for why it is requested is\n needed. If however, the app needs location for tagging photos then a non-tech\n savvy user may wonder how location is related to taking photos. In this case\n you may choose to show UI with rationale of requesting this permission.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>permission</span> : String<div class='sub-desc'><p>A permission your app wants to request.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether you can show permission rationale UI.\n@see #checkSelfPermission(String)\n@see <a href=\"#!/api/android.app.Activity-method-requestPermissions\" rel=\"android.app.Activity-method-requestPermissions\" class=\"docClass\">requestPermissions</a>(String[], int)\n@see <a href=\"#!/api/android.app.Activity-method-onRequestPermissionsResult\" rel=\"android.app.Activity-method-onRequestPermissionsResult\" class=\"docClass\">onRequestPermissionsResult</a>(int, String[], int[])</p>\n</div></li></ul></div></div></div><div id='method-shouldUpRecreateTask' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-shouldUpRecreateTask' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-shouldUpRecreateTask' class='name expandable'>shouldUpRecreateTask</a>( <span class='pre'>targetIntent</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the app should recreate the task when navigating 'up' from this activity\n by using targetIntent. ...</div><div class='long'><p>Returns true if the app should recreate the task when navigating 'up' from this activity\n by using targetIntent.</p>\n\n<p> <p>If this method returns false the app can trivially call\n <a href=\"#!/api/android.app.Activity-method-navigateUpTo\" rel=\"android.app.Activity-method-navigateUpTo\" class=\"docClass\">navigateUpTo</a>(Intent) using the same parameters to correctly perform\n up navigation. If this method returns false, the app should synthesize a new task stack\n by using <a href=\"#!/api/android.app.TaskStackBuilder\" rel=\"android.app.TaskStackBuilder\" class=\"docClass\">android.app.TaskStackBuilder</a> or another similar mechanism to perform up navigation.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetIntent</span> : Object {Intent}<div class='sub-desc'><p>An intent representing the target destination for up navigation</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if navigating up should recreate a new task stack, false if the same task\n         should be used for the destination</p>\n</div></li></ul></div></div></div><div id='method-showAssist' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-showAssist' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-showAssist' class='name expandable'>showAssist</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Ask to have the current assistant shown to the user. ...</div><div class='long'><p>Ask to have the current assistant shown to the user.  This only works if the calling\n activity is the current foreground activity.  It is the same as calling\n VoiceInteractionService.showSession and requesting all of the possible context.\n The receiver will always see\n android.service.voice.VoiceInteractionSession.SHOW_SOURCE_APPLICATION set.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if the assistant was successfully invoked, else false.  For example\n false will be returned if the caller is not the current top activity.</p>\n</div></li></ul></div></div></div><div id='method-showDialog' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-showDialog' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-showDialog' class='name expandable'>showDialog</a>( <span class='pre'>id, args</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Show a dialog managed by this activity. ...</div><div class='long'><p>Show a dialog managed by this activity.  A call to Bundle)\n will be made with the same id the first time this is called for a given\n id.  From thereafter, the dialog will be automatically saved and restored.</p>\n\n<p> <em>If you are targeting android.os.Build.VERSION_CODES.HONEYCOMB\n or later, consider instead using a <a href=\"#!/api/android.app.DialogFragment\" rel=\"android.app.DialogFragment\" class=\"docClass\">android.app.DialogFragment</a> instead.</em></p>\n\n<p> <p>Each time a dialog is shown, android.app.Dialog, Bundle) will\n be made to provide an opportunity to do any timely preparation.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use the new DialogFragment class with\n FragmentManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>The id of the managed dialog.</p>\n</div></li><li><span class='pre'>args</span> : Object {Bundle}<div class='sub-desc'><p>Arguments to pass through to the dialog.  These will be saved\n and restored for you.  Note that if the dialog is already created,\n Bundle) will not be called with the new\n arguments but Dialog, Bundle) will be.\n If you need to rebuild the dialog, call removeDialog(int) first.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns true if the Dialog was created; false is returned if\n it is not created because Bundle) returns false.\n@see Dialog\n@see #onCreateDialog(int, Bundle)\n@see #onPrepareDialog(int, Dialog, Bundle)\n@see <a href=\"#!/api/android.app.Activity-method-dismissDialog\" rel=\"android.app.Activity-method-dismissDialog\" class=\"docClass\">dismissDialog</a>(int)\n@see <a href=\"#!/api/android.app.Activity-method-removeDialog\" rel=\"android.app.Activity-method-removeDialog\" class=\"docClass\">removeDialog</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-showLockTaskEscapeMessage' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-showLockTaskEscapeMessage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-showLockTaskEscapeMessage' class='name expandable'>showLockTaskEscapeMessage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Shows the user the system defined message for telling the user how to exit\n lock task mode. ...</div><div class='long'><p>Shows the user the system defined message for telling the user how to exit\n lock task mode. The task containing this activity must be in lock task mode at the time\n of this call for the message to be displayed.</p>\n</div></div></div><div id='method-startActionMode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startActionMode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startActionMode' class='name expandable'>startActionMode</a>( <span class='pre'>callback, type</span> ) : Object {android.view.ActionMode}<span class=\"signature\"></span></div><div class='description'><div class='short'>Start an action mode of the given type. ...</div><div class='long'><p>Start an action mode of the given type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {ActionMode.Callback}<div class='sub-desc'><p>Callback that will manage lifecycle events for this action mode</p>\n</div></li><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>One of ActionMode.TYPE_PRIMARY or ActionMode.TYPE_FLOATING.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.ActionMode}</span><div class='sub-desc'><p>The ActionMode that was started, or null if it was canceled\n@see ActionMode</p>\n</div></li></ul></div></div></div><div id='method-startActivities' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startActivities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startActivities' class='name expandable'>startActivities</a>( <span class='pre'>intents, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Launch a new activity. ...</div><div class='long'><p>Launch a new activity.  You will not receive any information about when\n the activity exits.  This implementation overrides the base version,\n providing information about\n the activity performing the launch.  Because of this additional\n information, the Intent.FLAG_ACTIVITY_NEW_TASK launch flag is not\n required; if not specified, the new activity will be added to the\n task of the caller.</p>\n\n<p> <p>This method throws android.content.ActivityNotFoundException\n if there was no Activity found to run the given Intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intents</span> : Object {android.content.Intent[]}<div class='sub-desc'><p>The intents to start.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.ActivityNotFoundException\n@see <a href=\"#!/api/android.app.Activity-method-startActivities\" rel=\"android.app.Activity-method-startActivities\" class=\"docClass\">startActivities</a>(Intent[])\n@see #startActivityForResult</p>\n</div></li></ul></div></div></div><div id='method-startActivity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startActivity' class='name expandable'>startActivity</a>( <span class='pre'>intent, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Launch a new activity. ...</div><div class='long'><p>Launch a new activity.  You will not receive any information about when\n the activity exits.  This implementation overrides the base version,\n providing information about\n the activity performing the launch.  Because of this additional\n information, the Intent.FLAG_ACTIVITY_NEW_TASK launch flag is not\n required; if not specified, the new activity will be added to the\n task of the caller.</p>\n\n<p> <p>This method throws android.content.ActivityNotFoundException\n if there was no Activity found to run the given Intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent to start.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.ActivityNotFoundException\n@see <a href=\"#!/api/android.app.Activity-method-startActivity\" rel=\"android.app.Activity-method-startActivity\" class=\"docClass\">startActivity</a>(Intent)\n@see #startActivityForResult</p>\n</div></li></ul></div></div></div><div id='method-startActivityFromChild' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startActivityFromChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startActivityFromChild' class='name expandable'>startActivityFromChild</a>( <span class='pre'>child, intent, requestCode, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is called when a child activity of this one calls its\n startActivity or startActivityForResult method. ...</div><div class='long'><p>This is called when a child activity of this one calls its\n <a href=\"#!/api/android.app.Activity-method-startActivity\" rel=\"android.app.Activity-method-startActivity\" class=\"docClass\">startActivity</a> or startActivityForResult method.</p>\n\n<p> <p>This method throws android.content.ActivityNotFoundException\n if there was no Activity found to run the given Intent.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>child</span> : Object {Activity}<div class='sub-desc'><p>The activity making the call.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent to start.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Reply request code.  &lt; 0 if reply is not requested.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.ActivityNotFoundException\n@see <a href=\"#!/api/android.app.Activity-method-startActivity\" rel=\"android.app.Activity-method-startActivity\" class=\"docClass\">startActivity</a>\n@see #startActivityForResult</p>\n</div></li></ul></div></div></div><div id='method-startActivityFromFragment' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startActivityFromFragment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startActivityFromFragment' class='name expandable'>startActivityFromFragment</a>( <span class='pre'>fragment, intent, requestCode, options</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This is called when a Fragment in this activity calls its\n android.app.Fragment.startActivity or android.app.Fragment...</div><div class='long'><p>This is called when a Fragment in this activity calls its\n <a href=\"#!/api/android.app.Fragment-method-startActivity\" rel=\"android.app.Fragment-method-startActivity\" class=\"docClass\">android.app.Fragment.startActivity</a> or <a href=\"#!/api/android.app.Fragment-method-startActivityForResult\" rel=\"android.app.Fragment-method-startActivityForResult\" class=\"docClass\">android.app.Fragment.startActivityForResult</a>\n method.</p>\n\n<p> <p>This method throws android.content.ActivityNotFoundException\n if there was no Activity found to run the given Intent.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use android.support.v4.app.Fragment,Intent,int,Bundle)</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fragment</span> : Object {Fragment}<div class='sub-desc'><p>The fragment making the call.</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent to start.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>Reply request code.  &lt; 0 if reply is not requested.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.ActivityNotFoundException\n@see Fragment#startActivity\n@see Fragment#startActivityForResult</p>\n</div></li></ul></div></div></div><div id='method-startActivityIfNeeded' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startActivityIfNeeded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startActivityIfNeeded' class='name expandable'>startActivityIfNeeded</a>( <span class='pre'>intent, requestCode, options</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>A special variation to launch an activity only if a new activity\n instance is needed to handle the given Intent. ...</div><div class='long'><p>A special variation to launch an activity only if a new activity\n instance is needed to handle the given Intent.  In other words, this is\n just like int) except: if you are\n using the Intent.FLAG_ACTIVITY_SINGLE_TOP flag, or\n singleTask or singleTop\n launchMode,\n and the activity\n that handles <var>intent</var> is the same as your currently running\n activity, then a new instance is not needed.  In this case, instead of\n the normal behavior of calling onNewIntent this function will\n return and you can handle the Intent yourself.</p>\n\n<p> <p>This function can only be called from a top-level activity; if it is\n called from a child activity, a runtime exception will be thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent to start.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>If >= 0, this code will be returned in\n         onActivityResult() when the activity exits, as described in\n         startActivityForResult.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If a new activity was launched then true is returned; otherwise\n         false is returned and you must handle the Intent yourself.\n@see <a href=\"#!/api/android.app.Activity-method-startActivity\" rel=\"android.app.Activity-method-startActivity\" class=\"docClass\">startActivity</a>\n@see #startActivityForResult</p>\n</div></li></ul></div></div></div><div id='method-startIntentSender' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startIntentSender' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startIntentSender' class='name expandable'>startIntentSender</a>( <span class='pre'>intent, fillInIntent, flagsMask, flagsValues, extraFlags, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like Bundle), but taking a IntentSender\n to start; see\n int, Intent, int, int, int, Bundle)\n for more information. ...</div><div class='long'><p>Like Bundle), but taking a IntentSender\n to start; see\n int, Intent, int, int, int, Bundle)\n for more information.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {IntentSender}<div class='sub-desc'><p>The IntentSender to launch.</p>\n</div></li><li><span class='pre'>fillInIntent</span> : Object {Intent}<div class='sub-desc'><p>If non-null, this will be provided as the\n intent parameter to IntentSender.sendIntent.</p>\n</div></li><li><span class='pre'>flagsMask</span> : Number<div class='sub-desc'><p>Intent flags in the original IntentSender that you\n would like to change.</p>\n</div></li><li><span class='pre'>flagsValues</span> : Number<div class='sub-desc'><p>Desired values for any bits set in\n <var>flagsMask</var></p>\n</div></li><li><span class='pre'>extraFlags</span> : Number<div class='sub-desc'><p>Always set to 0.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.  If options\n have also been supplied by the IntentSender, options given here will\n override any that conflict with those given by the IntentSender.</p>\n</div></li></ul></div></div></div><div id='method-startIntentSenderForResult' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startIntentSenderForResult' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startIntentSenderForResult' class='name expandable'>startIntentSenderForResult</a>( <span class='pre'>intent, requestCode, fillInIntent, flagsMask, flagsValues, extraFlags, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like int), but allowing you\n to use a IntentSender to describe the activity to be started. ...</div><div class='long'><p>Like int), but allowing you\n to use a IntentSender to describe the activity to be started.  If\n the IntentSender is for an activity, that activity will be started\n as if you had called the regular int)\n here; otherwise, its associated action will be executed (such as\n sending a broadcast) as if you had called\n IntentSender.sendIntent on it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {IntentSender}<div class='sub-desc'><p>The IntentSender to launch.</p>\n</div></li><li><span class='pre'>requestCode</span> : Number<div class='sub-desc'><p>If >= 0, this code will be returned in\n                    onActivityResult() when the activity exits.</p>\n</div></li><li><span class='pre'>fillInIntent</span> : Object {Intent}<div class='sub-desc'><p>If non-null, this will be provided as the\n intent parameter to IntentSender.sendIntent.</p>\n</div></li><li><span class='pre'>flagsMask</span> : Number<div class='sub-desc'><p>Intent flags in the original IntentSender that you\n would like to change.</p>\n</div></li><li><span class='pre'>flagsValues</span> : Number<div class='sub-desc'><p>Desired values for any bits set in\n <var>flagsMask</var></p>\n</div></li><li><span class='pre'>extraFlags</span> : Number<div class='sub-desc'><p>Always set to 0.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.  If options\n have also been supplied by the IntentSender, options given here will\n override any that conflict with those given by the IntentSender.</p>\n</div></li></ul></div></div></div><div id='method-startIntentSenderFromChild' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startIntentSenderFromChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startIntentSenderFromChild' class='name expandable'>startIntentSenderFromChild</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Like Intent, int), but\n taking a IntentSender; see\n int, Intent, int, int, int)\n for more information. ...</div><div class='long'><p>Like Intent, int), but\n taking a IntentSender; see\n int, Intent, int, int, int)\n for more information.</p>\n</div></div></div><div id='method-startLocalVoiceInteraction' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startLocalVoiceInteraction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startLocalVoiceInteraction' class='name expandable'>startLocalVoiceInteraction</a>( <span class='pre'>privateOptions</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts a local voice interaction session. ...</div><div class='long'><p>Starts a local voice interaction session. When ready,\n <a href=\"#!/api/android.app.Activity-method-onLocalVoiceInteractionStarted\" rel=\"android.app.Activity-method-onLocalVoiceInteractionStarted\" class=\"docClass\">onLocalVoiceInteractionStarted</a>() is called. You can pass a bundle of private options\n to the registered voice interaction service.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>privateOptions</span> : Object {Bundle}<div class='sub-desc'><p>a Bundle of private arguments to the current voice interaction service</p>\n</div></li></ul></div></div></div><div id='method-startLockTask' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startLockTask' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startLockTask' class='name expandable'>startLockTask</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request to put this activity in a mode where the user is locked to a restricted set of\n applications. ...</div><div class='long'><p>Request to put this activity in a mode where the user is locked to a restricted set of\n applications.</p>\n\n<p> <p>If DevicePolicyManager.isLockTaskPermitted(String) returns {@code true}\n for this component, the current task will be launched directly into LockTask mode. Only apps\n whitelisted by String[]) can\n be launched while LockTask mode is active. The user will not be able to leave this mode\n until this activity calls <a href=\"#!/api/android.app.Activity-method-stopLockTask\" rel=\"android.app.Activity-method-stopLockTask\" class=\"docClass\">stopLockTask</a>(). Calling this method while the device is\n already in LockTask mode has no effect.</p>\n\n<p> <p>Otherwise, the current task will be launched into screen pinning mode. In this case, the\n system will prompt the user with a dialog requesting permission to use this mode.\n The user can exit at any time through instructions shown on the request dialog. Calling\n <a href=\"#!/api/android.app.Activity-method-stopLockTask\" rel=\"android.app.Activity-method-stopLockTask\" class=\"docClass\">stopLockTask</a>() will also terminate this mode.</p>\n\n<p> <p><strong>Note:</strong> this method can only be called when the activity is foreground.\n That is, between onResume() and onPause().\n@see <a href=\"#!/api/android.app.Activity-method-stopLockTask\" rel=\"android.app.Activity-method-stopLockTask\" class=\"docClass\">stopLockTask</a>()\n@see android.R.attr#lockTaskMode</p>\n</div></div></div><div id='method-startManagingCursor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startManagingCursor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startManagingCursor' class='name expandable'>startManagingCursor</a>( <span class='pre'>c</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>This method allows the activity to take care of managing the given\n Cursor's lifecycle for you based on the activity'...</div><div class='long'><p>This method allows the activity to take care of managing the given\n Cursor's lifecycle for you based on the activity's lifecycle.\n That is, when the activity is stopped it will automatically call\n Cursor.deactivate on the given Cursor, and when it is later restarted\n it will call Cursor.requery for you.  When the activity is\n destroyed, all managed Cursors will be closed automatically.</p>\n\n<p> <em>If you are targeting android.os.Build.VERSION_CODES.HONEYCOMB\n or later, consider instead using <a href=\"#!/api/android.app.LoaderManager\" rel=\"android.app.LoaderManager\" class=\"docClass\">android.app.LoaderManager</a> instead, available\n via <a href=\"#!/api/android.app.Activity-method-getLoaderManager\" rel=\"android.app.Activity-method-getLoaderManager\" class=\"docClass\">getLoaderManager</a>().</em></p>\n\n<p> <p><strong>Warning:</strong> Do not call Cursor.close() on cursor obtained from\n <a href=\"#!/api/android.app.Activity-method-managedQuery\" rel=\"android.app.Activity-method-managedQuery\" class=\"docClass\">managedQuery</a>, because the activity will do that for you at the appropriate time.\n However, if you call <a href=\"#!/api/android.app.Activity-method-stopManagingCursor\" rel=\"android.app.Activity-method-stopManagingCursor\" class=\"docClass\">stopManagingCursor</a> on a cursor from a managed query, the system\n <em>will not</em> automatically close the cursor and, in that case, you must call\n Cursor.close().</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use the new android.content.CursorLoader class with\n LoaderManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {Cursor}<div class='sub-desc'><p>The Cursor to be managed.\n@see <a href=\"#!/api/android.app.Activity-method-managedQuery\" rel=\"android.app.Activity-method-managedQuery\" class=\"docClass\">managedQuery</a>(android.net.Uri , String[], String, String[], String)\n@see <a href=\"#!/api/android.app.Activity-method-stopManagingCursor\" rel=\"android.app.Activity-method-stopManagingCursor\" class=\"docClass\">stopManagingCursor</a></p>\n</div></li></ul></div></div></div><div id='method-startNextMatchingActivity' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startNextMatchingActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startNextMatchingActivity' class='name expandable'>startNextMatchingActivity</a>( <span class='pre'>intent, options</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Special version of starting an activity, for use when you are replacing\n other activity components. ...</div><div class='long'><p>Special version of starting an activity, for use when you are replacing\n other activity components.  You can use this to hand the Intent off\n to the next Activity that can handle it.  You typically call this in\n <a href=\"#!/api/android.app.Activity-method-onCreate\" rel=\"android.app.Activity-method-onCreate\" class=\"docClass\">onCreate</a> with the Intent returned by <a href=\"#!/api/android.app.Activity-method-getIntent\" rel=\"android.app.Activity-method-getIntent\" class=\"docClass\">getIntent</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The intent to dispatch to the next activity.  For\n correct behavior, this must be the same as the Intent that started\n your own activity; the only changes you can make are to the extras\n inside of it.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>Additional options for how the Activity should be started.\n See Bundle)\n Context.startActivity(Intent, Bundle)} for more details.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Returns a boolean indicating whether there was another Activity\n to start: true if there was a next activity to start, false if there\n wasn't.  In general, if true is returned you will then want to call\n finish() on yourself.</p>\n</div></li></ul></div></div></div><div id='method-startPostponedEnterTransition' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startPostponedEnterTransition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startPostponedEnterTransition' class='name expandable'>startPostponedEnterTransition</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Begin postponed transitions after postponeEnterTransition() was called. ...</div><div class='long'><p>Begin postponed transitions after <a href=\"#!/api/android.app.Activity-method-postponeEnterTransition\" rel=\"android.app.Activity-method-postponeEnterTransition\" class=\"docClass\">postponeEnterTransition</a>() was called.\n If postponeEnterTransition() was called, you must call startPostponedEnterTransition()\n to have your Activity start drawing.</p>\n</div></div></div><div id='method-startSearch' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-startSearch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-startSearch' class='name expandable'>startSearch</a>( <span class='pre'>initialQuery, selectInitialQuery, appSearchData, globalSearch</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This hook is called to launch the search UI. ...</div><div class='long'><p>This hook is called to launch the search UI.</p>\n\n<p> <p>It is typically called from onSearchRequested(), either directly from\n Activity.onSearchRequested() or from an overridden version in any given\n Activity.  If your goal is simply to activate search, it is preferred to call\n onSearchRequested(), which may have been overridden elsewhere in your Activity.  If your goal\n is to inject specific data such as context data, it is preferred to <i>override</i>\n onSearchRequested(), so that any callers to it will benefit from the override.</p>\n\n<p> <p>Note: when running in a Configuration.UI_MODE_TYPE_WATCH, use of this API is\n not supported.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>initialQuery</span> : String<div class='sub-desc'><p>Any non-null non-empty string will be inserted as\n pre-entered text in the search query box.</p>\n</div></li><li><span class='pre'>selectInitialQuery</span> : Boolean<div class='sub-desc'><p>If true, the initial query will be preselected, which means that\n any further typing will replace it.  This is useful for cases where an entire pre-formed\n query is being inserted.  If false, the selection point will be placed at the end of the\n inserted query.  This is useful when the inserted query is text that the user entered,\n and the user would expect to be able to keep typing.  <i>This parameter is only meaningful\n if initialQuery is a non-empty string.</i></p>\n</div></li><li><span class='pre'>appSearchData</span> : Object {Bundle}<div class='sub-desc'><p>An application can insert application-specific\n context here, in order to improve quality or specificity of its own\n searches.  This data will be returned with SEARCH intent(s).  Null if\n no extra data is required.</p>\n</div></li><li><span class='pre'>globalSearch</span> : Boolean<div class='sub-desc'><p>If false, this will only launch the search that has been specifically\n defined by the application (which is usually defined as a local search).  If no default\n search is defined in the current application or activity, global search will be launched.\n If true, this will always launch a platform-global (e.g. web-based) search instead.\n@see <a href=\"#!/api/android.app.SearchManager\" rel=\"android.app.SearchManager\" class=\"docClass\">android.app.SearchManager</a>\n@see <a href=\"#!/api/android.app.Activity-method-onSearchRequested\" rel=\"android.app.Activity-method-onSearchRequested\" class=\"docClass\">onSearchRequested</a></p>\n</div></li></ul></div></div></div><div id='method-stopLocalVoiceInteraction' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-stopLocalVoiceInteraction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-stopLocalVoiceInteraction' class='name expandable'>stopLocalVoiceInteraction</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request to terminate the current voice interaction that was previously started\n using startLocalVoiceInteraction(Bund...</div><div class='long'><p>Request to terminate the current voice interaction that was previously started\n using <a href=\"#!/api/android.app.Activity-method-startLocalVoiceInteraction\" rel=\"android.app.Activity-method-startLocalVoiceInteraction\" class=\"docClass\">startLocalVoiceInteraction</a>(Bundle). When the interaction is\n terminated, <a href=\"#!/api/android.app.Activity-method-onLocalVoiceInteractionStopped\" rel=\"android.app.Activity-method-onLocalVoiceInteractionStopped\" class=\"docClass\">onLocalVoiceInteractionStopped</a>() will be called.</p>\n</div></div></div><div id='method-stopLockTask' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-stopLockTask' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-stopLockTask' class='name expandable'>stopLockTask</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stop the current task from being locked. ...</div><div class='long'><p>Stop the current task from being locked.</p>\n\n<p> <p>Called to end the LockTask or screen pinning mode started by <a href=\"#!/api/android.app.Activity-method-startLockTask\" rel=\"android.app.Activity-method-startLockTask\" class=\"docClass\">startLockTask</a>().\n This can only be called by activities that have called <a href=\"#!/api/android.app.Activity-method-startLockTask\" rel=\"android.app.Activity-method-startLockTask\" class=\"docClass\">startLockTask</a>() previously.</p>\n\n<p> <p><strong>Note:</strong> If the device is in LockTask mode that is not initially started\n by this activity, then calling this method will not terminate the LockTask mode, but only\n finish its own task. The device will remain in LockTask mode, until the activity which\n started the LockTask mode calls this method, or until its whitelist authorization is revoked\n by String[]).\n@see <a href=\"#!/api/android.app.Activity-method-startLockTask\" rel=\"android.app.Activity-method-startLockTask\" class=\"docClass\">startLockTask</a>()\n@see android.R.attr#lockTaskMode\n@see ActivityManager#getLockTaskModeState()</p>\n</div></div></div><div id='method-stopManagingCursor' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-stopManagingCursor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-stopManagingCursor' class='name expandable'>stopManagingCursor</a>( <span class='pre'>c</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Given a Cursor that was previously given to\n startManagingCursor, stop the activity's management of that\n cursor. ...</div><div class='long'><p>Given a Cursor that was previously given to\n <a href=\"#!/api/android.app.Activity-method-startManagingCursor\" rel=\"android.app.Activity-method-startManagingCursor\" class=\"docClass\">startManagingCursor</a>, stop the activity's management of that\n cursor.</p>\n\n<p> <p><strong>Warning:</strong> After calling this method on a cursor from a managed query,\n the system <em>will not</em> automatically close the cursor and you must call\n Cursor.close().</p></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Use the new android.content.CursorLoader class with\n LoaderManager instead; this is also\n available on older platforms through the Android compatibility package.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {Cursor}<div class='sub-desc'><p>The Cursor that was being managed.\n@see <a href=\"#!/api/android.app.Activity-method-startManagingCursor\" rel=\"android.app.Activity-method-startManagingCursor\" class=\"docClass\">startManagingCursor</a></p>\n</div></li></ul></div></div></div><div id='method-takeKeyEvents' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-takeKeyEvents' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-takeKeyEvents' class='name expandable'>takeKeyEvents</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request that key events come to this activity. ...</div><div class='long'><p>Request that key events come to this activity. Use this if your\n activity has no views with focus, but the activity still wants\n a chance to process key events.\n@see android.view.Window#takeKeyEvents</p>\n</div></div></div><div id='method-triggerSearch' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-triggerSearch' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-triggerSearch' class='name expandable'>triggerSearch</a>( <span class='pre'>query, appSearchData</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Similar to startSearch, but actually fires off the search query after invoking\n the search dialog. ...</div><div class='long'><p>Similar to <a href=\"#!/api/android.app.Activity-method-startSearch\" rel=\"android.app.Activity-method-startSearch\" class=\"docClass\">startSearch</a>, but actually fires off the search query after invoking\n the search dialog.  Made available for testing purposes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : String<div class='sub-desc'><p>The query to trigger.  If empty, the request will be ignored.</p>\n</div></li><li><span class='pre'>appSearchData</span> : Object {Bundle}<div class='sub-desc'><p>An application can insert application-specific\n context here, in order to improve quality or specificity of its own\n searches.  This data will be returned with SEARCH intent(s).  Null if\n no extra data is required.</p>\n</div></li></ul></div></div></div><div id='method-unregisterActivityLifecycleCallbacks' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-unregisterActivityLifecycleCallbacks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-unregisterActivityLifecycleCallbacks' class='name expandable'>unregisterActivityLifecycleCallbacks</a>( <span class='pre'>callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unregister an android.app.Application.ActivityLifecycleCallbacks previously registered\n with registerActivityLifecycl...</div><div class='long'><p>Unregister an <a href=\"#!/api/android.app.Application.ActivityLifecycleCallbacks\" rel=\"android.app.Application.ActivityLifecycleCallbacks\" class=\"docClass\">android.app.Application.ActivityLifecycleCallbacks</a> previously registered\n with <a href=\"#!/api/android.app.Activity-method-registerActivityLifecycleCallbacks\" rel=\"android.app.Activity-method-registerActivityLifecycleCallbacks\" class=\"docClass\">registerActivityLifecycleCallbacks</a>. It will not receive any further\n callbacks.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {Application.ActivityLifecycleCallbacks}<div class='sub-desc'><p>The callback instance to unregister\n@see <a href=\"#!/api/android.app.Activity-method-registerActivityLifecycleCallbacks\" rel=\"android.app.Activity-method-registerActivityLifecycleCallbacks\" class=\"docClass\">registerActivityLifecycleCallbacks</a></p>\n</div></li></ul></div></div></div><div id='method-unregisterForContextMenu' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.app.Activity' rel='android.app.Activity' class='defined-in docClass'>android.app.Activity</a><br/><a href='source/Activity.html#android-app-Activity-method-unregisterForContextMenu' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.Activity-method-unregisterForContextMenu' class='name expandable'>unregisterForContextMenu</a>( <span class='pre'>view, view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Prevents a context menu to be shown for the given view. ...</div><div class='long'><p>Prevents a context menu to be shown for the given view. This method will remove the\n OnCreateContextMenuListener on the view.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The view that should stop showing a context menu.</p>\n</div></li><li><span class='pre'>view</span> : Object<div class='sub-desc'><p>The view that should stop showing a context menu.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});