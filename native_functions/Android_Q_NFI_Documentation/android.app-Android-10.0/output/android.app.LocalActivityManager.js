Ext.data.JsonP.android_app_LocalActivityManager({"tagname":"class","name":"android.app.LocalActivityManager","autodetected":{},"files":[{"filename":"LocalActivityManager.js","href":"LocalActivityManager.html#android-app-LocalActivityManager"}],"extends":"java.lang.Object","deprecated":{"text":"<p>Use the new <a href=\"#!/api/android.app.Fragment\" rel=\"android.app.Fragment\" class=\"docClass\">android.app.Fragment</a> and <a href=\"#!/api/android.app.FragmentManager\" rel=\"android.app.FragmentManager\" class=\"docClass\">android.app.FragmentManager</a> APIs\n instead; these are also\n available on older platforms through the Android compatibility package.</p>\n"},"members":[{"name":"destroyActivity","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-destroyActivity","meta":{}},{"name":"dispatchCreate","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-dispatchCreate","meta":{}},{"name":"dispatchDestroy","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-dispatchDestroy","meta":{}},{"name":"dispatchPause","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-dispatchPause","meta":{}},{"name":"dispatchResume","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-dispatchResume","meta":{}},{"name":"dispatchRetainNonConfigurationInstance","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-dispatchRetainNonConfigurationInstance","meta":{}},{"name":"dispatchStop","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-dispatchStop","meta":{}},{"name":"getActivity","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-getActivity","meta":{}},{"name":"getCurrentActivity","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-getCurrentActivity","meta":{}},{"name":"getCurrentId","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-getCurrentId","meta":{}},{"name":"removeAllActivities","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-removeAllActivities","meta":{}},{"name":"saveInstanceState","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-saveInstanceState","meta":{}},{"name":"startActivity","tagname":"method","owner":"android.app.LocalActivityManager","id":"method-startActivity","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.app.LocalActivityManager","short_doc":"Helper class for managing multiple running embedded activities in the same\n process. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.app.LocalActivityManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/LocalActivityManager.html#android-app-LocalActivityManager' target='_blank'>LocalActivityManager.js</a></div></pre><div class='doc-contents'><p><p>Helper class for managing multiple running embedded activities in the same\n process. This class is not normally used directly, but rather created for\n you as part of the <a href=\"#!/api/android.app.ActivityGroup\" rel=\"android.app.ActivityGroup\" class=\"docClass\">android.app.ActivityGroup</a> implementation.</p>\n\n<p> @see ActivityGroup</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Use the new <a href=\"#!/api/android.app.Fragment\" rel=\"android.app.Fragment\" class=\"docClass\">android.app.Fragment</a> and <a href=\"#!/api/android.app.FragmentManager\" rel=\"android.app.FragmentManager\" class=\"docClass\">android.app.FragmentManager</a> APIs\n instead; these are also\n available on older platforms through the Android compatibility package.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-destroyActivity' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-destroyActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-destroyActivity' class='name expandable'>destroyActivity</a>( <span class='pre'>id, finish</span> ) : Object {android.view.Window}<span class=\"signature\"></span></div><div class='description'><div class='short'>Destroy the activity associated with a particular id. ...</div><div class='long'><p>Destroy the activity associated with a particular id.  This activity\n will go through the normal lifecycle events and fine onDestroy(), and\n then the id removed from the group.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>Unique identifier of the activity to be destroyed</p>\n</div></li><li><span class='pre'>finish</span> : Boolean<div class='sub-desc'><p>If true, this activity will be finished, so its id and\n all state are removed from the group.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.Window}</span><div class='sub-desc'><p>Returns the window that was used to display the activity, or\n null if there was none.</p>\n</div></li></ul></div></div></div><div id='method-dispatchCreate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-dispatchCreate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-dispatchCreate' class='name expandable'>dispatchCreate</a>( <span class='pre'>state</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Restore a state that was previously returned by saveInstanceState. ...</div><div class='long'><p>Restore a state that was previously returned by <a href=\"#!/api/android.app.LocalActivityManager-method-saveInstanceState\" rel=\"android.app.LocalActivityManager-method-saveInstanceState\" class=\"docClass\">saveInstanceState</a>.  This\n adds to the activity group information about all activity IDs that had\n previously been saved, even if they have not been started yet, so if the\n user later navigates to them the correct state will be restored.</p>\n\n<p> <p>Note: This does <b>not</b> change the current running activity, or\n start whatever activity was previously running when the state was saved.\n That is up to the client to do, in whatever way it thinks is best.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>state</span> : Object {Bundle}<div class='sub-desc'><p>a previously saved state; does nothing if this is null\n@see <a href=\"#!/api/android.app.LocalActivityManager-method-saveInstanceState\" rel=\"android.app.LocalActivityManager-method-saveInstanceState\" class=\"docClass\">saveInstanceState</a></p>\n</div></li></ul></div></div></div><div id='method-dispatchDestroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-dispatchDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-dispatchDestroy' class='name expandable'>dispatchDestroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the container activity in its android.app.Activity.onDestroy so\n that LocalActivityManager can perform the ...</div><div class='long'><p>Called by the container activity in its android.app.Activity.onDestroy so\n that LocalActivityManager can perform the corresponding action on the\n activities it holds.\n@see Activity#onDestroy</p>\n</div></div></div><div id='method-dispatchPause' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-dispatchPause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-dispatchPause' class='name expandable'>dispatchPause</a>( <span class='pre'>finishing</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the container activity in its android.app.Activity.onPause so\n that LocalActivityManager can perform the co...</div><div class='long'><p>Called by the container activity in its android.app.Activity.onPause so\n that LocalActivityManager can perform the corresponding action on the\n activities it holds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>finishing</span> : Boolean<div class='sub-desc'><p>set to true if the parent activity has been finished;\n                  this can be determined by calling\n                  Activity.isFinishing()\n@see Activity#onPause\n@see Activity#isFinishing</p>\n</div></li></ul></div></div></div><div id='method-dispatchResume' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-dispatchResume' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-dispatchResume' class='name expandable'>dispatchResume</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the container activity in its android.app.Activity.onResume so\n that LocalActivityManager can perform the c...</div><div class='long'><p>Called by the container activity in its android.app.Activity.onResume so\n that LocalActivityManager can perform the corresponding action on the\n activities it holds.\n@see Activity#onResume</p>\n</div></div></div><div id='method-dispatchRetainNonConfigurationInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-dispatchRetainNonConfigurationInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-dispatchRetainNonConfigurationInstance' class='name expandable'>dispatchRetainNonConfigurationInstance</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Call onRetainNonConfigurationInstance on each child activity and store the\n results in a HashMap by id. ...</div><div class='long'><p>Call onRetainNonConfigurationInstance on each child activity and store the\n results in a HashMap by id.  Only construct the HashMap if there is a non-null\n object to store.  Note that this does not support nested ActivityGroups.</p>\n\n<p> {@hide}</p>\n</div></div></div><div id='method-dispatchStop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-dispatchStop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-dispatchStop' class='name expandable'>dispatchStop</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by the container activity in its android.app.Activity.onStop so\n that LocalActivityManager can perform the cor...</div><div class='long'><p>Called by the container activity in its android.app.Activity.onStop so\n that LocalActivityManager can perform the corresponding action on the\n activities it holds.\n@see Activity#onStop</p>\n</div></div></div><div id='method-getActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-getActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-getActivity' class='name expandable'>getActivity</a>( <span class='pre'></span> ) : Object {android.app.Activity}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the Activity object associated with a string ID. ...</div><div class='long'><p>Return the Activity object associated with a string ID.\n@see <a href=\"#!/api/android.app.LocalActivityManager-method-startActivity\" rel=\"android.app.LocalActivityManager-method-startActivity\" class=\"docClass\">startActivity</a></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Activity}</span><div class='sub-desc'><p>the associated Activity object, or null if the id is unknown or\n         its activity is not currently instantiated</p>\n</div></li></ul></div></div></div><div id='method-getCurrentActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-getCurrentActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-getCurrentActivity' class='name expandable'>getCurrentActivity</a>( <span class='pre'></span> ) : Object {android.app.Activity}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the Activity that is currently running. ...</div><div class='long'><p>Retrieve the Activity that is currently running.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Activity}</span><div class='sub-desc'><p>the currently running (resumed) Activity, or null if there is\n         not one\n@see <a href=\"#!/api/android.app.LocalActivityManager-method-startActivity\" rel=\"android.app.LocalActivityManager-method-startActivity\" class=\"docClass\">startActivity</a>\n@see <a href=\"#!/api/android.app.LocalActivityManager-method-getCurrentId\" rel=\"android.app.LocalActivityManager-method-getCurrentId\" class=\"docClass\">getCurrentId</a></p>\n</div></li></ul></div></div></div><div id='method-getCurrentId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-getCurrentId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-getCurrentId' class='name expandable'>getCurrentId</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the ID of the activity that is currently running. ...</div><div class='long'><p>Retrieve the ID of the activity that is currently running.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the ID of the currently running (resumed) Activity, or null if\n         there is not one\n@see <a href=\"#!/api/android.app.LocalActivityManager-method-startActivity\" rel=\"android.app.LocalActivityManager-method-startActivity\" class=\"docClass\">startActivity</a>\n@see <a href=\"#!/api/android.app.LocalActivityManager-method-getCurrentActivity\" rel=\"android.app.LocalActivityManager-method-getCurrentActivity\" class=\"docClass\">getCurrentActivity</a></p>\n</div></li></ul></div></div></div><div id='method-removeAllActivities' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-removeAllActivities' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-removeAllActivities' class='name expandable'>removeAllActivities</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove all activities from this LocalActivityManager, performing an\n android.app.Activity.onDestroy on any that are c...</div><div class='long'><p>Remove all activities from this LocalActivityManager, performing an\n android.app.Activity.onDestroy on any that are currently instantiated.</p>\n</div></div></div><div id='method-saveInstanceState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-saveInstanceState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-saveInstanceState' class='name expandable'>saveInstanceState</a>( <span class='pre'></span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve the state of all activities known by the group. ...</div><div class='long'><p>Retrieve the state of all activities known by the group.  For\n activities that have previously run and are now stopped or finished, the\n last saved state is used.  For the current running activity, its\n <a href=\"#!/api/android.app.Activity-method-onSaveInstanceState\" rel=\"android.app.Activity-method-onSaveInstanceState\" class=\"docClass\">android.app.Activity.onSaveInstanceState</a> is called to retrieve its current state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle holding the newly created state of all known activities\n@see <a href=\"#!/api/android.app.LocalActivityManager-method-dispatchCreate\" rel=\"android.app.LocalActivityManager-method-dispatchCreate\" class=\"docClass\">dispatchCreate</a></p>\n</div></li></ul></div></div></div><div id='method-startActivity' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.app.LocalActivityManager'>android.app.LocalActivityManager</span><br/><a href='source/LocalActivityManager.html#android-app-LocalActivityManager-method-startActivity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.app.LocalActivityManager-method-startActivity' class='name expandable'>startActivity</a>( <span class='pre'>id, intent</span> ) : Object {android.view.Window}<span class=\"signature\"></span></div><div class='description'><div class='short'>Start a new activity running in the group. ...</div><div class='long'><p>Start a new activity running in the group.  Every activity you start\n must have a unique string ID associated with it -- this is used to keep\n track of the activity, so that if you later call startActivity() again\n on it the same activity object will be retained.</p>\n\n<p> <p>When there had previously been an activity started under this id,\n it may either be destroyed and a new one started, or the current\n one re-used, based on these conditions, in order:</p></p>\n\n<p> <ul>\n <li> If the Intent maps to a different activity component than is\n currently running, the current activity is finished and a new one\n started.\n <li> If the current activity uses a non-multiple launch mode (such\n as singleTop), or the Intent has the\n Intent.FLAG_ACTIVITY_SINGLE_TOP flag set, then the current\n activity will remain running and its\n android.app.Activity.onNewIntent() method\n called.\n <li> If the new Intent is the same (excluding extras) as the previous\n one, and the new Intent does not have the\n Intent.FLAG_ACTIVITY_CLEAR_TOP set, then the current activity\n will remain running as-is.\n <li> Otherwise, the current activity will be finished and a new\n one started.\n </li></li></li></li></ul></p>\n\n<p> <p>If the given Intent can not be resolved to an available Activity,\n this method throws android.content.ActivityNotFoundException.</p>\n\n<p> <p>Warning: There is an issue where, if the Intent does not\n include an explicit component, we can restore the state for a different\n activity class than was previously running when the state was saved (if\n the set of available activities changes between those points).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>Unique identifier of the activity to be started</p>\n</div></li><li><span class='pre'>intent</span> : Object {Intent}<div class='sub-desc'><p>The Intent describing the activity to be started</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.Window}</span><div class='sub-desc'><p>Returns the window of the activity.  The caller needs to take\n care of adding this window to a view hierarchy, and likewise dealing\n with removing the old window if the activity has changed.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>android.content.ActivityNotFoundException</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use the new <a href=\"#!/api/android.app.Fragment\" rel=\"android.app.Fragment\" class=\"docClass\">android.app.Fragment</a> and <a href=\"#!/api/android.app.FragmentManager\" rel=\"android.app.FragmentManager\" class=\"docClass\">android.app.FragmentManager</a> APIs\n instead; these are also\n available on older platforms through the Android compatibility package.</p>\n"}}});