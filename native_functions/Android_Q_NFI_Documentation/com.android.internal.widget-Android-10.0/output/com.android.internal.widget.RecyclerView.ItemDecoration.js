Ext.data.JsonP.com_android_internal_widget_RecyclerView_ItemDecoration({"tagname":"class","name":"com.android.internal.widget.RecyclerView.ItemDecoration","autodetected":{},"files":[{"filename":"ItemDecoration.js","href":"ItemDecoration.html#com-android-internal-widget-RecyclerView-ItemDecoration"}],"extends":"java.lang.Object","members":[{"name":"getItemOffsets","tagname":"method","owner":"com.android.internal.widget.RecyclerView.ItemDecoration","id":"method-getItemOffsets","meta":{}},{"name":"onDraw","tagname":"method","owner":"com.android.internal.widget.RecyclerView.ItemDecoration","id":"method-onDraw","meta":{"deprecated":{"text":"<p>Override RecyclerView, RecyclerView.State)</p>\n"}}},{"name":"onDrawOver","tagname":"method","owner":"com.android.internal.widget.RecyclerView.ItemDecoration","id":"method-onDrawOver","meta":{"deprecated":{"text":"<p>Override RecyclerView, RecyclerView.State)</p>\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.RecyclerView.ItemDecoration","short_doc":"An ItemDecoration allows the application to add a special drawing and layout offset\n to specific item views from the ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.internal.widget.RecyclerView.ItemDecoration</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ItemDecoration.html#com-android-internal-widget-RecyclerView-ItemDecoration' target='_blank'>ItemDecoration.js</a></div></pre><div class='doc-contents'><p>An ItemDecoration allows the application to add a special drawing and layout offset\n to specific item views from the adapter's data set. This can be useful for drawing dividers\n between items, highlights, visual grouping boundaries and more.</p>\n\n<p> <p>All ItemDecorations are drawn in the order they were added, before the item\n views (in com.android.internal.widget.RecyclerView, com.android.internal.widget.RecyclerView.State) onDraw()\n and after the items (in com.android.internal.widget.RecyclerView,\n com.android.internal.widget.RecyclerView.State).</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getItemOffsets' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.ItemDecoration'>com.android.internal.widget.RecyclerView.ItemDecoration</span><br/><a href='source/ItemDecoration.html#com-android-internal-widget-RecyclerView-ItemDecoration-method-getItemOffsets' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.ItemDecoration-method-getItemOffsets' class='name expandable'>getItemOffsets</a>( <span class='pre'>outRect, view, parent, state</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Retrieve any offsets for the given item. ...</div><div class='long'><p>Retrieve any offsets for the given item. Each field of <code>outRect</code> specifies\n the number of pixels that the item view should be inset by, similar to padding or margin.\n The default implementation sets the bounds of outRect to 0 and returns.</p>\n\n<p> <p>\n If this ItemDecoration does not affect the positioning of item views, it should set\n all four fields of <code>outRect</code> (left, top, right, bottom) to zero\n before returning.</p>\n\n<p> <p>\n If you need to access Adapter for additional data, you can call\n com.android.internal.widget.RecyclerView.getChildAdapterPosition(View) to get the adapter position of the\n View.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>outRect</span> : Object {Rect}<div class='sub-desc'><p>Rect to receive the output.</p>\n</div></li><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The child view to decorate</p>\n</div></li><li><span class='pre'>parent</span> : Object {RecyclerView}<div class='sub-desc'><p>RecyclerView this ItemDecoration is decorating</p>\n</div></li><li><span class='pre'>state</span> : Object {RecyclerView.State}<div class='sub-desc'><p>The current state of RecyclerView.</p>\n</div></li></ul></div></div></div><div id='method-onDraw' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.ItemDecoration'>com.android.internal.widget.RecyclerView.ItemDecoration</span><br/><a href='source/ItemDecoration.html#com-android-internal-widget-RecyclerView-ItemDecoration-method-onDraw' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.ItemDecoration-method-onDraw' class='name expandable'>onDraw</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Override RecyclerView, RecyclerView.State)</p>\n\n        </div>\n</div></div></div><div id='method-onDrawOver' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.ItemDecoration'>com.android.internal.widget.RecyclerView.ItemDecoration</span><br/><a href='source/ItemDecoration.html#com-android-internal-widget-RecyclerView-ItemDecoration-method-onDrawOver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.ItemDecoration-method-onDrawOver' class='name expandable'>onDrawOver</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Override RecyclerView, RecyclerView.State)</p>\n\n        </div>\n</div></div></div></div></div></div></div>","meta":{}});