Ext.data.JsonP.com_android_internal_widget_RecyclerView_ViewCacheExtension({"tagname":"class","name":"com.android.internal.widget.RecyclerView.ViewCacheExtension","autodetected":{},"files":[{"filename":"ViewCacheExtension.js","href":"ViewCacheExtension.html#com-android-internal-widget-RecyclerView-ViewCacheExtension"}],"extends":"java.lang.Object","members":[{"name":"getViewForPositionAndType","tagname":"method","owner":"com.android.internal.widget.RecyclerView.ViewCacheExtension","id":"method-getViewForPositionAndType","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.RecyclerView.ViewCacheExtension","short_doc":"ViewCacheExtension is a helper class to provide an additional layer of view caching that can\n be controlled by the de...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.internal.widget.RecyclerView.ViewCacheExtension</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ViewCacheExtension.html#com-android-internal-widget-RecyclerView-ViewCacheExtension' target='_blank'>ViewCacheExtension.js</a></div></pre><div class='doc-contents'><p>ViewCacheExtension is a helper class to provide an additional layer of view caching that can\n be controlled by the developer.\n <p>\n When com.android.internal.widget.RecyclerView.Recycler.getViewForPosition(int) is called, Recycler checks attached scrap and\n first level cache to find a matching View. If it cannot find a suitable View, Recycler will\n call the int, int) before checking\n <a href=\"#!/api/com.android.internal.widget.RecyclerView.RecycledViewPool\" rel=\"com.android.internal.widget.RecyclerView.RecycledViewPool\" class=\"docClass\">com.android.internal.widget.RecyclerView.RecycledViewPool</a>.\n <p>\n Note that, Recycler never sends Views to this method to be cached. It is developers\n responsibility to decide whether they want to keep their Views in this custom cache or let\n the default recycling policy handle it.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getViewForPositionAndType' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.ViewCacheExtension'>com.android.internal.widget.RecyclerView.ViewCacheExtension</span><br/><a href='source/ViewCacheExtension.html#com-android-internal-widget-RecyclerView-ViewCacheExtension-method-getViewForPositionAndType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.ViewCacheExtension-method-getViewForPositionAndType' class='name expandable'>getViewForPositionAndType</a>( <span class='pre'>recycler, position, type</span> ) : Object {android.view.View}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a View that can be binded to the given Adapter position. ...</div><div class='long'><p>Returns a View that can be binded to the given Adapter position.\n <p>\n This method should <b>not</b> create a new View. Instead, it is expected to return\n an already created View that can be re-used for the given type and position.\n If the View is marked as ignored, it should first call\n com.android.internal.widget.RecyclerView.LayoutManager.stopIgnoringView(View) before returning the View.\n <p>\n RecyclerView will re-bind the returned View to the position if necessary.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recycler</span> : Object {RecyclerView.Recycler}<div class='sub-desc'><p>The Recycler that can be used to bind the View</p>\n</div></li><li><span class='pre'>position</span> : Number<div class='sub-desc'><p>The adapter position</p>\n</div></li><li><span class='pre'>type</span> : Number<div class='sub-desc'><p>The type of the View, defined by adapter</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.View}</span><div class='sub-desc'><p>A View that is bound to the given position or NULL if there is no View to re-use\n@see LayoutManager#ignoreView(View)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});