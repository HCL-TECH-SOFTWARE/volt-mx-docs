Ext.data.JsonP.com_android_internal_widget_RecyclerView_OnScrollListener({"tagname":"class","name":"com.android.internal.widget.RecyclerView.OnScrollListener","autodetected":{},"files":[{"filename":"OnScrollListener.js","href":"OnScrollListener.html#com-android-internal-widget-RecyclerView-OnScrollListener"}],"extends":"java.lang.Object","members":[{"name":"onScrollStateChanged","tagname":"method","owner":"com.android.internal.widget.RecyclerView.OnScrollListener","id":"method-onScrollStateChanged","meta":{}},{"name":"onScrolled","tagname":"method","owner":"com.android.internal.widget.RecyclerView.OnScrollListener","id":"method-onScrolled","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.RecyclerView.OnScrollListener","short_doc":"An OnScrollListener can be added to a RecyclerView to receive messages when a scrolling event\n has occurred on that R...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.internal.widget.RecyclerView.OnScrollListener</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/OnScrollListener.html#com-android-internal-widget-RecyclerView-OnScrollListener' target='_blank'>OnScrollListener.js</a></div></pre><div class='doc-contents'><p>An OnScrollListener can be added to a RecyclerView to receive messages when a scrolling event\n has occurred on that RecyclerView.\n <p>\n @see RecyclerView#addOnScrollListener(OnScrollListener)\n @see RecyclerView#clearOnChildAttachStateChangeListeners()</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onScrollStateChanged' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.OnScrollListener'>com.android.internal.widget.RecyclerView.OnScrollListener</span><br/><a href='source/OnScrollListener.html#com-android-internal-widget-RecyclerView-OnScrollListener-method-onScrollStateChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.OnScrollListener-method-onScrollStateChanged' class='name expandable'>onScrollStateChanged</a>( <span class='pre'>recyclerView, newState</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback method to be invoked when RecyclerView's scroll state changes. ...</div><div class='long'><p>Callback method to be invoked when RecyclerView's scroll state changes.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recyclerView</span> : Object {RecyclerView}<div class='sub-desc'><p>The RecyclerView whose scroll state has changed.</p>\n</div></li><li><span class='pre'>newState</span> : Number<div class='sub-desc'><p>The updated scroll state. One of SCROLL_STATE_IDLE,\n                     SCROLL_STATE_DRAGGING or SCROLL_STATE_SETTLING.</p>\n</div></li></ul></div></div></div><div id='method-onScrolled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.OnScrollListener'>com.android.internal.widget.RecyclerView.OnScrollListener</span><br/><a href='source/OnScrollListener.html#com-android-internal-widget-RecyclerView-OnScrollListener-method-onScrolled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.OnScrollListener-method-onScrolled' class='name expandable'>onScrolled</a>( <span class='pre'>recyclerView, dx, dy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Callback method to be invoked when the RecyclerView has been scrolled. ...</div><div class='long'><p>Callback method to be invoked when the RecyclerView has been scrolled. This will be\n called after the scroll has completed.\n <p>\n This callback will also be called if visible item range changes after a layout\n calculation. In that case, dx and dy will be 0.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recyclerView</span> : Object {RecyclerView}<div class='sub-desc'><p>The RecyclerView which scrolled.</p>\n</div></li><li><span class='pre'>dx</span> : Number<div class='sub-desc'><p>The amount of horizontal scroll.</p>\n</div></li><li><span class='pre'>dy</span> : Number<div class='sub-desc'><p>The amount of vertical scroll.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});