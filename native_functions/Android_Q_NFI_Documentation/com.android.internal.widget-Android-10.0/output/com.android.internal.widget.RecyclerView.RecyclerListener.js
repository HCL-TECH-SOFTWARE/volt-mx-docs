Ext.data.JsonP.com_android_internal_widget_RecyclerView_RecyclerListener({"tagname":"class","name":"com.android.internal.widget.RecyclerView.RecyclerListener","autodetected":{},"files":[{"filename":"RecyclerListener.js","href":"RecyclerListener.html#com-android-internal-widget-RecyclerView-RecyclerListener"}],"members":[{"name":"onViewRecycled","tagname":"method","owner":"com.android.internal.widget.RecyclerView.RecyclerListener","id":"method-onViewRecycled","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.RecyclerView.RecyclerListener","short_doc":"A RecyclerListener can be set on a RecyclerView to receive messages whenever\n a view is recycled. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/RecyclerListener.html#com-android-internal-widget-RecyclerView-RecyclerListener' target='_blank'>RecyclerListener.js</a></div></pre><div class='doc-contents'><p>A RecyclerListener can be set on a RecyclerView to receive messages whenever\n a view is recycled.</p>\n\n<p> @see RecyclerView#setRecyclerListener(RecyclerListener)</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onViewRecycled' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.RecyclerListener'>com.android.internal.widget.RecyclerView.RecyclerListener</span><br/><a href='source/RecyclerListener.html#com-android-internal-widget-RecyclerView-RecyclerListener-method-onViewRecycled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.RecyclerListener-method-onViewRecycled' class='name expandable'>onViewRecycled</a>( <span class='pre'>holder</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called whenever the view in the ViewHolder is recycled. ...</div><div class='long'><p>This method is called whenever the view in the ViewHolder is recycled.</p>\n\n<p> RecyclerView calls this method right before clearing ViewHolder's internal data and\n sending it to RecycledViewPool. This way, if ViewHolder was holding valid information\n before being recycled, you can call com.android.internal.widget.RecyclerView.ViewHolder.getAdapterPosition() to get\n its adapter position.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>holder</span> : Object {RecyclerView.ViewHolder}<div class='sub-desc'><p>The ViewHolder containing the view that was recycled</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});