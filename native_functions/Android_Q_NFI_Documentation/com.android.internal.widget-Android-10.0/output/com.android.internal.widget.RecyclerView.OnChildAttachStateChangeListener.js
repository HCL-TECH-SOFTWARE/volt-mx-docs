Ext.data.JsonP.com_android_internal_widget_RecyclerView_OnChildAttachStateChangeListener({"tagname":"class","name":"com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener","autodetected":{},"files":[{"filename":"OnChildAttachStateChangeListener.js","href":"OnChildAttachStateChangeListener.html#com-android-internal-widget-RecyclerView-OnChildAttachStateChangeListener"}],"members":[{"name":"onChildViewAttachedToWindow","tagname":"method","owner":"com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener","id":"method-onChildViewAttachedToWindow","meta":{}},{"name":"onChildViewDetachedFromWindow","tagname":"method","owner":"com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener","id":"method-onChildViewDetachedFromWindow","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener","short_doc":"A Listener interface that can be attached to a RecylcerView to get notified\n whenever a ViewHolder is attached to or ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/OnChildAttachStateChangeListener.html#com-android-internal-widget-RecyclerView-OnChildAttachStateChangeListener' target='_blank'>OnChildAttachStateChangeListener.js</a></div></pre><div class='doc-contents'><p>A Listener interface that can be attached to a RecylcerView to get notified\n whenever a ViewHolder is attached to or detached from RecyclerView.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onChildViewAttachedToWindow' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener'>com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener</span><br/><a href='source/OnChildAttachStateChangeListener.html#com-android-internal-widget-RecyclerView-OnChildAttachStateChangeListener-method-onChildViewAttachedToWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener-method-onChildViewAttachedToWindow' class='name expandable'>onChildViewAttachedToWindow</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a view is attached to the RecyclerView. ...</div><div class='long'><p>Called when a view is attached to the RecyclerView.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The View which is attached to the RecyclerView</p>\n</div></li></ul></div></div></div><div id='method-onChildViewDetachedFromWindow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener'>com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener</span><br/><a href='source/OnChildAttachStateChangeListener.html#com-android-internal-widget-RecyclerView-OnChildAttachStateChangeListener-method-onChildViewDetachedFromWindow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.RecyclerView.OnChildAttachStateChangeListener-method-onChildViewDetachedFromWindow' class='name expandable'>onChildViewDetachedFromWindow</a>( <span class='pre'>view</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when a view is detached from RecyclerView. ...</div><div class='long'><p>Called when a view is detached from RecyclerView.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>view</span> : Object {View}<div class='sub-desc'><p>The View which is being detached from the RecyclerView</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});