Ext.data.JsonP.com_android_internal_widget_ScrollingView({"tagname":"class","name":"com.android.internal.widget.ScrollingView","autodetected":{},"files":[{"filename":"ScrollingView.js","href":"ScrollingView.html#com-android-internal-widget-ScrollingView"}],"members":[{"name":"computeHorizontalScrollExtent","tagname":"method","owner":"com.android.internal.widget.ScrollingView","id":"method-computeHorizontalScrollExtent","meta":{}},{"name":"computeHorizontalScrollOffset","tagname":"method","owner":"com.android.internal.widget.ScrollingView","id":"method-computeHorizontalScrollOffset","meta":{}},{"name":"computeHorizontalScrollRange","tagname":"method","owner":"com.android.internal.widget.ScrollingView","id":"method-computeHorizontalScrollRange","meta":{}},{"name":"computeVerticalScrollExtent","tagname":"method","owner":"com.android.internal.widget.ScrollingView","id":"method-computeVerticalScrollExtent","meta":{}},{"name":"computeVerticalScrollOffset","tagname":"method","owner":"com.android.internal.widget.ScrollingView","id":"method-computeVerticalScrollOffset","meta":{}},{"name":"computeVerticalScrollRange","tagname":"method","owner":"com.android.internal.widget.ScrollingView","id":"method-computeVerticalScrollRange","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.ScrollingView","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ScrollingView.html#com-android-internal-widget-ScrollingView' target='_blank'>ScrollingView.js</a></div></pre><div class='doc-contents'><p>An interface that can be implemented by Views to provide scroll related APIs.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-computeHorizontalScrollExtent' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ScrollingView'>com.android.internal.widget.ScrollingView</span><br/><a href='source/ScrollingView.html#com-android-internal-widget-ScrollingView-method-computeHorizontalScrollExtent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent' class='name expandable'>computeHorizontalScrollExtent</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compute the horizontal extent of the horizontal scrollbar's thumb\n within the horizontal range. ...</div><div class='long'><p>Compute the horizontal extent of the horizontal scrollbar's thumb\n within the horizontal range. This value is used to compute the length\n of the thumb within the scrollbar's track.</p>\n\n\n<p> <p>The range is expressed in arbitrary units that must be the same as the\n units used by <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" class=\"docClass\">computeHorizontalScrollRange</a>() and\n <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" class=\"docClass\">computeHorizontalScrollOffset</a>().</p></p>\n\n<p> <p>The default extent is the drawing width of this view.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the horizontal extent of the scrollbar's thumb\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" class=\"docClass\">computeHorizontalScrollRange</a>()\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" class=\"docClass\">computeHorizontalScrollOffset</a>()\n@see android.widget.ScrollBarDrawable</p>\n</div></li></ul></div></div></div><div id='method-computeHorizontalScrollOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ScrollingView'>com.android.internal.widget.ScrollingView</span><br/><a href='source/ScrollingView.html#com-android-internal-widget-ScrollingView-method-computeHorizontalScrollOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset' class='name expandable'>computeHorizontalScrollOffset</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compute the horizontal offset of the horizontal scrollbar's thumb\n within the horizontal range. ...</div><div class='long'><p>Compute the horizontal offset of the horizontal scrollbar's thumb\n within the horizontal range. This value is used to compute the position\n of the thumb within the scrollbar's track.</p>\n\n\n<p> <p>The range is expressed in arbitrary units that must be the same as the\n units used by <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" class=\"docClass\">computeHorizontalScrollRange</a>() and\n <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" class=\"docClass\">computeHorizontalScrollExtent</a>().</p></p>\n\n<p> <p>The default offset is the scroll offset of this view.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the horizontal offset of the scrollbar's thumb\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange\" class=\"docClass\">computeHorizontalScrollRange</a>()\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" class=\"docClass\">computeHorizontalScrollExtent</a>()\n@see android.widget.ScrollBarDrawable</p>\n</div></li></ul></div></div></div><div id='method-computeHorizontalScrollRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ScrollingView'>com.android.internal.widget.ScrollingView</span><br/><a href='source/ScrollingView.html#com-android-internal-widget-ScrollingView-method-computeHorizontalScrollRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollRange' class='name expandable'>computeHorizontalScrollRange</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compute the horizontal range that the horizontal scrollbar\n represents. ...</div><div class='long'><p>Compute the horizontal range that the horizontal scrollbar\n represents.</p>\n\n\n<p> <p>The range is expressed in arbitrary units that must be the same as the\n units used by <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" class=\"docClass\">computeHorizontalScrollExtent</a>() and\n <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" class=\"docClass\">computeHorizontalScrollOffset</a>().</p></p>\n\n<p> <p>The default range is the drawing width of this view.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total horizontal range represented by the horizontal\n         scrollbar\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollExtent\" class=\"docClass\">computeHorizontalScrollExtent</a>()\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeHorizontalScrollOffset\" class=\"docClass\">computeHorizontalScrollOffset</a>()\n@see android.widget.ScrollBarDrawable</p>\n</div></li></ul></div></div></div><div id='method-computeVerticalScrollExtent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ScrollingView'>com.android.internal.widget.ScrollingView</span><br/><a href='source/ScrollingView.html#com-android-internal-widget-ScrollingView-method-computeVerticalScrollExtent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent' class='name expandable'>computeVerticalScrollExtent</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compute the vertical extent of the vertical scrollbar's thumb\n within the vertical range. ...</div><div class='long'><p>Compute the vertical extent of the vertical scrollbar's thumb\n within the vertical range. This value is used to compute the length\n of the thumb within the scrollbar's track.</p>\n\n\n<p> <p>The range is expressed in arbitrary units that must be the same as the\n units used by <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" class=\"docClass\">computeVerticalScrollRange</a>() and\n <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" class=\"docClass\">computeVerticalScrollOffset</a>().</p></p>\n\n<p> <p>The default extent is the drawing height of this view.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the vertical extent of the scrollbar's thumb\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" class=\"docClass\">computeVerticalScrollRange</a>()\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" class=\"docClass\">computeVerticalScrollOffset</a>()\n@see android.widget.ScrollBarDrawable</p>\n</div></li></ul></div></div></div><div id='method-computeVerticalScrollOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ScrollingView'>com.android.internal.widget.ScrollingView</span><br/><a href='source/ScrollingView.html#com-android-internal-widget-ScrollingView-method-computeVerticalScrollOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset' class='name expandable'>computeVerticalScrollOffset</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compute the vertical offset of the vertical scrollbar's thumb\n within the horizontal range. ...</div><div class='long'><p>Compute the vertical offset of the vertical scrollbar's thumb\n within the horizontal range. This value is used to compute the position\n of the thumb within the scrollbar's track.</p>\n\n\n<p> <p>The range is expressed in arbitrary units that must be the same as the\n units used by <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" class=\"docClass\">computeVerticalScrollRange</a>() and\n <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" class=\"docClass\">computeVerticalScrollExtent</a>().</p></p>\n\n<p> <p>The default offset is the scroll offset of this view.</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the vertical offset of the scrollbar's thumb\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange\" class=\"docClass\">computeVerticalScrollRange</a>()\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" class=\"docClass\">computeVerticalScrollExtent</a>()\n@see android.widget.ScrollBarDrawable</p>\n</div></li></ul></div></div></div><div id='method-computeVerticalScrollRange' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ScrollingView'>com.android.internal.widget.ScrollingView</span><br/><a href='source/ScrollingView.html#com-android-internal-widget-ScrollingView-method-computeVerticalScrollRange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollRange' class='name expandable'>computeVerticalScrollRange</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compute the vertical range that the vertical scrollbar represents. ...</div><div class='long'><p>Compute the vertical range that the vertical scrollbar represents.</p>\n\n\n<p> <p>The range is expressed in arbitrary units that must be the same as the\n units used by <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" class=\"docClass\">computeVerticalScrollExtent</a>() and\n <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" class=\"docClass\">computeVerticalScrollOffset</a>().</p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total vertical range represented by the vertical scrollbar</p>\n\n<p> <p>The default range is the drawing height of this view.</p>\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollExtent\" class=\"docClass\">computeVerticalScrollExtent</a>()\n@see <a href=\"#!/api/com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" rel=\"com.android.internal.widget.ScrollingView-method-computeVerticalScrollOffset\" class=\"docClass\">computeVerticalScrollOffset</a>()\n@see android.widget.ScrollBarDrawable</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});