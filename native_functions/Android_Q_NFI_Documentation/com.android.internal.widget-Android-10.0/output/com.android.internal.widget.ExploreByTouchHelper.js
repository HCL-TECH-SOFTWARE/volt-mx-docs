Ext.data.JsonP.com_android_internal_widget_ExploreByTouchHelper({"tagname":"class","name":"com.android.internal.widget.ExploreByTouchHelper","autodetected":{},"files":[{"filename":"ExploreByTouchHelper.js","href":"ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper"}],"extends":"android.view.View.AccessibilityDelegate","members":[{"name":"HOST_ID","tagname":"property","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"property-HOST_ID","meta":{}},{"name":"INVALID_ID","tagname":"property","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"property-INVALID_ID","meta":{}},{"name":"dispatchHoverEvent","tagname":"method","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"method-dispatchHoverEvent","meta":{}},{"name":"getAccessibilityNodeProvider","tagname":"method","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"method-getAccessibilityNodeProvider","meta":{}},{"name":"getFocusedVirtualView","tagname":"method","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"method-getFocusedVirtualView","meta":{}},{"name":"invalidateRoot","tagname":"method","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"method-invalidateRoot","meta":{}},{"name":"invalidateVirtualView","tagname":"method","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"method-invalidateVirtualView","meta":{}},{"name":"sendEventForVirtualView","tagname":"method","owner":"com.android.internal.widget.ExploreByTouchHelper","id":"method-sendEventForVirtualView","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.internal.widget.ExploreByTouchHelper","short_doc":"ExploreByTouchHelper is a utility class for implementing accessibility\n support in custom android.view.Views that rep...","classIcon":"icon-class","superclasses":["android.view.View.AccessibilityDelegate"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.view.View.AccessibilityDelegate<div class='subclass '><strong>com.android.internal.widget.ExploreByTouchHelper</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper' target='_blank'>ExploreByTouchHelper.js</a></div></pre><div class='doc-contents'><p>ExploreByTouchHelper is a utility class for implementing accessibility\n support in custom android.view.Views that represent a collection of View-like\n logical items. It extends android.view.accessibility.AccessibilityNodeProvider and\n simplifies many aspects of providing information to accessibility services\n and managing accessibility focus. This class does not currently support\n hierarchies of logical items.\n <p>\n This should be applied to the parent view using\n android.view.View.setAccessibilityDelegate:</p>\n\n<pre> mAccessHelper = ExploreByTouchHelper.create(someView, mAccessHelperCallback);\n ViewCompat.setAccessibilityDelegate(someView, mAccessHelper);\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-HOST_ID' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-property-HOST_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-property-HOST_ID' class='name expandable'>HOST_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Virtual node identifier value for the host view's node. ...</div><div class='long'><p>Virtual node identifier value for the host view's node.</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div><div id='property-INVALID_ID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-property-INVALID_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-property-INVALID_ID' class='name expandable'>INVALID_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Virtual node identifier value for invalid nodes. ...</div><div class='long'><p>Virtual node identifier value for invalid nodes.</p>\n<p>Defaults to: <code>&quot;-2147483648&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-dispatchHoverEvent' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-method-dispatchHoverEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-method-dispatchHoverEvent' class='name expandable'>dispatchHoverEvent</a>( <span class='pre'>event</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Dispatches hover android.view.MotionEvents to the virtual view hierarchy when\n the Explore by Touch feature is enabled. ...</div><div class='long'><p>Dispatches hover android.view.MotionEvents to the virtual view hierarchy when\n the Explore by Touch feature is enabled.\n <p>\n This method should be called by overriding\n View.dispatchHoverEvent:</p>\n\n<p> <pre>&#64;Override\n public boolean dispatchHoverEvent(MotionEvent event) {\n   if (mHelper.dispatchHoverEvent(this, event) {\n     return true;\n   }\n   return super.dispatchHoverEvent(event);\n }\n </pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : Object {MotionEvent}<div class='sub-desc'><p>The hover event to dispatch to the virtual view hierarchy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>Whether the hover event was handled.</p>\n</div></li></ul></div></div></div><div id='method-getAccessibilityNodeProvider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-method-getAccessibilityNodeProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-method-getAccessibilityNodeProvider' class='name expandable'>getAccessibilityNodeProvider</a>( <span class='pre'>host</span> ) : Object {android.view.accessibility.AccessibilityNodeProvider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the android.view.accessibility.AccessibilityNodeProvider for this helper. ...</div><div class='long'><p>Returns the android.view.accessibility.AccessibilityNodeProvider for this helper.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>host</span> : Object {View}<div class='sub-desc'><p>View whose logical children are exposed by this helper.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.accessibility.AccessibilityNodeProvider}</span><div class='sub-desc'><p>The accessibility node provider for this helper.</p>\n</div></li></ul></div></div></div><div id='method-getFocusedVirtualView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-method-getFocusedVirtualView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-method-getFocusedVirtualView' class='name expandable'>getFocusedVirtualView</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the virtual view id for the currently focused item, ...</div><div class='long'><p>Returns the virtual view id for the currently focused item,</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A virtual view id, or <a href=\"#!/api/com.android.internal.widget.ExploreByTouchHelper-property-INVALID_ID\" rel=\"com.android.internal.widget.ExploreByTouchHelper-property-INVALID_ID\" class=\"docClass\">INVALID_ID</a> if no item is\n         currently focused.</p>\n</div></li></ul></div></div></div><div id='method-invalidateRoot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-method-invalidateRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-method-invalidateRoot' class='name expandable'>invalidateRoot</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the accessibility framework that the properties of the parent\n view have changed. ...</div><div class='long'><p>Notifies the accessibility framework that the properties of the parent\n view have changed.\n <p>\n You <b>must</b> call this method after adding or removing items from the\n parent view.</p>\n</div></div></div><div id='method-invalidateVirtualView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-method-invalidateVirtualView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-method-invalidateVirtualView' class='name expandable'>invalidateVirtualView</a>( <span class='pre'>virtualViewId, changeTypes</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Notifies the accessibility framework that the properties of a particular\n item have changed. ...</div><div class='long'><p>Notifies the accessibility framework that the properties of a particular\n item have changed.\n <p>\n You <b>must</b> call this method after changing any of the properties set\n in onPopulateNodeForVirtualView.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>virtualViewId</span> : Number<div class='sub-desc'><p>The virtual view id to invalidate, or\n                      <a href=\"#!/api/com.android.internal.widget.ExploreByTouchHelper-property-HOST_ID\" rel=\"com.android.internal.widget.ExploreByTouchHelper-property-HOST_ID\" class=\"docClass\">HOST_ID</a> to invalidate the root view.</p>\n</div></li><li><span class='pre'>changeTypes</span> : Number<div class='sub-desc'><p>The bit mask of change types. May be {@code 0} for the\n                    default (undefined) change type or one or more of:\n         <ul>\n         <li>AccessibilityEvent.CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION\n         <li>AccessibilityEvent.CONTENT_CHANGE_TYPE_SUBTREE\n         <li>AccessibilityEvent.CONTENT_CHANGE_TYPE_TEXT\n         <li>AccessibilityEvent.CONTENT_CHANGE_TYPE_UNDEFINED\n         </li></li></li></li></ul></p>\n</div></li></ul></div></div></div><div id='method-sendEventForVirtualView' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.internal.widget.ExploreByTouchHelper'>com.android.internal.widget.ExploreByTouchHelper</span><br/><a href='source/ExploreByTouchHelper.html#com-android-internal-widget-ExploreByTouchHelper-method-sendEventForVirtualView' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.internal.widget.ExploreByTouchHelper-method-sendEventForVirtualView' class='name expandable'>sendEventForVirtualView</a>( <span class='pre'>virtualViewId, eventType</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Populates an event of the specified type with information about an item\n and attempts to send it up through the view ...</div><div class='long'><p>Populates an event of the specified type with information about an item\n and attempts to send it up through the view hierarchy.\n <p>\n You should call this method after performing a user action that normally\n fires an accessibility event, such as clicking on an item.</p>\n\n<p> <pre>public void performItemClick(T item) {\n   ...\n   sendEventForVirtualViewId(item.id, AccessibilityEvent.TYPE_VIEW_CLICKED);\n }\n </pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>virtualViewId</span> : Number<div class='sub-desc'><p>The virtual view id for which to send an event.</p>\n</div></li><li><span class='pre'>eventType</span> : Number<div class='sub-desc'><p>The type of event to send.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the event was sent successfully.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});