Ext.data.JsonP.android_test_ServiceTestCase({"tagname":"class","name":"android.test.ServiceTestCase","autodetected":{},"files":[{"filename":"ServiceTestCase.js","href":"ServiceTestCase.html#android-test-ServiceTestCase"}],"extends":"android.test.AndroidTestCase","deprecated":{"text":"<p>Use\n <a href=\"{@docRoot}reference/android/support/test/rule/ServiceTestRule.html\">\n ServiceTestRule</a> instead. New tests should be written using the\n <a href=\"{@docRoot}tools/testing-support-library/index.html\">Android Testing Support Library</a>.</p>\n"},"members":[{"name":"getApplication","tagname":"method","owner":"android.test.ServiceTestCase","id":"method-getApplication","meta":{}},{"name":"getService","tagname":"method","owner":"android.test.ServiceTestCase","id":"method-getService","meta":{}},{"name":"getSystemContext","tagname":"method","owner":"android.test.ServiceTestCase","id":"method-getSystemContext","meta":{}},{"name":"getTestContext","tagname":"method","owner":"android.test.AndroidTestCase","id":"method-getTestContext","meta":{}},{"name":"setApplication","tagname":"method","owner":"android.test.ServiceTestCase","id":"method-setApplication","meta":{}},{"name":"setTestContext","tagname":"method","owner":"android.test.AndroidTestCase","id":"method-setTestContext","meta":{}},{"name":"testServiceTestCaseSetUpProperly","tagname":"method","owner":"android.test.ServiceTestCase","id":"method-testServiceTestCaseSetUpProperly","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.test.ServiceTestCase","short_doc":"This test case provides a framework in which you can test Service classes in\n a controlled environment. ...","classIcon":"icon-class","superclasses":["junit.framework.TestCase","android.test.AndroidTestCase"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>junit.framework.TestCase<div class='subclass '><a href='#!/api/android.test.AndroidTestCase' rel='android.test.AndroidTestCase' class='docClass'>android.test.AndroidTestCase</a><div class='subclass '><strong>android.test.ServiceTestCase</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ServiceTestCase.html#android-test-ServiceTestCase' target='_blank'>ServiceTestCase.js</a></div></pre><div class='doc-contents'><p>This test case provides a framework in which you can test Service classes in\n a controlled environment.  It provides basic support for the lifecycle of a\n Service, and hooks with which you can inject various dependencies and control\n the environment in which your Service is tested.</p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about application testing, read the\n <a href=\"{@docRoot}guide/topics/testing/index.html\">Testing</a> developer guide.</p>\n </div></p>\n\n<p> <p><b>Lifecycle Support.</b>\n A Service is accessed with a specific sequence of\n calls, as described in the\n <a href=\"http://developer.android.com/guide/topics/fundamentals/services.html\">Services</a>\n document. In order to support the lifecycle of a Service,\n <code>ServiceTestCase</code> enforces this protocol:</p>\n\n<p> <ul>\n      <li>\n          The setUp() method is called before each test method. The base implementation\n          gets the system context. If you override <code>setUp()</code>, you must call\n          <code>super.setUp()</code> as the first statement in your override.\n      </li>\n      <li>\n          The test case waits to call android.app.Service.onCreate() until one of your\n          test methods calls startService or bindService.  This gives you an\n          opportunity to set up or adjust any additional framework or test logic before you test\n          the running service.\n      </li>\n      <li>\n          When one of your test methods calls android.test.ServiceTestCase.startService()\n          or android.test.ServiceTestCase.bindService(), the test case calls\n          Service.onCreate() and then calls either\n          Service.startService(Intent) or\n          ServiceConnection, int)\n          Service.bindService(Intent, ServiceConnection, int), as appropriate. It also stores\n          values needed to track and support the lifecycle.\n      </li>\n      <li>\n          After each test method finishes, the test case calls the tearDown method. This\n          method stops and destroys the service with the appropriate calls, depending on how the\n          service was started. If you override <code>tearDown()</code>, your must call the\n          <code>super.tearDown()</code> as the last statement in your override.\n      </li>\n </ul></p>\n\n<p> <p>\n      <strong>Dependency Injection.</strong>\n      A service has two inherent dependencies, its Context and its\n      associated Application. The ServiceTestCase framework\n      allows you to inject modified, mock, or isolated replacements for these dependencies, and\n      thus perform unit tests with controlled dependencies in an isolated environment.\n </p>\n <p>\n      By default, the test case is injected with a full system context and a generic\n      MockApplication object. You can inject\n      alternatives to either of these by invoking\n      setContext() or\n      <a href=\"#!/api/android.test.ServiceTestCase-method-setApplication\" rel=\"android.test.ServiceTestCase-method-setApplication\" class=\"docClass\">setApplication()</a>.  You must do this <em>before</em> calling\n      startService() or bindService().  The test framework provides a\n      number of alternatives for Context, including\n      MockContext,\n      <a href=\"#!/api/android.test.RenamingDelegatingContext\" rel=\"android.test.RenamingDelegatingContext\" class=\"docClass\">RenamingDelegatingContext</a>,\n      ContextWrapper, and\n      <a href=\"#!/api/android.test.IsolatedContext\" rel=\"android.test.IsolatedContext\" class=\"docClass\">android.test.IsolatedContext</a>.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Use\n <a href=\"{@docRoot}reference/android/support/test/rule/ServiceTestRule.html\">\n ServiceTestRule</a> instead. New tests should be written using the\n <a href=\"{@docRoot}tools/testing-support-library/index.html\">Android Testing Support Library</a>.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getApplication' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ServiceTestCase'>android.test.ServiceTestCase</span><br/><a href='source/ServiceTestCase.html#android-test-ServiceTestCase-method-getApplication' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ServiceTestCase-method-getApplication' class='name expandable'>getApplication</a>( <span class='pre'></span> ) : Object {android.app.Application}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Application object in use by the service under test. ...</div><div class='long'><p>Returns the Application object in use by the service under test.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Application}</span><div class='sub-desc'><p>The application object.\n@see <a href=\"#!/api/android.test.ServiceTestCase-method-setApplication\" rel=\"android.test.ServiceTestCase-method-setApplication\" class=\"docClass\">setApplication</a></p>\n</div></li></ul></div></div></div><div id='method-getService' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ServiceTestCase'>android.test.ServiceTestCase</span><br/><a href='source/ServiceTestCase.html#android-test-ServiceTestCase-method-getService' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ServiceTestCase-method-getService' class='name expandable'>getService</a>( <span class='pre'></span> ) : Object {android.app.Service}<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.app.Service}</span><div class='sub-desc'><p>An instance of the service under test. This instance is created automatically when\n a test calls startService or bindService.</p>\n</div></li></ul></div></div></div><div id='method-getSystemContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ServiceTestCase'>android.test.ServiceTestCase</span><br/><a href='source/ServiceTestCase.html#android-test-ServiceTestCase-method-getSystemContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ServiceTestCase-method-getSystemContext' class='name expandable'>getSystemContext</a>( <span class='pre'></span> ) : Object {android.content.Context}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the real system context that is saved by setUp(). ...</div><div class='long'><p>Returns the real system context that is saved by setUp(). Use it to create\n mock or other types of context objects for the service under test.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.Context}</span><div class='sub-desc'><p>A normal system context.</p>\n</div></li></ul></div></div></div><div id='method-getTestContext' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.test.AndroidTestCase' rel='android.test.AndroidTestCase' class='defined-in docClass'>android.test.AndroidTestCase</a><br/><a href='source/AndroidTestCase.html#android-test-AndroidTestCase-method-getTestContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.AndroidTestCase-method-getTestContext' class='name expandable'>getTestContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stub only ...</div><div class='long'><p>Stub only</p>\n</div></div></div><div id='method-setApplication' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ServiceTestCase'>android.test.ServiceTestCase</span><br/><a href='source/ServiceTestCase.html#android-test-ServiceTestCase-method-setApplication' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ServiceTestCase-method-setApplication' class='name expandable'>setApplication</a>( <span class='pre'>application</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the application that is used during the test. ...</div><div class='long'><p>Sets the application that is used during the test.  If you do not call this method,\n a new MockApplication object is used.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>application</span> : Object {Application}<div class='sub-desc'><p>The Application object that is used by the service under test.\n@see <a href=\"#!/api/android.test.ServiceTestCase-method-getApplication\" rel=\"android.test.ServiceTestCase-method-getApplication\" class=\"docClass\">getApplication</a>()</p>\n</div></li></ul></div></div></div><div id='method-setTestContext' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.test.AndroidTestCase' rel='android.test.AndroidTestCase' class='defined-in docClass'>android.test.AndroidTestCase</a><br/><a href='source/AndroidTestCase.html#android-test-AndroidTestCase-method-setTestContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.AndroidTestCase-method-setTestContext' class='name expandable'>setTestContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stub only ...</div><div class='long'><p>Stub only</p>\n</div></div></div><div id='method-testServiceTestCaseSetUpProperly' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ServiceTestCase'>android.test.ServiceTestCase</span><br/><a href='source/ServiceTestCase.html#android-test-ServiceTestCase-method-testServiceTestCaseSetUpProperly' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ServiceTestCase-method-testServiceTestCaseSetUpProperly' class='name expandable'>testServiceTestCaseSetUpProperly</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests that setupService() runs correctly and issues an\n Object) if it does. ...</div><div class='long'><p>Tests that setupService() runs correctly and issues an\n Object) if it does.\n You can override this test method if you wish.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Exception</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use\n <a href=\"{@docRoot}reference/android/support/test/rule/ServiceTestRule.html\">\n ServiceTestRule</a> instead. New tests should be written using the\n <a href=\"{@docRoot}tools/testing-support-library/index.html\">Android Testing Support Library</a>.</p>\n"}}});