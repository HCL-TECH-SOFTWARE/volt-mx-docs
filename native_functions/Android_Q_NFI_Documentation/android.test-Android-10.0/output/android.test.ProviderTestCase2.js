Ext.data.JsonP.android_test_ProviderTestCase2({"tagname":"class","name":"android.test.ProviderTestCase2","autodetected":{},"files":[{"filename":"ProviderTestCase2.js","href":"ProviderTestCase2.html#android-test-ProviderTestCase2"}],"extends":"android.test.AndroidTestCase","members":[{"name":"getMockContentResolver","tagname":"method","owner":"android.test.ProviderTestCase2","id":"method-getMockContentResolver","meta":{}},{"name":"getMockContext","tagname":"method","owner":"android.test.ProviderTestCase2","id":"method-getMockContext","meta":{}},{"name":"getProvider","tagname":"method","owner":"android.test.ProviderTestCase2","id":"method-getProvider","meta":{}},{"name":"getTestContext","tagname":"method","owner":"android.test.AndroidTestCase","id":"method-getTestContext","meta":{}},{"name":"newResolverWithContentProviderFromSql","tagname":"method","owner":"android.test.ProviderTestCase2","id":"method-newResolverWithContentProviderFromSql","meta":{}},{"name":"setTestContext","tagname":"method","owner":"android.test.AndroidTestCase","id":"method-setTestContext","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.test.ProviderTestCase2","short_doc":"This test case class provides a framework for testing a single\n ContentProvider and for testing your app code with an...","classIcon":"icon-class","superclasses":["junit.framework.TestCase","android.test.AndroidTestCase"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>junit.framework.TestCase<div class='subclass '><a href='#!/api/android.test.AndroidTestCase' rel='android.test.AndroidTestCase' class='docClass'>android.test.AndroidTestCase</a><div class='subclass '><strong>android.test.ProviderTestCase2</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ProviderTestCase2.html#android-test-ProviderTestCase2' target='_blank'>ProviderTestCase2.js</a></div></pre><div class='doc-contents'><p>This test case class provides a framework for testing a single\n ContentProvider and for testing your app code with an\n isolated content provider. Instead of using the system map of\n providers that is based on the manifests of other applications, the test\n case creates its own internal map. It then uses this map to resolve providers\n given an authority. This allows you to inject test providers and to null out\n providers that you do not want to use.\n <p>\n      This test case also sets up the following mock objects:\n </p>\n <ul>\n      <li>\n          An <a href=\"#!/api/android.test.IsolatedContext\" rel=\"android.test.IsolatedContext\" class=\"docClass\">android.test.IsolatedContext</a> that stubs out Context methods that might\n          affect the rest of the running system, while allowing tests to do real file and\n          database work.\n      </li>\n      <li>\n          A android.test.mock.MockContentResolver that provides the functionality of a\n          regular content resolver, but uses <a href=\"#!/api/android.test.IsolatedContext\" rel=\"android.test.IsolatedContext\" class=\"docClass\">android.test.IsolatedContext</a>. It stubs out\n          ContentObserver, boolean) to\n          prevent the test from affecting the running system.\n      </li>\n      <li>\n          An instance of the provider under test, running in an <a href=\"#!/api/android.test.IsolatedContext\" rel=\"android.test.IsolatedContext\" class=\"docClass\">android.test.IsolatedContext</a>.\n      </li>\n </ul>\n <p>\n      This framework is set up automatically by the base class' setUp() method. If you\n      override this method, you must call the super method as the first statement in\n      your override.\n </p>\n <p>\n     In order for their tests to be run, concrete subclasses must provide their own\n     constructor with no arguments. This constructor must call\n     String) as  its first operation.\n </p>\n For more information on content provider testing, please see\n <a href=\"{@docRoot}tools/testing/contentprovider_testing.html\">Content Provider Testing</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getMockContentResolver' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ProviderTestCase2'>android.test.ProviderTestCase2</span><br/><a href='source/ProviderTestCase2.html#android-test-ProviderTestCase2-method-getMockContentResolver' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ProviderTestCase2-method-getMockContentResolver' class='name expandable'>getMockContentResolver</a>( <span class='pre'></span> ) : Object {android.test.mock.MockContentResolver}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the MockContentResolver created by this class during initialization. ...</div><div class='long'><p>Gets the MockContentResolver created by this class during initialization. You\n must use the methods of this resolver to access the provider under test.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.test.mock.MockContentResolver}</span><div class='sub-desc'><p>A MockContentResolver instance.</p>\n</div></li></ul></div></div></div><div id='method-getMockContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ProviderTestCase2'>android.test.ProviderTestCase2</span><br/><a href='source/ProviderTestCase2.html#android-test-ProviderTestCase2-method-getMockContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ProviderTestCase2-method-getMockContext' class='name expandable'>getMockContext</a>( <span class='pre'></span> ) : Object {android.test.IsolatedContext}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the android.test.IsolatedContext created by this class during initialization. ...</div><div class='long'><p>Gets the <a href=\"#!/api/android.test.IsolatedContext\" rel=\"android.test.IsolatedContext\" class=\"docClass\">android.test.IsolatedContext</a> created by this class during initialization.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.test.IsolatedContext}</span><div class='sub-desc'><p>The IsolatedContext instance</p>\n</div></li></ul></div></div></div><div id='method-getProvider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ProviderTestCase2'>android.test.ProviderTestCase2</span><br/><a href='source/ProviderTestCase2.html#android-test-ProviderTestCase2-method-getProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ProviderTestCase2-method-getProvider' class='name expandable'>getProvider</a>( <span class='pre'></span> ) : Object {android.content.ContentProvider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the content provider created by this class in the setUp() method. ...</div><div class='long'><p>Returns the content provider created by this class in the setUp() method.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.ContentProvider}</span><div class='sub-desc'><p>T An instance of the provider class given as a parameter to the test case class.</p>\n</div></li></ul></div></div></div><div id='method-getTestContext' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.test.AndroidTestCase' rel='android.test.AndroidTestCase' class='defined-in docClass'>android.test.AndroidTestCase</a><br/><a href='source/AndroidTestCase.html#android-test-AndroidTestCase-method-getTestContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.AndroidTestCase-method-getTestContext' class='name expandable'>getTestContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stub only ...</div><div class='long'><p>Stub only</p>\n</div></div></div><div id='method-newResolverWithContentProviderFromSql' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.test.ProviderTestCase2'>android.test.ProviderTestCase2</span><br/><a href='source/ProviderTestCase2.html#android-test-ProviderTestCase2-method-newResolverWithContentProviderFromSql' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.ProviderTestCase2-method-newResolverWithContentProviderFromSql' class='name expandable'>newResolverWithContentProviderFromSql</a>( <span class='pre'>targetContext, filenamePrefix, providerClass, authority, databaseName, databaseVersion, sql</span> ) : Object {android.content.ContentResolver}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new content provider of the same type as that passed to the test case class,\n      with an authority name s...</div><div class='long'><p>\n      Creates a new content provider of the same type as that passed to the test case class,\n      with an authority name set to the authority parameter, and using an SQLite database as\n      the underlying data source. The SQL statement parameter is used to create the database.\n      This method also creates a new MockContentResolver and adds the provider to it.\n </p>\n\n\n<p> <p>\n      Both the new provider and the new resolver are put into an <a href=\"#!/api/android.test.IsolatedContext\" rel=\"android.test.IsolatedContext\" class=\"docClass\">android.test.IsolatedContext</a>\n      that uses the targetContext parameter for file operations and a MockContext\n      for everything else. The IsolatedContext prepends the filenamePrefix parameter to\n      file, database, and directory names.\n </p>\n <p>\n      This is a convenience method for creating a \"mock\" provider that can contain test data.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>targetContext</span> : Object {Context}<div class='sub-desc'><p>The context to use as the basis of the IsolatedContext</p>\n</div></li><li><span class='pre'>filenamePrefix</span> : String<div class='sub-desc'><p>A string that is prepended to file, database, and directory names</p>\n</div></li><li><span class='pre'>providerClass</span> : Object {java.lang.Class}<div class='sub-desc'><p>The type of the provider being tested</p>\n</div></li><li><span class='pre'>authority</span> : String<div class='sub-desc'><p>The authority string to associated with the test provider</p>\n</div></li><li><span class='pre'>databaseName</span> : String<div class='sub-desc'><p>The name assigned to the database</p>\n</div></li><li><span class='pre'>databaseVersion</span> : Number<div class='sub-desc'><p>The version assigned to the database</p>\n</div></li><li><span class='pre'>sql</span> : String<div class='sub-desc'><p>A string containing the SQL statements that are needed to create the desired\n database and its tables. The format is the same as that generated by the\n <a href=\"http://www.sqlite.org/sqlite.html\">sqlite3</a> tool's <code>.dump</code> command.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.ContentResolver}</span><div class='sub-desc'><p>ContentResolver A new MockContentResolver linked to the provider</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalAccessException</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>InstantiationException</p>\n</div></li></ul></div></div></div><div id='method-setTestContext' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.test.AndroidTestCase' rel='android.test.AndroidTestCase' class='defined-in docClass'>android.test.AndroidTestCase</a><br/><a href='source/AndroidTestCase.html#android-test-AndroidTestCase-method-setTestContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.test.AndroidTestCase-method-setTestContext' class='name expandable'>setTestContext</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Stub only ...</div><div class='long'><p>Stub only</p>\n</div></div></div></div></div></div></div>","meta":{}});