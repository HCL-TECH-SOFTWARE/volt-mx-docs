Ext.data.JsonP.android_hardware_camera2_marshal_MarshalQueryable({"tagname":"class","name":"android.hardware.camera2.marshal.MarshalQueryable","autodetected":{},"files":[{"filename":"MarshalQueryable.js","href":"MarshalQueryable.html#android-hardware-camera2-marshal-MarshalQueryable"}],"members":[{"name":"createMarshaler","tagname":"method","owner":"android.hardware.camera2.marshal.MarshalQueryable","id":"method-createMarshaler","meta":{}},{"name":"isTypeMappingSupported","tagname":"method","owner":"android.hardware.camera2.marshal.MarshalQueryable","id":"method-isTypeMappingSupported","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.camera2.marshal.MarshalQueryable","short_doc":"Query if a marshaler can marshal to/from a particular native and managed type; if it supports\n the combination, allow...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/MarshalQueryable.html#android-hardware-camera2-marshal-MarshalQueryable' target='_blank'>MarshalQueryable.js</a></div></pre><div class='doc-contents'><p>Query if a marshaler can marshal to/from a particular native and managed type; if it supports\n the combination, allow creating a marshaler instance to do the serialization.</p>\n\n<p> <p>Not all queryable instances will support exactly one combination. Some, such as the\n primitive queryable will support all primitive to/from managed mappings (as long as they are\n 1:1). Others, such as the rectangle queryable will only support integer to rectangle mappings.\n </p></p>\n\n<p> <p>Yet some others are codependent on other queryables; e.g. array queryables might only support\n a type map for {@code T[]} if another queryable exists with support for the component type\n {@code T}.</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createMarshaler' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.marshal.MarshalQueryable'>android.hardware.camera2.marshal.MarshalQueryable</span><br/><a href='source/MarshalQueryable.html#android-hardware-camera2-marshal-MarshalQueryable-method-createMarshaler' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.marshal.MarshalQueryable-method-createMarshaler' class='name expandable'>createMarshaler</a>( <span class='pre'>managedType, nativeType</span> ) : Object {android.hardware.camera2.marshal.Marshaler}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a marshaler between the selected managed and native type. ...</div><div class='long'><p>Create a marshaler between the selected managed and native type.</p>\n\n<p> <p>This marshaler instance is only good for that specific type mapping; and will refuse\n to map other managed types, other native types, or an other combination that isn't\n this exact one.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>managedType</span> : Object {android.hardware.camera2.utils.TypeReference}<div class='sub-desc'><p>a managed type reference</p>\n</div></li><li><span class='pre'>nativeType</span> : Number<div class='sub-desc'><p>the native type, e.g.\n          TYPE_BYTE</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.camera2.marshal.Marshaler}</span><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException\n          if <a href=\"#!/api/android.hardware.camera2.marshal.MarshalQueryable-method-isTypeMappingSupported\" rel=\"android.hardware.camera2.marshal.MarshalQueryable-method-isTypeMappingSupported\" class=\"docClass\">isTypeMappingSupported</a> returns {@code false}</p>\n</div></li></ul></div></div></div><div id='method-isTypeMappingSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.camera2.marshal.MarshalQueryable'>android.hardware.camera2.marshal.MarshalQueryable</span><br/><a href='source/MarshalQueryable.html#android-hardware-camera2-marshal-MarshalQueryable-method-isTypeMappingSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.camera2.marshal.MarshalQueryable-method-isTypeMappingSupported' class='name expandable'>isTypeMappingSupported</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Determine whether or not this query marshal is able to create a marshaler that will\n support the managed type and nat...</div><div class='long'><p>Determine whether or not this query marshal is able to create a marshaler that will\n support the managed type and native type mapping.</p>\n\n<p> <p>If this returns {@code true}, then a marshaler can be instantiated by\n <a href=\"#!/api/android.hardware.camera2.marshal.MarshalQueryable-method-createMarshaler\" rel=\"android.hardware.camera2.marshal.MarshalQueryable-method-createMarshaler\" class=\"docClass\">createMarshaler</a> that will marshal data to/from the native type\n from/to the managed type.</p></p>\n\n<p> <p>Most marshalers are likely to only support one type map.</p></p>\n</div></div></div></div></div></div></div>","meta":{}});