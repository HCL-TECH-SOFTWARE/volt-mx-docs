Ext.data.JsonP.java_time_OffsetDateTime({"tagname":"class","name":"java.time.OffsetDateTime","autodetected":{},"files":[{"filename":"OffsetDateTime.js","href":"OffsetDateTime.html#java-time-OffsetDateTime"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"MAX","tagname":"property","owner":"java.time.OffsetDateTime","id":"property-MAX","meta":{}},{"name":"MIN","tagname":"property","owner":"java.time.OffsetDateTime","id":"property-MIN","meta":{}},{"name":"adjustInto","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-adjustInto","meta":{}},{"name":"atZoneSameInstant","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-atZoneSameInstant","meta":{}},{"name":"atZoneSimilarLocal","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-atZoneSimilarLocal","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-compareTo","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-equals","meta":{}},{"name":"format","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-format","meta":{}},{"name":"from","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-from","meta":{}},{"name":"get","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-get","meta":{}},{"name":"getDayOfMonth","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getDayOfMonth","meta":{}},{"name":"getDayOfWeek","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getDayOfWeek","meta":{}},{"name":"getDayOfYear","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getDayOfYear","meta":{}},{"name":"getHour","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getHour","meta":{}},{"name":"getLong","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getLong","meta":{}},{"name":"getMinute","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getMinute","meta":{}},{"name":"getMonth","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getMonth","meta":{}},{"name":"getMonthValue","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getMonthValue","meta":{}},{"name":"getNano","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getNano","meta":{}},{"name":"getOffset","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getOffset","meta":{}},{"name":"getSecond","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getSecond","meta":{}},{"name":"getYear","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-getYear","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-hashCode","meta":{}},{"name":"isAfter","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-isAfter","meta":{}},{"name":"isBefore","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-isBefore","meta":{}},{"name":"isEqual","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-isEqual","meta":{}},{"name":"isSupported","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-isSupported","meta":{}},{"name":"minus","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minus","meta":{}},{"name":"minusDays","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusDays","meta":{}},{"name":"minusHours","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusHours","meta":{}},{"name":"minusMinutes","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusMinutes","meta":{}},{"name":"minusMonths","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusMonths","meta":{}},{"name":"minusNanos","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusNanos","meta":{}},{"name":"minusSeconds","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusSeconds","meta":{}},{"name":"minusWeeks","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusWeeks","meta":{}},{"name":"minusYears","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-minusYears","meta":{}},{"name":"now","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-now","meta":{}},{"name":"of","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-of","meta":{}},{"name":"ofInstant","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-ofInstant","meta":{}},{"name":"parse","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-parse","meta":{}},{"name":"plus","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plus","meta":{}},{"name":"plusDays","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusDays","meta":{}},{"name":"plusHours","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusHours","meta":{}},{"name":"plusMinutes","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusMinutes","meta":{}},{"name":"plusMonths","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusMonths","meta":{}},{"name":"plusNanos","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusNanos","meta":{}},{"name":"plusSeconds","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusSeconds","meta":{}},{"name":"plusWeeks","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusWeeks","meta":{}},{"name":"plusYears","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-plusYears","meta":{}},{"name":"query","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-query","meta":{}},{"name":"range","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-range","meta":{}},{"name":"timeLineOrder","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-timeLineOrder","meta":{}},{"name":"toEpochSecond","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toEpochSecond","meta":{}},{"name":"toInstant","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toInstant","meta":{}},{"name":"toLocalDate","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toLocalDate","meta":{}},{"name":"toLocalDateTime","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toLocalDateTime","meta":{}},{"name":"toLocalTime","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toLocalTime","meta":{}},{"name":"toOffsetTime","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toOffsetTime","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toString","meta":{}},{"name":"toZonedDateTime","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-toZonedDateTime","meta":{}},{"name":"truncatedTo","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-truncatedTo","meta":{}},{"name":"until","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-until","meta":{}},{"name":"with","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-with","meta":{}},{"name":"withDayOfMonth","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withDayOfMonth","meta":{}},{"name":"withDayOfYear","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withDayOfYear","meta":{}},{"name":"withHour","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withHour","meta":{}},{"name":"withMinute","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withMinute","meta":{}},{"name":"withMonth","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withMonth","meta":{}},{"name":"withNano","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withNano","meta":{}},{"name":"withOffsetSameInstant","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withOffsetSameInstant","meta":{}},{"name":"withOffsetSameLocal","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withOffsetSameLocal","meta":{}},{"name":"withSecond","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withSecond","meta":{}},{"name":"withYear","tagname":"method","owner":"java.time.OffsetDateTime","id":"method-withYear","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.OffsetDateTime","short_doc":"implements java.time.temporal.Temporal\n\n implements java.time.temporal.TemporalAdjuster\n\n implements java.lang.Compar...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.OffsetDateTime</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/OffsetDateTime.html#java-time-OffsetDateTime' target='_blank'>OffsetDateTime.js</a></div></pre><div class='doc-contents'><p>implements java.time.temporal.Temporal</p>\n\n<p> implements java.time.temporal.TemporalAdjuster</p>\n\n<p> implements java.lang.Comparable</p>\n\n<p> implements java.io.Serializable</p>\n\n<p>A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system,\n such as {@code 2007-12-03T10:15:30+01:00}.\n <p>\n {@code OffsetDateTime} is an immutable representation of a date-time with an offset.\n This class stores all date and time fields, to a precision of nanoseconds,\n as well as the offset from UTC/Greenwich. For example, the value\n \"2nd October 2007 at 13:45.30.123456789 +02:00\" can be stored in an {@code OffsetDateTime}.\n <p>\n {@code OffsetDateTime}, <a href=\"#!/api/java.time.ZonedDateTime\" rel=\"java.time.ZonedDateTime\" class=\"docClass\">java.time.ZonedDateTime</a> and <a href=\"#!/api/java.time.Instant\" rel=\"java.time.Instant\" class=\"docClass\">java.time.Instant</a> all store an instant\n on the time-line to nanosecond precision.\n {@code Instant} is the simplest, simply representing the instant.\n {@code OffsetDateTime} adds to the instant the offset from UTC/Greenwich, which allows\n the local date-time to be obtained.\n {@code ZonedDateTime} adds full time-zone rules.\n <p>\n It is intended that {@code ZonedDateTime} or {@code Instant} is used to model data\n in simpler applications. This class may be used when modeling date-time concepts in\n more detail, or when communicating to a database or in a network protocol.</p>\n\n<p> @implSpec\n This class is immutable and thread-safe.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-MAX' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-property-MAX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-property-MAX' class='name expandable'>MAX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The maximum supported {@code OffsetDateTime}, '+999999999-12-31T23:59:59.999999999-18:00'. ...</div><div class='long'><p>The maximum supported {@code OffsetDateTime}, '+999999999-12-31T23:59:59.999999999-18:00'.\nThis is the local date-time just before midnight at the end of the maximum date\nin the minimum offset (larger negative offsets are later on the time-line).\nThis combines <a href=\"#!/api/java.time.LocalDateTime-property-MAX\" rel=\"java.time.LocalDateTime-property-MAX\" class=\"docClass\">java.time.LocalDateTime.MAX</a> and <a href=\"#!/api/java.time.ZoneOffset-property-MIN\" rel=\"java.time.ZoneOffset-property-MIN\" class=\"docClass\">java.time.ZoneOffset.MIN</a>.\nThis could be used by an application as a \"far future\" date-time.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MIN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-property-MIN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-property-MIN' class='name expandable'>MIN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The minimum supported {@code OffsetDateTime}, '-999999999-01-01T00:00:00+18:00'. ...</div><div class='long'><p>The minimum supported {@code OffsetDateTime}, '-999999999-01-01T00:00:00+18:00'.\nThis is the local date-time of midnight at the start of the minimum date\nin the maximum offset (larger offsets are earlier on the time-line).\nThis combines <a href=\"#!/api/java.time.LocalDateTime-property-MIN\" rel=\"java.time.LocalDateTime-property-MIN\" class=\"docClass\">java.time.LocalDateTime.MIN</a> and <a href=\"#!/api/java.time.ZoneOffset-property-MAX\" rel=\"java.time.ZoneOffset-property-MAX\" class=\"docClass\">java.time.ZoneOffset.MAX</a>.\nThis could be used by an application as a \"far past\" date-time.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adjustInto' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-adjustInto' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-adjustInto' class='name expandable'>adjustInto</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts the specified temporal object to have the same offset, date\n and time as this object. ...</div><div class='long'><p>Adjusts the specified temporal object to have the same offset, date\n and time as this object.\n <p>\n This returns a temporal object of the same observable type as the input\n with the offset, date and time changed to be the same as this.\n <p>\n The adjustment is equivalent to using long)\n three times, passing ChronoField.EPOCH_DAY,\n ChronoField.NANO_OF_DAY and ChronoField.OFFSET_SECONDS as the fields.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.with(TemporalAdjuster):</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   temporal = thisOffsetDateTime.adjustInto(temporal);\n   temporal = temporal.with(thisOffsetDateTime);\n </pre>\n\n\n<p> <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the target object to be adjusted, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>the adjusted object, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to make the adjustment</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-atZoneSameInstant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-atZoneSameInstant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-atZoneSameInstant' class='name expandable'>atZoneSameInstant</a>( <span class='pre'>zone</span> ) : Object {java.time.ZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines this date-time with a time-zone to create a {@code ZonedDateTime}\n ensuring that the result has the same ins...</div><div class='long'><p>Combines this date-time with a time-zone to create a {@code ZonedDateTime}\n ensuring that the result has the same instant.\n <p>\n This returns a {@code ZonedDateTime} formed from this date-time and the specified time-zone.\n This conversion will ignore the visible local date-time and use the underlying instant instead.\n This avoids any problems with local time-line gaps or overlaps.\n The result might have different values for fields such as hour, minute an even day.\n <p>\n To attempt to retain the values of the fields, use <a href=\"#!/api/java.time.OffsetDateTime-method-atZoneSimilarLocal\" rel=\"java.time.OffsetDateTime-method-atZoneSimilarLocal\" class=\"docClass\">atZoneSimilarLocal</a>(ZoneId).\n To use the offset as the zone ID, use <a href=\"#!/api/java.time.OffsetDateTime-method-toZonedDateTime\" rel=\"java.time.OffsetDateTime-method-toZonedDateTime\" class=\"docClass\">toZonedDateTime</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZonedDateTime}</span><div class='sub-desc'><p>the zoned date-time formed from this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-atZoneSimilarLocal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-atZoneSimilarLocal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-atZoneSimilarLocal' class='name expandable'>atZoneSimilarLocal</a>( <span class='pre'>zone</span> ) : Object {java.time.ZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines this date-time with a time-zone to create a {@code ZonedDateTime}\n trying to keep the same local date and time. ...</div><div class='long'><p>Combines this date-time with a time-zone to create a {@code ZonedDateTime}\n trying to keep the same local date and time.\n <p>\n This returns a {@code ZonedDateTime} formed from this date-time and the specified time-zone.\n Where possible, the result will have the same local date-time as this object.\n <p>\n Time-zone rules, such as daylight savings, mean that not every time on the\n local time-line exists. If the local date-time is in a gap or overlap according to\n the rules then a resolver is used to determine the resultant local time and offset.\n This method uses java.time.ZoneId, ZoneOffset)\n to retain the offset from this instance if possible.\n <p>\n Finer control over gaps and overlaps is available in two ways.\n If you simply want to use the later offset at overlaps then call\n java.time.ZonedDateTime.withLaterOffsetAtOverlap() immediately after this method.\n <p>\n To create a zoned date-time at the same instant irrespective of the local time-line,\n use <a href=\"#!/api/java.time.OffsetDateTime-method-atZoneSameInstant\" rel=\"java.time.OffsetDateTime-method-atZoneSameInstant\" class=\"docClass\">atZoneSameInstant</a>(ZoneId).\n To use the offset as the zone ID, use <a href=\"#!/api/java.time.OffsetDateTime-method-toZonedDateTime\" rel=\"java.time.OffsetDateTime-method-toZonedDateTime\" class=\"docClass\">toZonedDateTime</a>().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZonedDateTime}</span><div class='sub-desc'><p>the zoned date-time formed from this date and the earliest valid time for the zone, not null</p>\n</div></li></ul></div></div></div><div id='method-compareTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>other</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this date-time to another date-time. ...</div><div class='long'><p>Compares this date-time to another date-time.\n <p>\n The comparison is based on the instant then on the local date-time.\n It is \"consistent with equals\", as defined by Comparable.\n <p>\n For example, the following is the comparator order:\n <ol>\n <li>{@code 2008-12-03T10:30+01:00}</li>\n <li>{@code 2008-12-03T11:00+01:00}</li>\n <li>{@code 2008-12-03T12:00+02:00}</li>\n <li>{@code 2008-12-03T11:30+01:00}</li>\n <li>{@code 2008-12-03T12:00+01:00}</li>\n <li>{@code 2008-12-03T12:30+01:00}</li>\n </ol>\n Values #2 and #3 represent the same instant on the time-line.\n When two values represent the same instant, the local date-time is compared\n to distinguish them. This step is needed to make the ordering\n consistent with {@code equals()}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {OffsetDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this date-time is equal to another date-time. ...</div><div class='long'><p>Checks if this date-time is equal to another date-time.\n <p>\n The comparison is based on the local date-time and the offset.\n To compare for the same instant on the time-line, use <a href=\"#!/api/java.time.OffsetDateTime-method-isEqual\" rel=\"java.time.OffsetDateTime-method-isEqual\" class=\"docClass\">isEqual</a>.\n Only objects of type {@code OffsetDateTime} are compared, other types return false.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other date-time</p>\n</div></li></ul></div></div></div><div id='method-format' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-format' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-format' class='name expandable'>format</a>( <span class='pre'>formatter</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats this date-time using the specified formatter. ...</div><div class='long'><p>Formats this date-time using the specified formatter.\n <p>\n This date-time will be passed to the formatter to produce a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the formatted date-time string, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if an error occurs during printing</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-from' class='name expandable'>from</a>( <span class='pre'>temporal</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code OffsetDateTime} from a temporal object. ...</div><div class='long'><p>Obtains an instance of {@code OffsetDateTime} from a temporal object.\n <p>\n This obtains an offset date-time based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code OffsetDateTime}.\n <p>\n The conversion will first obtain a {@code ZoneOffset} from the temporal object.\n It will then try to obtain a {@code LocalDateTime}, falling back to an {@code Instant} if necessary.\n The result will be the combination of {@code ZoneOffset} with either\n with {@code LocalDateTime} or {@code Instant}.\n Implementations are permitted to perform optimizations such as accessing\n those fields that are equivalent to the relevant objects.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code OffsetDateTime::from}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>the offset date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to an {@code OffsetDateTime}</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-get' class='name expandable'>get</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this date-time as an {@code int}. ...</div><div class='long'><p>Gets the value of the specified field from this date-time as an {@code int}.\n <p>\n This queries this date-time for the value of the specified field.\n The returned value will always be within the valid range of values for the field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this date-time, except {@code NANO_OF_DAY}, {@code MICRO_OF_DAY},\n {@code EPOCH_DAY}, {@code PROLEPTIC_MONTH} and {@code INSTANT_SECONDS} which are too\n large to fit in an {@code int} and throw a {@code DateTimeException}.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained or\n         the value is outside the range of valid values for the field</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported or\n         the range of values exceeds an {@code int}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getDayOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getDayOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getDayOfMonth' class='name expandable'>getDayOfMonth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the day-of-month field. ...</div><div class='long'><p>Gets the day-of-month field.\n <p>\n This method returns the primitive {@code int} value for the day-of-month.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the day-of-month, from 1 to 31</p>\n</div></li></ul></div></div></div><div id='method-getDayOfWeek' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getDayOfWeek' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getDayOfWeek' class='name expandable'>getDayOfWeek</a>( <span class='pre'></span> ) : Object {java.time.DayOfWeek}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the day-of-week field, which is an enum {@code DayOfWeek}. ...</div><div class='long'><p>Gets the day-of-week field, which is an enum {@code DayOfWeek}.\n <p>\n This method returns the enum <a href=\"#!/api/java.time.DayOfWeek\" rel=\"java.time.DayOfWeek\" class=\"docClass\">java.time.DayOfWeek</a> for the day-of-week.\n This avoids confusion as to what {@code int} values mean.\n If you need access to the primitive {@code int} value then the enum\n provides the int value.\n <p>\n Additional information can be obtained from the {@code DayOfWeek}.\n This includes textual names of the values.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.DayOfWeek}</span><div class='sub-desc'><p>the day-of-week, not null</p>\n</div></li></ul></div></div></div><div id='method-getDayOfYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getDayOfYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getDayOfYear' class='name expandable'>getDayOfYear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the day-of-year field. ...</div><div class='long'><p>Gets the day-of-year field.\n <p>\n This method returns the primitive {@code int} value for the day-of-year.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the day-of-year, from 1 to 365, or 366 in a leap year</p>\n</div></li></ul></div></div></div><div id='method-getHour' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getHour' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getHour' class='name expandable'>getHour</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the hour-of-day field. ...</div><div class='long'><p>Gets the hour-of-day field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the hour-of-day, from 0 to 23</p>\n</div></li></ul></div></div></div><div id='method-getLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getLong' class='name expandable'>getLong</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this date-time as a {@code long}. ...</div><div class='long'><p>Gets the value of the specified field from this date-time as a {@code long}.\n <p>\n This queries this date-time for the value of the specified field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this date-time.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getMinute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getMinute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getMinute' class='name expandable'>getMinute</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the minute-of-hour field. ...</div><div class='long'><p>Gets the minute-of-hour field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the minute-of-hour, from 0 to 59</p>\n</div></li></ul></div></div></div><div id='method-getMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getMonth' class='name expandable'>getMonth</a>( <span class='pre'></span> ) : Object {java.time.Month}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the month-of-year field using the {@code Month} enum. ...</div><div class='long'><p>Gets the month-of-year field using the {@code Month} enum.\n <p>\n This method returns the enum <a href=\"#!/api/java.time.Month\" rel=\"java.time.Month\" class=\"docClass\">java.time.Month</a> for the month.\n This avoids confusion as to what {@code int} values mean.\n If you need access to the primitive {@code int} value then the enum\n provides the int value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Month}</span><div class='sub-desc'><p>the month-of-year, not null\n@see <a href=\"#!/api/java.time.OffsetDateTime-method-getMonthValue\" rel=\"java.time.OffsetDateTime-method-getMonthValue\" class=\"docClass\">getMonthValue</a>()</p>\n</div></li></ul></div></div></div><div id='method-getMonthValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getMonthValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getMonthValue' class='name expandable'>getMonthValue</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the month-of-year field from 1 to 12. ...</div><div class='long'><p>Gets the month-of-year field from 1 to 12.\n <p>\n This method returns the month as an {@code int} from 1 to 12.\n Application code is frequently clearer if the enum <a href=\"#!/api/java.time.Month\" rel=\"java.time.Month\" class=\"docClass\">java.time.Month</a>\n is used by calling <a href=\"#!/api/java.time.OffsetDateTime-method-getMonth\" rel=\"java.time.OffsetDateTime-method-getMonth\" class=\"docClass\">getMonth</a>().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the month-of-year, from 1 to 12\n@see <a href=\"#!/api/java.time.OffsetDateTime-method-getMonth\" rel=\"java.time.OffsetDateTime-method-getMonth\" class=\"docClass\">getMonth</a>()</p>\n</div></li></ul></div></div></div><div id='method-getNano' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getNano' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getNano' class='name expandable'>getNano</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the nano-of-second field. ...</div><div class='long'><p>Gets the nano-of-second field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the nano-of-second, from 0 to 999,999,999</p>\n</div></li></ul></div></div></div><div id='method-getOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getOffset' class='name expandable'>getOffset</a>( <span class='pre'></span> ) : Object {java.time.ZoneOffset}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the zone offset, such as '+01:00'. ...</div><div class='long'><p>Gets the zone offset, such as '+01:00'.\n <p>\n This is the offset of the local date-time from UTC/Greenwich.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneOffset}</span><div class='sub-desc'><p>the zone offset, not null</p>\n</div></li></ul></div></div></div><div id='method-getSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getSecond' class='name expandable'>getSecond</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the second-of-minute field. ...</div><div class='long'><p>Gets the second-of-minute field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the second-of-minute, from 0 to 59</p>\n</div></li></ul></div></div></div><div id='method-getYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-getYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-getYear' class='name expandable'>getYear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the year field. ...</div><div class='long'><p>Gets the year field.\n <p>\n This method returns the primitive {@code int} value for the year.\n <p>\n The year returned by this method is proleptic as per {@code get(YEAR)}.\n To obtain the year-of-era, use {@code get(YEAR_OF_ERA)}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the year, from MIN_YEAR to MAX_YEAR</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this date-time. ...</div><div class='long'><p>A hash code for this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-isAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-isAfter' class='name expandable'>isAfter</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the instant of this date-time is after that of the specified date-time. ...</div><div class='long'><p>Checks if the instant of this date-time is after that of the specified date-time.\n <p>\n This method differs from the comparison in <a href=\"#!/api/java.time.OffsetDateTime-method-compareTo\" rel=\"java.time.OffsetDateTime-method-compareTo\" class=\"docClass\">compareTo</a> and <a href=\"#!/api/java.time.OffsetDateTime-method-equals\" rel=\"java.time.OffsetDateTime-method-equals\" class=\"docClass\">equals</a> in that it\n only compares the instant of the date-time. This is equivalent to using\n {@code dateTime1.toInstant().isAfter(dateTime2.toInstant());}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {OffsetDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is after the instant of the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-isBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-isBefore' class='name expandable'>isBefore</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the instant of this date-time is before that of the specified date-time. ...</div><div class='long'><p>Checks if the instant of this date-time is before that of the specified date-time.\n <p>\n This method differs from the comparison in <a href=\"#!/api/java.time.OffsetDateTime-method-compareTo\" rel=\"java.time.OffsetDateTime-method-compareTo\" class=\"docClass\">compareTo</a> in that it\n only compares the instant of the date-time. This is equivalent to using\n {@code dateTime1.toInstant().isBefore(dateTime2.toInstant());}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {OffsetDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is before the instant of the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isEqual' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-isEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-isEqual' class='name expandable'>isEqual</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the instant of this date-time is equal to that of the specified date-time. ...</div><div class='long'><p>Checks if the instant of this date-time is equal to that of the specified date-time.\n <p>\n This method differs from the comparison in <a href=\"#!/api/java.time.OffsetDateTime-method-compareTo\" rel=\"java.time.OffsetDateTime-method-compareTo\" class=\"docClass\">compareTo</a> and <a href=\"#!/api/java.time.OffsetDateTime-method-equals\" rel=\"java.time.OffsetDateTime-method-equals\" class=\"docClass\">equals</a>\n in that it only compares the instant of the date-time. This is equivalent to using\n {@code dateTime1.toInstant().equals(dateTime2.toInstant());}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {OffsetDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the instant equals the instant of the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-isSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-isSupported' class='name expandable'>isSupported</a>( <span class='pre'>unit</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the specified unit is supported. ...</div><div class='long'><p>Checks if the specified unit is supported.\n <p>\n This checks if the specified unit can be added to, or subtracted from, this date-time.\n If false, then calling the TemporalUnit) and\n TemporalUnit) minus methods will throw an exception.\n <p>\n If the unit is a ChronoUnit then the query is implemented here.\n The supported units are:\n <ul>\n <li>{@code NANOS}\n <li>{@code MICROS}\n <li>{@code MILLIS}\n <li>{@code SECONDS}\n <li>{@code MINUTES}\n <li>{@code HOURS}\n <li>{@code HALF_DAYS}\n <li>{@code DAYS}\n <li>{@code WEEKS}\n <li>{@code MONTHS}\n <li>{@code YEARS}\n <li>{@code DECADES}\n <li>{@code CENTURIES}\n <li>{@code MILLENNIA}\n <li>{@code ERAS}\n </li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n All other {@code ChronoUnit} instances will return false.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.isSupportedBy(Temporal)}\n passing {@code this} as the argument.\n Whether the unit is supported is determined by the unit.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the unit can be added/subtracted, false if not</p>\n</div></li></ul></div></div></div><div id='method-minus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minus' class='name expandable'>minus</a>( <span class='pre'>amountToSubtract, unit</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with the specified amount subtracted. ...</div><div class='long'><p>Returns a copy of this date-time with the specified amount subtracted.\n <p>\n This returns an {@code OffsetDateTime}, based on this one, with the amount\n in terms of the unit subtracted. If it is not possible to subtract the amount,\n because the unit is not supported or for some other reason, an exception is thrown.\n <p>\n This method is equivalent to TemporalUnit) with the amount negated.\n See that method for a full description of how addition, and thus subtraction, works.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToSubtract</span> : Number<div class='sub-desc'><p>the amount of the unit to subtract from the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to subtract, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the specified amount subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the subtraction cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusDays' class='name expandable'>minusDays</a>( <span class='pre'>days</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of days subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of days subtracted.\n <p>\n This method subtracts the specified amount from the days field decrementing the\n month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2008-12-31 minus one day would result in 2009-01-01.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>days</span> : Number<div class='sub-desc'><p>the days to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the days subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusHours' class='name expandable'>minusHours</a>( <span class='pre'>hours</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of hours subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of hours subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hours</span> : Number<div class='sub-desc'><p>the hours to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the hours subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusMinutes' class='name expandable'>minusMinutes</a>( <span class='pre'>minutes</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of minutes subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of minutes subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutes</span> : Number<div class='sub-desc'><p>the minutes to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the minutes subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusMonths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusMonths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusMonths' class='name expandable'>minusMonths</a>( <span class='pre'>months</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of months subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of months subtracted.\n <p>\n This method subtracts the specified amount from the months field in three steps:\n <ol>\n <li>Subtract the input months from the month-of-year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2007-03-31 minus one month would result in the invalid date\n 2007-04-31. Instead of returning an invalid result, the last valid day\n of the month, 2007-04-30, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>months</span> : Number<div class='sub-desc'><p>the months to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the months subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusNanos' class='name expandable'>minusNanos</a>( <span class='pre'>nanos</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of nanoseconds subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of nanoseconds subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanos</span> : Number<div class='sub-desc'><p>the nanos to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the nanoseconds subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusSeconds' class='name expandable'>minusSeconds</a>( <span class='pre'>seconds</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of seconds subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of seconds subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seconds</span> : Number<div class='sub-desc'><p>the seconds to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the seconds subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusWeeks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusWeeks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusWeeks' class='name expandable'>minusWeeks</a>( <span class='pre'>weeks</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of weeks subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of weeks subtracted.\n <p>\n This method subtracts the specified amount in weeks from the days field decrementing\n the month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2008-12-31 minus one week would result in 2009-01-07.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>weeks</span> : Number<div class='sub-desc'><p>the weeks to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the weeks subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusYears' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-minusYears' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-minusYears' class='name expandable'>minusYears</a>( <span class='pre'>years</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of years subtracted. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of years subtracted.\n <p>\n This method subtracts the specified amount from the years field in three steps:\n <ol>\n <li>Subtract the input years from the year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2008-02-29 (leap year) minus one year would result in the\n invalid date 2009-02-29 (standard year). Instead of returning an invalid\n result, the last valid day of the month, 2009-02-28, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>years</span> : Number<div class='sub-desc'><p>the years to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the years subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-now' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-now' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-now' class='name expandable'>now</a>( <span class='pre'>clock</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains the current date-time from the specified clock. ...</div><div class='long'><p>Obtains the current date-time from the specified clock.\n <p>\n This will query the specified clock to obtain the current date-time.\n The offset will be calculated from the time-zone in the clock.\n <p>\n Using this method allows the use of an alternate clock for testing.\n The alternate clock may be introduced using <a href=\"#!/api/java.time.Clock\" rel=\"java.time.Clock\" class=\"docClass\">dependency injection</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clock</span> : Object {Clock}<div class='sub-desc'><p>the clock to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>the current date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-of' class='name expandable'>of</a>( <span class='pre'>year, month, dayOfMonth, hour, minute, second, nanoOfSecond, offset</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code OffsetDateTime} from a year, month, day,\n hour, minute, second, nanosecond and offset. ...</div><div class='long'><p>Obtains an instance of {@code OffsetDateTime} from a year, month, day,\n hour, minute, second, nanosecond and offset.\n <p>\n This creates an offset date-time with the seven specified fields.\n <p>\n This method exists primarily for writing test cases.\n Non test-code will typically use other methods to create an offset time.\n {@code LocalDateTime} has five additional convenience variants of the\n equivalent factory method taking fewer arguments.\n They are not provided here to reduce the footprint of the API.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>year</span> : Number<div class='sub-desc'><p>the year to represent, from MIN_YEAR to MAX_YEAR</p>\n</div></li><li><span class='pre'>month</span> : Number<div class='sub-desc'><p>the month-of-year to represent, from 1 (January) to 12 (December)</p>\n</div></li><li><span class='pre'>dayOfMonth</span> : Number<div class='sub-desc'><p>the day-of-month to represent, from 1 to 31</p>\n</div></li><li><span class='pre'>hour</span> : Number<div class='sub-desc'><p>the hour-of-day to represent, from 0 to 23</p>\n</div></li><li><span class='pre'>minute</span> : Number<div class='sub-desc'><p>the minute-of-hour to represent, from 0 to 59</p>\n</div></li><li><span class='pre'>second</span> : Number<div class='sub-desc'><p>the second-of-minute to represent, from 0 to 59</p>\n</div></li><li><span class='pre'>nanoOfSecond</span> : Number<div class='sub-desc'><p>the nano-of-second to represent, from 0 to 999,999,999</p>\n</div></li><li><span class='pre'>offset</span> : Object {ZoneOffset}<div class='sub-desc'><p>the zone offset, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>the offset date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the value of any field is out of range, or\n  if the day-of-month is invalid for the month-year</p>\n</div></li></ul></div></div></div><div id='method-ofInstant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-ofInstant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-ofInstant' class='name expandable'>ofInstant</a>( <span class='pre'>instant, zone</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code OffsetDateTime} from an {@code Instant} and zone ID. ...</div><div class='long'><p>Obtains an instance of {@code OffsetDateTime} from an {@code Instant} and zone ID.\n <p>\n This creates an offset date-time with the same instant as that specified.\n Finding the offset from UTC/Greenwich is simple as there is only one valid\n offset for each instant.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instant</span> : Object {Instant}<div class='sub-desc'><p>the instant to create the date-time from, not null</p>\n</div></li><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone, which may be an offset, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>the offset date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-parse' class='name expandable'>parse</a>( <span class='pre'>text, formatter</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code OffsetDateTime} from a text string using a specific formatter. ...</div><div class='long'><p>Obtains an instance of {@code OffsetDateTime} from a text string using a specific formatter.\n <p>\n The text is parsed using the formatter, returning a date-time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the text to parse, not null</p>\n</div></li><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>the parsed offset date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeParseException if the text cannot be parsed</p>\n</div></li></ul></div></div></div><div id='method-plus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plus' class='name expandable'>plus</a>( <span class='pre'>amountToAdd, unit</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with the specified amount added. ...</div><div class='long'><p>Returns a copy of this date-time with the specified amount added.\n <p>\n This returns an {@code OffsetDateTime}, based on this one, with the amount\n in terms of the unit added. If it is not possible to add the amount, because the\n unit is not supported or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoUnit then the addition is implemented by\n TemporalUnit).\n The offset is not part of the calculation and will be unchanged in the result.\n <p>\n If the field is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.addTo(Temporal, long)}\n passing {@code this} as the argument. In this case, the unit determines\n whether and how to perform the addition.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToAdd</span> : Number<div class='sub-desc'><p>the amount of the unit to add to the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to add, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the specified amount added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the addition cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusDays' class='name expandable'>plusDays</a>( <span class='pre'>days</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this OffsetDateTime with the specified number of days added. ...</div><div class='long'><p>Returns a copy of this OffsetDateTime with the specified number of days added.\n <p>\n This method adds the specified amount to the days field incrementing the\n month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2008-12-31 plus one day would result in 2009-01-01.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>days</span> : Number<div class='sub-desc'><p>the days to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the days added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusHours' class='name expandable'>plusHours</a>( <span class='pre'>hours</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of hours added. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of hours added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hours</span> : Number<div class='sub-desc'><p>the hours to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the hours added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusMinutes' class='name expandable'>plusMinutes</a>( <span class='pre'>minutes</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of minutes added. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of minutes added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutes</span> : Number<div class='sub-desc'><p>the minutes to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the minutes added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusMonths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusMonths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusMonths' class='name expandable'>plusMonths</a>( <span class='pre'>months</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of months added. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of months added.\n <p>\n This method adds the specified amount to the months field in three steps:\n <ol>\n <li>Add the input months to the month-of-year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2007-03-31 plus one month would result in the invalid date\n 2007-04-31. Instead of returning an invalid result, the last valid day\n of the month, 2007-04-30, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>months</span> : Number<div class='sub-desc'><p>the months to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the months added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusNanos' class='name expandable'>plusNanos</a>( <span class='pre'>nanos</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of nanoseconds added. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of nanoseconds added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanos</span> : Number<div class='sub-desc'><p>the nanos to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the nanoseconds added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the unit cannot be added to this type</p>\n</div></li></ul></div></div></div><div id='method-plusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusSeconds' class='name expandable'>plusSeconds</a>( <span class='pre'>seconds</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of seconds added. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of seconds added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seconds</span> : Number<div class='sub-desc'><p>the seconds to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the seconds added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusWeeks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusWeeks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusWeeks' class='name expandable'>plusWeeks</a>( <span class='pre'>weeks</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this OffsetDateTime with the specified number of weeks added. ...</div><div class='long'><p>Returns a copy of this OffsetDateTime with the specified number of weeks added.\n <p>\n This method adds the specified amount in weeks to the days field incrementing\n the month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2008-12-31 plus one week would result in 2009-01-07.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>weeks</span> : Number<div class='sub-desc'><p>the weeks to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the weeks added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusYears' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-plusYears' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-plusYears' class='name expandable'>plusYears</a>( <span class='pre'>years</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified number of years added. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified number of years added.\n <p>\n This method adds the specified amount to the years field in three steps:\n <ol>\n <li>Add the input years to the year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2008-02-29 (leap year) plus one year would result in the\n invalid date 2009-02-29 (standard year). Instead of returning an invalid\n result, the last valid day of the month, 2009-02-28, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>years</span> : Number<div class='sub-desc'><p>the years to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the years added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-query' class='name expandable'>query</a>( <span class='pre'>query, query</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Queries this date-time using the specified query. ...</div><div class='long'><p>Queries this date-time using the specified query.\n <p>\n This queries this date-time using the specified query strategy object.\n The {@code TemporalQuery} object defines the logic to be used to\n obtain the result. Read the documentation of the query to understand\n what the result of this method will be.\n <p>\n The result of this method is obtained by invoking the\n TemporalQuery.queryFrom(TemporalAccessor) method on the\n specified query passing {@code this} as the argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : Object {java.time.temporal.TemporalQuery}<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li><li><span class='pre'>query</span> : Object<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the query result, null may be returned (defined by the query)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to query (defined by the query)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs (defined by the query)</p>\n</div></li></ul></div></div></div><div id='method-range' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-range' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-range' class='name expandable'>range</a>( <span class='pre'>field</span> ) : Object {java.time.temporal.ValueRange}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the range of valid values for the specified field. ...</div><div class='long'><p>Gets the range of valid values for the specified field.\n <p>\n The range object expresses the minimum and maximum valid values for a field.\n This date-time is used to enhance the accuracy of the returned range.\n If it is not possible to return the range, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return\n appropriate range instances.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.rangeRefinedBy(TemporalAccessor)}\n passing {@code this} as the argument.\n Whether the range can be obtained is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to query the range for, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.ValueRange}</span><div class='sub-desc'><p>the range of valid values for the field, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the range for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li></ul></div></div></div><div id='method-timeLineOrder' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-timeLineOrder' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-timeLineOrder' class='name expandable'>timeLineOrder</a>( <span class='pre'></span> ) : Object {java.util.Comparator}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets a comparator that compares two {@code OffsetDateTime} instances\n based solely on the instant. ...</div><div class='long'><p>Gets a comparator that compares two {@code OffsetDateTime} instances\n based solely on the instant.\n <p>\n This method differs from the comparison in <a href=\"#!/api/java.time.OffsetDateTime-method-compareTo\" rel=\"java.time.OffsetDateTime-method-compareTo\" class=\"docClass\">compareTo</a> in that it\n only compares the underlying instant.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Comparator}</span><div class='sub-desc'><p>a comparator that compares in time-line order\n@see <a href=\"#!/api/java.time.OffsetDateTime-method-isAfter\" rel=\"java.time.OffsetDateTime-method-isAfter\" class=\"docClass\">isAfter</a>\n@see <a href=\"#!/api/java.time.OffsetDateTime-method-isBefore\" rel=\"java.time.OffsetDateTime-method-isBefore\" class=\"docClass\">isBefore</a>\n@see <a href=\"#!/api/java.time.OffsetDateTime-method-isEqual\" rel=\"java.time.OffsetDateTime-method-isEqual\" class=\"docClass\">isEqual</a></p>\n</div></li></ul></div></div></div><div id='method-toEpochSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toEpochSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toEpochSecond' class='name expandable'>toEpochSecond</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this date-time to the number of seconds from the epoch of 1970-01-01T00:00:00Z. ...</div><div class='long'><p>Converts this date-time to the number of seconds from the epoch of 1970-01-01T00:00:00Z.\n <p>\n This allows this date-time to be converted to a value of the\n epoch-seconds field. This is primarily\n intended for low-level conversions rather than general application usage.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of seconds from the epoch of 1970-01-01T00:00:00Z</p>\n</div></li></ul></div></div></div><div id='method-toInstant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toInstant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toInstant' class='name expandable'>toInstant</a>( <span class='pre'></span> ) : Object {java.time.Instant}<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this date-time to an {@code Instant}. ...</div><div class='long'><p>Converts this date-time to an {@code Instant}.\n <p>\n This returns an {@code Instant} representing the same point on the\n time-line as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Instant}</span><div class='sub-desc'><p>an {@code Instant} representing the same instant, not null</p>\n</div></li></ul></div></div></div><div id='method-toLocalDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toLocalDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toLocalDate' class='name expandable'>toLocalDate</a>( <span class='pre'></span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code LocalDate} part of this date-time. ...</div><div class='long'><p>Gets the {@code LocalDate} part of this date-time.\n <p>\n This returns a {@code LocalDate} with the same year, month and day\n as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the date part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toLocalDateTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toLocalDateTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toLocalDateTime' class='name expandable'>toLocalDateTime</a>( <span class='pre'></span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code LocalDateTime} part of this date-time. ...</div><div class='long'><p>Gets the {@code LocalDateTime} part of this date-time.\n <p>\n This returns a {@code LocalDateTime} with the same year, month, day and time\n as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the local date-time part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toLocalTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toLocalTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toLocalTime' class='name expandable'>toLocalTime</a>( <span class='pre'></span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code LocalTime} part of this date-time. ...</div><div class='long'><p>Gets the {@code LocalTime} part of this date-time.\n <p>\n This returns a {@code LocalTime} with the same hour, minute, second and\n nanosecond as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the time part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toOffsetTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toOffsetTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toOffsetTime' class='name expandable'>toOffsetTime</a>( <span class='pre'></span> ) : Object {java.time.OffsetTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this date-time to an {@code OffsetTime}. ...</div><div class='long'><p>Converts this date-time to an {@code OffsetTime}.\n <p>\n This returns an offset time with the same local time and offset.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetTime}</span><div class='sub-desc'><p>an OffsetTime representing the time and offset, not null</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this date-time as a {@code String}, such as {@code 2007-12-03T10:15:30+01:00}. ...</div><div class='long'><p>Outputs this date-time as a {@code String}, such as {@code 2007-12-03T10:15:30+01:00}.\n <p>\n The output will be one of the following ISO-8601 formats:\n <ul>\n <li>{@code uuuu-MM-dd'T'HH:mmXXXXX}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ssXXXXX}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ss.SSSXXXXX}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ss.SSSSSSXXXXX}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ss.SSSSSSSSSXXXXX}</li>\n </ul>\n The format used will be the shortest that outputs the full value of\n the time where the omitted parts are implied to be zero.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toZonedDateTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-toZonedDateTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-toZonedDateTime' class='name expandable'>toZonedDateTime</a>( <span class='pre'></span> ) : Object {java.time.ZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this date-time to a {@code ZonedDateTime} using the offset as the zone ID. ...</div><div class='long'><p>Converts this date-time to a {@code ZonedDateTime} using the offset as the zone ID.\n <p>\n This creates the simplest possible {@code ZonedDateTime} using the offset\n as the zone ID.\n <p>\n To control the time-zone used, see <a href=\"#!/api/java.time.OffsetDateTime-method-atZoneSameInstant\" rel=\"java.time.OffsetDateTime-method-atZoneSameInstant\" class=\"docClass\">atZoneSameInstant</a>(ZoneId) and\n <a href=\"#!/api/java.time.OffsetDateTime-method-atZoneSimilarLocal\" rel=\"java.time.OffsetDateTime-method-atZoneSimilarLocal\" class=\"docClass\">atZoneSimilarLocal</a>(ZoneId).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZonedDateTime}</span><div class='sub-desc'><p>a zoned date-time representing the same local date-time and offset, not null</p>\n</div></li></ul></div></div></div><div id='method-truncatedTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-truncatedTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-truncatedTo' class='name expandable'>truncatedTo</a>( <span class='pre'>unit</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the time truncated. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the time truncated.\n <p>\n Truncation returns a copy of the original date-time with fields\n smaller than the specified unit set to zero.\n For example, truncating with the minutes unit\n will set the second-of-minute and nano-of-second field to zero.\n <p>\n The unit must have a {@linkplain TemporalUnit#getDuration() duration}\n that divides into the length of a standard day without remainder.\n This includes all supplied time units on ChronoUnit and\n DAYS. Other units throw an exception.\n <p>\n The offset does not affect the calculation and will be the same in the result.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to truncate to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the time truncated, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to truncate</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li></ul></div></div></div><div id='method-until' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-until' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-until' class='name expandable'>until</a>( <span class='pre'>endExclusive, unit</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the amount of time until another date-time in terms of the specified unit. ...</div><div class='long'><p>Calculates the amount of time until another date-time in terms of the specified unit.\n <p>\n This calculates the amount of time between two {@code OffsetDateTime}\n objects in terms of a single {@code TemporalUnit}.\n The start and end points are {@code this} and the specified date-time.\n The result will be negative if the end is before the start.\n For example, the amount in days between two date-times can be calculated\n using {@code startDateTime.until(endDateTime, DAYS)}.\n <p>\n The {@code Temporal} passed to this method is converted to a\n {@code OffsetDateTime} using <a href=\"#!/api/java.time.OffsetDateTime-method-from\" rel=\"java.time.OffsetDateTime-method-from\" class=\"docClass\">from</a>(TemporalAccessor).\n If the offset differs between the two date-times, the specified\n end date-time is normalized to have the same offset as this date-time.\n <p>\n The calculation returns a whole number, representing the number of\n complete units between the two date-times.\n For example, the amount in months between 2012-06-15T00:00Z and 2012-08-14T23:59Z\n will only be one month as it is one minute short of two months.\n <p>\n There are two equivalent ways of using this method.\n The first is to invoke this method.\n The second is to use Temporal):</p>\n\n<pre>   // these two lines are equivalent\n   amount = start.until(end, MONTHS);\n   amount = MONTHS.between(start, end);\n </pre>\n\n\n<p> The choice should be made based on which makes the code more readable.\n <p>\n The calculation is implemented in this method for ChronoUnit.\n The units {@code NANOS}, {@code MICROS}, {@code MILLIS}, {@code SECONDS},\n {@code MINUTES}, {@code HOURS} and {@code HALF_DAYS}, {@code DAYS},\n {@code WEEKS}, {@code MONTHS}, {@code YEARS}, {@code DECADES},\n {@code CENTURIES}, {@code MILLENNIA} and {@code ERAS} are supported.\n Other {@code ChronoUnit} values will throw an exception.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.between(Temporal, Temporal)}\n passing {@code this} as the first argument and the converted input temporal\n as the second argument.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>endExclusive</span> : Object {Temporal}<div class='sub-desc'><p>the end date, exclusive, which is converted to an {@code OffsetDateTime}, not null</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to measure the amount in, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the amount of time between this date-time and the end date-time</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the amount cannot be calculated, or the end\n  temporal cannot be converted to an {@code OffsetDateTime}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-with' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-with' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-with' class='name expandable'>with</a>( <span class='pre'>field, newValue</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with the specified field set to a new value. ...</div><div class='long'><p>Returns a copy of this date-time with the specified field set to a new value.\n <p>\n This returns an {@code OffsetDateTime}, based on this one, with the value\n for the specified field changed.\n This can be used to change any supported field, such as the year, month or day-of-month.\n If it is not possible to set the value, because the field is not supported or for\n some other reason, an exception is thrown.\n <p>\n In some cases, changing the specified field can cause the resulting date-time to become invalid,\n such as changing the month from 31st January to February would make the day-of-month invalid.\n In cases like this, the field is responsible for resolving the date. Typically it will choose\n the previous valid date, which would be the last valid day of February in this example.\n <p>\n If the field is a ChronoField then the adjustment is implemented here.\n <p>\n The {@code INSTANT_SECONDS} field will return a date-time with the specified instant.\n The offset and nano-of-second are unchanged.\n If the new instant value is outside the valid range then a {@code DateTimeException} will be thrown.\n <p>\n The {@code OFFSET_SECONDS} field will return a date-time with the specified offset.\n The local date-time is unaltered. If the new offset value is outside the valid range\n then a {@code DateTimeException} will be thrown.\n <p>\n The other supported fields will behave as per\n the matching method on long) java.time.LocalDateTime.\n In this case, the offset is not part of the calculation and will be unchanged.\n <p>\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.adjustInto(Temporal, long)}\n passing {@code this} as the argument. In this case, the field determines\n whether and how to adjust the instant.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to set in the result, not null</p>\n</div></li><li><span class='pre'>newValue</span> : Number<div class='sub-desc'><p>the new value of the field in the result</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on {@code this} with the specified field set, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the field cannot be set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-withDayOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withDayOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withDayOfMonth' class='name expandable'>withDayOfMonth</a>( <span class='pre'>dayOfMonth</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the day-of-month altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the day-of-month altered.\n <p>\n If the resulting {@code OffsetDateTime} is invalid, an exception is thrown.\n The time and offset do not affect the calculation and will be the same in the result.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfMonth</span> : Number<div class='sub-desc'><p>the day-of-month to set in the result, from 1 to 28-31</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested day, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the day-of-month value is invalid,\n  or if the day-of-month is invalid for the month-year</p>\n</div></li></ul></div></div></div><div id='method-withDayOfYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withDayOfYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withDayOfYear' class='name expandable'>withDayOfYear</a>( <span class='pre'>dayOfYear</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the day-of-year altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the day-of-year altered.\n <p>\n The time and offset do not affect the calculation and will be the same in the result.\n If the resulting {@code OffsetDateTime} is invalid, an exception is thrown.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfYear</span> : Number<div class='sub-desc'><p>the day-of-year to set in the result, from 1 to 365-366</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date with the requested day, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the day-of-year value is invalid,\n  or if the day-of-year is invalid for the year</p>\n</div></li></ul></div></div></div><div id='method-withHour' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withHour' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withHour' class='name expandable'>withHour</a>( <span class='pre'>hour</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the hour-of-day altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the hour-of-day altered.\n <p>\n The date and offset do not affect the calculation and will be the same in the result.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hour</span> : Number<div class='sub-desc'><p>the hour-of-day to set in the result, from 0 to 23</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested hour, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the hour value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withMinute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withMinute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withMinute' class='name expandable'>withMinute</a>( <span class='pre'>minute</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the minute-of-hour altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the minute-of-hour altered.\n <p>\n The date and offset do not affect the calculation and will be the same in the result.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minute</span> : Number<div class='sub-desc'><p>the minute-of-hour to set in the result, from 0 to 59</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested minute, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the minute value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withMonth' class='name expandable'>withMonth</a>( <span class='pre'>month</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the month-of-year altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the month-of-year altered.\n <p>\n The time and offset do not affect the calculation and will be the same in the result.\n If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>month</span> : Number<div class='sub-desc'><p>the month-of-year to set in the result, from 1 (January) to 12 (December)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested month, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the month-of-year value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withNano' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withNano' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withNano' class='name expandable'>withNano</a>( <span class='pre'>nanoOfSecond</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the nano-of-second altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the nano-of-second altered.\n <p>\n The date and offset do not affect the calculation and will be the same in the result.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanoOfSecond</span> : Number<div class='sub-desc'><p>the nano-of-second to set in the result, from 0 to 999,999,999</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested nanosecond, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the nano value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withOffsetSameInstant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withOffsetSameInstant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withOffsetSameInstant' class='name expandable'>withOffsetSameInstant</a>( <span class='pre'>offset</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified offset ensuring\n that the result is at the same inst...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified offset ensuring\n that the result is at the same instant.\n <p>\n This method returns an object with the specified {@code ZoneOffset} and a {@code LocalDateTime}\n adjusted by the difference between the two offsets.\n This will result in the old and new objects representing the same instant.\n This is useful for finding the local time in a different offset.\n For example, if this time represents {@code 2007-12-03T10:30+02:00} and the offset specified is\n {@code +03:00}, then this method will return {@code 2007-12-03T11:30+03:00}.\n <p>\n To change the offset without adjusting the local time use <a href=\"#!/api/java.time.OffsetDateTime-method-withOffsetSameLocal\" rel=\"java.time.OffsetDateTime-method-withOffsetSameLocal\" class=\"docClass\">withOffsetSameLocal</a>.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Object {ZoneOffset}<div class='sub-desc'><p>the zone offset to change to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested offset, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-withOffsetSameLocal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withOffsetSameLocal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withOffsetSameLocal' class='name expandable'>withOffsetSameLocal</a>( <span class='pre'>offset</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the specified offset ensuring\n that the result has the same local ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the specified offset ensuring\n that the result has the same local date-time.\n <p>\n This method returns an object with the same {@code LocalDateTime} and the specified {@code ZoneOffset}.\n No calculation is needed or performed.\n For example, if this time represents {@code 2007-12-03T10:30+02:00} and the offset specified is\n {@code +03:00}, then this method will return {@code 2007-12-03T10:30+03:00}.\n <p>\n To take into account the difference between the offsets, and adjust the time fields,\n use <a href=\"#!/api/java.time.OffsetDateTime-method-withOffsetSameInstant\" rel=\"java.time.OffsetDateTime-method-withOffsetSameInstant\" class=\"docClass\">withOffsetSameInstant</a>.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Object {ZoneOffset}<div class='sub-desc'><p>the zone offset to change to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested offset, not null</p>\n</div></li></ul></div></div></div><div id='method-withSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withSecond' class='name expandable'>withSecond</a>( <span class='pre'>second</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the second-of-minute altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the second-of-minute altered.\n <p>\n The date and offset do not affect the calculation and will be the same in the result.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>second</span> : Number<div class='sub-desc'><p>the second-of-minute to set in the result, from 0 to 59</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested second, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the second value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.OffsetDateTime'>java.time.OffsetDateTime</span><br/><a href='source/OffsetDateTime.html#java-time-OffsetDateTime-method-withYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.OffsetDateTime-method-withYear' class='name expandable'>withYear</a>( <span class='pre'>year</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code OffsetDateTime} with the year altered. ...</div><div class='long'><p>Returns a copy of this {@code OffsetDateTime} with the year altered.\n <p>\n The time and offset do not affect the calculation and will be the same in the result.\n If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>year</span> : Number<div class='sub-desc'><p>the year to set in the result, from MIN_YEAR to MAX_YEAR</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>an {@code OffsetDateTime} based on this date-time with the requested year, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the year value is invalid</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});