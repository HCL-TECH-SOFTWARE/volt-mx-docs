Ext.data.JsonP.java_time_LocalDateTime({"tagname":"class","name":"java.time.LocalDateTime","autodetected":{},"files":[{"filename":"LocalDateTime.js","href":"LocalDateTime.html#java-time-LocalDateTime"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"MAX","tagname":"property","owner":"java.time.LocalDateTime","id":"property-MAX","meta":{}},{"name":"MIN","tagname":"property","owner":"java.time.LocalDateTime","id":"property-MIN","meta":{}},{"name":"adjustInto","tagname":"method","owner":"java.time.LocalDateTime","id":"method-adjustInto","meta":{}},{"name":"atOffset","tagname":"method","owner":"java.time.LocalDateTime","id":"method-atOffset","meta":{}},{"name":"atZone","tagname":"method","owner":"java.time.LocalDateTime","id":"method-atZone","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.time.LocalDateTime","id":"method-compareTo","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.LocalDateTime","id":"method-equals","meta":{}},{"name":"format","tagname":"method","owner":"java.time.LocalDateTime","id":"method-format","meta":{}},{"name":"from","tagname":"method","owner":"java.time.LocalDateTime","id":"method-from","meta":{}},{"name":"get","tagname":"method","owner":"java.time.LocalDateTime","id":"method-get","meta":{}},{"name":"getDayOfMonth","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getDayOfMonth","meta":{}},{"name":"getDayOfWeek","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getDayOfWeek","meta":{}},{"name":"getDayOfYear","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getDayOfYear","meta":{}},{"name":"getHour","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getHour","meta":{}},{"name":"getLong","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getLong","meta":{}},{"name":"getMinute","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getMinute","meta":{}},{"name":"getMonth","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getMonth","meta":{}},{"name":"getMonthValue","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getMonthValue","meta":{}},{"name":"getNano","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getNano","meta":{}},{"name":"getSecond","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getSecond","meta":{}},{"name":"getYear","tagname":"method","owner":"java.time.LocalDateTime","id":"method-getYear","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.LocalDateTime","id":"method-hashCode","meta":{}},{"name":"isAfter","tagname":"method","owner":"java.time.LocalDateTime","id":"method-isAfter","meta":{}},{"name":"isBefore","tagname":"method","owner":"java.time.LocalDateTime","id":"method-isBefore","meta":{}},{"name":"isEqual","tagname":"method","owner":"java.time.LocalDateTime","id":"method-isEqual","meta":{}},{"name":"isSupported","tagname":"method","owner":"java.time.LocalDateTime","id":"method-isSupported","meta":{}},{"name":"minus","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minus","meta":{}},{"name":"minusDays","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusDays","meta":{}},{"name":"minusHours","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusHours","meta":{}},{"name":"minusMinutes","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusMinutes","meta":{}},{"name":"minusMonths","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusMonths","meta":{}},{"name":"minusNanos","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusNanos","meta":{}},{"name":"minusSeconds","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusSeconds","meta":{}},{"name":"minusWeeks","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusWeeks","meta":{}},{"name":"minusYears","tagname":"method","owner":"java.time.LocalDateTime","id":"method-minusYears","meta":{}},{"name":"now","tagname":"method","owner":"java.time.LocalDateTime","id":"method-now","meta":{}},{"name":"of","tagname":"method","owner":"java.time.LocalDateTime","id":"method-of","meta":{}},{"name":"ofEpochSecond","tagname":"method","owner":"java.time.LocalDateTime","id":"method-ofEpochSecond","meta":{}},{"name":"ofInstant","tagname":"method","owner":"java.time.LocalDateTime","id":"method-ofInstant","meta":{}},{"name":"parse","tagname":"method","owner":"java.time.LocalDateTime","id":"method-parse","meta":{}},{"name":"plus","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plus","meta":{}},{"name":"plusDays","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusDays","meta":{}},{"name":"plusHours","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusHours","meta":{}},{"name":"plusMinutes","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusMinutes","meta":{}},{"name":"plusMonths","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusMonths","meta":{}},{"name":"plusNanos","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusNanos","meta":{}},{"name":"plusSeconds","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusSeconds","meta":{}},{"name":"plusWeeks","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusWeeks","meta":{}},{"name":"plusYears","tagname":"method","owner":"java.time.LocalDateTime","id":"method-plusYears","meta":{}},{"name":"query","tagname":"method","owner":"java.time.LocalDateTime","id":"method-query","meta":{}},{"name":"range","tagname":"method","owner":"java.time.LocalDateTime","id":"method-range","meta":{}},{"name":"toLocalDate","tagname":"method","owner":"java.time.LocalDateTime","id":"method-toLocalDate","meta":{}},{"name":"toLocalTime","tagname":"method","owner":"java.time.LocalDateTime","id":"method-toLocalTime","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.LocalDateTime","id":"method-toString","meta":{}},{"name":"truncatedTo","tagname":"method","owner":"java.time.LocalDateTime","id":"method-truncatedTo","meta":{}},{"name":"until","tagname":"method","owner":"java.time.LocalDateTime","id":"method-until","meta":{}},{"name":"with","tagname":"method","owner":"java.time.LocalDateTime","id":"method-with","meta":{}},{"name":"withDayOfMonth","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withDayOfMonth","meta":{}},{"name":"withDayOfYear","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withDayOfYear","meta":{}},{"name":"withHour","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withHour","meta":{}},{"name":"withMinute","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withMinute","meta":{}},{"name":"withMonth","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withMonth","meta":{}},{"name":"withNano","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withNano","meta":{}},{"name":"withSecond","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withSecond","meta":{}},{"name":"withYear","tagname":"method","owner":"java.time.LocalDateTime","id":"method-withYear","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.LocalDateTime","short_doc":"implements java.time.temporal.Temporal\n\n implements java.time.temporal.TemporalAdjuster\n\n implements java.time.chrono...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.LocalDateTime</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/LocalDateTime.html#java-time-LocalDateTime' target='_blank'>LocalDateTime.js</a></div></pre><div class='doc-contents'><p>implements java.time.temporal.Temporal</p>\n\n<p> implements java.time.temporal.TemporalAdjuster</p>\n\n<p> implements java.time.chrono.ChronoLocalDateTime</p>\n\n<p> implements java.io.Serializable</p>\n\n<p>A date-time without a time-zone in the ISO-8601 calendar system,\n such as {@code 2007-12-03T10:15:30}.\n <p>\n {@code LocalDateTime} is an immutable date-time object that represents a date-time,\n often viewed as year-month-day-hour-minute-second. Other date and time fields,\n such as day-of-year, day-of-week and week-of-year, can also be accessed.\n Time is represented to nanosecond precision.\n For example, the value \"2nd October 2007 at 13:45.30.123456789\" can be\n stored in a {@code LocalDateTime}.\n <p>\n This class does not store or represent a time-zone.\n Instead, it is a description of the date, as used for birthdays, combined with\n the local time as seen on a wall clock.\n It cannot represent an instant on the time-line without additional information\n such as an offset or time-zone.\n <p>\n The ISO-8601 calendar system is the modern civil calendar system used today\n in most of the world. It is equivalent to the proleptic Gregorian calendar\n system, in which today's rules for leap years are applied for all time.\n For most applications written today, the ISO-8601 rules are entirely suitable.\n However, any application that makes use of historical dates, and requires them\n to be accurate will find the ISO-8601 approach unsuitable.</p>\n\n<p> @implSpec\n This class is immutable and thread-safe.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-MAX' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-property-MAX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-property-MAX' class='name expandable'>MAX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The maximum supported {@code LocalDateTime}, '+999999999-12-31T23:59:59.999999999'. ...</div><div class='long'><p>The maximum supported {@code LocalDateTime}, '+999999999-12-31T23:59:59.999999999'.\nThis is the local date-time just before midnight at the end of the maximum date.\nThis combines <a href=\"#!/api/java.time.LocalDate-property-MAX\" rel=\"java.time.LocalDate-property-MAX\" class=\"docClass\">java.time.LocalDate.MAX</a> and <a href=\"#!/api/java.time.LocalTime-property-MAX\" rel=\"java.time.LocalTime-property-MAX\" class=\"docClass\">java.time.LocalTime.MAX</a>.\nThis could be used by an application as a \"far future\" date-time.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MIN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-property-MIN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-property-MIN' class='name expandable'>MIN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The minimum supported {@code LocalDateTime}, '-999999999-01-01T00:00:00'. ...</div><div class='long'><p>The minimum supported {@code LocalDateTime}, '-999999999-01-01T00:00:00'.\nThis is the local date-time of midnight at the start of the minimum date.\nThis combines <a href=\"#!/api/java.time.LocalDate-property-MIN\" rel=\"java.time.LocalDate-property-MIN\" class=\"docClass\">java.time.LocalDate.MIN</a> and <a href=\"#!/api/java.time.LocalTime-property-MIN\" rel=\"java.time.LocalTime-property-MIN\" class=\"docClass\">java.time.LocalTime.MIN</a>.\nThis could be used by an application as a \"far past\" date-time.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adjustInto' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-adjustInto' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-adjustInto' class='name expandable'>adjustInto</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts the specified temporal object to have the same date and time as this object. ...</div><div class='long'><p>Adjusts the specified temporal object to have the same date and time as this object.\n <p>\n This returns a temporal object of the same observable type as the input\n with the date and time changed to be the same as this.\n <p>\n The adjustment is equivalent to using long)\n twice, passing ChronoField.EPOCH_DAY and\n ChronoField.NANO_OF_DAY as the fields.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.with(TemporalAdjuster):</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   temporal = thisLocalDateTime.adjustInto(temporal);\n   temporal = temporal.with(thisLocalDateTime);\n </pre>\n\n\n<p> <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the target object to be adjusted, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>the adjusted object, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to make the adjustment</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-atOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-atOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-atOffset' class='name expandable'>atOffset</a>( <span class='pre'>offset</span> ) : Object {java.time.OffsetDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines this date-time with an offset to create an {@code OffsetDateTime}. ...</div><div class='long'><p>Combines this date-time with an offset to create an {@code OffsetDateTime}.\n <p>\n This returns an {@code OffsetDateTime} formed from this date-time at the specified offset.\n All possible combinations of date-time and offset are valid.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Object {ZoneOffset}<div class='sub-desc'><p>the offset to combine with, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetDateTime}</span><div class='sub-desc'><p>the offset date-time formed from this date-time and the specified offset, not null</p>\n</div></li></ul></div></div></div><div id='method-atZone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-atZone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-atZone' class='name expandable'>atZone</a>( <span class='pre'>zone</span> ) : Object {java.time.ZonedDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines this date-time with a time-zone to create a {@code ZonedDateTime}. ...</div><div class='long'><p>Combines this date-time with a time-zone to create a {@code ZonedDateTime}.\n <p>\n This returns a {@code ZonedDateTime} formed from this date-time at the\n specified time-zone. The result will match this date-time as closely as possible.\n Time-zone rules, such as daylight savings, mean that not every local date-time\n is valid for the specified zone, thus the local date-time may be adjusted.\n <p>\n The local date-time is resolved to a single instant on the time-line.\n This is achieved by finding a valid offset from UTC/Greenwich for the local\n date-time as defined by the rules of the zone ID.</p>\n\n<p><p>\n In most cases, there is only one valid offset for a local date-time.\n In the case of an overlap, where clocks are set back, there are two valid offsets.\n This method uses the earlier offset typically corresponding to \"summer\".\n <p>\n In the case of a gap, where clocks jump forward, there is no valid offset.\n Instead, the local date-time is adjusted to be later by the length of the gap.\n For a typical one hour daylight savings change, the local date-time will be\n moved one hour later into the offset typically corresponding to \"summer\".\n <p>\n To obtain the later offset during an overlap, call\n java.time.ZonedDateTime.withLaterOffsetAtOverlap() on the result of this method.\n To throw an exception when there is a gap or overlap, use\n ZoneOffset, java.time.ZoneId).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZonedDateTime}</span><div class='sub-desc'><p>the zoned date-time formed from this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-compareTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>other</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this date-time to another date-time. ...</div><div class='long'><p>Compares this date-time to another date-time.\n <p>\n The comparison is primarily based on the date-time, from earliest to latest.\n It is \"consistent with equals\", as defined by Comparable.\n <p>\n If all the date-times being compared are instances of {@code LocalDateTime},\n then the comparison will be entirely based on the date-time.\n If some dates being compared are in different chronologies, then the\n chronology is also considered, see ChronoLocalDateTime.compareTo.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoLocalDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this date-time is equal to another date-time. ...</div><div class='long'><p>Checks if this date-time is equal to another date-time.\n <p>\n Compares this {@code LocalDateTime} with another ensuring that the date-time is the same.\n Only objects of type {@code LocalDateTime} are compared, other types return false.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other date-time</p>\n</div></li></ul></div></div></div><div id='method-format' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-format' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-format' class='name expandable'>format</a>( <span class='pre'>formatter</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats this date-time using the specified formatter. ...</div><div class='long'><p>Formats this date-time using the specified formatter.\n <p>\n This date-time will be passed to the formatter to produce a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the formatted date-time string, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if an error occurs during printing</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-from' class='name expandable'>from</a>( <span class='pre'>temporal</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalDateTime} from a temporal object. ...</div><div class='long'><p>Obtains an instance of {@code LocalDateTime} from a temporal object.\n <p>\n This obtains a local date-time based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code LocalDateTime}.\n <p>\n The conversion extracts and combines the {@code LocalDate} and the\n {@code LocalTime} from the temporal object.\n Implementations are permitted to perform optimizations such as accessing\n those fields that are equivalent to the relevant objects.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code LocalDateTime::from}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the local date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to a {@code LocalDateTime}</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-get' class='name expandable'>get</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this date-time as an {@code int}. ...</div><div class='long'><p>Gets the value of the specified field from this date-time as an {@code int}.\n <p>\n This queries this date-time for the value of the specified field.\n The returned value will always be within the valid range of values for the field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this date-time, except {@code NANO_OF_DAY}, {@code MICRO_OF_DAY},\n {@code EPOCH_DAY} and {@code PROLEPTIC_MONTH} which are too large to fit in\n an {@code int} and throw a {@code DateTimeException}.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained or\n         the value is outside the range of valid values for the field</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported or\n         the range of values exceeds an {@code int}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getDayOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getDayOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getDayOfMonth' class='name expandable'>getDayOfMonth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the day-of-month field. ...</div><div class='long'><p>Gets the day-of-month field.\n <p>\n This method returns the primitive {@code int} value for the day-of-month.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the day-of-month, from 1 to 31</p>\n</div></li></ul></div></div></div><div id='method-getDayOfWeek' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getDayOfWeek' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getDayOfWeek' class='name expandable'>getDayOfWeek</a>( <span class='pre'></span> ) : Object {java.time.DayOfWeek}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the day-of-week field, which is an enum {@code DayOfWeek}. ...</div><div class='long'><p>Gets the day-of-week field, which is an enum {@code DayOfWeek}.\n <p>\n This method returns the enum <a href=\"#!/api/java.time.DayOfWeek\" rel=\"java.time.DayOfWeek\" class=\"docClass\">java.time.DayOfWeek</a> for the day-of-week.\n This avoids confusion as to what {@code int} values mean.\n If you need access to the primitive {@code int} value then the enum\n provides the int value.\n <p>\n Additional information can be obtained from the {@code DayOfWeek}.\n This includes textual names of the values.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.DayOfWeek}</span><div class='sub-desc'><p>the day-of-week, not null</p>\n</div></li></ul></div></div></div><div id='method-getDayOfYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getDayOfYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getDayOfYear' class='name expandable'>getDayOfYear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the day-of-year field. ...</div><div class='long'><p>Gets the day-of-year field.\n <p>\n This method returns the primitive {@code int} value for the day-of-year.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the day-of-year, from 1 to 365, or 366 in a leap year</p>\n</div></li></ul></div></div></div><div id='method-getHour' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getHour' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getHour' class='name expandable'>getHour</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the hour-of-day field. ...</div><div class='long'><p>Gets the hour-of-day field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the hour-of-day, from 0 to 23</p>\n</div></li></ul></div></div></div><div id='method-getLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getLong' class='name expandable'>getLong</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this date-time as a {@code long}. ...</div><div class='long'><p>Gets the value of the specified field from this date-time as a {@code long}.\n <p>\n This queries this date-time for the value of the specified field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this date-time.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getMinute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getMinute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getMinute' class='name expandable'>getMinute</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the minute-of-hour field. ...</div><div class='long'><p>Gets the minute-of-hour field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the minute-of-hour, from 0 to 59</p>\n</div></li></ul></div></div></div><div id='method-getMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getMonth' class='name expandable'>getMonth</a>( <span class='pre'></span> ) : Object {java.time.Month}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the month-of-year field using the {@code Month} enum. ...</div><div class='long'><p>Gets the month-of-year field using the {@code Month} enum.\n <p>\n This method returns the enum <a href=\"#!/api/java.time.Month\" rel=\"java.time.Month\" class=\"docClass\">java.time.Month</a> for the month.\n This avoids confusion as to what {@code int} values mean.\n If you need access to the primitive {@code int} value then the enum\n provides the int value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Month}</span><div class='sub-desc'><p>the month-of-year, not null\n@see <a href=\"#!/api/java.time.LocalDateTime-method-getMonthValue\" rel=\"java.time.LocalDateTime-method-getMonthValue\" class=\"docClass\">getMonthValue</a>()</p>\n</div></li></ul></div></div></div><div id='method-getMonthValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getMonthValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getMonthValue' class='name expandable'>getMonthValue</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the month-of-year field from 1 to 12. ...</div><div class='long'><p>Gets the month-of-year field from 1 to 12.\n <p>\n This method returns the month as an {@code int} from 1 to 12.\n Application code is frequently clearer if the enum <a href=\"#!/api/java.time.Month\" rel=\"java.time.Month\" class=\"docClass\">java.time.Month</a>\n is used by calling <a href=\"#!/api/java.time.LocalDateTime-method-getMonth\" rel=\"java.time.LocalDateTime-method-getMonth\" class=\"docClass\">getMonth</a>().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the month-of-year, from 1 to 12\n@see <a href=\"#!/api/java.time.LocalDateTime-method-getMonth\" rel=\"java.time.LocalDateTime-method-getMonth\" class=\"docClass\">getMonth</a>()</p>\n</div></li></ul></div></div></div><div id='method-getNano' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getNano' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getNano' class='name expandable'>getNano</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the nano-of-second field. ...</div><div class='long'><p>Gets the nano-of-second field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the nano-of-second, from 0 to 999,999,999</p>\n</div></li></ul></div></div></div><div id='method-getSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getSecond' class='name expandable'>getSecond</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the second-of-minute field. ...</div><div class='long'><p>Gets the second-of-minute field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the second-of-minute, from 0 to 59</p>\n</div></li></ul></div></div></div><div id='method-getYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-getYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-getYear' class='name expandable'>getYear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the year field. ...</div><div class='long'><p>Gets the year field.\n <p>\n This method returns the primitive {@code int} value for the year.\n <p>\n The year returned by this method is proleptic as per {@code get(YEAR)}.\n To obtain the year-of-era, use {@code get(YEAR_OF_ERA)}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the year, from MIN_YEAR to MAX_YEAR</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this date-time. ...</div><div class='long'><p>A hash code for this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-isAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-isAfter' class='name expandable'>isAfter</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this date-time is after the specified date-time. ...</div><div class='long'><p>Checks if this date-time is after the specified date-time.\n <p>\n This checks to see if this date-time represents a point on the\n local time-line after the other date-time.</p>\n\n<pre>   LocalDate a = LocalDateTime.of(2012, 6, 30, 12, 00);\n   LocalDate b = LocalDateTime.of(2012, 7, 1, 12, 00);\n   a.isAfter(b) == false\n   a.isAfter(a) == false\n   b.isAfter(a) == true\n </pre>\n\n\n<p> <p>\n This method only considers the position of the two date-times on the local time-line.\n It does not take into account the chronology, or calendar system.\n This is different from the comparison in <a href=\"#!/api/java.time.LocalDateTime-method-compareTo\" rel=\"java.time.LocalDateTime-method-compareTo\" class=\"docClass\">compareTo</a>(ChronoLocalDateTime),\n but is the same approach as ChronoLocalDateTime.timeLineOrder().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoLocalDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this date-time is after the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-isBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-isBefore' class='name expandable'>isBefore</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this date-time is before the specified date-time. ...</div><div class='long'><p>Checks if this date-time is before the specified date-time.\n <p>\n This checks to see if this date-time represents a point on the\n local time-line before the other date-time.</p>\n\n<pre>   LocalDate a = LocalDateTime.of(2012, 6, 30, 12, 00);\n   LocalDate b = LocalDateTime.of(2012, 7, 1, 12, 00);\n   a.isBefore(b) == true\n   a.isBefore(a) == false\n   b.isBefore(a) == false\n </pre>\n\n\n<p> <p>\n This method only considers the position of the two date-times on the local time-line.\n It does not take into account the chronology, or calendar system.\n This is different from the comparison in <a href=\"#!/api/java.time.LocalDateTime-method-compareTo\" rel=\"java.time.LocalDateTime-method-compareTo\" class=\"docClass\">compareTo</a>(ChronoLocalDateTime),\n but is the same approach as ChronoLocalDateTime.timeLineOrder().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoLocalDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this date-time is before the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isEqual' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-isEqual' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-isEqual' class='name expandable'>isEqual</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this date-time is equal to the specified date-time. ...</div><div class='long'><p>Checks if this date-time is equal to the specified date-time.\n <p>\n This checks to see if this date-time represents the same point on the\n local time-line as the other date-time.</p>\n\n<pre>   LocalDate a = LocalDateTime.of(2012, 6, 30, 12, 00);\n   LocalDate b = LocalDateTime.of(2012, 7, 1, 12, 00);\n   a.isEqual(b) == false\n   a.isEqual(a) == true\n   b.isEqual(a) == false\n </pre>\n\n\n<p> <p>\n This method only considers the position of the two date-times on the local time-line.\n It does not take into account the chronology, or calendar system.\n This is different from the comparison in <a href=\"#!/api/java.time.LocalDateTime-method-compareTo\" rel=\"java.time.LocalDateTime-method-compareTo\" class=\"docClass\">compareTo</a>(ChronoLocalDateTime),\n but is the same approach as ChronoLocalDateTime.timeLineOrder().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {java.time.chrono.ChronoLocalDateTime}<div class='sub-desc'><p>the other date-time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this date-time is equal to the specified date-time</p>\n</div></li></ul></div></div></div><div id='method-isSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-isSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-isSupported' class='name expandable'>isSupported</a>( <span class='pre'>unit</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the specified unit is supported. ...</div><div class='long'><p>Checks if the specified unit is supported.\n <p>\n This checks if the specified unit can be added to, or subtracted from, this date-time.\n If false, then calling the TemporalUnit) and\n TemporalUnit) minus methods will throw an exception.\n <p>\n If the unit is a ChronoUnit then the query is implemented here.\n The supported units are:\n <ul>\n <li>{@code NANOS}\n <li>{@code MICROS}\n <li>{@code MILLIS}\n <li>{@code SECONDS}\n <li>{@code MINUTES}\n <li>{@code HOURS}\n <li>{@code HALF_DAYS}\n <li>{@code DAYS}\n <li>{@code WEEKS}\n <li>{@code MONTHS}\n <li>{@code YEARS}\n <li>{@code DECADES}\n <li>{@code CENTURIES}\n <li>{@code MILLENNIA}\n <li>{@code ERAS}\n </li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n All other {@code ChronoUnit} instances will return false.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.isSupportedBy(Temporal)}\n passing {@code this} as the argument.\n Whether the unit is supported is determined by the unit.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the unit can be added/subtracted, false if not</p>\n</div></li></ul></div></div></div><div id='method-minus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minus' class='name expandable'>minus</a>( <span class='pre'>amountToSubtract, unit</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with the specified amount subtracted. ...</div><div class='long'><p>Returns a copy of this date-time with the specified amount subtracted.\n <p>\n This returns a {@code LocalDateTime}, based on this one, with the amount\n in terms of the unit subtracted. If it is not possible to subtract the amount,\n because the unit is not supported or for some other reason, an exception is thrown.\n <p>\n This method is equivalent to TemporalUnit) with the amount negated.\n See that method for a full description of how addition, and thus subtraction, works.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToSubtract</span> : Number<div class='sub-desc'><p>the amount of the unit to subtract from the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to subtract, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the specified amount subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the subtraction cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusDays' class='name expandable'>minusDays</a>( <span class='pre'>days</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of days subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of days subtracted.\n <p>\n This method subtracts the specified amount from the days field decrementing the\n month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2009-01-01 minus one day would result in 2008-12-31.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>days</span> : Number<div class='sub-desc'><p>the days to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the days subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusHours' class='name expandable'>minusHours</a>( <span class='pre'>hours</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of hours subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of hours subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hours</span> : Number<div class='sub-desc'><p>the hours to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the hours subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusMinutes' class='name expandable'>minusMinutes</a>( <span class='pre'>minutes</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of minutes subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of minutes subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutes</span> : Number<div class='sub-desc'><p>the minutes to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the minutes subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusMonths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusMonths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusMonths' class='name expandable'>minusMonths</a>( <span class='pre'>months</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of months subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of months subtracted.\n <p>\n This method subtracts the specified amount from the months field in three steps:\n <ol>\n <li>Subtract the input months from the month-of-year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2007-03-31 minus one month would result in the invalid date\n 2007-04-31. Instead of returning an invalid result, the last valid day\n of the month, 2007-04-30, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>months</span> : Number<div class='sub-desc'><p>the months to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the months subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusNanos' class='name expandable'>minusNanos</a>( <span class='pre'>nanos</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of nanoseconds subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of nanoseconds subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanos</span> : Number<div class='sub-desc'><p>the nanos to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the nanoseconds subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusSeconds' class='name expandable'>minusSeconds</a>( <span class='pre'>seconds</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of seconds subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of seconds subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seconds</span> : Number<div class='sub-desc'><p>the seconds to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the seconds subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusWeeks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusWeeks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusWeeks' class='name expandable'>minusWeeks</a>( <span class='pre'>weeks</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of weeks subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of weeks subtracted.\n <p>\n This method subtracts the specified amount in weeks from the days field decrementing\n the month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2009-01-07 minus one week would result in 2008-12-31.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>weeks</span> : Number<div class='sub-desc'><p>the weeks to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the weeks subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-minusYears' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-minusYears' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-minusYears' class='name expandable'>minusYears</a>( <span class='pre'>years</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of years subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of years subtracted.\n <p>\n This method subtracts the specified amount from the years field in three steps:\n <ol>\n <li>Subtract the input years from the year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2008-02-29 (leap year) minus one year would result in the\n invalid date 2009-02-29 (standard year). Instead of returning an invalid\n result, the last valid day of the month, 2009-02-28, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>years</span> : Number<div class='sub-desc'><p>the years to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the years subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-now' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-now' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-now' class='name expandable'>now</a>( <span class='pre'>clock</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains the current date-time from the specified clock. ...</div><div class='long'><p>Obtains the current date-time from the specified clock.\n <p>\n This will query the specified clock to obtain the current date-time.\n Using this method allows the use of an alternate clock for testing.\n The alternate clock may be introduced using <a href=\"#!/api/java.time.Clock\" rel=\"java.time.Clock\" class=\"docClass\">dependency injection</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clock</span> : Object {Clock}<div class='sub-desc'><p>the clock to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the current date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-of' class='name expandable'>of</a>( <span class='pre'>date, time</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalDateTime} from a date and time. ...</div><div class='long'><p>Obtains an instance of {@code LocalDateTime} from a date and time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>date</span> : Object {LocalDate}<div class='sub-desc'><p>the local date, not null</p>\n</div></li><li><span class='pre'>time</span> : Object {LocalTime}<div class='sub-desc'><p>the local time, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the local date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-ofEpochSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-ofEpochSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-ofEpochSecond' class='name expandable'>ofEpochSecond</a>( <span class='pre'>epochSecond, nanoOfSecond, offset</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalDateTime} using seconds from the\n epoch of 1970-01-01T00:00:00Z. ...</div><div class='long'><p>Obtains an instance of {@code LocalDateTime} using seconds from the\n epoch of 1970-01-01T00:00:00Z.\n <p>\n This allows the epoch-second field\n to be converted to a local date-time. This is primarily intended for\n low-level conversions rather than general application usage.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>epochSecond</span> : Number<div class='sub-desc'><p>the number of seconds from the epoch of 1970-01-01T00:00:00Z</p>\n</div></li><li><span class='pre'>nanoOfSecond</span> : Number<div class='sub-desc'><p>the nanosecond within the second, from 0 to 999,999,999</p>\n</div></li><li><span class='pre'>offset</span> : Object {ZoneOffset}<div class='sub-desc'><p>the zone offset, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the local date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range,\n  or if the nano-of-second is invalid</p>\n</div></li></ul></div></div></div><div id='method-ofInstant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-ofInstant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-ofInstant' class='name expandable'>ofInstant</a>( <span class='pre'>instant, zone</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalDateTime} from an {@code Instant} and zone ID. ...</div><div class='long'><p>Obtains an instance of {@code LocalDateTime} from an {@code Instant} and zone ID.\n <p>\n This creates a local date-time based on the specified instant.\n First, the offset from UTC/Greenwich is obtained using the zone ID and instant,\n which is simple as there is only one valid offset for each instant.\n Then, the instant and offset are used to calculate the local date-time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>instant</span> : Object {Instant}<div class='sub-desc'><p>the instant to create the date-time from, not null</p>\n</div></li><li><span class='pre'>zone</span> : Object {ZoneId}<div class='sub-desc'><p>the time-zone, which may be an offset, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the local date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-parse' class='name expandable'>parse</a>( <span class='pre'>text, formatter</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalDateTime} from a text string using a specific formatter. ...</div><div class='long'><p>Obtains an instance of {@code LocalDateTime} from a text string using a specific formatter.\n <p>\n The text is parsed using the formatter, returning a date-time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the text to parse, not null</p>\n</div></li><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the parsed local date-time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeParseException if the text cannot be parsed</p>\n</div></li></ul></div></div></div><div id='method-plus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plus' class='name expandable'>plus</a>( <span class='pre'>amountToAdd, unit</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with the specified amount added. ...</div><div class='long'><p>Returns a copy of this date-time with the specified amount added.\n <p>\n This returns a {@code LocalDateTime}, based on this one, with the amount\n in terms of the unit added. If it is not possible to add the amount, because the\n unit is not supported or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoUnit then the addition is implemented here.\n Date units are added as per TemporalUnit).\n Time units are added as per TemporalUnit) with\n any overflow in days added equivalent to using <a href=\"#!/api/java.time.LocalDateTime-method-plusDays\" rel=\"java.time.LocalDateTime-method-plusDays\" class=\"docClass\">plusDays</a>(long).\n <p>\n If the field is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.addTo(Temporal, long)}\n passing {@code this} as the argument. In this case, the unit determines\n whether and how to perform the addition.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToAdd</span> : Number<div class='sub-desc'><p>the amount of the unit to add to the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to add, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the specified amount added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the addition cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusDays' class='name expandable'>plusDays</a>( <span class='pre'>days</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of days added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of days added.\n <p>\n This method adds the specified amount to the days field incrementing the\n month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2008-12-31 plus one day would result in 2009-01-01.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>days</span> : Number<div class='sub-desc'><p>the days to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the days added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusHours' class='name expandable'>plusHours</a>( <span class='pre'>hours</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of hours added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of hours added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hours</span> : Number<div class='sub-desc'><p>the hours to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the hours added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusMinutes' class='name expandable'>plusMinutes</a>( <span class='pre'>minutes</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of minutes added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of minutes added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutes</span> : Number<div class='sub-desc'><p>the minutes to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the minutes added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusMonths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusMonths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusMonths' class='name expandable'>plusMonths</a>( <span class='pre'>months</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of months added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of months added.\n <p>\n This method adds the specified amount to the months field in three steps:\n <ol>\n <li>Add the input months to the month-of-year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2007-03-31 plus one month would result in the invalid date\n 2007-04-31. Instead of returning an invalid result, the last valid day\n of the month, 2007-04-30, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>months</span> : Number<div class='sub-desc'><p>the months to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the months added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusNanos' class='name expandable'>plusNanos</a>( <span class='pre'>nanos</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of nanoseconds added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of nanoseconds added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanos</span> : Number<div class='sub-desc'><p>the nanos to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the nanoseconds added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusSeconds' class='name expandable'>plusSeconds</a>( <span class='pre'>seconds</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of seconds added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of seconds added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seconds</span> : Number<div class='sub-desc'><p>the seconds to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the seconds added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusWeeks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusWeeks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusWeeks' class='name expandable'>plusWeeks</a>( <span class='pre'>weeks</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of weeks added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of weeks added.\n <p>\n This method adds the specified amount in weeks to the days field incrementing\n the month and year fields as necessary to ensure the result remains valid.\n The result is only invalid if the maximum/minimum year is exceeded.\n <p>\n For example, 2008-12-31 plus one week would result in 2009-01-07.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>weeks</span> : Number<div class='sub-desc'><p>the weeks to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the weeks added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-plusYears' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-plusYears' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-plusYears' class='name expandable'>plusYears</a>( <span class='pre'>years</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the specified number of years added. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the specified number of years added.\n <p>\n This method adds the specified amount to the years field in three steps:\n <ol>\n <li>Add the input years to the year field</li>\n <li>Check if the resulting date would be invalid</li>\n <li>Adjust the day-of-month to the last valid day if necessary</li>\n </ol>\n <p>\n For example, 2008-02-29 (leap year) plus one year would result in the\n invalid date 2009-02-29 (standard year). Instead of returning an invalid\n result, the last valid day of the month, 2009-02-28, is selected instead.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>years</span> : Number<div class='sub-desc'><p>the years to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the years added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported date range</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-query' class='name expandable'>query</a>( <span class='pre'>query, query</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Queries this date-time using the specified query. ...</div><div class='long'><p>Queries this date-time using the specified query.\n <p>\n This queries this date-time using the specified query strategy object.\n The {@code TemporalQuery} object defines the logic to be used to\n obtain the result. Read the documentation of the query to understand\n what the result of this method will be.\n <p>\n The result of this method is obtained by invoking the\n TemporalQuery.queryFrom(TemporalAccessor) method on the\n specified query passing {@code this} as the argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : Object {java.time.temporal.TemporalQuery}<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li><li><span class='pre'>query</span> : Object<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the query result, null may be returned (defined by the query)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to query (defined by the query)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs (defined by the query)</p>\n</div></li></ul></div></div></div><div id='method-range' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-range' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-range' class='name expandable'>range</a>( <span class='pre'>field</span> ) : Object {java.time.temporal.ValueRange}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the range of valid values for the specified field. ...</div><div class='long'><p>Gets the range of valid values for the specified field.\n <p>\n The range object expresses the minimum and maximum valid values for a field.\n This date-time is used to enhance the accuracy of the returned range.\n If it is not possible to return the range, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return\n appropriate range instances.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.rangeRefinedBy(TemporalAccessor)}\n passing {@code this} as the argument.\n Whether the range can be obtained is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to query the range for, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.ValueRange}</span><div class='sub-desc'><p>the range of valid values for the field, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the range for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li></ul></div></div></div><div id='method-toLocalDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-toLocalDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-toLocalDate' class='name expandable'>toLocalDate</a>( <span class='pre'></span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code LocalDate} part of this date-time. ...</div><div class='long'><p>Gets the {@code LocalDate} part of this date-time.\n <p>\n This returns a {@code LocalDate} with the same year, month and day\n as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the date part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toLocalTime' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-toLocalTime' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-toLocalTime' class='name expandable'>toLocalTime</a>( <span class='pre'></span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code LocalTime} part of this date-time. ...</div><div class='long'><p>Gets the {@code LocalTime} part of this date-time.\n <p>\n This returns a {@code LocalTime} with the same hour, minute, second and\n nanosecond as this date-time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the time part of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this date-time as a {@code String}, such as {@code 2007-12-03T10:15:30}. ...</div><div class='long'><p>Outputs this date-time as a {@code String}, such as {@code 2007-12-03T10:15:30}.\n <p>\n The output will be one of the following ISO-8601 formats:\n <ul>\n <li>{@code uuuu-MM-dd'T'HH:mm}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ss}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ss.SSS}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ss.SSSSSS}</li>\n <li>{@code uuuu-MM-dd'T'HH:mm:ss.SSSSSSSSS}</li>\n </ul>\n The format used will be the shortest that outputs the full value of\n the time where the omitted parts are implied to be zero.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this date-time, not null</p>\n</div></li></ul></div></div></div><div id='method-truncatedTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-truncatedTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-truncatedTo' class='name expandable'>truncatedTo</a>( <span class='pre'>unit</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the time truncated. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the time truncated.\n <p>\n Truncation returns a copy of the original date-time with fields\n smaller than the specified unit set to zero.\n For example, truncating with the minutes unit\n will set the second-of-minute and nano-of-second field to zero.\n <p>\n The unit must have a {@linkplain TemporalUnit#getDuration() duration}\n that divides into the length of a standard day without remainder.\n This includes all supplied time units on ChronoUnit and\n DAYS. Other units throw an exception.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to truncate to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the time truncated, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to truncate</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li></ul></div></div></div><div id='method-until' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-until' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-until' class='name expandable'>until</a>( <span class='pre'>endExclusive, unit</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the amount of time until another date-time in terms of the specified unit. ...</div><div class='long'><p>Calculates the amount of time until another date-time in terms of the specified unit.\n <p>\n This calculates the amount of time between two {@code LocalDateTime}\n objects in terms of a single {@code TemporalUnit}.\n The start and end points are {@code this} and the specified date-time.\n The result will be negative if the end is before the start.\n The {@code Temporal} passed to this method is converted to a\n {@code LocalDateTime} using <a href=\"#!/api/java.time.LocalDateTime-method-from\" rel=\"java.time.LocalDateTime-method-from\" class=\"docClass\">from</a>(TemporalAccessor).\n For example, the amount in days between two date-times can be calculated\n using {@code startDateTime.until(endDateTime, DAYS)}.\n <p>\n The calculation returns a whole number, representing the number of\n complete units between the two date-times.\n For example, the amount in months between 2012-06-15T00:00 and 2012-08-14T23:59\n will only be one month as it is one minute short of two months.\n <p>\n There are two equivalent ways of using this method.\n The first is to invoke this method.\n The second is to use Temporal):</p>\n\n<pre>   // these two lines are equivalent\n   amount = start.until(end, MONTHS);\n   amount = MONTHS.between(start, end);\n </pre>\n\n\n<p> The choice should be made based on which makes the code more readable.\n <p>\n The calculation is implemented in this method for ChronoUnit.\n The units {@code NANOS}, {@code MICROS}, {@code MILLIS}, {@code SECONDS},\n {@code MINUTES}, {@code HOURS} and {@code HALF_DAYS}, {@code DAYS},\n {@code WEEKS}, {@code MONTHS}, {@code YEARS}, {@code DECADES},\n {@code CENTURIES}, {@code MILLENNIA} and {@code ERAS} are supported.\n Other {@code ChronoUnit} values will throw an exception.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.between(Temporal, Temporal)}\n passing {@code this} as the first argument and the converted input temporal\n as the second argument.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>endExclusive</span> : Object {Temporal}<div class='sub-desc'><p>the end date, exclusive, which is converted to a {@code LocalDateTime}, not null</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to measure the amount in, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the amount of time between this date-time and the end date-time</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the amount cannot be calculated, or the end\n  temporal cannot be converted to a {@code LocalDateTime}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-with' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-with' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-with' class='name expandable'>with</a>( <span class='pre'>field, newValue</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this date-time with the specified field set to a new value. ...</div><div class='long'><p>Returns a copy of this date-time with the specified field set to a new value.\n <p>\n This returns a {@code LocalDateTime}, based on this one, with the value\n for the specified field changed.\n This can be used to change any supported field, such as the year, month or day-of-month.\n If it is not possible to set the value, because the field is not supported or for\n some other reason, an exception is thrown.\n <p>\n In some cases, changing the specified field can cause the resulting date-time to become invalid,\n such as changing the month from 31st January to February would make the day-of-month invalid.\n In cases like this, the field is responsible for resolving the date. Typically it will choose\n the previous valid date, which would be the last valid day of February in this example.\n <p>\n If the field is a ChronoField then the adjustment is implemented here.\n The supported fields will behave as per\n the matching method on long) java.time.LocalDate\n or long) java.time.LocalTime.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.adjustInto(Temporal, long)}\n passing {@code this} as the argument. In this case, the field determines\n whether and how to adjust the instant.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to set in the result, not null</p>\n</div></li><li><span class='pre'>newValue</span> : Number<div class='sub-desc'><p>the new value of the field in the result</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on {@code this} with the specified field set, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the field cannot be set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-withDayOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withDayOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withDayOfMonth' class='name expandable'>withDayOfMonth</a>( <span class='pre'>dayOfMonth</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the day-of-month altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the day-of-month altered.\n <p>\n If the resulting date-time is invalid, an exception is thrown.\n The time does not affect the calculation and will be the same in the result.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfMonth</span> : Number<div class='sub-desc'><p>the day-of-month to set in the result, from 1 to 28-31</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the requested day, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the day-of-month value is invalid,\n  or if the day-of-month is invalid for the month-year</p>\n</div></li></ul></div></div></div><div id='method-withDayOfYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withDayOfYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withDayOfYear' class='name expandable'>withDayOfYear</a>( <span class='pre'>dayOfYear</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the day-of-year altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the day-of-year altered.\n <p>\n If the resulting date-time is invalid, an exception is thrown.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfYear</span> : Number<div class='sub-desc'><p>the day-of-year to set in the result, from 1 to 365-366</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date with the requested day, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the day-of-year value is invalid,\n  or if the day-of-year is invalid for the year</p>\n</div></li></ul></div></div></div><div id='method-withHour' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withHour' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withHour' class='name expandable'>withHour</a>( <span class='pre'>hour</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the hour-of-day altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the hour-of-day altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hour</span> : Number<div class='sub-desc'><p>the hour-of-day to set in the result, from 0 to 23</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the requested hour, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the hour value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withMinute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withMinute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withMinute' class='name expandable'>withMinute</a>( <span class='pre'>minute</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the minute-of-hour altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the minute-of-hour altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minute</span> : Number<div class='sub-desc'><p>the minute-of-hour to set in the result, from 0 to 59</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the requested minute, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the minute value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withMonth' class='name expandable'>withMonth</a>( <span class='pre'>month</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the month-of-year altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the month-of-year altered.\n <p>\n The time does not affect the calculation and will be the same in the result.\n If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>month</span> : Number<div class='sub-desc'><p>the month-of-year to set in the result, from 1 (January) to 12 (December)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the requested month, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the month-of-year value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withNano' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withNano' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withNano' class='name expandable'>withNano</a>( <span class='pre'>nanoOfSecond</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the nano-of-second altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the nano-of-second altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanoOfSecond</span> : Number<div class='sub-desc'><p>the nano-of-second to set in the result, from 0 to 999,999,999</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the requested nanosecond, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the nano value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withSecond' class='name expandable'>withSecond</a>( <span class='pre'>second</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the second-of-minute altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the second-of-minute altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>second</span> : Number<div class='sub-desc'><p>the second-of-minute to set in the result, from 0 to 59</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the requested second, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the second value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalDateTime'>java.time.LocalDateTime</span><br/><a href='source/LocalDateTime.html#java-time-LocalDateTime-method-withYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalDateTime-method-withYear' class='name expandable'>withYear</a>( <span class='pre'>year</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalDateTime} with the year altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalDateTime} with the year altered.\n <p>\n The time does not affect the calculation and will be the same in the result.\n If the day-of-month is invalid for the year, it will be changed to the last valid day of the month.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>year</span> : Number<div class='sub-desc'><p>the year to set in the result, from MIN_YEAR to MAX_YEAR</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>a {@code LocalDateTime} based on this date-time with the requested year, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the year value is invalid</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});