Ext.data.JsonP.java_time_LocalTime({"tagname":"class","name":"java.time.LocalTime","autodetected":{},"files":[{"filename":"LocalTime.js","href":"LocalTime.html#java-time-LocalTime"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"MAX","tagname":"property","owner":"java.time.LocalTime","id":"property-MAX","meta":{}},{"name":"MIDNIGHT","tagname":"property","owner":"java.time.LocalTime","id":"property-MIDNIGHT","meta":{}},{"name":"MIN","tagname":"property","owner":"java.time.LocalTime","id":"property-MIN","meta":{}},{"name":"NOON","tagname":"property","owner":"java.time.LocalTime","id":"property-NOON","meta":{}},{"name":"adjustInto","tagname":"method","owner":"java.time.LocalTime","id":"method-adjustInto","meta":{}},{"name":"atDate","tagname":"method","owner":"java.time.LocalTime","id":"method-atDate","meta":{}},{"name":"atOffset","tagname":"method","owner":"java.time.LocalTime","id":"method-atOffset","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.time.LocalTime","id":"method-compareTo","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.LocalTime","id":"method-equals","meta":{}},{"name":"format","tagname":"method","owner":"java.time.LocalTime","id":"method-format","meta":{}},{"name":"from","tagname":"method","owner":"java.time.LocalTime","id":"method-from","meta":{}},{"name":"get","tagname":"method","owner":"java.time.LocalTime","id":"method-get","meta":{}},{"name":"getHour","tagname":"method","owner":"java.time.LocalTime","id":"method-getHour","meta":{}},{"name":"getLong","tagname":"method","owner":"java.time.LocalTime","id":"method-getLong","meta":{}},{"name":"getMinute","tagname":"method","owner":"java.time.LocalTime","id":"method-getMinute","meta":{}},{"name":"getNano","tagname":"method","owner":"java.time.LocalTime","id":"method-getNano","meta":{}},{"name":"getSecond","tagname":"method","owner":"java.time.LocalTime","id":"method-getSecond","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.LocalTime","id":"method-hashCode","meta":{}},{"name":"isAfter","tagname":"method","owner":"java.time.LocalTime","id":"method-isAfter","meta":{}},{"name":"isBefore","tagname":"method","owner":"java.time.LocalTime","id":"method-isBefore","meta":{}},{"name":"isSupported","tagname":"method","owner":"java.time.LocalTime","id":"method-isSupported","meta":{}},{"name":"minus","tagname":"method","owner":"java.time.LocalTime","id":"method-minus","meta":{}},{"name":"minusHours","tagname":"method","owner":"java.time.LocalTime","id":"method-minusHours","meta":{}},{"name":"minusMinutes","tagname":"method","owner":"java.time.LocalTime","id":"method-minusMinutes","meta":{}},{"name":"minusNanos","tagname":"method","owner":"java.time.LocalTime","id":"method-minusNanos","meta":{}},{"name":"minusSeconds","tagname":"method","owner":"java.time.LocalTime","id":"method-minusSeconds","meta":{}},{"name":"now","tagname":"method","owner":"java.time.LocalTime","id":"method-now","meta":{}},{"name":"of","tagname":"method","owner":"java.time.LocalTime","id":"method-of","meta":{}},{"name":"ofNanoOfDay","tagname":"method","owner":"java.time.LocalTime","id":"method-ofNanoOfDay","meta":{}},{"name":"ofSecondOfDay","tagname":"method","owner":"java.time.LocalTime","id":"method-ofSecondOfDay","meta":{}},{"name":"parse","tagname":"method","owner":"java.time.LocalTime","id":"method-parse","meta":{}},{"name":"plus","tagname":"method","owner":"java.time.LocalTime","id":"method-plus","meta":{}},{"name":"plusHours","tagname":"method","owner":"java.time.LocalTime","id":"method-plusHours","meta":{}},{"name":"plusMinutes","tagname":"method","owner":"java.time.LocalTime","id":"method-plusMinutes","meta":{}},{"name":"plusNanos","tagname":"method","owner":"java.time.LocalTime","id":"method-plusNanos","meta":{}},{"name":"plusSeconds","tagname":"method","owner":"java.time.LocalTime","id":"method-plusSeconds","meta":{}},{"name":"query","tagname":"method","owner":"java.time.LocalTime","id":"method-query","meta":{}},{"name":"range","tagname":"method","owner":"java.time.LocalTime","id":"method-range","meta":{}},{"name":"toNanoOfDay","tagname":"method","owner":"java.time.LocalTime","id":"method-toNanoOfDay","meta":{}},{"name":"toSecondOfDay","tagname":"method","owner":"java.time.LocalTime","id":"method-toSecondOfDay","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.LocalTime","id":"method-toString","meta":{}},{"name":"truncatedTo","tagname":"method","owner":"java.time.LocalTime","id":"method-truncatedTo","meta":{}},{"name":"until","tagname":"method","owner":"java.time.LocalTime","id":"method-until","meta":{}},{"name":"with","tagname":"method","owner":"java.time.LocalTime","id":"method-with","meta":{}},{"name":"withHour","tagname":"method","owner":"java.time.LocalTime","id":"method-withHour","meta":{}},{"name":"withMinute","tagname":"method","owner":"java.time.LocalTime","id":"method-withMinute","meta":{}},{"name":"withNano","tagname":"method","owner":"java.time.LocalTime","id":"method-withNano","meta":{}},{"name":"withSecond","tagname":"method","owner":"java.time.LocalTime","id":"method-withSecond","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.LocalTime","short_doc":"implements java.time.temporal.Temporal\n\n implements java.time.temporal.TemporalAdjuster\n\n implements java.lang.Compar...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.LocalTime</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/LocalTime.html#java-time-LocalTime' target='_blank'>LocalTime.js</a></div></pre><div class='doc-contents'><p>implements java.time.temporal.Temporal</p>\n\n<p> implements java.time.temporal.TemporalAdjuster</p>\n\n<p> implements java.lang.Comparable</p>\n\n<p> implements java.io.Serializable</p>\n\n<p>A time without a time-zone in the ISO-8601 calendar system,\n such as {@code 10:15:30}.\n <p>\n {@code LocalTime} is an immutable date-time object that represents a time,\n often viewed as hour-minute-second.\n Time is represented to nanosecond precision.\n For example, the value \"13:45.30.123456789\" can be stored in a {@code LocalTime}.\n <p>\n This class does not store or represent a date or time-zone.\n Instead, it is a description of the local time as seen on a wall clock.\n It cannot represent an instant on the time-line without additional information\n such as an offset or time-zone.\n <p>\n The ISO-8601 calendar system is the modern civil calendar system used today\n in most of the world. This API assumes that all calendar systems use the same\n representation, this class, for time-of-day.</p>\n\n<p> @implSpec\n This class is immutable and thread-safe.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-MAX' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-property-MAX' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-property-MAX' class='name expandable'>MAX</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The maximum supported {@code LocalTime}, '23:59:59.999999999'. ...</div><div class='long'><p>The maximum supported {@code LocalTime}, '23:59:59.999999999'.\nThis is the time just before midnight at the end of the day.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MIDNIGHT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-property-MIDNIGHT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-property-MIDNIGHT' class='name expandable'>MIDNIGHT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The time of midnight at the start of the day, '00:00'. ...</div><div class='long'><p>The time of midnight at the start of the day, '00:00'.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-MIN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-property-MIN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-property-MIN' class='name expandable'>MIN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The minimum supported {@code LocalTime}, '00:00'. ...</div><div class='long'><p>The minimum supported {@code LocalTime}, '00:00'.\nThis is the time of midnight at the start of the day.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-NOON' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-property-NOON' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-property-NOON' class='name expandable'>NOON</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The time of noon in the middle of the day, '12:00'. ...</div><div class='long'><p>The time of noon in the middle of the day, '12:00'.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adjustInto' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-adjustInto' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-adjustInto' class='name expandable'>adjustInto</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts the specified temporal object to have the same time as this object. ...</div><div class='long'><p>Adjusts the specified temporal object to have the same time as this object.\n <p>\n This returns a temporal object of the same observable type as the input\n with the time changed to be the same as this.\n <p>\n The adjustment is equivalent to using long)\n passing ChronoField.NANO_OF_DAY as the field.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.with(TemporalAdjuster):</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   temporal = thisLocalTime.adjustInto(temporal);\n   temporal = temporal.with(thisLocalTime);\n </pre>\n\n\n<p> <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the target object to be adjusted, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>the adjusted object, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to make the adjustment</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-atDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-atDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-atDate' class='name expandable'>atDate</a>( <span class='pre'>date</span> ) : Object {java.time.LocalDateTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines this time with a date to create a {@code LocalDateTime}. ...</div><div class='long'><p>Combines this time with a date to create a {@code LocalDateTime}.\n <p>\n This returns a {@code LocalDateTime} formed from this time at the specified date.\n All possible combinations of date and time are valid.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>date</span> : Object {LocalDate}<div class='sub-desc'><p>the date to combine with, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDateTime}</span><div class='sub-desc'><p>the local date-time formed from this time and the specified date, not null</p>\n</div></li></ul></div></div></div><div id='method-atOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-atOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-atOffset' class='name expandable'>atOffset</a>( <span class='pre'>offset</span> ) : Object {java.time.OffsetTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines this time with an offset to create an {@code OffsetTime}. ...</div><div class='long'><p>Combines this time with an offset to create an {@code OffsetTime}.\n <p>\n This returns an {@code OffsetTime} formed from this time at the specified offset.\n All possible combinations of time and offset are valid.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>offset</span> : Object {ZoneOffset}<div class='sub-desc'><p>the offset to combine with, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.OffsetTime}</span><div class='sub-desc'><p>the offset time formed from this time and the specified offset, not null</p>\n</div></li></ul></div></div></div><div id='method-compareTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>other</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this time to another time. ...</div><div class='long'><p>Compares this time to another time.\n <p>\n The comparison is based on the time-line position of the local times within a day.\n It is \"consistent with equals\", as defined by Comparable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {LocalTime}<div class='sub-desc'><p>the other time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code other} is null</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this time is equal to another time. ...</div><div class='long'><p>Checks if this time is equal to another time.\n <p>\n The comparison is based on the time-line position of the time within a day.\n <p>\n Only objects of type {@code LocalTime} are compared, other types return false.\n To compare the date of two {@code TemporalAccessor} instances, use\n ChronoField.NANO_OF_DAY as a comparator.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other time</p>\n</div></li></ul></div></div></div><div id='method-format' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-format' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-format' class='name expandable'>format</a>( <span class='pre'>formatter</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats this time using the specified formatter. ...</div><div class='long'><p>Formats this time using the specified formatter.\n <p>\n This time will be passed to the formatter to produce a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the formatted time string, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if an error occurs during printing</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-from' class='name expandable'>from</a>( <span class='pre'>temporal</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalTime} from a temporal object. ...</div><div class='long'><p>Obtains an instance of {@code LocalTime} from a temporal object.\n <p>\n This obtains a local time based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code LocalTime}.\n <p>\n The conversion uses the TemporalQueries.localTime() query, which relies\n on extracting the NANO_OF_DAY field.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code LocalTime::from}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the local time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to a {@code LocalTime}</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-get' class='name expandable'>get</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this time as an {@code int}. ...</div><div class='long'><p>Gets the value of the specified field from this time as an {@code int}.\n <p>\n This queries this time for the value of the specified field.\n The returned value will always be within the valid range of values for the field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this time, except {@code NANO_OF_DAY} and {@code MICRO_OF_DAY}\n which are too large to fit in an {@code int} and throw a {@code DateTimeException}.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained or\n         the value is outside the range of valid values for the field</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported or\n         the range of values exceeds an {@code int}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getHour' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-getHour' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-getHour' class='name expandable'>getHour</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the hour-of-day field. ...</div><div class='long'><p>Gets the hour-of-day field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the hour-of-day, from 0 to 23</p>\n</div></li></ul></div></div></div><div id='method-getLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-getLong' class='name expandable'>getLong</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this time as a {@code long}. ...</div><div class='long'><p>Gets the value of the specified field from this time as a {@code long}.\n <p>\n This queries this time for the value of the specified field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this time.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getMinute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-getMinute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-getMinute' class='name expandable'>getMinute</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the minute-of-hour field. ...</div><div class='long'><p>Gets the minute-of-hour field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the minute-of-hour, from 0 to 59</p>\n</div></li></ul></div></div></div><div id='method-getNano' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-getNano' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-getNano' class='name expandable'>getNano</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the nano-of-second field. ...</div><div class='long'><p>Gets the nano-of-second field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the nano-of-second, from 0 to 999,999,999</p>\n</div></li></ul></div></div></div><div id='method-getSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-getSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-getSecond' class='name expandable'>getSecond</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the second-of-minute field. ...</div><div class='long'><p>Gets the second-of-minute field.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the second-of-minute, from 0 to 59</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this time. ...</div><div class='long'><p>A hash code for this time.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-isAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-isAfter' class='name expandable'>isAfter</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this time is after the specified time. ...</div><div class='long'><p>Checks if this time is after the specified time.\n <p>\n The comparison is based on the time-line position of the time within a day.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {LocalTime}<div class='sub-desc'><p>the other time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is after the specified time</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code other} is null</p>\n</div></li></ul></div></div></div><div id='method-isBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-isBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-isBefore' class='name expandable'>isBefore</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this time is before the specified time. ...</div><div class='long'><p>Checks if this time is before the specified time.\n <p>\n The comparison is based on the time-line position of the time within a day.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {LocalTime}<div class='sub-desc'><p>the other time to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this point is before the specified time</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if {@code other} is null</p>\n</div></li></ul></div></div></div><div id='method-isSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-isSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-isSupported' class='name expandable'>isSupported</a>( <span class='pre'>unit</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the specified unit is supported. ...</div><div class='long'><p>Checks if the specified unit is supported.\n <p>\n This checks if the specified unit can be added to, or subtracted from, this time.\n If false, then calling the TemporalUnit) and\n TemporalUnit) minus methods will throw an exception.\n <p>\n If the unit is a ChronoUnit then the query is implemented here.\n The supported units are:\n <ul>\n <li>{@code NANOS}\n <li>{@code MICROS}\n <li>{@code MILLIS}\n <li>{@code SECONDS}\n <li>{@code MINUTES}\n <li>{@code HOURS}\n <li>{@code HALF_DAYS}\n </li></li></li></li></li></li></li></ul>\n All other {@code ChronoUnit} instances will return false.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.isSupportedBy(Temporal)}\n passing {@code this} as the argument.\n Whether the unit is supported is determined by the unit.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the unit can be added/subtracted, false if not</p>\n</div></li></ul></div></div></div><div id='method-minus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-minus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-minus' class='name expandable'>minus</a>( <span class='pre'>amountToSubtract, unit</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this time with the specified amount subtracted. ...</div><div class='long'><p>Returns a copy of this time with the specified amount subtracted.\n <p>\n This returns a {@code LocalTime}, based on this one, with the amount\n in terms of the unit subtracted. If it is not possible to subtract the amount,\n because the unit is not supported or for some other reason, an exception is thrown.\n <p>\n This method is equivalent to TemporalUnit) with the amount negated.\n See that method for a full description of how addition, and thus subtraction, works.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToSubtract</span> : Number<div class='sub-desc'><p>the amount of the unit to subtract from the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to subtract, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the specified amount subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the subtraction cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-minusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-minusHours' class='name expandable'>minusHours</a>( <span class='pre'>hoursToSubtract</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of hours subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of hours subtracted.\n <p>\n This subtracts the specified number of hours from this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hoursToSubtract</span> : Number<div class='sub-desc'><p>the hours to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the hours subtracted, not null</p>\n</div></li></ul></div></div></div><div id='method-minusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-minusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-minusMinutes' class='name expandable'>minusMinutes</a>( <span class='pre'>minutesToSubtract</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of minutes subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of minutes subtracted.\n <p>\n This subtracts the specified number of minutes from this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutesToSubtract</span> : Number<div class='sub-desc'><p>the minutes to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the minutes subtracted, not null</p>\n</div></li></ul></div></div></div><div id='method-minusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-minusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-minusNanos' class='name expandable'>minusNanos</a>( <span class='pre'>nanosToSubtract</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of nanoseconds subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of nanoseconds subtracted.\n <p>\n This subtracts the specified number of nanoseconds from this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanosToSubtract</span> : Number<div class='sub-desc'><p>the nanos to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the nanoseconds subtracted, not null</p>\n</div></li></ul></div></div></div><div id='method-minusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-minusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-minusSeconds' class='name expandable'>minusSeconds</a>( <span class='pre'>secondsToSubtract</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of seconds subtracted. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of seconds subtracted.\n <p>\n This subtracts the specified number of seconds from this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>secondsToSubtract</span> : Number<div class='sub-desc'><p>the seconds to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the seconds subtracted, not null</p>\n</div></li></ul></div></div></div><div id='method-now' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-now' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-now' class='name expandable'>now</a>( <span class='pre'>clock</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains the current time from the specified clock. ...</div><div class='long'><p>Obtains the current time from the specified clock.\n <p>\n This will query the specified clock to obtain the current time.\n Using this method allows the use of an alternate clock for testing.\n The alternate clock may be introduced using <a href=\"#!/api/java.time.Clock\" rel=\"java.time.Clock\" class=\"docClass\">dependency injection</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clock</span> : Object {Clock}<div class='sub-desc'><p>the clock to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the current time, not null</p>\n</div></li></ul></div></div></div><div id='method-of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-of' class='name expandable'>of</a>( <span class='pre'>hour, minute, second, nanoOfSecond</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalTime} from an hour, minute, second and nanosecond. ...</div><div class='long'><p>Obtains an instance of {@code LocalTime} from an hour, minute, second and nanosecond.\n <p>\n This returns a {@code LocalTime} with the specified hour, minute, second and nanosecond.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hour</span> : Number<div class='sub-desc'><p>the hour-of-day to represent, from 0 to 23</p>\n</div></li><li><span class='pre'>minute</span> : Number<div class='sub-desc'><p>the minute-of-hour to represent, from 0 to 59</p>\n</div></li><li><span class='pre'>second</span> : Number<div class='sub-desc'><p>the second-of-minute to represent, from 0 to 59</p>\n</div></li><li><span class='pre'>nanoOfSecond</span> : Number<div class='sub-desc'><p>the nano-of-second to represent, from 0 to 999,999,999</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the local time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the value of any field is out of range</p>\n</div></li></ul></div></div></div><div id='method-ofNanoOfDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-ofNanoOfDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-ofNanoOfDay' class='name expandable'>ofNanoOfDay</a>( <span class='pre'>nanoOfDay</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalTime} from a nanos-of-day value. ...</div><div class='long'><p>Obtains an instance of {@code LocalTime} from a nanos-of-day value.\n <p>\n This returns a {@code LocalTime} with the specified nanosecond-of-day.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanoOfDay</span> : Number<div class='sub-desc'><p>the nano of day, from {@code 0} to {@code 24 * 60 * 60 * 1,000,000,000 - 1}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the local time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the nanos of day value is invalid</p>\n</div></li></ul></div></div></div><div id='method-ofSecondOfDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-ofSecondOfDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-ofSecondOfDay' class='name expandable'>ofSecondOfDay</a>( <span class='pre'>secondOfDay</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalTime} from a second-of-day value. ...</div><div class='long'><p>Obtains an instance of {@code LocalTime} from a second-of-day value.\n <p>\n This returns a {@code LocalTime} with the specified second-of-day.\n The nanosecond field will be set to zero.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>secondOfDay</span> : Number<div class='sub-desc'><p>the second-of-day, from {@code 0} to {@code 24 * 60 * 60 - 1}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the local time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the second-of-day value is invalid</p>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-parse' class='name expandable'>parse</a>( <span class='pre'>text, formatter</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code LocalTime} from a text string using a specific formatter. ...</div><div class='long'><p>Obtains an instance of {@code LocalTime} from a text string using a specific formatter.\n <p>\n The text is parsed using the formatter, returning a time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the text to parse, not null</p>\n</div></li><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>the parsed local time, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeParseException if the text cannot be parsed</p>\n</div></li></ul></div></div></div><div id='method-plus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-plus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-plus' class='name expandable'>plus</a>( <span class='pre'>amountToAdd, unit</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this time with the specified amount added. ...</div><div class='long'><p>Returns a copy of this time with the specified amount added.\n <p>\n This returns a {@code LocalTime}, based on this one, with the amount\n in terms of the unit added. If it is not possible to add the amount, because the\n unit is not supported or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoUnit then the addition is implemented here.\n The supported fields behave as follows:\n <ul>\n <li>{@code NANOS} -\n  Returns a {@code LocalTime} with the specified number of nanoseconds added.\n  This is equivalent to <a href=\"#!/api/java.time.LocalTime-method-plusNanos\" rel=\"java.time.LocalTime-method-plusNanos\" class=\"docClass\">plusNanos</a>(long).\n <li>{@code MICROS} -\n  Returns a {@code LocalTime} with the specified number of microseconds added.\n  This is equivalent to <a href=\"#!/api/java.time.LocalTime-method-plusNanos\" rel=\"java.time.LocalTime-method-plusNanos\" class=\"docClass\">plusNanos</a>(long) with the amount\n  multiplied by 1,000.\n <li>{@code MILLIS} -\n  Returns a {@code LocalTime} with the specified number of milliseconds added.\n  This is equivalent to <a href=\"#!/api/java.time.LocalTime-method-plusNanos\" rel=\"java.time.LocalTime-method-plusNanos\" class=\"docClass\">plusNanos</a>(long) with the amount\n  multiplied by 1,000,000.\n <li>{@code SECONDS} -\n  Returns a {@code LocalTime} with the specified number of seconds added.\n  This is equivalent to <a href=\"#!/api/java.time.LocalTime-method-plusSeconds\" rel=\"java.time.LocalTime-method-plusSeconds\" class=\"docClass\">plusSeconds</a>(long).\n <li>{@code MINUTES} -\n  Returns a {@code LocalTime} with the specified number of minutes added.\n  This is equivalent to <a href=\"#!/api/java.time.LocalTime-method-plusMinutes\" rel=\"java.time.LocalTime-method-plusMinutes\" class=\"docClass\">plusMinutes</a>(long).\n <li>{@code HOURS} -\n  Returns a {@code LocalTime} with the specified number of hours added.\n  This is equivalent to <a href=\"#!/api/java.time.LocalTime-method-plusHours\" rel=\"java.time.LocalTime-method-plusHours\" class=\"docClass\">plusHours</a>(long).\n <li>{@code HALF_DAYS} -\n  Returns a {@code LocalTime} with the specified number of half-days added.\n  This is equivalent to <a href=\"#!/api/java.time.LocalTime-method-plusHours\" rel=\"java.time.LocalTime-method-plusHours\" class=\"docClass\">plusHours</a>(long) with the amount\n  multiplied by 12.\n </li></li></li></li></li></li></li></ul>\n <p>\n All other {@code ChronoUnit} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.addTo(Temporal, long)}\n passing {@code this} as the argument. In this case, the unit determines\n whether and how to perform the addition.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToAdd</span> : Number<div class='sub-desc'><p>the amount of the unit to add to the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to add, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the specified amount added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the addition cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-plusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-plusHours' class='name expandable'>plusHours</a>( <span class='pre'>hoursToAdd</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of hours added. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of hours added.\n <p>\n This adds the specified number of hours to this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hoursToAdd</span> : Number<div class='sub-desc'><p>the hours to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the hours added, not null</p>\n</div></li></ul></div></div></div><div id='method-plusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-plusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-plusMinutes' class='name expandable'>plusMinutes</a>( <span class='pre'>minutesToAdd</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of minutes added. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of minutes added.\n <p>\n This adds the specified number of minutes to this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutesToAdd</span> : Number<div class='sub-desc'><p>the minutes to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the minutes added, not null</p>\n</div></li></ul></div></div></div><div id='method-plusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-plusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-plusNanos' class='name expandable'>plusNanos</a>( <span class='pre'>nanosToAdd</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of nanoseconds added. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of nanoseconds added.\n <p>\n This adds the specified number of nanoseconds to this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanosToAdd</span> : Number<div class='sub-desc'><p>the nanos to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the nanoseconds added, not null</p>\n</div></li></ul></div></div></div><div id='method-plusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-plusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-plusSeconds' class='name expandable'>plusSeconds</a>( <span class='pre'>secondstoAdd</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the specified number of seconds added. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the specified number of seconds added.\n <p>\n This adds the specified number of seconds to this time, returning a new time.\n The calculation wraps around midnight.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>secondstoAdd</span> : Number<div class='sub-desc'><p>the seconds to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the seconds added, not null</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-query' class='name expandable'>query</a>( <span class='pre'>query, query</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Queries this time using the specified query. ...</div><div class='long'><p>Queries this time using the specified query.\n <p>\n This queries this time using the specified query strategy object.\n The {@code TemporalQuery} object defines the logic to be used to\n obtain the result. Read the documentation of the query to understand\n what the result of this method will be.\n <p>\n The result of this method is obtained by invoking the\n TemporalQuery.queryFrom(TemporalAccessor) method on the\n specified query passing {@code this} as the argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : Object {java.time.temporal.TemporalQuery}<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li><li><span class='pre'>query</span> : Object<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the query result, null may be returned (defined by the query)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to query (defined by the query)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs (defined by the query)</p>\n</div></li></ul></div></div></div><div id='method-range' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-range' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-range' class='name expandable'>range</a>( <span class='pre'>field</span> ) : Object {java.time.temporal.ValueRange}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the range of valid values for the specified field. ...</div><div class='long'><p>Gets the range of valid values for the specified field.\n <p>\n The range object expresses the minimum and maximum valid values for a field.\n This time is used to enhance the accuracy of the returned range.\n If it is not possible to return the range, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return\n appropriate range instances.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.rangeRefinedBy(TemporalAccessor)}\n passing {@code this} as the argument.\n Whether the range can be obtained is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to query the range for, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.ValueRange}</span><div class='sub-desc'><p>the range of valid values for the field, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the range for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li></ul></div></div></div><div id='method-toNanoOfDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-toNanoOfDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-toNanoOfDay' class='name expandable'>toNanoOfDay</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Extracts the time as nanos of day,\n from {@code 0} to {@code 24 * 60 * 60 * 1,000,000,000 - 1}. ...</div><div class='long'><p>Extracts the time as nanos of day,\n from {@code 0} to {@code 24 * 60 * 60 * 1,000,000,000 - 1}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the nano of day equivalent to this time</p>\n</div></li></ul></div></div></div><div id='method-toSecondOfDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-toSecondOfDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-toSecondOfDay' class='name expandable'>toSecondOfDay</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Extracts the time as seconds of day,\n from {@code 0} to {@code 24 * 60 * 60 - 1}. ...</div><div class='long'><p>Extracts the time as seconds of day,\n from {@code 0} to {@code 24 * 60 * 60 - 1}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the second-of-day equivalent to this time</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this time as a {@code String}, such as {@code 10:15}. ...</div><div class='long'><p>Outputs this time as a {@code String}, such as {@code 10:15}.\n <p>\n The output will be one of the following ISO-8601 formats:\n <ul>\n <li>{@code HH:mm}</li>\n <li>{@code HH:mm:ss}</li>\n <li>{@code HH:mm:ss.SSS}</li>\n <li>{@code HH:mm:ss.SSSSSS}</li>\n <li>{@code HH:mm:ss.SSSSSSSSS}</li>\n </ul>\n The format used will be the shortest that outputs the full value of\n the time where the omitted parts are implied to be zero.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this time, not null</p>\n</div></li></ul></div></div></div><div id='method-truncatedTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-truncatedTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-truncatedTo' class='name expandable'>truncatedTo</a>( <span class='pre'>unit</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the time truncated. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the time truncated.\n <p>\n Truncation returns a copy of the original time with fields\n smaller than the specified unit set to zero.\n For example, truncating with the minutes unit\n will set the second-of-minute and nano-of-second field to zero.\n <p>\n The unit must have a {@linkplain TemporalUnit#getDuration() duration}\n that divides into the length of a standard day without remainder.\n This includes all supplied time units on ChronoUnit and\n DAYS. Other units throw an exception.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to truncate to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the time truncated, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to truncate</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li></ul></div></div></div><div id='method-until' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-until' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-until' class='name expandable'>until</a>( <span class='pre'>endExclusive, unit</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the amount of time until another time in terms of the specified unit. ...</div><div class='long'><p>Calculates the amount of time until another time in terms of the specified unit.\n <p>\n This calculates the amount of time between two {@code LocalTime}\n objects in terms of a single {@code TemporalUnit}.\n The start and end points are {@code this} and the specified time.\n The result will be negative if the end is before the start.\n The {@code Temporal} passed to this method is converted to a\n {@code LocalTime} using <a href=\"#!/api/java.time.LocalTime-method-from\" rel=\"java.time.LocalTime-method-from\" class=\"docClass\">from</a>(TemporalAccessor).\n For example, the amount in hours between two times can be calculated\n using {@code startTime.until(endTime, HOURS)}.\n <p>\n The calculation returns a whole number, representing the number of\n complete units between the two times.\n For example, the amount in hours between 11:30 and 13:29 will only\n be one hour as it is one minute short of two hours.\n <p>\n There are two equivalent ways of using this method.\n The first is to invoke this method.\n The second is to use Temporal):</p>\n\n<pre>   // these two lines are equivalent\n   amount = start.until(end, MINUTES);\n   amount = MINUTES.between(start, end);\n </pre>\n\n\n<p> The choice should be made based on which makes the code more readable.\n <p>\n The calculation is implemented in this method for ChronoUnit.\n The units {@code NANOS}, {@code MICROS}, {@code MILLIS}, {@code SECONDS},\n {@code MINUTES}, {@code HOURS} and {@code HALF_DAYS} are supported.\n Other {@code ChronoUnit} values will throw an exception.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.between(Temporal, Temporal)}\n passing {@code this} as the first argument and the converted input temporal\n as the second argument.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>endExclusive</span> : Object {Temporal}<div class='sub-desc'><p>the end time, exclusive, which is converted to a {@code LocalTime}, not null</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to measure the amount in, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the amount of time between this time and the end time</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the amount cannot be calculated, or the end\n  temporal cannot be converted to a {@code LocalTime}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-with' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-with' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-with' class='name expandable'>with</a>( <span class='pre'>field, newValue</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this time with the specified field set to a new value. ...</div><div class='long'><p>Returns a copy of this time with the specified field set to a new value.\n <p>\n This returns a {@code LocalTime}, based on this one, with the value\n for the specified field changed.\n This can be used to change any supported field, such as the hour, minute or second.\n If it is not possible to set the value, because the field is not supported or for\n some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the adjustment is implemented here.\n The supported fields behave as follows:\n <ul>\n <li>{@code NANO_OF_SECOND} -\n  Returns a {@code LocalTime} with the specified nano-of-second.\n  The hour, minute and second will be unchanged.\n <li>{@code NANO_OF_DAY} -\n  Returns a {@code LocalTime} with the specified nano-of-day.\n  This completely replaces the time and is equivalent to <a href=\"#!/api/java.time.LocalTime-method-ofNanoOfDay\" rel=\"java.time.LocalTime-method-ofNanoOfDay\" class=\"docClass\">ofNanoOfDay</a>(long).\n <li>{@code MICRO_OF_SECOND} -\n  Returns a {@code LocalTime} with the nano-of-second replaced by the specified\n  micro-of-second multiplied by 1,000.\n  The hour, minute and second will be unchanged.\n <li>{@code MICRO_OF_DAY} -\n  Returns a {@code LocalTime} with the specified micro-of-day.\n  This completely replaces the time and is equivalent to using <a href=\"#!/api/java.time.LocalTime-method-ofNanoOfDay\" rel=\"java.time.LocalTime-method-ofNanoOfDay\" class=\"docClass\">ofNanoOfDay</a>(long)\n  with the micro-of-day multiplied by 1,000.\n <li>{@code MILLI_OF_SECOND} -\n  Returns a {@code LocalTime} with the nano-of-second replaced by the specified\n  milli-of-second multiplied by 1,000,000.\n  The hour, minute and second will be unchanged.\n <li>{@code MILLI_OF_DAY} -\n  Returns a {@code LocalTime} with the specified milli-of-day.\n  This completely replaces the time and is equivalent to using <a href=\"#!/api/java.time.LocalTime-method-ofNanoOfDay\" rel=\"java.time.LocalTime-method-ofNanoOfDay\" class=\"docClass\">ofNanoOfDay</a>(long)\n  with the milli-of-day multiplied by 1,000,000.\n <li>{@code SECOND_OF_MINUTE} -\n  Returns a {@code LocalTime} with the specified second-of-minute.\n  The hour, minute and nano-of-second will be unchanged.\n <li>{@code SECOND_OF_DAY} -\n  Returns a {@code LocalTime} with the specified second-of-day.\n  The nano-of-second will be unchanged.\n <li>{@code MINUTE_OF_HOUR} -\n  Returns a {@code LocalTime} with the specified minute-of-hour.\n  The hour, second-of-minute and nano-of-second will be unchanged.\n <li>{@code MINUTE_OF_DAY} -\n  Returns a {@code LocalTime} with the specified minute-of-day.\n  The second-of-minute and nano-of-second will be unchanged.\n <li>{@code HOUR_OF_AMPM} -\n  Returns a {@code LocalTime} with the specified hour-of-am-pm.\n  The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n <li>{@code CLOCK_HOUR_OF_AMPM} -\n  Returns a {@code LocalTime} with the specified clock-hour-of-am-pm.\n  The AM/PM, minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n <li>{@code HOUR_OF_DAY} -\n  Returns a {@code LocalTime} with the specified hour-of-day.\n  The minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n <li>{@code CLOCK_HOUR_OF_DAY} -\n  Returns a {@code LocalTime} with the specified clock-hour-of-day.\n  The minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n <li>{@code AMPM_OF_DAY} -\n  Returns a {@code LocalTime} with the specified AM/PM.\n  The hour-of-am-pm, minute-of-hour, second-of-minute and nano-of-second will be unchanged.\n </li></li></li></li></li></li></li></li></li></li></li></li></li></li></li></ul>\n <p>\n In all cases, if the new value is outside the valid range of values for the field\n then a {@code DateTimeException} will be thrown.\n <p>\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.adjustInto(Temporal, long)}\n passing {@code this} as the argument. In this case, the field determines\n whether and how to adjust the instant.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to set in the result, not null</p>\n</div></li><li><span class='pre'>newValue</span> : Number<div class='sub-desc'><p>the new value of the field in the result</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on {@code this} with the specified field set, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the field cannot be set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-withHour' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-withHour' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-withHour' class='name expandable'>withHour</a>( <span class='pre'>hour</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the hour-of-day altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the hour-of-day altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hour</span> : Number<div class='sub-desc'><p>the hour-of-day to set in the result, from 0 to 23</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the requested hour, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the hour value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withMinute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-withMinute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-withMinute' class='name expandable'>withMinute</a>( <span class='pre'>minute</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the minute-of-hour altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the minute-of-hour altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minute</span> : Number<div class='sub-desc'><p>the minute-of-hour to set in the result, from 0 to 59</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the requested minute, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the minute value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withNano' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-withNano' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-withNano' class='name expandable'>withNano</a>( <span class='pre'>nanoOfSecond</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the nano-of-second altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the nano-of-second altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanoOfSecond</span> : Number<div class='sub-desc'><p>the nano-of-second to set in the result, from 0 to 999,999,999</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the requested nanosecond, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the nanos value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withSecond' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.LocalTime'>java.time.LocalTime</span><br/><a href='source/LocalTime.html#java-time-LocalTime-method-withSecond' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.LocalTime-method-withSecond' class='name expandable'>withSecond</a>( <span class='pre'>second</span> ) : Object {java.time.LocalTime}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code LocalTime} with the second-of-minute altered. ...</div><div class='long'><p>Returns a copy of this {@code LocalTime} with the second-of-minute altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>second</span> : Number<div class='sub-desc'><p>the second-of-minute to set in the result, from 0 to 59</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalTime}</span><div class='sub-desc'><p>a {@code LocalTime} based on this time with the requested second, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the second value is invalid</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});