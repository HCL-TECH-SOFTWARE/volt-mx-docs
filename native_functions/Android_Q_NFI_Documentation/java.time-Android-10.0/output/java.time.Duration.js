Ext.data.JsonP.java_time_Duration({"tagname":"class","name":"java.time.Duration","autodetected":{},"files":[{"filename":"Duration.js","href":"Duration.html#java-time-Duration"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"ZERO","tagname":"property","owner":"java.time.Duration","id":"property-ZERO","meta":{}},{"name":"abs","tagname":"method","owner":"java.time.Duration","id":"method-abs","meta":{}},{"name":"addTo","tagname":"method","owner":"java.time.Duration","id":"method-addTo","meta":{}},{"name":"between","tagname":"method","owner":"java.time.Duration","id":"method-between","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.time.Duration","id":"method-compareTo","meta":{}},{"name":"dividedBy","tagname":"method","owner":"java.time.Duration","id":"method-dividedBy","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.Duration","id":"method-equals","meta":{}},{"name":"from","tagname":"method","owner":"java.time.Duration","id":"method-from","meta":{}},{"name":"get","tagname":"method","owner":"java.time.Duration","id":"method-get","meta":{}},{"name":"getNano","tagname":"method","owner":"java.time.Duration","id":"method-getNano","meta":{}},{"name":"getSeconds","tagname":"method","owner":"java.time.Duration","id":"method-getSeconds","meta":{}},{"name":"getUnits","tagname":"method","owner":"java.time.Duration","id":"method-getUnits","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.Duration","id":"method-hashCode","meta":{}},{"name":"isNegative","tagname":"method","owner":"java.time.Duration","id":"method-isNegative","meta":{}},{"name":"isZero","tagname":"method","owner":"java.time.Duration","id":"method-isZero","meta":{}},{"name":"minus","tagname":"method","owner":"java.time.Duration","id":"method-minus","meta":{}},{"name":"minusDays","tagname":"method","owner":"java.time.Duration","id":"method-minusDays","meta":{}},{"name":"minusHours","tagname":"method","owner":"java.time.Duration","id":"method-minusHours","meta":{}},{"name":"minusMillis","tagname":"method","owner":"java.time.Duration","id":"method-minusMillis","meta":{}},{"name":"minusMinutes","tagname":"method","owner":"java.time.Duration","id":"method-minusMinutes","meta":{}},{"name":"minusNanos","tagname":"method","owner":"java.time.Duration","id":"method-minusNanos","meta":{}},{"name":"minusSeconds","tagname":"method","owner":"java.time.Duration","id":"method-minusSeconds","meta":{}},{"name":"multipliedBy","tagname":"method","owner":"java.time.Duration","id":"method-multipliedBy","meta":{}},{"name":"negated","tagname":"method","owner":"java.time.Duration","id":"method-negated","meta":{}},{"name":"of","tagname":"method","owner":"java.time.Duration","id":"method-of","meta":{}},{"name":"ofDays","tagname":"method","owner":"java.time.Duration","id":"method-ofDays","meta":{}},{"name":"ofHours","tagname":"method","owner":"java.time.Duration","id":"method-ofHours","meta":{}},{"name":"ofMillis","tagname":"method","owner":"java.time.Duration","id":"method-ofMillis","meta":{}},{"name":"ofMinutes","tagname":"method","owner":"java.time.Duration","id":"method-ofMinutes","meta":{}},{"name":"ofNanos","tagname":"method","owner":"java.time.Duration","id":"method-ofNanos","meta":{}},{"name":"ofSeconds","tagname":"method","owner":"java.time.Duration","id":"method-ofSeconds","meta":{}},{"name":"parse","tagname":"method","owner":"java.time.Duration","id":"method-parse","meta":{}},{"name":"plus","tagname":"method","owner":"java.time.Duration","id":"method-plus","meta":{}},{"name":"plusDays","tagname":"method","owner":"java.time.Duration","id":"method-plusDays","meta":{}},{"name":"plusHours","tagname":"method","owner":"java.time.Duration","id":"method-plusHours","meta":{}},{"name":"plusMillis","tagname":"method","owner":"java.time.Duration","id":"method-plusMillis","meta":{}},{"name":"plusMinutes","tagname":"method","owner":"java.time.Duration","id":"method-plusMinutes","meta":{}},{"name":"plusNanos","tagname":"method","owner":"java.time.Duration","id":"method-plusNanos","meta":{}},{"name":"plusSeconds","tagname":"method","owner":"java.time.Duration","id":"method-plusSeconds","meta":{}},{"name":"subtractFrom","tagname":"method","owner":"java.time.Duration","id":"method-subtractFrom","meta":{}},{"name":"toDays","tagname":"method","owner":"java.time.Duration","id":"method-toDays","meta":{}},{"name":"toHours","tagname":"method","owner":"java.time.Duration","id":"method-toHours","meta":{}},{"name":"toMillis","tagname":"method","owner":"java.time.Duration","id":"method-toMillis","meta":{}},{"name":"toMinutes","tagname":"method","owner":"java.time.Duration","id":"method-toMinutes","meta":{}},{"name":"toNanos","tagname":"method","owner":"java.time.Duration","id":"method-toNanos","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.Duration","id":"method-toString","meta":{}},{"name":"withNanos","tagname":"method","owner":"java.time.Duration","id":"method-withNanos","meta":{}},{"name":"withSeconds","tagname":"method","owner":"java.time.Duration","id":"method-withSeconds","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.Duration","short_doc":"implements java.time.temporal.TemporalAmount\n\n implements java.lang.Comparable\n\n implements java.io.Serializable\n\nA t...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.Duration</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Duration.html#java-time-Duration' target='_blank'>Duration.js</a></div></pre><div class='doc-contents'><p>implements java.time.temporal.TemporalAmount</p>\n\n<p> implements java.lang.Comparable</p>\n\n<p> implements java.io.Serializable</p>\n\n<p>A time-based amount of time, such as '34.5 seconds'.\n <p>\n This class models a quantity or amount of time in terms of seconds and nanoseconds.\n It can be accessed using other duration-based units, such as minutes and hours.\n In addition, the DAYS unit can be used and is treated as\n exactly equal to 24 hours, thus ignoring daylight savings effects.\n See <a href=\"#!/api/java.time.Period\" rel=\"java.time.Period\" class=\"docClass\">java.time.Period</a> for the date-based equivalent to this class.\n <p>\n A physical duration could be of infinite length.\n For practicality, the duration is stored with constraints similar to <a href=\"#!/api/java.time.Instant\" rel=\"java.time.Instant\" class=\"docClass\">java.time.Instant</a>.\n The duration uses nanosecond resolution with a maximum value of the seconds that can\n be held in a {@code long}. This is greater than the current estimated age of the universe.\n <p>\n The range of a duration requires the storage of a number larger than a {@code long}.\n To achieve this, the class stores a {@code long} representing seconds and an {@code int}\n representing nanosecond-of-second, which will always be between 0 and 999,999,999.\n The model is of a directed duration, meaning that the duration may be negative.\n <p>\n The duration is measured in \"seconds\", but these are not necessarily identical to\n the scientific \"SI second\" definition based on atomic clocks.\n This difference only impacts durations measured near a leap-second and should not affect\n most applications.\n See <a href=\"#!/api/java.time.Instant\" rel=\"java.time.Instant\" class=\"docClass\">java.time.Instant</a> for a discussion as to the meaning of the second and time-scales.</p>\n\n<p> @implSpec\n This class is immutable and thread-safe.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ZERO' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-property-ZERO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-property-ZERO' class='name expandable'>ZERO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Constant for a duration of zero. ...</div><div class='long'><p>Constant for a duration of zero.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-abs' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-abs' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-abs' class='name expandable'>abs</a>( <span class='pre'></span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with a positive length. ...</div><div class='long'><p>Returns a copy of this duration with a positive length.\n <p>\n This method returns a positive duration by effectively removing the sign from any negative total length.\n For example, {@code PT-1.3S} will be returned as {@code PT1.3S}.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with an absolute length, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-addTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-addTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-addTo' class='name expandable'>addTo</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds this duration to the specified temporal object. ...</div><div class='long'><p>Adds this duration to the specified temporal object.\n <p>\n This returns a temporal object of the same observable type as the input\n with this duration added.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.plus(TemporalAmount).</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   dateTime = thisDuration.addTo(dateTime);\n   dateTime = dateTime.plus(thisDuration);\n </pre>\n\n\n<p> <p>\n The calculation will add the seconds, then nanos.\n Only non-zero amounts will be added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the temporal object to adjust, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>an object of the same type with the adjustment made, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to add</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-between' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-between' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-between' class='name expandable'>between</a>( <span class='pre'>startInclusive, endExclusive</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing the duration between two temporal objects. ...</div><div class='long'><p>Obtains a {@code Duration} representing the duration between two temporal objects.\n <p>\n This calculates the duration between two temporal objects. If the objects\n are of different types, then the duration is calculated based on the type\n of the first object. For example, if the first argument is a {@code LocalTime}\n then the second argument is converted to a {@code LocalTime}.\n <p>\n The specified temporal objects must support the SECONDS unit.\n For full accuracy, either the NANOS unit or the\n NANO_OF_SECOND field should be supported.\n <p>\n The result of this method can be a negative period if the end is before the start.\n To guarantee to obtain a positive duration call <a href=\"#!/api/java.time.Duration-method-abs\" rel=\"java.time.Duration-method-abs\" class=\"docClass\">abs</a>() on the result.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>startInclusive</span> : Object {Temporal}<div class='sub-desc'><p>the start instant, inclusive, not null</p>\n</div></li><li><span class='pre'>endExclusive</span> : Object {Temporal}<div class='sub-desc'><p>the end instant, exclusive, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the seconds between the temporals cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if the calculation exceeds the capacity of {@code Duration}</p>\n</div></li></ul></div></div></div><div id='method-compareTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>otherDuration</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this duration to the specified {@code Duration}. ...</div><div class='long'><p>Compares this duration to the specified {@code Duration}.\n <p>\n The comparison is based on the total length of the durations.\n It is \"consistent with equals\", as defined by Comparable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>otherDuration</span> : Object {Duration}<div class='sub-desc'><p>the other duration to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul></div></div></div><div id='method-dividedBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-dividedBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-dividedBy' class='name expandable'>dividedBy</a>( <span class='pre'>divisor</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration divided by the specified value. ...</div><div class='long'><p>Returns a copy of this duration divided by the specified value.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>divisor</span> : Number<div class='sub-desc'><p>the value to divide the duration by, positive or negative, not zero</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration divided by the specified divisor, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if the divisor is zero or if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-equals' class='name expandable'>equals</a>( <span class='pre'>otherDuration</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this duration is equal to the specified {@code Duration}. ...</div><div class='long'><p>Checks if this duration is equal to the specified {@code Duration}.\n <p>\n The comparison is based on the total length of the durations.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>otherDuration</span> : Object {Object}<div class='sub-desc'><p>the other duration, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the other duration is equal to this one</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-from' class='name expandable'>from</a>( <span class='pre'>amount</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code Duration} from a temporal amount. ...</div><div class='long'><p>Obtains an instance of {@code Duration} from a temporal amount.\n <p>\n This obtains a duration based on the specified amount.\n A {@code TemporalAmount} represents an  amount of time, which may be\n date-based or time-based, which this factory extracts to a duration.\n <p>\n The conversion loops around the set of units from the amount and uses\n the {@linkplain TemporalUnit#getDuration() duration} of the unit to\n calculate the total {@code Duration}.\n Only a subset of units are accepted by this method. The unit must either\n have an {@linkplain TemporalUnit#isDurationEstimated() exact duration}\n or be ChronoUnit.DAYS which is treated as 24 hours.\n If any other units are found then an exception is thrown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amount</span> : Object {TemporalAmount}<div class='sub-desc'><p>the temporal amount to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>the equivalent duration, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to a {@code Duration}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-get' class='name expandable'>get</a>( <span class='pre'>unit</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the requested unit. ...</div><div class='long'><p>Gets the value of the requested unit.\n <p>\n This returns a value for each of the two supported units,\n SECONDS and NANOS.\n All other units throw an exception.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the {@code TemporalUnit} for which to return the value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the long value of the unit</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li></ul></div></div></div><div id='method-getNano' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-getNano' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-getNano' class='name expandable'>getNano</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the number of nanoseconds within the second in this duration. ...</div><div class='long'><p>Gets the number of nanoseconds within the second in this duration.\n <p>\n The length of the duration is stored using two fields - seconds and nanoseconds.\n The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to\n the length in seconds.\n The total duration is defined by calling this method and <a href=\"#!/api/java.time.Duration-method-getSeconds\" rel=\"java.time.Duration-method-getSeconds\" class=\"docClass\">getSeconds</a>().\n <p>\n A {@code Duration} represents a directed distance between two points on the time-line.\n A negative duration is expressed by the negative sign of the seconds part.\n A duration of -1 nanosecond is stored as -1 seconds plus 999,999,999 nanoseconds.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the nanoseconds within the second part of the length of the duration, from 0 to 999,999,999</p>\n</div></li></ul></div></div></div><div id='method-getSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-getSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-getSeconds' class='name expandable'>getSeconds</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the number of seconds in this duration. ...</div><div class='long'><p>Gets the number of seconds in this duration.\n <p>\n The length of the duration is stored using two fields - seconds and nanoseconds.\n The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to\n the length in seconds.\n The total duration is defined by calling this method and <a href=\"#!/api/java.time.Duration-method-getNano\" rel=\"java.time.Duration-method-getNano\" class=\"docClass\">getNano</a>().\n <p>\n A {@code Duration} represents a directed distance between two points on the time-line.\n A negative duration is expressed by the negative sign of the seconds part.\n A duration of -1 nanosecond is stored as -1 seconds plus 999,999,999 nanoseconds.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the whole seconds part of the length of the duration, positive or negative</p>\n</div></li></ul></div></div></div><div id='method-getUnits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-getUnits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-getUnits' class='name expandable'>getUnits</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the set of units supported by this duration. ...</div><div class='long'><p>Gets the set of units supported by this duration.\n <p>\n The supported units are SECONDS,\n and NANOS.\n They are returned in the order seconds, nanos.\n <p>\n This set can be used in conjunction with <a href=\"#!/api/java.time.Duration-method-get\" rel=\"java.time.Duration-method-get\" class=\"docClass\">get</a>(TemporalUnit)\n to access the entire state of the duration.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a list containing the seconds and nanos units, not null</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this duration. ...</div><div class='long'><p>A hash code for this duration.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isNegative' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-isNegative' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-isNegative' class='name expandable'>isNegative</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this duration is negative, excluding zero. ...</div><div class='long'><p>Checks if this duration is negative, excluding zero.\n <p>\n A {@code Duration} represents a directed distance between two points on\n the time-line and can therefore be positive, zero or negative.\n This method checks whether the length is less than zero.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this duration has a total length less than zero</p>\n</div></li></ul></div></div></div><div id='method-isZero' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-isZero' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-isZero' class='name expandable'>isZero</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this duration is zero length. ...</div><div class='long'><p>Checks if this duration is zero length.\n <p>\n A {@code Duration} represents a directed distance between two points on\n the time-line and can therefore be positive, zero or negative.\n This method checks whether the length is zero.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this duration has a total length equal to zero</p>\n</div></li></ul></div></div></div><div id='method-minus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-minus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-minus' class='name expandable'>minus</a>( <span class='pre'>amountToSubtract, unit</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration subtracted. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration subtracted.\n <p>\n The duration amount is measured in terms of the specified unit.\n Only a subset of units are accepted by this method.\n The unit must either have an {@linkplain TemporalUnit#isDurationEstimated() exact duration} or\n be ChronoUnit.DAYS which is treated as 24 hours. Other units throw an exception.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToSubtract</span> : Number<div class='sub-desc'><p>the amount to subtract, measured in terms of the unit, positive or negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit that the amount is measured in, must have an exact duration, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified duration subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-minusDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-minusDays' class='name expandable'>minusDays</a>( <span class='pre'>daysToSubtract</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in standard 24 hour days subtracted. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in standard 24 hour days subtracted.\n <p>\n The number of days is multiplied by 86400 to obtain the number of seconds to subtract.\n This is based on the standard definition of a day as 24 hours.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>daysToSubtract</span> : Number<div class='sub-desc'><p>the days to subtract, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified days subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-minusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-minusHours' class='name expandable'>minusHours</a>( <span class='pre'>hoursToSubtract</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in hours subtracted. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in hours subtracted.\n <p>\n The number of hours is multiplied by 3600 to obtain the number of seconds to subtract.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hoursToSubtract</span> : Number<div class='sub-desc'><p>the hours to subtract, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified hours subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusMillis' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-minusMillis' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-minusMillis' class='name expandable'>minusMillis</a>( <span class='pre'>millisToSubtract</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in milliseconds subtracted. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in milliseconds subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>millisToSubtract</span> : Number<div class='sub-desc'><p>the milliseconds to subtract, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified milliseconds subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-minusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-minusMinutes' class='name expandable'>minusMinutes</a>( <span class='pre'>minutesToSubtract</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in minutes subtracted. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in minutes subtracted.\n <p>\n The number of hours is multiplied by 60 to obtain the number of seconds to subtract.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutesToSubtract</span> : Number<div class='sub-desc'><p>the minutes to subtract, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified minutes subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-minusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-minusNanos' class='name expandable'>minusNanos</a>( <span class='pre'>nanosToSubtract</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in nanoseconds subtracted. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in nanoseconds subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanosToSubtract</span> : Number<div class='sub-desc'><p>the nanoseconds to subtract, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified nanoseconds subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-minusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-minusSeconds' class='name expandable'>minusSeconds</a>( <span class='pre'>secondsToSubtract</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in seconds subtracted. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in seconds subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>secondsToSubtract</span> : Number<div class='sub-desc'><p>the seconds to subtract, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified seconds subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-multipliedBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-multipliedBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-multipliedBy' class='name expandable'>multipliedBy</a>( <span class='pre'>multiplicand</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration multiplied by the scalar. ...</div><div class='long'><p>Returns a copy of this duration multiplied by the scalar.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>multiplicand</span> : Number<div class='sub-desc'><p>the value to multiply the duration by, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration multiplied by the specified scalar, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-negated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-negated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-negated' class='name expandable'>negated</a>( <span class='pre'></span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the length negated. ...</div><div class='long'><p>Returns a copy of this duration with the length negated.\n <p>\n This method swaps the sign of the total length of this duration.\n For example, {@code PT1.3S} will be returned as {@code PT-1.3S}.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the amount negated, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-of' class='name expandable'>of</a>( <span class='pre'>amount, unit</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing an amount in the specified unit. ...</div><div class='long'><p>Obtains a {@code Duration} representing an amount in the specified unit.\n <p>\n The parameters represent the two parts of a phrase like '6 Hours'. For example:</p>\n\n<pre>  Duration.of(3, SECONDS);\n  Duration.of(465, HOURS);\n </pre>\n\n\n<p> Only a subset of units are accepted by this method.\n The unit must either have an {@linkplain TemporalUnit#isDurationEstimated() exact duration} or\n be ChronoUnit.DAYS which is treated as 24 hours. Other units throw an exception.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amount</span> : Number<div class='sub-desc'><p>the amount of the duration, measured in terms of the unit, positive or negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit that the duration is measured in, must have an exact duration, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the period unit has an estimated duration</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if a numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-ofDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-ofDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-ofDays' class='name expandable'>ofDays</a>( <span class='pre'>days</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing a number of standard 24 hour days. ...</div><div class='long'><p>Obtains a {@code Duration} representing a number of standard 24 hour days.\n <p>\n The seconds are calculated based on the standard definition of a day,\n where each day is 86400 seconds which implies a 24 hour day.\n The nanosecond in second field is set to zero.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>days</span> : Number<div class='sub-desc'><p>the number of days, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if the input days exceeds the capacity of {@code Duration}</p>\n</div></li></ul></div></div></div><div id='method-ofHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-ofHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-ofHours' class='name expandable'>ofHours</a>( <span class='pre'>hours</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing a number of standard hours. ...</div><div class='long'><p>Obtains a {@code Duration} representing a number of standard hours.\n <p>\n The seconds are calculated based on the standard definition of an hour,\n where each hour is 3600 seconds.\n The nanosecond in second field is set to zero.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hours</span> : Number<div class='sub-desc'><p>the number of hours, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if the input hours exceeds the capacity of {@code Duration}</p>\n</div></li></ul></div></div></div><div id='method-ofMillis' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-ofMillis' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-ofMillis' class='name expandable'>ofMillis</a>( <span class='pre'>millis</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing a number of milliseconds. ...</div><div class='long'><p>Obtains a {@code Duration} representing a number of milliseconds.\n <p>\n The seconds and nanoseconds are extracted from the specified milliseconds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>millis</span> : Number<div class='sub-desc'><p>the number of milliseconds, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul></div></div></div><div id='method-ofMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-ofMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-ofMinutes' class='name expandable'>ofMinutes</a>( <span class='pre'>minutes</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing a number of standard minutes. ...</div><div class='long'><p>Obtains a {@code Duration} representing a number of standard minutes.\n <p>\n The seconds are calculated based on the standard definition of a minute,\n where each minute is 60 seconds.\n The nanosecond in second field is set to zero.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutes</span> : Number<div class='sub-desc'><p>the number of minutes, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if the input minutes exceeds the capacity of {@code Duration}</p>\n</div></li></ul></div></div></div><div id='method-ofNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-ofNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-ofNanos' class='name expandable'>ofNanos</a>( <span class='pre'>nanos</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing a number of nanoseconds. ...</div><div class='long'><p>Obtains a {@code Duration} representing a number of nanoseconds.\n <p>\n The seconds and nanoseconds are extracted from the specified nanoseconds.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanos</span> : Number<div class='sub-desc'><p>the number of nanoseconds, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul></div></div></div><div id='method-ofSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-ofSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-ofSeconds' class='name expandable'>ofSeconds</a>( <span class='pre'>seconds, nanoAdjustment</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} representing a number of seconds and an\n adjustment in nanoseconds. ...</div><div class='long'><p>Obtains a {@code Duration} representing a number of seconds and an\n adjustment in nanoseconds.\n <p>\n This method allows an arbitrary number of nanoseconds to be passed in.\n The factory will alter the values of the second and nanosecond in order\n to ensure that the stored nanosecond is in the range 0 to 999,999,999.\n For example, the following will result in the exactly the same duration:</p>\n\n<pre>  Duration.ofSeconds(3, 1);\n  Duration.ofSeconds(4, -999_999_999);\n  Duration.ofSeconds(2, 1000_000_001);\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seconds</span> : Number<div class='sub-desc'><p>the number of seconds, positive or negative</p>\n</div></li><li><span class='pre'>nanoAdjustment</span> : Number<div class='sub-desc'><p>the nanosecond adjustment to the number of seconds, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration}, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if the adjustment causes the seconds to exceed the capacity of {@code Duration}</p>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-parse' class='name expandable'>parse</a>( <span class='pre'>text</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains a {@code Duration} from a text string such as {@code PnDTnHnMn.nS}. ...</div><div class='long'><p>Obtains a {@code Duration} from a text string such as {@code PnDTnHnMn.nS}.\n <p>\n This will parse a textual representation of a duration, including the\n string produced by {@code toString()}. The formats accepted are based\n on the ISO-8601 duration format {@code PnDTnHnMn.nS} with days\n considered to be exactly 24 hours.\n <p>\n The string starts with an optional sign, denoted by the ASCII negative\n or positive symbol. If negative, the whole period is negated.\n The ASCII letter \"P\" is next in upper or lower case.\n There are then four sections, each consisting of a number and a suffix.\n The sections have suffixes in ASCII of \"D\", \"H\", \"M\" and \"S\" for\n days, hours, minutes and seconds, accepted in upper or lower case.\n The suffixes must occur in order. The ASCII letter \"T\" must occur before\n the first occurrence, if any, of an hour, minute or second section.\n At least one of the four sections must be present, and if \"T\" is present\n there must be at least one section after the \"T\".\n The number part of each section must consist of one or more ASCII digits.\n The number may be prefixed by the ASCII negative or positive symbol.\n The number of days, hours and minutes must parse to an {@code long}.\n The number of seconds must parse to an {@code long} with optional fraction.\n The decimal point may be either a dot or a comma.\n The fractional part may have from zero to 9 digits.\n <p>\n The leading plus/minus sign, and negative values for other units are\n not part of the ISO-8601 standard.\n <p>\n Examples:</p>\n\n<pre>    \"PT20.345S\" -- parses as \"20.345 seconds\"\n    \"PT15M\"     -- parses as \"15 minutes\" (where a minute is 60 seconds)\n    \"PT10H\"     -- parses as \"10 hours\" (where an hour is 3600 seconds)\n    \"P2D\"       -- parses as \"2 days\" (where a day is 24 hours or 86400 seconds)\n    \"P2DT3H4M\"  -- parses as \"2 days, 3 hours and 4 minutes\"\n    \"P-6H3M\"    -- parses as \"-6 hours and +3 minutes\"\n    \"-P6H3M\"    -- parses as \"-6 hours and -3 minutes\"\n    \"-P-6H+3M\"  -- parses as \"+6 hours and -3 minutes\"\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the text to parse, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>the parsed duration, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeParseException if the text cannot be parsed to a duration</p>\n</div></li></ul></div></div></div><div id='method-plus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-plus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-plus' class='name expandable'>plus</a>( <span class='pre'>amountToAdd, unit</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration added. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration added.\n <p>\n The duration amount is measured in terms of the specified unit.\n Only a subset of units are accepted by this method.\n The unit must either have an {@linkplain TemporalUnit#isDurationEstimated() exact duration} or\n be ChronoUnit.DAYS which is treated as 24 hours. Other units throw an exception.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToAdd</span> : Number<div class='sub-desc'><p>the amount to add, measured in terms of the unit, positive or negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit that the amount is measured in, must have an exact duration, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified duration added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-plusDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-plusDays' class='name expandable'>plusDays</a>( <span class='pre'>daysToAdd</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in standard 24 hour days added. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in standard 24 hour days added.\n <p>\n The number of days is multiplied by 86400 to obtain the number of seconds to add.\n This is based on the standard definition of a day as 24 hours.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>daysToAdd</span> : Number<div class='sub-desc'><p>the days to add, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified days added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-plusHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-plusHours' class='name expandable'>plusHours</a>( <span class='pre'>hoursToAdd</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in hours added. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in hours added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>hoursToAdd</span> : Number<div class='sub-desc'><p>the hours to add, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified hours added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusMillis' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-plusMillis' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-plusMillis' class='name expandable'>plusMillis</a>( <span class='pre'>millisToAdd</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in milliseconds added. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in milliseconds added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>millisToAdd</span> : Number<div class='sub-desc'><p>the milliseconds to add, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified milliseconds added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-plusMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-plusMinutes' class='name expandable'>plusMinutes</a>( <span class='pre'>minutesToAdd</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in minutes added. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in minutes added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>minutesToAdd</span> : Number<div class='sub-desc'><p>the minutes to add, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified minutes added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-plusNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-plusNanos' class='name expandable'>plusNanos</a>( <span class='pre'>nanosToAdd</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in nanoseconds added. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in nanoseconds added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanosToAdd</span> : Number<div class='sub-desc'><p>the nanoseconds to add, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified nanoseconds added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-plusSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-plusSeconds' class='name expandable'>plusSeconds</a>( <span class='pre'>secondsToAdd</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified duration in seconds added. ...</div><div class='long'><p>Returns a copy of this duration with the specified duration in seconds added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>secondsToAdd</span> : Number<div class='sub-desc'><p>the seconds to add, positive or negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this duration with the specified seconds added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-subtractFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-subtractFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-subtractFrom' class='name expandable'>subtractFrom</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Subtracts this duration from the specified temporal object. ...</div><div class='long'><p>Subtracts this duration from the specified temporal object.\n <p>\n This returns a temporal object of the same observable type as the input\n with this duration subtracted.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.minus(TemporalAmount).</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   dateTime = thisDuration.subtractFrom(dateTime);\n   dateTime = dateTime.minus(thisDuration);\n </pre>\n\n\n<p> <p>\n The calculation will subtract the seconds, then nanos.\n Only non-zero amounts will be added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the temporal object to adjust, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>an object of the same type with the adjustment made, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to subtract</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-toDays' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-toDays' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-toDays' class='name expandable'>toDays</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the number of days in this duration. ...</div><div class='long'><p>Gets the number of days in this duration.\n <p>\n This returns the total number of days in the duration by dividing the\n number of seconds by 86400.\n This is based on the standard definition of a day as 24 hours.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of days in the duration, may be negative</p>\n</div></li></ul></div></div></div><div id='method-toHours' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-toHours' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-toHours' class='name expandable'>toHours</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the number of hours in this duration. ...</div><div class='long'><p>Gets the number of hours in this duration.\n <p>\n This returns the total number of hours in the duration by dividing the\n number of seconds by 3600.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of hours in the duration, may be negative</p>\n</div></li></ul></div></div></div><div id='method-toMillis' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-toMillis' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-toMillis' class='name expandable'>toMillis</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this duration to the total length in milliseconds. ...</div><div class='long'><p>Converts this duration to the total length in milliseconds.\n <p>\n If this duration is too large to fit in a {@code long} milliseconds, then an\n exception is thrown.\n <p>\n If this duration has greater than millisecond precision, then the conversion\n will drop any excess precision information as though the amount in nanoseconds\n was subject to integer division by one million.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total length of the duration in milliseconds</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-toMinutes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-toMinutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-toMinutes' class='name expandable'>toMinutes</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the number of minutes in this duration. ...</div><div class='long'><p>Gets the number of minutes in this duration.\n <p>\n This returns the total number of minutes in the duration by dividing the\n number of seconds by 60.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the number of minutes in the duration, may be negative</p>\n</div></li></ul></div></div></div><div id='method-toNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-toNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-toNanos' class='name expandable'>toNanos</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Converts this duration to the total length in nanoseconds expressed as a {@code long}. ...</div><div class='long'><p>Converts this duration to the total length in nanoseconds expressed as a {@code long}.\n <p>\n If this duration is too large to fit in a {@code long} nanoseconds, then an\n exception is thrown.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the total length of the duration in nanoseconds</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string representation of this duration using ISO-8601 seconds\n based representation, such as {@code PT8H6M12.345S}. ...</div><div class='long'><p>A string representation of this duration using ISO-8601 seconds\n based representation, such as {@code PT8H6M12.345S}.\n <p>\n The format of the returned string will be {@code PTnHnMnS}, where n is\n the relevant hours, minutes or seconds part of the duration.\n Any fractional seconds are placed after a decimal point i the seconds section.\n If a section has a zero value, it is omitted.\n The hours, minutes and seconds will all have the same sign.\n <p>\n Examples:</p>\n\n<pre>    \"20.345 seconds\"                 -- \"PT20.345S\n    \"15 minutes\" (15 * 60 seconds)   -- \"PT15M\"\n    \"10 hours\" (10 * 3600 seconds)   -- \"PT10H\"\n    \"2 days\" (2 * 86400 seconds)     -- \"PT48H\"\n </pre>\n\n\n<p> Note that multiples of 24 hours are not output as days to avoid confusion\n with {@code Period}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>an ISO-8601 representation of this duration, not null</p>\n</div></li></ul></div></div></div><div id='method-withNanos' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-withNanos' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-withNanos' class='name expandable'>withNanos</a>( <span class='pre'>nanoOfSecond</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified nano-of-second. ...</div><div class='long'><p>Returns a copy of this duration with the specified nano-of-second.\n <p>\n This returns a duration with the specified nano-of-second, retaining the\n seconds part of this duration.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>nanoOfSecond</span> : Number<div class='sub-desc'><p>the nano-of-second to represent, from 0 to 999,999,999</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this period with the requested nano-of-second, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the nano-of-second is invalid</p>\n</div></li></ul></div></div></div><div id='method-withSeconds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.Duration'>java.time.Duration</span><br/><a href='source/Duration.html#java-time-Duration-method-withSeconds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.Duration-method-withSeconds' class='name expandable'>withSeconds</a>( <span class='pre'>seconds</span> ) : Object {java.time.Duration}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this duration with the specified amount of seconds. ...</div><div class='long'><p>Returns a copy of this duration with the specified amount of seconds.\n <p>\n This returns a duration with the specified seconds, retaining the\n nano-of-second part of this duration.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>seconds</span> : Number<div class='sub-desc'><p>the seconds to represent, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Duration}</span><div class='sub-desc'><p>a {@code Duration} based on this period with the requested seconds, not null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});