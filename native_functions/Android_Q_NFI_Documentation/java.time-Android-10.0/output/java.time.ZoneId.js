Ext.data.JsonP.java_time_ZoneId({"tagname":"class","name":"java.time.ZoneId","autodetected":{},"files":[{"filename":"ZoneId.js","href":"ZoneId.html#java-time-ZoneId"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"SHORT_IDS","tagname":"property","owner":"java.time.ZoneId","id":"property-SHORT_IDS","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.ZoneId","id":"method-equals","meta":{}},{"name":"from","tagname":"method","owner":"java.time.ZoneId","id":"method-from","meta":{}},{"name":"getAvailableZoneIds","tagname":"method","owner":"java.time.ZoneId","id":"method-getAvailableZoneIds","meta":{}},{"name":"getDisplayName","tagname":"method","owner":"java.time.ZoneId","id":"method-getDisplayName","meta":{}},{"name":"getId","tagname":"method","owner":"java.time.ZoneId","id":"method-getId","meta":{}},{"name":"getRules","tagname":"method","owner":"java.time.ZoneId","id":"method-getRules","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.ZoneId","id":"method-hashCode","meta":{}},{"name":"normalized","tagname":"method","owner":"java.time.ZoneId","id":"method-normalized","meta":{}},{"name":"of","tagname":"method","owner":"java.time.ZoneId","id":"method-of","meta":{}},{"name":"ofOffset","tagname":"method","owner":"java.time.ZoneId","id":"method-ofOffset","meta":{}},{"name":"systemDefault","tagname":"method","owner":"java.time.ZoneId","id":"method-systemDefault","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.ZoneId","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.ZoneId","short_doc":"implements java.io.Serializable\n\nA time-zone ID, such as {@code Europe/Paris}. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["java.time.ZoneOffset"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.ZoneId</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.time.ZoneOffset' rel='java.time.ZoneOffset' class='docClass'>java.time.ZoneOffset</a></div><h4>Files</h4><div class='dependency'><a href='source/ZoneId.html#java-time-ZoneId' target='_blank'>ZoneId.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p>A time-zone ID, such as {@code Europe/Paris}.\n <p>\n A {@code ZoneId} is used to identify the rules used to convert between\n an <a href=\"#!/api/java.time.Instant\" rel=\"java.time.Instant\" class=\"docClass\">java.time.Instant</a> and a <a href=\"#!/api/java.time.LocalDateTime\" rel=\"java.time.LocalDateTime\" class=\"docClass\">java.time.LocalDateTime</a>.\n There are two distinct types of ID:\n <ul>\n <li>Fixed offsets - a fully resolved offset from UTC/Greenwich, that uses\n  the same offset for all local date-times\n <li>Geographical regions - an area where a specific set of rules for finding\n  the offset from UTC/Greenwich apply\n </li></li></ul>\n Most fixed offsets are represented by <a href=\"#!/api/java.time.ZoneOffset\" rel=\"java.time.ZoneOffset\" class=\"docClass\">java.time.ZoneOffset</a>.\n Calling <a href=\"#!/api/java.time.ZoneId-method-normalized\" rel=\"java.time.ZoneId-method-normalized\" class=\"docClass\">normalized</a>() on any {@code ZoneId} will ensure that a\n fixed offset ID will be represented as a {@code ZoneOffset}.\n <p>\n The actual rules, describing when and how the offset changes, are defined by ZoneRules.\n This class is simply an ID used to obtain the underlying rules.\n This approach is taken because rules are defined by governments and change\n frequently, whereas the ID is stable.\n <p>\n The distinction has other effects. Serializing the {@code ZoneId} will only send\n the ID, whereas serializing the rules sends the entire data set.\n Similarly, a comparison of two IDs only examines the ID, whereas\n a comparison of two rules examines the entire data set.</p>\n\n<p> <h3>Time-zone IDs</h3>\n The ID is unique within the system.\n There are three types of ID.\n <p>\n The simplest type of ID is that from {@code ZoneOffset}.\n This consists of 'Z' and IDs starting with '+' or '-'.\n <p>\n The next type of ID are offset-style IDs with some form of prefix,\n such as 'GMT+2' or 'UTC+01:00'.\n The recognised prefixes are 'UTC', 'GMT' and 'UT'.\n The offset is the suffix and will be normalized during creation.\n These IDs can be normalized to a {@code ZoneOffset} using {@code normalized()}.\n <p>\n The third type of ID are region-based IDs. A region-based ID must be of\n two or more characters, and not start with 'UTC', 'GMT', 'UT' '+' or '-'.\n Region-based IDs are defined by configuration.\n The configuration focuses on providing the lookup from the ID to the\n underlying {@code ZoneRules}.\n <p>\n Time-zone rules are defined by governments and change frequently.\n There are a number of organizations, known here as groups, that monitor\n time-zone changes and collate them.\n The default group is the IANA Time Zone Database (TZDB).\n Other organizations include IATA (the airline industry body) and Microsoft.\n <p>\n Each group defines its own format for the region ID it provides.\n The TZDB group defines IDs such as 'Europe/London' or 'America/New_York'.\n TZDB IDs take precedence over other groups.\n <p>\n It is strongly recommended that the group name is included in all IDs supplied by\n groups other than TZDB to avoid conflicts. For example, IATA airline time-zone\n region IDs are typically the same as the three letter airport code.\n However, the airport of Utrecht has the code 'UTC', which is obviously a conflict.\n The recommended format for region IDs from groups other than TZDB is 'group~region'.\n Thus if IATA data were defined, Utrecht airport would be 'IATA~UTC'.</p>\n\n<p> <h3>Serialization</h3>\n This class can be serialized and stores the string zone ID in the external form.\n The {@code ZoneOffset} subclass uses a dedicated format that only stores the\n offset from UTC/Greenwich.\n <p>\n A {@code ZoneId} can be deserialized in a Java Runtime where the ID is unknown.\n For example, if a server-side Java Runtime has been updated with a new zone ID, but\n the client-side Java Runtime has not been updated. In this case, the {@code ZoneId}\n object will exist, and can be queried using {@code getId}, {@code equals},\n {@code hashCode}, {@code toString}, {@code getDisplayName} and {@code normalized}.\n However, any call to {@code getRules} will fail with {@code ZoneRulesException}.\n This approach is designed to allow a <a href=\"#!/api/java.time.ZonedDateTime\" rel=\"java.time.ZonedDateTime\" class=\"docClass\">java.time.ZonedDateTime</a> to be loaded and\n queried, but not modified, on a Java Runtime with incomplete time-zone information.</p>\n\n<p> @implSpec\n This abstract class has two implementations, both of which are immutable and thread-safe.\n One implementation models region-based IDs, the other is {@code ZoneOffset} modelling\n offset-based IDs. This difference is visible in serialization.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-SHORT_IDS' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-property-SHORT_IDS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-property-SHORT_IDS' class='name expandable'>SHORT_IDS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A map of zone overrides to enable the short time-zone names to be used. ...</div><div class='long'><p>A map of zone overrides to enable the short time-zone names to be used.</p>\n\n<p><p>\nUse of short zone IDs has been deprecated in {@code java.util.TimeZone}.\nThis map allows the IDs to continue to be used via the\nMap) factory method.\n<p>\nThis map contains a mapping of the IDs that is in line with TZDB 2005r and\nlater, where 'EST', 'MST' and 'HST' map to IDs which do not include daylight\nsavings.\n<p>\nThis maps as follows:\n<ul>\n<li>EST - -05:00</li>\n<li>HST - -10:00</li>\n<li>MST - -07:00</li>\n<li>ACT - Australia/Darwin</li>\n<li>AET - Australia/Sydney</li>\n<li>AGT - America/Argentina/Buenos_Aires</li>\n<li>ART - Africa/Cairo</li>\n<li>AST - America/Anchorage</li>\n<li>BET - America/Sao_Paulo</li>\n<li>BST - Asia/Dhaka</li>\n<li>CAT - Africa/Harare</li>\n<li>CNT - America/St_Johns</li>\n<li>CST - America/Chicago</li>\n<li>CTT - Asia/Shanghai</li>\n<li>EAT - Africa/Addis_Ababa</li>\n<li>ECT - Europe/Paris</li>\n<li>IET - America/Indiana/Indianapolis</li>\n<li>IST - Asia/Kolkata</li>\n<li>JST - Asia/Tokyo</li>\n<li>MIT - Pacific/Apia</li>\n<li>NET - Asia/Yerevan</li>\n<li>NST - Pacific/Auckland</li>\n<li>PLT - Asia/Karachi</li>\n<li>PNT - America/Phoenix</li>\n<li>PRT - America/Puerto_Rico</li>\n<li>PST - America/Los_Angeles</li>\n<li>SST - Pacific/Guadalcanal</li>\n<li>VST - Asia/Ho_Chi_Minh</li>\n</ul>\nThe map is unmodifiable.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-equals' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this time-zone ID is equal to another time-zone ID. ...</div><div class='long'><p>Checks if this time-zone ID is equal to another time-zone ID.\n <p>\n The comparison is based on the ID.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other time-zone ID</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-from' class='name expandable'>from</a>( <span class='pre'>temporal</span> ) : Object {java.time.ZoneId}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code ZoneId} from a temporal object. ...</div><div class='long'><p>Obtains an instance of {@code ZoneId} from a temporal object.\n <p>\n This obtains a zone based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code ZoneId}.\n <p>\n A {@code TemporalAccessor} represents some form of date and time information.\n This factory converts the arbitrary temporal object to an instance of {@code ZoneId}.\n <p>\n The conversion will try to obtain the zone in a way that favours region-based\n zones over offset-based zones using TemporalQueries.zone().\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code ZoneId::from}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneId}</span><div class='sub-desc'><p>the zone ID, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to a {@code ZoneId}</p>\n</div></li></ul></div></div></div><div id='method-getAvailableZoneIds' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-getAvailableZoneIds' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-getAvailableZoneIds' class='name expandable'>getAvailableZoneIds</a>( <span class='pre'></span> ) : Object {java.util.Set}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the set of available zone IDs. ...</div><div class='long'><p>Gets the set of available zone IDs.\n <p>\n This set includes the string form of all available region-based IDs.\n Offset-based zone IDs are not included in the returned set.\n The ID can be passed to <a href=\"#!/api/java.time.ZoneId-method-of\" rel=\"java.time.ZoneId-method-of\" class=\"docClass\">of</a>(String) to create a {@code ZoneId}.\n <p>\n The set of zone IDs can increase over time, although in a typical application\n the set of IDs is fixed. Each call to this method is thread-safe.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Set}</span><div class='sub-desc'><p>a modifiable copy of the set of zone IDs, not null</p>\n</div></li></ul></div></div></div><div id='method-getDisplayName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-getDisplayName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-getDisplayName' class='name expandable'>getDisplayName</a>( <span class='pre'>style, locale</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the textual representation of the zone, such as 'British Time' or\n '+02:00'. ...</div><div class='long'><p>Gets the textual representation of the zone, such as 'British Time' or\n '+02:00'.\n <p>\n This returns the textual name used to identify the time-zone ID,\n suitable for presentation to the user.\n The parameters control the style of the returned text and the locale.\n <p>\n If no textual mapping is found then the full ID is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>style</span> : Object {TextStyle}<div class='sub-desc'><p>the length of the text required, not null</p>\n</div></li><li><span class='pre'>locale</span> : Object {Locale}<div class='sub-desc'><p>the locale to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the text value of the zone, not null</p>\n</div></li></ul></div></div></div><div id='method-getId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-getId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-getId' class='name expandable'>getId</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the unique time-zone ID. ...</div><div class='long'><p>Gets the unique time-zone ID.\n <p>\n This ID uniquely defines this object.\n The format of an offset based ID is defined by java.time.ZoneOffset.getId().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the time-zone unique ID, not null</p>\n</div></li></ul></div></div></div><div id='method-getRules' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-getRules' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-getRules' class='name expandable'>getRules</a>( <span class='pre'></span> ) : Object {java.time.zone.ZoneRules}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the time-zone rules for this ID allowing calculations to be performed. ...</div><div class='long'><p>Gets the time-zone rules for this ID allowing calculations to be performed.\n <p>\n The rules provide the functionality associated with a time-zone,\n such as finding the offset for a given instant or local date-time.\n <p>\n A time-zone can be invalid if it is deserialized in a Java Runtime which\n does not have the same rules loaded as the Java Runtime that stored it.\n In this case, calling this method will throw a {@code ZoneRulesException}.\n <p>\n <a href=\"#!/api/java.time.ZoneOffset\" rel=\"java.time.ZoneOffset\" class=\"docClass\">java.time.ZoneOffset</a> will always return a set of rules where the offset never changes.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.zone.ZoneRules}</span><div class='sub-desc'><p>the rules, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>ZoneRulesException if no rules are available for this ID</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this time-zone ID. ...</div><div class='long'><p>A hash code for this time-zone ID.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-normalized' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-normalized' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-normalized' class='name expandable'>normalized</a>( <span class='pre'></span> ) : Object {java.time.ZoneId}<span class=\"signature\"></span></div><div class='description'><div class='short'>Normalizes the time-zone ID, returning a {@code ZoneOffset} where possible. ...</div><div class='long'><p>Normalizes the time-zone ID, returning a {@code ZoneOffset} where possible.\n <p>\n The returns a normalized {@code ZoneId} that can be used in place of this ID.\n The result will have {@code ZoneRules} equivalent to those returned by this object,\n however the ID returned by {@code getId()} may be different.\n <p>\n The normalization checks if the rules of this {@code ZoneId} have a fixed offset.\n If they do, then the {@code ZoneOffset} equal to that offset is returned.\n Otherwise {@code this} is returned.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneId}</span><div class='sub-desc'><p>the time-zone unique ID, not null</p>\n</div></li></ul></div></div></div><div id='method-of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-of' class='name expandable'>of</a>( <span class='pre'>zoneId</span> ) : Object {java.time.ZoneId}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code ZoneId} from an ID ensuring that the\n ID is valid and available for use. ...</div><div class='long'><p>Obtains an instance of {@code ZoneId} from an ID ensuring that the\n ID is valid and available for use.\n <p>\n This method parses the ID producing a {@code ZoneId} or {@code ZoneOffset}.\n A {@code ZoneOffset} is returned if the ID is 'Z', or starts with '+' or '-'.\n The result will always be a valid ID for which ZoneRules can be obtained.\n <p>\n Parsing matches the zone ID step by step as follows.\n <ul>\n <li>If the zone ID equals 'Z', the result is {@code ZoneOffset.UTC}.\n <li>If the zone ID consists of a single letter, the zone ID is invalid\n  and {@code DateTimeException} is thrown.\n <li>If the zone ID starts with '+' or '-', the ID is parsed as a\n  {@code ZoneOffset} using java.time.ZoneOffset.of(String).\n <li>If the zone ID equals 'GMT', 'UTC' or 'UT' then the result is a {@code ZoneId}\n  with the same ID and rules equivalent to {@code ZoneOffset.UTC}.\n <li>If the zone ID starts with 'UTC+', 'UTC-', 'GMT+', 'GMT-', 'UT+' or 'UT-'\n  then the ID is a prefixed offset-based ID. The ID is split in two, with\n  a two or three letter prefix and a suffix starting with the sign.\n  The suffix is parsed as a java.time.ZoneOffset.\n  The result will be a {@code ZoneId} with the specified UTC/GMT/UT prefix\n  and the normalized offset ID as per java.time.ZoneOffset.getId().\n  The rules of the returned {@code ZoneId} will be equivalent to the\n  parsed {@code ZoneOffset}.\n <li>All other IDs are parsed as region-based zone IDs. Region IDs must\n  match the regular expression <code>[A-Za-z][A-Za-z0-9~/._+-]+</code>\n  otherwise a {@code DateTimeException} is thrown. If the zone ID is not\n  in the configured set of IDs, {@code ZoneRulesException} is thrown.\n  The detailed format of the region ID depends on the group supplying the data.\n  The default set of data is supplied by the IANA Time Zone Database (TZDB).\n  This has region IDs of the form '{area}/{city}', such as 'Europe/Paris' or 'America/New_York'.\n  This is compatible with most IDs from java.util.TimeZone.\n </li></li></li></li></li></li></ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>zoneId</span> : String<div class='sub-desc'><p>the time-zone ID, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneId}</span><div class='sub-desc'><p>the zone ID, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the zone ID has an invalid format</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ZoneRulesException if the zone ID is a region ID that cannot be found</p>\n</div></li></ul></div></div></div><div id='method-ofOffset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-ofOffset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-ofOffset' class='name expandable'>ofOffset</a>( <span class='pre'>prefix, offset</span> ) : Object {java.time.ZoneId}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code ZoneId} wrapping an offset. ...</div><div class='long'><p>Obtains an instance of {@code ZoneId} wrapping an offset.\n <p>\n If the prefix is \"GMT\", \"UTC\", or \"UT\" a {@code ZoneId}\n with the prefix and the non-zero offset is returned.\n If the prefix is empty {@code \"\"} the {@code ZoneOffset} is returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : String<div class='sub-desc'><p>the time-zone ID, not null</p>\n</div></li><li><span class='pre'>offset</span> : Object {ZoneOffset}<div class='sub-desc'><p>the offset, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneId}</span><div class='sub-desc'><p>the zone ID, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the prefix is not one of\n     \"GMT\", \"UTC\", or \"UT\", or \"\"</p>\n</div></li></ul></div></div></div><div id='method-systemDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-systemDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-systemDefault' class='name expandable'>systemDefault</a>( <span class='pre'></span> ) : Object {java.time.ZoneId}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the system default time-zone. ...</div><div class='long'><p>Gets the system default time-zone.\n <p>\n This queries TimeZone.getDefault() to find the default time-zone\n and converts it to a {@code ZoneId}. If the system default time-zone is changed,\n then the result of this method will also change.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.ZoneId}</span><div class='sub-desc'><p>the zone ID, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the converted zone ID has an invalid format</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ZoneRulesException if the converted zone region ID cannot be found</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.ZoneId'>java.time.ZoneId</span><br/><a href='source/ZoneId.html#java-time-ZoneId-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.ZoneId-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this zone as a {@code String}, using the ID. ...</div><div class='long'><p>Outputs this zone as a {@code String}, using the ID.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this time-zone ID, not null</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});