Ext.data.JsonP.java_time_YearMonth({"tagname":"class","name":"java.time.YearMonth","autodetected":{},"files":[{"filename":"YearMonth.js","href":"YearMonth.html#java-time-YearMonth"}],"extends":"java.lang.Object","since":"1.8","members":[{"name":"adjustInto","tagname":"method","owner":"java.time.YearMonth","id":"method-adjustInto","meta":{}},{"name":"atDay","tagname":"method","owner":"java.time.YearMonth","id":"method-atDay","meta":{}},{"name":"atEndOfMonth","tagname":"method","owner":"java.time.YearMonth","id":"method-atEndOfMonth","meta":{}},{"name":"compareTo","tagname":"method","owner":"java.time.YearMonth","id":"method-compareTo","meta":{}},{"name":"equals","tagname":"method","owner":"java.time.YearMonth","id":"method-equals","meta":{}},{"name":"format","tagname":"method","owner":"java.time.YearMonth","id":"method-format","meta":{}},{"name":"from","tagname":"method","owner":"java.time.YearMonth","id":"method-from","meta":{}},{"name":"get","tagname":"method","owner":"java.time.YearMonth","id":"method-get","meta":{}},{"name":"getLong","tagname":"method","owner":"java.time.YearMonth","id":"method-getLong","meta":{}},{"name":"getMonth","tagname":"method","owner":"java.time.YearMonth","id":"method-getMonth","meta":{}},{"name":"getMonthValue","tagname":"method","owner":"java.time.YearMonth","id":"method-getMonthValue","meta":{}},{"name":"getYear","tagname":"method","owner":"java.time.YearMonth","id":"method-getYear","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.time.YearMonth","id":"method-hashCode","meta":{}},{"name":"isAfter","tagname":"method","owner":"java.time.YearMonth","id":"method-isAfter","meta":{}},{"name":"isBefore","tagname":"method","owner":"java.time.YearMonth","id":"method-isBefore","meta":{}},{"name":"isLeapYear","tagname":"method","owner":"java.time.YearMonth","id":"method-isLeapYear","meta":{}},{"name":"isSupported","tagname":"method","owner":"java.time.YearMonth","id":"method-isSupported","meta":{}},{"name":"isValidDay","tagname":"method","owner":"java.time.YearMonth","id":"method-isValidDay","meta":{}},{"name":"lengthOfMonth","tagname":"method","owner":"java.time.YearMonth","id":"method-lengthOfMonth","meta":{}},{"name":"lengthOfYear","tagname":"method","owner":"java.time.YearMonth","id":"method-lengthOfYear","meta":{}},{"name":"minus","tagname":"method","owner":"java.time.YearMonth","id":"method-minus","meta":{}},{"name":"minusMonths","tagname":"method","owner":"java.time.YearMonth","id":"method-minusMonths","meta":{}},{"name":"minusYears","tagname":"method","owner":"java.time.YearMonth","id":"method-minusYears","meta":{}},{"name":"now","tagname":"method","owner":"java.time.YearMonth","id":"method-now","meta":{}},{"name":"of","tagname":"method","owner":"java.time.YearMonth","id":"method-of","meta":{}},{"name":"parse","tagname":"method","owner":"java.time.YearMonth","id":"method-parse","meta":{}},{"name":"plus","tagname":"method","owner":"java.time.YearMonth","id":"method-plus","meta":{}},{"name":"plusMonths","tagname":"method","owner":"java.time.YearMonth","id":"method-plusMonths","meta":{}},{"name":"plusYears","tagname":"method","owner":"java.time.YearMonth","id":"method-plusYears","meta":{}},{"name":"query","tagname":"method","owner":"java.time.YearMonth","id":"method-query","meta":{}},{"name":"range","tagname":"method","owner":"java.time.YearMonth","id":"method-range","meta":{}},{"name":"toString","tagname":"method","owner":"java.time.YearMonth","id":"method-toString","meta":{}},{"name":"until","tagname":"method","owner":"java.time.YearMonth","id":"method-until","meta":{}},{"name":"with","tagname":"method","owner":"java.time.YearMonth","id":"method-with","meta":{}},{"name":"withMonth","tagname":"method","owner":"java.time.YearMonth","id":"method-withMonth","meta":{}},{"name":"withYear","tagname":"method","owner":"java.time.YearMonth","id":"method-withYear","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.time.YearMonth","short_doc":"implements java.time.temporal.Temporal\n\n implements java.time.temporal.TemporalAdjuster\n\n implements java.lang.Compar...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.time.YearMonth</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/YearMonth.html#java-time-YearMonth' target='_blank'>YearMonth.js</a></div></pre><div class='doc-contents'><p>implements java.time.temporal.Temporal</p>\n\n<p> implements java.time.temporal.TemporalAdjuster</p>\n\n<p> implements java.lang.Comparable</p>\n\n<p> implements java.io.Serializable</p>\n\n<p>A year-month in the ISO-8601 calendar system, such as {@code 2007-12}.\n <p>\n {@code YearMonth} is an immutable date-time object that represents the combination\n of a year and month. Any field that can be derived from a year and month, such as\n quarter-of-year, can be obtained.\n <p>\n This class does not store or represent a day, time or time-zone.\n For example, the value \"October 2007\" can be stored in a {@code YearMonth}.\n <p>\n The ISO-8601 calendar system is the modern civil calendar system used today\n in most of the world. It is equivalent to the proleptic Gregorian calendar\n system, in which today's rules for leap years are applied for all time.\n For most applications written today, the ISO-8601 rules are entirely suitable.\n However, any application that makes use of historical dates, and requires them\n to be accurate will find the ISO-8601 approach unsuitable.</p>\n\n<p> @implSpec\n This class is immutable and thread-safe.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-adjustInto' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-adjustInto' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-adjustInto' class='name expandable'>adjustInto</a>( <span class='pre'>temporal</span> ) : Object {java.time.temporal.Temporal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Adjusts the specified temporal object to have this year-month. ...</div><div class='long'><p>Adjusts the specified temporal object to have this year-month.\n <p>\n This returns a temporal object of the same observable type as the input\n with the year and month changed to be the same as this.\n <p>\n The adjustment is equivalent to using long)\n passing ChronoField.PROLEPTIC_MONTH as the field.\n If the specified temporal object does not use the ISO calendar system then\n a {@code DateTimeException} is thrown.\n <p>\n In most cases, it is clearer to reverse the calling pattern by using\n Temporal.with(TemporalAdjuster):</p>\n\n<pre>   // these two lines are equivalent, but the second approach is recommended\n   temporal = thisYearMonth.adjustInto(temporal);\n   temporal = temporal.with(thisYearMonth);\n </pre>\n\n\n<p> <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {Temporal}<div class='sub-desc'><p>the target object to be adjusted, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.Temporal}</span><div class='sub-desc'><p>the adjusted object, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to make the adjustment</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-atDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-atDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-atDay' class='name expandable'>atDay</a>( <span class='pre'>dayOfMonth</span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Combines this year-month with a day-of-month to create a {@code LocalDate}. ...</div><div class='long'><p>Combines this year-month with a day-of-month to create a {@code LocalDate}.\n <p>\n This returns a {@code LocalDate} formed from this year-month and the specified day-of-month.\n <p>\n The day-of-month value must be valid for the year-month.\n <p>\n This method can be used as part of a chain to produce a date:</p>\n\n<pre>  LocalDate date = year.atMonth(month).atDay(day);\n </pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfMonth</span> : Number<div class='sub-desc'><p>the day-of-month to use, from 1 to 31</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the date formed from this year-month and the specified day, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the day is invalid for the year-month\n@see <a href=\"#!/api/java.time.YearMonth-method-isValidDay\" rel=\"java.time.YearMonth-method-isValidDay\" class=\"docClass\">isValidDay</a>(int)</p>\n</div></li></ul></div></div></div><div id='method-atEndOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-atEndOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-atEndOfMonth' class='name expandable'>atEndOfMonth</a>( <span class='pre'></span> ) : Object {java.time.LocalDate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a {@code LocalDate} at the end of the month. ...</div><div class='long'><p>Returns a {@code LocalDate} at the end of the month.\n <p>\n This returns a {@code LocalDate} based on this year-month.\n The day-of-month is set to the last valid day of the month, taking\n into account leap years.\n <p>\n This method can be used as part of a chain to produce a date:</p>\n\n<pre>  LocalDate date = year.atMonth(month).atEndOfMonth();\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.LocalDate}</span><div class='sub-desc'><p>the last valid date of this year-month, not null</p>\n</div></li></ul></div></div></div><div id='method-compareTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-compareTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-compareTo' class='name expandable'>compareTo</a>( <span class='pre'>other</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this year-month to another year-month. ...</div><div class='long'><p>Compares this year-month to another year-month.\n <p>\n The comparison is based first on the value of the year, then on the value of the month.\n It is \"consistent with equals\", as defined by Comparable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {YearMonth}<div class='sub-desc'><p>the other year-month to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the comparator value, negative if less, positive if greater</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this year-month is equal to another year-month. ...</div><div class='long'><p>Checks if this year-month is equal to another year-month.\n <p>\n The comparison is based on the time-line position of the year-months.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is equal to the other year-month</p>\n</div></li></ul></div></div></div><div id='method-format' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-format' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-format' class='name expandable'>format</a>( <span class='pre'>formatter</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Formats this year-month using the specified formatter. ...</div><div class='long'><p>Formats this year-month using the specified formatter.\n <p>\n This year-month will be passed to the formatter to produce a string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the formatted year-month string, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if an error occurs during printing</p>\n</div></li></ul></div></div></div><div id='method-from' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-from' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-from' class='name expandable'>from</a>( <span class='pre'>temporal</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code YearMonth} from a temporal object. ...</div><div class='long'><p>Obtains an instance of {@code YearMonth} from a temporal object.\n <p>\n This obtains a year-month based on the specified temporal.\n A {@code TemporalAccessor} represents an arbitrary set of date and time information,\n which this factory converts to an instance of {@code YearMonth}.\n <p>\n The conversion extracts the YEAR and\n MONTH_OF_YEAR fields.\n The extraction is only permitted if the temporal object has an ISO\n chronology, or can be converted to a {@code LocalDate}.\n <p>\n This method matches the signature of the functional interface TemporalQuery\n allowing it to be used as a query via method reference, {@code YearMonth::from}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>temporal</span> : Object {TemporalAccessor}<div class='sub-desc'><p>the temporal object to convert, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>the year-month, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to convert to a {@code YearMonth}</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-get' class='name expandable'>get</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this year-month as an {@code int}. ...</div><div class='long'><p>Gets the value of the specified field from this year-month as an {@code int}.\n <p>\n This queries this year-month for the value of the specified field.\n The returned value will always be within the valid range of values for the field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this year-month, except {@code PROLEPTIC_MONTH} which is too\n large to fit in an {@code int} and throw a {@code DateTimeException}.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained or\n         the value is outside the range of valid values for the field</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported or\n         the range of values exceeds an {@code int}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-getLong' class='name expandable'>getLong</a>( <span class='pre'>field</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the value of the specified field from this year-month as a {@code long}. ...</div><div class='long'><p>Gets the value of the specified field from this year-month as a {@code long}.\n <p>\n This queries this year-month for the value of the specified field.\n If it is not possible to return the value, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return valid\n values based on this year-month.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.getFrom(TemporalAccessor)}\n passing {@code this} as the argument. Whether the value can be obtained,\n and what the value represents, is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to get, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the value for the field</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if a value for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-getMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-getMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-getMonth' class='name expandable'>getMonth</a>( <span class='pre'></span> ) : Object {java.time.Month}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the month-of-year field using the {@code Month} enum. ...</div><div class='long'><p>Gets the month-of-year field using the {@code Month} enum.\n <p>\n This method returns the enum <a href=\"#!/api/java.time.Month\" rel=\"java.time.Month\" class=\"docClass\">java.time.Month</a> for the month.\n This avoids confusion as to what {@code int} values mean.\n If you need access to the primitive {@code int} value then the enum\n provides the int value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.Month}</span><div class='sub-desc'><p>the month-of-year, not null\n@see <a href=\"#!/api/java.time.YearMonth-method-getMonthValue\" rel=\"java.time.YearMonth-method-getMonthValue\" class=\"docClass\">getMonthValue</a>()</p>\n</div></li></ul></div></div></div><div id='method-getMonthValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-getMonthValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-getMonthValue' class='name expandable'>getMonthValue</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the month-of-year field from 1 to 12. ...</div><div class='long'><p>Gets the month-of-year field from 1 to 12.\n <p>\n This method returns the month as an {@code int} from 1 to 12.\n Application code is frequently clearer if the enum <a href=\"#!/api/java.time.Month\" rel=\"java.time.Month\" class=\"docClass\">java.time.Month</a>\n is used by calling <a href=\"#!/api/java.time.YearMonth-method-getMonth\" rel=\"java.time.YearMonth-method-getMonth\" class=\"docClass\">getMonth</a>().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the month-of-year, from 1 to 12\n@see <a href=\"#!/api/java.time.YearMonth-method-getMonth\" rel=\"java.time.YearMonth-method-getMonth\" class=\"docClass\">getMonth</a>()</p>\n</div></li></ul></div></div></div><div id='method-getYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-getYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-getYear' class='name expandable'>getYear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the year field. ...</div><div class='long'><p>Gets the year field.\n <p>\n This method returns the primitive {@code int} value for the year.\n <p>\n The year returned by this method is proleptic as per {@code get(YEAR)}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the year, from MIN_YEAR to MAX_YEAR</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>A hash code for this year-month. ...</div><div class='long'><p>A hash code for this year-month.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a suitable hash code</p>\n</div></li></ul></div></div></div><div id='method-isAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-isAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-isAfter' class='name expandable'>isAfter</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this year-month is after the specified year-month. ...</div><div class='long'><p>Checks if this year-month is after the specified year-month.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {YearMonth}<div class='sub-desc'><p>the other year-month to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this is after the specified year-month</p>\n</div></li></ul></div></div></div><div id='method-isBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-isBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-isBefore' class='name expandable'>isBefore</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if this year-month is before the specified year-month. ...</div><div class='long'><p>Checks if this year-month is before the specified year-month.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {YearMonth}<div class='sub-desc'><p>the other year-month to compare to, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this point is before the specified year-month</p>\n</div></li></ul></div></div></div><div id='method-isLeapYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-isLeapYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-isLeapYear' class='name expandable'>isLeapYear</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the year is a leap year, according to the ISO proleptic\n calendar system rules. ...</div><div class='long'><p>Checks if the year is a leap year, according to the ISO proleptic\n calendar system rules.\n <p>\n This method applies the current rules for leap years across the whole time-line.\n In general, a year is a leap year if it is divisible by four without\n remainder. However, years divisible by 100, are not leap years, with\n the exception of years divisible by 400 which are.\n <p>\n For example, 1904 is a leap year it is divisible by 4.\n 1900 was not a leap year as it is divisible by 100, however 2000 was a\n leap year as it is divisible by 400.\n <p>\n The calculation is proleptic - applying the same rules into the far future and far past.\n This is historically inaccurate, but is correct for the ISO-8601 standard.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the year is leap, false otherwise</p>\n</div></li></ul></div></div></div><div id='method-isSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-isSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-isSupported' class='name expandable'>isSupported</a>( <span class='pre'>unit</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the specified unit is supported. ...</div><div class='long'><p>Checks if the specified unit is supported.\n <p>\n This checks if the specified unit can be added to, or subtracted from, this year-month.\n If false, then calling the TemporalUnit) and\n TemporalUnit) minus methods will throw an exception.\n <p>\n If the unit is a ChronoUnit then the query is implemented here.\n The supported units are:\n <ul>\n <li>{@code MONTHS}\n <li>{@code YEARS}\n <li>{@code DECADES}\n <li>{@code CENTURIES}\n <li>{@code MILLENNIA}\n <li>{@code ERAS}\n </li></li></li></li></li></li></ul>\n All other {@code ChronoUnit} instances will return false.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.isSupportedBy(Temporal)}\n passing {@code this} as the argument.\n Whether the unit is supported is determined by the unit.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to check, null returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the unit can be added/subtracted, false if not</p>\n</div></li></ul></div></div></div><div id='method-isValidDay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-isValidDay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-isValidDay' class='name expandable'>isValidDay</a>( <span class='pre'>dayOfMonth</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks if the day-of-month is valid for this year-month. ...</div><div class='long'><p>Checks if the day-of-month is valid for this year-month.\n <p>\n This method checks whether this year and month and the input day form\n a valid date.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>dayOfMonth</span> : Number<div class='sub-desc'><p>the day-of-month to validate, from 1 to 31, invalid value returns false</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the day is valid for this year-month</p>\n</div></li></ul></div></div></div><div id='method-lengthOfMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-lengthOfMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-lengthOfMonth' class='name expandable'>lengthOfMonth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the length of the month, taking account of the year. ...</div><div class='long'><p>Returns the length of the month, taking account of the year.\n <p>\n This returns the length of the month in days.\n For example, a date in January would return 31.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the length of the month in days, from 28 to 31</p>\n</div></li></ul></div></div></div><div id='method-lengthOfYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-lengthOfYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-lengthOfYear' class='name expandable'>lengthOfYear</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the length of the year. ...</div><div class='long'><p>Returns the length of the year.\n <p>\n This returns the length of the year in days, either 365 or 366.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>366 if the year is leap, 365 otherwise</p>\n</div></li></ul></div></div></div><div id='method-minus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-minus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-minus' class='name expandable'>minus</a>( <span class='pre'>amountToSubtract, unit</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this year-month with the specified amount subtracted. ...</div><div class='long'><p>Returns a copy of this year-month with the specified amount subtracted.\n <p>\n This returns a {@code YearMonth}, based on this one, with the amount\n in terms of the unit subtracted. If it is not possible to subtract the amount,\n because the unit is not supported or for some other reason, an exception is thrown.\n <p>\n This method is equivalent to TemporalUnit) with the amount negated.\n See that method for a full description of how addition, and thus subtraction, works.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToSubtract</span> : Number<div class='sub-desc'><p>the amount of the unit to subtract from the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to subtract, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the specified amount subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the subtraction cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-minusMonths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-minusMonths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-minusMonths' class='name expandable'>minusMonths</a>( <span class='pre'>monthsToSubtract</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code YearMonth} with the specified number of months subtracted. ...</div><div class='long'><p>Returns a copy of this {@code YearMonth} with the specified number of months subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>monthsToSubtract</span> : Number<div class='sub-desc'><p>the months to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the months subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div><div id='method-minusYears' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-minusYears' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-minusYears' class='name expandable'>minusYears</a>( <span class='pre'>yearsToSubtract</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code YearMonth} with the specified number of years subtracted. ...</div><div class='long'><p>Returns a copy of this {@code YearMonth} with the specified number of years subtracted.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>yearsToSubtract</span> : Number<div class='sub-desc'><p>the years to subtract, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the years subtracted, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div><div id='method-now' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-now' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-now' class='name expandable'>now</a>( <span class='pre'>clock</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains the current year-month from the specified clock. ...</div><div class='long'><p>Obtains the current year-month from the specified clock.\n <p>\n This will query the specified clock to obtain the current year-month.\n Using this method allows the use of an alternate clock for testing.\n The alternate clock may be introduced using <a href=\"#!/api/java.time.Clock\" rel=\"java.time.Clock\" class=\"docClass\">dependency injection</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>clock</span> : Object {Clock}<div class='sub-desc'><p>the clock to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>the current year-month, not null</p>\n</div></li></ul></div></div></div><div id='method-of' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-of' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-of' class='name expandable'>of</a>( <span class='pre'>year, month</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code YearMonth} from a year and month. ...</div><div class='long'><p>Obtains an instance of {@code YearMonth} from a year and month.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>year</span> : Number<div class='sub-desc'><p>the year to represent, from MIN_YEAR to MAX_YEAR</p>\n</div></li><li><span class='pre'>month</span> : Number<div class='sub-desc'><p>the month-of-year to represent, from 1 (January) to 12 (December)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>the year-month, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if either field value is invalid</p>\n</div></li></ul></div></div></div><div id='method-parse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-parse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-parse' class='name expandable'>parse</a>( <span class='pre'>text, formatter</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Obtains an instance of {@code YearMonth} from a text string using a specific formatter. ...</div><div class='long'><p>Obtains an instance of {@code YearMonth} from a text string using a specific formatter.\n <p>\n The text is parsed using the formatter, returning a year-month.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the text to parse, not null</p>\n</div></li><li><span class='pre'>formatter</span> : Object {DateTimeFormatter}<div class='sub-desc'><p>the formatter to use, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>the parsed year-month, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeParseException if the text cannot be parsed</p>\n</div></li></ul></div></div></div><div id='method-plus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-plus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-plus' class='name expandable'>plus</a>( <span class='pre'>amountToAdd, unit</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this year-month with the specified amount added. ...</div><div class='long'><p>Returns a copy of this year-month with the specified amount added.\n <p>\n This returns a {@code YearMonth}, based on this one, with the amount\n in terms of the unit added. If it is not possible to add the amount, because the\n unit is not supported or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoUnit then the addition is implemented here.\n The supported fields behave as follows:\n <ul>\n <li>{@code MONTHS} -\n  Returns a {@code YearMonth} with the specified number of months added.\n  This is equivalent to <a href=\"#!/api/java.time.YearMonth-method-plusMonths\" rel=\"java.time.YearMonth-method-plusMonths\" class=\"docClass\">plusMonths</a>(long).\n <li>{@code YEARS} -\n  Returns a {@code YearMonth} with the specified number of years added.\n  This is equivalent to <a href=\"#!/api/java.time.YearMonth-method-plusYears\" rel=\"java.time.YearMonth-method-plusYears\" class=\"docClass\">plusYears</a>(long).\n <li>{@code DECADES} -\n  Returns a {@code YearMonth} with the specified number of decades added.\n  This is equivalent to calling <a href=\"#!/api/java.time.YearMonth-method-plusYears\" rel=\"java.time.YearMonth-method-plusYears\" class=\"docClass\">plusYears</a>(long) with the amount\n  multiplied by 10.\n <li>{@code CENTURIES} -\n  Returns a {@code YearMonth} with the specified number of centuries added.\n  This is equivalent to calling <a href=\"#!/api/java.time.YearMonth-method-plusYears\" rel=\"java.time.YearMonth-method-plusYears\" class=\"docClass\">plusYears</a>(long) with the amount\n  multiplied by 100.\n <li>{@code MILLENNIA} -\n  Returns a {@code YearMonth} with the specified number of millennia added.\n  This is equivalent to calling <a href=\"#!/api/java.time.YearMonth-method-plusYears\" rel=\"java.time.YearMonth-method-plusYears\" class=\"docClass\">plusYears</a>(long) with the amount\n  multiplied by 1,000.\n <li>{@code ERAS} -\n  Returns a {@code YearMonth} with the specified number of eras added.\n  Only two eras are supported so the amount must be one, zero or minus one.\n  If the amount is non-zero then the year is changed such that the year-of-era\n  is unchanged.\n </li></li></li></li></li></li></ul>\n <p>\n All other {@code ChronoUnit} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.addTo(Temporal, long)}\n passing {@code this} as the argument. In this case, the unit determines\n whether and how to perform the addition.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>amountToAdd</span> : Number<div class='sub-desc'><p>the amount of the unit to add to the result, may be negative</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit of the amount to add, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the specified amount added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the addition cannot be made</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-plusMonths' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-plusMonths' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-plusMonths' class='name expandable'>plusMonths</a>( <span class='pre'>monthsToAdd</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code YearMonth} with the specified number of months added. ...</div><div class='long'><p>Returns a copy of this {@code YearMonth} with the specified number of months added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>monthsToAdd</span> : Number<div class='sub-desc'><p>the months to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the months added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div><div id='method-plusYears' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-plusYears' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-plusYears' class='name expandable'>plusYears</a>( <span class='pre'>yearsToAdd</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code YearMonth} with the specified number of years added. ...</div><div class='long'><p>Returns a copy of this {@code YearMonth} with the specified number of years added.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>yearsToAdd</span> : Number<div class='sub-desc'><p>the years to add, may be negative</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the years added, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the result exceeds the supported range</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-query' class='name expandable'>query</a>( <span class='pre'>query, query</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Queries this year-month using the specified query. ...</div><div class='long'><p>Queries this year-month using the specified query.\n <p>\n This queries this year-month using the specified query strategy object.\n The {@code TemporalQuery} object defines the logic to be used to\n obtain the result. Read the documentation of the query to understand\n what the result of this method will be.\n <p>\n The result of this method is obtained by invoking the\n TemporalQuery.queryFrom(TemporalAccessor) method on the\n specified query passing {@code this} as the argument.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>query</span> : Object {java.time.temporal.TemporalQuery}<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li><li><span class='pre'>query</span> : Object<div class='sub-desc'><p>the query to invoke, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the query result, null may be returned (defined by the query)</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if unable to query (defined by the query)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs (defined by the query)</p>\n</div></li></ul></div></div></div><div id='method-range' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-range' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-range' class='name expandable'>range</a>( <span class='pre'>field</span> ) : Object {java.time.temporal.ValueRange}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the range of valid values for the specified field. ...</div><div class='long'><p>Gets the range of valid values for the specified field.\n <p>\n The range object expresses the minimum and maximum valid values for a field.\n This year-month is used to enhance the accuracy of the returned range.\n If it is not possible to return the range, because the field is not supported\n or for some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the query is implemented here.\n The supported fields will return\n appropriate range instances.\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.rangeRefinedBy(TemporalAccessor)}\n passing {@code this} as the argument.\n Whether the range can be obtained is determined by the field.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to query the range for, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.temporal.ValueRange}</span><div class='sub-desc'><p>the range of valid values for the field, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the range for the field cannot be obtained</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Outputs this year-month as a {@code String}, such as {@code 2007-12}. ...</div><div class='long'><p>Outputs this year-month as a {@code String}, such as {@code 2007-12}.\n <p>\n The output will be in the format {@code uuuu-MM}:</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this year-month, not null</p>\n</div></li></ul></div></div></div><div id='method-until' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-until' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-until' class='name expandable'>until</a>( <span class='pre'>endExclusive, unit</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the amount of time until another year-month in terms of the specified unit. ...</div><div class='long'><p>Calculates the amount of time until another year-month in terms of the specified unit.\n <p>\n This calculates the amount of time between two {@code YearMonth}\n objects in terms of a single {@code TemporalUnit}.\n The start and end points are {@code this} and the specified year-month.\n The result will be negative if the end is before the start.\n The {@code Temporal} passed to this method is converted to a\n {@code YearMonth} using <a href=\"#!/api/java.time.YearMonth-method-from\" rel=\"java.time.YearMonth-method-from\" class=\"docClass\">from</a>(TemporalAccessor).\n For example, the amount in years between two year-months can be calculated\n using {@code startYearMonth.until(endYearMonth, YEARS)}.\n <p>\n The calculation returns a whole number, representing the number of\n complete units between the two year-months.\n For example, the amount in decades between 2012-06 and 2032-05\n will only be one decade as it is one month short of two decades.\n <p>\n There are two equivalent ways of using this method.\n The first is to invoke this method.\n The second is to use Temporal):</p>\n\n<pre>   // these two lines are equivalent\n   amount = start.until(end, MONTHS);\n   amount = MONTHS.between(start, end);\n </pre>\n\n\n<p> The choice should be made based on which makes the code more readable.\n <p>\n The calculation is implemented in this method for ChronoUnit.\n The units {@code MONTHS}, {@code YEARS}, {@code DECADES},\n {@code CENTURIES}, {@code MILLENNIA} and {@code ERAS} are supported.\n Other {@code ChronoUnit} values will throw an exception.\n <p>\n If the unit is not a {@code ChronoUnit}, then the result of this method\n is obtained by invoking {@code TemporalUnit.between(Temporal, Temporal)}\n passing {@code this} as the first argument and the converted input temporal\n as the second argument.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>endExclusive</span> : Object {Temporal}<div class='sub-desc'><p>the end date, exclusive, which is converted to a {@code YearMonth}, not null</p>\n</div></li><li><span class='pre'>unit</span> : Object {TemporalUnit}<div class='sub-desc'><p>the unit to measure the amount in, not null</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the amount of time between this year-month and the end year-month</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the amount cannot be calculated, or the end\n  temporal cannot be converted to a {@code YearMonth}</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the unit is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-with' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-with' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-with' class='name expandable'>with</a>( <span class='pre'>field, newValue</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this year-month with the specified field set to a new value. ...</div><div class='long'><p>Returns a copy of this year-month with the specified field set to a new value.\n <p>\n This returns a {@code YearMonth}, based on this one, with the value\n for the specified field changed.\n This can be used to change any supported field, such as the year or month.\n If it is not possible to set the value, because the field is not supported or for\n some other reason, an exception is thrown.\n <p>\n If the field is a ChronoField then the adjustment is implemented here.\n The supported fields behave as follows:\n <ul>\n <li>{@code MONTH_OF_YEAR} -\n  Returns a {@code YearMonth} with the specified month-of-year.\n  The year will be unchanged.\n <li>{@code PROLEPTIC_MONTH} -\n  Returns a {@code YearMonth} with the specified proleptic-month.\n  This completely replaces the year and month of this object.\n <li>{@code YEAR_OF_ERA} -\n  Returns a {@code YearMonth} with the specified year-of-era\n  The month and era will be unchanged.\n <li>{@code YEAR} -\n  Returns a {@code YearMonth} with the specified year.\n  The month will be unchanged.\n <li>{@code ERA} -\n  Returns a {@code YearMonth} with the specified era.\n  The month and year-of-era will be unchanged.\n </li></li></li></li></li></ul>\n <p>\n In all cases, if the new value is outside the valid range of values for the field\n then a {@code DateTimeException} will be thrown.\n <p>\n All other {@code ChronoField} instances will throw an {@code UnsupportedTemporalTypeException}.\n <p>\n If the field is not a {@code ChronoField}, then the result of this method\n is obtained by invoking {@code TemporalField.adjustInto(Temporal, long)}\n passing {@code this} as the argument. In this case, the field determines\n whether and how to adjust the instant.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : Object {TemporalField}<div class='sub-desc'><p>the field to set in the result, not null</p>\n</div></li><li><span class='pre'>newValue</span> : Number<div class='sub-desc'><p>the new value of the field in the result</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on {@code this} with the specified field set, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the field cannot be set</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedTemporalTypeException if the field is not supported</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>ArithmeticException if numeric overflow occurs</p>\n</div></li></ul></div></div></div><div id='method-withMonth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-withMonth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-withMonth' class='name expandable'>withMonth</a>( <span class='pre'>month</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code YearMonth} with the month-of-year altered. ...</div><div class='long'><p>Returns a copy of this {@code YearMonth} with the month-of-year altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>month</span> : Number<div class='sub-desc'><p>the month-of-year to set in the returned year-month, from 1 (January) to 12 (December)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the requested month, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the month-of-year value is invalid</p>\n</div></li></ul></div></div></div><div id='method-withYear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.time.YearMonth'>java.time.YearMonth</span><br/><a href='source/YearMonth.html#java-time-YearMonth-method-withYear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.time.YearMonth-method-withYear' class='name expandable'>withYear</a>( <span class='pre'>year</span> ) : Object {java.time.YearMonth}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of this {@code YearMonth} with the year altered. ...</div><div class='long'><p>Returns a copy of this {@code YearMonth} with the year altered.\n <p>\n This instance is immutable and unaffected by this method call.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>year</span> : Number<div class='sub-desc'><p>the year to set in the returned year-month, from MIN_YEAR to MAX_YEAR</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.time.YearMonth}</span><div class='sub-desc'><p>a {@code YearMonth} based on this year-month with the requested year, not null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>DateTimeException if the year value is invalid</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});