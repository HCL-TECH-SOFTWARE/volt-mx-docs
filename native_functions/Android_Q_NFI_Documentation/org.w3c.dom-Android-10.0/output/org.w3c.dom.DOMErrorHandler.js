Ext.data.JsonP.org_w3c_dom_DOMErrorHandler({"tagname":"class","name":"org.w3c.dom.DOMErrorHandler","autodetected":{},"files":[{"filename":"DOMErrorHandler.js","href":"DOMErrorHandler.html#org-w3c-dom-DOMErrorHandler"}],"since":"DOM Level 3","members":[{"name":"handleError","tagname":"method","owner":"org.w3c.dom.DOMErrorHandler","id":"method-handleError","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-org.w3c.dom.DOMErrorHandler","short_doc":"DOMErrorHandler is a callback interface that the DOM\n implementation can call when reporting errors that happens whil...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/DOMErrorHandler.html#org-w3c-dom-DOMErrorHandler' target='_blank'>DOMErrorHandler.js</a></div></pre><div class='doc-contents'><p><code>DOMErrorHandler</code> is a callback interface that the DOM\n implementation can call when reporting errors that happens while\n processing XML data, or when doing some other processing (e.g. validating\n a document). A <code>DOMErrorHandler</code> object can be attached to a\n <code>Document</code> using the \"error-handler\" on the\n <code>DOMConfiguration</code> interface. If more than one error needs to\n be reported during an operation, the sequence and numbers of the errors\n passed to the error handler are implementation dependent.\n <p> The application that is using the DOM implementation is expected to\n implement this interface.\n <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.</p>\n        <p>Available since: <b>DOM Level 3</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-handleError' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.w3c.dom.DOMErrorHandler'>org.w3c.dom.DOMErrorHandler</span><br/><a href='source/DOMErrorHandler.html#org-w3c-dom-DOMErrorHandler-method-handleError' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.w3c.dom.DOMErrorHandler-method-handleError' class='name expandable'>handleError</a>( <span class='pre'>error</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called on the error handler when an error occurs. ...</div><div class='long'><p>This method is called on the error handler when an error occurs.\n <br> If an exception is thrown from this method, it is considered to be\n equivalent of returning <code>true</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>error</span> : Object {DOMError}<div class='sub-desc'><p>The error object that describes the error. This object\n   may be reused by the DOM implementation across multiple calls to\n   the <code>handleError</code> method.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>If the <code>handleError</code> method returns\n   <code>false</code>, the DOM implementation should stop the current\n   processing when possible. If the method returns <code>true</code>,\n   the processing may continue depending on\n   <code>DOMError.severity</code>.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});