Ext.data.JsonP.android_hardware_usb_UsbDeviceConnection({"tagname":"class","name":"android.hardware.usb.UsbDeviceConnection","autodetected":{},"files":[{"filename":"UsbDeviceConnection.js","href":"UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection"}],"extends":"java.lang.Object","members":[{"name":"bulkTransfer","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-bulkTransfer","meta":{}},{"name":"claimInterface","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-claimInterface","meta":{}},{"name":"close","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-close","meta":{}},{"name":"controlTransfer","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-controlTransfer","meta":{}},{"name":"getFileDescriptor","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-getFileDescriptor","meta":{}},{"name":"getRawDescriptors","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-getRawDescriptors","meta":{}},{"name":"getSerial","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-getSerial","meta":{}},{"name":"releaseInterface","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-releaseInterface","meta":{}},{"name":"requestWait","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-requestWait","meta":{}},{"name":"setConfiguration","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-setConfiguration","meta":{}},{"name":"setInterface","tagname":"method","owner":"android.hardware.usb.UsbDeviceConnection","id":"method-setInterface","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.usb.UsbDeviceConnection","short_doc":"This class is used for sending and receiving data and control messages to a USB device. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.hardware.usb.UsbDeviceConnection</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection' target='_blank'>UsbDeviceConnection.js</a></div></pre><div class='doc-contents'><p>This class is used for sending and receiving data and control messages to a USB device.\n Instances of this class are created by <a href=\"#!/api/android.hardware.usb.UsbManager-method-openDevice\" rel=\"android.hardware.usb.UsbManager-method-openDevice\" class=\"docClass\">android.hardware.usb.UsbManager.openDevice</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-bulkTransfer' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-bulkTransfer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-bulkTransfer' class='name expandable'>bulkTransfer</a>( <span class='pre'>endpoint, buffer, offset, length, timeout</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs a bulk transaction on the given endpoint. ...</div><div class='long'><p>Performs a bulk transaction on the given endpoint.\n The direction of the transfer is determined by the direction of the endpoint.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>endpoint</span> : Object {UsbEndpoint}<div class='sub-desc'><p>the endpoint for this transaction</p>\n</div></li><li><span class='pre'>buffer</span> : Object {byte[]}<div class='sub-desc'><p>buffer for data to send or receive</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the index of the first byte in the buffer to send or receive</p>\n</div></li><li><span class='pre'>length</span> : Number<div class='sub-desc'><p>the length of the data to send or receive. Before\n               {@value Build.VERSION_CODES#P}, a value larger than 16384 bytes\n               would be truncated down to 16384. In API {@value Build.VERSION_CODES#P}\n               and after, any value of length is valid.</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>in milliseconds, 0 is infinite</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>length of data transferred (or zero) for success,\n or negative value for failure</p>\n</div></li></ul></div></div></div><div id='method-claimInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-claimInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-claimInterface' class='name expandable'>claimInterface</a>( <span class='pre'>intf, force</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Claims exclusive access to a android.hardware.usb.UsbInterface. ...</div><div class='long'><p>Claims exclusive access to a <a href=\"#!/api/android.hardware.usb.UsbInterface\" rel=\"android.hardware.usb.UsbInterface\" class=\"docClass\">android.hardware.usb.UsbInterface</a>.\n This must be done before sending or receiving data on any\n <a href=\"#!/api/android.hardware.usb.UsbEndpoint\" rel=\"android.hardware.usb.UsbEndpoint\" class=\"docClass\">android.hardware.usb.UsbEndpoint</a>s belonging to the interface.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>intf</span> : Object {UsbInterface}<div class='sub-desc'><p>the interface to claim</p>\n</div></li><li><span class='pre'>force</span> : Boolean<div class='sub-desc'><p>true to disconnect kernel driver if necessary</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the interface was successfully claimed</p>\n</div></li></ul></div></div></div><div id='method-close' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-close' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-close' class='name expandable'>close</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Releases all system resources related to the device. ...</div><div class='long'><p>Releases all system resources related to the device.\n Once the object is closed it cannot be used again.\n The client must call <a href=\"#!/api/android.hardware.usb.UsbManager-method-openDevice\" rel=\"android.hardware.usb.UsbManager-method-openDevice\" class=\"docClass\">android.hardware.usb.UsbManager.openDevice</a> again\n to retrieve a new instance to reestablish communication with the device.</p>\n</div></div></div><div id='method-controlTransfer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-controlTransfer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-controlTransfer' class='name expandable'>controlTransfer</a>( <span class='pre'>requestType, request, value, index, buffer, offset, length, timeout</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs a control transaction on endpoint zero for this device. ...</div><div class='long'><p>Performs a control transaction on endpoint zero for this device.\n The direction of the transfer is determined by the request type.\n If requestType &amp; <a href=\"#!/api/android.hardware.usb.UsbConstants-property-USB_ENDPOINT_DIR_MASK\" rel=\"android.hardware.usb.UsbConstants-property-USB_ENDPOINT_DIR_MASK\" class=\"docClass\">android.hardware.usb.UsbConstants.USB_ENDPOINT_DIR_MASK</a> is\n <a href=\"#!/api/android.hardware.usb.UsbConstants-property-USB_DIR_OUT\" rel=\"android.hardware.usb.UsbConstants-property-USB_DIR_OUT\" class=\"docClass\">android.hardware.usb.UsbConstants.USB_DIR_OUT</a>, then the transfer is a write,\n and if it is <a href=\"#!/api/android.hardware.usb.UsbConstants-property-USB_DIR_IN\" rel=\"android.hardware.usb.UsbConstants-property-USB_DIR_IN\" class=\"docClass\">android.hardware.usb.UsbConstants.USB_DIR_IN</a>, then the transfer\n is a read.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>requestType</span> : Number<div class='sub-desc'><p>request type for this transaction</p>\n</div></li><li><span class='pre'>request</span> : Number<div class='sub-desc'><p>request ID for this transaction</p>\n</div></li><li><span class='pre'>value</span> : Number<div class='sub-desc'><p>value field for this transaction</p>\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>index field for this transaction</p>\n</div></li><li><span class='pre'>buffer</span> : Object {byte[]}<div class='sub-desc'><p>buffer for data portion of transaction,\n or null if no data needs to be sent or received</p>\n</div></li><li><span class='pre'>offset</span> : Number<div class='sub-desc'><p>the index of the first byte in the buffer to send or receive</p>\n</div></li><li><span class='pre'>length</span> : Number<div class='sub-desc'><p>the length of the data to send or receive</p>\n</div></li><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>in milliseconds</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>length of data transferred (or zero) for success,\n or negative value for failure</p>\n</div></li></ul></div></div></div><div id='method-getFileDescriptor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-getFileDescriptor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-getFileDescriptor' class='name expandable'>getFileDescriptor</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the native file descriptor for the device, or\n -1 if the device is not opened. ...</div><div class='long'><p>Returns the native file descriptor for the device, or\n -1 if the device is not opened.\n This is intended for passing to native code to access the device.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the native file descriptor</p>\n</div></li></ul></div></div></div><div id='method-getRawDescriptors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-getRawDescriptors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-getRawDescriptors' class='name expandable'>getRawDescriptors</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the raw USB descriptors for the device. ...</div><div class='long'><p>Returns the raw USB descriptors for the device.\n This can be used to access descriptors not supported directly\n via the higher level APIs.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>raw USB descriptors</p>\n</div></li></ul></div></div></div><div id='method-getSerial' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-getSerial' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-getSerial' class='name expandable'>getSerial</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the serial number for the device. ...</div><div class='long'><p>Returns the serial number for the device.\n This will return null if the device has not been opened.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the device serial number</p>\n</div></li></ul></div></div></div><div id='method-releaseInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-releaseInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-releaseInterface' class='name expandable'>releaseInterface</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Releases exclusive access to a android.hardware.usb.UsbInterface. ...</div><div class='long'><p>Releases exclusive access to a <a href=\"#!/api/android.hardware.usb.UsbInterface\" rel=\"android.hardware.usb.UsbInterface\" class=\"docClass\">android.hardware.usb.UsbInterface</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the interface was successfully released</p>\n</div></li></ul></div></div></div><div id='method-requestWait' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-requestWait' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-requestWait' class='name expandable'>requestWait</a>( <span class='pre'>timeout</span> ) : Object {android.hardware.usb.UsbRequest}<span class=\"signature\"></span></div><div class='description'><div class='short'>Waits for the result of a android.hardware.usb.UsbRequest.queue operation\n Note that this may return requests queued ...</div><div class='long'><p>Waits for the result of a <a href=\"#!/api/android.hardware.usb.UsbRequest-method-queue\" rel=\"android.hardware.usb.UsbRequest-method-queue\" class=\"docClass\">android.hardware.usb.UsbRequest.queue</a> operation\n <p>Note that this may return requests queued on multiple\n <a href=\"#!/api/android.hardware.usb.UsbEndpoint\" rel=\"android.hardware.usb.UsbEndpoint\" class=\"docClass\">android.hardware.usb.UsbEndpoint</a>s. When multiple endpoints are in use,\n <a href=\"#!/api/android.hardware.usb.UsbRequest-method-getEndpoint\" rel=\"android.hardware.usb.UsbRequest-method-getEndpoint\" class=\"docClass\">android.hardware.usb.UsbRequest.getEndpoint</a> and <a href=\"#!/api/android.hardware.usb.UsbRequest-method-getClientData\" rel=\"android.hardware.usb.UsbRequest-method-getClientData\" class=\"docClass\">android.hardware.usb.UsbRequest.getClientData</a> can be useful in determining how to process\n the result of this function.</p>\n <p>Android processes <a href=\"#!/api/android.hardware.usb.UsbRequest\" rel=\"android.hardware.usb.UsbRequest\" class=\"docClass\">android.hardware.usb.UsbRequests</a> asynchronously. Hence it is not\n guaranteed that requestWait(0) returns a request that has been\n queued right before even if the request could have been processed immediately.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>timeout</span> : Number<div class='sub-desc'><p>timeout in milliseconds. If 0 this method does not wait.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.hardware.usb.UsbRequest}</span><div class='sub-desc'><p>a completed USB request, or {@code null} if an error occurred</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>BufferOverflowException if the number of bytes read or written is more than the\n                                 limit of the request's buffer. The number of bytes is\n                                 determined by the {@code length} parameter of\n                                 int)</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>TimeoutException if no request was received in {@code timeout} milliseconds.</p>\n</div></li></ul></div></div></div><div id='method-setConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-setConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-setConfiguration' class='name expandable'>setConfiguration</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the device's current android.hardware.usb.UsbConfiguration. ...</div><div class='long'><p>Sets the device's current <a href=\"#!/api/android.hardware.usb.UsbConfiguration\" rel=\"android.hardware.usb.UsbConfiguration\" class=\"docClass\">android.hardware.usb.UsbConfiguration</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the configuration was successfully set</p>\n</div></li></ul></div></div></div><div id='method-setInterface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.usb.UsbDeviceConnection'>android.hardware.usb.UsbDeviceConnection</span><br/><a href='source/UsbDeviceConnection.html#android-hardware-usb-UsbDeviceConnection-method-setInterface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.usb.UsbDeviceConnection-method-setInterface' class='name expandable'>setInterface</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the current android.hardware.usb.UsbInterface. ...</div><div class='long'><p>Sets the current <a href=\"#!/api/android.hardware.usb.UsbInterface\" rel=\"android.hardware.usb.UsbInterface\" class=\"docClass\">android.hardware.usb.UsbInterface</a>.\n Used to select between two interfaces with the same ID but different alternate setting.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the interface was successfully selected</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});