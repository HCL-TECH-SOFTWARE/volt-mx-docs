Ext.data.JsonP.javax_crypto_spec_RC2ParameterSpec({"tagname":"class","name":"javax.crypto.spec.RC2ParameterSpec","autodetected":{},"files":[{"filename":"RC2ParameterSpec.js","href":"RC2ParameterSpec.html#javax-crypto-spec-RC2ParameterSpec"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Jan Luehe","email":null}],"since":"1.4","members":[{"name":"equals","tagname":"method","owner":"javax.crypto.spec.RC2ParameterSpec","id":"method-equals","meta":{}},{"name":"getEffectiveKeyBits","tagname":"method","owner":"javax.crypto.spec.RC2ParameterSpec","id":"method-getEffectiveKeyBits","meta":{}},{"name":"getIV","tagname":"method","owner":"javax.crypto.spec.RC2ParameterSpec","id":"method-getIV","meta":{}},{"name":"hashCode","tagname":"method","owner":"javax.crypto.spec.RC2ParameterSpec","id":"method-hashCode","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.crypto.spec.RC2ParameterSpec","short_doc":"implements java.security.spec.AlgorithmParameterSpec\n\nThis class specifies the parameters used with the\n RC2\n algorithm. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.crypto.spec.RC2ParameterSpec</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RC2ParameterSpec.html#javax-crypto-spec-RC2ParameterSpec' target='_blank'>RC2ParameterSpec.js</a></div></pre><div class='doc-contents'><p>implements java.security.spec.AlgorithmParameterSpec</p>\n\n<p>This class specifies the parameters used with the\n <a href=\"http://www.ietf.org/rfc/rfc2268.txt\"><i>RC2</i></a>\n algorithm.</p>\n\n<p> <p> The parameters consist of an effective key size and optionally\n an 8-byte initialization vector (IV) (only in feedback mode).</p>\n\n<p> <p> This class can be used to initialize a <code>Cipher</code> object that\n implements the <i>RC2</i> algorithm.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-equals' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.spec.RC2ParameterSpec'>javax.crypto.spec.RC2ParameterSpec</span><br/><a href='source/RC2ParameterSpec.html#javax-crypto-spec-RC2ParameterSpec-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.spec.RC2ParameterSpec-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Tests for equality between the specified object and this\n object. ...</div><div class='long'><p>Tests for equality between the specified object and this\n object. Two RC2ParameterSpec objects are considered equal if their\n effective key sizes and IVs are equal.\n (Two IV references are considered equal if both are <tt>null</tt>.)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the object to test for equality with this object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the objects are considered equal, false if\n <code>obj</code> is null or otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getEffectiveKeyBits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.spec.RC2ParameterSpec'>javax.crypto.spec.RC2ParameterSpec</span><br/><a href='source/RC2ParameterSpec.html#javax-crypto-spec-RC2ParameterSpec-method-getEffectiveKeyBits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.spec.RC2ParameterSpec-method-getEffectiveKeyBits' class='name expandable'>getEffectiveKeyBits</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the effective key size in bits. ...</div><div class='long'><p>Returns the effective key size in bits.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the effective key size in bits.</p>\n</div></li></ul></div></div></div><div id='method-getIV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.spec.RC2ParameterSpec'>javax.crypto.spec.RC2ParameterSpec</span><br/><a href='source/RC2ParameterSpec.html#javax-crypto-spec-RC2ParameterSpec-method-getIV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.spec.RC2ParameterSpec-method-getIV' class='name expandable'>getIV</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the IV or null if this parameter set does not contain an IV. ...</div><div class='long'><p>Returns the IV or null if this parameter set does not contain an IV.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the IV or null if this parameter set does not contain an IV.\n Returns a new array each time this method is called.</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.crypto.spec.RC2ParameterSpec'>javax.crypto.spec.RC2ParameterSpec</span><br/><a href='source/RC2ParameterSpec.html#javax-crypto-spec-RC2ParameterSpec-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.crypto.spec.RC2ParameterSpec-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates a hash code value for the object. ...</div><div class='long'><p>Calculates a hash code value for the object.\n Objects that are equal will also have the same hashcode.</p>\n</div></div></div></div></div></div></div>","meta":{}});