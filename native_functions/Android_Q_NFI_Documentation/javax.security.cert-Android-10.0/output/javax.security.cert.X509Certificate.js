Ext.data.JsonP.javax_security_cert_X509Certificate({"tagname":"class","name":"javax.security.cert.X509Certificate","autodetected":{},"files":[{"filename":"X509Certificate.js","href":"X509Certificate.html#javax-security-cert-X509Certificate"}],"extends":"javax.security.cert.Certificate","author":[{"tagname":"author","name":"Hemma Prafullchandra","email":null}],"since":"1.4","members":[{"name":"checkValidity","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-checkValidity","meta":{}},{"name":"equals","tagname":"method","owner":"javax.security.cert.Certificate","id":"method-equals","meta":{}},{"name":"getEncoded","tagname":"method","owner":"javax.security.cert.Certificate","id":"method-getEncoded","meta":{}},{"name":"getInstance","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getInstance","meta":{}},{"name":"getIssuerDN","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getIssuerDN","meta":{}},{"name":"getNotAfter","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getNotAfter","meta":{}},{"name":"getNotBefore","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getNotBefore","meta":{}},{"name":"getPublicKey","tagname":"method","owner":"javax.security.cert.Certificate","id":"method-getPublicKey","meta":{}},{"name":"getSerialNumber","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getSerialNumber","meta":{}},{"name":"getSigAlgName","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getSigAlgName","meta":{}},{"name":"getSigAlgOID","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getSigAlgOID","meta":{}},{"name":"getSigAlgParams","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getSigAlgParams","meta":{}},{"name":"getSubjectDN","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getSubjectDN","meta":{}},{"name":"getVersion","tagname":"method","owner":"javax.security.cert.X509Certificate","id":"method-getVersion","meta":{}},{"name":"hashCode","tagname":"method","owner":"javax.security.cert.Certificate","id":"method-hashCode","meta":{}},{"name":"toString","tagname":"method","owner":"javax.security.cert.Certificate","id":"method-toString","meta":{}},{"name":"verify","tagname":"method","owner":"javax.security.cert.Certificate","id":"method-verify","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.security.cert.X509Certificate","short_doc":"Abstract class for X.509 v1 certificates. ...","classIcon":"icon-class","superclasses":["java.lang.Object","javax.security.cert.Certificate"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/javax.security.cert.Certificate' rel='javax.security.cert.Certificate' class='docClass'>javax.security.cert.Certificate</a><div class='subclass '><strong>javax.security.cert.X509Certificate</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/X509Certificate.html#javax-security-cert-X509Certificate' target='_blank'>X509Certificate.js</a></div></pre><div class='doc-contents'><p>Abstract class for X.509 v1 certificates. This provides a standard\n way to access all the version 1 attributes of an X.509 certificate.\n Attributes that are specific to X.509 v2 or v3 are not available\n through this interface. Future API evolution will provide full access to\n complete X.509 v3 attributes.\n <p>\n The basic X.509 format was defined by\n ISO/IEC and ANSI X9 and is described below in ASN.1:</p>\n\n<pre> Certificate  ::=  SEQUENCE  {\n     tbsCertificate       TBSCertificate,\n     signatureAlgorithm   AlgorithmIdentifier,\n     signature            BIT STRING  }\n </pre>\n\n\n<p> <p>\n These certificates are widely used to support authentication and\n other functionality in Internet security systems. Common applications\n include Privacy Enhanced Mail (PEM), Transport Layer Security (SSL),\n code signing for trusted software distribution, and Secure Electronic\n Transactions (SET).\n <p>\n These certificates are managed and vouched for by <em>Certificate\n Authorities</em> (CAs). CAs are services which create certificates by\n placing data in the X.509 standard format and then digitally signing\n that data. CAs act as trusted third parties, making introductions\n between principals who have no direct knowledge of each other.\n CA certificates are either signed by themselves, or by some other\n CA such as a \"root\" CA.\n <p>\n The ASN.1 definition of {@code tbsCertificate} is:</p>\n\n<pre> TBSCertificate  ::=  SEQUENCE  {\n     version         [0]  EXPLICIT Version DEFAULT v1,\n     serialNumber         CertificateSerialNumber,\n     signature            AlgorithmIdentifier,\n     issuer               Name,\n     validity             Validity,\n     subject              Name,\n     subjectPublicKeyInfo SubjectPublicKeyInfo,\n     }\n </pre>\n\n\n<p> <p>\n Here is sample code to instantiate an X.509 certificate:</p>\n\n<pre> InputStream inStream = new FileInputStream(\"fileName-of-cert\");\n X509Certificate cert = X509Certificate.getInstance(inStream);\n inStream.close();\n </pre>\n\n\n<p> OR</p>\n\n<pre> byte[] certData = &lt;certificate read from a file, say&gt;\n X509Certificate cert = X509Certificate.getInstance(certData);\n </pre>\n\n\n<p> <p>\n In either case, the code that instantiates an X.509 certificate\n consults the value of the {@code cert.provider.x509v1} security property\n to locate the actual implementation or instantiates a default implementation.\n <p>\n The {@code cert.provider.x509v1} property is set to a default\n implementation for X.509 such as:</p>\n\n<pre> cert.provider.x509v1=com.sun.security.cert.internal.x509.X509V1CertImpl\n </pre>\n\n\n<p> <p>\n The value of this {@code cert.provider.x509v1} property has to be\n changed to instantiate another implementation. If this security\n property is not set, a default implementation will be used.\n Currently, due to possible security restrictions on access to\n Security properties, this value is looked up and cached at class\n initialization time and will fallback on a default implementation if\n the Security property is not accessible.</p>\n\n<p> <p><em>Note: The classes in the package {@code javax.security.cert}\n exist for compatibility with earlier versions of the\n Java Secure Sockets Extension (JSSE). New applications should instead\n use the standard Java SE certificate classes located in\n {@code java.security.cert}.</em></p></p>\n\n<p> @see Certificate\n @see java.security.cert.X509Extension\n @see java.security.Security security properties</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-checkValidity' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-checkValidity' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-checkValidity' class='name expandable'>checkValidity</a>( <span class='pre'>date</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Checks that the specified date is within the certificate's\n validity period. ...</div><div class='long'><p>Checks that the specified date is within the certificate's\n validity period. In other words, this determines whether the\n certificate would be valid at the specified date/time.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>date</span> : Object {Date}<div class='sub-desc'><p>the Date to check against to see if this certificate\n        is valid at that date/time.\n@exception CertificateExpiredException if the certificate has expired\n            with respect to the {@code date} supplied.\n@exception CertificateNotYetValidException if the certificate is not\n            yet valid with respect to the {@code date} supplied.\n@see <a href=\"#!/api/javax.security.cert.X509Certificate-method-checkValidity\" rel=\"javax.security.cert.X509Certificate-method-checkValidity\" class=\"docClass\">checkValidity</a>()</p>\n</div></li></ul></div></div></div><div id='method-equals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/javax.security.cert.Certificate' rel='javax.security.cert.Certificate' class='defined-in docClass'>javax.security.cert.Certificate</a><br/><a href='source/Certificate.html#javax-security-cert-Certificate-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.Certificate-method-equals' class='name expandable'>equals</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this certificate for equality with the specified\n object. ...</div><div class='long'><p>Compares this certificate for equality with the specified\n object. If the {@code other} object is an\n {@code instanceof} {@code Certificate}, then\n its encoded form is retrieved and compared with the\n encoded form of this certificate.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {Object}<div class='sub-desc'><p>the object to test for equality with this certificate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if the encoded forms of the two certificates\n         match, false otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getEncoded' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/javax.security.cert.Certificate' rel='javax.security.cert.Certificate' class='defined-in docClass'>javax.security.cert.Certificate</a><br/><a href='source/Certificate.html#javax-security-cert-Certificate-method-getEncoded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.Certificate-method-getEncoded' class='name expandable'>getEncoded</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the encoded form of this certificate. ...</div><div class='long'><p>Returns the encoded form of this certificate. It is\n assumed that each certificate type would have only a single\n form of encoding; for example, X.509 certificates would\n be encoded as ASN.1 DER.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>encoded form of this certificate\n@exception CertificateEncodingException on internal certificate\n            encoding failure</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>certData</span> ) : Object {javax.security.cert.X509Certificate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Instantiates an X509Certificate object, and initializes it with\n the specified byte array. ...</div><div class='long'><p>Instantiates an X509Certificate object, and initializes it with\n the specified byte array.\n The implementation (X509Certificate is an abstract class) is\n provided by the class specified as the value of the\n {@code cert.provider.x509v1} security property.</p>\n\n<p> <p>Note: All X509Certificate\n subclasses must provide a constructor of the form:\n <pre>{@code\n public <subClass>(InputStream inStream) ...\n }</subClass></pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>certData</span> : Object {byte[]}<div class='sub-desc'><p>a byte array containing the DER-encoded\n        certificate.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.security.cert.X509Certificate}</span><div class='sub-desc'><p>an X509Certificate object initialized with the data\n         from {@code certData}.\n@exception CertificateException if a class initialization\n            or certificate parsing error occurs.</p>\n</div></li></ul></div></div></div><div id='method-getIssuerDN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getIssuerDN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getIssuerDN' class='name expandable'>getIssuerDN</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code issuer} (issuer distinguished name) value from\n the certificate. ...</div><div class='long'><p>Gets the {@code issuer} (issuer distinguished name) value from\n the certificate. The issuer name identifies the entity that signed (and\n issued) the certificate.</p>\n\n<p> <p>The issuer name field contains an\n X.500 distinguished name (DN).\n The ASN.1 definition for this is:</p>\n\n<pre> issuer    Name\n\n Name ::= CHOICE { RDNSequence }\n RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n RelativeDistinguishedName ::=\n     SET OF AttributeValueAssertion\n\n AttributeValueAssertion ::= SEQUENCE {\n                               AttributeType,\n                               AttributeValue }\n AttributeType ::= OBJECT IDENTIFIER\n AttributeValue ::= ANY\n </pre>\n\n\n<p> The {@code Name} describes a hierarchical name composed of\n attributes, such as country name, and corresponding values, such as US.\n The type of the {@code AttributeValue} component is determined by\n the {@code AttributeType}; in general it will be a\n {@code directoryString}. A {@code directoryString} is usually\n one of {@code PrintableString},\n {@code TeletexString} or {@code UniversalString}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>a Principal whose name is the issuer distinguished name.</p>\n</div></li></ul></div></div></div><div id='method-getNotAfter' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getNotAfter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getNotAfter' class='name expandable'>getNotAfter</a>( <span class='pre'></span> ) : Object {java.util.Date}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code notAfter} date from the validity period of\n the certificate. ...</div><div class='long'><p>Gets the {@code notAfter} date from the validity period of\n the certificate. See getNotBefore\n for relevant ASN.1 definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Date}</span><div class='sub-desc'><p>the end date of the validity period.\n@see <a href=\"#!/api/javax.security.cert.X509Certificate-method-checkValidity\" rel=\"javax.security.cert.X509Certificate-method-checkValidity\" class=\"docClass\">checkValidity</a>()</p>\n</div></li></ul></div></div></div><div id='method-getNotBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getNotBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getNotBefore' class='name expandable'>getNotBefore</a>( <span class='pre'></span> ) : Object {java.util.Date}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code notBefore} date from the validity period of\n the certificate. ...</div><div class='long'><p>Gets the {@code notBefore} date from the validity period of\n the certificate.\n The relevant ASN.1 definitions are:</p>\n\n<pre> validity             Validity\n\n Validity ::= SEQUENCE {\n     notBefore      CertificateValidityDate,\n     notAfter       CertificateValidityDate }\n\n CertificateValidityDate ::= CHOICE {\n     utcTime        UTCTime,\n     generalTime    GeneralizedTime }\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Date}</span><div class='sub-desc'><p>the start date of the validity period.\n@see <a href=\"#!/api/javax.security.cert.X509Certificate-method-checkValidity\" rel=\"javax.security.cert.X509Certificate-method-checkValidity\" class=\"docClass\">checkValidity</a>()</p>\n</div></li></ul></div></div></div><div id='method-getPublicKey' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/javax.security.cert.Certificate' rel='javax.security.cert.Certificate' class='defined-in docClass'>javax.security.cert.Certificate</a><br/><a href='source/Certificate.html#javax-security-cert-Certificate-method-getPublicKey' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.Certificate-method-getPublicKey' class='name expandable'>getPublicKey</a>( <span class='pre'></span> ) : Object {java.security.PublicKey}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the public key from this certificate. ...</div><div class='long'><p>Gets the public key from this certificate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.PublicKey}</span><div class='sub-desc'><p>the public key.</p>\n</div></li></ul></div></div></div><div id='method-getSerialNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getSerialNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getSerialNumber' class='name expandable'>getSerialNumber</a>( <span class='pre'></span> ) : Object {java.math.BigInteger}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code serialNumber} value from the certificate. ...</div><div class='long'><p>Gets the {@code serialNumber} value from the certificate.\n The serial number is an integer assigned by the certification\n authority to each certificate. It must be unique for each\n certificate issued by a given CA (i.e., the issuer name and\n serial number identify a unique certificate).\n The ASN.1 definition for this is:</p>\n\n<pre> serialNumber     CertificateSerialNumber\n\n CertificateSerialNumber  ::=  INTEGER\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.math.BigInteger}</span><div class='sub-desc'><p>the serial number.</p>\n</div></li></ul></div></div></div><div id='method-getSigAlgName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getSigAlgName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getSigAlgName' class='name expandable'>getSigAlgName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the signature algorithm name for the certificate\n signature algorithm. ...</div><div class='long'><p>Gets the signature algorithm name for the certificate\n signature algorithm. An example is the string \"SHA-1/DSA\".\n The ASN.1 definition for this is:</p>\n\n<pre> signatureAlgorithm   AlgorithmIdentifier\n\n AlgorithmIdentifier  ::=  SEQUENCE  {\n     algorithm               OBJECT IDENTIFIER,\n     parameters              ANY DEFINED BY algorithm OPTIONAL  }\n                             -- contains a value of the type\n                             -- registered for use with the\n                             -- algorithm object identifier value\n </pre>\n\n\n<p> <p>The algorithm name is determined from the {@code algorithm}\n OID string.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the signature algorithm name.</p>\n</div></li></ul></div></div></div><div id='method-getSigAlgOID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getSigAlgOID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getSigAlgOID' class='name expandable'>getSigAlgOID</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the signature algorithm OID string from the certificate. ...</div><div class='long'><p>Gets the signature algorithm OID string from the certificate.\n An OID is represented by a set of positive whole numbers separated\n by periods.\n For example, the string \"1.2.840.10040.4.3\" identifies the SHA-1\n with DSA signature algorithm, as per the PKIX part I.</p>\n\n<p> <p>See getSigAlgName for\n relevant ASN.1 definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the signature algorithm OID string.</p>\n</div></li></ul></div></div></div><div id='method-getSigAlgParams' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getSigAlgParams' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getSigAlgParams' class='name expandable'>getSigAlgParams</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the DER-encoded signature algorithm parameters from this\n certificate's signature algorithm. ...</div><div class='long'><p>Gets the DER-encoded signature algorithm parameters from this\n certificate's signature algorithm. In most cases, the signature\n algorithm parameters are null; the parameters are usually\n supplied with the certificate's public key.</p>\n\n<p> <p>See getSigAlgName for\n relevant ASN.1 definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the DER-encoded signature algorithm parameters, or\n         null if no parameters are present.</p>\n</div></li></ul></div></div></div><div id='method-getSubjectDN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getSubjectDN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getSubjectDN' class='name expandable'>getSubjectDN</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code subject} (subject distinguished name) value\n from the certificate. ...</div><div class='long'><p>Gets the {@code subject} (subject distinguished name) value\n from the certificate.\n The ASN.1 definition for this is:</p>\n\n<pre> subject    Name\n </pre>\n\n\n<p> <p>See getIssuerDN for {@code Name}\n and other relevant definitions.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>a Principal whose name is the subject name.\n@see <a href=\"#!/api/javax.security.cert.X509Certificate-method-getIssuerDN\" rel=\"javax.security.cert.X509Certificate-method-getIssuerDN\" class=\"docClass\">getIssuerDN</a>()</p>\n</div></li></ul></div></div></div><div id='method-getVersion' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.security.cert.X509Certificate'>javax.security.cert.X509Certificate</span><br/><a href='source/X509Certificate.html#javax-security-cert-X509Certificate-method-getVersion' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.X509Certificate-method-getVersion' class='name expandable'>getVersion</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the {@code version} (version number) value from the\n certificate. ...</div><div class='long'><p>Gets the {@code version} (version number) value from the\n certificate. The ASN.1 definition for this is:</p>\n\n<pre> version         [0]  EXPLICIT Version DEFAULT v1\n\n Version  ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\n </pre>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the version number from the ASN.1 encoding, i.e. 0, 1 or 2.</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/javax.security.cert.Certificate' rel='javax.security.cert.Certificate' class='defined-in docClass'>javax.security.cert.Certificate</a><br/><a href='source/Certificate.html#javax-security-cert-Certificate-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.Certificate-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a hashcode value for this certificate from its\n encoded form. ...</div><div class='long'><p>Returns a hashcode value for this certificate from its\n encoded form.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the hashcode value.</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/javax.security.cert.Certificate' rel='javax.security.cert.Certificate' class='defined-in docClass'>javax.security.cert.Certificate</a><br/><a href='source/Certificate.html#javax-security-cert-Certificate-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.Certificate-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string representation of this certificate. ...</div><div class='long'><p>Returns a string representation of this certificate.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this certificate.</p>\n</div></li></ul></div></div></div><div id='method-verify' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/javax.security.cert.Certificate' rel='javax.security.cert.Certificate' class='defined-in docClass'>javax.security.cert.Certificate</a><br/><a href='source/Certificate.html#javax-security-cert-Certificate-method-verify' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.security.cert.Certificate-method-verify' class='name expandable'>verify</a>( <span class='pre'>key, sigProvider</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Verifies that this certificate was signed using the\n private key that corresponds to the specified public key. ...</div><div class='long'><p>Verifies that this certificate was signed using the\n private key that corresponds to the specified public key.\n This method uses the signature verification engine\n supplied by the specified provider.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>key</span> : Object {PublicKey}<div class='sub-desc'><p>the PublicKey used to carry out the verification.</p>\n</div></li><li><span class='pre'>sigProvider</span> : String<div class='sub-desc'><p>the name of the signature provider.\n@exception NoSuchAlgorithmException on unsupported signature algorithms.\n@exception InvalidKeyException on incorrect key.\n@exception NoSuchProviderException on incorrect provider.\n@exception SignatureException on signature errors.\n@exception CertificateException on encoding errors.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});