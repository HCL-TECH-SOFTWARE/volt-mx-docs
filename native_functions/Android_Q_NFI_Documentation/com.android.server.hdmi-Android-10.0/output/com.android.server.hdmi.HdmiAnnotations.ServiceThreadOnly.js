Ext.data.JsonP.com_android_server_hdmi_HdmiAnnotations_ServiceThreadOnly({"tagname":"class","name":"com.android.server.hdmi.HdmiAnnotations.ServiceThreadOnly","autodetected":{},"files":[{"filename":"ServiceThreadOnly.js","href":"ServiceThreadOnly.html#com-android-server-hdmi-HdmiAnnotations-ServiceThreadOnly"}],"members":[],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.hdmi.HdmiAnnotations.ServiceThreadOnly","short_doc":"implements java.lang.annotation.Annotation\n\n Annotation type to used to mark a method which should be run on service ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ServiceThreadOnly.html#com-android-server-hdmi-HdmiAnnotations-ServiceThreadOnly' target='_blank'>ServiceThreadOnly.js</a></div></pre><div class='doc-contents'><p>implements java.lang.annotation.Annotation</p>\n\n<p> Annotation type to used to mark a method which should be run on service thread.\n This annotation should go with {@code assertRunOnServiceThread} used to verify\n whether it's called from service thread.</p>\n</div><div class='members'></div></div>","meta":{}});