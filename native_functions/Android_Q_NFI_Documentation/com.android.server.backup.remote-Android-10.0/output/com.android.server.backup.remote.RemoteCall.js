Ext.data.JsonP.com_android_server_backup_remote_RemoteCall({"tagname":"class","name":"com.android.server.backup.remote.RemoteCall","autodetected":{},"files":[{"filename":"RemoteCall.js","href":"RemoteCall.html#com-android-server-backup-remote-RemoteCall"}],"extends":"java.lang.Object","members":[{"name":"call","tagname":"method","owner":"com.android.server.backup.remote.RemoteCall","id":"method-call","meta":{}},{"name":"cancel","tagname":"method","owner":"com.android.server.backup.remote.RemoteCall","id":"method-cancel","meta":{}},{"name":"execute","tagname":"method","owner":"com.android.server.backup.remote.RemoteCall","id":"method-execute","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-com.android.server.backup.remote.RemoteCall","short_doc":"A wrapper that encapsulates an outbound call from the system process, converting an asynchronous\n operation into a sy...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>com.android.server.backup.remote.RemoteCall</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RemoteCall.html#com-android-server-backup-remote-RemoteCall' target='_blank'>RemoteCall.js</a></div></pre><div class='doc-contents'><p>A wrapper that encapsulates an outbound call from the system process, converting an asynchronous\n operation into a synchronous operation with time-out and cancellation built-in. This was built to\n be able to call one-way binder methods that accept a IBackupCallback as a callback and\n handle the result inline.</p>\n\n<p> <p>Create one <a href=\"#!/api/com.android.server.backup.remote.RemoteCall\" rel=\"com.android.server.backup.remote.RemoteCall\" class=\"docClass\">com.android.server.backup.remote.RemoteCall</a> object providing the actual call in the form of a <a href=\"#!/api/com.android.server.backup.remote.RemoteCallable\" rel=\"com.android.server.backup.remote.RemoteCallable\" class=\"docClass\">com.android.server.backup.remote.RemoteCallable</a> that accepts a IBackupCallback. Perform the call by calling <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-call\" rel=\"com.android.server.backup.remote.RemoteCall-method-call\" class=\"docClass\">call</a>(), at which point <a href=\"#!/api/com.android.server.backup.remote.RemoteCall\" rel=\"com.android.server.backup.remote.RemoteCall\" class=\"docClass\">com.android.server.backup.remote.RemoteCall</a> will execute the callable providing an implementation\n of the callback that communicates the result back to this object. Even if the call returns\n straight away (which is the case for one-way methods) the method will only return when either the\n callback is called, time-out happens, or someone calls <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-cancel\" rel=\"com.android.server.backup.remote.RemoteCall-method-cancel\" class=\"docClass\">cancel</a>().</p>\n\n<p> <p>This class was designed to have the method <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-call\" rel=\"com.android.server.backup.remote.RemoteCall-method-call\" class=\"docClass\">call</a>() called only once.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-call' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.backup.remote.RemoteCall'>com.android.server.backup.remote.RemoteCall</span><br/><a href='source/RemoteCall.html#com-android-server-backup-remote-RemoteCall-method-call' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.backup.remote.RemoteCall-method-call' class='name expandable'>call</a>( <span class='pre'></span> ) : Object {com.android.server.backup.remote.RemoteResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Kicks-off the callable provided in the constructor and blocks before returning, waiting for\n the first of these to ha...</div><div class='long'><p>Kicks-off the callable provided in the constructor and blocks before returning, waiting for\n the first of these to happen:</p>\n\n<p> <ul>\n   <li>The callback passed to <a href=\"#!/api/com.android.server.backup.remote.RemoteCallable\" rel=\"com.android.server.backup.remote.RemoteCallable\" class=\"docClass\">com.android.server.backup.remote.RemoteCallable</a> is called with the result. We return a\n       present <a href=\"#!/api/com.android.server.backup.remote.RemoteResult\" rel=\"com.android.server.backup.remote.RemoteResult\" class=\"docClass\">com.android.server.backup.remote.RemoteResult</a> with the result.\n   <li>Time-out happens. We return <a href=\"#!/api/com.android.server.backup.remote.RemoteResult-property-FAILED_TIMED_OUT\" rel=\"com.android.server.backup.remote.RemoteResult-property-FAILED_TIMED_OUT\" class=\"docClass\">com.android.server.backup.remote.RemoteResult.FAILED_TIMED_OUT</a>.\n   <li>Someone calls <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-cancel\" rel=\"com.android.server.backup.remote.RemoteCall-method-cancel\" class=\"docClass\">cancel</a>() on this object. We return <a href=\"#!/api/com.android.server.backup.remote.RemoteResult-property-FAILED_CANCELLED\" rel=\"com.android.server.backup.remote.RemoteResult-property-FAILED_CANCELLED\" class=\"docClass\">com.android.server.backup.remote.RemoteResult.FAILED_CANCELLED</a>.\n </li></li></li></ul></p>\n\n<p> <p>This method can't be called from the main thread and was designed to be called only once.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {com.android.server.backup.remote.RemoteResult}</span><div class='sub-desc'><p>A RemoteResult with the result of the operation.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>RemoteException If the callable throws it.</p>\n</div></li></ul></div></div></div><div id='method-cancel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.backup.remote.RemoteCall'>com.android.server.backup.remote.RemoteCall</span><br/><a href='source/RemoteCall.html#com-android-server-backup-remote-RemoteCall-method-cancel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.backup.remote.RemoteCall-method-cancel' class='name expandable'>cancel</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attempts to cancel the operation. ...</div><div class='long'><p>Attempts to cancel the operation. It will only be successful if executed before the callback\n is called and before the time-out.</p>\n\n<p> <p>This method can be called from any thread, any time, including the same thread that called\n <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-call\" rel=\"com.android.server.backup.remote.RemoteCall-method-call\" class=\"docClass\">call</a>() (which is obviously only possible if the former is called before the latter).</p>\n</div></div></div><div id='method-execute' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='com.android.server.backup.remote.RemoteCall'>com.android.server.backup.remote.RemoteCall</span><br/><a href='source/RemoteCall.html#com-android-server-backup-remote-RemoteCall-method-execute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/com.android.server.backup.remote.RemoteCall-method-execute' class='name expandable'>execute</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a com.android.server.backup.remote.RemoteCall object with {@code callable} and {@code timeoutMs} and calls\n c...</div><div class='long'><p>Creates a <a href=\"#!/api/com.android.server.backup.remote.RemoteCall\" rel=\"com.android.server.backup.remote.RemoteCall\" class=\"docClass\">com.android.server.backup.remote.RemoteCall</a> object with {@code callable} and {@code timeoutMs} and calls\n <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-call\" rel=\"com.android.server.backup.remote.RemoteCall-method-call\" class=\"docClass\">call</a>() on it immediately after.</p>\n\n<p> <p>Note that you won't be able to cancel the call, to do that construct an object regularly\n first, then use <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-call\" rel=\"com.android.server.backup.remote.RemoteCall-method-call\" class=\"docClass\">call</a>().\n@see #RemoteCall(RemoteCallable, long)\n@see <a href=\"#!/api/com.android.server.backup.remote.RemoteCall-method-call\" rel=\"com.android.server.backup.remote.RemoteCall-method-call\" class=\"docClass\">call</a>()</p>\n</div></div></div></div></div></div></div>","meta":{}});