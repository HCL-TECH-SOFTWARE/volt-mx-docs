Ext.data.JsonP.java_lang_reflect_UndeclaredThrowableException({"tagname":"class","name":"java.lang.reflect.UndeclaredThrowableException","autodetected":{},"files":[{"filename":"UndeclaredThrowableException.js","href":"UndeclaredThrowableException.html#java-lang-reflect-UndeclaredThrowableException"}],"extends":"java.lang.RuntimeException","author":[{"tagname":"author","name":"Peter Jones","email":null}],"since":"1.3","members":[{"name":"getCause","tagname":"method","owner":"java.lang.reflect.UndeclaredThrowableException","id":"method-getCause","meta":{}},{"name":"getUndeclaredThrowable","tagname":"method","owner":"java.lang.reflect.UndeclaredThrowableException","id":"method-getUndeclaredThrowable","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.lang.reflect.UndeclaredThrowableException","short_doc":"Thrown by a method invocation on a proxy instance if its invocation\n handler's invoke method throws a\n checked except...","classIcon":"icon-class","superclasses":["java.lang.RuntimeException"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.RuntimeException<div class='subclass '><strong>java.lang.reflect.UndeclaredThrowableException</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/UndeclaredThrowableException.html#java-lang-reflect-UndeclaredThrowableException' target='_blank'>UndeclaredThrowableException.js</a></div></pre><div class='doc-contents'><p>Thrown by a method invocation on a proxy instance if its invocation\n handler's <a href=\"#!/api/java.lang.reflect.InvocationHandler-method-invoke\" rel=\"java.lang.reflect.InvocationHandler-method-invoke\" class=\"docClass\">invoke</a> method throws a\n checked exception (a {@code Throwable} that is not assignable\n to {@code RuntimeException} or {@code Error}) that\n is not assignable to any of the exception types declared in the\n {@code throws} clause of the method that was invoked on the\n proxy instance and dispatched to the invocation handler.</p>\n\n<p> <p>An {@code UndeclaredThrowableException} instance contains\n the undeclared checked exception that was thrown by the invocation\n handler, and it can be retrieved with the\n {@code getUndeclaredThrowable()} method.\n {@code UndeclaredThrowableException} extends\n {@code RuntimeException}, so it is an unchecked exception\n that wraps a checked exception.</p>\n\n<p> <p>As of release 1.4, this exception has been retrofitted to\n conform to the general purpose exception-chaining mechanism.  The\n \"undeclared checked exception that was thrown by the invocation\n handler\" that may be provided at construction time and accessed via\n the <a href=\"#!/api/java.lang.reflect.UndeclaredThrowableException-method-getUndeclaredThrowable\" rel=\"java.lang.reflect.UndeclaredThrowableException-method-getUndeclaredThrowable\" class=\"docClass\">getUndeclaredThrowable</a>() method is now known as the\n <i>cause</i>, and may be accessed via the Throwable.getCause() method, as well as the aforementioned \"legacy\n method.\"</p>\n\n<p> @see         InvocationHandler</p>\n        <p>Available since: <b>1.3</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getCause' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.reflect.UndeclaredThrowableException'>java.lang.reflect.UndeclaredThrowableException</span><br/><a href='source/UndeclaredThrowableException.html#java-lang-reflect-UndeclaredThrowableException-method-getCause' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.reflect.UndeclaredThrowableException-method-getCause' class='name expandable'>getCause</a>( <span class='pre'></span> ) : Object {java.lang.Throwable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the cause of this exception (the {@code Throwable}\n instance wrapped in this {@code UndeclaredThrowableExcept...</div><div class='long'><p>Returns the cause of this exception (the {@code Throwable}\n instance wrapped in this {@code UndeclaredThrowableException},\n which may be {@code null}).</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Throwable}</span><div class='sub-desc'><p>the cause of this exception.</p>\n</div></li></ul></div></div></div><div id='method-getUndeclaredThrowable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.lang.reflect.UndeclaredThrowableException'>java.lang.reflect.UndeclaredThrowableException</span><br/><a href='source/UndeclaredThrowableException.html#java-lang-reflect-UndeclaredThrowableException-method-getUndeclaredThrowable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.lang.reflect.UndeclaredThrowableException-method-getUndeclaredThrowable' class='name expandable'>getUndeclaredThrowable</a>( <span class='pre'></span> ) : Object {java.lang.Throwable}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the {@code Throwable} instance wrapped in this\n {@code UndeclaredThrowableException}, which may be {@code null}. ...</div><div class='long'><p>Returns the {@code Throwable} instance wrapped in this\n {@code UndeclaredThrowableException}, which may be {@code null}.</p>\n\n<p> <p>This method predates the general-purpose exception chaining facility.\n The Throwable.getCause() method is now the preferred means of\n obtaining this information.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Throwable}</span><div class='sub-desc'><p>the undeclared checked exception that was thrown</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});