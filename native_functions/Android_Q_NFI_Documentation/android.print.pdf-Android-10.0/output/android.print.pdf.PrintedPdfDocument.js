Ext.data.JsonP.android_print_pdf_PrintedPdfDocument({"tagname":"class","name":"android.print.pdf.PrintedPdfDocument","autodetected":{},"files":[{"filename":"PrintedPdfDocument.js","href":"PrintedPdfDocument.html#android-print-pdf-PrintedPdfDocument"}],"extends":"android.graphics.pdf.PdfDocument","members":[{"name":"getPageContentRect","tagname":"method","owner":"android.print.pdf.PrintedPdfDocument","id":"method-getPageContentRect","meta":{}},{"name":"getPageHeight","tagname":"method","owner":"android.print.pdf.PrintedPdfDocument","id":"method-getPageHeight","meta":{}},{"name":"getPageWidth","tagname":"method","owner":"android.print.pdf.PrintedPdfDocument","id":"method-getPageWidth","meta":{}},{"name":"startPage","tagname":"method","owner":"android.print.pdf.PrintedPdfDocument","id":"method-startPage","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.print.pdf.PrintedPdfDocument","short_doc":"This class is a helper for creating a PDF file for given print attributes. ...","classIcon":"icon-class","superclasses":["android.graphics.pdf.PdfDocument"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.graphics.pdf.PdfDocument<div class='subclass '><strong>android.print.pdf.PrintedPdfDocument</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/PrintedPdfDocument.html#android-print-pdf-PrintedPdfDocument' target='_blank'>PrintedPdfDocument.js</a></div></pre><div class='doc-contents'><p>This class is a helper for creating a PDF file for given print attributes. It is useful for\n implementing printing via the native Android graphics APIs.\n <p>\n This class computes the page width, page height, and content rectangle from the provided print\n attributes and these precomputed values can be accessed via <a href=\"#!/api/android.print.pdf.PrintedPdfDocument-method-getPageWidth\" rel=\"android.print.pdf.PrintedPdfDocument-method-getPageWidth\" class=\"docClass\">getPageWidth</a>(),\n <a href=\"#!/api/android.print.pdf.PrintedPdfDocument-method-getPageHeight\" rel=\"android.print.pdf.PrintedPdfDocument-method-getPageHeight\" class=\"docClass\">getPageHeight</a>(), and <a href=\"#!/api/android.print.pdf.PrintedPdfDocument-method-getPageContentRect\" rel=\"android.print.pdf.PrintedPdfDocument-method-getPageContentRect\" class=\"docClass\">getPageContentRect</a>(), respectively. The\n <a href=\"#!/api/android.print.pdf.PrintedPdfDocument-method-startPage\" rel=\"android.print.pdf.PrintedPdfDocument-method-startPage\" class=\"docClass\">startPage</a>(int) methods creates pages whose\n PageInfo is initialized with the precomputed\n values for width, height, and content rectangle.\n <p>\n A typical use of the APIs looks like this:\n </p></p>\n\n<pre> // open a new document\n PrintedPdfDocument document = new PrintedPdfDocument(context,\n         printAttributes);\n\n // start a page\n Page page = document.startPage(0);\n\n // draw something on the page\n View content = getContentView();\n content.draw(page.getCanvas());\n\n // finish the page\n document.finishPage(page);\n . . .\n // add more pages\n . . .\n // write the document content\n document.writeTo(getOutputStream());\n\n //close the document\n document.close();\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getPageContentRect' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.print.pdf.PrintedPdfDocument'>android.print.pdf.PrintedPdfDocument</span><br/><a href='source/PrintedPdfDocument.html#android-print-pdf-PrintedPdfDocument-method-getPageContentRect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.print.pdf.PrintedPdfDocument-method-getPageContentRect' class='name expandable'>getPageContentRect</a>( <span class='pre'></span> ) : Object {android.graphics.Rect}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the content rectangle. ...</div><div class='long'><p>Gets the content rectangle. This is the area of the page that\n contains printed data and is relative to the page top left.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Rect}</span><div class='sub-desc'><p>The content rectangle.</p>\n</div></li></ul></div></div></div><div id='method-getPageHeight' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.print.pdf.PrintedPdfDocument'>android.print.pdf.PrintedPdfDocument</span><br/><a href='source/PrintedPdfDocument.html#android-print-pdf-PrintedPdfDocument-method-getPageHeight' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.print.pdf.PrintedPdfDocument-method-getPageHeight' class='name expandable'>getPageHeight</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the page height. ...</div><div class='long'><p>Gets the page height.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The page height in PostScript points (1/72th of an inch).</p>\n</div></li></ul></div></div></div><div id='method-getPageWidth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.print.pdf.PrintedPdfDocument'>android.print.pdf.PrintedPdfDocument</span><br/><a href='source/PrintedPdfDocument.html#android-print-pdf-PrintedPdfDocument-method-getPageWidth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.print.pdf.PrintedPdfDocument-method-getPageWidth' class='name expandable'>getPageWidth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the page width. ...</div><div class='long'><p>Gets the page width.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The page width in PostScript points (1/72th of an inch).</p>\n</div></li></ul></div></div></div><div id='method-startPage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.print.pdf.PrintedPdfDocument'>android.print.pdf.PrintedPdfDocument</span><br/><a href='source/PrintedPdfDocument.html#android-print-pdf-PrintedPdfDocument-method-startPage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.print.pdf.PrintedPdfDocument-method-startPage' class='name expandable'>startPage</a>( <span class='pre'>pageNumber</span> ) : Object {android.graphics.pdf.PdfDocument.Page}<span class=\"signature\"></span></div><div class='description'><div class='short'>Starts a new page. ...</div><div class='long'><p>Starts a new page. The page is created using width, height and content rectangle computed\n from the print attributes passed in the constructor and the given page number to create an\n appropriate PageInfo.\n <p>\n After the page is created you can draw arbitrary content on the page's canvas which you can\n get by calling Page.getCanvas().\n After you are done drawing the content you should finish the page by calling\n finishPage(Page). After the page is finished you should no longer access the page or\n its canvas.\n </p>\n <p>\n <strong>Note:</strong> Do not call this method after close(). Also do not call this\n method if the last page returned by this method is not finished by calling\n finishPage(Page).\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>pageNumber</span> : Number<div class='sub-desc'><p>The page number. Must be a non negative.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.pdf.PdfDocument.Page}</span><div class='sub-desc'><p>A blank page.\n@see #finishPage(Page)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});