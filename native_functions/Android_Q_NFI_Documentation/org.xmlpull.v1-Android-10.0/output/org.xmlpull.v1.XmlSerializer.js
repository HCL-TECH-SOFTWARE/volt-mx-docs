Ext.data.JsonP.org_xmlpull_v1_XmlSerializer({"tagname":"class","name":"org.xmlpull.v1.XmlSerializer","autodetected":{},"files":[{"filename":"XmlSerializer.js","href":"XmlSerializer.html#org-xmlpull-v1-XmlSerializer"}],"members":[{"name":"attribute","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-attribute","meta":{}},{"name":"cdsect","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-cdsect","meta":{}},{"name":"comment","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-comment","meta":{}},{"name":"docdecl","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-docdecl","meta":{}},{"name":"endDocument","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-endDocument","meta":{}},{"name":"endTag","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-endTag","meta":{}},{"name":"entityRef","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-entityRef","meta":{}},{"name":"flush","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-flush","meta":{}},{"name":"getDepth","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-getDepth","meta":{}},{"name":"getFeature","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-getFeature","meta":{}},{"name":"getName","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-getName","meta":{}},{"name":"getNamespace","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-getNamespace","meta":{}},{"name":"getPrefix","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-getPrefix","meta":{}},{"name":"getProperty","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-getProperty","meta":{}},{"name":"ignorableWhitespace","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-ignorableWhitespace","meta":{}},{"name":"processingInstruction","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-processingInstruction","meta":{}},{"name":"setFeature","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-setFeature","meta":{}},{"name":"setOutput","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-setOutput","meta":{}},{"name":"setPrefix","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-setPrefix","meta":{}},{"name":"setProperty","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-setProperty","meta":{}},{"name":"startDocument","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-startDocument","meta":{}},{"name":"startTag","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-startTag","meta":{}},{"name":"text","tagname":"method","owner":"org.xmlpull.v1.XmlSerializer","id":"method-text","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-org.xmlpull.v1.XmlSerializer","short_doc":"Define an interface to serialization of XML Infoset. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer' target='_blank'>XmlSerializer.js</a></div></pre><div class='doc-contents'><p>Define an interface to serialization of XML Infoset.\n This interface abstracts away if serialized XML is XML 1.0 compatible text or\n other formats of XML 1.0 serializations (such as binary XML for example with WBXML).</p>\n\n<p> <p><b>PLEASE NOTE:</b> This interface will be part of XmlPull 1.2 API.\n It is included as basis for discussion. It may change in any way.</p>\n\n<p> <p>Exceptions that may be thrown are: IOException or runtime exception\n (more runtime exceptions can be thrown but are not declared and as such\n have no semantics defined for this interface):\n <ul>\n <li><em>IllegalArgumentException</em> - for almost all methods to signal that\n     argument is illegal\n <li><em>IllegalStateException</em> - to signal that call has good arguments but\n     is not expected here (violation of contract) and for features/properties\n    when requesting setting unimplemented feature/property\n    (UnsupportedOperationException would be better but it is not in MIDP)\n  </li></li></ul></p>\n\n<p> <p><b>NOTE:</b> writing  CDSECT, ENTITY_REF, IGNORABLE_WHITESPACE,\n  PROCESSING_INSTRUCTION, COMMENT, and DOCDECL in some implementations\n may not be supported (for example when serializing to WBXML).\n In such case IllegalStateException will be thrown and it is recommended\n to use an optional feature to signal that implementation is not\n supporting this kind of output.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-attribute' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-attribute' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-attribute' class='name expandable'>attribute</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write an attribute. ...</div><div class='long'><p>Write an attribute. Calls to attribute() MUST follow a call to\n startTag() immediately. If there is no prefix defined for the\n given namespace, a prefix will be defined automatically.\n If namespace is null or empty string\n no namespace prefix is printed but just name.</p>\n</div></div></div><div id='method-cdsect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-cdsect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-cdsect' class='name expandable'>cdsect</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-comment' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-comment' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-comment' class='name expandable'>comment</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-docdecl' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-docdecl' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-docdecl' class='name expandable'>docdecl</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-endDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-endDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-endDocument' class='name expandable'>endDocument</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Finish writing. ...</div><div class='long'><p>Finish writing. All unclosed start tags will be closed and output\n will be flushed. After calling this method no more output can be\n serialized until next call to setOutput()</p>\n</div></div></div><div id='method-endTag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-endTag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-endTag' class='name expandable'>endTag</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write end tag. ...</div><div class='long'><p>Write end tag. Repetition of namespace and name is just for avoiding errors.\n <p><b>Background:</b> in kXML endTag had no arguments, and non matching tags were\n  very difficult to find...\n If namespace is null no namespace prefix is printed but just name.\n If namespace is empty string then serializer will make sure that\n default empty namespace is declared (in XML 1.0 xmlns='').</p>\n</div></div></div><div id='method-entityRef' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-entityRef' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-entityRef' class='name expandable'>entityRef</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-flush' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-flush' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-flush' class='name expandable'>flush</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write all pending output to the stream. ...</div><div class='long'><p>Write all pending output to the stream.\n If method startTag() or attribute() was called then start tag is closed (final &gt;)\n before flush() is called on underlying output stream.</p>\n\n<p> <p><b>NOTE:</b> if there is need to close start tag\n (so no more attribute() calls are allowed) but without flushing output\n call method text() with empty string (text(\"\")).</p>\n</div></div></div><div id='method-getDepth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-getDepth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-getDepth' class='name expandable'>getDepth</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current depth of the element. ...</div><div class='long'><p>Returns the current depth of the element.\n Outside the root element, the depth is 0. The\n depth is incremented by 1 when startTag() is called.\n The depth is decremented after the call to endTag()\n event was observed.</p>\n\n<pre> &lt;!-- outside --&gt;     0\n &lt;root&gt;               1\n   sometext                 1\n     &lt;foobar&gt;         2\n     &lt;/foobar&gt;        2\n &lt;/root&gt;              1\n &lt;!-- outside --&gt;     0\n </pre>\n\n</div></div></div><div id='method-getFeature' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-getFeature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-getFeature' class='name expandable'>getFeature</a>( <span class='pre'>name</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the current value of the feature with given name. ...</div><div class='long'><p>Return the current value of the feature with given name.\n <p><strong>NOTE:</strong> unknown properties are <strong>always</strong> returned as null</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of feature to be retrieved.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>The value of named feature.\n@exception IllegalArgumentException if feature string is null</p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the name of the current element as set by startTag(). ...</div><div class='long'><p>Returns the name of the current element as set by startTag().\n It can only be null before first call to startTag()\n or when last endTag() is called to close first startTag().</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>namespace set by startTag() that is currently in scope</p>\n</div></li></ul></div></div></div><div id='method-getNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-getNamespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-getNamespace' class='name expandable'>getNamespace</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the namespace URI of the current element as set by startTag(). ...</div><div class='long'><p>Returns the namespace URI of the current element as set by startTag().</p>\n\n<p> <p><b>NOTE:</b> that means in particular that: <ul>\n <li>if there was startTag(\"\", ...) then getNamespace() returns \"\"\n <li>if there was startTag(null, ...) then getNamespace() returns null\n </li></li></ul></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>namespace set by startTag() that is currently in scope</p>\n</div></li></ul></div></div></div><div id='method-getPrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-getPrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-getPrefix' class='name expandable'>getPrefix</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return namespace that corresponds to given prefix\n If there is no prefix bound to this namespace return null\n but if ...</div><div class='long'><p>Return namespace that corresponds to given prefix\n If there is no prefix bound to this namespace return null\n but if generatePrefix is false then return generated prefix.</p>\n\n<p> <p><b>NOTE:</b> if the prefix is empty string \"\" and default namespace is bound\n to this prefix then empty string (\"\") is returned.</p>\n\n<p> <p><b>NOTE:</b> prefixes \"xml\" and \"xmlns\" are already bound\n   will have values as defined\n <a href=\"http://www.w3.org/TR/REC-xml-names/\">Namespaces in XML specification</a></p>\n</div></div></div><div id='method-getProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-getProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-getProperty' class='name expandable'>getProperty</a>( <span class='pre'>name</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Look up the value of a property. ...</div><div class='long'><p>Look up the value of a property.</p>\n\n<p> The property name is any fully-qualified URI. I\n <p><strong>NOTE:</strong> unknown properties are <string>always returned as null</string></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>The name of property to be retrieved.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>The value of named property.</p>\n</div></li></ul></div></div></div><div id='method-ignorableWhitespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-ignorableWhitespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-ignorableWhitespace' class='name expandable'>ignorableWhitespace</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-processingInstruction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-processingInstruction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-processingInstruction' class='name expandable'>processingInstruction</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setFeature' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-setFeature' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-setFeature' class='name expandable'>setFeature</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set feature identified by name (recommended to be URI for uniqueness). ...</div><div class='long'><p>Set feature identified by name (recommended to be URI for uniqueness).\n Some well known optional features are defined in\n <a href=\"http://www.xmlpull.org/v1/doc/features.html\">\n http://www.xmlpull.org/v1/doc/features.html</a>.</p>\n\n<p> If feature is not recognized or can not be set\n then IllegalStateException MUST be thrown.\n@exception IllegalStateException If the feature is not supported or can not be set</p>\n</div></div></div><div id='method-setOutput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-setOutput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-setOutput' class='name expandable'>setOutput</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the output to the given writer. ...</div><div class='long'><p>Set the output to the given writer.\n <p><b>WARNING</b> no information about encoding is available!</p>\n</div></div></div><div id='method-setPrefix' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-setPrefix' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-setPrefix' class='name expandable'>setPrefix</a>( <span class='pre'>prefix, namespace</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Binds the given prefix to the given namespace. ...</div><div class='long'><p>Binds the given prefix to the given namespace.\n This call is valid for the next element including child elements.\n The prefix and namespace MUST be always declared even if prefix\n is not used in element (startTag() or attribute()) - for XML 1.0\n it must result in declaring <code>xmlns:prefix='namespace'</code>\n (or <code>xmlns:prefix=\"namespace\"</code> depending what character is used\n to quote attribute value).</p>\n\n<p> <p><b>NOTE:</b> this method MUST be called directly before startTag()\n   and if anything but startTag() or setPrefix() is called next there will be exception.\n <p><b>NOTE:</b> prefixes \"xml\" and \"xmlns\" are already bound\n   and can not be redefined see:\n <a href=\"http://www.w3.org/XML/xml-names-19990114-errata#NE05\">Namespaces in XML Errata</a>.\n <p><b>NOTE:</b> to set default namespace use as prefix empty string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>prefix</span> : String<div class='sub-desc'><p>must be not null (or IllegalArgumentException is thrown)</p>\n</div></li><li><span class='pre'>namespace</span> : String<div class='sub-desc'><p>must be not null</p>\n</div></li></ul></div></div></div><div id='method-setProperty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-setProperty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-setProperty' class='name expandable'>setProperty</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Set the value of a property. ...</div><div class='long'><p>Set the value of a property.\n (the property name is recommended to be URI for uniqueness).\n Some well known optional properties are defined in\n <a href=\"http://www.xmlpull.org/v1/doc/properties.html\">\n http://www.xmlpull.org/v1/doc/properties.html</a>.</p>\n\n<p> If property is not recognized or can not be set\n then IllegalStateException MUST be thrown.\n@exception IllegalStateException if the property is not supported or can not be set</p>\n</div></div></div><div id='method-startDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-startDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-startDocument' class='name expandable'>startDocument</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Write &lt;&#63;xml declaration with encoding (if encoding not null)\n and standalone flag (if standalone not null)\n Th...</div><div class='long'><p>Write &lt;&#63;xml declaration with encoding (if encoding not null)\n and standalone flag (if standalone not null)\n This method can only be called just after setOutput.</p>\n</div></div></div><div id='method-startTag' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-startTag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-startTag' class='name expandable'>startTag</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes a start tag with the given namespace and name. ...</div><div class='long'><p>Writes a start tag with the given namespace and name.\n If there is no prefix defined for the given namespace,\n a prefix will be defined automatically.\n The explicit prefixes for namespaces can be established by calling setPrefix()\n immediately before this method.\n If namespace is null no namespace prefix is printed but just name.\n If namespace is empty string then serializer will make sure that\n default empty namespace is declared (in XML 1.0 xmlns='')\n or throw IllegalStateException if default namespace is already bound\n to non-empty string.</p>\n</div></div></div><div id='method-text' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.xmlpull.v1.XmlSerializer'>org.xmlpull.v1.XmlSerializer</span><br/><a href='source/XmlSerializer.html#org-xmlpull-v1-XmlSerializer-method-text' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.xmlpull.v1.XmlSerializer-method-text' class='name expandable'>text</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Writes text, where special XML chars are escaped automatically ...</div><div class='long'><p>Writes text, where special XML chars are escaped automatically</p>\n</div></div></div></div></div></div></div>","meta":{}});