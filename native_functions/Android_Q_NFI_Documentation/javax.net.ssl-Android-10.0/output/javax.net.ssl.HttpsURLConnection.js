Ext.data.JsonP.javax_net_ssl_HttpsURLConnection({"tagname":"class","name":"javax.net.ssl.HttpsURLConnection","autodetected":{},"files":[{"filename":"HttpsURLConnection.js","href":"HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection"}],"extends":"java.net.HttpURLConnection","since":"1.4","members":[{"name":"getCipherSuite","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getCipherSuite","meta":{}},{"name":"getDefaultHostnameVerifier","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getDefaultHostnameVerifier","meta":{}},{"name":"getDefaultSSLSocketFactory","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getDefaultSSLSocketFactory","meta":{}},{"name":"getHostnameVerifier","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getHostnameVerifier","meta":{}},{"name":"getLocalCertificates","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getLocalCertificates","meta":{}},{"name":"getLocalPrincipal","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getLocalPrincipal","meta":{}},{"name":"getPeerPrincipal","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getPeerPrincipal","meta":{}},{"name":"getSSLSocketFactory","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getSSLSocketFactory","meta":{}},{"name":"getServerCertificates","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-getServerCertificates","meta":{}},{"name":"setDefaultHostnameVerifier","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-setDefaultHostnameVerifier","meta":{}},{"name":"setDefaultSSLSocketFactory","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-setDefaultSSLSocketFactory","meta":{}},{"name":"setHostnameVerifier","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-setHostnameVerifier","meta":{}},{"name":"setSSLSocketFactory","tagname":"method","owner":"javax.net.ssl.HttpsURLConnection","id":"method-setSSLSocketFactory","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.net.ssl.HttpsURLConnection","short_doc":"HttpsURLConnection extends HttpURLConnection\n with support for https-specific features. ...","classIcon":"icon-class","superclasses":["java.net.HttpURLConnection"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.net.HttpURLConnection<div class='subclass '><strong>javax.net.ssl.HttpsURLConnection</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection' target='_blank'>HttpsURLConnection.js</a></div></pre><div class='doc-contents'><p><code>HttpsURLConnection</code> extends <code>HttpURLConnection</code>\n with support for https-specific features.\n <P>\n See <A HREF=\"http://www.w3.org/pub/WWW/Protocols/\">\n http://www.w3.org/pub/WWW/Protocols/</A> and\n <A HREF=\"http://www.ietf.org/\"> RFC 2818 </A>\n for more details on the\n https specification.\n <P>\n This class uses <code>HostnameVerifier</code> and\n <code>SSLSocketFactory</code>.\n There are default implementations defined for both classes.\n However, the implementations can be replaced on a per-class (static) or\n per-instance basis.  All new <code>HttpsURLConnection</code>s instances\n will be assigned\n the \"default\" static values at instance creation, but they can be overriden\n by calling the appropriate per-instance set method(s) before\n <code>connect</code>ing.</P></P></p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getCipherSuite' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getCipherSuite' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getCipherSuite' class='name expandable'>getCipherSuite</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the cipher suite in use on this connection. ...</div><div class='long'><p>Returns the cipher suite in use on this connection.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the cipher suite</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this method is called before\n          the connection has been established.</p>\n</div></li></ul></div></div></div><div id='method-getDefaultHostnameVerifier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getDefaultHostnameVerifier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getDefaultHostnameVerifier' class='name expandable'>getDefaultHostnameVerifier</a>( <span class='pre'></span> ) : Object {javax.net.ssl.HostnameVerifier}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the default HostnameVerifier that is inherited\n by new instances of this class. ...</div><div class='long'><p>Gets the default <code>HostnameVerifier</code> that is inherited\n by new instances of this class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.HostnameVerifier}</span><div class='sub-desc'><p>the default host name verifier\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-setDefaultHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-setDefaultHostnameVerifier\" class=\"docClass\">setDefaultHostnameVerifier</a>(HostnameVerifier)</p>\n</div></li></ul></div></div></div><div id='method-getDefaultSSLSocketFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getDefaultSSLSocketFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getDefaultSSLSocketFactory' class='name expandable'>getDefaultSSLSocketFactory</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLSocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the default static SSLSocketFactory that is\n inherited by new instances of this class. ...</div><div class='long'><p>Gets the default static <code>SSLSocketFactory</code> that is\n inherited by new instances of this class.\n <P>\n The socket factories are used when creating sockets for secure\n https URL connections.</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLSocketFactory}</span><div class='sub-desc'><p>the default <code>SSLSocketFactory</code>\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-setDefaultSSLSocketFactory\" rel=\"javax.net.ssl.HttpsURLConnection-method-setDefaultSSLSocketFactory\" class=\"docClass\">setDefaultSSLSocketFactory</a>(SSLSocketFactory)</p>\n</div></li></ul></div></div></div><div id='method-getHostnameVerifier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getHostnameVerifier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getHostnameVerifier' class='name expandable'>getHostnameVerifier</a>( <span class='pre'></span> ) : Object {javax.net.ssl.HostnameVerifier}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the HostnameVerifier in place on this instance. ...</div><div class='long'><p>Gets the <code>HostnameVerifier</code> in place on this instance.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.HostnameVerifier}</span><div class='sub-desc'><p>the host name verifier\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-setHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-setHostnameVerifier\" class=\"docClass\">setHostnameVerifier</a>(HostnameVerifier)\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-setDefaultHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-setDefaultHostnameVerifier\" class=\"docClass\">setDefaultHostnameVerifier</a>(HostnameVerifier)</p>\n</div></li></ul></div></div></div><div id='method-getLocalCertificates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getLocalCertificates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getLocalCertificates' class='name expandable'>getLocalCertificates</a>( <span class='pre'></span> ) : Object {java.security.cert.Certificate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the certificate(s) that were sent to the server during\n handshaking. ...</div><div class='long'><p>Returns the certificate(s) that were sent to the server during\n handshaking.\n <P>\n Note: This method is useful only when using certificate-based\n cipher suites.\n <P>\n When multiple certificates are available for use in a\n handshake, the implementation chooses what it considers the\n \"best\" certificate chain available, and transmits that to\n the other side.  This method allows the caller to know\n which certificate chain was actually sent.</P></P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.cert.Certificate}</span><div class='sub-desc'><p>an ordered array of certificates,\n          with the client's own certificate first followed by any\n          certificate authorities.  If no certificates were sent,\n          then null is returned.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this method is called before\n          the connection has been established.\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getLocalPrincipal\" rel=\"javax.net.ssl.HttpsURLConnection-method-getLocalPrincipal\" class=\"docClass\">getLocalPrincipal</a>()</p>\n</div></li></ul></div></div></div><div id='method-getLocalPrincipal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getLocalPrincipal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getLocalPrincipal' class='name expandable'>getLocalPrincipal</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the principal that was sent to the server during handshaking. ...</div><div class='long'><p>Returns the principal that was sent to the server during handshaking.\n <P>\n Note: Subclasses should override this method. If not overridden, it\n will default to returning the X500Principal of the end-entity certificate\n that was sent to the server for certificate-based ciphersuites or,\n return null for non-certificate based ciphersuites, such as Kerberos.</P></p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>the principal sent to the server. Returns an X500Principal\n of the end-entity certificate for X509-based cipher suites, and\n KerberosPrincipal for Kerberos cipher suites. If no principal was\n sent, then null is returned.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this method is called before\n          the connection has been established.\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getLocalCertificates\" rel=\"javax.net.ssl.HttpsURLConnection-method-getLocalCertificates\" class=\"docClass\">getLocalCertificates</a>()\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getPeerPrincipal\" rel=\"javax.net.ssl.HttpsURLConnection-method-getPeerPrincipal\" class=\"docClass\">getPeerPrincipal</a>()</p>\n</div></li></ul></div></div></div><div id='method-getPeerPrincipal' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getPeerPrincipal' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getPeerPrincipal' class='name expandable'>getPeerPrincipal</a>( <span class='pre'></span> ) : Object {java.security.Principal}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the server's principal which was established as part of\n defining the session. ...</div><div class='long'><p>Returns the server's principal which was established as part of\n defining the session.\n <P>\n Note: Subclasses should override this method. If not overridden, it\n will default to returning the X500Principal of the server's end-entity\n certificate for certificate-based ciphersuites, or throw an\n SSLPeerUnverifiedException for non-certificate based ciphersuites,\n such as Kerberos.</P></p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Principal}</span><div class='sub-desc'><p>the server's principal. Returns an X500Principal of the\n end-entity certiticate for X509-based cipher suites, and\n KerberosPrincipal for Kerberos cipher suites.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SSLPeerUnverifiedException if the peer was not verified</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this method is called before\n          the connection has been established.\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getServerCertificates\" rel=\"javax.net.ssl.HttpsURLConnection-method-getServerCertificates\" class=\"docClass\">getServerCertificates</a>()\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getLocalPrincipal\" rel=\"javax.net.ssl.HttpsURLConnection-method-getLocalPrincipal\" class=\"docClass\">getLocalPrincipal</a>()</p>\n</div></li></ul></div></div></div><div id='method-getSSLSocketFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getSSLSocketFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getSSLSocketFactory' class='name expandable'>getSSLSocketFactory</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLSocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the SSL socket factory to be used when creating sockets\n for secure https URL connections. ...</div><div class='long'><p>Gets the SSL socket factory to be used when creating sockets\n for secure https URL connections.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLSocketFactory}</span><div class='sub-desc'><p>the <code>SSLSocketFactory</code>\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-setSSLSocketFactory\" rel=\"javax.net.ssl.HttpsURLConnection-method-setSSLSocketFactory\" class=\"docClass\">setSSLSocketFactory</a>(SSLSocketFactory)</p>\n</div></li></ul></div></div></div><div id='method-getServerCertificates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-getServerCertificates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-getServerCertificates' class='name expandable'>getServerCertificates</a>( <span class='pre'></span> ) : Object {java.security.cert.Certificate}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the server's certificate chain which was established\n as part of defining the session. ...</div><div class='long'><p>Returns the server's certificate chain which was established\n as part of defining the session.\n <P>\n Note: This method can be used only when using certificate-based\n cipher suites; using it with non-certificate-based cipher suites,\n such as Kerberos, will throw an SSLPeerUnverifiedException.</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.cert.Certificate}</span><div class='sub-desc'><p>an ordered array of server certificates,\n          with the peer's own certificate first followed by\n          any certificate authorities.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SSLPeerUnverifiedException if the peer is not verified.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if this method is called before\n          the connection has been established.\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getPeerPrincipal\" rel=\"javax.net.ssl.HttpsURLConnection-method-getPeerPrincipal\" class=\"docClass\">getPeerPrincipal</a>()</p>\n</div></li></ul></div></div></div><div id='method-setDefaultHostnameVerifier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-setDefaultHostnameVerifier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-setDefaultHostnameVerifier' class='name expandable'>setDefaultHostnameVerifier</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the default HostnameVerifier inherited by a\n new instance of this class. ...</div><div class='long'><p>Sets the default <code>HostnameVerifier</code> inherited by a\n new instance of this class.\n <p>\n Developers are <em>strongly</em> discouraged from changing the default\n {@code HostnameVerifier} as <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getDefaultHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-getDefaultHostnameVerifier\" class=\"docClass\">getDefaultHostnameVerifier</a>() is used by several\n classes for hostname verification on Android.\n <table>\n     <tr>\n         <th>User</th>\n         <th>Effect</th>\n     </tr>\n     <tr>\n         <td>Android's default <a href=\"#!/api/javax.net.ssl.TrustManager\" rel=\"javax.net.ssl.TrustManager\" class=\"docClass\">javax.net.ssl.TrustManager</a>, as used with Android's default\n         <a href=\"#!/api/javax.net.ssl.SSLContext\" rel=\"javax.net.ssl.SSLContext\" class=\"docClass\">javax.net.ssl.SSLContext</a>, <a href=\"#!/api/javax.net.ssl.SSLSocketFactory\" rel=\"javax.net.ssl.SSLSocketFactory\" class=\"docClass\">javax.net.ssl.SSLSocketFactory</a> and <a href=\"#!/api/javax.net.ssl.SSLSocket\" rel=\"javax.net.ssl.SSLSocket\" class=\"docClass\">javax.net.ssl.SSLSocket</a> implementations.\n         </td>\n         <td>The {@code HostnameVerifier} is used to verify the peer's\n         certificate hostname after connecting if {@code\n         SSLParameters.setEndpointIdentificationAlgorithm(\"HTTPS\")} has been called.\n         Instances use the <em>current</em> default {@code HostnameVerifier} at verification\n         time.</td>\n     </tr>\n     <tr>\n         <td>android.net.SSLCertificateSocketFactory</td>\n         <td>The current default {@code HostnameVerifier} is used from various {@code\n         createSocket} methods. See android.net.SSLCertificateSocketFactory for\n         details; for example int).\n         </td>\n     </tr>\n     <tr>\n         <td>Android's default <a href=\"#!/api/javax.net.ssl.HttpsURLConnection\" rel=\"javax.net.ssl.HttpsURLConnection\" class=\"docClass\">javax.net.ssl.HttpsURLConnection</a> implementation.</td>\n         <td>The {@code HostnameVerifier} is used after a successful TLS handshake to verify\n         the URI host against the TLS session server. Instances use the default {@code\n         HostnameVerifier} set <em>when they were created</em> unless overridden with <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-setHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-setHostnameVerifier\" class=\"docClass\">setHostnameVerifier</a>(HostnameVerifier).\n         Android's <code>HttpsURLConnection</code> relies on the {@code HostnameVerifier}\n         for the <em>entire</em> hostname verification step.</td>\n     </tr>\n </table>\n <p>\n If this method is not called, the default <code>HostnameVerifier</code> will check the\n hostname according to RFC 2818.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Object {HostnameVerifier}<div class='sub-desc'><p>the default host name verifier</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the <code>HostnameVerifier</code>\n          parameter is null.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and its\n         <code>checkPermission</code> method does not allow\n         <code>SSLPermission(\"setHostnameVerifier\")</code>\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getDefaultHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-getDefaultHostnameVerifier\" class=\"docClass\">getDefaultHostnameVerifier</a>()</p>\n</div></li></ul></div></div></div><div id='method-setDefaultSSLSocketFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-setDefaultSSLSocketFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-setDefaultSSLSocketFactory' class='name expandable'>setDefaultSSLSocketFactory</a>( <span class='pre'>sf</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the default SSLSocketFactory inherited by new\n instances of this class. ...</div><div class='long'><p>Sets the default <code>SSLSocketFactory</code> inherited by new\n instances of this class.\n <P>\n The socket factories are used when creating sockets for secure\n https URL connections.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sf</span> : Object {SSLSocketFactory}<div class='sub-desc'><p>the default SSL socket factory</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the SSLSocketFactory\n          parameter is null.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and its\n         <code>checkSetFactory</code> method does not allow\n         a socket factory to be specified.\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getDefaultSSLSocketFactory\" rel=\"javax.net.ssl.HttpsURLConnection-method-getDefaultSSLSocketFactory\" class=\"docClass\">getDefaultSSLSocketFactory</a>()</p>\n</div></li></ul></div></div></div><div id='method-setHostnameVerifier' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-setHostnameVerifier' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-setHostnameVerifier' class='name expandable'>setHostnameVerifier</a>( <span class='pre'>v</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the HostnameVerifier for this instance. ...</div><div class='long'><p>Sets the <code>HostnameVerifier</code> for this instance.\n <P>\n New instances of this class inherit the default static hostname\n verifier set by setDefaultHostnameVerifier.  Calls to this method replace\n this object's <code>HostnameVerifier</code>.\n <p>\n Android's <code>HttpsURLConnection</code> relies on the {@code HostnameVerifier}\n for the <em>entire</em> hostname verification step.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>v</span> : Object {HostnameVerifier}<div class='sub-desc'><p>the host name verifier</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the <code>HostnameVerifier</code>\n  parameter is null.\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-getHostnameVerifier\" class=\"docClass\">getHostnameVerifier</a>()\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-setDefaultHostnameVerifier\" rel=\"javax.net.ssl.HttpsURLConnection-method-setDefaultHostnameVerifier\" class=\"docClass\">setDefaultHostnameVerifier</a>(HostnameVerifier)</p>\n</div></li></ul></div></div></div><div id='method-setSSLSocketFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.HttpsURLConnection'>javax.net.ssl.HttpsURLConnection</span><br/><a href='source/HttpsURLConnection.html#javax-net-ssl-HttpsURLConnection-method-setSSLSocketFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.HttpsURLConnection-method-setSSLSocketFactory' class='name expandable'>setSSLSocketFactory</a>( <span class='pre'>sf</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the SSLSocketFactory to be used when this instance\n creates sockets for secure https URL connections. ...</div><div class='long'><p>Sets the <code>SSLSocketFactory</code> to be used when this instance\n creates sockets for secure https URL connections.\n <P>\n New instances of this class inherit the default static\n <code>SSLSocketFactory</code> set by\n setDefaultSSLSocketFactory.  Calls to this method replace\n this object's <code>SSLSocketFactory</code>.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sf</span> : Object {SSLSocketFactory}<div class='sub-desc'><p>the SSL socket factory</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the <code>SSLSocketFactory</code>\n          parameter is null.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and its\n         <code>checkSetFactory</code> method does not allow\n         a socket factory to be specified.\n@see <a href=\"#!/api/javax.net.ssl.HttpsURLConnection-method-getSSLSocketFactory\" rel=\"javax.net.ssl.HttpsURLConnection-method-getSSLSocketFactory\" class=\"docClass\">getSSLSocketFactory</a>()</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});