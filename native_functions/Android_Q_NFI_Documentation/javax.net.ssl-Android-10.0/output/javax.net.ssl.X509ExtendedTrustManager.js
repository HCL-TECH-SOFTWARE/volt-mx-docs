Ext.data.JsonP.javax_net_ssl_X509ExtendedTrustManager({"tagname":"class","name":"javax.net.ssl.X509ExtendedTrustManager","autodetected":{},"files":[{"filename":"X509ExtendedTrustManager.js","href":"X509ExtendedTrustManager.html#javax-net-ssl-X509ExtendedTrustManager"}],"extends":"java.lang.Object","since":"1.7","members":[{"name":"checkClientTrusted","tagname":"method","owner":"javax.net.ssl.X509ExtendedTrustManager","id":"method-checkClientTrusted","meta":{}},{"name":"checkServerTrusted","tagname":"method","owner":"javax.net.ssl.X509ExtendedTrustManager","id":"method-checkServerTrusted","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.net.ssl.X509ExtendedTrustManager","short_doc":"implements javax.net.ssl.X509TrustManager\n\nExtensions to the X509TrustManager interface to support\n SSL/TLS connectio...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.net.ssl.X509ExtendedTrustManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/X509ExtendedTrustManager.html#javax-net-ssl-X509ExtendedTrustManager' target='_blank'>X509ExtendedTrustManager.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/javax.net.ssl.X509TrustManager\" rel=\"javax.net.ssl.X509TrustManager\" class=\"docClass\">javax.net.ssl.X509TrustManager</a></p>\n\n<p>Extensions to the <code>X509TrustManager</code> interface to support\n SSL/TLS connection sensitive trust management.\n <p>\n To prevent man-in-the-middle attacks, hostname checks can be done\n to verify that the hostname in an end-entity certificate matches the\n targeted hostname.  TLS does not require such checks, but some protocols\n over TLS (such as HTTPS) do.  In earlier versions of the JDK, the\n certificate chain checks were done at the SSL/TLS layer, and the hostname\n verification checks were done at the layer over TLS.  This class allows\n for the checking to be done during a single call to this class.\n <p>\n RFC 2830 defines the server identification specification for the \"LDAPS\"\n algorithm. RFC 2818 defines both the server identification and the\n client identification specification for the \"HTTPS\" algorithm.</p>\n\n<p> @see X509TrustManager\n @see HostnameVerifier</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-checkClientTrusted' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.X509ExtendedTrustManager'>javax.net.ssl.X509ExtendedTrustManager</span><br/><a href='source/X509ExtendedTrustManager.html#javax-net-ssl-X509ExtendedTrustManager-method-checkClientTrusted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.X509ExtendedTrustManager-method-checkClientTrusted' class='name expandable'>checkClientTrusted</a>( <span class='pre'>chain, authType, engine</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Given the partial or complete certificate chain provided by the\n peer, build and validate the certificate path based ...</div><div class='long'><p>Given the partial or complete certificate chain provided by the\n peer, build and validate the certificate path based on the\n authentication type and ssl parameters.\n <p>\n The authentication type is determined by the actual certificate\n used. For instance, if RSAPublicKey is used, the authType\n should be \"RSA\". Checking is case-sensitive.\n <p>\n If the <code>engine</code> parameter is available, and the endpoint\n identification algorithm of the <code>SSLParameters</code> is\n non-empty, to prevent man-in-the-middle attacks, the address that\n the <code>engine</code> connected to should be checked against\n the peer's identity presented in the end-entity X509 certificate,\n as specified in the endpoint identification algorithm.\n <p>\n If the <code>engine</code> parameter is available, and the algorithm\n constraints of the <code>SSLParameters</code> is non-null, for every\n certificate in the certification path, fields such as subject public\n key, the signature algorithm, key usage, extended key usage, etc.\n need to conform to the algorithm constraints in place on this engine.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>chain</span> : Object {java.security.cert.X509Certificate[]}<div class='sub-desc'><p>the peer certificate chain</p>\n</div></li><li><span class='pre'>authType</span> : String<div class='sub-desc'><p>the key exchange algorithm used</p>\n</div></li><li><span class='pre'>engine</span> : Object {SSLEngine}<div class='sub-desc'><p>the engine used for this connection. This parameter\n        can be null, which indicates that implementations need not check\n        the ssl parameters</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if null or zero-length array is passed\n        in for the <code>chain</code> parameter or if null or zero-length\n        string is passed in for the <code>authType</code> parameter</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CertificateException if the certificate chain is not trusted\n        by this TrustManager\n@see SSLParameters#getEndpointIdentificationAlgorithm\n@see SSLParameters#setEndpointIdentificationAlgorithm(String)\n@see SSLParameters#getAlgorithmConstraints\n@see SSLParameters#setAlgorithmConstraints(AlgorithmConstraints)</p>\n</div></li></ul></div></div></div><div id='method-checkServerTrusted' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.X509ExtendedTrustManager'>javax.net.ssl.X509ExtendedTrustManager</span><br/><a href='source/X509ExtendedTrustManager.html#javax-net-ssl-X509ExtendedTrustManager-method-checkServerTrusted' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.X509ExtendedTrustManager-method-checkServerTrusted' class='name expandable'>checkServerTrusted</a>( <span class='pre'>chain, authType, engine</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Given the partial or complete certificate chain provided by the\n peer, build and validate the certificate path based ...</div><div class='long'><p>Given the partial or complete certificate chain provided by the\n peer, build and validate the certificate path based on the\n authentication type and ssl parameters.\n <p>\n The authentication type is the key exchange algorithm portion\n of the cipher suites represented as a String, such as \"RSA\",\n \"DHE_DSS\". Note: for some exportable cipher suites, the key\n exchange algorithm is determined at run time during the\n handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5,\n the authType should be RSA_EXPORT when an ephemeral RSA key is\n used for the key exchange, and RSA when the key from the server\n certificate is used. Checking is case-sensitive.\n <p>\n If the <code>engine</code> parameter is available, and the endpoint\n identification algorithm of the <code>SSLParameters</code> is\n non-empty, to prevent man-in-the-middle attacks, the address that\n the <code>engine</code> connected to should be checked against\n the peer's identity presented in the end-entity X509 certificate,\n as specified in the endpoint identification algorithm.\n <p>\n If the <code>engine</code> parameter is available, and the algorithm\n constraints of the <code>SSLParameters</code> is non-null, for every\n certificate in the certification path, fields such as subject public\n key, the signature algorithm, key usage, extended key usage, etc.\n need to conform to the algorithm constraints in place on this engine.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>chain</span> : Object {java.security.cert.X509Certificate[]}<div class='sub-desc'><p>the peer certificate chain</p>\n</div></li><li><span class='pre'>authType</span> : String<div class='sub-desc'><p>the key exchange algorithm used</p>\n</div></li><li><span class='pre'>engine</span> : Object {SSLEngine}<div class='sub-desc'><p>the engine used for this connection. This parameter\n        can be null, which indicates that implementations need not check\n        the ssl parameters</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if null or zero-length array is passed\n        in for the <code>chain</code> parameter or if null or zero-length\n        string is passed in for the <code>authType</code> parameter</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>CertificateException if the certificate chain is not trusted\n        by this TrustManager\n@see SSLParameters#getEndpointIdentificationAlgorithm\n@see SSLParameters#setEndpointIdentificationAlgorithm(String)\n@see SSLParameters#getAlgorithmConstraints\n@see SSLParameters#setAlgorithmConstraints(AlgorithmConstraints)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});