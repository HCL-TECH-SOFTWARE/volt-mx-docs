Ext.data.JsonP.javax_net_ssl_SSLContext({"tagname":"class","name":"javax.net.ssl.SSLContext","autodetected":{},"files":[{"filename":"SSLContext.js","href":"SSLContext.html#javax-net-ssl-SSLContext"}],"extends":"java.lang.Object","since":"1.4","members":[{"name":"createSSLEngine","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-createSSLEngine","meta":{}},{"name":"getClientSessionContext","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getClientSessionContext","meta":{}},{"name":"getDefault","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getDefault","meta":{}},{"name":"getDefaultSSLParameters","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getDefaultSSLParameters","meta":{}},{"name":"getInstance","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getInstance","meta":{}},{"name":"getProtocol","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getProtocol","meta":{}},{"name":"getProvider","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getProvider","meta":{}},{"name":"getServerSessionContext","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getServerSessionContext","meta":{}},{"name":"getServerSocketFactory","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getServerSocketFactory","meta":{}},{"name":"getSocketFactory","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getSocketFactory","meta":{}},{"name":"getSupportedSSLParameters","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-getSupportedSSLParameters","meta":{}},{"name":"init","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-init","meta":{}},{"name":"setDefault","tagname":"method","owner":"javax.net.ssl.SSLContext","id":"method-setDefault","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-javax.net.ssl.SSLContext","short_doc":"Instances of this class represent a secure socket protocol\n implementation which acts as a factory for secure socket\n...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>javax.net.ssl.SSLContext</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SSLContext.html#javax-net-ssl-SSLContext' target='_blank'>SSLContext.js</a></div></pre><div class='doc-contents'><p>Instances of this class represent a secure socket protocol\n implementation which acts as a factory for secure socket\n factories or <code>SSLEngine</code>s. This class is initialized\n with an optional set of key and trust managers and source of\n secure random bytes.</p>\n\n<p> <p> Android provides the following <code>SSLContext</code> protocols:\n <table>\n   <thead>\n     <tr>\n       <th>Algorithm</th>\n       <th>Supported API Levels</th>\n     </tr>\n   </thead>\n   <tbody>\n     <tr>\n       <td>Default</td>\n       <td>10+</td>\n     </tr>\n     <tr>\n       <td>SSL</td>\n       <td>10+</td>\n     </tr>\n     <tr class=\"deprecated\">\n       <td>SSLv3</td>\n       <td>10-25</td>\n     </tr>\n     <tr>\n       <td>TLS</td>\n       <td>1+</td>\n     </tr>\n     <tr>\n       <td>TLSv1</td>\n       <td>10+</td>\n     </tr>\n     <tr>\n       <td>TLSv1.1</td>\n       <td>16+</td>\n     </tr>\n     <tr>\n       <td>TLSv1.2</td>\n       <td>16+</td>\n     </tr>\n     <tr>\n       <td>TLSv1.3</td>\n       <td>29+</td>\n     </tr>\n   </tbody>\n </table></p>\n\n<p> This protocol is described in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext\">\n SSLContext section</a> of the\n Java Cryptography Architecture Standard Algorithm Name Documentation.</p>\n        <p>Available since: <b>1.4</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createSSLEngine' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-createSSLEngine' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-createSSLEngine' class='name expandable'>createSSLEngine</a>( <span class='pre'>peerHost, peerPort</span> ) : Object {javax.net.ssl.SSLEngine}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new SSLEngine using this context using\n advisory peer information. ...</div><div class='long'><p>Creates a new <code>SSLEngine</code> using this context using\n advisory peer information.\n <P>\n Applications using this factory method are providing hints\n for an internal session reuse strategy.\n <P>\n Some cipher suites (such as Kerberos) require remote hostname\n information, in which case peerHost needs to be specified.</P></P></p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>peerHost</span> : String<div class='sub-desc'><p>the non-authoritative name of the host</p>\n</div></li><li><span class='pre'>peerPort</span> : Number<div class='sub-desc'><p>the non-authoritative port</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLEngine}</span><div class='sub-desc'><p>the new <code>SSLEngine</code> object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException if the underlying provider\n          does not implement the operation.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the SSLContextImpl requires\n          initialization and the <code>init()</code> has not been called</p>\n</div></li></ul></div></div></div><div id='method-getClientSessionContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getClientSessionContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getClientSessionContext' class='name expandable'>getClientSessionContext</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLSessionContext}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the client session context, which represents the set of\n SSL sessions available for use during the handshake ...</div><div class='long'><p>Returns the client session context, which represents the set of\n SSL sessions available for use during the handshake phase of\n client-side SSL sockets.\n <P>\n This context may be unavailable in some environments, in which\n case this method returns null. For example, when the underlying\n SSL provider does not provide an implementation of SSLSessionContext\n interface, this method returns null. A non-null session context\n is returned otherwise.</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLSessionContext}</span><div class='sub-desc'><p>client session context bound to this SSL context</p>\n</div></li></ul></div></div></div><div id='method-getDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getDefault' class='name expandable'>getDefault</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLContext}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the default SSL context. ...</div><div class='long'><p>Returns the default SSL context.</p>\n\n<p> <p>If a default context was set using the <a href=\"#!/api/javax.net.ssl.SSLContext-method-setDefault\" rel=\"javax.net.ssl.SSLContext-method-setDefault\" class=\"docClass\">javax.net.ssl.SSLContext.setDefault()</a> method, it is returned. Otherwise, the first\n call of this method triggers the call\n <code>SSLContext.getInstance(\"Default\")</code>.\n If successful, that object is made the default SSL context and returned.</p>\n\n<p> <p>The default context is immediately\n usable and does not require {@linkplain <a href=\"#!/api/javax.net.ssl.SSLContext-method-init\" rel=\"javax.net.ssl.SSLContext-method-init\" class=\"docClass\">init</a> initialization}.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLContext}</span><div class='sub-desc'><p>the default SSL context</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchAlgorithmException if the\n   SSLContext.getInstance() call fails</p>\n</div></li></ul></div></div></div><div id='method-getDefaultSSLParameters' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getDefaultSSLParameters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getDefaultSSLParameters' class='name expandable'>getDefaultSSLParameters</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLParameters}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of the SSLParameters indicating the default\n settings for this SSL context. ...</div><div class='long'><p>Returns a copy of the SSLParameters indicating the default\n settings for this SSL context.</p>\n\n<p> <p>The parameters will always have the ciphersuites and protocols\n arrays set to non-null values.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLParameters}</span><div class='sub-desc'><p>a copy of the SSLParameters object with the default settings</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException if the default SSL parameters\n   could not be obtained.</p>\n</div></li></ul></div></div></div><div id='method-getInstance' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getInstance' class='name expandable'>getInstance</a>( <span class='pre'>protocol, provider</span> ) : Object {javax.net.ssl.SSLContext}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a SSLContext object that implements the\n specified secure socket protocol. ...</div><div class='long'><p>Returns a <code>SSLContext</code> object that implements the\n specified secure socket protocol.</p>\n\n<p> <p> A new SSLContext object encapsulating the\n SSLContextSpi implementation from the specified Provider\n object is returned.  Note that the specified Provider object\n does not have to be registered in the provider list.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>protocol</span> : String<div class='sub-desc'><p>the standard name of the requested protocol.\n          See the SSLContext section in the <a href=\n \"https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#SSLContext\">\n          Java Cryptography Architecture Standard Algorithm Name\n          Documentation</a>\n          for information about standard protocol names.</p>\n</div></li><li><span class='pre'>provider</span> : Object {Provider}<div class='sub-desc'><p>an instance of the provider.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLContext}</span><div class='sub-desc'><p>the new <code>SSLContext</code> object.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NoSuchAlgorithmException if a SSLContextSpi\n          implementation for the specified protocol is not available\n          from the specified Provider object.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if the provider is null.</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if protocol is null.\n@see java.security.Provider</p>\n</div></li></ul></div></div></div><div id='method-getProtocol' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getProtocol' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getProtocol' class='name expandable'>getProtocol</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the protocol name of this SSLContext object. ...</div><div class='long'><p>Returns the protocol name of this <code>SSLContext</code> object.</p>\n\n<p> <p>This is the same name that was specified in one of the\n <code>getInstance</code> calls that created this\n <code>SSLContext</code> object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the protocol name of this <code>SSLContext</code> object.</p>\n</div></li></ul></div></div></div><div id='method-getProvider' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getProvider' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getProvider' class='name expandable'>getProvider</a>( <span class='pre'></span> ) : Object {java.security.Provider}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the provider of this SSLContext object. ...</div><div class='long'><p>Returns the provider of this <code>SSLContext</code> object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.security.Provider}</span><div class='sub-desc'><p>the provider of this <code>SSLContext</code> object</p>\n</div></li></ul></div></div></div><div id='method-getServerSessionContext' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getServerSessionContext' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getServerSessionContext' class='name expandable'>getServerSessionContext</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLSessionContext}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the server session context, which represents the set of\n SSL sessions available for use during the handshake ...</div><div class='long'><p>Returns the server session context, which represents the set of\n SSL sessions available for use during the handshake phase of\n server-side SSL sockets.\n <P>\n This context may be unavailable in some environments, in which\n case this method returns null. For example, when the underlying\n SSL provider does not provide an implementation of SSLSessionContext\n interface, this method returns null. A non-null session context\n is returned otherwise.</P></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLSessionContext}</span><div class='sub-desc'><p>server session context bound to this SSL context</p>\n</div></li></ul></div></div></div><div id='method-getServerSocketFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getServerSocketFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getServerSocketFactory' class='name expandable'>getServerSocketFactory</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLServerSocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a ServerSocketFactory object for\n this context. ...</div><div class='long'><p>Returns a <code>ServerSocketFactory</code> object for\n this context.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLServerSocketFactory}</span><div class='sub-desc'><p>the <code>ServerSocketFactory</code> object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the SSLContextImpl requires\n          initialization and the <code>init()</code> has not been called</p>\n</div></li></ul></div></div></div><div id='method-getSocketFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getSocketFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getSocketFactory' class='name expandable'>getSocketFactory</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLSocketFactory}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a SocketFactory object for this\n context. ...</div><div class='long'><p>Returns a <code>SocketFactory</code> object for this\n context.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLSocketFactory}</span><div class='sub-desc'><p>the <code>SocketFactory</code> object</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the SSLContextImpl requires\n          initialization and the <code>init()</code> has not been called</p>\n</div></li></ul></div></div></div><div id='method-getSupportedSSLParameters' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-getSupportedSSLParameters' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-getSupportedSSLParameters' class='name expandable'>getSupportedSSLParameters</a>( <span class='pre'></span> ) : Object {javax.net.ssl.SSLParameters}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a copy of the SSLParameters indicating the supported\n settings for this SSL context. ...</div><div class='long'><p>Returns a copy of the SSLParameters indicating the supported\n settings for this SSL context.</p>\n\n<p> <p>The parameters will always have the ciphersuites and protocols\n arrays set to non-null values.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {javax.net.ssl.SSLParameters}</span><div class='sub-desc'><p>a copy of the SSLParameters object with the supported\n   settings</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>UnsupportedOperationException if the supported SSL parameters\n   could not be obtained.</p>\n</div></li></ul></div></div></div><div id='method-init' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-init' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-init' class='name expandable'>init</a>( <span class='pre'>km, tm, random</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Initializes this context. ...</div><div class='long'><p>Initializes this context. Either of the first two parameters\n may be null in which case the installed security providers will\n be searched for the highest priority implementation of the\n appropriate factory. Likewise, the secure random parameter may\n be null in which case the default implementation will be used.\n <P>\n Only the first instance of a particular key and/or trust manager\n implementation type in the array is used.  (For example, only\n the first <a href=\"#!/api/javax.net.ssl.X509KeyManager\" rel=\"javax.net.ssl.X509KeyManager\" class=\"docClass\">javax.net.ssl.X509KeyManager</a> in the array will be used.)</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>km</span> : Object {javax.net.ssl.KeyManager[]}<div class='sub-desc'><p>the sources of authentication keys or null</p>\n</div></li><li><span class='pre'>tm</span> : Object {javax.net.ssl.TrustManager[]}<div class='sub-desc'><p>the sources of peer authentication trust decisions or null</p>\n</div></li><li><span class='pre'>random</span> : Object {SecureRandom}<div class='sub-desc'><p>the source of randomness for this generator or null</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>KeyManagementException if this operation fails</p>\n</div></li></ul></div></div></div><div id='method-setDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='javax.net.ssl.SSLContext'>javax.net.ssl.SSLContext</span><br/><a href='source/SSLContext.html#javax-net-ssl-SSLContext-method-setDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/javax.net.ssl.SSLContext-method-setDefault' class='name expandable'>setDefault</a>( <span class='pre'>context</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets the default SSL context. ...</div><div class='long'><p>Sets the default SSL context. It will be returned by subsequent calls\n to <a href=\"#!/api/javax.net.ssl.SSLContext-method-getDefault\" rel=\"javax.net.ssl.SSLContext-method-getDefault\" class=\"docClass\">getDefault</a>. The default context must be immediately usable\n and not require {@linkplain <a href=\"#!/api/javax.net.ssl.SSLContext-method-init\" rel=\"javax.net.ssl.SSLContext-method-init\" class=\"docClass\">init</a> initialization}.\n <p>\n Developers are <em>strongly</em> discouraged from changing the default {@code SSLContext} as\n it is used as the Android default for secure communication by APIs like\n javax.net.ssl.SSLSocketFactory.getDefault(), javax.net.ssl.SSLServerSocketFactory.getDefault() and\n <a href=\"#!/api/javax.net.ssl.HttpsURLConnection\" rel=\"javax.net.ssl.HttpsURLConnection\" class=\"docClass\">javax.net.ssl.HttpsURLConnection</a>.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {SSLContext}<div class='sub-desc'><p>the SSLContext</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NullPointerException if context is null</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException if a security manager exists and its\n          <code>checkPermission</code> method does not allow\n          <code>SSLPermission(\"setDefaultSSLContext\")</code></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});