Ext.data.JsonP.android_net_wifi_WifiManager({"tagname":"class","name":"android.net.wifi.WifiManager","autodetected":{},"files":[{"filename":"WifiManager.js","href":"WifiManager.html#android-net-wifi-WifiManager"}],"extends":"java.lang.Object","members":[{"name":"ACTION_PICK_WIFI_NETWORK","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-ACTION_PICK_WIFI_NETWORK","meta":{}},{"name":"ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE","meta":{}},{"name":"ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION","meta":{}},{"name":"ERROR_AUTHENTICATING","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-ERROR_AUTHENTICATING","meta":{"deprecated":{"text":"<p>This is no longer supported.</p>\n"}}},{"name":"EXTRA_BSSID","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_BSSID","meta":{}},{"name":"EXTRA_NETWORK_INFO","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_NETWORK_INFO","meta":{}},{"name":"EXTRA_NETWORK_SUGGESTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_NETWORK_SUGGESTION","meta":{}},{"name":"EXTRA_NEW_RSSI","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_NEW_RSSI","meta":{}},{"name":"EXTRA_NEW_STATE","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_NEW_STATE","meta":{"deprecated":{"text":"<p>This is no longer supported.</p>\n"}}},{"name":"EXTRA_PREVIOUS_WIFI_STATE","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_PREVIOUS_WIFI_STATE","meta":{}},{"name":"EXTRA_SUPPLICANT_CONNECTED","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_SUPPLICANT_CONNECTED","meta":{"deprecated":{"text":"<p>This is no longer supported.</p>\n"}}},{"name":"EXTRA_SUPPLICANT_ERROR","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_SUPPLICANT_ERROR","meta":{"deprecated":{"text":"<p>This is no longer supported.</p>\n"}}},{"name":"EXTRA_WIFI_INFO","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_WIFI_INFO","meta":{}},{"name":"EXTRA_WIFI_STATE","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-EXTRA_WIFI_STATE","meta":{}},{"name":"NETWORK_IDS_CHANGED_ACTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-NETWORK_IDS_CHANGED_ACTION","meta":{}},{"name":"NETWORK_STATE_CHANGED_ACTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-NETWORK_STATE_CHANGED_ACTION","meta":{}},{"name":"RSSI_CHANGED_ACTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-RSSI_CHANGED_ACTION","meta":{}},{"name":"SCAN_RESULTS_AVAILABLE_ACTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-SCAN_RESULTS_AVAILABLE_ACTION","meta":{}},{"name":"STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_DUPLICATE","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_DUPLICATE","meta":{}},{"name":"STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_EXCEEDS_MAX_PER_APP","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_EXCEEDS_MAX_PER_APP","meta":{}},{"name":"STATUS_NETWORK_SUGGESTIONS_ERROR_APP_DISALLOWED","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-STATUS_NETWORK_SUGGESTIONS_ERROR_APP_DISALLOWED","meta":{}},{"name":"STATUS_NETWORK_SUGGESTIONS_ERROR_INTERNAL","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-STATUS_NETWORK_SUGGESTIONS_ERROR_INTERNAL","meta":{}},{"name":"STATUS_NETWORK_SUGGESTIONS_ERROR_REMOVE_INVALID","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-STATUS_NETWORK_SUGGESTIONS_ERROR_REMOVE_INVALID","meta":{}},{"name":"STATUS_NETWORK_SUGGESTIONS_SUCCESS","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-STATUS_NETWORK_SUGGESTIONS_SUCCESS","meta":{}},{"name":"SUPPLICANT_CONNECTION_CHANGE_ACTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-SUPPLICANT_CONNECTION_CHANGE_ACTION","meta":{"deprecated":{"text":"<p>This is no longer supported.\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_CONNECTED\" rel=\"android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_CONNECTED\" class=\"docClass\">EXTRA_SUPPLICANT_CONNECTED</a></p>\n"}}},{"name":"SUPPLICANT_STATE_CHANGED_ACTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-SUPPLICANT_STATE_CHANGED_ACTION","meta":{"deprecated":{"text":"<p>This is no longer supported.</p>\n"}}},{"name":"WIFI_MODE_FULL","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_MODE_FULL","meta":{"deprecated":{"text":"<p>This API is non-functional and will have no impact.</p>\n"}}},{"name":"WIFI_MODE_FULL_HIGH_PERF","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_MODE_FULL_HIGH_PERF","meta":{}},{"name":"WIFI_MODE_FULL_LOW_LATENCY","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_MODE_FULL_LOW_LATENCY","meta":{}},{"name":"WIFI_MODE_SCAN_ONLY","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_MODE_SCAN_ONLY","meta":{"deprecated":{"text":"<p>This API is non-functional and will have no impact.</p>\n"}}},{"name":"WIFI_STATE_CHANGED_ACTION","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_STATE_CHANGED_ACTION","meta":{}},{"name":"WIFI_STATE_DISABLED","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_STATE_DISABLED","meta":{}},{"name":"WIFI_STATE_DISABLING","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_STATE_DISABLING","meta":{}},{"name":"WIFI_STATE_ENABLED","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_STATE_ENABLED","meta":{}},{"name":"WIFI_STATE_ENABLING","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_STATE_ENABLING","meta":{}},{"name":"WIFI_STATE_UNKNOWN","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WIFI_STATE_UNKNOWN","meta":{}},{"name":"WPS_AUTH_FAILURE","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WPS_AUTH_FAILURE","meta":{"deprecated":{"text":"<p>This is deprecated</p>\n"}}},{"name":"WPS_OVERLAP_ERROR","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WPS_OVERLAP_ERROR","meta":{"deprecated":{"text":"<p>This is deprecated</p>\n"}}},{"name":"WPS_TIMED_OUT","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WPS_TIMED_OUT","meta":{"deprecated":{"text":"<p>This is deprecated</p>\n"}}},{"name":"WPS_TKIP_ONLY_PROHIBITED","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WPS_TKIP_ONLY_PROHIBITED","meta":{"deprecated":{"text":"<p>This is deprecated</p>\n"}}},{"name":"WPS_WEP_PROHIBITED","tagname":"property","owner":"android.net.wifi.WifiManager","id":"property-WPS_WEP_PROHIBITED","meta":{"deprecated":{"text":"<p>This is deprecated</p>\n"}}},{"name":"EXTRA_RESULTS_UPDATED","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-EXTRA_RESULTS_UPDATED","meta":{}},{"name":"addNetwork","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-addNetwork","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return {@code -1}.</p>\n"}}},{"name":"addNetworkSuggestions","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-addNetworkSuggestions","meta":{}},{"name":"addOrUpdatePasspointConfiguration","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-addOrUpdatePasspointConfiguration","meta":{}},{"name":"calculateSignalLevel","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-calculateSignalLevel","meta":{}},{"name":"cancelWps","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-cancelWps","meta":{"deprecated":{"text":"<p>This API is deprecated</p>\n"}}},{"name":"compareSignalLevel","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-compareSignalLevel","meta":{}},{"name":"createMulticastLock","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-createMulticastLock","meta":{}},{"name":"createWifiLock","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-createWifiLock","meta":{"deprecated":{"text":"<p>This API is non-functional.</p>\n"}}},{"name":"disableNetwork","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-disableNetwork","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n"}}},{"name":"disconnect","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-disconnect","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n"}}},{"name":"enableNetwork","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-enableNetwork","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n"}}},{"name":"getConfiguredNetworks","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-getConfiguredNetworks","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will return an empty list,\n except for:\n <ul>\n <li>Device Owner (DO) &amp; Profile Owner (PO) apps will have access to the full list.\n <li>Callers with Carrier privilege will receive a restricted list only containing\n configurations which they created.\n </li></li></ul></p>\n"}}},{"name":"getConnectionInfo","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-getConnectionInfo","meta":{}},{"name":"getDhcpInfo","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-getDhcpInfo","meta":{}},{"name":"getMaxNumberOfNetworkSuggestionsPerApp","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-getMaxNumberOfNetworkSuggestionsPerApp","meta":{}},{"name":"getPasspointConfigurations","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-getPasspointConfigurations","meta":{"deprecated":{"text":"<p>This is no longer supported.</p>\n"}}},{"name":"getScanResults","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-getScanResults","meta":{}},{"name":"getWifiState","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-getWifiState","meta":{}},{"name":"is5GHzBandSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-is5GHzBandSupported","meta":{}},{"name":"isDeviceToApRttSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isDeviceToApRttSupported","meta":{"deprecated":{"text":"<p>Please use android.content.pm.PackageManager.hasSystemFeature(String)\n with android.content.pm.PackageManager.FEATURE_WIFI_RTT.</p>\n"}}},{"name":"isEasyConnectSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isEasyConnectSupported","meta":{}},{"name":"isEnhancedOpenSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isEnhancedOpenSupported","meta":{}},{"name":"isEnhancedPowerReportingSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isEnhancedPowerReportingSupported","meta":{}},{"name":"isP2pSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isP2pSupported","meta":{}},{"name":"isPreferredNetworkOffloadSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isPreferredNetworkOffloadSupported","meta":{}},{"name":"isScanAlwaysAvailable","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isScanAlwaysAvailable","meta":{"deprecated":{"text":"<p>The ability for apps to trigger scan requests will be removed in a future\n release.</p>\n"}}},{"name":"isTdlsSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isTdlsSupported","meta":{}},{"name":"isWifiEnabled","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isWifiEnabled","meta":{}},{"name":"isWpa3SaeSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isWpa3SaeSupported","meta":{}},{"name":"isWpa3SuiteBSupported","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-isWpa3SuiteBSupported","meta":{}},{"name":"pingSupplicant","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-pingSupplicant","meta":{"deprecated":{"text":"<p>Will return the output of isWifiEnabled() instead.</p>\n"}}},{"name":"reassociate","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-reassociate","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n"}}},{"name":"reconnect","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-reconnect","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n"}}},{"name":"removeNetwork","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-removeNetwork","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n"}}},{"name":"removeNetworkSuggestions","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-removeNetworkSuggestions","meta":{}},{"name":"removePasspointConfiguration","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-removePasspointConfiguration","meta":{"deprecated":{"text":"<p>This is no longer supported.</p>\n"}}},{"name":"saveConfiguration","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-saveConfiguration","meta":{"deprecated":{"text":"<p>There is no need to call this method -\n addNetwork(WifiConfiguration), updateNetwork(WifiConfiguration)\n and removeNetwork(int) already persist the configurations automatically.</p>\n"}}},{"name":"setTdlsEnabled","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-setTdlsEnabled","meta":{}},{"name":"setTdlsEnabledWithMacAddress","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-setTdlsEnabledWithMacAddress","meta":{}},{"name":"setWifiEnabled","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-setWifiEnabled","meta":{"deprecated":{"text":"<p>Starting with Build.VERSION_CODES#Q, applications are not allowed to\n enable/disable Wi-Fi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return {@code false}\n and will have no effect. If apps are targeting an older SDK (\n android.os.Build.VERSION_CODES.P or below), they can continue to use this API.</p>\n"}}},{"name":"startLocalOnlyHotspot","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-startLocalOnlyHotspot","meta":{}},{"name":"startWps","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-startWps","meta":{"deprecated":{"text":"<p>This API is deprecated</p>\n"}}},{"name":"updateNetwork","tagname":"method","owner":"android.net.wifi.WifiManager","id":"method-updateNetwork","meta":{"deprecated":{"text":"<p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return {@code -1}.</p>\n"}}}],"alternateClassNames":[],"aliases":{},"id":"class-android.net.wifi.WifiManager","short_doc":"This class provides the primary API for managing all aspects of Wi-Fi\n connectivity. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.net.wifi.WifiManager</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/WifiManager.html#android-net-wifi-WifiManager' target='_blank'>WifiManager.js</a></div></pre><div class='doc-contents'><p>This class provides the primary API for managing all aspects of Wi-Fi\n connectivity.\n <p>\n On releases before android.os.Build.VERSION_CODES.N, this object\n should only be obtained from an {@linkplain Context#getApplicationContext()\n application context}, and not from any other derived context to avoid memory\n leaks within the calling process.\n <p>\n It deals with several categories of items:\n </p>\n <ul>\n <li>The list of configured networks. The list can be viewed and updated, and\n attributes of individual entries can be modified.</li>\n <li>The currently active Wi-Fi network, if any. Connectivity can be\n established or torn down, and dynamic information about the state of the\n network can be queried.</li>\n <li>Results of access point scans, containing enough information to make\n decisions about what access point to connect to.</li>\n <li>It defines the names of various Intent actions that are broadcast upon\n any sort of change in Wi-Fi state.\n </li></ul>\n <p>\n This is the API to use when performing Wi-Fi specific operations. To perform\n operations that pertain to network connectivity at an abstract level, use\n android.net.ConnectivityManager.\n </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ACTION_PICK_WIFI_NETWORK' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-ACTION_PICK_WIFI_NETWORK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-ACTION_PICK_WIFI_NETWORK' class='name expandable'>ACTION_PICK_WIFI_NETWORK</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: Pick a Wi-Fi network to connect to. ...</div><div class='long'><p>Activity Action: Pick a Wi-Fi network to connect to.</p>\n\n<p><p>Input: Nothing.\n<p>Output: Nothing.</p>\n<p>Defaults to: <code>&quot;android.net.wifi.PICK_WIFI_NETWORK&quot;</code></p></div></div></div><div id='property-ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE' class='name expandable'>ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Activity Action: Show a system activity that allows the user to enable\nscans to be available even with Wi-Fi turned off. ...</div><div class='long'><p>Activity Action: Show a system activity that allows the user to enable\nscans to be available even with Wi-Fi turned off.</p>\n\n<p><p>Notification of the result of this activity is posted using the\nandroid.app.Activity.onActivityResult callback. The\n<code>resultCode</code>\nwill be android.app.Activity.RESULT_OK if scan always mode has\nbeen turned on or android.app.Activity.RESULT_CANCELED if the user\nhas rejected the request or an error has occurred.</p>\n<p>Defaults to: <code>&quot;android.net.wifi.action.REQUEST_SCAN_ALWAYS_AVAILABLE&quot;</code></p></div></div></div><div id='property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION' class='name expandable'>ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Directed broadcast intent action indicating that the device has connected to one of the\nnetwork suggestions provided ...</div><div class='long'><p>Directed broadcast intent action indicating that the device has connected to one of the\nnetwork suggestions provided by the app. This will be sent post connection to a network\nwhich was created with boolean)\nflag set.</p>\n\n<p><p>\nNote: The broadcast is sent to the app only if it holds\nACCESS_FINE_LOCATION permission.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_NETWORK_SUGGESTION\" rel=\"android.net.wifi.WifiManager-property-EXTRA_NETWORK_SUGGESTION\" class=\"docClass\">EXTRA_NETWORK_SUGGESTION</a></p>\n<p>Defaults to: <code>&quot;android.net.wifi.action.WIFI_NETWORK_SUGGESTION_POST_CONNECTION&quot;</code></p></div></div></div><div id='property-ERROR_AUTHENTICATING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-ERROR_AUTHENTICATING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-ERROR_AUTHENTICATING' class='name expandable'>ERROR_AUTHENTICATING</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The error code if there was a problem authenticating. ...</div><div class='long'><p>The error code if there was a problem authenticating.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_BSSID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_BSSID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_BSSID' class='name expandable'>EXTRA_BSSID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a String giving the BSSID of the access point to which\nwe are connected. ...</div><div class='long'><p>The lookup key for a String giving the BSSID of the access point to which\nwe are connected. No longer used.</p>\n<p>Defaults to: <code>&quot;bssid&quot;</code></p></div></div></div><div id='property-EXTRA_NETWORK_INFO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_NETWORK_INFO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_NETWORK_INFO' class='name expandable'>EXTRA_NETWORK_INFO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a android.net.NetworkInfo object associated with the\nWi-Fi network. ...</div><div class='long'><p>The lookup key for a android.net.NetworkInfo object associated with the\nWi-Fi network. Retrieve with\nandroid.content.Intent.getParcelableExtra(String).</p>\n<p>Defaults to: <code>&quot;networkInfo&quot;</code></p></div></div></div><div id='property-EXTRA_NETWORK_SUGGESTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_NETWORK_SUGGESTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_NETWORK_SUGGESTION' class='name expandable'>EXTRA_NETWORK_SUGGESTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Sent as as a part of ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION that holds\nan instance of android.net.wifi.WifiNe...</div><div class='long'><p>Sent as as a part of <a href=\"#!/api/android.net.wifi.WifiManager-property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION\" rel=\"android.net.wifi.WifiManager-property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION\" class=\"docClass\">ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION</a> that holds\nan instance of <a href=\"#!/api/android.net.wifi.WifiNetworkSuggestion\" rel=\"android.net.wifi.WifiNetworkSuggestion\" class=\"docClass\">android.net.wifi.WifiNetworkSuggestion</a> corresponding to the connected network.</p>\n<p>Defaults to: <code>&quot;android.net.wifi.extra.NETWORK_SUGGESTION&quot;</code></p></div></div></div><div id='property-EXTRA_NEW_RSSI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_NEW_RSSI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_NEW_RSSI' class='name expandable'>EXTRA_NEW_RSSI</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for an {@code int} giving the new RSSI in dBm. ...</div><div class='long'><p>The lookup key for an {@code int} giving the new RSSI in dBm.</p>\n<p>Defaults to: <code>&quot;newRssi&quot;</code></p></div></div></div><div id='property-EXTRA_NEW_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_NEW_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_NEW_STATE' class='name expandable'>EXTRA_NEW_STATE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The lookup key for a android.net.wifi.SupplicantState describing the new state\nRetrieve with\nandroid.content.Intent.g...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.wifi.SupplicantState\" rel=\"android.net.wifi.SupplicantState\" class=\"docClass\">android.net.wifi.SupplicantState</a> describing the new state\nRetrieve with\nandroid.content.Intent.getParcelableExtra(String).</p>\n<p>Defaults to: <code>&quot;newState&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_PREVIOUS_WIFI_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_PREVIOUS_WIFI_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_PREVIOUS_WIFI_STATE' class='name expandable'>EXTRA_PREVIOUS_WIFI_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The previous Wi-Fi state. ...</div><div class='long'><p>The previous Wi-Fi state.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_WIFI_STATE\" rel=\"android.net.wifi.WifiManager-property-EXTRA_WIFI_STATE\" class=\"docClass\">EXTRA_WIFI_STATE</a></p>\n<p>Defaults to: <code>&quot;previous_wifi_state&quot;</code></p></div></div></div><div id='property-EXTRA_SUPPLICANT_CONNECTED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_SUPPLICANT_CONNECTED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_CONNECTED' class='name expandable'>EXTRA_SUPPLICANT_CONNECTED</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The lookup key for a boolean that indicates whether a connection to\nthe supplicant daemon has been gained or lost. ...</div><div class='long'><p>The lookup key for a boolean that indicates whether a connection to\nthe supplicant daemon has been gained or lost. {@code true} means\na connection now exists.\nRetrieve it with android.content.Intent.getBooleanExtra(String,boolean).</p>\n<p>Defaults to: <code>&quot;connected&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_SUPPLICANT_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_SUPPLICANT_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_ERROR' class='name expandable'>EXTRA_SUPPLICANT_ERROR</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>The lookup key for a android.net.wifi.SupplicantState describing the supplicant\nerror code if any\nRetrieve with\nint). ...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.wifi.SupplicantState\" rel=\"android.net.wifi.SupplicantState\" class=\"docClass\">android.net.wifi.SupplicantState</a> describing the supplicant\nerror code if any\nRetrieve with\nint).\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-ERROR_AUTHENTICATING\" rel=\"android.net.wifi.WifiManager-property-ERROR_AUTHENTICATING\" class=\"docClass\">ERROR_AUTHENTICATING</a></p>\n<p>Defaults to: <code>&quot;supplicantError&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.</p>\n\n        </div>\n</div></div></div><div id='property-EXTRA_WIFI_INFO' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_WIFI_INFO' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_WIFI_INFO' class='name expandable'>EXTRA_WIFI_INFO</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for a android.net.wifi.WifiInfo object giving the\ninformation about the access point to which we are c...</div><div class='long'><p>The lookup key for a <a href=\"#!/api/android.net.wifi.WifiInfo\" rel=\"android.net.wifi.WifiInfo\" class=\"docClass\">android.net.wifi.WifiInfo</a> object giving the\ninformation about the access point to which we are connected.\nNo longer used.</p>\n<p>Defaults to: <code>&quot;wifiInfo&quot;</code></p></div></div></div><div id='property-EXTRA_WIFI_STATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-EXTRA_WIFI_STATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-EXTRA_WIFI_STATE' class='name expandable'>EXTRA_WIFI_STATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The lookup key for an int that indicates whether Wi-Fi is enabled,\ndisabled, enabling, disabling, or unknown. ...</div><div class='long'><p>The lookup key for an int that indicates whether Wi-Fi is enabled,\ndisabled, enabling, disabling, or unknown.  Retrieve it with\nandroid.content.Intent.getIntExtra(String,int).</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_DISABLED\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_DISABLED\" class=\"docClass\">WIFI_STATE_DISABLED</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_DISABLING\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_DISABLING\" class=\"docClass\">WIFI_STATE_DISABLING</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_ENABLED\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_ENABLED\" class=\"docClass\">WIFI_STATE_ENABLED</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_ENABLING\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_ENABLING\" class=\"docClass\">WIFI_STATE_ENABLING</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_UNKNOWN\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_UNKNOWN\" class=\"docClass\">WIFI_STATE_UNKNOWN</a></p>\n<p>Defaults to: <code>&quot;wifi_state&quot;</code></p></div></div></div><div id='property-NETWORK_IDS_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-NETWORK_IDS_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-NETWORK_IDS_CHANGED_ACTION' class='name expandable'>NETWORK_IDS_CHANGED_ACTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The network IDs of the configured networks could have changed. ...</div><div class='long'><p>The network IDs of the configured networks could have changed.</p>\n<p>Defaults to: <code>&quot;android.net.wifi.NETWORK_IDS_CHANGED&quot;</code></p></div></div></div><div id='property-NETWORK_STATE_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-NETWORK_STATE_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-NETWORK_STATE_CHANGED_ACTION' class='name expandable'>NETWORK_STATE_CHANGED_ACTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast intent action indicating that the state of Wi-Fi connectivity\nhas changed. ...</div><div class='long'><p>Broadcast intent action indicating that the state of Wi-Fi connectivity\nhas changed. An extra provides the new state\nin the form of a android.net.NetworkInfo object.\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_NETWORK_INFO\" rel=\"android.net.wifi.WifiManager-property-EXTRA_NETWORK_INFO\" class=\"docClass\">EXTRA_NETWORK_INFO</a></p>\n<p>Defaults to: <code>&quot;android.net.wifi.STATE_CHANGE&quot;</code></p></div></div></div><div id='property-RSSI_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-RSSI_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-RSSI_CHANGED_ACTION' class='name expandable'>RSSI_CHANGED_ACTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The RSSI (signal strength) has changed. ...</div><div class='long'><p>The RSSI (signal strength) has changed.</p>\n\n<p>Receiver Required Permission: android.Manifest.permission.ACCESS_WIFI_STATE\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_NEW_RSSI\" rel=\"android.net.wifi.WifiManager-property-EXTRA_NEW_RSSI\" class=\"docClass\">EXTRA_NEW_RSSI</a></p>\n<p>Defaults to: <code>&quot;android.net.wifi.RSSI_CHANGED&quot;</code></p></div></div></div><div id='property-SCAN_RESULTS_AVAILABLE_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-SCAN_RESULTS_AVAILABLE_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-SCAN_RESULTS_AVAILABLE_ACTION' class='name expandable'>SCAN_RESULTS_AVAILABLE_ACTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>An access point scan has completed, and results are available. ...</div><div class='long'><p>An access point scan has completed, and results are available.\nCall <a href=\"#!/api/android.net.wifi.WifiManager-method-getScanResults\" rel=\"android.net.wifi.WifiManager-method-getScanResults\" class=\"docClass\">getScanResults</a>() to obtain the results.\nThe broadcast intent may contain an extra field with the key <a href=\"#!/api/android.net.wifi.WifiManager-method-EXTRA_RESULTS_UPDATED\" rel=\"android.net.wifi.WifiManager-method-EXTRA_RESULTS_UPDATED\" class=\"docClass\">EXTRA_RESULTS_UPDATED</a>\nand a {@code boolean} value indicating if the scan was successful.</p>\n<p>Defaults to: <code>&quot;android.net.wifi.SCAN_RESULTS&quot;</code></p></div></div></div><div id='property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_DUPLICATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_DUPLICATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_DUPLICATE' class='name expandable'>STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_DUPLICATE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reason code if one or more of the network suggestions added already exists in platform's\ndatabase. ...</div><div class='long'><p>Reason code if one or more of the network suggestions added already exists in platform's\ndatabase.\n@see WifiNetworkSuggestion#equals(Object)</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_EXCEEDS_MAX_PER_APP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_EXCEEDS_MAX_PER_APP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_EXCEEDS_MAX_PER_APP' class='name expandable'>STATUS_NETWORK_SUGGESTIONS_ERROR_ADD_EXCEEDS_MAX_PER_APP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reason code if the number of network suggestions provided by the app crosses the max\nthreshold set per app. ...</div><div class='long'><p>Reason code if the number of network suggestions provided by the app crosses the max\nthreshold set per app.\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-getMaxNumberOfNetworkSuggestionsPerApp\" rel=\"android.net.wifi.WifiManager-method-getMaxNumberOfNetworkSuggestionsPerApp\" class=\"docClass\">getMaxNumberOfNetworkSuggestionsPerApp</a>()</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-STATUS_NETWORK_SUGGESTIONS_ERROR_APP_DISALLOWED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_APP_DISALLOWED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_APP_DISALLOWED' class='name expandable'>STATUS_NETWORK_SUGGESTIONS_ERROR_APP_DISALLOWED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reason code if the user has disallowed \"android:change_wifi_state\" app-ops from the app. ...</div><div class='long'><p>Reason code if the user has disallowed \"android:change_wifi_state\" app-ops from the app.\n@see android.app.AppOpsManager#unsafeCheckOp(String, int, String).</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-STATUS_NETWORK_SUGGESTIONS_ERROR_INTERNAL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_INTERNAL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_INTERNAL' class='name expandable'>STATUS_NETWORK_SUGGESTIONS_ERROR_INTERNAL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reason code if there was an internal error in the platform while processing the addition or\nremoval of suggestions. ...</div><div class='long'><p>Reason code if there was an internal error in the platform while processing the addition or\nremoval of suggestions.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-STATUS_NETWORK_SUGGESTIONS_ERROR_REMOVE_INVALID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_REMOVE_INVALID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-STATUS_NETWORK_SUGGESTIONS_ERROR_REMOVE_INVALID' class='name expandable'>STATUS_NETWORK_SUGGESTIONS_ERROR_REMOVE_INVALID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reason code if one or more of the network suggestions removed does not exist in platform's\ndatabase. ...</div><div class='long'><p>Reason code if one or more of the network suggestions removed does not exist in platform's\ndatabase.</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p></div></div></div><div id='property-STATUS_NETWORK_SUGGESTIONS_SUCCESS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-STATUS_NETWORK_SUGGESTIONS_SUCCESS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-STATUS_NETWORK_SUGGESTIONS_SUCCESS' class='name expandable'>STATUS_NETWORK_SUGGESTIONS_SUCCESS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Reason code if all of the network suggestions were successfully added or removed. ...</div><div class='long'><p>Reason code if all of the network suggestions were successfully added or removed.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-SUPPLICANT_CONNECTION_CHANGE_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-SUPPLICANT_CONNECTION_CHANGE_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-SUPPLICANT_CONNECTION_CHANGE_ACTION' class='name expandable'>SUPPLICANT_CONNECTION_CHANGE_ACTION</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Broadcast intent action indicating that a connection to the supplicant has\nbeen established (and it is now possible\nt...</div><div class='long'><p>Broadcast intent action indicating that a connection to the supplicant has\nbeen established (and it is now possible\nto perform Wi-Fi operations) or the connection to the supplicant has been\nlost. One extra provides the connection state as a boolean, where {@code true}\nmeans CONNECTED.</p>\n<p>Defaults to: <code>&quot;android.net.wifi.supplicant.CONNECTION_CHANGE&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_CONNECTED\" rel=\"android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_CONNECTED\" class=\"docClass\">EXTRA_SUPPLICANT_CONNECTED</a></p>\n\n        </div>\n</div></div></div><div id='property-SUPPLICANT_STATE_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-SUPPLICANT_STATE_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-SUPPLICANT_STATE_CHANGED_ACTION' class='name expandable'>SUPPLICANT_STATE_CHANGED_ACTION</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Broadcast intent action indicating that the state of establishing a connection to\nan access point has changed.One ext...</div><div class='long'><p>Broadcast intent action indicating that the state of establishing a connection to\nan access point has changed.One extra provides the new\n<a href=\"#!/api/android.net.wifi.SupplicantState\" rel=\"android.net.wifi.SupplicantState\" class=\"docClass\">android.net.wifi.SupplicantState</a>. Note that the supplicant state is Wi-Fi specific, and\nis not generally the most useful thing to look at if you are just interested in\nthe overall state of connectivity.\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_NEW_STATE\" rel=\"android.net.wifi.WifiManager-property-EXTRA_NEW_STATE\" class=\"docClass\">EXTRA_NEW_STATE</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_ERROR\" rel=\"android.net.wifi.WifiManager-property-EXTRA_SUPPLICANT_ERROR\" class=\"docClass\">EXTRA_SUPPLICANT_ERROR</a></p>\n<p>Defaults to: <code>&quot;android.net.wifi.supplicant.STATE_CHANGE&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.</p>\n\n        </div>\n</div></div></div><div id='property-WIFI_MODE_FULL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_MODE_FULL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL' class='name expandable'>WIFI_MODE_FULL</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>In this Wi-Fi lock mode, Wi-Fi will be kept active,\nand will behave normally, i.e., it will attempt to automatically\n...</div><div class='long'><p>In this Wi-Fi lock mode, Wi-Fi will be kept active,\nand will behave normally, i.e., it will attempt to automatically\nestablish a connection to a remembered access point that is\nwithin range, and will do periodic scans if there are remembered\naccess points but none are in range.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This API is non-functional and will have no impact.</p>\n\n        </div>\n</div></div></div><div id='property-WIFI_MODE_FULL_HIGH_PERF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_MODE_FULL_HIGH_PERF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF' class='name expandable'>WIFI_MODE_FULL_HIGH_PERF</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>In this Wi-Fi lock mode, Wi-Fi will not go to power save. ...</div><div class='long'><p>In this Wi-Fi lock mode, Wi-Fi will not go to power save.\nThis results in operating with low packet latency.\nThe lock is only active when the device is connected to an access point.\nThe lock is active even when the device screen is off or the acquiring application is\nrunning in the background.\nThis mode will consume more power and hence should be used only\nwhen there is a need for this tradeoff.</p>\n\n<p><p>\nAn example use case is when a voice connection needs to be\nkept active even after the device screen goes off.\nHolding a <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" rel=\"android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" class=\"docClass\">WIFI_MODE_FULL_HIGH_PERF</a> lock for the\nduration of the voice call may improve the call quality.\n<p>\nWhen there is no support from the hardware, the <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" rel=\"android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" class=\"docClass\">WIFI_MODE_FULL_HIGH_PERF</a>\nlock will have no impact.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-WIFI_MODE_FULL_LOW_LATENCY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY' class='name expandable'>WIFI_MODE_FULL_LOW_LATENCY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>In this Wi-Fi lock mode, Wi-Fi will operate with a priority to achieve low latency. ...</div><div class='long'><p>In this Wi-Fi lock mode, Wi-Fi will operate with a priority to achieve low latency.\n<a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY\" rel=\"android.net.wifi.WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY\" class=\"docClass\">WIFI_MODE_FULL_LOW_LATENCY</a> lock has the following limitations:</p>\n\n<ol>\n<li>The lock is only active when the device is connected to an access point.</li>\n<li>The lock is only active when the screen is on.</li>\n<li>The lock is only active when the acquiring app is running in the foreground.</li>\n</ol>\n\n\n<p>Low latency mode optimizes for reduced packet latency,\nand as a result other performance measures may suffer when there are trade-offs to make:</p>\n\n<ol>\n<li>Battery life may be reduced.</li>\n<li>Throughput may be reduced.</li>\n<li>Frequency of Wi-Fi scanning may be reduced. This may result in: </li>\n<ul>\n<li>The device may not roam or switch to the AP with highest signal quality.</li>\n<li>Location accuracy may be reduced.</li>\n</ul>\n</ol>\n\n\n<p><p>\nExample use cases are real time gaming or virtual reality applications where\nlow latency is a key factor for user experience.\n<p>\nNote: For an app which acquires both <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY\" rel=\"android.net.wifi.WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY\" class=\"docClass\">WIFI_MODE_FULL_LOW_LATENCY</a> and\n<a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" rel=\"android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" class=\"docClass\">WIFI_MODE_FULL_HIGH_PERF</a> locks, <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY\" rel=\"android.net.wifi.WifiManager-property-WIFI_MODE_FULL_LOW_LATENCY\" class=\"docClass\">WIFI_MODE_FULL_LOW_LATENCY</a>\nlock will be effective when app is running in foreground and screen is on,\nwhile the <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" rel=\"android.net.wifi.WifiManager-property-WIFI_MODE_FULL_HIGH_PERF\" class=\"docClass\">WIFI_MODE_FULL_HIGH_PERF</a> lock will take effect otherwise.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-WIFI_MODE_SCAN_ONLY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_MODE_SCAN_ONLY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_MODE_SCAN_ONLY' class='name expandable'>WIFI_MODE_SCAN_ONLY</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>In this Wi-Fi lock mode, Wi-Fi will be kept active,\nbut the only operation that will be supported is initiation of\nsc...</div><div class='long'><p>In this Wi-Fi lock mode, Wi-Fi will be kept active,\nbut the only operation that will be supported is initiation of\nscans, and the subsequent reporting of scan results. No attempts\nwill be made to automatically connect to remembered access points,\nnor will periodic scans be automatically performed looking for\nremembered access points. Scans must be explicitly requested by\nan application in this mode.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This API is non-functional and will have no impact.</p>\n\n        </div>\n</div></div></div><div id='property-WIFI_STATE_CHANGED_ACTION' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_STATE_CHANGED_ACTION' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION' class='name expandable'>WIFI_STATE_CHANGED_ACTION</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Broadcast intent action indicating that Wi-Fi has been enabled, disabled,\nenabling, disabling, or unknown. ...</div><div class='long'><p>Broadcast intent action indicating that Wi-Fi has been enabled, disabled,\nenabling, disabling, or unknown. One extra provides this state as an int.\nAnother extra provides the previous state, if available.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_WIFI_STATE\" rel=\"android.net.wifi.WifiManager-property-EXTRA_WIFI_STATE\" class=\"docClass\">EXTRA_WIFI_STATE</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-property-EXTRA_PREVIOUS_WIFI_STATE\" rel=\"android.net.wifi.WifiManager-property-EXTRA_PREVIOUS_WIFI_STATE\" class=\"docClass\">EXTRA_PREVIOUS_WIFI_STATE</a></p>\n<p>Defaults to: <code>&quot;android.net.wifi.WIFI_STATE_CHANGED&quot;</code></p></div></div></div><div id='property-WIFI_STATE_DISABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_STATE_DISABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_DISABLED' class='name expandable'>WIFI_STATE_DISABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Wi-Fi is disabled. ...</div><div class='long'><p>Wi-Fi is disabled.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" class=\"docClass\">WIFI_STATE_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-getWifiState\" rel=\"android.net.wifi.WifiManager-method-getWifiState\" class=\"docClass\">getWifiState</a>()</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-WIFI_STATE_DISABLING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_STATE_DISABLING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_DISABLING' class='name expandable'>WIFI_STATE_DISABLING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Wi-Fi is currently being disabled. ...</div><div class='long'><p>Wi-Fi is currently being disabled. The state will change to <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_DISABLED\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_DISABLED\" class=\"docClass\">WIFI_STATE_DISABLED</a> if\nit finishes successfully.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" class=\"docClass\">WIFI_STATE_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-getWifiState\" rel=\"android.net.wifi.WifiManager-method-getWifiState\" class=\"docClass\">getWifiState</a>()</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-WIFI_STATE_ENABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_STATE_ENABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_ENABLED' class='name expandable'>WIFI_STATE_ENABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Wi-Fi is enabled. ...</div><div class='long'><p>Wi-Fi is enabled.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" class=\"docClass\">WIFI_STATE_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-getWifiState\" rel=\"android.net.wifi.WifiManager-method-getWifiState\" class=\"docClass\">getWifiState</a>()</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-WIFI_STATE_ENABLING' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_STATE_ENABLING' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_ENABLING' class='name expandable'>WIFI_STATE_ENABLING</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Wi-Fi is currently being enabled. ...</div><div class='long'><p>Wi-Fi is currently being enabled. The state will change to <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_ENABLED\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_ENABLED\" class=\"docClass\">WIFI_STATE_ENABLED</a> if\nit finishes successfully.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" class=\"docClass\">WIFI_STATE_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-getWifiState\" rel=\"android.net.wifi.WifiManager-method-getWifiState\" class=\"docClass\">getWifiState</a>()</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-WIFI_STATE_UNKNOWN' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WIFI_STATE_UNKNOWN' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_UNKNOWN' class='name expandable'>WIFI_STATE_UNKNOWN</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Wi-Fi is in an unknown state. ...</div><div class='long'><p>Wi-Fi is in an unknown state. This state will occur when an error happens while enabling\nor disabling.</p>\n\n<p>@see <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_CHANGED_ACTION\" class=\"docClass\">WIFI_STATE_CHANGED_ACTION</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-getWifiState\" rel=\"android.net.wifi.WifiManager-method-getWifiState\" class=\"docClass\">getWifiState</a>()</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p></div></div></div><div id='property-WPS_AUTH_FAILURE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WPS_AUTH_FAILURE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WPS_AUTH_FAILURE' class='name expandable'>WPS_AUTH_FAILURE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Authentication failure on WPS ...</div><div class='long'><p>Authentication failure on WPS</p>\n<p>Defaults to: <code>&quot;6&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is deprecated</p>\n\n        </div>\n</div></div></div><div id='property-WPS_OVERLAP_ERROR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WPS_OVERLAP_ERROR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WPS_OVERLAP_ERROR' class='name expandable'>WPS_OVERLAP_ERROR</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>WPS overlap detected ...</div><div class='long'><p>WPS overlap detected</p>\n<p>Defaults to: <code>&quot;3&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is deprecated</p>\n\n        </div>\n</div></div></div><div id='property-WPS_TIMED_OUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WPS_TIMED_OUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WPS_TIMED_OUT' class='name expandable'>WPS_TIMED_OUT</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>WPS timed out ...</div><div class='long'><p>WPS timed out</p>\n<p>Defaults to: <code>&quot;7&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is deprecated</p>\n\n        </div>\n</div></div></div><div id='property-WPS_TKIP_ONLY_PROHIBITED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WPS_TKIP_ONLY_PROHIBITED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WPS_TKIP_ONLY_PROHIBITED' class='name expandable'>WPS_TKIP_ONLY_PROHIBITED</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>TKIP only prohibited ...</div><div class='long'><p>TKIP only prohibited</p>\n<p>Defaults to: <code>&quot;5&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is deprecated</p>\n\n        </div>\n</div></div></div><div id='property-WPS_WEP_PROHIBITED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-property-WPS_WEP_PROHIBITED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-property-WPS_WEP_PROHIBITED' class='name expandable'>WPS_WEP_PROHIBITED</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>WEP on WPS is prohibited ...</div><div class='long'><p>WEP on WPS is prohibited</p>\n<p>Defaults to: <code>&quot;4&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>This is deprecated</p>\n\n        </div>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-EXTRA_RESULTS_UPDATED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-EXTRA_RESULTS_UPDATED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-EXTRA_RESULTS_UPDATED' class='name expandable'>EXTRA_RESULTS_UPDATED</a>( <span class='pre'></span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Lookup key for a {@code boolean} extra in intent SCAN_RESULTS_AVAILABLE_ACTION\nrepresenting if the scan was successfu...</div><div class='long'><p>Lookup key for a {@code boolean} extra in intent <a href=\"#!/api/android.net.wifi.WifiManager-property-SCAN_RESULTS_AVAILABLE_ACTION\" rel=\"android.net.wifi.WifiManager-property-SCAN_RESULTS_AVAILABLE_ACTION\" class=\"docClass\">SCAN_RESULTS_AVAILABLE_ACTION</a>\nrepresenting if the scan was successful or not.\nScans may fail for multiple reasons, these may include:</p>\n\n<ol>\n<li>An app requested too many scans in a certain period of time.\nThis may lead to additional scan request rejections via \"scan throttling\" for both\nforeground and background apps.\nNote: Apps holding android.Manifest.permission.NETWORK_SETTINGS permission are\nexempted from scan throttling.\n</li>\n<li>The device is idle and scanning is disabled.</li>\n<li>Wifi hardware reported a scan failure.</li>\n</ol>\n\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>true scan was successful, results are updated</p>\n</div></li></ul></div></div></div><div id='method-addNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-addNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-addNetwork' class='name expandable'>addNetwork</a>( <span class='pre'>config</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Add a new network description to the set of configured networks. ...</div><div class='long'><p>Add a new network description to the set of configured networks.\n The {@code networkId} field of the supplied configuration object\n is ignored.\n <p/>\n The new network will be marked DISABLED by default. To enable it,\n called <a href=\"#!/api/android.net.wifi.WifiManager-method-enableNetwork\" rel=\"android.net.wifi.WifiManager-method-enableNetwork\" class=\"docClass\">enableNetwork</a>.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return {@code -1}.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {WifiConfiguration}<div class='sub-desc'><p>the set of variables that describe the configuration,\n            contained in a WifiConfiguration object.\n            If the WifiConfiguration has an Http Proxy set\n            the calling app must be System, or be provisioned as the Profile or Device Owner.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the ID of the newly created network description. This is used in\n         other operations to specified the network to be acted upon.\n         Returns {@code -1} on failure.</p>\n</div></li></ul></div></div></div><div id='method-addNetworkSuggestions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-addNetworkSuggestions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-addNetworkSuggestions' class='name expandable'>addNetworkSuggestions</a>( <span class='pre'>networkSuggestions</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Provide a list of network suggestions to the device. ...</div><div class='long'><p>Provide a list of network suggestions to the device. See <a href=\"#!/api/android.net.wifi.WifiNetworkSuggestion\" rel=\"android.net.wifi.WifiNetworkSuggestion\" class=\"docClass\">android.net.wifi.WifiNetworkSuggestion</a>\n for a detailed explanation of the parameters.\n When the device decides to connect to one of the provided network suggestions, platform sends\n a directed broadcast <a href=\"#!/api/android.net.wifi.WifiManager-property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION\" rel=\"android.net.wifi.WifiManager-property-ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION\" class=\"docClass\">ACTION_WIFI_NETWORK_SUGGESTION_POST_CONNECTION</a> to the app if\n the network was created with #setIsAppInteractionRequired() flag set and the app holds\n ACCESS_FINE_LOCATION permission.</p>\n\n<p><p>\n NOTE:\n <li> These networks are just a suggestion to the platform. The platform will ultimately\n decide on which network the device connects to. </li>\n <li> When an app is uninstalled, all its suggested networks are discarded. If the device is\n currently connected to a suggested network which is being removed then the device will\n disconnect from that network.</li>\n <li> No in-place modification of existing suggestions are allowed. Apps are expected to\n remove suggestions using <a href=\"#!/api/android.net.wifi.WifiManager-method-removeNetworkSuggestions\" rel=\"android.net.wifi.WifiManager-method-removeNetworkSuggestions\" class=\"docClass\">removeNetworkSuggestions</a>(List) and then add the modified\n suggestion back using this API.</li></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkSuggestions</span> : Object {java.util.List}<div class='sub-desc'><p>List of network suggestions provided by the app.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Status code for the operation. One of the STATUS_NETWORK_SUGGESTIONS_ values.\n WifiNetworkSuggestion.equals(Object) any previously provided suggestions by the app.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>@link SecurityException</span><div class='sub-desc'><p>if the caller is missing required permissions.</p>\n</div></li></ul></div></div></div><div id='method-addOrUpdatePasspointConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-addOrUpdatePasspointConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-addOrUpdatePasspointConfiguration' class='name expandable'>addOrUpdatePasspointConfiguration</a>( <span class='pre'>config</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add or update a Passpoint configuration. ...</div><div class='long'><p>Add or update a Passpoint configuration.  The configuration provides a credential\n for connecting to Passpoint networks that are operated by the Passpoint\n service provider specified in the configuration.</p>\n\n<p> Each configuration is uniquely identified by its FQDN (Fully Qualified Domain\n Name).  In the case when there is an existing configuration with the same\n FQDN, the new configuration will replace the existing configuration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {PasspointConfiguration}<div class='sub-desc'><p>The Passpoint configuration to be added</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if configuration is invalid or Passpoint is not enabled on\n                                  the device.</p>\n</div></li></ul></div></div></div><div id='method-calculateSignalLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-calculateSignalLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-calculateSignalLevel' class='name expandable'>calculateSignalLevel</a>( <span class='pre'>rssi, numLevels</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the level of the signal. ...</div><div class='long'><p>Calculates the level of the signal. This should be used any time a signal\n is being shown.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rssi</span> : Number<div class='sub-desc'><p>The power of the signal measured in RSSI.</p>\n</div></li><li><span class='pre'>numLevels</span> : Number<div class='sub-desc'><p>The number of levels to consider in the calculated\n            level.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>A level of the signal, given in the range of 0 to numLevels-1\n         (both inclusive).</p>\n</div></li></ul></div></div></div><div id='method-cancelWps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-cancelWps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-cancelWps' class='name expandable'>cancelWps</a>( <span class='pre'>listener</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>WPS support has been deprecated from Client mode and this method will immediately trigger\n android.net.wifi.WifiManag...</div><div class='long'><p>WPS support has been deprecated from Client mode and this method will immediately trigger\n android.net.wifi.WifiManager.WpsCallback.onFailed(int) with a generic error.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This API is deprecated</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>listener</span> : Object {WifiManager.WpsCallback}<div class='sub-desc'><p>for callbacks on success or failure. Can be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the WifiManager instance needs to be initialized again</p>\n</div></li></ul></div></div></div><div id='method-compareSignalLevel' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-compareSignalLevel' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-compareSignalLevel' class='name expandable'>compareSignalLevel</a>( <span class='pre'>rssiA, rssiB</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares two signal strengths. ...</div><div class='long'><p>Compares two signal strengths.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rssiA</span> : Number<div class='sub-desc'><p>The power of the first signal measured in RSSI.</p>\n</div></li><li><span class='pre'>rssiB</span> : Number<div class='sub-desc'><p>The power of the second signal measured in RSSI.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns <0 if the first signal is weaker than the second signal,\n         0 if the two signals have the same strength, and >0 if the first\n         signal is stronger than the second signal.</0></p>\n</div></li></ul></div></div></div><div id='method-createMulticastLock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-createMulticastLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-createMulticastLock' class='name expandable'>createMulticastLock</a>( <span class='pre'>tag</span> ) : Object {android.net.wifi.WifiManager.MulticastLock}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new MulticastLock ...</div><div class='long'><p>Create a new MulticastLock</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tag</span> : String<div class='sub-desc'><p>a tag for the MulticastLock to identify it in debugging\n            messages.  This string is never shown to the user under\n            normal conditions, but should be descriptive enough to\n            identify your application and the specific MulticastLock\n            within it, if it holds multiple MulticastLocks.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiManager.MulticastLock}</span><div class='sub-desc'><p>a new, unacquired MulticastLock with the given tag.\n@see MulticastLock</p>\n</div></li></ul></div></div></div><div id='method-createWifiLock' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-createWifiLock' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-createWifiLock' class='name expandable'>createWifiLock</a>( <span class='pre'>tag</span> ) : Object {android.net.wifi.WifiManager.WifiLock}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Creates a new WifiLock. ...</div><div class='long'><p>Creates a new WifiLock.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This API is non-functional.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>tag</span> : String<div class='sub-desc'><p>a tag for the WifiLock to identify it in debugging messages.  This string is\n            never shown to the user under normal conditions, but should be descriptive\n            enough to identify your application and the specific WifiLock within it, if it\n            holds multiple WifiLocks.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiManager.WifiLock}</span><div class='sub-desc'><p>a new, unacquired WifiLock with the given tag.\n@see WifiLock</p>\n</div></li></ul></div></div></div><div id='method-disableNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-disableNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-disableNetwork' class='name expandable'>disableNetwork</a>( <span class='pre'>netId</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Disable a configured network. ...</div><div class='long'><p>Disable a configured network. The specified network will not be\n a candidate for associating. This may result in the asynchronous\n delivery of state change events.</p>\n\n<p> Applications are not allowed to disable networks created by other\n applications.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>netId</span> : Number<div class='sub-desc'><p>the ID of the network as returned by <a href=\"#!/api/android.net.wifi.WifiManager-method-addNetwork\" rel=\"android.net.wifi.WifiManager-method-addNetwork\" class=\"docClass\">addNetwork</a> or <a href=\"#!/api/android.net.wifi.WifiManager-method-getConfiguredNetworks\" rel=\"android.net.wifi.WifiManager-method-getConfiguredNetworks\" class=\"docClass\">getConfiguredNetworks</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded</p>\n</div></li></ul></div></div></div><div id='method-disconnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-disconnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-disconnect' class='name expandable'>disconnect</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Disassociate from the currently active access point. ...</div><div class='long'><p>Disassociate from the currently active access point. This may result\n in the asynchronous delivery of state change events.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded</p>\n</div></li></ul></div></div></div><div id='method-enableNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-enableNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-enableNetwork' class='name expandable'>enableNetwork</a>( <span class='pre'>netId, attemptConnect</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Allow a previously configured network to be associated with. ...</div><div class='long'><p>Allow a previously configured network to be associated with. If\n <code>attemptConnect</code> is true, an attempt to connect to the selected\n network is initiated. This may result in the asynchronous delivery\n of state change events.\n <p>\n <b>Note:</b> Network communication may not use Wi-Fi even if Wi-Fi is connected;\n traffic may instead be sent through another network, such as cellular data,\n Bluetooth tethering, or Ethernet. For example, traffic will never use a\n Wi-Fi network that does not provide Internet access (e.g. a wireless\n printer), if another network that does offer Internet access (e.g.\n cellular data) is available. Applications that need to ensure that their\n network traffic uses Wi-Fi should use APIs such as\n Network.bindSocket(java.net.Socket),\n Network.openConnection(java.net.URL), or\n ConnectivityManager.bindProcessToNetwork to do so.</p>\n\n<p> Applications are not allowed to enable networks created by other\n applications.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>netId</span> : Number<div class='sub-desc'><p>the ID of the network as returned by <a href=\"#!/api/android.net.wifi.WifiManager-method-addNetwork\" rel=\"android.net.wifi.WifiManager-method-addNetwork\" class=\"docClass\">addNetwork</a> or <a href=\"#!/api/android.net.wifi.WifiManager-method-getConfiguredNetworks\" rel=\"android.net.wifi.WifiManager-method-getConfiguredNetworks\" class=\"docClass\">getConfiguredNetworks</a>.</p>\n</div></li><li><span class='pre'>attemptConnect</span> : Boolean<div class='sub-desc'><p>The way to select a particular network to connect to is specify\n        {@code true} for this parameter.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded</p>\n</div></li></ul></div></div></div><div id='method-getConfiguredNetworks' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-getConfiguredNetworks' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-getConfiguredNetworks' class='name expandable'>getConfiguredNetworks</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return a list of all the networks configured for the current foreground\n user. ...</div><div class='long'><p>Return a list of all the networks configured for the current foreground\n user.</p>\n\n<p> Not all fields of WifiConfiguration are returned. Only the following\n fields are filled in:\n <ul>\n <li>networkId</li>\n <li>SSID</li>\n <li>BSSID</li>\n <li>priority</li>\n <li>allowedProtocols</li>\n <li>allowedKeyManagement</li>\n <li>allowedAuthAlgorithms</li>\n <li>allowedPairwiseCiphers</li>\n <li>allowedGroupCiphers</li>\n </ul></p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will return an empty list,\n except for:\n <ul>\n <li>Device Owner (DO) &amp; Profile Owner (PO) apps will have access to the full list.\n <li>Callers with Carrier privilege will receive a restricted list only containing\n configurations which they created.\n </li></li></ul></p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>a list of network configurations in the form of a list\n of WifiConfiguration objects.</p>\n</div></li></ul></div></div></div><div id='method-getConnectionInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-getConnectionInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-getConnectionInfo' class='name expandable'>getConnectionInfo</a>( <span class='pre'></span> ) : Object {android.net.wifi.WifiInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return dynamic information about the current Wi-Fi connection, if any is active. ...</div><div class='long'><p>Return dynamic information about the current Wi-Fi connection, if any is active.\n <p>\n In the connected state, access to the SSID and BSSID requires\n the same permissions as <a href=\"#!/api/android.net.wifi.WifiManager-method-getScanResults\" rel=\"android.net.wifi.WifiManager-method-getScanResults\" class=\"docClass\">getScanResults</a>. If such access is not allowed,\n <a href=\"#!/api/android.net.wifi.WifiInfo-method-getSSID\" rel=\"android.net.wifi.WifiInfo-method-getSSID\" class=\"docClass\">android.net.wifi.WifiInfo.getSSID</a> will return {@code \"<unknown ssid>\"} and\n <a href=\"#!/api/android.net.wifi.WifiInfo-method-getBSSID\" rel=\"android.net.wifi.WifiInfo-method-getBSSID\" class=\"docClass\">android.net.wifi.WifiInfo.getBSSID</a> will return {@code \"02:00:00:00:00:00\"}.</unknown></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.wifi.WifiInfo}</span><div class='sub-desc'><p>the Wi-Fi information, contained in WifiInfo.</p>\n</div></li></ul></div></div></div><div id='method-getDhcpInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-getDhcpInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-getDhcpInfo' class='name expandable'>getDhcpInfo</a>( <span class='pre'></span> ) : Object {android.net.DhcpInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the DHCP-assigned addresses from the last successful DHCP request,\n if any. ...</div><div class='long'><p>Return the DHCP-assigned addresses from the last successful DHCP request,\n if any.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.net.DhcpInfo}</span><div class='sub-desc'><p>the DHCP information</p>\n</div></li></ul></div></div></div><div id='method-getMaxNumberOfNetworkSuggestionsPerApp' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-getMaxNumberOfNetworkSuggestionsPerApp' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-getMaxNumberOfNetworkSuggestionsPerApp' class='name expandable'>getMaxNumberOfNetworkSuggestionsPerApp</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the max number of network suggestions that are allowed per app on the device. ...</div><div class='long'><p>Returns the max number of network suggestions that are allowed per app on the device.\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-addNetworkSuggestions\" rel=\"android.net.wifi.WifiManager-method-addNetworkSuggestions\" class=\"docClass\">addNetworkSuggestions</a>(List)\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-removeNetworkSuggestions\" rel=\"android.net.wifi.WifiManager-method-removeNetworkSuggestions\" class=\"docClass\">removeNetworkSuggestions</a>(List)</p>\n</div></div></div><div id='method-getPasspointConfigurations' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-getPasspointConfigurations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-getPasspointConfigurations' class='name expandable'>getPasspointConfigurations</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Return the list of installed Passpoint configurations. ...</div><div class='long'><p>Return the list of installed Passpoint configurations.</p>\n\n<p> An empty list will be returned when no configurations are installed.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>A list of PasspointConfiguration</p>\n</div></li></ul></div></div></div><div id='method-getScanResults' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-getScanResults' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-getScanResults' class='name expandable'>getScanResults</a>( <span class='pre'></span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the results of the latest access point scan. ...</div><div class='long'><p>Return the results of the latest access point scan.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>the list of access points found in the most recent scan. An app must hold\n ACCESS_FINE_LOCATION permission\n in order to get valid results.</p>\n</div></li></ul></div></div></div><div id='method-getWifiState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-getWifiState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-getWifiState' class='name expandable'>getWifiState</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the Wi-Fi enabled state. ...</div><div class='long'><p>Gets the Wi-Fi enabled state.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>One of <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_DISABLED\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_DISABLED\" class=\"docClass\">WIFI_STATE_DISABLED</a>,\n         <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_DISABLING\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_DISABLING\" class=\"docClass\">WIFI_STATE_DISABLING</a>, <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_ENABLED\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_ENABLED\" class=\"docClass\">WIFI_STATE_ENABLED</a>,\n         <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_ENABLING\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_ENABLING\" class=\"docClass\">WIFI_STATE_ENABLING</a>, <a href=\"#!/api/android.net.wifi.WifiManager-property-WIFI_STATE_UNKNOWN\" rel=\"android.net.wifi.WifiManager-property-WIFI_STATE_UNKNOWN\" class=\"docClass\">WIFI_STATE_UNKNOWN</a>\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-isWifiEnabled\" rel=\"android.net.wifi.WifiManager-method-isWifiEnabled\" class=\"docClass\">isWifiEnabled</a>()</p>\n</div></li></ul></div></div></div><div id='method-is5GHzBandSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-is5GHzBandSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-is5GHzBandSupported' class='name expandable'>is5GHzBandSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this adapter supports 5 GHz band</p>\n</div></li></ul></div></div></div><div id='method-isDeviceToApRttSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isDeviceToApRttSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isDeviceToApRttSupported' class='name expandable'>isDeviceToApRttSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Please use android.content.pm.PackageManager.hasSystemFeature(String)\n with android.content.pm.PackageManager.FEATURE_WIFI_RTT.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this adapter supports Device-to-AP RTT</p>\n</div></li></ul></div></div></div><div id='method-isEasyConnectSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isEasyConnectSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isEasyConnectSupported' class='name expandable'>isEasyConnectSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Wi-Fi Easy Connect (DPP) introduces standardized mechanisms to simplify the provisioning and\n configuration of Wi-Fi ...</div><div class='long'><p>Wi-Fi Easy Connect (DPP) introduces standardized mechanisms to simplify the provisioning and\n configuration of Wi-Fi devices.\n For more details, visit <a href=\"https://www.wi-fi.org/\">https://www.wi-fi.org/</a> and\n search for \"Easy Connect\" or \"Device Provisioning Protocol specification\".</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this device supports Wi-Fi Easy-connect (Device Provisioning Protocol)</p>\n</div></li></ul></div></div></div><div id='method-isEnhancedOpenSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isEnhancedOpenSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isEnhancedOpenSupported' class='name expandable'>isEnhancedOpenSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this device supports Wi-Fi Enhanced Open (OWE)</p>\n</div></li></ul></div></div></div><div id='method-isEnhancedPowerReportingSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isEnhancedPowerReportingSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isEnhancedPowerReportingSupported' class='name expandable'>isEnhancedPowerReportingSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this adapter supports advanced power/performance counters</p>\n</div></li></ul></div></div></div><div id='method-isP2pSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isP2pSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isP2pSupported' class='name expandable'>isP2pSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this adapter supports WifiP2pManager (Wi-Fi Direct)</p>\n</div></li></ul></div></div></div><div id='method-isPreferredNetworkOffloadSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isPreferredNetworkOffloadSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isPreferredNetworkOffloadSupported' class='name expandable'>isPreferredNetworkOffloadSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this adapter supports offloaded connectivity scan</p>\n</div></li></ul></div></div></div><div id='method-isScanAlwaysAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isScanAlwaysAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isScanAlwaysAvailable' class='name expandable'>isScanAlwaysAvailable</a>( <span class='pre'></span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Check if scanning is always available. ...</div><div class='long'><p>Check if scanning is always available.</p>\n\n<p> If this return {@code true}, apps can issue startScan and fetch scan results\n even when Wi-Fi is turned off.</p>\n\n<p> To change this setting, see <a href=\"#!/api/android.net.wifi.WifiManager-property-ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE\" rel=\"android.net.wifi.WifiManager-property-ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE\" class=\"docClass\">ACTION_REQUEST_SCAN_ALWAYS_AVAILABLE</a>.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>The ability for apps to trigger scan requests will be removed in a future\n release.</p>\n\n        </div>\n</div></div></div><div id='method-isTdlsSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isTdlsSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isTdlsSupported' class='name expandable'>isTdlsSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this adapter supports Tunnel Directed Link Setup</p>\n</div></li></ul></div></div></div><div id='method-isWifiEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isWifiEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isWifiEnabled' class='name expandable'>isWifiEnabled</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Return whether Wi-Fi is enabled or disabled. ...</div><div class='long'><p>Return whether Wi-Fi is enabled or disabled.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if Wi-Fi is enabled\n@see <a href=\"#!/api/android.net.wifi.WifiManager-method-getWifiState\" rel=\"android.net.wifi.WifiManager-method-getWifiState\" class=\"docClass\">getWifiState</a>()</p>\n</div></li></ul></div></div></div><div id='method-isWpa3SaeSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isWpa3SaeSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isWpa3SaeSupported' class='name expandable'>isWpa3SaeSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this device supports WPA3-Personal SAE</p>\n</div></li></ul></div></div></div><div id='method-isWpa3SuiteBSupported' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-isWpa3SuiteBSupported' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-isWpa3SuiteBSupported' class='name expandable'>isWpa3SuiteBSupported</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>true if this device supports WPA3-Enterprise Suite-B-192</p>\n</div></li></ul></div></div></div><div id='method-pingSupplicant' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-pingSupplicant' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-pingSupplicant' class='name expandable'>pingSupplicant</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Check that the supplicant daemon is responding to requests. ...</div><div class='long'><p>Check that the supplicant daemon is responding to requests.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Will return the output of isWifiEnabled() instead.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if we were able to communicate with the supplicant and\n it returned the expected response to the PING message.</p>\n</div></li></ul></div></div></div><div id='method-reassociate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-reassociate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-reassociate' class='name expandable'>reassociate</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Reconnect to the currently active access point, even if we are already\n connected. ...</div><div class='long'><p>Reconnect to the currently active access point, even if we are already\n connected. This may result in the asynchronous delivery of state\n change events.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded</p>\n</div></li></ul></div></div></div><div id='method-reconnect' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-reconnect' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-reconnect' class='name expandable'>reconnect</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Reconnect to the currently active access point, if we are currently\n disconnected. ...</div><div class='long'><p>Reconnect to the currently active access point, if we are currently\n disconnected. This may result in the asynchronous delivery of state\n change events.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded</p>\n</div></li></ul></div></div></div><div id='method-removeNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-removeNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-removeNetwork' class='name expandable'>removeNetwork</a>( <span class='pre'>netId</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Remove the specified network from the list of configured networks. ...</div><div class='long'><p>Remove the specified network from the list of configured networks.\n This may result in the asynchronous delivery of state change\n events.</p>\n\n<p> Applications are not allowed to remove networks created by other\n applications.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return false.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>netId</span> : Number<div class='sub-desc'><p>the ID of the network as returned by <a href=\"#!/api/android.net.wifi.WifiManager-method-addNetwork\" rel=\"android.net.wifi.WifiManager-method-addNetwork\" class=\"docClass\">addNetwork</a> or <a href=\"#!/api/android.net.wifi.WifiManager-method-getConfiguredNetworks\" rel=\"android.net.wifi.WifiManager-method-getConfiguredNetworks\" class=\"docClass\">getConfiguredNetworks</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the operation succeeded</p>\n</div></li></ul></div></div></div><div id='method-removeNetworkSuggestions' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-removeNetworkSuggestions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-removeNetworkSuggestions' class='name expandable'>removeNetworkSuggestions</a>( <span class='pre'>networkSuggestions</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Remove some or all of the network suggestions that were previously provided by the app. ...</div><div class='long'><p>Remove some or all of the network suggestions that were previously provided by the app.\n See <a href=\"#!/api/android.net.wifi.WifiNetworkSuggestion\" rel=\"android.net.wifi.WifiNetworkSuggestion\" class=\"docClass\">android.net.wifi.WifiNetworkSuggestion</a> for a detailed explanation of the parameters.\n See android.net.wifi.WifiNetworkSuggestion.equals(Object) for the equivalence evaluation used.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>networkSuggestions</span> : Object {java.util.List}<div class='sub-desc'><p>List of network suggestions to be removed. Pass an empty list\n                           to remove all the previous suggestions provided by the app.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Status code for the operation. One of the STATUS_NETWORK_SUGGESTIONS_ values.\n Any matching suggestions are removed from the device and will not be considered for any\n further connection attempts.</p>\n</div></li></ul></div></div></div><div id='method-removePasspointConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-removePasspointConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-removePasspointConfiguration' class='name expandable'>removePasspointConfiguration</a>( <span class='pre'>fqdn</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Remove the Passpoint configuration identified by its FQDN (Fully Qualified Domain Name). ...</div><div class='long'><p>Remove the Passpoint configuration identified by its FQDN (Fully Qualified Domain Name).</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This is no longer supported.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fqdn</span> : String<div class='sub-desc'><p>The FQDN of the Passpoint configuration to be removed</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if no configuration is associated with the given FQDN or\n                                  Passpoint is not enabled on the device.</p>\n</div></li></ul></div></div></div><div id='method-saveConfiguration' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-saveConfiguration' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-saveConfiguration' class='name expandable'>saveConfiguration</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Tell the device to persist the current list of configured networks. ...</div><div class='long'><p>Tell the device to persist the current list of configured networks.\n <p>\n Note: It is possible for this method to change the network IDs of\n existing networks. You should assume the network IDs can be different\n after calling this method.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>There is no need to call this method -\n addNetwork(WifiConfiguration), updateNetwork(WifiConfiguration)\n and removeNetwork(int) already persist the configurations automatically.</p>\n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false}.</p>\n</div></li></ul></div></div></div><div id='method-setTdlsEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-setTdlsEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-setTdlsEnabled' class='name expandable'>setTdlsEnabled</a>( <span class='pre'>remoteIPAddress, enable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Enable/Disable TDLS on a specific local route. ...</div><div class='long'><p>Enable/Disable TDLS on a specific local route.</p>\n\n<p> <p>\n TDLS enables two wireless endpoints to talk to each other directly\n without going through the access point that is managing the local\n network. It saves bandwidth and improves quality of the link.\n </p>\n <p>\n This API enables/disables the option of using TDLS. If enabled, the\n underlying hardware is free to use TDLS or a hop through the access\n point. If disabled, existing TDLS session is torn down and\n hardware is restricted to use access point for transferring wireless\n packets. Default value for all routes is 'disabled', meaning restricted\n to use access point for transferring packets.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>remoteIPAddress</span> : Object {InetAddress}<div class='sub-desc'><p>IP address of the endpoint to setup TDLS with</p>\n</div></li><li><span class='pre'>enable</span> : Boolean<div class='sub-desc'><p>true = setup and false = tear down TDLS</p>\n</div></li></ul></div></div></div><div id='method-setTdlsEnabledWithMacAddress' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-setTdlsEnabledWithMacAddress' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-setTdlsEnabledWithMacAddress' class='name expandable'>setTdlsEnabledWithMacAddress</a>( <span class='pre'>remoteMacAddress, enable</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Similar to boolean) , except\n this version allows you to specify remote endpoint with a MAC address. ...</div><div class='long'><p>Similar to boolean) , except\n this version allows you to specify remote endpoint with a MAC address.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>remoteMacAddress</span> : String<div class='sub-desc'><p>MAC address of the remote endpoint such as 00:00:0c:9f:f2:ab</p>\n</div></li><li><span class='pre'>enable</span> : Boolean<div class='sub-desc'><p>true = setup and false = tear down TDLS</p>\n</div></li></ul></div></div></div><div id='method-setWifiEnabled' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-setWifiEnabled' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-setWifiEnabled' class='name expandable'>setWifiEnabled</a>( <span class='pre'>enabled</span> ) : Boolean<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Enable or disable Wi-Fi. ...</div><div class='long'><p>Enable or disable Wi-Fi.\n <p>\n Applications must have the android.Manifest.permission.CHANGE_WIFI_STATE\n permission to toggle wifi.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>Starting with Build.VERSION_CODES#Q, applications are not allowed to\n enable/disable Wi-Fi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return {@code false}\n and will have no effect. If apps are targeting an older SDK (\n android.os.Build.VERSION_CODES.P or below), they can continue to use this API.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>enabled</span> : Boolean<div class='sub-desc'><p>{@code true} to enable, {@code false} to disable.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code false} if the request cannot be satisfied; {@code true} indicates that wifi is\n         either already in the requested state, or in progress toward the requested state.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>@link java.lang.SecurityException</span><div class='sub-desc'><p>if the caller is missing required permissions.</p>\n</div></li></ul></div></div></div><div id='method-startLocalOnlyHotspot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-startLocalOnlyHotspot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-startLocalOnlyHotspot' class='name expandable'>startLocalOnlyHotspot</a>( <span class='pre'>callback, handler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Request a local only hotspot that an application can use to communicate between co-located\n devices connected to the ...</div><div class='long'><p>Request a local only hotspot that an application can use to communicate between co-located\n devices connected to the created WiFi hotspot.  The network created by this method will not\n have Internet access.  Each application can make a single request for the hotspot, but\n multiple applications could be requesting the hotspot at the same time.  When multiple\n applications have successfully registered concurrently, they will be sharing the underlying\n hotspot. android.net.wifi.WifiManager.LocalOnlyHotspotCallback.onStarted(LocalOnlyHotspotReservation) is called\n when the hotspot is ready for use by the application.\n <p>\n Each application can make a single active call to this method. The android.net.wifi.WifiManager.LocalOnlyHotspotCallback.onStarted(LocalOnlyHotspotReservation) callback supplies the\n requestor with a <a href=\"#!/api/android.net.wifi.WifiManager.LocalOnlyHotspotReservation\" rel=\"android.net.wifi.WifiManager.LocalOnlyHotspotReservation\" class=\"docClass\">android.net.wifi.WifiManager.LocalOnlyHotspotReservation</a> that contains a\n <a href=\"#!/api/android.net.wifi.WifiConfiguration\" rel=\"android.net.wifi.WifiConfiguration\" class=\"docClass\">android.net.wifi.WifiConfiguration</a> with the SSID, security type and credentials needed to connect\n to the hotspot.  Communicating this information is up to the application.\n <p>\n If the LocalOnlyHotspot cannot be created, the android.net.wifi.WifiManager.LocalOnlyHotspotCallback.onFailed(int)\n method will be called. Example failures include errors bringing up the network or if\n there is an incompatible operating mode.  For example, if the user is currently using Wifi\n Tethering to provide an upstream to another device, LocalOnlyHotspot will not start due to\n an incompatible mode. The possible error codes include:\n <a href=\"#!/api/android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_NO_CHANNEL\" rel=\"android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_NO_CHANNEL\" class=\"docClass\">android.net.wifi.WifiManager.LocalOnlyHotspotCallback.ERROR_NO_CHANNEL</a>,\n <a href=\"#!/api/android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_GENERIC\" rel=\"android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_GENERIC\" class=\"docClass\">android.net.wifi.WifiManager.LocalOnlyHotspotCallback.ERROR_GENERIC</a>,\n <a href=\"#!/api/android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_INCOMPATIBLE_MODE\" rel=\"android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_INCOMPATIBLE_MODE\" class=\"docClass\">android.net.wifi.WifiManager.LocalOnlyHotspotCallback.ERROR_INCOMPATIBLE_MODE</a> and\n <a href=\"#!/api/android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_TETHERING_DISALLOWED\" rel=\"android.net.wifi.WifiManager.LocalOnlyHotspotCallback-property-ERROR_TETHERING_DISALLOWED\" class=\"docClass\">android.net.wifi.WifiManager.LocalOnlyHotspotCallback.ERROR_TETHERING_DISALLOWED</a>.\n <p>\n Internally, requests will be tracked to prevent the hotspot from being torn down while apps\n are still using it.  The <a href=\"#!/api/android.net.wifi.WifiManager.LocalOnlyHotspotReservation\" rel=\"android.net.wifi.WifiManager.LocalOnlyHotspotReservation\" class=\"docClass\">android.net.wifi.WifiManager.LocalOnlyHotspotReservation</a> object passed in the  android.net.wifi.WifiManager.LocalOnlyHotspotCallback.onStarted(LocalOnlyHotspotReservation) call should be closed when\n the LocalOnlyHotspot is no longer needed using android.net.wifi.WifiManager.LocalOnlyHotspotReservation.close().\n Since the hotspot may be shared among multiple applications, removing the final registered\n application request will trigger the hotspot teardown.  This means that applications should\n not listen to broadcasts containing wifi state to determine if the hotspot was stopped after\n they are done using it. Additionally, once android.net.wifi.WifiManager.LocalOnlyHotspotReservation.close() is\n called, applications will not receive callbacks of any kind.\n <p>\n Applications should be aware that the user may also stop the LocalOnlyHotspot through the\n Settings UI; it is not guaranteed to stay up as long as there is a requesting application.\n The requestors will be notified of this case via\n android.net.wifi.WifiManager.LocalOnlyHotspotCallback.onStopped().  Other cases may arise where the hotspot is\n torn down (Emergency mode, etc).  Application developers should be aware that it can stop\n unexpectedly, but they will receive a notification if they have properly registered.\n <p>\n Applications should also be aware that this network will be shared with other applications.\n Applications are responsible for protecting their data on this network (e.g., TLS).\n <p>\n Applications need to have the following permissions to start LocalOnlyHotspot: android.Manifest.permission.CHANGE_WIFI_STATE and ACCESS_FINE_LOCATION.  Callers without\n the permissions will trigger a java.lang.SecurityException.\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>callback</span> : Object {WifiManager.LocalOnlyHotspotCallback}<div class='sub-desc'><p>LocalOnlyHotspotCallback for the application to receive updates about\n operating status.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>Handler to be used for callbacks.  If the caller passes a null Handler, the\n main thread will be used.</p>\n</div></li></ul></div></div></div><div id='method-startWps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-startWps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-startWps' class='name expandable'>startWps</a>( <span class='pre'>config, listener</span> )<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>WPS suport has been deprecated from Client mode and this method will immediately trigger\n android.net.wifi.WifiManage...</div><div class='long'><p>WPS suport has been deprecated from Client mode and this method will immediately trigger\n android.net.wifi.WifiManager.WpsCallback.onFailed(int) with a generic error.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>This API is deprecated</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {WpsInfo}<div class='sub-desc'><p>WPS configuration (does not support WpsInfo.LABEL)</p>\n</div></li><li><span class='pre'>listener</span> : Object {WifiManager.WpsCallback}<div class='sub-desc'><p>for callbacks on success or failure. Can be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalStateException if the WifiManager instance needs to be initialized again</p>\n</div></li></ul></div></div></div><div id='method-updateNetwork' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.net.wifi.WifiManager'>android.net.wifi.WifiManager</span><br/><a href='source/WifiManager.html#android-net-wifi-WifiManager-method-updateNetwork' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.net.wifi.WifiManager-method-updateNetwork' class='name expandable'>updateNetwork</a>( <span class='pre'>config</span> ) : Number<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Update the network description of an existing configured network. ...</div><div class='long'><p>Update the network description of an existing configured network.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>a) See WifiNetworkSpecifier.Builder.build() for new\n mechanism to trigger connection to a Wi-Fi network.\n b) See addNetworkSuggestions(List),\n removeNetworkSuggestions(List) for new API to add Wi-Fi networks for consideration\n when auto-connecting to wifi.\n <b>Compatibility Note:</b> For applications targeting\n android.os.Build.VERSION_CODES.Q or above, this API will always return {@code -1}.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object {WifiConfiguration}<div class='sub-desc'><p>the set of variables that describe the configuration,\n            contained in a WifiConfiguration object. It may\n            be sparse, so that only the items that are being changed\n            are non-<code>null</code>. The {@code networkId} field\n            must be set to the ID of the existing network being updated.\n            If the WifiConfiguration has an Http Proxy set\n            the calling app must be System, or be provisioned as the Profile or Device Owner.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>Returns the {@code networkId} of the supplied\n         {@code WifiConfiguration} on success.\n         <br/>\n         Returns {@code -1} on failure, including when the {@code networkId}\n         field of the {@code WifiConfiguration} does not refer to an\n         existing network.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});