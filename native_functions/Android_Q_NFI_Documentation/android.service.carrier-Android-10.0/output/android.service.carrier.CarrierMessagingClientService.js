Ext.data.JsonP.android_service_carrier_CarrierMessagingClientService({"tagname":"class","name":"android.service.carrier.CarrierMessagingClientService","autodetected":{},"files":[{"filename":"CarrierMessagingClientService.js","href":"CarrierMessagingClientService.html#android-service-carrier-CarrierMessagingClientService"}],"extends":"android.app.Service","members":[{"name":"onBind","tagname":"method","owner":"android.service.carrier.CarrierMessagingClientService","id":"method-onBind","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.service.carrier.CarrierMessagingClientService","short_doc":"If the default SMS app has a service that extends this class, the system always tries to bind\n it so that the process...","classIcon":"icon-class","superclasses":["android.app.Service"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.app.Service<div class='subclass '><strong>android.service.carrier.CarrierMessagingClientService</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CarrierMessagingClientService.html#android-service-carrier-CarrierMessagingClientService' target='_blank'>CarrierMessagingClientService.js</a></div></pre><div class='doc-contents'><p>If the default SMS app has a service that extends this class, the system always tries to bind\n it so that the process is always running, which allows the app to have a persistent connection\n to the server.</p>\n\n<p> <p>The service must have an\n android.telephony.TelephonyManager.ACTION_CARRIER_MESSAGING_CLIENT_SERVICE\n action in the intent handler, and be protected with\n android.Manifest.permission.BIND_CARRIER_MESSAGING_CLIENT_SERVICE.\n However the service does not have to be exported.</p>\n\n<p> <p>The service must be associated with a non-main process, meaning it must have an\n {@code android:process} tag in its manifest entry.</p>\n\n<p> <p>An app can use\n int, int)\n to disable or enable the service. An app should use it to disable the service when it no longer\n needs to be running.</p>\n\n<p> <p>When the owner process crashes, the service will be re-bound automatically after a\n back-off.</p>\n\n<p> <p>Note the process may still be killed if the system is under heavy memory pressure, in which\n case the process will be re-started later.</p>\n\n<p> <p>Example: First, define a subclass in the application:</p>\n\n<pre> public class MyCarrierMessagingClientService extends CarrierMessagingClientService {\n }\n </pre>\n\n\n<p> Then, declare it in its {@code AndroidManifest.xml}:</p>\n\n<pre> &lt;service\n    android:name=\".MyCarrierMessagingClientService\"\n    android:exported=\"false\"\n    android:process=\":persistent\"\n    android:permission=\"android.permission.BIND_CARRIER_MESSAGING_CLIENT_SERVICE\"&gt;\n    &lt;intent-filter&gt;\n        &lt;action android:name=\"android.telephony.action.CARRIER_MESSAGING_CLIENT_SERVICE\" /&gt;\n    &lt;/intent-filter&gt;\n &lt;/service&gt;\n </pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onBind' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.carrier.CarrierMessagingClientService'>android.service.carrier.CarrierMessagingClientService</span><br/><a href='source/CarrierMessagingClientService.html#android-service-carrier-CarrierMessagingClientService-method-onBind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.carrier.CarrierMessagingClientService-method-onBind' class='name expandable'>onBind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div></div></div>","meta":{}});