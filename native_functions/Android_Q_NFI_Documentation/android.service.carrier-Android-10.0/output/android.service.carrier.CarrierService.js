Ext.data.JsonP.android_service_carrier_CarrierService({"tagname":"class","name":"android.service.carrier.CarrierService","autodetected":{},"files":[{"filename":"CarrierService.js","href":"CarrierService.html#android-service-carrier-CarrierService"}],"extends":"android.app.Service","members":[{"name":"CARRIER_SERVICE_INTERFACE","tagname":"property","owner":"android.service.carrier.CarrierService","id":"property-CARRIER_SERVICE_INTERFACE","meta":{}},{"name":"notifyCarrierNetworkChange","tagname":"method","owner":"android.service.carrier.CarrierService","id":"method-notifyCarrierNetworkChange","meta":{}},{"name":"onBind","tagname":"method","owner":"android.service.carrier.CarrierService","id":"method-onBind","meta":{}},{"name":"onLoadConfig","tagname":"method","owner":"android.service.carrier.CarrierService","id":"method-onLoadConfig","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.service.carrier.CarrierService","short_doc":"A service that exposes carrier-specific functionality to the system. ...","classIcon":"icon-class","superclasses":["android.app.Service"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.app.Service<div class='subclass '><strong>android.service.carrier.CarrierService</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/CarrierService.html#android-service-carrier-CarrierService' target='_blank'>CarrierService.js</a></div></pre><div class='doc-contents'><p>A service that exposes carrier-specific functionality to the system.\n <p>\n To extend this class, you must declare the service in your manifest file to require the\n android.Manifest.permission.BIND_CARRIER_SERVICES permission and include an intent\n filter with the <a href=\"#!/api/android.service.carrier.CarrierService-property-CARRIER_SERVICE_INTERFACE\" rel=\"android.service.carrier.CarrierService-property-CARRIER_SERVICE_INTERFACE\" class=\"docClass\">CARRIER_SERVICE_INTERFACE</a>. If the service should have a long-lived\n binding, set <code>android.service.carrier.LONG_LIVED_BINDING</code> to <code>true</code> in the\n service's metadata. For example:\n </p></p>\n\n<p> <pre>{@code\n <service android:name=\".MyCarrierService\"\n       android:label=\"@string/service_name\"\n       android:permission=\"android.permission.BIND_CARRIER_SERVICES\">\n  <intent-filter>\n      <action android:name=\"android.service.carrier.CarrierService\" />\n  </intent-filter>\n  <meta-data android:name=\"android.service.carrier.LONG_LIVED_BINDING\"\n             android:value=\"true\" />\n </action></intent></service>\n }</pre></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CARRIER_SERVICE_INTERFACE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.carrier.CarrierService'>android.service.carrier.CarrierService</span><br/><a href='source/CarrierService.html#android-service-carrier-CarrierService-property-CARRIER_SERVICE_INTERFACE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.carrier.CarrierService-property-CARRIER_SERVICE_INTERFACE' class='name expandable'>CARRIER_SERVICE_INTERFACE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;android.service.carrier.CarrierService&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-notifyCarrierNetworkChange' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.carrier.CarrierService'>android.service.carrier.CarrierService</span><br/><a href='source/CarrierService.html#android-service-carrier-CarrierService-method-notifyCarrierNetworkChange' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.carrier.CarrierService-method-notifyCarrierNetworkChange' class='name expandable'>notifyCarrierNetworkChange</a>( <span class='pre'>active</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Informs the system of an intentional upcoming carrier network change by\n a carrier app. ...</div><div class='long'><p>Informs the system of an intentional upcoming carrier network change by\n a carrier app. This call is optional and is only used to allow the\n system to provide alternative UI while telephony is performing an action\n that may result in intentional, temporary network lack of connectivity.\n <p>\n Based on the active parameter passed in, this method will either show or\n hide the alternative UI. There is no timeout associated with showing\n this UX, so a carrier app must be sure to call with active set to false\n sometime after calling with it set to true.\n <p>\n Requires Permission: calling app has carrier privileges.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>active</span> : Boolean<div class='sub-desc'><p>Whether the carrier network change is or shortly will be\n               active. Set this value to true to begin showing\n               alternative UI and false to stop.\n@see android.telephony.TelephonyManager#hasCarrierPrivileges</p>\n</div></li></ul></div></div></div><div id='method-onBind' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.carrier.CarrierService'>android.service.carrier.CarrierService</span><br/><a href='source/CarrierService.html#android-service-carrier-CarrierService-method-onBind' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.carrier.CarrierService-method-onBind' class='name expandable'>onBind</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>If overriding this method, call through to the super method for any unknown actions. ...</div><div class='long'><p>If overriding this method, call through to the super method for any unknown actions.\n {@inheritDoc}</p>\n</div></div></div><div id='method-onLoadConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.service.carrier.CarrierService'>android.service.carrier.CarrierService</span><br/><a href='source/CarrierService.html#android-service-carrier-CarrierService-method-onLoadConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.service.carrier.CarrierService-method-onLoadConfig' class='name expandable'>onLoadConfig</a>( <span class='pre'>id</span> ) : Object {android.os.PersistableBundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this method to set carrier configuration. ...</div><div class='long'><p>Override this method to set carrier configuration.\n <p>\n This method will be called by telephony services to get carrier-specific configuration\n values. The returned config will be saved by the system until,\n <ol>\n <li>The carrier app package is updated, or</li>\n <li>The carrier app requests a reload with\n notifyConfigChangedForSubId.</li>\n </ol>\n This method can be called after a SIM card loads, which may be before or after boot.\n </p>\n <p>\n This method should not block for a long time. If expensive operations (e.g. network access)\n are required, this method can schedule the work and return null. Then, use\n notifyConfigChangedForSubId to trigger a reload when the config is ready.\n </p>\n <p>\n Implementations should use the keys defined in CarrierConfigManager. Any configuration values not set in the returned PersistableBundle may be overridden by the system's default configuration service.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : Object {CarrierIdentifier}<div class='sub-desc'><p>contains details about the current carrier that can be used do decide what\n           configuration values to return. Instead of using details like MCCMNC to decide\n           current carrier, it also contains subscription carrier id\n           android.telephony.TelephonyManager.getSimCarrierId(), a platform-wide\n           unique identifier for each carrier, CarrierConfigService can directly use carrier\n           id as the key to look up the carrier info.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.PersistableBundle}</span><div class='sub-desc'><p>a PersistableBundle object containing the configuration or null if default\n         values should be used.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});