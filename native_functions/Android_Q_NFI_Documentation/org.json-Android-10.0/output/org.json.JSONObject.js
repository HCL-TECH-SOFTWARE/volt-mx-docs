Ext.data.JsonP.org_json_JSONObject({"tagname":"class","name":"org.json.JSONObject","autodetected":{},"files":[{"filename":"JSONObject.js","href":"JSONObject.html#org-json-JSONObject"}],"extends":"java.lang.Object","members":[{"name":"NULL","tagname":"property","owner":"org.json.JSONObject","id":"property-NULL","meta":{}},{"name":"accumulate","tagname":"method","owner":"org.json.JSONObject","id":"method-accumulate","meta":{}},{"name":"get","tagname":"method","owner":"org.json.JSONObject","id":"method-get","meta":{}},{"name":"getBoolean","tagname":"method","owner":"org.json.JSONObject","id":"method-getBoolean","meta":{}},{"name":"getDouble","tagname":"method","owner":"org.json.JSONObject","id":"method-getDouble","meta":{}},{"name":"getInt","tagname":"method","owner":"org.json.JSONObject","id":"method-getInt","meta":{}},{"name":"getJSONArray","tagname":"method","owner":"org.json.JSONObject","id":"method-getJSONArray","meta":{}},{"name":"getJSONObject","tagname":"method","owner":"org.json.JSONObject","id":"method-getJSONObject","meta":{}},{"name":"getLong","tagname":"method","owner":"org.json.JSONObject","id":"method-getLong","meta":{}},{"name":"getString","tagname":"method","owner":"org.json.JSONObject","id":"method-getString","meta":{}},{"name":"has","tagname":"method","owner":"org.json.JSONObject","id":"method-has","meta":{}},{"name":"isNull","tagname":"method","owner":"org.json.JSONObject","id":"method-isNull","meta":{}},{"name":"keys","tagname":"method","owner":"org.json.JSONObject","id":"method-keys","meta":{}},{"name":"length","tagname":"method","owner":"org.json.JSONObject","id":"method-length","meta":{}},{"name":"names","tagname":"method","owner":"org.json.JSONObject","id":"method-names","meta":{}},{"name":"numberToString","tagname":"method","owner":"org.json.JSONObject","id":"method-numberToString","meta":{}},{"name":"opt","tagname":"method","owner":"org.json.JSONObject","id":"method-opt","meta":{}},{"name":"optBoolean","tagname":"method","owner":"org.json.JSONObject","id":"method-optBoolean","meta":{}},{"name":"optDouble","tagname":"method","owner":"org.json.JSONObject","id":"method-optDouble","meta":{}},{"name":"optInt","tagname":"method","owner":"org.json.JSONObject","id":"method-optInt","meta":{}},{"name":"optJSONArray","tagname":"method","owner":"org.json.JSONObject","id":"method-optJSONArray","meta":{}},{"name":"optJSONObject","tagname":"method","owner":"org.json.JSONObject","id":"method-optJSONObject","meta":{}},{"name":"optLong","tagname":"method","owner":"org.json.JSONObject","id":"method-optLong","meta":{}},{"name":"optString","tagname":"method","owner":"org.json.JSONObject","id":"method-optString","meta":{}},{"name":"put","tagname":"method","owner":"org.json.JSONObject","id":"method-put","meta":{}},{"name":"putOpt","tagname":"method","owner":"org.json.JSONObject","id":"method-putOpt","meta":{}},{"name":"quote","tagname":"method","owner":"org.json.JSONObject","id":"method-quote","meta":{}},{"name":"remove","tagname":"method","owner":"org.json.JSONObject","id":"method-remove","meta":{}},{"name":"toJSONArray","tagname":"method","owner":"org.json.JSONObject","id":"method-toJSONArray","meta":{}},{"name":"toString","tagname":"method","owner":"org.json.JSONObject","id":"method-toString","meta":{}},{"name":"wrap","tagname":"method","owner":"org.json.JSONObject","id":"method-wrap","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-org.json.JSONObject","short_doc":"A modifiable set of name/value mappings. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>org.json.JSONObject</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/JSONObject.html#org-json-JSONObject' target='_blank'>JSONObject.js</a></div></pre><div class='doc-contents'><p>A modifiable set of name/value mappings. Names are unique, non-null strings.\n Values may be any mix of <a href=\"#!/api/org.json.JSONObject\" rel=\"org.json.JSONObject\" class=\"docClass\">org.json.JSONObjects</a>, <a href=\"#!/api/org.json.JSONArray\" rel=\"org.json.JSONArray\" class=\"docClass\">org.json.JSONArrays</a>, Strings, Booleans, Integers, Longs, Doubles or <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a>.\n Values may not be {@code null}, NaNs, infinities, or of any type not listed here.</p>\n\n<p> <p>This class can coerce values to another type when requested.\n <ul>\n   <li>When the requested type is a boolean, strings will be coerced using a\n       case-insensitive comparison to \"true\" and \"false\".\n   <li>When the requested type is a double, other Number types will\n       be coerced using doubleValue. Strings\n       that can be coerced using Double.valueOf(String) will be.\n   <li>When the requested type is an int, other Number types will\n       be coerced using intValue. Strings\n       that can be coerced using Double.valueOf(String) will be,\n       and then cast to int.\n   <li><a name=\"lossy\">When the requested type is a long, other Number types will\n       be coerced using longValue. Strings\n       that can be coerced using Double.valueOf(String) will be,\n       and then cast to long. This two-step conversion is lossy for very\n       large values. For example, the string \"9223372036854775806\" yields the\n       long 9223372036854775807.</a>\n   <li>When the requested type is a String, other non-null values will be\n       coerced using String.valueOf(Object). Although null cannot be\n       coerced, the sentinel value <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a> is coerced to the\n       string \"null\".\n </li></li></li></li></li></ul></p>\n\n<p> <p>This class can look up both mandatory and optional values:\n <ul>\n   <li>Use <code>get<i>Type</i>()</code> to retrieve a mandatory value. This\n       fails with a {@code JSONException} if the requested name has no value\n       or if the value cannot be coerced to the requested type.\n   <li>Use <code>opt<i>Type</i>()</code> to retrieve an optional value. This\n       returns a system- or user-supplied default if the requested name has no\n       value or if the value cannot be coerced to the requested type.\n </li></li></ul></p>\n\n<p> <p><strong>Warning:</strong> this class represents null in two incompatible\n ways: the standard Java {@code null} reference, and the sentinel value <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a>. In particular, calling {@code put(name, null)} removes the\n named entry from the object but {@code put(name, JSONObject.NULL)} stores an\n entry whose value is {@code JSONObject.NULL}.</p>\n\n<p> <p>Instances of this class are not thread safe. Although this class is\n nonfinal, it was not designed for inheritance and should not be subclassed.\n In particular, self-use by overrideable methods is not specified. See\n <i>Effective Java</i> Item 17, \"Design and Document or inheritance or else\n prohibit it\" for further information.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-NULL' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-property-NULL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-property-NULL' class='name expandable'>NULL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A sentinel value used to explicitly define a name with no value. ...</div><div class='long'><p>A sentinel value used to explicitly define a name with no value. Unlike\n{@code null}, names with this value:</p>\n\n<ul>\n  <li>show up in the <a href=\"#!/api/org.json.JSONObject-method-names\" rel=\"org.json.JSONObject-method-names\" class=\"docClass\">names</a> array\n  <li>show up in the <a href=\"#!/api/org.json.JSONObject-method-keys\" rel=\"org.json.JSONObject-method-keys\" class=\"docClass\">keys</a> iterator\n  <li>return {@code true} for <a href=\"#!/api/org.json.JSONObject-method-has\" rel=\"org.json.JSONObject-method-has\" class=\"docClass\">has</a>(String)\n  <li>do not throw on <a href=\"#!/api/org.json.JSONObject-method-get\" rel=\"org.json.JSONObject-method-get\" class=\"docClass\">get</a>(String)\n  <li>are included in the encoded JSON string.\n</li></li></li></li></li></ul>\n\n\n\n\n<p><p>This value violates the general contract of Object.equals by\nreturning true when compared to {@code null}. Its <a href=\"#!/api/org.json.JSONObject-method-toString\" rel=\"org.json.JSONObject-method-toString\" class=\"docClass\">toString</a>\nmethod returns \"null\".</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-accumulate' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-accumulate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-accumulate' class='name expandable'>accumulate</a>( <span class='pre'>value</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Appends {@code value} to the array already mapped to {@code name}. ...</div><div class='long'><p>Appends {@code value} to the array already mapped to {@code name}. If\n this object has no mapping for {@code name}, this inserts a new mapping.\n If the mapping exists but its value is not an array, the existing\n and new values are inserted in order into a new array which is itself\n mapped to {@code name}. In aggregate, this allows values to be added to a\n mapping one at a time.</p>\n\n<p> <p> Note that {@code append(String, Object)} provides better semantics.\n In particular, the mapping for {@code name} will <b>always</b> be a\n <a href=\"#!/api/org.json.JSONArray\" rel=\"org.json.JSONArray\" class=\"docClass\">org.json.JSONArray</a>. Using {@code accumulate} will result in either a\n <a href=\"#!/api/org.json.JSONArray\" rel=\"org.json.JSONArray\" class=\"docClass\">org.json.JSONArray</a> or a mapping whose type is the type of {@code value}\n depending on the number of calls to it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : String<div class='sub-desc'><p>a JSONObject, JSONArray, String, Boolean,\n     Integer, Long, Double, <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a> or null. May not be NaNs or infinities.</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-get' class='name expandable'>get</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name}, or throws if no such mapping exists. ...</div><div class='long'><p>Returns the value mapped by {@code name}, or throws if no such mapping exists.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if no such mapping exists.</p>\n</div></li></ul></div></div></div><div id='method-getBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-getBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-getBoolean' class='name expandable'>getBoolean</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a boolean or\n can be coerced to a boolean, or throws oth...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a boolean or\n can be coerced to a boolean, or throws otherwise.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if the mapping doesn't exist or cannot be coerced\n     to a boolean.</p>\n</div></li></ul></div></div></div><div id='method-getDouble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-getDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-getDouble' class='name expandable'>getDouble</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a double or\n can be coerced to a double, or throws other...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a double or\n can be coerced to a double, or throws otherwise.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if the mapping doesn't exist or cannot be coerced\n     to a double.</p>\n</div></li></ul></div></div></div><div id='method-getInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-getInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-getInt' class='name expandable'>getInt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is an int or\n can be coerced to an int, or throws otherwise. ...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is an int or\n can be coerced to an int, or throws otherwise.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if the mapping doesn't exist or cannot be coerced\n     to an int.</p>\n</div></li></ul></div></div></div><div id='method-getJSONArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-getJSONArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-getJSONArray' class='name expandable'>getJSONArray</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONArray}, or throws otherwise. ...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONArray}, or throws otherwise.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if the mapping doesn't exist or is not a {@code\n     JSONArray}.</p>\n</div></li></ul></div></div></div><div id='method-getJSONObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-getJSONObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-getJSONObject' class='name expandable'>getJSONObject</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONObject}, or throws otherwise. ...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONObject}, or throws otherwise.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if the mapping doesn't exist or is not a {@code\n     JSONObject}.</p>\n</div></li></ul></div></div></div><div id='method-getLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-getLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-getLong' class='name expandable'>getLong</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a long or\n can be coerced to a long, or throws otherwise. ...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a long or\n can be coerced to a long, or throws otherwise.\n Note that JSON represents numbers as doubles,\n so this is <a href=\"#lossy\">lossy</a>; use strings to transfer numbers via JSON.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if the mapping doesn't exist or cannot be coerced\n     to a long.</p>\n</div></li></ul></div></div></div><div id='method-getString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-getString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-getString' class='name expandable'>getString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists, coercing it if\n necessary, or throws if no such mapping exists. ...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists, coercing it if\n necessary, or throws if no such mapping exists.</p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>JSONException if no such mapping exists.</p>\n</div></li></ul></div></div></div><div id='method-has' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-has' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-has' class='name expandable'>has</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this object has a mapping for {@code name}. ...</div><div class='long'><p>Returns true if this object has a mapping for {@code name}. The mapping\n may be <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a>.</p>\n</div></div></div><div id='method-isNull' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-isNull' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-isNull' class='name expandable'>isNull</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this object has no mapping for {@code name} or if it has\n a mapping whose value is NULL. ...</div><div class='long'><p>Returns true if this object has no mapping for {@code name} or if it has\n a mapping whose value is <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a>.</p>\n</div></div></div><div id='method-keys' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-keys' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-keys' class='name expandable'>keys</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an iterator of the {@code String} names in this object. ...</div><div class='long'><p>Returns an iterator of the {@code String} names in this object. The\n returned iterator supports remove, which will\n remove the corresponding mapping from this object. If this object is\n modified after the iterator is returned, the iterator's behavior is\n undefined. The order of the keys is undefined.</p>\n</div></div></div><div id='method-length' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-length' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-length' class='name expandable'>length</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the number of name/value mappings in this object. ...</div><div class='long'><p>Returns the number of name/value mappings in this object.</p>\n</div></div></div><div id='method-names' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-names' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-names' class='name expandable'>names</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array containing the string names in this object. ...</div><div class='long'><p>Returns an array containing the string names in this object. This method\n returns null if this object contains no mappings.</p>\n</div></div></div><div id='method-numberToString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-numberToString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-numberToString' class='name expandable'>numberToString</a>( <span class='pre'>number</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Encodes the number as a JSON string. ...</div><div class='long'><p>Encodes the number as a JSON string.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>number</span> : Object {Number}<div class='sub-desc'><p>a finite value. May not be NaNs or\n     infinities.</p>\n</div></li></ul></div></div></div><div id='method-opt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-opt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-opt' class='name expandable'>opt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name}, or null if no such mapping\n exists. ...</div><div class='long'><p>Returns the value mapped by {@code name}, or null if no such mapping\n exists.</p>\n</div></div></div><div id='method-optBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-optBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-optBoolean' class='name expandable'>optBoolean</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a boolean or\n can be coerced to a boolean, or {@code fal...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a boolean or\n can be coerced to a boolean, or {@code fallback} otherwise.</p>\n</div></div></div><div id='method-optDouble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-optDouble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-optDouble' class='name expandable'>optDouble</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a double or\n can be coerced to a double, or {@code fallb...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a double or\n can be coerced to a double, or {@code fallback} otherwise.</p>\n</div></div></div><div id='method-optInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-optInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-optInt' class='name expandable'>optInt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is an int or\n can be coerced to an int, or {@code fallback}...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is an int or\n can be coerced to an int, or {@code fallback} otherwise.</p>\n</div></div></div><div id='method-optJSONArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-optJSONArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-optJSONArray' class='name expandable'>optJSONArray</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONArray}, or null otherwise. ...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONArray}, or null otherwise.</p>\n</div></div></div><div id='method-optJSONObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-optJSONObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-optJSONObject' class='name expandable'>optJSONObject</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONObject}, or null otherwise. ...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a {@code\n JSONObject}, or null otherwise.</p>\n</div></div></div><div id='method-optLong' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-optLong' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-optLong' class='name expandable'>optLong</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists and is a long or\n can be coerced to a long, or {@code fallback}...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists and is a long or\n can be coerced to a long, or {@code fallback} otherwise. Note that JSON represents\n numbers as doubles, so this is <a href=\"#lossy\">lossy</a>; use strings to transfer\n numbers via JSON.</p>\n</div></div></div><div id='method-optString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-optString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-optString' class='name expandable'>optString</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the value mapped by {@code name} if it exists, coercing it if\n necessary, or {@code fallback} if no such mapp...</div><div class='long'><p>Returns the value mapped by {@code name} if it exists, coercing it if\n necessary, or {@code fallback} if no such mapping exists.</p>\n</div></div></div><div id='method-put' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-put' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-put' class='name expandable'>put</a>( <span class='pre'>value</span> ) : Object {org.json.JSONObject}<span class=\"signature\"></span></div><div class='description'><div class='short'>Maps {@code name} to {@code value}, clobbering any existing name/value\n mapping with the same name. ...</div><div class='long'><p>Maps {@code name} to {@code value}, clobbering any existing name/value\n mapping with the same name. If the value is {@code null}, any existing\n mapping for {@code name} is removed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : String<div class='sub-desc'><p>a JSONObject, JSONArray, String, Boolean,\n     Integer, Long, Double, <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a>, or {@code null}. May not be\n     NaNs or infinities.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {org.json.JSONObject}</span><div class='sub-desc'><p>this object.</p>\n</div></li></ul></div></div></div><div id='method-putOpt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-putOpt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-putOpt' class='name expandable'>putOpt</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Equivalent to {@code put(name, value)} when both parameters are non-null;\n does nothing otherwise. ...</div><div class='long'><p>Equivalent to {@code put(name, value)} when both parameters are non-null;\n does nothing otherwise.</p>\n</div></div></div><div id='method-quote' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-quote' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-quote' class='name expandable'>quote</a>( <span class='pre'>data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Encodes {@code data} as a JSON string. ...</div><div class='long'><p>Encodes {@code data} as a JSON string. This applies quotes and any\n necessary character escaping.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : String<div class='sub-desc'><p>the string to encode. Null will be interpreted as an empty\n     string.</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-remove' class='name expandable'>remove</a>( <span class='pre'></span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the named mapping if it exists; does nothing otherwise. ...</div><div class='long'><p>Removes the named mapping if it exists; does nothing otherwise.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the value previously mapped by {@code name}, or null if there was\n     no such mapping.</p>\n</div></li></ul></div></div></div><div id='method-toJSONArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-toJSONArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-toJSONArray' class='name expandable'>toJSONArray</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an array with the values corresponding to {@code names}. ...</div><div class='long'><p>Returns an array with the values corresponding to {@code names}. The\n array contains null for names that aren't mapped. This method returns\n null if {@code names} is either null or empty.</p>\n</div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-toString' class='name expandable'>toString</a>( <span class='pre'>indentSpaces</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Encodes this object as a human readable JSON string for debugging, such\n as:\n\n {\n     \"query\": \"Pizza\",\n     \"locatio...</div><div class='long'><p>Encodes this object as a human readable JSON string for debugging, such\n as:</p>\n\n<pre> {\n     \"query\": \"Pizza\",\n     \"locations\": [\n         94043,\n         90210\n     ]\n }</pre>\n\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>indentSpaces</span> : Number<div class='sub-desc'><p>the number of spaces to indent for each level of\n     nesting.</p>\n</div></li></ul></div></div></div><div id='method-wrap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='org.json.JSONObject'>org.json.JSONObject</span><br/><a href='source/JSONObject.html#org-json-JSONObject-method-wrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/org.json.JSONObject-method-wrap' class='name expandable'>wrap</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Wraps the given object if necessary. ...</div><div class='long'><p>Wraps the given object if necessary.</p>\n\n<p> <p>If the object is null or , returns <a href=\"#!/api/org.json.JSONObject-property-NULL\" rel=\"org.json.JSONObject-property-NULL\" class=\"docClass\">NULL</a>.\n If the object is a {@code JSONArray} or {@code JSONObject}, no wrapping is necessary.\n If the object is {@code NULL}, no wrapping is necessary.\n If the object is an array or {@code Collection}, returns an equivalent {@code JSONArray}.\n If the object is a {@code Map}, returns an equivalent {@code JSONObject}.\n If the object is a primitive wrapper type or {@code String}, returns the object.\n Otherwise if the object is from a {@code java} package, returns the result of {@code toString}.\n If wrapping fails, returns null.</p>\n</div></div></div></div></div></div></div>","meta":{}});