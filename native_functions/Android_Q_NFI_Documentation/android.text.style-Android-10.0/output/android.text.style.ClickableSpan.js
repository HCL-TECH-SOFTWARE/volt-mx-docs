Ext.data.JsonP.android_text_style_ClickableSpan({"tagname":"class","name":"android.text.style.ClickableSpan","autodetected":{},"files":[{"filename":"ClickableSpan.js","href":"ClickableSpan.html#android-text-style-ClickableSpan"}],"extends":"android.text.style.CharacterStyle","members":[{"name":"getUnderlying","tagname":"method","owner":"android.text.style.CharacterStyle","id":"method-getUnderlying","meta":{}},{"name":"onClick","tagname":"method","owner":"android.text.style.ClickableSpan","id":"method-onClick","meta":{}},{"name":"updateDrawState","tagname":"method","owner":"android.text.style.ClickableSpan","id":"method-updateDrawState","meta":{}},{"name":"wrap","tagname":"method","owner":"android.text.style.CharacterStyle","id":"method-wrap","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.style.ClickableSpan","short_doc":"implements android.text.style.UpdateAppearance\n\nIf an object of this type is attached to the text of a TextView\n with...","classIcon":"icon-class","superclasses":["java.lang.Object","android.text.style.CharacterStyle"],"subclasses":["android.text.style.AccessibilityClickableSpan","android.text.style.URLSpan"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.text.style.CharacterStyle' rel='android.text.style.CharacterStyle' class='docClass'>android.text.style.CharacterStyle</a><div class='subclass '><strong>android.text.style.ClickableSpan</strong></div></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/android.text.style.AccessibilityClickableSpan' rel='android.text.style.AccessibilityClickableSpan' class='docClass'>android.text.style.AccessibilityClickableSpan</a></div><div class='dependency'><a href='#!/api/android.text.style.URLSpan' rel='android.text.style.URLSpan' class='docClass'>android.text.style.URLSpan</a></div><h4>Files</h4><div class='dependency'><a href='source/ClickableSpan.html#android-text-style-ClickableSpan' target='_blank'>ClickableSpan.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.text.style.UpdateAppearance\" rel=\"android.text.style.UpdateAppearance\" class=\"docClass\">android.text.style.UpdateAppearance</a></p>\n\n<p>If an object of this type is attached to the text of a TextView\n with a movement method of LinkMovementMethod, the affected spans of\n text can be selected. If selected and clicked, the <a href=\"#!/api/android.text.style.ClickableSpan-method-onClick\" rel=\"android.text.style.ClickableSpan-method-onClick\" class=\"docClass\">onClick</a> method will\n be called.\n <p>\n The text with a <code>ClickableSpan</code> attached will be underlined and the link color will be\n used as a text color. The default link color is the theme's accent color or\n <code>android:textColorLink</code> if this attribute is defined in the theme.\n For example, considering that we have a <code>CustomClickableSpan</code> that extends\n <code>ClickableSpan</code>, it can be used like this:\n <pre>{@code SpannableString string = new SpannableString(\"Text with clickable text\");\nstring.setSpan(new CustomClickableSpan(), 10, 19, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);}</pre>\n <img src=\"{@docRoot}reference/android/images/text/style/clickablespan.png\" />\n <figcaption>Text with <code>ClickableSpan</code>.</figcaption></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getUnderlying' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.text.style.CharacterStyle' rel='android.text.style.CharacterStyle' class='defined-in docClass'>android.text.style.CharacterStyle</a><br/><a href='source/CharacterStyle.html#android-text-style-CharacterStyle-method-getUnderlying' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.CharacterStyle-method-getUnderlying' class='name expandable'>getUnderlying</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns \"this\" for most CharacterStyles, but for CharacterStyles\n that were generated by wrap, returns the underlying...</div><div class='long'><p>Returns \"this\" for most CharacterStyles, but for CharacterStyles\n that were generated by <a href=\"#!/api/android.text.style.CharacterStyle-method-wrap\" rel=\"android.text.style.CharacterStyle-method-wrap\" class=\"docClass\">wrap</a>, returns the underlying\n CharacterStyle.</p>\n</div></div></div><div id='method-onClick' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.style.ClickableSpan'>android.text.style.ClickableSpan</span><br/><a href='source/ClickableSpan.html#android-text-style-ClickableSpan-method-onClick' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.ClickableSpan-method-onClick' class='name expandable'>onClick</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs the click action associated with this span. ...</div><div class='long'><p>Performs the click action associated with this span.</p>\n</div></div></div><div id='method-updateDrawState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.style.ClickableSpan'>android.text.style.ClickableSpan</span><br/><a href='source/ClickableSpan.html#android-text-style-ClickableSpan-method-updateDrawState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.ClickableSpan-method-updateDrawState' class='name expandable'>updateDrawState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Makes the text underlined and in the link color. ...</div><div class='long'><p>Makes the text underlined and in the link color.</p>\n<p>Overrides: <a href=\"#!/api/android.text.style.CharacterStyle-method-updateDrawState\" rel=\"android.text.style.CharacterStyle-method-updateDrawState\" class=\"docClass\">android.text.style.CharacterStyle.updateDrawState</a></p></div></div></div><div id='method-wrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.text.style.CharacterStyle' rel='android.text.style.CharacterStyle' class='defined-in docClass'>android.text.style.CharacterStyle</a><br/><a href='source/CharacterStyle.html#android-text-style-CharacterStyle-method-wrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.CharacterStyle-method-wrap' class='name expandable'>wrap</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A given CharacterStyle can only applied to a single region of a given\n Spanned. ...</div><div class='long'><p>A given CharacterStyle can only applied to a single region of a given\n Spanned.  If you need to attach the same CharacterStyle to multiple\n regions, you can use this method to wrap it with a new object that\n will have the same effect but be a distinct object so that it can\n also be attached without conflict.</p>\n</div></div></div></div></div></div></div>","meta":{}});