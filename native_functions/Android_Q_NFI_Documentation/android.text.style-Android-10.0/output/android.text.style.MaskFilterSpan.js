Ext.data.JsonP.android_text_style_MaskFilterSpan({"tagname":"class","name":"android.text.style.MaskFilterSpan","autodetected":{},"files":[{"filename":"MaskFilterSpan.js","href":"MaskFilterSpan.html#android-text-style-MaskFilterSpan"}],"extends":"android.text.style.CharacterStyle","members":[{"name":"getMaskFilter","tagname":"method","owner":"android.text.style.MaskFilterSpan","id":"method-getMaskFilter","meta":{}},{"name":"getUnderlying","tagname":"method","owner":"android.text.style.CharacterStyle","id":"method-getUnderlying","meta":{}},{"name":"updateDrawState","tagname":"method","owner":"android.text.style.MaskFilterSpan","id":"method-updateDrawState","meta":{}},{"name":"wrap","tagname":"method","owner":"android.text.style.CharacterStyle","id":"method-wrap","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.style.MaskFilterSpan","short_doc":"implements android.text.style.UpdateAppearance\n\nSpan that allows setting a MaskFilter to the text it's attached to. ...","classIcon":"icon-class","superclasses":["java.lang.Object","android.text.style.CharacterStyle"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/android.text.style.CharacterStyle' rel='android.text.style.CharacterStyle' class='docClass'>android.text.style.CharacterStyle</a><div class='subclass '><strong>android.text.style.MaskFilterSpan</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/MaskFilterSpan.html#android-text-style-MaskFilterSpan' target='_blank'>MaskFilterSpan.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.text.style.UpdateAppearance\" rel=\"android.text.style.UpdateAppearance\" class=\"docClass\">android.text.style.UpdateAppearance</a></p>\n\n<p>Span that allows setting a MaskFilter to the text it's attached to.\n <p>\n For example, to blur a text, a android.graphics.BlurMaskFilter can be used:</p>\n\n<pre> MaskFilter blurMask = new BlurMaskFilter(5f, BlurMaskFilter.Blur.NORMAL);\n SpannableString string = new SpannableString(\"Text with blur mask\");\n string.setSpan(new MaskFilterSpan(blurMask), 10, 15, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n </pre>\n\n\n<p> <img src=\"{@docRoot}reference/android/images/text/style/maskfilterspan.png\" />\n <figcaption>Text blurred with the <code>MaskFilterSpan</code>.</figcaption></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getMaskFilter' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.style.MaskFilterSpan'>android.text.style.MaskFilterSpan</span><br/><a href='source/MaskFilterSpan.html#android-text-style-MaskFilterSpan-method-getMaskFilter' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.MaskFilterSpan-method-getMaskFilter' class='name expandable'>getMaskFilter</a>( <span class='pre'></span> ) : Object {android.graphics.MaskFilter}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return the mask filter for this span. ...</div><div class='long'><p>Return the mask filter for this span.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.MaskFilter}</span><div class='sub-desc'><p>the mask filter for this span</p>\n</div></li></ul></div></div></div><div id='method-getUnderlying' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.text.style.CharacterStyle' rel='android.text.style.CharacterStyle' class='defined-in docClass'>android.text.style.CharacterStyle</a><br/><a href='source/CharacterStyle.html#android-text-style-CharacterStyle-method-getUnderlying' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.CharacterStyle-method-getUnderlying' class='name expandable'>getUnderlying</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns \"this\" for most CharacterStyles, but for CharacterStyles\n that were generated by wrap, returns the underlying...</div><div class='long'><p>Returns \"this\" for most CharacterStyles, but for CharacterStyles\n that were generated by <a href=\"#!/api/android.text.style.CharacterStyle-method-wrap\" rel=\"android.text.style.CharacterStyle-method-wrap\" class=\"docClass\">wrap</a>, returns the underlying\n CharacterStyle.</p>\n</div></div></div><div id='method-updateDrawState' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.style.MaskFilterSpan'>android.text.style.MaskFilterSpan</span><br/><a href='source/MaskFilterSpan.html#android-text-style-MaskFilterSpan-method-updateDrawState' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.MaskFilterSpan-method-updateDrawState' class='name expandable'>updateDrawState</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Overrides: <a href=\"#!/api/android.text.style.CharacterStyle-method-updateDrawState\" rel=\"android.text.style.CharacterStyle-method-updateDrawState\" class=\"docClass\">android.text.style.CharacterStyle.updateDrawState</a></p></div></div></div><div id='method-wrap' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/android.text.style.CharacterStyle' rel='android.text.style.CharacterStyle' class='defined-in docClass'>android.text.style.CharacterStyle</a><br/><a href='source/CharacterStyle.html#android-text-style-CharacterStyle-method-wrap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.CharacterStyle-method-wrap' class='name expandable'>wrap</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>A given CharacterStyle can only applied to a single region of a given\n Spanned. ...</div><div class='long'><p>A given CharacterStyle can only applied to a single region of a given\n Spanned.  If you need to attach the same CharacterStyle to multiple\n regions, you can use this method to wrap it with a new object that\n will have the same effect but be a distinct object so that it can\n also be attached without conflict.</p>\n</div></div></div></div></div></div></div>","meta":{}});