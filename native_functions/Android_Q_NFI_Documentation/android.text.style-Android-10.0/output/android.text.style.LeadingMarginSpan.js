Ext.data.JsonP.android_text_style_LeadingMarginSpan({"tagname":"class","name":"android.text.style.LeadingMarginSpan","autodetected":{},"files":[{"filename":"LeadingMarginSpan.js","href":"LeadingMarginSpan.html#android-text-style-LeadingMarginSpan"}],"members":[{"name":"drawLeadingMargin","tagname":"method","owner":"android.text.style.LeadingMarginSpan","id":"method-drawLeadingMargin","meta":{}},{"name":"getLeadingMargin","tagname":"method","owner":"android.text.style.LeadingMarginSpan","id":"method-getLeadingMargin","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.text.style.LeadingMarginSpan","short_doc":"implements android.text.style.ParagraphStyle\n\n A paragraph style affecting the leading margin. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/LeadingMarginSpan.html#android-text-style-LeadingMarginSpan' target='_blank'>LeadingMarginSpan.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.text.style.ParagraphStyle\" rel=\"android.text.style.ParagraphStyle\" class=\"docClass\">android.text.style.ParagraphStyle</a></p>\n\n<p> A paragraph style affecting the leading margin. There can be multiple leading\n margin spans on a single paragraph; they will be rendered in order, each\n adding its margin to the ones before it. The leading margin is on the right\n for lines in a right-to-left paragraph.\n <p>\n LeadingMarginSpans should be attached from the first character to the last\n character of a single paragraph.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-drawLeadingMargin' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.style.LeadingMarginSpan'>android.text.style.LeadingMarginSpan</span><br/><a href='source/LeadingMarginSpan.html#android-text-style-LeadingMarginSpan-method-drawLeadingMargin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.LeadingMarginSpan-method-drawLeadingMargin' class='name expandable'>drawLeadingMargin</a>( <span class='pre'>c, p, x, dir, top, baseline, bottom, text, start, end, first, layout</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Renders the leading margin. ...</div><div class='long'><p>Renders the leading margin.  This is called before the margin has been\n adjusted by the value returned by <a href=\"#!/api/android.text.style.LeadingMarginSpan-method-getLeadingMargin\" rel=\"android.text.style.LeadingMarginSpan-method-getLeadingMargin\" class=\"docClass\">getLeadingMargin</a>(boolean).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>c</span> : Object {Canvas}<div class='sub-desc'><p>the canvas</p>\n</div></li><li><span class='pre'>p</span> : Object {Paint}<div class='sub-desc'><p>the paint. The this should be left unchanged on exit.</p>\n</div></li><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the current position of the margin</p>\n</div></li><li><span class='pre'>dir</span> : Number<div class='sub-desc'><p>the base direction of the paragraph; if negative, the margin\n is to the right of the text, otherwise it is to the left.</p>\n</div></li><li><span class='pre'>top</span> : Number<div class='sub-desc'><p>the top of the line</p>\n</div></li><li><span class='pre'>baseline</span> : Number<div class='sub-desc'><p>the baseline of the line</p>\n</div></li><li><span class='pre'>bottom</span> : Number<div class='sub-desc'><p>the bottom of the line</p>\n</div></li><li><span class='pre'>text</span> : Object {CharSequence}<div class='sub-desc'><p>the text</p>\n</div></li><li><span class='pre'>start</span> : Number<div class='sub-desc'><p>the start of the line</p>\n</div></li><li><span class='pre'>end</span> : Number<div class='sub-desc'><p>the end of the line</p>\n</div></li><li><span class='pre'>first</span> : Boolean<div class='sub-desc'><p>true if this is the first line of its paragraph</p>\n</div></li><li><span class='pre'>layout</span> : Object {Layout}<div class='sub-desc'><p>the layout containing this line</p>\n</div></li></ul></div></div></div><div id='method-getLeadingMargin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.text.style.LeadingMarginSpan'>android.text.style.LeadingMarginSpan</span><br/><a href='source/LeadingMarginSpan.html#android-text-style-LeadingMarginSpan-method-getLeadingMargin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.text.style.LeadingMarginSpan-method-getLeadingMargin' class='name expandable'>getLeadingMargin</a>( <span class='pre'>first</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the amount by which to adjust the leading margin. ...</div><div class='long'><p>Returns the amount by which to adjust the leading margin. Positive values\n move away from the leading edge of the paragraph, negative values move\n towards it.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>first</span> : Boolean<div class='sub-desc'><p>true if the request is for the first line of a paragraph,\n false for subsequent lines</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the offset for the margin.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});