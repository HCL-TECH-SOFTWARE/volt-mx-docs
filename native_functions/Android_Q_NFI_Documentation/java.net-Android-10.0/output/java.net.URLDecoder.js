Ext.data.JsonP.java_net_URLDecoder({"tagname":"class","name":"java.net.URLDecoder","autodetected":{},"files":[{"filename":"URLDecoder.js","href":"URLDecoder.html#java-net-URLDecoder"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Mark Chamness","email":null},{"tagname":"author","name":"Michael McCloskey","email":null}],"since":"1.2","members":[{"name":"decode","tagname":"method","owner":"java.net.URLDecoder","id":"method-decode","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.net.URLDecoder","short_doc":"Utility class for HTML form decoding. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.net.URLDecoder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/URLDecoder.html#java-net-URLDecoder' target='_blank'>URLDecoder.js</a></div></pre><div class='doc-contents'><p>Utility class for HTML form decoding. This class contains static methods\n for decoding a String from the <CODE>application/x-www-form-urlencoded</CODE>\n MIME format.\n <p>\n The conversion process is the reverse of that used by the URLEncoder class. It is assumed\n that all characters in the encoded string are one of the following:\n &quot;{@code a}&quot; through &quot;{@code z}&quot;,\n &quot;{@code A}&quot; through &quot;{@code Z}&quot;,\n &quot;{@code 0}&quot; through &quot;{@code 9}&quot;, and\n &quot;{@code -}&quot;, &quot;{@code _}&quot;,\n &quot;{@code .}&quot;, and &quot;{@code *}&quot;. The\n character &quot;{@code %}&quot; is allowed but is interpreted\n as the start of a special escaped sequence.\n <p>\n The following rules are applied in the conversion:</p>\n\n<p> <ul>\n <li>The alphanumeric characters &quot;{@code a}&quot; through\n     &quot;{@code z}&quot;, &quot;{@code A}&quot; through\n     &quot;{@code Z}&quot; and &quot;{@code 0}&quot;\n     through &quot;{@code 9}&quot; remain the same.\n <li>The special characters &quot;{@code .}&quot;,\n     &quot;{@code -}&quot;, &quot;{@code *}&quot;, and\n     &quot;{@code _}&quot; remain the same.\n <li>The plus sign &quot;{@code +}&quot; is converted into a\n     space character &quot; &nbsp; &quot; .\n <li>A sequence of the form \"<i>{@code %xy}</i>\" will be\n     treated as representing a byte where <i>xy</i> is the two-digit\n     hexadecimal representation of the 8 bits. Then, all substrings\n     that contain one or more of these byte sequences consecutively\n     will be replaced by the character(s) whose encoding would result\n     in those consecutive bytes.\n     The encoding scheme used to decode these characters may be specified,\n     or if unspecified, the default encoding of the platform will be used.\n </li></li></li></li></ul>\n <p>\n There are two possible ways in which this decoder could deal with\n illegal strings.  It could either leave illegal characters alone or\n it could throw an java.lang.IllegalArgumentException.\n Which approach the decoder takes is left to the\n implementation.</p>\n        <p>Available since: <b>1.2</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-decode' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URLDecoder'>java.net.URLDecoder</span><br/><a href='source/URLDecoder.html#java-net-URLDecoder-method-decode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URLDecoder-method-decode' class='name expandable'>decode</a>( <span class='pre'>s, enc</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Decodes a {@code application/x-www-form-urlencoded} string using a specific\n encoding scheme. ...</div><div class='long'><p>Decodes a {@code application/x-www-form-urlencoded} string using a specific\n encoding scheme.\n The supplied encoding is used to determine\n what characters are represented by any consecutive sequences of the\n form \"<i>{@code %xy}</i>\".\n <p>\n <em><strong>Note:</strong> The <a href=\n \"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\">\n World Wide Web Consortium Recommendation</a> states that\n UTF-8 should be used. Not doing so may introduce\n incompatibilities.</em></p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>s</span> : String<div class='sub-desc'><p>the {@code String} to decode</p>\n</div></li><li><span class='pre'>enc</span> : String<div class='sub-desc'><p>The name of a supported\n    <a href=\"../lang/package-summary.html#charenc\">character\n    encoding</a>.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the newly decoded {@code String}\n@exception UnsupportedEncodingException\n             If character encoding needs to be consulted, but\n             named character encoding is not supported\n@see URLEncoder#encode(java.lang.String, java.lang.String)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});