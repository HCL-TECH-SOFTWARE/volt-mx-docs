Ext.data.JsonP.java_net_IDN({"tagname":"class","name":"java.net.IDN","autodetected":{},"files":[{"filename":"IDN.js","href":"IDN.html#java-net-IDN"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Edward Wang","email":null}],"since":"1.6","members":[{"name":"ALLOW_UNASSIGNED","tagname":"property","owner":"java.net.IDN","id":"property-ALLOW_UNASSIGNED","meta":{}},{"name":"USE_STD3_ASCII_RULES","tagname":"property","owner":"java.net.IDN","id":"property-USE_STD3_ASCII_RULES","meta":{}},{"name":"toASCII","tagname":"method","owner":"java.net.IDN","id":"method-toASCII","meta":{}},{"name":"toUnicode","tagname":"method","owner":"java.net.IDN","id":"method-toUnicode","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.net.IDN","short_doc":"Provides methods to convert internationalized domain names (IDNs) between\n a normal Unicode representation and an ASC...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.net.IDN</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/IDN.html#java-net-IDN' target='_blank'>IDN.js</a></div></pre><div class='doc-contents'><p>Provides methods to convert internationalized domain names (IDNs) between\n a normal Unicode representation and an ASCII Compatible Encoding (ACE) representation.\n Internationalized domain names can use characters from the entire range of\n Unicode, while traditional domain names are restricted to ASCII characters.\n ACE is an encoding of Unicode strings that uses only ASCII characters and\n can be used with software (such as the Domain Name System) that only\n understands traditional domain names.</p>\n\n<p> <p>Internationalized domain names are defined in <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a>.\n RFC 3490 defines two operations: ToASCII and ToUnicode. These 2 operations employ\n <a href=\"http://www.ietf.org/rfc/rfc3491.txt\">Nameprep</a> algorithm, which is a\n profile of <a href=\"http://www.ietf.org/rfc/rfc3454.txt\">Stringprep</a>, and\n <a href=\"http://www.ietf.org/rfc/rfc3492.txt\">Punycode</a> algorithm to convert\n domain name string back and forth.</p>\n\n<p> <p>The behavior of aforementioned conversion process can be adjusted by various flags:\n   <ul>\n     <li>If the ALLOW_UNASSIGNED flag is used, the domain name string to be converted\n         can contain code points that are unassigned in Unicode 3.2, which is the\n         Unicode version on which IDN conversion is based. If the flag is not used,\n         the presence of such unassigned code points is treated as an error.\n     <li>If the USE_STD3_ASCII_RULES flag is used, ASCII strings are checked against <a href=\"http://www.ietf.org/rfc/rfc1122.txt\">RFC 1122</a> and <a href=\"http://www.ietf.org/rfc/rfc1123.txt\">RFC 1123</a>.\n         It is an error if they don't meet the requirements.\n   </li></li></ul>\n These flags can be logically OR'ed together.</p>\n\n<p> <p>The security consideration is important with respect to internationalization\n domain name support. For example, English domain names may be <i>homographed</i>\n - maliciously misspelled by substitution of non-Latin letters.\n <a href=\"http://www.unicode.org/reports/tr36/\">Unicode Technical Report #36</a>\n discusses security issues of IDN support as well as possible solutions.\n Applications are responsible for taking adequate security measures when using\n international domain names.</p>\n        <p>Available since: <b>1.6</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-ALLOW_UNASSIGNED' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.IDN'>java.net.IDN</span><br/><a href='source/IDN.html#java-net-IDN-property-ALLOW_UNASSIGNED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.IDN-property-ALLOW_UNASSIGNED' class='name expandable'>ALLOW_UNASSIGNED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag to allow processing of unassigned code points ...</div><div class='long'><p>Flag to allow processing of unassigned code points</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-USE_STD3_ASCII_RULES' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.IDN'>java.net.IDN</span><br/><a href='source/IDN.html#java-net-IDN-property-USE_STD3_ASCII_RULES' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.IDN-property-USE_STD3_ASCII_RULES' class='name expandable'>USE_STD3_ASCII_RULES</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Flag to turn on the check against STD-3 ASCII rules ...</div><div class='long'><p>Flag to turn on the check against STD-3 ASCII rules</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-toASCII' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.IDN'>java.net.IDN</span><br/><a href='source/IDN.html#java-net-IDN-method-toASCII' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.IDN-method-toASCII' class='name expandable'>toASCII</a>( <span class='pre'>input</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Translates a string from Unicode to ASCII Compatible Encoding (ACE),\n as defined by the ToASCII operation of RFC 3490. ...</div><div class='long'><p>Translates a string from Unicode to ASCII Compatible Encoding (ACE),\n as defined by the ToASCII operation of <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a>.</p>\n\n<p> <p> This convenience method works as if by invoking the\n two-argument counterpart as follows:\n <blockquote>\n int) toASCII(input,&nbsp;0);\n </blockquote></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>input</span> : String<div class='sub-desc'><p>the string to be processed</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the translated {@code String}</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException   if the input string doesn't conform to RFC 3490 specification</p>\n</div></li></ul></div></div></div><div id='method-toUnicode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.IDN'>java.net.IDN</span><br/><a href='source/IDN.html#java-net-IDN-method-toUnicode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.IDN-method-toUnicode' class='name expandable'>toUnicode</a>( <span class='pre'>input</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Translates a string from ASCII Compatible Encoding (ACE) to Unicode,\n as defined by the ToUnicode operation of RFC 3490. ...</div><div class='long'><p>Translates a string from ASCII Compatible Encoding (ACE) to Unicode,\n as defined by the ToUnicode operation of <a href=\"http://www.ietf.org/rfc/rfc3490.txt\">RFC 3490</a>.</p>\n\n<p> <p> This convenience method works as if by invoking the\n two-argument counterpart as follows:\n <blockquote>\n int) toUnicode(input,&nbsp;0);\n </blockquote></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>input</span> : String<div class='sub-desc'><p>the string to be processed</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the translated {@code String}</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});