Ext.data.JsonP.java_net_CookieHandler({"tagname":"class","name":"java.net.CookieHandler","autodetected":{},"files":[{"filename":"CookieHandler.js","href":"CookieHandler.html#java-net-CookieHandler"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"Yingxian Wang","email":null}],"since":"1.5","members":[{"name":"get","tagname":"method","owner":"java.net.CookieHandler","id":"method-get","meta":{}},{"name":"getDefault","tagname":"method","owner":"java.net.CookieHandler","id":"method-getDefault","meta":{}},{"name":"put","tagname":"method","owner":"java.net.CookieHandler","id":"method-put","meta":{}},{"name":"setDefault","tagname":"method","owner":"java.net.CookieHandler","id":"method-setDefault","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.net.CookieHandler","short_doc":"A CookieHandler object provides a callback mechanism to hook up a\n HTTP state management policy implementation into t...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":["java.net.CookieManager"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.net.CookieHandler</strong></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/java.net.CookieManager' rel='java.net.CookieManager' class='docClass'>java.net.CookieManager</a></div><h4>Files</h4><div class='dependency'><a href='source/CookieHandler.html#java-net-CookieHandler' target='_blank'>CookieHandler.js</a></div></pre><div class='doc-contents'><p>A CookieHandler object provides a callback mechanism to hook up a\n HTTP state management policy implementation into the HTTP protocol\n handler. The HTTP state management mechanism specifies a way to\n create a stateful session with HTTP requests and responses.</p>\n\n<p> <p>A system-wide CookieHandler that to used by the HTTP protocol\n handler can be registered by doing a\n CookieHandler.setDefault(CookieHandler). The currently registered\n CookieHandler can be retrieved by calling\n CookieHandler.getDefault().</p>\n\n<p> For more information on HTTP state management, see <a\n href=\"http://www.ietf.org/rfc/rfc2965.txt\"><i>RFC&nbsp;2965: HTTP\n State Management Mechanism</i></a></p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-get' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.CookieHandler'>java.net.CookieHandler</span><br/><a href='source/CookieHandler.html#java-net-CookieHandler-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.CookieHandler-method-get' class='name expandable'>get</a>( <span class='pre'>uri, requestHeaders</span> ) : Object {java.util.Map}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets all the applicable cookies from a cookie cache for the\n specified uri in the request header. ...</div><div class='long'><p>Gets all the applicable cookies from a cookie cache for the\n specified uri in the request header.</p>\n\n<p> <P>The {@code URI} passed as an argument specifies the intended use for\n the cookies. In particular the scheme should reflect whether the cookies\n will be sent over http, https or used in another context like javascript.\n The host part should reflect either the destination of the cookies or\n their origin in the case of javascript.</P>\n <P>It is up to the implementation to take into account the {@code URI} and\n the cookies attributes and security settings to determine which ones\n should be returned.</P></p>\n\n<p> <P>HTTP protocol implementers should make sure that this method is\n called after all request headers related to choosing cookies\n are added, and before the request is sent.</P></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {URI}<div class='sub-desc'><p>a {@code URI} representing the intended use for the\n            cookies</p>\n</div></li><li><span class='pre'>requestHeaders</span> : Object {java.util.Map}<div class='sub-desc'><ul>\n<li>a Map from request header\n          field names to lists of field values representing\n          the current request headers</li>\n</ul>\n\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.Map}</span><div class='sub-desc'><p>an immutable map from state management headers, with\n            field names \"Cookie\" or \"Cookie2\" to a list of\n            cookies containing state information</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if either argument is null\n@see <a href=\"#!/api/java.net.CookieHandler-method-put\" rel=\"java.net.CookieHandler-method-put\" class=\"docClass\">put</a>(URI, Map)</p>\n</div></li></ul></div></div></div><div id='method-getDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.CookieHandler'>java.net.CookieHandler</span><br/><a href='source/CookieHandler.html#java-net-CookieHandler-method-getDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.CookieHandler-method-getDefault' class='name expandable'>getDefault</a>( <span class='pre'></span> ) : Object {java.net.CookieHandler}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the system-wide cookie handler. ...</div><div class='long'><p>Gets the system-wide cookie handler.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.CookieHandler}</span><div class='sub-desc'><p>the system-wide cookie handler; A null return means\n        there is no system-wide cookie handler currently set.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n       If a security manager has been installed and it denies\n NetPermission{@code (\"getCookieHandler\")}\n@see <a href=\"#!/api/java.net.CookieHandler-method-setDefault\" rel=\"java.net.CookieHandler-method-setDefault\" class=\"docClass\">setDefault</a>(CookieHandler)</p>\n</div></li></ul></div></div></div><div id='method-put' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.CookieHandler'>java.net.CookieHandler</span><br/><a href='source/CookieHandler.html#java-net-CookieHandler-method-put' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.CookieHandler-method-put' class='name expandable'>put</a>( <span class='pre'>uri, responseHeaders</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets all the applicable cookies, examples are response header\n fields that are named Set-Cookie2, present in the resp...</div><div class='long'><p>Sets all the applicable cookies, examples are response header\n fields that are named Set-Cookie2, present in the response\n headers into a cookie cache.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : Object {URI}<div class='sub-desc'><p>a {@code URI} where the cookies come from</p>\n</div></li><li><span class='pre'>responseHeaders</span> : Object {java.util.Map}<div class='sub-desc'><p>an immutable map from field names to\n            lists of field values representing the response\n            header fields returned</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException if an I/O error occurs</p>\n</div></li><li><span class='pre'>Object</span><div class='sub-desc'><p>IllegalArgumentException if either argument is null\n@see <a href=\"#!/api/java.net.CookieHandler-method-get\" rel=\"java.net.CookieHandler-method-get\" class=\"docClass\">get</a>(URI, Map)</p>\n</div></li></ul></div></div></div><div id='method-setDefault' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.CookieHandler'>java.net.CookieHandler</span><br/><a href='source/CookieHandler.html#java-net-CookieHandler-method-setDefault' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.CookieHandler-method-setDefault' class='name expandable'>setDefault</a>( <span class='pre'>cHandler</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets (or unsets) the system-wide cookie handler. ...</div><div class='long'><p>Sets (or unsets) the system-wide cookie handler.</p>\n\n<p> Note: non-standard http protocol handlers may ignore this setting.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cHandler</span> : Object {CookieHandler}<div class='sub-desc'><p>The HTTP cookie handler, or\n       {@code null} to unset.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>SecurityException\n       If a security manager has been installed and it denies\n NetPermission{@code (\"setCookieHandler\")}\n@see <a href=\"#!/api/java.net.CookieHandler-method-getDefault\" rel=\"java.net.CookieHandler-method-getDefault\" class=\"docClass\">getDefault</a>()</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});