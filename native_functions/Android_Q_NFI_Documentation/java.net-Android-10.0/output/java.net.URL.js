Ext.data.JsonP.java_net_URL({"tagname":"class","name":"java.net.URL","autodetected":{},"files":[{"filename":"URL.js","href":"URL.html#java-net-URL"}],"extends":"java.lang.Object","author":[{"tagname":"author","name":"James Gosling","email":null}],"since":"JDK1.0","members":[{"name":"equals","tagname":"method","owner":"java.net.URL","id":"method-equals","meta":{}},{"name":"getAuthority","tagname":"method","owner":"java.net.URL","id":"method-getAuthority","meta":{}},{"name":"getContent","tagname":"method","owner":"java.net.URL","id":"method-getContent","meta":{}},{"name":"getDefaultPort","tagname":"method","owner":"java.net.URL","id":"method-getDefaultPort","meta":{}},{"name":"getFile","tagname":"method","owner":"java.net.URL","id":"method-getFile","meta":{}},{"name":"getHost","tagname":"method","owner":"java.net.URL","id":"method-getHost","meta":{}},{"name":"getPath","tagname":"method","owner":"java.net.URL","id":"method-getPath","meta":{}},{"name":"getPort","tagname":"method","owner":"java.net.URL","id":"method-getPort","meta":{}},{"name":"getProtocol","tagname":"method","owner":"java.net.URL","id":"method-getProtocol","meta":{}},{"name":"getQuery","tagname":"method","owner":"java.net.URL","id":"method-getQuery","meta":{}},{"name":"getRef","tagname":"method","owner":"java.net.URL","id":"method-getRef","meta":{}},{"name":"getUserInfo","tagname":"method","owner":"java.net.URL","id":"method-getUserInfo","meta":{}},{"name":"hashCode","tagname":"method","owner":"java.net.URL","id":"method-hashCode","meta":{}},{"name":"openConnection","tagname":"method","owner":"java.net.URL","id":"method-openConnection","meta":{}},{"name":"openStream","tagname":"method","owner":"java.net.URL","id":"method-openStream","meta":{}},{"name":"sameFile","tagname":"method","owner":"java.net.URL","id":"method-sameFile","meta":{}},{"name":"setURLStreamHandlerFactory","tagname":"method","owner":"java.net.URL","id":"method-setURLStreamHandlerFactory","meta":{}},{"name":"toExternalForm","tagname":"method","owner":"java.net.URL","id":"method-toExternalForm","meta":{}},{"name":"toString","tagname":"method","owner":"java.net.URL","id":"method-toString","meta":{}},{"name":"toURI","tagname":"method","owner":"java.net.URL","id":"method-toURI","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.net.URL","short_doc":"implements java.io.Serializable\n\nClass {@code URL} represents a Uniform Resource\n Locator, a pointer to a \"resource\" ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.net.URL</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/URL.html#java-net-URL' target='_blank'>URL.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p>Class {@code URL} represents a Uniform Resource\n Locator, a pointer to a \"resource\" on the World\n Wide Web. A resource can be something as simple as a file or a\n directory, or it can be a reference to a more complicated object,\n such as a query to a database or to a search engine. More\n information on the types of URLs and their formats can be found at:\n <a href=\n \"http://web.archive.org/web/20051219043731/http://archive.ncsa.uiuc.edu/SDG/Software/Mosaic/Demo/url-primer.html\">\n <i>Types of URL</i></a>\n <p>\n In general, a URL can be broken into several parts. Consider the\n following example:\n <blockquote></blockquote></p>\n\n<pre>     http://www.example.com/docs/resource1.html\n </pre>\n\n\n<p>\n <p>\n The URL above indicates that the protocol to use is\n {@code http} (HyperText Transfer Protocol) and that the\n information resides on a host machine named\n {@code www.example.com}. The information on that host\n machine is named {@code /docs/resource1.html}. The exact\n meaning of this name on the host machine is both protocol\n dependent and host dependent. The information normally resides in\n a file, but it could be generated on the fly. This component of\n the URL is called the <i>path</i> component.\n <p>\n A URL can optionally specify a \"port\", which is the\n port number to which the TCP connection is made on the remote host\n machine. If the port is not specified, the default port for\n the protocol is used instead. For example, the default port for\n {@code http} is {@code 80}. An alternative port could be\n specified as:\n <blockquote></blockquote></p>\n\n<pre>     http://www.example.com:1080/docs/resource1.html\n </pre>\n\n\n<p>\n <p>\n The syntax of {@code URL} is defined by  <a\n href=\"http://www.ietf.org/rfc/rfc2396.txt\"><i>RFC&nbsp;2396: Uniform\n Resource Identifiers (URI): Generic Syntax</i></a>, amended by <a\n href=\"http://www.ietf.org/rfc/rfc2732.txt\"><i>RFC&nbsp;2732: Format for\n Literal IPv6 Addresses in URLs</i></a>. The Literal IPv6 address format\n also supports scope_ids. The syntax and usage of scope_ids is described\n <a href=\"Inet6Address.html#scoped\">here</a>.\n <p>\n A URL may have appended to it a \"fragment\", also known\n as a \"ref\" or a \"reference\". The fragment is indicated by the sharp\n sign character \"#\" followed by more characters. For example,\n <blockquote></blockquote></p>\n\n<pre>     http://java.sun.com/index.html#chapter1\n </pre>\n\n\n<p>\n <p>\n This fragment is not technically part of the URL. Rather, it\n indicates that after the specified resource is retrieved, the\n application is specifically interested in that part of the\n document that has the tag {@code chapter1} attached to it. The\n meaning of a tag is resource specific.\n <p>\n An application can also specify a \"relative URL\",\n which contains only enough information to reach the resource\n relative to another URL. Relative URLs are frequently used within\n HTML pages. For example, if the contents of the URL:\n <blockquote></blockquote></p>\n\n<pre>     http://java.sun.com/index.html\n </pre>\n\n\n<p>\n contained within it the relative URL:\n <blockquote></blockquote></p>\n\n<pre>     FAQ.html\n </pre>\n\n\n<p>\n it would be a shorthand for:\n <blockquote></blockquote></p>\n\n<pre>     http://java.sun.com/FAQ.html\n </pre>\n\n\n<p>\n <p>\n The relative URL need not specify all the components of a URL. If\n the protocol, host name, or port number is missing, the value is\n inherited from the fully specified URL. The file component must be\n specified. The optional fragment is not inherited.\n <p>\n The URL class does not itself encode or decode any URL components\n according to the escaping mechanism defined in RFC2396. It is the\n responsibility of the caller to encode any fields, which need to be\n escaped prior to calling URL, and also to decode any escaped fields,\n that are returned from URL. Furthermore, because URL has no knowledge\n of URL escaping, it does not recognise equivalence between the encoded\n or decoded form of the same URL. For example, the two URLs:<br>\n <pre>    http://foo.com/hello world/ and http://foo.com/hello%20world</pre>\n would be considered not equal to each other.\n <p>\n Note, the <a href=\"#!/api/java.net.URI\" rel=\"java.net.URI\" class=\"docClass\">java.net.URI</a> class does perform escaping of its\n component fields in certain circumstances. The recommended way\n to manage the encoding and decoding of URLs is to use <a href=\"#!/api/java.net.URI\" rel=\"java.net.URI\" class=\"docClass\">java.net.URI</a>,\n and to convert between these two classes using <a href=\"#!/api/java.net.URL-method-toURI\" rel=\"java.net.URL-method-toURI\" class=\"docClass\">toURI</a>() and\n java.net.URI.toURL().\n <p>\n The <a href=\"#!/api/java.net.URLEncoder\" rel=\"java.net.URLEncoder\" class=\"docClass\">java.net.URLEncoder</a> and <a href=\"#!/api/java.net.URLDecoder\" rel=\"java.net.URLDecoder\" class=\"docClass\">java.net.URLDecoder</a> classes can also be\n used, but only for HTML form encoding, which is not the same\n as the encoding scheme defined in RFC2396.</p>\n        <p>Available since: <b>JDK1.0</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-equals' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares this URL for equality with another object. ...</div><div class='long'><p>Compares this URL for equality with another object.<p></p>\n\n<p> If the given object is not a URL then this method immediately returns\n {@code false}.<p></p>\n\n<p> Two URL objects are equal if they have the same protocol, reference\n equivalent hosts, have the same port number on the host, and the same\n file and fragment of the file.<p></p>\n\n<p> Returns true if this URL equals {@code o}. URLs are equal if they have\n the same protocol, host, port, file, and reference.</p>\n\n<p> <h3>Network I/O Warning</h3>\n <p>Some implementations of URL.equals() resolve host names over the\n network. This is problematic:\n <ul>\n <li><strong>The network may be slow.</strong> Many classes, including\n core collections like Map and Set expect that {@code equals} and {@code hashCode} will return quickly.\n By violating this assumption, this method posed potential performance\n problems.\n <li><strong>Equal IP addresses do not imply equal content.</strong>\n Virtual hosting permits unrelated sites to share an IP address. This\n method could report two otherwise unrelated URLs to be equal because\n they're hosted on the same server.</li>\n <li><strong>The network may not be available.</strong> Two URLs could be\n equal when a network is available and unequal otherwise.</li>\n <li><strong>The network may change.</strong> The IP address for a given\n host name varies by network and over time. This is problematic for mobile\n devices. Two URLs could be equal on some networks and unequal on\n others.</li>\n </li></ul>\n <p>This problem is fixed in Android 4.0 (Ice Cream Sandwich). In that\n release, URLs are only equal if their host names are equal (ignoring\n case).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>the URL to compare against.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if the objects are the same;\n          {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-getAuthority' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getAuthority' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getAuthority' class='name expandable'>getAuthority</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the authority part of this {@code URL}. ...</div><div class='long'><p>Gets the authority part of this {@code URL}.</p>\n        <p>Available since: <b>1.3</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the authority part of this {@code URL}</p>\n</div></li></ul></div></div></div><div id='method-getContent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getContent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getContent' class='name expandable'>getContent</a>( <span class='pre'>classes</span> ) : Object {java.lang.Object}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the contents of this URL. ...</div><div class='long'><p>Gets the contents of this URL. This method is a shorthand for:\n <blockquote></blockquote></p>\n\n<pre>     openConnection().getContent(Class[])\n </pre>\n\n\n<p></p>\n        <p>Available since: <b>1.3</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>classes</span> : Object {java.lang.Class[]}<div class='sub-desc'><p>an array of Java types</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.lang.Object}</span><div class='sub-desc'><p>the content object of this URL that is the first match of\n               the types specified in the classes array.\n               null if none of the requested types are supported.\n@exception IOException  if an I/O exception occurs.\n@see <a href=\"#!/api/java.net.URLConnection-method-getContent\" rel=\"java.net.URLConnection-method-getContent\" class=\"docClass\">java.net.URLConnection.getContent</a>(Class[])</p>\n</div></li></ul></div></div></div><div id='method-getDefaultPort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getDefaultPort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getDefaultPort' class='name expandable'>getDefaultPort</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the default port number of the protocol associated\n with this {@code URL}. ...</div><div class='long'><p>Gets the default port number of the protocol associated\n with this {@code URL}. If the URL scheme or the URLStreamHandler\n for the URL do not define a default port number,\n then -1 is returned.</p>\n        <p>Available since: <b>1.4</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the port number</p>\n</div></li></ul></div></div></div><div id='method-getFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getFile' class='name expandable'>getFile</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the file name of this {@code URL}. ...</div><div class='long'><p>Gets the file name of this {@code URL}.\n The returned file portion will be\n the same as <CODE>getPath()</CODE>, plus the concatenation of\n the value of <CODE>getQuery()</CODE>, if any. If there is\n no query portion, this method and <CODE>getPath()</CODE> will\n return identical results.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the file name of this {@code URL},\n or an empty string if one does not exist</p>\n</div></li></ul></div></div></div><div id='method-getHost' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getHost' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getHost' class='name expandable'>getHost</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the host name of this {@code URL}, if applicable. ...</div><div class='long'><p>Gets the host name of this {@code URL}, if applicable.\n The format of the host conforms to RFC 2732, i.e. for a\n literal IPv6 address, this method will return the IPv6 address\n enclosed in square brackets ({@code '['} and {@code ']'}).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the host name of this {@code URL}.</p>\n</div></li></ul></div></div></div><div id='method-getPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getPath' class='name expandable'>getPath</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the path part of this {@code URL}. ...</div><div class='long'><p>Gets the path part of this {@code URL}.</p>\n        <p>Available since: <b>1.3</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the path part of this {@code URL}, or an\n empty string if one does not exist</p>\n</div></li></ul></div></div></div><div id='method-getPort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getPort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getPort' class='name expandable'>getPort</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the port number of this {@code URL}. ...</div><div class='long'><p>Gets the port number of this {@code URL}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the port number, or -1 if the port is not set</p>\n</div></li></ul></div></div></div><div id='method-getProtocol' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getProtocol' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getProtocol' class='name expandable'>getProtocol</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the protocol name of this {@code URL}. ...</div><div class='long'><p>Gets the protocol name of this {@code URL}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the protocol of this {@code URL}.</p>\n</div></li></ul></div></div></div><div id='method-getQuery' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getQuery' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getQuery' class='name expandable'>getQuery</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the query part of this {@code URL}. ...</div><div class='long'><p>Gets the query part of this {@code URL}.</p>\n        <p>Available since: <b>1.3</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the query part of this {@code URL},\n or <CODE>null</CODE> if one does not exist</p>\n</div></li></ul></div></div></div><div id='method-getRef' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getRef' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getRef' class='name expandable'>getRef</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the anchor (also known as the \"reference\") of this\n {@code URL}. ...</div><div class='long'><p>Gets the anchor (also known as the \"reference\") of this\n {@code URL}.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the anchor (also known as the \"reference\") of this\n          {@code URL}, or <CODE>null</CODE> if one does not exist</p>\n</div></li></ul></div></div></div><div id='method-getUserInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-getUserInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-getUserInfo' class='name expandable'>getUserInfo</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the userInfo part of this {@code URL}. ...</div><div class='long'><p>Gets the userInfo part of this {@code URL}.</p>\n        <p>Available since: <b>1.3</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the userInfo part of this {@code URL}, or\n <CODE>null</CODE> if one does not exist</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an integer suitable for hash table indexing. ...</div><div class='long'><p>Creates an integer suitable for hash table indexing.<p></p>\n\n<p> The hash code is based upon all the URL components relevant for URL\n comparison. As such, this operation is a blocking operation.<p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>a hash code for this {@code URL}.</p>\n</div></li></ul></div></div></div><div id='method-openConnection' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-openConnection' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-openConnection' class='name expandable'>openConnection</a>( <span class='pre'>proxy</span> ) : Object {java.net.URLConnection}<span class=\"signature\"></span></div><div class='description'><div class='short'>Same as openConnection(), except that the connection will be\n made through the specified proxy; Protocol handlers tha...</div><div class='long'><p>Same as <a href=\"#!/api/java.net.URL-method-openConnection\" rel=\"java.net.URL-method-openConnection\" class=\"docClass\">openConnection</a>(), except that the connection will be\n made through the specified proxy; Protocol handlers that do not\n support proxing will ignore the proxy parameter and make a\n normal connection.</p>\n\n<p> Invoking this method preempts the system's default ProxySelector\n settings.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>proxy</span> : Object {Proxy}<div class='sub-desc'><p>the Proxy through which this connection\n             will be made. If direct connection is desired,\n             Proxy.NO_PROXY should be specified.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.URLConnection}</span><div class='sub-desc'><p>a {@code URLConnection} to the URL.\n@exception IOException  if an I/O exception occurs.\n@exception SecurityException if a security manager is present\n             and the caller doesn't have permission to connect\n             to the proxy.\n@exception IllegalArgumentException will be thrown if proxy is null,\n             or proxy has the wrong type\n@exception UnsupportedOperationException if the subclass that\n             implements the protocol handler doesn't support\n             this method.\n@see java.net.URL#URL(java.lang.String, java.lang.String,\n             int, java.lang.String)\n@see <a href=\"#!/api/java.net.URLConnection\" rel=\"java.net.URLConnection\" class=\"docClass\">java.net.URLConnection</a>\n@see java.net.URLStreamHandler#openConnection(<a href=\"#!/api/java.net.URL\" rel=\"java.net.URL\" class=\"docClass\">java.net.URL</a>,\n             <a href=\"#!/api/java.net.Proxy\" rel=\"java.net.Proxy\" class=\"docClass\">java.net.Proxy</a>)</p>\n</div></li></ul></div></div></div><div id='method-openStream' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-openStream' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-openStream' class='name expandable'>openStream</a>( <span class='pre'></span> ) : Object {java.io.InputStream}<span class=\"signature\"></span></div><div class='description'><div class='short'>Opens a connection to this {@code URL} and returns an\n {@code InputStream} for reading from that connection. ...</div><div class='long'><p>Opens a connection to this {@code URL} and returns an\n {@code InputStream} for reading from that connection. This\n method is a shorthand for:\n <blockquote></blockquote></p>\n\n<pre>     openConnection().getInputStream()\n </pre>\n\n\n<p></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.io.InputStream}</span><div class='sub-desc'><p>an input stream for reading from the URL connection.\n@exception IOException  if an I/O exception occurs.\n@see <a href=\"#!/api/java.net.URL-method-openConnection\" rel=\"java.net.URL-method-openConnection\" class=\"docClass\">java.net.URL.openConnection</a>()\n@see <a href=\"#!/api/java.net.URLConnection-method-getInputStream\" rel=\"java.net.URLConnection-method-getInputStream\" class=\"docClass\">java.net.URLConnection.getInputStream</a>()</p>\n</div></li></ul></div></div></div><div id='method-sameFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-sameFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-sameFile' class='name expandable'>sameFile</a>( <span class='pre'>other</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compares two URLs, excluding the fragment component. ...</div><div class='long'><p>Compares two URLs, excluding the fragment component.<p></p>\n\n<p> Returns {@code true} if this {@code URL} and the\n {@code other} argument are equal without taking the\n fragment component into consideration.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>other</span> : Object {URL}<div class='sub-desc'><p>the {@code URL} to compare against.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if they reference the same remote object;\n          {@code false} otherwise.</p>\n</div></li></ul></div></div></div><div id='method-setURLStreamHandlerFactory' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-setURLStreamHandlerFactory' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-setURLStreamHandlerFactory' class='name expandable'>setURLStreamHandlerFactory</a>( <span class='pre'>fac</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sets an application's {@code URLStreamHandlerFactory}. ...</div><div class='long'><p>Sets an application's {@code URLStreamHandlerFactory}.\n This method can be called at most once in a given Java Virtual\n Machine.</p>\n\n<p><p> The {@code URLStreamHandlerFactory} instance is used to\nconstruct a stream protocol handler from a protocol name.</p>\n\n<p> <p> If there is a security manager, this method first calls\n the security manager's {@code checkSetFactory} method\n to ensure the operation is allowed.\n This could result in a SecurityException.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fac</span> : Object {URLStreamHandlerFactory}<div class='sub-desc'><p>the desired factory.\n@exception Error  if the application has already set a factory.\n@exception SecurityException  if a security manager exists and its\n             {@code checkSetFactory} method doesn't allow\n             the operation.\n@see java.net.URL#URL(java.lang.String, java.lang.String,\n             int, java.lang.String)\n@see <a href=\"#!/api/java.net.URLStreamHandlerFactory\" rel=\"java.net.URLStreamHandlerFactory\" class=\"docClass\">java.net.URLStreamHandlerFactory</a>\n@see SecurityManager#checkSetFactory</p>\n</div></li></ul></div></div></div><div id='method-toExternalForm' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-toExternalForm' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-toExternalForm' class='name expandable'>toExternalForm</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a string representation of this {@code URL}. ...</div><div class='long'><p>Constructs a string representation of this {@code URL}. The\n string is created by calling the {@code toExternalForm}\n method of the stream protocol handler for this object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this object.\n@see java.net.URL#URL(java.lang.String, java.lang.String,\n                  int, java.lang.String)\n@see java.net.URLStreamHandler#toExternalForm(<a href=\"#!/api/java.net.URL\" rel=\"java.net.URL\" class=\"docClass\">java.net.URL</a>)</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Constructs a string representation of this {@code URL}. ...</div><div class='long'><p>Constructs a string representation of this {@code URL}. The\n string is created by calling the {@code toExternalForm}\n method of the stream protocol handler for this object.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>a string representation of this object.\n@see java.net.URL#URL(java.lang.String, java.lang.String, int,\n                  java.lang.String)\n@see java.net.URLStreamHandler#toExternalForm(<a href=\"#!/api/java.net.URL\" rel=\"java.net.URL\" class=\"docClass\">java.net.URL</a>)</p>\n</div></li></ul></div></div></div><div id='method-toURI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.URL'>java.net.URL</span><br/><a href='source/URL.html#java-net-URL-method-toURI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.URL-method-toURI' class='name expandable'>toURI</a>( <span class='pre'></span> ) : Object {java.net.URI}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a java.net.URI equivalent to this URL. ...</div><div class='long'><p>Returns a <a href=\"#!/api/java.net.URI\" rel=\"java.net.URI\" class=\"docClass\">java.net.URI</a> equivalent to this URL.\n This method functions in the same way as {@code new URI (this.toString())}.\n <p>Note, any URL instance that complies with RFC 2396 can be converted\n to a URI. However, some URLs that are not strictly in compliance\n can not be converted to a URI.\n@exception URISyntaxException if this URL is not formatted strictly according to\n            to RFC2396 and cannot be converted to a URI.</p>\n        <p>Available since: <b>1.5</b></p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.net.URI}</span><div class='sub-desc'><p>a URI instance equivalent to this URL.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});