Ext.data.JsonP.java_net_StandardSocketOptions({"tagname":"class","name":"java.net.StandardSocketOptions","autodetected":{},"files":[{"filename":"StandardSocketOptions.js","href":"StandardSocketOptions.html#java-net-StandardSocketOptions"}],"extends":"java.lang.Object","since":"1.7","members":[{"name":"IP_MULTICAST_IF","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-IP_MULTICAST_IF","meta":{}},{"name":"IP_MULTICAST_LOOP","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-IP_MULTICAST_LOOP","meta":{}},{"name":"IP_MULTICAST_TTL","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-IP_MULTICAST_TTL","meta":{}},{"name":"IP_TOS","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-IP_TOS","meta":{}},{"name":"SO_BROADCAST","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-SO_BROADCAST","meta":{}},{"name":"SO_KEEPALIVE","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-SO_KEEPALIVE","meta":{}},{"name":"SO_LINGER","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-SO_LINGER","meta":{}},{"name":"SO_RCVBUF","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-SO_RCVBUF","meta":{}},{"name":"SO_REUSEADDR","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-SO_REUSEADDR","meta":{}},{"name":"SO_SNDBUF","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-SO_SNDBUF","meta":{}},{"name":"TCP_NODELAY","tagname":"property","owner":"java.net.StandardSocketOptions","id":"property-TCP_NODELAY","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.net.StandardSocketOptions","short_doc":"Defines the standard socket options. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.net.StandardSocketOptions</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions' target='_blank'>StandardSocketOptions.js</a></div></pre><div class='doc-contents'><p>Defines the <em>standard</em> socket options.</p>\n\n<p> <p> The <a href=\"#!/api/java.net.SocketOption-method-name\" rel=\"java.net.SocketOption-method-name\" class=\"docClass\">name</a> of each socket option defined by this\n class is its field name.</p>\n\n<p> <p> In this release, the socket options defined here are used by network channels in the channels package.</p>\n        <p>Available since: <b>1.7</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-IP_MULTICAST_IF' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-IP_MULTICAST_IF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-IP_MULTICAST_IF' class='name expandable'>IP_MULTICAST_IF</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The network interface for Internet Protocol (IP) multicast datagrams. ...</div><div class='long'><p>The network interface for Internet Protocol (IP) multicast datagrams.</p>\n\n<p><p> The value of this socket option is a <a href=\"#!/api/java.net.NetworkInterface\" rel=\"java.net.NetworkInterface\" class=\"docClass\">java.net.NetworkInterface</a> that\nrepresents the outgoing interface for multicast datagrams sent by the\ndatagram-oriented socket. For <a href=\"#!/api/java.net.StandardProtocolFamily-property-INET6\" rel=\"java.net.StandardProtocolFamily-property-INET6\" class=\"docClass\">IPv6</a>\nsockets then it is system dependent whether setting this option also\nsets the outgoing interface for multicast datagrams sent to IPv4\naddresses.</p>\n\n<p><p> The initial/default value of this socket option may be {@code null}\nto indicate that outgoing interface will be selected by the operating\nsystem, typically based on the network routing tables. An implementation\nallows this socket option to be set after the socket is bound. Whether\nthe socket option can be queried or changed prior to binding the socket\nis system dependent.</p>\n\n<p>@see java.nio.channels.MulticastChannel\n@see MulticastSocket#setInterface</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IP_MULTICAST_LOOP' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-IP_MULTICAST_LOOP' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-IP_MULTICAST_LOOP' class='name expandable'>IP_MULTICAST_LOOP</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Loopback for Internet Protocol (IP) multicast datagrams. ...</div><div class='long'><p>Loopback for Internet Protocol (IP) multicast datagrams.</p>\n\n<p><p> The value of this socket option is a {@code Boolean} that controls\nthe <em>loopback</em> of multicast datagrams. The value of the socket\noption represents if the option is enabled or disabled.</p>\n\n<p><p> The exact semantics of this socket options are system dependent.\nIn particular, it is system dependent whether the loopback applies to\nmulticast datagrams sent from the socket or received by the socket.\nFor <a href=\"#!/api/java.net.StandardProtocolFamily-property-INET6\" rel=\"java.net.StandardProtocolFamily-property-INET6\" class=\"docClass\">IPv6</a> sockets then it is\nsystem dependent whether the option also applies to multicast datagrams\nsent to IPv4 addresses.</p>\n\n<p><p> The initial/default value of this socket option is {@code TRUE}. An\nimplementation allows this socket option to be set after the socket is\nbound. Whether the socket option can be queried or changed prior to\nbinding the socket is system dependent.</p>\n\n<p>@see java.nio.channels.MulticastChannel\n @see MulticastSocket#setLoopbackMode</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IP_MULTICAST_TTL' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-IP_MULTICAST_TTL' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-IP_MULTICAST_TTL' class='name expandable'>IP_MULTICAST_TTL</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The time-to-live for Internet Protocol (IP) multicast datagrams. ...</div><div class='long'><p>The <em>time-to-live</em> for Internet Protocol (IP) multicast datagrams.</p>\n\n<p><p> The value of this socket option is an {@code Integer} in the range\n{@code 0 &lt;= value &lt;= 255}. It is used to control the scope of multicast\ndatagrams sent by the datagram-oriented socket.\nIn the case of an <a href=\"#!/api/java.net.StandardProtocolFamily-property-INET\" rel=\"java.net.StandardProtocolFamily-property-INET\" class=\"docClass\">IPv4</a> socket\nthe option is the time-to-live (TTL) on multicast datagrams sent by the\nsocket. Datagrams with a TTL of zero are not transmitted on the network\nbut may be delivered locally. In the case of an <a href=\"#!/api/java.net.StandardProtocolFamily-property-INET6\" rel=\"java.net.StandardProtocolFamily-property-INET6\" class=\"docClass\">IPv6</a> socket the option is the\n<em>hop limit</em> which is number of <em>hops</em> that the datagram can\npass through before expiring on the network. For IPv6 sockets it is\nsystem dependent whether the option also sets the <em>time-to-live</em>\non multicast datagrams sent to IPv4 addresses.</p>\n\n<p><p> The initial/default value of the time-to-live setting is typically\n{@code 1}. An implementation allows this socket option to be set after\nthe socket is bound. Whether the socket option can be queried or changed\nprior to binding the socket is system dependent.</p>\n\n<p>@see java.nio.channels.MulticastChannel\n@see MulticastSocket#setTimeToLive</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-IP_TOS' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-IP_TOS' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-IP_TOS' class='name expandable'>IP_TOS</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Type of Service (ToS) octet in the Internet Protocol (IP) header. ...</div><div class='long'><p>The Type of Service (ToS) octet in the Internet Protocol (IP) header.</p>\n\n<p><p> The value of this socket option is an {@code Integer} representing\nthe value of the ToS octet in IP packets sent by sockets to an <a href=\"#!/api/java.net.StandardProtocolFamily-property-INET\" rel=\"java.net.StandardProtocolFamily-property-INET\" class=\"docClass\">IPv4</a> socket. The interpretation of the ToS\noctet is network specific and is not defined by this class. Further\ninformation on the ToS octet can be found in <a\nhref=\"http://www.ietf.org/rfc/rfc1349.txt\">RFC&nbsp;1349</a> and <a\nhref=\"http://www.ietf.org/rfc/rfc2474.txt\">RFC&nbsp;2474</a>. The value\nof the socket option is a <em>hint</em>. An implementation may ignore the\nvalue, or ignore specific values.</p>\n\n<p><p> The initial/default value of the TOS field in the ToS octet is\nimplementation specific but will typically be {@code 0}. For\ndatagram-oriented sockets the option may be configured at any time after\nthe socket has been bound. The new value of the octet is used when sending\nsubsequent datagrams. It is system dependent whether this option can be\nqueried or changed prior to binding the socket.</p>\n\n<p><p> The behavior of this socket option on a stream-oriented socket, or an\n<a href=\"#!/api/java.net.StandardProtocolFamily-property-INET6\" rel=\"java.net.StandardProtocolFamily-property-INET6\" class=\"docClass\">IPv6</a> socket, is not defined in this\nrelease.</p>\n\n<p>@see DatagramSocket#setTrafficClass</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SO_BROADCAST' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-SO_BROADCAST' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-SO_BROADCAST' class='name expandable'>SO_BROADCAST</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Allow transmission of broadcast datagrams. ...</div><div class='long'><p>Allow transmission of broadcast datagrams.</p>\n\n<p><p> The value of this socket option is a {@code Boolean} that represents\nwhether the option is enabled or disabled. The option is specific to\ndatagram-oriented sockets sending to <a href=\"#!/api/java.net.Inet4Address\" rel=\"java.net.Inet4Address\" class=\"docClass\">IPv4</a>\nbroadcast addresses. When the socket option is enabled then the socket\ncan be used to send <em>broadcast datagrams</em>.</p>\n\n<p><p> The initial value of this socket option is {@code FALSE}. The socket\noption may be enabled or disabled at any time. Some operating systems may\nrequire that the Java virtual machine be started with implementation\nspecific privileges to enable this option or send broadcast datagrams.</p>\n\n<p>@see <a href=\"http://www.ietf.org/rfc/rfc919.txt\">RFC&nbsp;929:\nBroadcasting Internet Datagrams</a>\n@see DatagramSocket#setBroadcast</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SO_KEEPALIVE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-SO_KEEPALIVE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-SO_KEEPALIVE' class='name expandable'>SO_KEEPALIVE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Keep connection alive. ...</div><div class='long'><p>Keep connection alive.</p>\n\n<p><p> The value of this socket option is a {@code Boolean} that represents\nwhether the option is enabled or disabled. When the {@code SO_KEEPALIVE}\noption is enabled the operating system may use a <em>keep-alive</em>\nmechanism to periodically probe the other end of a connection when the\nconnection is otherwise idle. The exact semantics of the keep alive\nmechanism is system dependent and therefore unspecified.</p>\n\n<p><p> The initial value of this socket option is {@code FALSE}. The socket\noption may be enabled or disabled at any time.</p>\n\n<p>@see <a href=\"http://www.ietf.org/rfc/rfc1122.txt\">RFC&nbsp;1122\nRequirements for Internet Hosts -- Communication Layers</a>\n@see Socket#setKeepAlive</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SO_LINGER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-SO_LINGER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-SO_LINGER' class='name expandable'>SO_LINGER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Linger on close if data is present. ...</div><div class='long'><p>Linger on close if data is present.</p>\n\n<p><p> The value of this socket option is an {@code Integer} that controls\nthe action taken when unsent data is queued on the socket and a method\nto close the socket is invoked. If the value of the socket option is zero\nor greater, then it represents a timeout value, in seconds, known as the\n<em>linger interval</em>. The linger interval is the timeout for the\n{@code close} method to block while the operating system attempts to\ntransmit the unsent data or it decides that it is unable to transmit the\ndata. If the value of the socket option is less than zero then the option\nis disabled. In that case the {@code close} method does not wait until\nunsent data is transmitted; if possible the operating system will transmit\nany unsent data before the connection is closed.</p>\n\n<p><p> This socket option is intended for use with sockets that are configured\nin blocking mode\nonly. The behavior of the {@code close} method when this option is\nenabled on a non-blocking socket is not defined.</p>\n\n<p><p> The initial value of this socket option is a negative value, meaning\nthat the option is disabled. The option may be enabled, or the linger\ninterval changed, at any time. The maximum value of the linger interval\nis system dependent. Setting the linger interval to a value that is\ngreater than its maximum value causes the linger interval to be set to\nits maximum value.</p>\n\n<p>@see Socket#setSoLinger</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SO_RCVBUF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-SO_RCVBUF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-SO_RCVBUF' class='name expandable'>SO_RCVBUF</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The size of the socket receive buffer. ...</div><div class='long'><p>The size of the socket receive buffer.</p>\n\n<p><p> The value of this socket option is an {@code Integer} that is the\nsize of the socket receive buffer in bytes. The socket receive buffer is\nan input buffer used by the networking implementation. It may need to be\nincreased for high-volume connections or decreased to limit the possible\nbacklog of incoming data. The value of the socket option is a\n<em>hint</em> to the implementation to size the buffer and the actual\nsize may differ.</p>\n\n<p><p> For datagram-oriented sockets, the size of the receive buffer may\nlimit the size of the datagrams that can be received. Whether datagrams\nlarger than the buffer size can be received is system dependent.\nIncreasing the socket receive buffer may be important for cases where\ndatagrams arrive in bursts faster than they can be processed.</p>\n\n<p><p> In the case of stream-oriented sockets and the TCP/IP protocol, the\nsize of the socket receive buffer may be used when advertising the size\nof the TCP receive window to the remote peer.</p>\n\n<p><p> The initial/default size of the socket receive buffer and the range\nof allowable values is system dependent although a negative size is not\nallowed. An attempt to set the socket receive buffer to larger than its\nmaximum size causes it to be set to its maximum size.</p>\n\n<p><p> An implementation allows this socket option to be set before the\nsocket is bound or connected. Whether an implementation allows the\nsocket receive buffer to be changed after the socket is bound is system\ndependent.</p>\n\n<p>@see <a href=\"http://www.ietf.org/rfc/rfc1323.txt\">RFC&nbsp;1323: TCP\nExtensions for High Performance</a>\n@see Socket#setReceiveBufferSize\n@see ServerSocket#setReceiveBufferSize</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SO_REUSEADDR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-SO_REUSEADDR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-SO_REUSEADDR' class='name expandable'>SO_REUSEADDR</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Re-use address. ...</div><div class='long'><p>Re-use address.</p>\n\n<p><p> The value of this socket option is a {@code Boolean} that represents\nwhether the option is enabled or disabled. The exact semantics of this\nsocket option are socket type and system dependent.</p>\n\n<p><p> In the case of stream-oriented sockets, this socket option will\nusually determine whether the socket can be bound to a socket address\nwhen a previous connection involving that socket address is in the\n<em>TIME_WAIT</em> state. On implementations where the semantics differ,\nand the socket option is not required to be enabled in order to bind the\nsocket when a previous connection is in this state, then the\nimplementation may choose to ignore this option.</p>\n\n<p><p> For datagram-oriented sockets the socket option is used to allow\nmultiple programs bind to the same address. This option should be enabled\nwhen the socket is to be used for Internet Protocol (IP) multicasting.</p>\n\n<p><p> An implementation allows this socket option to be set before the\nsocket is bound or connected. Changing the value of this socket option\nafter the socket is bound has no effect. The default value of this\nsocket option is system dependent.</p>\n\n<p>@see <a href=\"http://www.ietf.org/rfc/rfc793.txt\">RFC&nbsp;793: Transmission\nControl Protocol</a>\n@see ServerSocket#setReuseAddress</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-SO_SNDBUF' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-SO_SNDBUF' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-SO_SNDBUF' class='name expandable'>SO_SNDBUF</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The size of the socket send buffer. ...</div><div class='long'><p>The size of the socket send buffer.</p>\n\n<p><p> The value of this socket option is an {@code Integer} that is the\nsize of the socket send buffer in bytes. The socket send buffer is an\noutput buffer used by the networking implementation. It may need to be\nincreased for high-volume connections. The value of the socket option is\na <em>hint</em> to the implementation to size the buffer and the actual\nsize may differ. The socket option can be queried to retrieve the actual\nsize.</p>\n\n<p><p> For datagram-oriented sockets, the size of the send buffer may limit\nthe size of the datagrams that may be sent by the socket. Whether\ndatagrams larger than the buffer size are sent or discarded is system\ndependent.</p>\n\n<p><p> The initial/default size of the socket send buffer and the range of\nallowable values is system dependent although a negative size is not\nallowed. An attempt to set the socket send buffer to larger than its\nmaximum size causes it to be set to its maximum size.</p>\n\n<p><p> An implementation allows this socket option to be set before the\nsocket is bound or connected. Whether an implementation allows the\nsocket send buffer to be changed after the socket is bound is system\ndependent.</p>\n\n<p>@see Socket#setSendBufferSize</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div><div id='property-TCP_NODELAY' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.net.StandardSocketOptions'>java.net.StandardSocketOptions</span><br/><a href='source/StandardSocketOptions.html#java-net-StandardSocketOptions-property-TCP_NODELAY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.net.StandardSocketOptions-property-TCP_NODELAY' class='name expandable'>TCP_NODELAY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Disable the Nagle algorithm. ...</div><div class='long'><p>Disable the Nagle algorithm.</p>\n\n<p><p> The value of this socket option is a {@code Boolean} that represents\nwhether the option is enabled or disabled. The socket option is specific to\nstream-oriented sockets using the TCP/IP protocol. TCP/IP uses an algorithm\nknown as <em>The Nagle Algorithm</em> to coalesce short segments and\nimprove network efficiency.</p>\n\n<p><p> The default value of this socket option is {@code FALSE}. The\nsocket option should only be enabled in cases where it is known that the\ncoalescing impacts performance. The socket option may be enabled at any\ntime. In other words, the Nagle Algorithm can be disabled. Once the option\nis enabled, it is system dependent whether it can be subsequently\ndisabled. If it cannot, then invoking the {@code setOption} method to\ndisable the option has no effect.</p>\n\n<p>@see <a href=\"http://www.ietf.org/rfc/rfc1122.txt\">RFC&nbsp;1122:\nRequirements for Internet Hosts -- Communication Layers</a>\n@see Socket#setTcpNoDelay</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div></div></div>","meta":{}});