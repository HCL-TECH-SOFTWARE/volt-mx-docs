Ext.data.JsonP.java_util_concurrent_atomic_AtomicBoolean({"tagname":"class","name":"java.util.concurrent.atomic.AtomicBoolean","autodetected":{},"files":[{"filename":"AtomicBoolean.js","href":"AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean"}],"extends":"java.lang.Object","since":"1.5","author":[{"tagname":"author","name":"Doug Lea","email":null}],"members":[{"name":"compareAndSet","tagname":"method","owner":"java.util.concurrent.atomic.AtomicBoolean","id":"method-compareAndSet","meta":{}},{"name":"get","tagname":"method","owner":"java.util.concurrent.atomic.AtomicBoolean","id":"method-get","meta":{}},{"name":"getAndSet","tagname":"method","owner":"java.util.concurrent.atomic.AtomicBoolean","id":"method-getAndSet","meta":{}},{"name":"lazySet","tagname":"method","owner":"java.util.concurrent.atomic.AtomicBoolean","id":"method-lazySet","meta":{}},{"name":"set","tagname":"method","owner":"java.util.concurrent.atomic.AtomicBoolean","id":"method-set","meta":{}},{"name":"toString","tagname":"method","owner":"java.util.concurrent.atomic.AtomicBoolean","id":"method-toString","meta":{}},{"name":"weakCompareAndSet","tagname":"method","owner":"java.util.concurrent.atomic.AtomicBoolean","id":"method-weakCompareAndSet","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.atomic.AtomicBoolean","short_doc":"implements java.io.Serializable\n\nA {@code boolean} value that may be updated atomically. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>java.util.concurrent.atomic.AtomicBoolean</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean' target='_blank'>AtomicBoolean.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p>A {@code boolean} value that may be updated atomically. See the\n java.util.concurrent.atomic package specification for\n description of the properties of atomic variables. An\n {@code AtomicBoolean} is used in applications such as atomically\n updated flags, and cannot be used as a replacement for a\n java.lang.Boolean.</p>\n        <p>Available since: <b>1.5</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-compareAndSet' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.AtomicBoolean'>java.util.concurrent.atomic.AtomicBoolean</span><br/><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean-method-compareAndSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.AtomicBoolean-method-compareAndSet' class='name expandable'>compareAndSet</a>( <span class='pre'>expect, update</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value. ...</div><div class='long'><p>Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expect</span> : Boolean<div class='sub-desc'><p>the expected value</p>\n</div></li><li><span class='pre'>update</span> : Boolean<div class='sub-desc'><p>the new value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if successful. False return indicates that\n the actual value was not equal to the expected value.</p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.AtomicBoolean'>java.util.concurrent.atomic.AtomicBoolean</span><br/><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.AtomicBoolean-method-get' class='name expandable'>get</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current value. ...</div><div class='long'><p>Returns the current value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the current value</p>\n</div></li></ul></div></div></div><div id='method-getAndSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.AtomicBoolean'>java.util.concurrent.atomic.AtomicBoolean</span><br/><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean-method-getAndSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.AtomicBoolean-method-getAndSet' class='name expandable'>getAndSet</a>( <span class='pre'>newValue</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Atomically sets to the given value and returns the previous value. ...</div><div class='long'><p>Atomically sets to the given value and returns the previous value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Boolean<div class='sub-desc'><p>the new value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>the previous value</p>\n</div></li></ul></div></div></div><div id='method-lazySet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.AtomicBoolean'>java.util.concurrent.atomic.AtomicBoolean</span><br/><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean-method-lazySet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.AtomicBoolean-method-lazySet' class='name expandable'>lazySet</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Eventually sets to the given value. ...</div><div class='long'><p>Eventually sets to the given value.</p>\n        <p>Available since: <b>1.6</b></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Boolean<div class='sub-desc'><p>the new value</p>\n</div></li></ul></div></div></div><div id='method-set' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.AtomicBoolean'>java.util.concurrent.atomic.AtomicBoolean</span><br/><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.AtomicBoolean-method-set' class='name expandable'>set</a>( <span class='pre'>newValue</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Unconditionally sets to the given value. ...</div><div class='long'><p>Unconditionally sets to the given value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newValue</span> : Boolean<div class='sub-desc'><p>the new value</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.AtomicBoolean'>java.util.concurrent.atomic.AtomicBoolean</span><br/><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.AtomicBoolean-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the String representation of the current value. ...</div><div class='long'><p>Returns the String representation of the current value.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the String representation of the current value</p>\n</div></li></ul></div></div></div><div id='method-weakCompareAndSet' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.AtomicBoolean'>java.util.concurrent.atomic.AtomicBoolean</span><br/><a href='source/AtomicBoolean.html#java-util-concurrent-atomic-AtomicBoolean-method-weakCompareAndSet' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.AtomicBoolean-method-weakCompareAndSet' class='name expandable'>weakCompareAndSet</a>( <span class='pre'>expect, update</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value. ...</div><div class='long'><p>Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value.</p>\n\n<p> <p><a href=\"package-summary.html#weakCompareAndSet\">May fail\n spuriously and does not provide ordering guarantees</a>, so is\n only rarely an appropriate alternative to {@code compareAndSet}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expect</span> : Boolean<div class='sub-desc'><p>the expected value</p>\n</div></li><li><span class='pre'>update</span> : Boolean<div class='sub-desc'><p>the new value</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>{@code true} if successful</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});