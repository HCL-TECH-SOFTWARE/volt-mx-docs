Ext.data.JsonP.java_util_concurrent_atomic_DoubleAdder({"tagname":"class","name":"java.util.concurrent.atomic.DoubleAdder","autodetected":{},"files":[{"filename":"DoubleAdder.js","href":"DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder"}],"extends":"java.util.concurrent.atomic.Striped64","since":"1.8","author":[{"tagname":"author","name":"Doug Lea","email":null}],"members":[{"name":"add","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-add","meta":{}},{"name":"doubleValue","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-doubleValue","meta":{}},{"name":"floatValue","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-floatValue","meta":{}},{"name":"intValue","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-intValue","meta":{}},{"name":"longValue","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-longValue","meta":{}},{"name":"reset","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-reset","meta":{}},{"name":"sum","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-sum","meta":{}},{"name":"sumThenReset","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-sumThenReset","meta":{}},{"name":"toString","tagname":"method","owner":"java.util.concurrent.atomic.DoubleAdder","id":"method-toString","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-java.util.concurrent.atomic.DoubleAdder","short_doc":"implements java.io.Serializable\n\nOne or more variables that together maintain an initially zero\n {@code double} sum. ...","classIcon":"icon-class","superclasses":["java.util.concurrent.atomic.Striped64"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.util.concurrent.atomic.Striped64<div class='subclass '><strong>java.util.concurrent.atomic.DoubleAdder</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder' target='_blank'>DoubleAdder.js</a></div></pre><div class='doc-contents'><p>implements java.io.Serializable</p>\n\n<p>One or more variables that together maintain an initially zero\n {@code double} sum.  When updates (method <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-add\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-add\" class=\"docClass\">add</a>) are\n contended across threads, the set of variables may grow dynamically\n to reduce contention.  Method <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a> (or, equivalently <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-doubleValue\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-doubleValue\" class=\"docClass\">doubleValue</a>) returns the current total combined across the\n variables maintaining the sum. The order of accumulation within or\n across threads is not guaranteed. Thus, this class may not be\n applicable if numerical stability is required, especially when\n combining values of substantially different orders of magnitude.</p>\n\n<p> <p>This class is usually preferable to alternatives when multiple\n threads update a common value that is used for purposes such as\n summary statistics that are frequently updated but less frequently\n read.</p>\n\n<p> <p>This class extends Number, but does <em>not</em> define\n methods such as {@code equals}, {@code hashCode} and {@code\n compareTo} because instances are expected to be mutated, and so are\n not useful as collection keys.</p>\n        <p>Available since: <b>1.8</b></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-add' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-add' class='name expandable'>add</a>( <span class='pre'>x</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds the given value. ...</div><div class='long'><p>Adds the given value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>x</span> : Number<div class='sub-desc'><p>the value to add</p>\n</div></li></ul></div></div></div><div id='method-doubleValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-doubleValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-doubleValue' class='name expandable'>doubleValue</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Equivalent to sum. ...</div><div class='long'><p>Equivalent to <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the sum</p>\n</div></li></ul></div></div></div><div id='method-floatValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-floatValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-floatValue' class='name expandable'>floatValue</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the sum as a {@code float}\n after a narrowing primitive conversion. ...</div><div class='long'><p>Returns the <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a> as a {@code float}\n after a narrowing primitive conversion.</p>\n</div></div></div><div id='method-intValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-intValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-intValue' class='name expandable'>intValue</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the sum as an {@code int} after a\n narrowing primitive conversion. ...</div><div class='long'><p>Returns the <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a> as an {@code int} after a\n narrowing primitive conversion.</p>\n</div></div></div><div id='method-longValue' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-longValue' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-longValue' class='name expandable'>longValue</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the sum as a {@code long} after a\n narrowing primitive conversion. ...</div><div class='long'><p>Returns the <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a> as a {@code long} after a\n narrowing primitive conversion.</p>\n</div></div></div><div id='method-reset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-reset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-reset' class='name expandable'>reset</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Resets variables maintaining the sum to zero. ...</div><div class='long'><p>Resets variables maintaining the sum to zero.  This method may\n be a useful alternative to creating a new adder, but is only\n effective if there are no concurrent updates.  Because this\n method is intrinsically racy, it should only be used when it is\n known that no threads are concurrently updating.</p>\n</div></div></div><div id='method-sum' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-sum' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum' class='name expandable'>sum</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the current sum. ...</div><div class='long'><p>Returns the current sum.  The returned value is <em>NOT</em> an\n atomic snapshot; invocation in the absence of concurrent\n updates returns an accurate result, but concurrent updates that\n occur while the sum is being calculated might not be\n incorporated.  Also, because floating-point arithmetic is not\n strictly associative, the returned result need not be identical\n to the value that would be obtained in a sequential series of\n updates to a single variable.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the sum</p>\n</div></li></ul></div></div></div><div id='method-sumThenReset' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-sumThenReset' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-sumThenReset' class='name expandable'>sumThenReset</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Equivalent in effect to sum followed by reset. ...</div><div class='long'><p>Equivalent in effect to <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a> followed by <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-reset\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-reset\" class=\"docClass\">reset</a>. This method may apply for example during quiescent\n points between multithreaded computations.  If there are\n updates concurrent with this method, the returned value is\n <em>not</em> guaranteed to be the final value occurring before\n the reset.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the sum</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='java.util.concurrent.atomic.DoubleAdder'>java.util.concurrent.atomic.DoubleAdder</span><br/><a href='source/DoubleAdder.html#java-util-concurrent-atomic-DoubleAdder-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/java.util.concurrent.atomic.DoubleAdder-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the String representation of the sum. ...</div><div class='long'><p>Returns the String representation of the <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a>.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>the String representation of the <a href=\"#!/api/java.util.concurrent.atomic.DoubleAdder-method-sum\" rel=\"java.util.concurrent.atomic.DoubleAdder-method-sum\" class=\"docClass\">sum</a></p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});