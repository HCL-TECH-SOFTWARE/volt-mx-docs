Ext.data.JsonP.androidx_renderscript_Allocation({"tagname":"class","name":"androidx.renderscript.Allocation","autodetected":{},"files":[{"filename":"Allocation.js","href":"Allocation.html#androidx-renderscript-Allocation"}],"extends":"androidx.renderscript.BaseObj","members":[{"name":"USAGE_GRAPHICS_TEXTURE","tagname":"property","owner":"androidx.renderscript.Allocation","id":"property-USAGE_GRAPHICS_TEXTURE","meta":{}},{"name":"USAGE_IO_INPUT","tagname":"property","owner":"androidx.renderscript.Allocation","id":"property-USAGE_IO_INPUT","meta":{}},{"name":"USAGE_IO_OUTPUT","tagname":"property","owner":"androidx.renderscript.Allocation","id":"property-USAGE_IO_OUTPUT","meta":{}},{"name":"USAGE_SCRIPT","tagname":"property","owner":"androidx.renderscript.Allocation","id":"property-USAGE_SCRIPT","meta":{}},{"name":"USAGE_SHARED","tagname":"property","owner":"androidx.renderscript.Allocation","id":"property-USAGE_SHARED","meta":{}},{"name":"copy1DRangeFrom","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copy1DRangeFrom","meta":{}},{"name":"copy1DRangeFromUnchecked","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copy1DRangeFromUnchecked","meta":{}},{"name":"copy1DRangeTo","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copy1DRangeTo","meta":{}},{"name":"copy1DRangeToUnchecked","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copy1DRangeToUnchecked","meta":{}},{"name":"copy2DRangeFrom","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copy2DRangeFrom","meta":{}},{"name":"copy2DRangeTo","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copy2DRangeTo","meta":{}},{"name":"copy3DRangeFrom","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copy3DRangeFrom","meta":{}},{"name":"copyFrom","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copyFrom","meta":{}},{"name":"copyFromUnchecked","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copyFromUnchecked","meta":{}},{"name":"copyTo","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-copyTo","meta":{}},{"name":"createCubemapFromBitmap","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-createCubemapFromBitmap","meta":{}},{"name":"createCubemapFromCubeFaces","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-createCubemapFromCubeFaces","meta":{}},{"name":"createFromBitmap","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-createFromBitmap","meta":{}},{"name":"createFromBitmapResource","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-createFromBitmapResource","meta":{}},{"name":"createFromString","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-createFromString","meta":{}},{"name":"createSized","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-createSized","meta":{}},{"name":"createTyped","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-createTyped","meta":{}},{"name":"destroy","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-destroy","meta":{}},{"name":"equals","tagname":"method","owner":"androidx.renderscript.BaseObj","id":"method-equals","meta":{}},{"name":"generateMipmaps","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-generateMipmaps","meta":{}},{"name":"getByteBuffer","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-getByteBuffer","meta":{}},{"name":"getBytesSize","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-getBytesSize","meta":{}},{"name":"getElement","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-getElement","meta":{}},{"name":"getIncAllocID","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-getIncAllocID","meta":{}},{"name":"getStride","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-getStride","meta":{}},{"name":"getType","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-getType","meta":{}},{"name":"getUsage","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-getUsage","meta":{}},{"name":"hashCode","tagname":"method","owner":"androidx.renderscript.BaseObj","id":"method-hashCode","meta":{}},{"name":"ioReceive","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-ioReceive","meta":{}},{"name":"ioSend","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-ioSend","meta":{}},{"name":"ioSendOutput","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-ioSendOutput","meta":{}},{"name":"setAutoPadding","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-setAutoPadding","meta":{}},{"name":"setFromFieldPacker","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-setFromFieldPacker","meta":{}},{"name":"setIncAllocID","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-setIncAllocID","meta":{}},{"name":"setSurface","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-setSurface","meta":{}},{"name":"syncAll","tagname":"method","owner":"androidx.renderscript.Allocation","id":"method-syncAll","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-androidx.renderscript.Allocation","short_doc":"This class provides the primary method through which data is passed to\n and from RenderScript kernels. ...","classIcon":"icon-class","superclasses":["java.lang.Object","androidx.renderscript.BaseObj"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/androidx.renderscript.BaseObj' rel='androidx.renderscript.BaseObj' class='docClass'>androidx.renderscript.BaseObj</a><div class='subclass '><strong>androidx.renderscript.Allocation</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/Allocation.html#androidx-renderscript-Allocation' target='_blank'>Allocation.js</a></div></pre><div class='doc-contents'><p> This class provides the primary method through which data is passed to\n and from RenderScript kernels.  An Allocation provides the backing store for\n a given <a href=\"#!/api/androidx.renderscript.Type\" rel=\"androidx.renderscript.Type\" class=\"docClass\">androidx.renderscript.Type</a>.  </p>\n\n\n<p> <p>An Allocation also contains a set of usage flags that denote how the\n Allocation could be used. For example, an Allocation may have usage flags\n specifying that it can be used from a script as well as input to a <a href=\"#!/api/androidx.renderscript.Sampler\" rel=\"androidx.renderscript.Sampler\" class=\"docClass\">androidx.renderscript.Sampler</a>. A developer must synchronize\n across these different usages using\n <a href=\"#!/api/androidx.renderscript.Allocation-method-syncAll\" rel=\"androidx.renderscript.Allocation-method-syncAll\" class=\"docClass\">syncAll</a> in\n order to ensure that different users of the Allocation have a consistent view\n of memory. For example, in the case where an Allocation is used as the output\n of one kernel and as Sampler input in a later kernel, a developer must call\n <a href=\"#!/api/androidx.renderscript.Allocation-method-syncAll\" rel=\"androidx.renderscript.Allocation-method-syncAll\" class=\"docClass\">syncAll(Allocation.USAGE_SCRIPT)</a> prior to launching the\n second kernel to ensure correctness.</p>\n\n<p> <p>An Allocation can be populated with the <a href=\"#!/api/androidx.renderscript.Allocation-method-copyFrom\" rel=\"androidx.renderscript.Allocation-method-copyFrom\" class=\"docClass\">copyFrom</a> routines. For\n more complex Element types, the <a href=\"#!/api/androidx.renderscript.Allocation-method-copyFromUnchecked\" rel=\"androidx.renderscript.Allocation-method-copyFromUnchecked\" class=\"docClass\">copyFromUnchecked</a> methods can be\n used to copy from byte arrays or similar constructs.</p></p>\n\n<p> <div class=\"special reference\">\n <h3>Developer Guides</h3>\n <p>For more information about creating an application that uses\n RenderScript, read the\n <a href=\"{@docRoot}guide/topics/renderscript/index.html\">RenderScript</a>\n developer guide.</p>\n </div></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-USAGE_GRAPHICS_TEXTURE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-property-USAGE_GRAPHICS_TEXTURE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-property-USAGE_GRAPHICS_TEXTURE' class='name expandable'>USAGE_GRAPHICS_TEXTURE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Allocation will be used as a texture source by one or more graphics\nprograms. ...</div><div class='long'><p>The Allocation will be used as a texture source by one or more graphics\nprograms.</p>\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-USAGE_IO_INPUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-property-USAGE_IO_INPUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-property-USAGE_IO_INPUT' class='name expandable'>USAGE_IO_INPUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Allocation will be used as a android.graphics.SurfaceTexture\nconsumer. ...</div><div class='long'><p>The Allocation will be used as a android.graphics.SurfaceTexture\nconsumer.  This usage will cause the Allocation to be created as\nread-only.</p>\n<p>Defaults to: <code>&quot;32&quot;</code></p></div></div></div><div id='property-USAGE_IO_OUTPUT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-property-USAGE_IO_OUTPUT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-property-USAGE_IO_OUTPUT' class='name expandable'>USAGE_IO_OUTPUT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Allocation will be used as a android.graphics.SurfaceTexture\nproducer. ...</div><div class='long'><p>The Allocation will be used as a android.graphics.SurfaceTexture\nproducer.  The dimensions and format of the android.graphics.SurfaceTexture will be forced to those of the\nAllocation.</p>\n<p>Defaults to: <code>&quot;64&quot;</code></p></div></div></div><div id='property-USAGE_SCRIPT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-property-USAGE_SCRIPT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-property-USAGE_SCRIPT' class='name expandable'>USAGE_SCRIPT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Allocation will be bound to and accessed by scripts. ...</div><div class='long'><p>The Allocation will be bound to and accessed by scripts.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p></div></div></div><div id='property-USAGE_SHARED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-property-USAGE_SHARED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-property-USAGE_SHARED' class='name expandable'>USAGE_SHARED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The Allocation's backing store will be inherited from another object\n(usually a android.graphics.Bitmap); copying to ...</div><div class='long'><p>The Allocation's backing store will be inherited from another object\n(usually a android.graphics.Bitmap); copying to or from the\noriginal source Bitmap will cause a synchronization rather than a full\ncopy.  <a href=\"#!/api/androidx.renderscript.Allocation-method-syncAll\" rel=\"androidx.renderscript.Allocation-method-syncAll\" class=\"docClass\">syncAll</a> may also be used to synchronize the Allocation\nand the source Bitmap.</p>\n\n<p>This is set by default for allocations created with <a href=\"#!/api/androidx.renderscript.Allocation-method-createFromBitmap\" rel=\"androidx.renderscript.Allocation-method-createFromBitmap\" class=\"docClass\">createFromBitmap</a> in API version 18 and higher.</p>\n\n<p>Defaults to: <code>&quot;128&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-copy1DRangeFrom' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copy1DRangeFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copy1DRangeFrom' class='name expandable'>copy1DRangeFrom</a>( <span class='pre'>off, count, data, dataOff</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy part of an Allocation into this Allocation. ...</div><div class='long'><p>Copy part of an Allocation into this Allocation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>The offset of the first element to be copied.</p>\n</div></li><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>The number of elements to be copied.</p>\n</div></li><li><span class='pre'>data</span> : Object {Allocation}<div class='sub-desc'><p>the source data allocation.</p>\n</div></li><li><span class='pre'>dataOff</span> : Number<div class='sub-desc'><p>off The offset of the first element in data to\n          be copied.</p>\n</div></li></ul></div></div></div><div id='method-copy1DRangeFromUnchecked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copy1DRangeFromUnchecked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copy1DRangeFromUnchecked' class='name expandable'>copy1DRangeFromUnchecked</a>( <span class='pre'>off, count, d</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy an array into a 1D region of this Allocation. ...</div><div class='long'><p>Copy an array into a 1D region of this Allocation.  This method does not\n guarantee that the Allocation is compatible with the input buffer.</p>\n\n<p> <p> The size of the region is: count * <a href=\"#!/api/androidx.renderscript.Allocation-method-getElement\" rel=\"androidx.renderscript.Allocation-method-getElement\" class=\"docClass\">getElement</a>.<a href=\"#!/api/androidx.renderscript.Element-method-getBytesSize\" rel=\"androidx.renderscript.Element-method-getBytesSize\" class=\"docClass\">androidx.renderscript.Element.getBytesSize</a>.</p>\n\n<p> <p> If the Allocation does not have Vec3 Elements, then the size of the\n array in bytes must be at least the size of the region.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is disabled, then the size of the array in bytes must be at least the size\n of the region. The padding bytes for the cells must be part of the array.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is enabled, then the size of the array in bytes must be at least 3/4 the size\n of the region. The padding bytes for the cells must not be part of the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>The offset of the first element to be copied.</p>\n</div></li><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>The number of elements to be copied.</p>\n</div></li><li><span class='pre'>d</span> : Object {float[]}<div class='sub-desc'><p>the source array</p>\n</div></li></ul></div></div></div><div id='method-copy1DRangeTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copy1DRangeTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copy1DRangeTo' class='name expandable'>copy1DRangeTo</a>( <span class='pre'>off, count, d</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy a 1D region of this Allocation into an array. ...</div><div class='long'><p>Copy a 1D region of this Allocation into an array. This variant is type checked\n and will generate exceptions if the Allocation's <a href=\"#!/api/androidx.renderscript.Element\" rel=\"androidx.renderscript.Element\" class=\"docClass\">androidx.renderscript.Element</a> is neither a 32 bit float nor a vector of\n 32 bit floats <a href=\"#!/api/androidx.renderscript.Element.DataType\" rel=\"androidx.renderscript.Element.DataType\" class=\"docClass\">androidx.renderscript.Element.DataType</a>.</p>\n\n<p> <p> The size of the region is: count * <a href=\"#!/api/androidx.renderscript.Allocation-method-getElement\" rel=\"androidx.renderscript.Allocation-method-getElement\" class=\"docClass\">getElement</a>.<a href=\"#!/api/androidx.renderscript.Element-method-getBytesSize\" rel=\"androidx.renderscript.Element-method-getBytesSize\" class=\"docClass\">androidx.renderscript.Element.getBytesSize</a>.</p>\n\n<p> <p> If the Allocation does not have Vec3 Elements, then the size of the\n array in bytes must be at least the size of the region.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is disabled, then the size of the array in bytes must be at least the size\n of the region. The padding bytes for the cells must be part of the array.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is enabled, then the size of the array in bytes must be at least 3/4 the size\n of the region. The padding bytes for the cells must not be part of the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>The offset of the first element to be copied.</p>\n</div></li><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>The number of elements to be copied.</p>\n</div></li><li><span class='pre'>d</span> : Object {float[]}<div class='sub-desc'><p>the source array.</p>\n</div></li></ul></div></div></div><div id='method-copy1DRangeToUnchecked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copy1DRangeToUnchecked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copy1DRangeToUnchecked' class='name expandable'>copy1DRangeToUnchecked</a>( <span class='pre'>off, count, d</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy a 1D region of this Allocation into an array. ...</div><div class='long'><p>Copy a 1D region of this Allocation into an array.  This method does not\n guarantee that the Allocation is compatible with the input buffer.</p>\n\n<p> <p> The size of the region is: count * <a href=\"#!/api/androidx.renderscript.Allocation-method-getElement\" rel=\"androidx.renderscript.Allocation-method-getElement\" class=\"docClass\">getElement</a>.<a href=\"#!/api/androidx.renderscript.Element-method-getBytesSize\" rel=\"androidx.renderscript.Element-method-getBytesSize\" class=\"docClass\">androidx.renderscript.Element.getBytesSize</a>.</p>\n\n<p> <p> If the Allocation does not have Vec3 Elements, then the size of the\n array in bytes must be at least the size of the region.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is disabled, then the size of the array in bytes must be at least the size\n of the region. The padding bytes for the cells must be part of the array.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is enabled, then the size of the array in bytes must be at least 3/4 the size\n of the region. The padding bytes for the cells must not be part of the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>off</span> : Number<div class='sub-desc'><p>The offset of the first element to be copied.</p>\n</div></li><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>The number of elements to be copied.</p>\n</div></li><li><span class='pre'>d</span> : Object {float[]}<div class='sub-desc'><p>the source array</p>\n</div></li></ul></div></div></div><div id='method-copy2DRangeFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copy2DRangeFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copy2DRangeFrom' class='name expandable'>copy2DRangeFrom</a>( <span class='pre'>xoff, yoff, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy a android.graphics.Bitmap into an Allocation. ...</div><div class='long'><p>Copy a android.graphics.Bitmap into an Allocation.  The height\n and width of the update will use the height and width of the android.graphics.Bitmap.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xoff</span> : Number<div class='sub-desc'><p>X offset of the region to update in this Allocation</p>\n</div></li><li><span class='pre'>yoff</span> : Number<div class='sub-desc'><p>Y offset of the region to update in this Allocation</p>\n</div></li><li><span class='pre'>data</span> : Object {Bitmap}<div class='sub-desc'><p>the Bitmap to be copied</p>\n</div></li></ul></div></div></div><div id='method-copy2DRangeTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copy2DRangeTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copy2DRangeTo' class='name expandable'>copy2DRangeTo</a>( <span class='pre'>xoff, yoff, w, h, data</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy from a rectangular region in this Allocation into an array. ...</div><div class='long'><p>Copy from a rectangular region in this Allocation into an array. This\n variant is type checked and will generate exceptions if the Allocation's\n <a href=\"#!/api/androidx.renderscript.Element\" rel=\"androidx.renderscript.Element\" class=\"docClass\">androidx.renderscript.Element</a> is neither a 32 bit float nor a vector\n of 32 bit floats <a href=\"#!/api/androidx.renderscript.Element.DataType\" rel=\"androidx.renderscript.Element.DataType\" class=\"docClass\">androidx.renderscript.Element.DataType</a>.</p>\n\n<p> <p> The size of the region is: w * h * <a href=\"#!/api/androidx.renderscript.Allocation-method-getElement\" rel=\"androidx.renderscript.Allocation-method-getElement\" class=\"docClass\">getElement</a>.<a href=\"#!/api/androidx.renderscript.Element-method-getBytesSize\" rel=\"androidx.renderscript.Element-method-getBytesSize\" class=\"docClass\">androidx.renderscript.Element.getBytesSize</a>.</p>\n\n<p> <p> If the Allocation does not have Vec3 Elements, then the size of the\n array in bytes must be at least the size of the region.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is disabled, then the size of the array in bytes must be at least the size\n of the region. The padding bytes for the cells must be part of the array.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is enabled, then the size of the array in bytes must be at least 3/4 the size\n of the region. The padding bytes for the cells must not be part of the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xoff</span> : Number<div class='sub-desc'><p>X offset of the region to copy in this Allocation</p>\n</div></li><li><span class='pre'>yoff</span> : Number<div class='sub-desc'><p>Y offset of the region to copy in this Allocation</p>\n</div></li><li><span class='pre'>w</span> : Number<div class='sub-desc'><p>Width of the region to copy</p>\n</div></li><li><span class='pre'>h</span> : Number<div class='sub-desc'><p>Height of the region to copy</p>\n</div></li><li><span class='pre'>data</span> : Object {float[]}<div class='sub-desc'><p>Dest Array to be copied into</p>\n</div></li></ul></div></div></div><div id='method-copy3DRangeFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copy3DRangeFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copy3DRangeFrom' class='name expandable'>copy3DRangeFrom</a>( <span class='pre'>xoff, yoff, zoff, w, h, d, data, dataXoff, dataYoff, dataZoff</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy a rectangular region into the allocation from another\n allocation. ...</div><div class='long'><p>Copy a rectangular region into the allocation from another\n allocation.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xoff</span> : Number<div class='sub-desc'><p>X offset of the region to update in this Allocation</p>\n</div></li><li><span class='pre'>yoff</span> : Number<div class='sub-desc'><p>Y offset of the region to update in this Allocation</p>\n</div></li><li><span class='pre'>zoff</span> : Number<div class='sub-desc'><p>Z offset of the region to update in this Allocation</p>\n</div></li><li><span class='pre'>w</span> : Number<div class='sub-desc'><p>Width of the region to update.</p>\n</div></li><li><span class='pre'>h</span> : Number<div class='sub-desc'><p>Height of the region to update.</p>\n</div></li><li><span class='pre'>d</span> : Number<div class='sub-desc'><p>Depth of the region to update.</p>\n</div></li><li><span class='pre'>data</span> : Object {Allocation}<div class='sub-desc'><p>source allocation.</p>\n</div></li><li><span class='pre'>dataXoff</span> : Number<div class='sub-desc'><p>X offset of the region in the source Allocation</p>\n</div></li><li><span class='pre'>dataYoff</span> : Number<div class='sub-desc'><p>Y offset of the region in the source Allocation</p>\n</div></li><li><span class='pre'>dataZoff</span> : Number<div class='sub-desc'><p>Z offset of the region in the source Allocation</p>\n</div></li></ul></div></div></div><div id='method-copyFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copyFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copyFrom' class='name expandable'>copyFrom</a>( <span class='pre'>a</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy an Allocation from an Allocation. ...</div><div class='long'><p>Copy an Allocation from an Allocation.  The types of both allocations\n must be identical.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>a</span> : Object {Allocation}<div class='sub-desc'><p>the source allocation</p>\n</div></li></ul></div></div></div><div id='method-copyFromUnchecked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copyFromUnchecked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copyFromUnchecked' class='name expandable'>copyFromUnchecked</a>( <span class='pre'>d</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy into this Allocation from an array. ...</div><div class='long'><p>Copy into this Allocation from an array. This method does not guarantee\n that the Allocation is compatible with the input buffer; it copies memory\n without reinterpretation.</p>\n\n<p> <p> If the Allocation does not have Vec3 Elements, then the size of the\n array in bytes must be at least the size of the Allocation <a href=\"#!/api/androidx.renderscript.Allocation-method-getBytesSize\" rel=\"androidx.renderscript.Allocation-method-getBytesSize\" class=\"docClass\">getBytesSize()</a>.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is disabled, then the size of the array in bytes must be at least the size\n of the Allocation <a href=\"#!/api/androidx.renderscript.Allocation-method-getBytesSize\" rel=\"androidx.renderscript.Allocation-method-getBytesSize\" class=\"docClass\">getBytesSize()</a>. The padding bytes for\n the cells must be part of the array.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is enabled, then the size of the array in bytes must be at least 3/4 the size\n of the Allocation <a href=\"#!/api/androidx.renderscript.Allocation-method-getBytesSize\" rel=\"androidx.renderscript.Allocation-method-getBytesSize\" class=\"docClass\">getBytesSize()</a>. The padding bytes for\n the cells must not be part of the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>d</span> : Object {float[]}<div class='sub-desc'><p>the source array</p>\n</div></li></ul></div></div></div><div id='method-copyTo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-copyTo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-copyTo' class='name expandable'>copyTo</a>( <span class='pre'>d</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy from the Allocation into a float array. ...</div><div class='long'><p>Copy from the Allocation into a float array. This variant is type checked\n and will generate exceptions if the Allocation's <a href=\"#!/api/androidx.renderscript.Element\" rel=\"androidx.renderscript.Element\" class=\"docClass\">androidx.renderscript.Element</a> is neither a 32 bit float nor a vector of\n 32 bit floats <a href=\"#!/api/androidx.renderscript.Element.DataType\" rel=\"androidx.renderscript.Element.DataType\" class=\"docClass\">androidx.renderscript.Element.DataType</a>.</p>\n\n<p> <p> If the Allocation does not have Vec3 Elements, then the size of the\n array in bytes must be at least the size of the Allocation <a href=\"#!/api/androidx.renderscript.Allocation-method-getBytesSize\" rel=\"androidx.renderscript.Allocation-method-getBytesSize\" class=\"docClass\">getBytesSize()</a>.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is disabled, then the size of the array in bytes must be at least the size\n of the Allocation <a href=\"#!/api/androidx.renderscript.Allocation-method-getBytesSize\" rel=\"androidx.renderscript.Allocation-method-getBytesSize\" class=\"docClass\">getBytesSize()</a>. The padding bytes for\n the cells will be part of the array.</p>\n\n<p> <p> If the Allocation has Vec3 Elements and <a href=\"#!/api/androidx.renderscript.Allocation-method-setAutoPadding\" rel=\"androidx.renderscript.Allocation-method-setAutoPadding\" class=\"docClass\">AutoPadding</a>\n is enabled, then the size of the array in bytes must be at least 3/4 the size\n of the Allocation <a href=\"#!/api/androidx.renderscript.Allocation-method-getBytesSize\" rel=\"androidx.renderscript.Allocation-method-getBytesSize\" class=\"docClass\">getBytesSize()</a>. The padding bytes for\n the cells must not be part of the array.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>d</span> : Object {float[]}<div class='sub-desc'><p>The array to be set from the Allocation.</p>\n</div></li></ul></div></div></div><div id='method-createCubemapFromBitmap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-createCubemapFromBitmap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-createCubemapFromBitmap' class='name expandable'>createCubemapFromBitmap</a>( <span class='pre'>rs, b</span> ) : Object {androidx.renderscript.Allocation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a non-mipmapped cubemap Allocation for use as a graphics texture\n from a android.graphics.Bitmap containing t...</div><div class='long'><p>Creates a non-mipmapped cubemap Allocation for use as a graphics texture\n from a android.graphics.Bitmap containing the horizontal list of\n cube faces. Each face must be a square, have the same size as all other\n faces, and have a width that is a power of 2.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>Context to which the allocation will belong.</p>\n</div></li><li><span class='pre'>b</span> : Object {Bitmap}<div class='sub-desc'><p>bitmap with cubemap faces layed out in the following\n          format: right, left, top, bottom, front, back</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Allocation}</span><div class='sub-desc'><p>allocation containing cubemap data</p>\n</div></li></ul></div></div></div><div id='method-createCubemapFromCubeFaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-createCubemapFromCubeFaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-createCubemapFromCubeFaces' class='name expandable'>createCubemapFromCubeFaces</a>( <span class='pre'>rs, xpos, xneg, ypos, yneg, zpos, zneg</span> ) : Object {androidx.renderscript.Allocation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a non-mipmapped cubemap Allocation for use as a sampler input\n from 6 android.graphics.Bitmap objects contain...</div><div class='long'><p>Creates a non-mipmapped cubemap Allocation for use as a sampler input\n from 6 android.graphics.Bitmap objects containing the cube\n faces. Each face must be a square, have the same size as all other faces,\n and have a width that is a power of 2.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>Context to which the allocation will belong.</p>\n</div></li><li><span class='pre'>xpos</span> : Object {Bitmap}<div class='sub-desc'><p>cubemap face in the positive x direction</p>\n</div></li><li><span class='pre'>xneg</span> : Object {Bitmap}<div class='sub-desc'><p>cubemap face in the negative x direction</p>\n</div></li><li><span class='pre'>ypos</span> : Object {Bitmap}<div class='sub-desc'><p>cubemap face in the positive y direction</p>\n</div></li><li><span class='pre'>yneg</span> : Object {Bitmap}<div class='sub-desc'><p>cubemap face in the negative y direction</p>\n</div></li><li><span class='pre'>zpos</span> : Object {Bitmap}<div class='sub-desc'><p>cubemap face in the positive z direction</p>\n</div></li><li><span class='pre'>zneg</span> : Object {Bitmap}<div class='sub-desc'><p>cubemap face in the negative z direction</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Allocation}</span><div class='sub-desc'><p>allocation containing cubemap data</p>\n</div></li></ul></div></div></div><div id='method-createFromBitmap' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-createFromBitmap' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-createFromBitmap' class='name expandable'>createFromBitmap</a>( <span class='pre'>rs, b</span> ) : Object {androidx.renderscript.Allocation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an Allocation from a android.graphics.Bitmap. ...</div><div class='long'><p>Creates an Allocation from a android.graphics.Bitmap.</p>\n\n<p> <p>This Allocation will be created with <a href=\"#!/api/androidx.renderscript.Allocation-property-USAGE_SHARED\" rel=\"androidx.renderscript.Allocation-property-USAGE_SHARED\" class=\"docClass\">USAGE_SHARED</a>, and\n <a href=\"#!/api/androidx.renderscript.Allocation-property-USAGE_SCRIPT\" rel=\"androidx.renderscript.Allocation-property-USAGE_SCRIPT\" class=\"docClass\">USAGE_SCRIPT</a>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>Context to which the allocation will belong.</p>\n</div></li><li><span class='pre'>b</span> : Object {Bitmap}<div class='sub-desc'><p>bitmap source for the allocation data</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Allocation}</span><div class='sub-desc'><p>Allocation containing bitmap data</p>\n</div></li></ul></div></div></div><div id='method-createFromBitmapResource' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-createFromBitmapResource' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-createFromBitmapResource' class='name expandable'>createFromBitmapResource</a>( <span class='pre'>rs, res, id</span> ) : Object {androidx.renderscript.Allocation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a non-mipmapped Allocation to use as a graphics texture from the\n android.graphics.Bitmap referenced by resou...</div><div class='long'><p>Creates a non-mipmapped Allocation to use as a graphics texture from the\n android.graphics.Bitmap referenced by resource ID.</p>\n\n<p> <p>This allocation will be created with <a href=\"#!/api/androidx.renderscript.Allocation-property-USAGE_SCRIPT\" rel=\"androidx.renderscript.Allocation-property-USAGE_SCRIPT\" class=\"docClass\">USAGE_SCRIPT</a> and\n <a href=\"#!/api/androidx.renderscript.Allocation-property-USAGE_GRAPHICS_TEXTURE\" rel=\"androidx.renderscript.Allocation-property-USAGE_GRAPHICS_TEXTURE\" class=\"docClass\">USAGE_GRAPHICS_TEXTURE</a>.</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>Context to which the allocation will belong.</p>\n</div></li><li><span class='pre'>res</span> : Object {Resources}<div class='sub-desc'><p>application resources</p>\n</div></li><li><span class='pre'>id</span> : Number<div class='sub-desc'><p>resource id to load the data from</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Allocation}</span><div class='sub-desc'><p>Allocation containing resource data</p>\n</div></li></ul></div></div></div><div id='method-createFromString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-createFromString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-createFromString' class='name expandable'>createFromString</a>( <span class='pre'>rs, str, usage</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an Allocation containing string data encoded in UTF-8 format. ...</div><div class='long'><p>Creates an Allocation containing string data encoded in UTF-8 format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>Context to which the allocation will belong.</p>\n</div></li><li><span class='pre'>str</span> : String<div class='sub-desc'><p>string to create the allocation from</p>\n</div></li><li><span class='pre'>usage</span> : Number<div class='sub-desc'><p>bit field specifying how the allocaiton is\n              utilized</p>\n</div></li></ul></div></div></div><div id='method-createSized' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-createSized' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-createSized' class='name expandable'>createSized</a>( <span class='pre'>rs, e, count</span> ) : Object {androidx.renderscript.Allocation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an Allocation with a specified number of given elements ...</div><div class='long'><p>Creates an Allocation with a specified number of given elements</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>Context to which the Allocation will belong.</p>\n</div></li><li><span class='pre'>e</span> : Object {Element}<div class='sub-desc'><p>Element to use in the Allocation</p>\n</div></li><li><span class='pre'>count</span> : Number<div class='sub-desc'><p>the number of Elements in the Allocation</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Allocation}</span><div class='sub-desc'><p>allocation</p>\n</div></li></ul></div></div></div><div id='method-createTyped' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-createTyped' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-createTyped' class='name expandable'>createTyped</a>( <span class='pre'>rs, type</span> ) : Object {androidx.renderscript.Allocation}<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an Allocation for use by scripts with a given androidx.renderscript.Type and no mipmaps ...</div><div class='long'><p>Creates an Allocation for use by scripts with a given <a href=\"#!/api/androidx.renderscript.Type\" rel=\"androidx.renderscript.Type\" class=\"docClass\">androidx.renderscript.Type</a> and no mipmaps</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>Context to which the Allocation will belong.</p>\n</div></li><li><span class='pre'>type</span> : Object {Type}<div class='sub-desc'><p>RenderScript Type describing data layout</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Allocation}</span><div class='sub-desc'><p>allocation</p>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Frees any native resources associated with this object. ...</div><div class='long'><p>Frees any native resources associated with this object.  The\n primary use is to force immediate cleanup of resources when it is\n believed the GC will not respond quickly enough.\n For USAGE_IO_OUTPUT, destroy() implies setSurface(null).</p>\n<p>Overrides: <a href=\"#!/api/androidx.renderscript.BaseObj-method-destroy\" rel=\"androidx.renderscript.BaseObj-method-destroy\" class=\"docClass\">androidx.renderscript.BaseObj.destroy</a></p></div></div></div><div id='method-equals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.BaseObj' rel='androidx.renderscript.BaseObj' class='defined-in docClass'>androidx.renderscript.BaseObj</a><br/><a href='source/BaseObj.html#androidx-renderscript-BaseObj-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.BaseObj-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compare the current BaseObj with another BaseObj for equality. ...</div><div class='long'><p>Compare the current BaseObj with another BaseObj for equality.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>The object to check equality with.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean</p>\n</div></li></ul></div></div></div><div id='method-generateMipmaps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-generateMipmaps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-generateMipmaps' class='name expandable'>generateMipmaps</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Generate a mipmap chain. ...</div><div class='long'><p>Generate a mipmap chain. This is only valid if the Type of the Allocation\n includes mipmaps.</p>\n\n<p> <p>This function will generate a complete set of mipmaps from the top\n level LOD and place them into the script memory space.</p></p>\n\n<p> <p>If the Allocation is also using other memory spaces, a call to <a href=\"#!/api/androidx.renderscript.Allocation-method-syncAll\" rel=\"androidx.renderscript.Allocation-method-syncAll\" class=\"docClass\">syncAll(Allocation.USAGE_SCRIPT)</a> is required.</p></p>\n</div></div></div><div id='method-getByteBuffer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-getByteBuffer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-getByteBuffer' class='name expandable'>getByteBuffer</a>( <span class='pre'></span> ) : Object {java.nio.ByteBuffer}<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets or creates a ByteBuffer that contains the raw data of the current Allocation. ...</div><div class='long'><p>Gets or creates a ByteBuffer that contains the raw data of the current Allocation.\n <p> If the Allocation is created with USAGE_IO_INPUT, the returned ByteBuffer\n would contain the up-to-date data as READ ONLY.\n For a 2D or 3D Allocation, the raw data maybe padded so that each row of\n the Allocation has certain alignment. The size of each row including padding,\n called stride, can be queried using the <a href=\"#!/api/androidx.renderscript.Allocation-method-getStride\" rel=\"androidx.renderscript.Allocation-method-getStride\" class=\"docClass\">getStride</a>() method.</p>\n\n<p> Note: Operating on the ByteBuffer of a destroyed Allocation will triger errors.\n       The ByteBuffer will be Read-Only for devices before Lollopop (API 21).</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.nio.ByteBuffer}</span><div class='sub-desc'><p>ByteBuffer The ByteBuffer associated with raw data pointer of the Allocation.</p>\n</div></li></ul></div></div></div><div id='method-getBytesSize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-getBytesSize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-getBytesSize' class='name expandable'>getBytesSize</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the size of the Allocation in bytes. ...</div><div class='long'><p>Get the size of the Allocation in bytes.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>size of the Allocation in bytes.</p>\n</div></li></ul></div></div></div><div id='method-getElement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-getElement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-getElement' class='name expandable'>getElement</a>( <span class='pre'></span> ) : Object {androidx.renderscript.Element}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the androidx.renderscript.Element of the androidx.renderscript.Type of the Allocation. ...</div><div class='long'><p>Get the <a href=\"#!/api/androidx.renderscript.Element\" rel=\"androidx.renderscript.Element\" class=\"docClass\">androidx.renderscript.Element</a> of the <a href=\"#!/api/androidx.renderscript.Type\" rel=\"androidx.renderscript.Type\" class=\"docClass\">androidx.renderscript.Type</a> of the Allocation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Element}</span><div class='sub-desc'><p>Element</p>\n</div></li></ul></div></div></div><div id='method-getIncAllocID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-getIncAllocID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-getIncAllocID' class='name expandable'>getIncAllocID</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Getter &amp; Setter for the dummy allocation for Inc Support Lib. ...</div><div class='long'><p>Getter &amp; Setter for the dummy allocation for Inc Support Lib.</p>\n</div></div></div><div id='method-getStride' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-getStride' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-getStride' class='name expandable'>getStride</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the stride of the Allocation. ...</div><div class='long'><p>Gets the stride of the Allocation.\n For a 2D or 3D Allocation, the raw data maybe padded so that each row of\n the Allocation has certain alignment. The size of each row including such\n padding is called stride.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>the stride. For 1D Allocation, the stride will be the number of\n         bytes of this Allocation. For 2D and 3D Allocations, the stride\n         will be the stride in X dimension measuring in bytes.</p>\n</div></li></ul></div></div></div><div id='method-getType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-getType' class='name expandable'>getType</a>( <span class='pre'></span> ) : Object {androidx.renderscript.Type}<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the androidx.renderscript.Type of the Allocation. ...</div><div class='long'><p>Get the <a href=\"#!/api/androidx.renderscript.Type\" rel=\"androidx.renderscript.Type\" class=\"docClass\">androidx.renderscript.Type</a> of the Allocation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.Type}</span><div class='sub-desc'><p>Type</p>\n</div></li></ul></div></div></div><div id='method-getUsage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-getUsage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-getUsage' class='name expandable'>getUsage</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Get the usage flags of the Allocation. ...</div><div class='long'><p>Get the usage flags of the Allocation.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>usage this Allocation's set of the USAGE_* flags OR'd together</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.BaseObj' rel='androidx.renderscript.BaseObj' class='defined-in docClass'>androidx.renderscript.BaseObj</a><br/><a href='source/BaseObj.html#androidx-renderscript-BaseObj-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.BaseObj-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the hash code value for a BaseObj. ...</div><div class='long'><p>Calculates the hash code value for a BaseObj.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int</p>\n</div></li></ul></div></div></div><div id='method-ioReceive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-ioReceive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-ioReceive' class='name expandable'>ioReceive</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Receive the latest input into the Allocation. ...</div><div class='long'><p>Receive the latest input into the Allocation. This operation\n is only valid if <a href=\"#!/api/androidx.renderscript.Allocation-property-USAGE_IO_INPUT\" rel=\"androidx.renderscript.Allocation-property-USAGE_IO_INPUT\" class=\"docClass\">USAGE_IO_INPUT</a> is set on the Allocation.</p>\n</div></div></div><div id='method-ioSend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-ioSend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-ioSend' class='name expandable'>ioSend</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Send a buffer to the output stream. ...</div><div class='long'><p>Send a buffer to the output stream.  The contents of the Allocation will\n be undefined after this operation. This operation is only valid if <a href=\"#!/api/androidx.renderscript.Allocation-property-USAGE_IO_OUTPUT\" rel=\"androidx.renderscript.Allocation-property-USAGE_IO_OUTPUT\" class=\"docClass\">USAGE_IO_OUTPUT</a> is set on the Allocation.</p>\n</div></div></div><div id='method-ioSendOutput' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-ioSendOutput' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-ioSendOutput' class='name expandable'>ioSendOutput</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Delete once code is updated. ...</div><div class='long'><p>Delete once code is updated.</p>\n</div></div></div><div id='method-setAutoPadding' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-setAutoPadding' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-setAutoPadding' class='name expandable'>setAutoPadding</a>( <span class='pre'>useAutoPadding</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Specifies the mapping between the Allocation's cells and an array's elements\n when data is copied from the Allocation...</div><div class='long'><p>Specifies the mapping between the Allocation's cells and an array's elements\n when data is copied from the Allocation to the array, or vice-versa.</p>\n\n<p> Only applies to an Allocation whose Element is a vector of length 3 (such as\n <a href=\"#!/api/androidx.renderscript.Element-method-U8_3\" rel=\"androidx.renderscript.Element-method-U8_3\" class=\"docClass\">androidx.renderscript.Element.U8_3</a> or <a href=\"#!/api/androidx.renderscript.Element-method-RGB_888\" rel=\"androidx.renderscript.Element-method-RGB_888\" class=\"docClass\">androidx.renderscript.Element.RGB_888</a>). Enabling this feature may make\n copying data from the Allocation to an array or vice-versa less efficient.</p>\n\n<p> <p> Vec3 Element cells are stored in an Allocation as Vec4 Element cells with\n the same <a href=\"#!/api/androidx.renderscript.Element.DataType\" rel=\"androidx.renderscript.Element.DataType\" class=\"docClass\">androidx.renderscript.Element.DataType</a>, with the fourth vector\n component treated as padding. When this feature is enabled, only the data components,\n i.e. the first 3 vector components of each cell, will be mapped between the array\n and the Allocation. When disabled, explicit mapping of the padding components\n is required, as described in the following example.</p>\n\n<p> <p> For example, when copying an integer array to an Allocation of two <a href=\"#!/api/androidx.renderscript.Element-method-I32_3\" rel=\"androidx.renderscript.Element-method-I32_3\" class=\"docClass\">androidx.renderscript.Element.I32_3</a> cells using copyFrom(int[]):\n <p> When disabled:\n     The array must have at least 8 integers, with the first 4 integers copied\n     to the first cell of the Allocation, and the next 4 integers copied to\n     the second cell. The 4th and 8th integers are mapped as the padding components.</p>\n\n<p> <p> When enabled:\n     The array just needs to have at least 6 integers, with the first 3 integers\n     copied to the the first cell as data components, and the next 3 copied to\n     the second cell. There is no mapping for the padding components.</p>\n\n<p> <p> Similarly, when copying a byte array to an Allocation of two <a href=\"#!/api/androidx.renderscript.Element-method-I32_3\" rel=\"androidx.renderscript.Element-method-I32_3\" class=\"docClass\">androidx.renderscript.Element.I32_3</a> cells, using copyFromUnchecked(int[]):\n <p> When disabled:\n     The array must have at least 32 bytes, with the first 16 bytes copied\n     to the first cell of the Allocation, and the next 16 bytes copied to\n     the second cell. The 13th-16th and 29th-32nd bytes are mapped as padding\n     components.</p>\n\n<p> <p> When enabled:\n     The array just needs to have at least 24 bytes, with the first 12 bytes copied\n     to the first cell of the Allocation, and the next 12 bytes copied to\n     the second cell. There is no mapping for the padding components.</p>\n\n<p> <p> Similar to copying data to an Allocation from an array, when copying data from an\n Allocation to an array, the padding components for Vec3 Element cells will not be\n copied/mapped to the array if AutoPadding is enabled.</p>\n\n<p> <p> Default: Disabled.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>useAutoPadding</span> : Boolean<div class='sub-desc'><p>True: enable AutoPadding; False: disable AutoPadding</p>\n</div></li></ul></div></div></div><div id='method-setFromFieldPacker' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-setFromFieldPacker' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-setFromFieldPacker' class='name expandable'>setFromFieldPacker</a>( <span class='pre'>xoff, component_number, fp</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This is only intended to be used by auto-generated code reflected from\n the RenderScript script files. ...</div><div class='long'><p>This is only intended to be used by auto-generated code reflected from\n the RenderScript script files.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xoff</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>component_number</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>fp</span> : Object {FieldPacker}<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setIncAllocID' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-setIncAllocID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-setIncAllocID' class='name expandable'>setIncAllocID</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setSurface' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-setSurface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-setSurface' class='name expandable'>setSurface</a>( <span class='pre'>sur</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Associate a android.view.Surface with this Allocation. ...</div><div class='long'><p>Associate a android.view.Surface with this Allocation. This\n operation is only valid for Allocations with <a href=\"#!/api/androidx.renderscript.Allocation-property-USAGE_IO_OUTPUT\" rel=\"androidx.renderscript.Allocation-property-USAGE_IO_OUTPUT\" class=\"docClass\">USAGE_IO_OUTPUT</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sur</span> : Object {Surface}<div class='sub-desc'><p>Surface to associate with allocation</p>\n</div></li></ul></div></div></div><div id='method-syncAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.Allocation'>androidx.renderscript.Allocation</span><br/><a href='source/Allocation.html#androidx-renderscript-Allocation-method-syncAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Allocation-method-syncAll' class='name expandable'>syncAll</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Propagate changes from one usage of the Allocation to the\n other usages of the Allocation. ...</div><div class='long'><p>Propagate changes from one usage of the Allocation to the\n other usages of the Allocation.</p>\n</div></div></div></div></div></div></div>","meta":{}});